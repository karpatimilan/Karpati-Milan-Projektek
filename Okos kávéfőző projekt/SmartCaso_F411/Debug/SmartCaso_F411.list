
SmartCaso_F411.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000198  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0002d020  080001a0  080001a0  000101a0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00003364  0802d1c0  0802d1c0  0003d1c0  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 FontFlashSection 000036ba  08030524  08030524  00040524  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 FontSearchFlashSection 00000030  08033be0  08033be0  00043be0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 ExtFlashSection 0001b698  08033c10  08033c10  00043c10  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  6 TextFlashSection 0000007c  0804f2a8  0804f2a8  0005f2a8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .ARM.extab    00000000  0804f324  0804f324  00060358  2**0
                  CONTENTS
  8 .ARM          00000008  0804f324  0804f324  0005f324  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  9 .preinit_array 00000000  0804f32c  0804f32c  00060358  2**0
                  CONTENTS, ALLOC, LOAD, DATA
 10 .init_array   00000018  0804f32c  0804f32c  0005f32c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 11 .fini_array   0000000c  0804f344  0804f344  0005f344  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 12 .data         00000358  20000000  0804f350  00060000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 13 .bss          00007514  20000358  0804f6a8  00060358  2**2
                  ALLOC
 14 ._user_heap_stack 00000604  2000786c  0804f6a8  0006786c  2**0
                  ALLOC
 15 .ARM.attributes 00000030  00000000  00000000  00060358  2**0
                  CONTENTS, READONLY
 16 .comment      000000c2  00000000  00000000  00060388  2**0
                  CONTENTS, READONLY
 17 .debug_info   000a057c  00000000  00000000  0006044a  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_abbrev 000125c3  00000000  00000000  001009c6  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_aranges 000035b8  00000000  00000000  00112f90  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_rnglists 000026ea  00000000  00000000  00116548  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_macro  00024562  00000000  00000000  00118c32  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_line   0003f3ba  00000000  00000000  0013d194  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 23 .debug_str    000b3e1d  00000000  00000000  0017c54e  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 24 .debug_frame  0000eddc  00000000  00000000  0023036c  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 25 .debug_line_str 00000076  00000000  00000000  0023f148  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001a0 <__do_global_dtors_aux>:
 80001a0:	b510      	push	{r4, lr}
 80001a2:	4c05      	ldr	r4, [pc, #20]	; (80001b8 <__do_global_dtors_aux+0x18>)
 80001a4:	7823      	ldrb	r3, [r4, #0]
 80001a6:	b933      	cbnz	r3, 80001b6 <__do_global_dtors_aux+0x16>
 80001a8:	4b04      	ldr	r3, [pc, #16]	; (80001bc <__do_global_dtors_aux+0x1c>)
 80001aa:	b113      	cbz	r3, 80001b2 <__do_global_dtors_aux+0x12>
 80001ac:	4804      	ldr	r0, [pc, #16]	; (80001c0 <__do_global_dtors_aux+0x20>)
 80001ae:	f3af 8000 	nop.w
 80001b2:	2301      	movs	r3, #1
 80001b4:	7023      	strb	r3, [r4, #0]
 80001b6:	bd10      	pop	{r4, pc}
 80001b8:	20000358 	.word	0x20000358
 80001bc:	00000000 	.word	0x00000000
 80001c0:	0802d1a8 	.word	0x0802d1a8

080001c4 <frame_dummy>:
 80001c4:	b508      	push	{r3, lr}
 80001c6:	4b03      	ldr	r3, [pc, #12]	; (80001d4 <frame_dummy+0x10>)
 80001c8:	b11b      	cbz	r3, 80001d2 <frame_dummy+0xe>
 80001ca:	4903      	ldr	r1, [pc, #12]	; (80001d8 <frame_dummy+0x14>)
 80001cc:	4803      	ldr	r0, [pc, #12]	; (80001dc <frame_dummy+0x18>)
 80001ce:	f3af 8000 	nop.w
 80001d2:	bd08      	pop	{r3, pc}
 80001d4:	00000000 	.word	0x00000000
 80001d8:	2000035c 	.word	0x2000035c
 80001dc:	0802d1a8 	.word	0x0802d1a8

080001e0 <memchr>:
 80001e0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 80001e4:	2a10      	cmp	r2, #16
 80001e6:	db2b      	blt.n	8000240 <memchr+0x60>
 80001e8:	f010 0f07 	tst.w	r0, #7
 80001ec:	d008      	beq.n	8000200 <memchr+0x20>
 80001ee:	f810 3b01 	ldrb.w	r3, [r0], #1
 80001f2:	3a01      	subs	r2, #1
 80001f4:	428b      	cmp	r3, r1
 80001f6:	d02d      	beq.n	8000254 <memchr+0x74>
 80001f8:	f010 0f07 	tst.w	r0, #7
 80001fc:	b342      	cbz	r2, 8000250 <memchr+0x70>
 80001fe:	d1f6      	bne.n	80001ee <memchr+0xe>
 8000200:	b4f0      	push	{r4, r5, r6, r7}
 8000202:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000206:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800020a:	f022 0407 	bic.w	r4, r2, #7
 800020e:	f07f 0700 	mvns.w	r7, #0
 8000212:	2300      	movs	r3, #0
 8000214:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000218:	3c08      	subs	r4, #8
 800021a:	ea85 0501 	eor.w	r5, r5, r1
 800021e:	ea86 0601 	eor.w	r6, r6, r1
 8000222:	fa85 f547 	uadd8	r5, r5, r7
 8000226:	faa3 f587 	sel	r5, r3, r7
 800022a:	fa86 f647 	uadd8	r6, r6, r7
 800022e:	faa5 f687 	sel	r6, r5, r7
 8000232:	b98e      	cbnz	r6, 8000258 <memchr+0x78>
 8000234:	d1ee      	bne.n	8000214 <memchr+0x34>
 8000236:	bcf0      	pop	{r4, r5, r6, r7}
 8000238:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800023c:	f002 0207 	and.w	r2, r2, #7
 8000240:	b132      	cbz	r2, 8000250 <memchr+0x70>
 8000242:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000246:	3a01      	subs	r2, #1
 8000248:	ea83 0301 	eor.w	r3, r3, r1
 800024c:	b113      	cbz	r3, 8000254 <memchr+0x74>
 800024e:	d1f8      	bne.n	8000242 <memchr+0x62>
 8000250:	2000      	movs	r0, #0
 8000252:	4770      	bx	lr
 8000254:	3801      	subs	r0, #1
 8000256:	4770      	bx	lr
 8000258:	2d00      	cmp	r5, #0
 800025a:	bf06      	itte	eq
 800025c:	4635      	moveq	r5, r6
 800025e:	3803      	subeq	r0, #3
 8000260:	3807      	subne	r0, #7
 8000262:	f015 0f01 	tst.w	r5, #1
 8000266:	d107      	bne.n	8000278 <memchr+0x98>
 8000268:	3001      	adds	r0, #1
 800026a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800026e:	bf02      	ittt	eq
 8000270:	3001      	addeq	r0, #1
 8000272:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000276:	3001      	addeq	r0, #1
 8000278:	bcf0      	pop	{r4, r5, r6, r7}
 800027a:	3801      	subs	r0, #1
 800027c:	4770      	bx	lr
 800027e:	bf00      	nop

08000280 <strlen>:
 8000280:	4603      	mov	r3, r0
 8000282:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000286:	2a00      	cmp	r2, #0
 8000288:	d1fb      	bne.n	8000282 <strlen+0x2>
 800028a:	1a18      	subs	r0, r3, r0
 800028c:	3801      	subs	r0, #1
 800028e:	4770      	bx	lr

08000290 <__aeabi_drsub>:
 8000290:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
 8000294:	e002      	b.n	800029c <__adddf3>
 8000296:	bf00      	nop

08000298 <__aeabi_dsub>:
 8000298:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

0800029c <__adddf3>:
 800029c:	b530      	push	{r4, r5, lr}
 800029e:	ea4f 0441 	mov.w	r4, r1, lsl #1
 80002a2:	ea4f 0543 	mov.w	r5, r3, lsl #1
 80002a6:	ea94 0f05 	teq	r4, r5
 80002aa:	bf08      	it	eq
 80002ac:	ea90 0f02 	teqeq	r0, r2
 80002b0:	bf1f      	itttt	ne
 80002b2:	ea54 0c00 	orrsne.w	ip, r4, r0
 80002b6:	ea55 0c02 	orrsne.w	ip, r5, r2
 80002ba:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 80002be:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80002c2:	f000 80e2 	beq.w	800048a <__adddf3+0x1ee>
 80002c6:	ea4f 5454 	mov.w	r4, r4, lsr #21
 80002ca:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 80002ce:	bfb8      	it	lt
 80002d0:	426d      	neglt	r5, r5
 80002d2:	dd0c      	ble.n	80002ee <__adddf3+0x52>
 80002d4:	442c      	add	r4, r5
 80002d6:	ea80 0202 	eor.w	r2, r0, r2
 80002da:	ea81 0303 	eor.w	r3, r1, r3
 80002de:	ea82 0000 	eor.w	r0, r2, r0
 80002e2:	ea83 0101 	eor.w	r1, r3, r1
 80002e6:	ea80 0202 	eor.w	r2, r0, r2
 80002ea:	ea81 0303 	eor.w	r3, r1, r3
 80002ee:	2d36      	cmp	r5, #54	; 0x36
 80002f0:	bf88      	it	hi
 80002f2:	bd30      	pophi	{r4, r5, pc}
 80002f4:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 80002f8:	ea4f 3101 	mov.w	r1, r1, lsl #12
 80002fc:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
 8000300:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 8000304:	d002      	beq.n	800030c <__adddf3+0x70>
 8000306:	4240      	negs	r0, r0
 8000308:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 800030c:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
 8000310:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000314:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 8000318:	d002      	beq.n	8000320 <__adddf3+0x84>
 800031a:	4252      	negs	r2, r2
 800031c:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000320:	ea94 0f05 	teq	r4, r5
 8000324:	f000 80a7 	beq.w	8000476 <__adddf3+0x1da>
 8000328:	f1a4 0401 	sub.w	r4, r4, #1
 800032c:	f1d5 0e20 	rsbs	lr, r5, #32
 8000330:	db0d      	blt.n	800034e <__adddf3+0xb2>
 8000332:	fa02 fc0e 	lsl.w	ip, r2, lr
 8000336:	fa22 f205 	lsr.w	r2, r2, r5
 800033a:	1880      	adds	r0, r0, r2
 800033c:	f141 0100 	adc.w	r1, r1, #0
 8000340:	fa03 f20e 	lsl.w	r2, r3, lr
 8000344:	1880      	adds	r0, r0, r2
 8000346:	fa43 f305 	asr.w	r3, r3, r5
 800034a:	4159      	adcs	r1, r3
 800034c:	e00e      	b.n	800036c <__adddf3+0xd0>
 800034e:	f1a5 0520 	sub.w	r5, r5, #32
 8000352:	f10e 0e20 	add.w	lr, lr, #32
 8000356:	2a01      	cmp	r2, #1
 8000358:	fa03 fc0e 	lsl.w	ip, r3, lr
 800035c:	bf28      	it	cs
 800035e:	f04c 0c02 	orrcs.w	ip, ip, #2
 8000362:	fa43 f305 	asr.w	r3, r3, r5
 8000366:	18c0      	adds	r0, r0, r3
 8000368:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 800036c:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000370:	d507      	bpl.n	8000382 <__adddf3+0xe6>
 8000372:	f04f 0e00 	mov.w	lr, #0
 8000376:	f1dc 0c00 	rsbs	ip, ip, #0
 800037a:	eb7e 0000 	sbcs.w	r0, lr, r0
 800037e:	eb6e 0101 	sbc.w	r1, lr, r1
 8000382:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
 8000386:	d31b      	bcc.n	80003c0 <__adddf3+0x124>
 8000388:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
 800038c:	d30c      	bcc.n	80003a8 <__adddf3+0x10c>
 800038e:	0849      	lsrs	r1, r1, #1
 8000390:	ea5f 0030 	movs.w	r0, r0, rrx
 8000394:	ea4f 0c3c 	mov.w	ip, ip, rrx
 8000398:	f104 0401 	add.w	r4, r4, #1
 800039c:	ea4f 5244 	mov.w	r2, r4, lsl #21
 80003a0:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
 80003a4:	f080 809a 	bcs.w	80004dc <__adddf3+0x240>
 80003a8:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 80003ac:	bf08      	it	eq
 80003ae:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80003b2:	f150 0000 	adcs.w	r0, r0, #0
 80003b6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80003ba:	ea41 0105 	orr.w	r1, r1, r5
 80003be:	bd30      	pop	{r4, r5, pc}
 80003c0:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 80003c4:	4140      	adcs	r0, r0
 80003c6:	eb41 0101 	adc.w	r1, r1, r1
 80003ca:	3c01      	subs	r4, #1
 80003cc:	bf28      	it	cs
 80003ce:	f5b1 1f80 	cmpcs.w	r1, #1048576	; 0x100000
 80003d2:	d2e9      	bcs.n	80003a8 <__adddf3+0x10c>
 80003d4:	f091 0f00 	teq	r1, #0
 80003d8:	bf04      	itt	eq
 80003da:	4601      	moveq	r1, r0
 80003dc:	2000      	moveq	r0, #0
 80003de:	fab1 f381 	clz	r3, r1
 80003e2:	bf08      	it	eq
 80003e4:	3320      	addeq	r3, #32
 80003e6:	f1a3 030b 	sub.w	r3, r3, #11
 80003ea:	f1b3 0220 	subs.w	r2, r3, #32
 80003ee:	da0c      	bge.n	800040a <__adddf3+0x16e>
 80003f0:	320c      	adds	r2, #12
 80003f2:	dd08      	ble.n	8000406 <__adddf3+0x16a>
 80003f4:	f102 0c14 	add.w	ip, r2, #20
 80003f8:	f1c2 020c 	rsb	r2, r2, #12
 80003fc:	fa01 f00c 	lsl.w	r0, r1, ip
 8000400:	fa21 f102 	lsr.w	r1, r1, r2
 8000404:	e00c      	b.n	8000420 <__adddf3+0x184>
 8000406:	f102 0214 	add.w	r2, r2, #20
 800040a:	bfd8      	it	le
 800040c:	f1c2 0c20 	rsble	ip, r2, #32
 8000410:	fa01 f102 	lsl.w	r1, r1, r2
 8000414:	fa20 fc0c 	lsr.w	ip, r0, ip
 8000418:	bfdc      	itt	le
 800041a:	ea41 010c 	orrle.w	r1, r1, ip
 800041e:	4090      	lslle	r0, r2
 8000420:	1ae4      	subs	r4, r4, r3
 8000422:	bfa2      	ittt	ge
 8000424:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 8000428:	4329      	orrge	r1, r5
 800042a:	bd30      	popge	{r4, r5, pc}
 800042c:	ea6f 0404 	mvn.w	r4, r4
 8000430:	3c1f      	subs	r4, #31
 8000432:	da1c      	bge.n	800046e <__adddf3+0x1d2>
 8000434:	340c      	adds	r4, #12
 8000436:	dc0e      	bgt.n	8000456 <__adddf3+0x1ba>
 8000438:	f104 0414 	add.w	r4, r4, #20
 800043c:	f1c4 0220 	rsb	r2, r4, #32
 8000440:	fa20 f004 	lsr.w	r0, r0, r4
 8000444:	fa01 f302 	lsl.w	r3, r1, r2
 8000448:	ea40 0003 	orr.w	r0, r0, r3
 800044c:	fa21 f304 	lsr.w	r3, r1, r4
 8000450:	ea45 0103 	orr.w	r1, r5, r3
 8000454:	bd30      	pop	{r4, r5, pc}
 8000456:	f1c4 040c 	rsb	r4, r4, #12
 800045a:	f1c4 0220 	rsb	r2, r4, #32
 800045e:	fa20 f002 	lsr.w	r0, r0, r2
 8000462:	fa01 f304 	lsl.w	r3, r1, r4
 8000466:	ea40 0003 	orr.w	r0, r0, r3
 800046a:	4629      	mov	r1, r5
 800046c:	bd30      	pop	{r4, r5, pc}
 800046e:	fa21 f004 	lsr.w	r0, r1, r4
 8000472:	4629      	mov	r1, r5
 8000474:	bd30      	pop	{r4, r5, pc}
 8000476:	f094 0f00 	teq	r4, #0
 800047a:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
 800047e:	bf06      	itte	eq
 8000480:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
 8000484:	3401      	addeq	r4, #1
 8000486:	3d01      	subne	r5, #1
 8000488:	e74e      	b.n	8000328 <__adddf3+0x8c>
 800048a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 800048e:	bf18      	it	ne
 8000490:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8000494:	d029      	beq.n	80004ea <__adddf3+0x24e>
 8000496:	ea94 0f05 	teq	r4, r5
 800049a:	bf08      	it	eq
 800049c:	ea90 0f02 	teqeq	r0, r2
 80004a0:	d005      	beq.n	80004ae <__adddf3+0x212>
 80004a2:	ea54 0c00 	orrs.w	ip, r4, r0
 80004a6:	bf04      	itt	eq
 80004a8:	4619      	moveq	r1, r3
 80004aa:	4610      	moveq	r0, r2
 80004ac:	bd30      	pop	{r4, r5, pc}
 80004ae:	ea91 0f03 	teq	r1, r3
 80004b2:	bf1e      	ittt	ne
 80004b4:	2100      	movne	r1, #0
 80004b6:	2000      	movne	r0, #0
 80004b8:	bd30      	popne	{r4, r5, pc}
 80004ba:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 80004be:	d105      	bne.n	80004cc <__adddf3+0x230>
 80004c0:	0040      	lsls	r0, r0, #1
 80004c2:	4149      	adcs	r1, r1
 80004c4:	bf28      	it	cs
 80004c6:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
 80004ca:	bd30      	pop	{r4, r5, pc}
 80004cc:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
 80004d0:	bf3c      	itt	cc
 80004d2:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
 80004d6:	bd30      	popcc	{r4, r5, pc}
 80004d8:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80004dc:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
 80004e0:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 80004e4:	f04f 0000 	mov.w	r0, #0
 80004e8:	bd30      	pop	{r4, r5, pc}
 80004ea:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80004ee:	bf1a      	itte	ne
 80004f0:	4619      	movne	r1, r3
 80004f2:	4610      	movne	r0, r2
 80004f4:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 80004f8:	bf1c      	itt	ne
 80004fa:	460b      	movne	r3, r1
 80004fc:	4602      	movne	r2, r0
 80004fe:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8000502:	bf06      	itte	eq
 8000504:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 8000508:	ea91 0f03 	teqeq	r1, r3
 800050c:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
 8000510:	bd30      	pop	{r4, r5, pc}
 8000512:	bf00      	nop

08000514 <__aeabi_ui2d>:
 8000514:	f090 0f00 	teq	r0, #0
 8000518:	bf04      	itt	eq
 800051a:	2100      	moveq	r1, #0
 800051c:	4770      	bxeq	lr
 800051e:	b530      	push	{r4, r5, lr}
 8000520:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000524:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000528:	f04f 0500 	mov.w	r5, #0
 800052c:	f04f 0100 	mov.w	r1, #0
 8000530:	e750      	b.n	80003d4 <__adddf3+0x138>
 8000532:	bf00      	nop

08000534 <__aeabi_i2d>:
 8000534:	f090 0f00 	teq	r0, #0
 8000538:	bf04      	itt	eq
 800053a:	2100      	moveq	r1, #0
 800053c:	4770      	bxeq	lr
 800053e:	b530      	push	{r4, r5, lr}
 8000540:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000544:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000548:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
 800054c:	bf48      	it	mi
 800054e:	4240      	negmi	r0, r0
 8000550:	f04f 0100 	mov.w	r1, #0
 8000554:	e73e      	b.n	80003d4 <__adddf3+0x138>
 8000556:	bf00      	nop

08000558 <__aeabi_f2d>:
 8000558:	0042      	lsls	r2, r0, #1
 800055a:	ea4f 01e2 	mov.w	r1, r2, asr #3
 800055e:	ea4f 0131 	mov.w	r1, r1, rrx
 8000562:	ea4f 7002 	mov.w	r0, r2, lsl #28
 8000566:	bf1f      	itttt	ne
 8000568:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
 800056c:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
 8000570:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
 8000574:	4770      	bxne	lr
 8000576:	f032 427f 	bics.w	r2, r2, #4278190080	; 0xff000000
 800057a:	bf08      	it	eq
 800057c:	4770      	bxeq	lr
 800057e:	f093 4f7f 	teq	r3, #4278190080	; 0xff000000
 8000582:	bf04      	itt	eq
 8000584:	f441 2100 	orreq.w	r1, r1, #524288	; 0x80000
 8000588:	4770      	bxeq	lr
 800058a:	b530      	push	{r4, r5, lr}
 800058c:	f44f 7460 	mov.w	r4, #896	; 0x380
 8000590:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000594:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 8000598:	e71c      	b.n	80003d4 <__adddf3+0x138>
 800059a:	bf00      	nop

0800059c <__aeabi_ul2d>:
 800059c:	ea50 0201 	orrs.w	r2, r0, r1
 80005a0:	bf08      	it	eq
 80005a2:	4770      	bxeq	lr
 80005a4:	b530      	push	{r4, r5, lr}
 80005a6:	f04f 0500 	mov.w	r5, #0
 80005aa:	e00a      	b.n	80005c2 <__aeabi_l2d+0x16>

080005ac <__aeabi_l2d>:
 80005ac:	ea50 0201 	orrs.w	r2, r0, r1
 80005b0:	bf08      	it	eq
 80005b2:	4770      	bxeq	lr
 80005b4:	b530      	push	{r4, r5, lr}
 80005b6:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
 80005ba:	d502      	bpl.n	80005c2 <__aeabi_l2d+0x16>
 80005bc:	4240      	negs	r0, r0
 80005be:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80005c2:	f44f 6480 	mov.w	r4, #1024	; 0x400
 80005c6:	f104 0432 	add.w	r4, r4, #50	; 0x32
 80005ca:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 80005ce:	f43f aed8 	beq.w	8000382 <__adddf3+0xe6>
 80005d2:	f04f 0203 	mov.w	r2, #3
 80005d6:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80005da:	bf18      	it	ne
 80005dc:	3203      	addne	r2, #3
 80005de:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80005e2:	bf18      	it	ne
 80005e4:	3203      	addne	r2, #3
 80005e6:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 80005ea:	f1c2 0320 	rsb	r3, r2, #32
 80005ee:	fa00 fc03 	lsl.w	ip, r0, r3
 80005f2:	fa20 f002 	lsr.w	r0, r0, r2
 80005f6:	fa01 fe03 	lsl.w	lr, r1, r3
 80005fa:	ea40 000e 	orr.w	r0, r0, lr
 80005fe:	fa21 f102 	lsr.w	r1, r1, r2
 8000602:	4414      	add	r4, r2
 8000604:	e6bd      	b.n	8000382 <__adddf3+0xe6>
 8000606:	bf00      	nop

08000608 <__aeabi_dmul>:
 8000608:	b570      	push	{r4, r5, r6, lr}
 800060a:	f04f 0cff 	mov.w	ip, #255	; 0xff
 800060e:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 8000612:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 8000616:	bf1d      	ittte	ne
 8000618:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 800061c:	ea94 0f0c 	teqne	r4, ip
 8000620:	ea95 0f0c 	teqne	r5, ip
 8000624:	f000 f8de 	bleq	80007e4 <__aeabi_dmul+0x1dc>
 8000628:	442c      	add	r4, r5
 800062a:	ea81 0603 	eor.w	r6, r1, r3
 800062e:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 8000632:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 8000636:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 800063a:	bf18      	it	ne
 800063c:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 8000640:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000644:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8000648:	d038      	beq.n	80006bc <__aeabi_dmul+0xb4>
 800064a:	fba0 ce02 	umull	ip, lr, r0, r2
 800064e:	f04f 0500 	mov.w	r5, #0
 8000652:	fbe1 e502 	umlal	lr, r5, r1, r2
 8000656:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
 800065a:	fbe0 e503 	umlal	lr, r5, r0, r3
 800065e:	f04f 0600 	mov.w	r6, #0
 8000662:	fbe1 5603 	umlal	r5, r6, r1, r3
 8000666:	f09c 0f00 	teq	ip, #0
 800066a:	bf18      	it	ne
 800066c:	f04e 0e01 	orrne.w	lr, lr, #1
 8000670:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
 8000674:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
 8000678:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
 800067c:	d204      	bcs.n	8000688 <__aeabi_dmul+0x80>
 800067e:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 8000682:	416d      	adcs	r5, r5
 8000684:	eb46 0606 	adc.w	r6, r6, r6
 8000688:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 800068c:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 8000690:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 8000694:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 8000698:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 800069c:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 80006a0:	bf88      	it	hi
 80006a2:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 80006a6:	d81e      	bhi.n	80006e6 <__aeabi_dmul+0xde>
 80006a8:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
 80006ac:	bf08      	it	eq
 80006ae:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 80006b2:	f150 0000 	adcs.w	r0, r0, #0
 80006b6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80006ba:	bd70      	pop	{r4, r5, r6, pc}
 80006bc:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
 80006c0:	ea46 0101 	orr.w	r1, r6, r1
 80006c4:	ea40 0002 	orr.w	r0, r0, r2
 80006c8:	ea81 0103 	eor.w	r1, r1, r3
 80006cc:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 80006d0:	bfc2      	ittt	gt
 80006d2:	ebd4 050c 	rsbsgt	r5, r4, ip
 80006d6:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80006da:	bd70      	popgt	{r4, r5, r6, pc}
 80006dc:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 80006e0:	f04f 0e00 	mov.w	lr, #0
 80006e4:	3c01      	subs	r4, #1
 80006e6:	f300 80ab 	bgt.w	8000840 <__aeabi_dmul+0x238>
 80006ea:	f114 0f36 	cmn.w	r4, #54	; 0x36
 80006ee:	bfde      	ittt	le
 80006f0:	2000      	movle	r0, #0
 80006f2:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
 80006f6:	bd70      	pople	{r4, r5, r6, pc}
 80006f8:	f1c4 0400 	rsb	r4, r4, #0
 80006fc:	3c20      	subs	r4, #32
 80006fe:	da35      	bge.n	800076c <__aeabi_dmul+0x164>
 8000700:	340c      	adds	r4, #12
 8000702:	dc1b      	bgt.n	800073c <__aeabi_dmul+0x134>
 8000704:	f104 0414 	add.w	r4, r4, #20
 8000708:	f1c4 0520 	rsb	r5, r4, #32
 800070c:	fa00 f305 	lsl.w	r3, r0, r5
 8000710:	fa20 f004 	lsr.w	r0, r0, r4
 8000714:	fa01 f205 	lsl.w	r2, r1, r5
 8000718:	ea40 0002 	orr.w	r0, r0, r2
 800071c:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
 8000720:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 8000724:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 8000728:	fa21 f604 	lsr.w	r6, r1, r4
 800072c:	eb42 0106 	adc.w	r1, r2, r6
 8000730:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000734:	bf08      	it	eq
 8000736:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800073a:	bd70      	pop	{r4, r5, r6, pc}
 800073c:	f1c4 040c 	rsb	r4, r4, #12
 8000740:	f1c4 0520 	rsb	r5, r4, #32
 8000744:	fa00 f304 	lsl.w	r3, r0, r4
 8000748:	fa20 f005 	lsr.w	r0, r0, r5
 800074c:	fa01 f204 	lsl.w	r2, r1, r4
 8000750:	ea40 0002 	orr.w	r0, r0, r2
 8000754:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000758:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 800075c:	f141 0100 	adc.w	r1, r1, #0
 8000760:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000764:	bf08      	it	eq
 8000766:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800076a:	bd70      	pop	{r4, r5, r6, pc}
 800076c:	f1c4 0520 	rsb	r5, r4, #32
 8000770:	fa00 f205 	lsl.w	r2, r0, r5
 8000774:	ea4e 0e02 	orr.w	lr, lr, r2
 8000778:	fa20 f304 	lsr.w	r3, r0, r4
 800077c:	fa01 f205 	lsl.w	r2, r1, r5
 8000780:	ea43 0302 	orr.w	r3, r3, r2
 8000784:	fa21 f004 	lsr.w	r0, r1, r4
 8000788:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 800078c:	fa21 f204 	lsr.w	r2, r1, r4
 8000790:	ea20 0002 	bic.w	r0, r0, r2
 8000794:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 8000798:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 800079c:	bf08      	it	eq
 800079e:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 80007a2:	bd70      	pop	{r4, r5, r6, pc}
 80007a4:	f094 0f00 	teq	r4, #0
 80007a8:	d10f      	bne.n	80007ca <__aeabi_dmul+0x1c2>
 80007aa:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
 80007ae:	0040      	lsls	r0, r0, #1
 80007b0:	eb41 0101 	adc.w	r1, r1, r1
 80007b4:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 80007b8:	bf08      	it	eq
 80007ba:	3c01      	subeq	r4, #1
 80007bc:	d0f7      	beq.n	80007ae <__aeabi_dmul+0x1a6>
 80007be:	ea41 0106 	orr.w	r1, r1, r6
 80007c2:	f095 0f00 	teq	r5, #0
 80007c6:	bf18      	it	ne
 80007c8:	4770      	bxne	lr
 80007ca:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
 80007ce:	0052      	lsls	r2, r2, #1
 80007d0:	eb43 0303 	adc.w	r3, r3, r3
 80007d4:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
 80007d8:	bf08      	it	eq
 80007da:	3d01      	subeq	r5, #1
 80007dc:	d0f7      	beq.n	80007ce <__aeabi_dmul+0x1c6>
 80007de:	ea43 0306 	orr.w	r3, r3, r6
 80007e2:	4770      	bx	lr
 80007e4:	ea94 0f0c 	teq	r4, ip
 80007e8:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80007ec:	bf18      	it	ne
 80007ee:	ea95 0f0c 	teqne	r5, ip
 80007f2:	d00c      	beq.n	800080e <__aeabi_dmul+0x206>
 80007f4:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 80007f8:	bf18      	it	ne
 80007fa:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 80007fe:	d1d1      	bne.n	80007a4 <__aeabi_dmul+0x19c>
 8000800:	ea81 0103 	eor.w	r1, r1, r3
 8000804:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000808:	f04f 0000 	mov.w	r0, #0
 800080c:	bd70      	pop	{r4, r5, r6, pc}
 800080e:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000812:	bf06      	itte	eq
 8000814:	4610      	moveq	r0, r2
 8000816:	4619      	moveq	r1, r3
 8000818:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800081c:	d019      	beq.n	8000852 <__aeabi_dmul+0x24a>
 800081e:	ea94 0f0c 	teq	r4, ip
 8000822:	d102      	bne.n	800082a <__aeabi_dmul+0x222>
 8000824:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 8000828:	d113      	bne.n	8000852 <__aeabi_dmul+0x24a>
 800082a:	ea95 0f0c 	teq	r5, ip
 800082e:	d105      	bne.n	800083c <__aeabi_dmul+0x234>
 8000830:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 8000834:	bf1c      	itt	ne
 8000836:	4610      	movne	r0, r2
 8000838:	4619      	movne	r1, r3
 800083a:	d10a      	bne.n	8000852 <__aeabi_dmul+0x24a>
 800083c:	ea81 0103 	eor.w	r1, r1, r3
 8000840:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000844:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000848:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 800084c:	f04f 0000 	mov.w	r0, #0
 8000850:	bd70      	pop	{r4, r5, r6, pc}
 8000852:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000856:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
 800085a:	bd70      	pop	{r4, r5, r6, pc}

0800085c <__aeabi_ddiv>:
 800085c:	b570      	push	{r4, r5, r6, lr}
 800085e:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8000862:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 8000866:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 800086a:	bf1d      	ittte	ne
 800086c:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 8000870:	ea94 0f0c 	teqne	r4, ip
 8000874:	ea95 0f0c 	teqne	r5, ip
 8000878:	f000 f8a7 	bleq	80009ca <__aeabi_ddiv+0x16e>
 800087c:	eba4 0405 	sub.w	r4, r4, r5
 8000880:	ea81 0e03 	eor.w	lr, r1, r3
 8000884:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000888:	ea4f 3101 	mov.w	r1, r1, lsl #12
 800088c:	f000 8088 	beq.w	80009a0 <__aeabi_ddiv+0x144>
 8000890:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000894:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
 8000898:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 800089c:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 80008a0:	ea4f 2202 	mov.w	r2, r2, lsl #8
 80008a4:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 80008a8:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 80008ac:	ea4f 2600 	mov.w	r6, r0, lsl #8
 80008b0:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
 80008b4:	429d      	cmp	r5, r3
 80008b6:	bf08      	it	eq
 80008b8:	4296      	cmpeq	r6, r2
 80008ba:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
 80008be:	f504 7440 	add.w	r4, r4, #768	; 0x300
 80008c2:	d202      	bcs.n	80008ca <__aeabi_ddiv+0x6e>
 80008c4:	085b      	lsrs	r3, r3, #1
 80008c6:	ea4f 0232 	mov.w	r2, r2, rrx
 80008ca:	1ab6      	subs	r6, r6, r2
 80008cc:	eb65 0503 	sbc.w	r5, r5, r3
 80008d0:	085b      	lsrs	r3, r3, #1
 80008d2:	ea4f 0232 	mov.w	r2, r2, rrx
 80008d6:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
 80008da:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
 80008de:	ebb6 0e02 	subs.w	lr, r6, r2
 80008e2:	eb75 0e03 	sbcs.w	lr, r5, r3
 80008e6:	bf22      	ittt	cs
 80008e8:	1ab6      	subcs	r6, r6, r2
 80008ea:	4675      	movcs	r5, lr
 80008ec:	ea40 000c 	orrcs.w	r0, r0, ip
 80008f0:	085b      	lsrs	r3, r3, #1
 80008f2:	ea4f 0232 	mov.w	r2, r2, rrx
 80008f6:	ebb6 0e02 	subs.w	lr, r6, r2
 80008fa:	eb75 0e03 	sbcs.w	lr, r5, r3
 80008fe:	bf22      	ittt	cs
 8000900:	1ab6      	subcs	r6, r6, r2
 8000902:	4675      	movcs	r5, lr
 8000904:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 8000908:	085b      	lsrs	r3, r3, #1
 800090a:	ea4f 0232 	mov.w	r2, r2, rrx
 800090e:	ebb6 0e02 	subs.w	lr, r6, r2
 8000912:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000916:	bf22      	ittt	cs
 8000918:	1ab6      	subcs	r6, r6, r2
 800091a:	4675      	movcs	r5, lr
 800091c:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8000920:	085b      	lsrs	r3, r3, #1
 8000922:	ea4f 0232 	mov.w	r2, r2, rrx
 8000926:	ebb6 0e02 	subs.w	lr, r6, r2
 800092a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800092e:	bf22      	ittt	cs
 8000930:	1ab6      	subcs	r6, r6, r2
 8000932:	4675      	movcs	r5, lr
 8000934:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8000938:	ea55 0e06 	orrs.w	lr, r5, r6
 800093c:	d018      	beq.n	8000970 <__aeabi_ddiv+0x114>
 800093e:	ea4f 1505 	mov.w	r5, r5, lsl #4
 8000942:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 8000946:	ea4f 1606 	mov.w	r6, r6, lsl #4
 800094a:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 800094e:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 8000952:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8000956:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 800095a:	d1c0      	bne.n	80008de <__aeabi_ddiv+0x82>
 800095c:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000960:	d10b      	bne.n	800097a <__aeabi_ddiv+0x11e>
 8000962:	ea41 0100 	orr.w	r1, r1, r0
 8000966:	f04f 0000 	mov.w	r0, #0
 800096a:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
 800096e:	e7b6      	b.n	80008de <__aeabi_ddiv+0x82>
 8000970:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000974:	bf04      	itt	eq
 8000976:	4301      	orreq	r1, r0
 8000978:	2000      	moveq	r0, #0
 800097a:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 800097e:	bf88      	it	hi
 8000980:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 8000984:	f63f aeaf 	bhi.w	80006e6 <__aeabi_dmul+0xde>
 8000988:	ebb5 0c03 	subs.w	ip, r5, r3
 800098c:	bf04      	itt	eq
 800098e:	ebb6 0c02 	subseq.w	ip, r6, r2
 8000992:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 8000996:	f150 0000 	adcs.w	r0, r0, #0
 800099a:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 800099e:	bd70      	pop	{r4, r5, r6, pc}
 80009a0:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
 80009a4:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 80009a8:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 80009ac:	bfc2      	ittt	gt
 80009ae:	ebd4 050c 	rsbsgt	r5, r4, ip
 80009b2:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80009b6:	bd70      	popgt	{r4, r5, r6, pc}
 80009b8:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 80009bc:	f04f 0e00 	mov.w	lr, #0
 80009c0:	3c01      	subs	r4, #1
 80009c2:	e690      	b.n	80006e6 <__aeabi_dmul+0xde>
 80009c4:	ea45 0e06 	orr.w	lr, r5, r6
 80009c8:	e68d      	b.n	80006e6 <__aeabi_dmul+0xde>
 80009ca:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80009ce:	ea94 0f0c 	teq	r4, ip
 80009d2:	bf08      	it	eq
 80009d4:	ea95 0f0c 	teqeq	r5, ip
 80009d8:	f43f af3b 	beq.w	8000852 <__aeabi_dmul+0x24a>
 80009dc:	ea94 0f0c 	teq	r4, ip
 80009e0:	d10a      	bne.n	80009f8 <__aeabi_ddiv+0x19c>
 80009e2:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 80009e6:	f47f af34 	bne.w	8000852 <__aeabi_dmul+0x24a>
 80009ea:	ea95 0f0c 	teq	r5, ip
 80009ee:	f47f af25 	bne.w	800083c <__aeabi_dmul+0x234>
 80009f2:	4610      	mov	r0, r2
 80009f4:	4619      	mov	r1, r3
 80009f6:	e72c      	b.n	8000852 <__aeabi_dmul+0x24a>
 80009f8:	ea95 0f0c 	teq	r5, ip
 80009fc:	d106      	bne.n	8000a0c <__aeabi_ddiv+0x1b0>
 80009fe:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000a02:	f43f aefd 	beq.w	8000800 <__aeabi_dmul+0x1f8>
 8000a06:	4610      	mov	r0, r2
 8000a08:	4619      	mov	r1, r3
 8000a0a:	e722      	b.n	8000852 <__aeabi_dmul+0x24a>
 8000a0c:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000a10:	bf18      	it	ne
 8000a12:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000a16:	f47f aec5 	bne.w	80007a4 <__aeabi_dmul+0x19c>
 8000a1a:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 8000a1e:	f47f af0d 	bne.w	800083c <__aeabi_dmul+0x234>
 8000a22:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 8000a26:	f47f aeeb 	bne.w	8000800 <__aeabi_dmul+0x1f8>
 8000a2a:	e712      	b.n	8000852 <__aeabi_dmul+0x24a>

08000a2c <__gedf2>:
 8000a2c:	f04f 3cff 	mov.w	ip, #4294967295
 8000a30:	e006      	b.n	8000a40 <__cmpdf2+0x4>
 8000a32:	bf00      	nop

08000a34 <__ledf2>:
 8000a34:	f04f 0c01 	mov.w	ip, #1
 8000a38:	e002      	b.n	8000a40 <__cmpdf2+0x4>
 8000a3a:	bf00      	nop

08000a3c <__cmpdf2>:
 8000a3c:	f04f 0c01 	mov.w	ip, #1
 8000a40:	f84d cd04 	str.w	ip, [sp, #-4]!
 8000a44:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a48:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a4c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000a50:	bf18      	it	ne
 8000a52:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
 8000a56:	d01b      	beq.n	8000a90 <__cmpdf2+0x54>
 8000a58:	b001      	add	sp, #4
 8000a5a:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
 8000a5e:	bf0c      	ite	eq
 8000a60:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
 8000a64:	ea91 0f03 	teqne	r1, r3
 8000a68:	bf02      	ittt	eq
 8000a6a:	ea90 0f02 	teqeq	r0, r2
 8000a6e:	2000      	moveq	r0, #0
 8000a70:	4770      	bxeq	lr
 8000a72:	f110 0f00 	cmn.w	r0, #0
 8000a76:	ea91 0f03 	teq	r1, r3
 8000a7a:	bf58      	it	pl
 8000a7c:	4299      	cmppl	r1, r3
 8000a7e:	bf08      	it	eq
 8000a80:	4290      	cmpeq	r0, r2
 8000a82:	bf2c      	ite	cs
 8000a84:	17d8      	asrcs	r0, r3, #31
 8000a86:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
 8000a8a:	f040 0001 	orr.w	r0, r0, #1
 8000a8e:	4770      	bx	lr
 8000a90:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a94:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a98:	d102      	bne.n	8000aa0 <__cmpdf2+0x64>
 8000a9a:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000a9e:	d107      	bne.n	8000ab0 <__cmpdf2+0x74>
 8000aa0:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000aa4:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000aa8:	d1d6      	bne.n	8000a58 <__cmpdf2+0x1c>
 8000aaa:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000aae:	d0d3      	beq.n	8000a58 <__cmpdf2+0x1c>
 8000ab0:	f85d 0b04 	ldr.w	r0, [sp], #4
 8000ab4:	4770      	bx	lr
 8000ab6:	bf00      	nop

08000ab8 <__aeabi_cdrcmple>:
 8000ab8:	4684      	mov	ip, r0
 8000aba:	4610      	mov	r0, r2
 8000abc:	4662      	mov	r2, ip
 8000abe:	468c      	mov	ip, r1
 8000ac0:	4619      	mov	r1, r3
 8000ac2:	4663      	mov	r3, ip
 8000ac4:	e000      	b.n	8000ac8 <__aeabi_cdcmpeq>
 8000ac6:	bf00      	nop

08000ac8 <__aeabi_cdcmpeq>:
 8000ac8:	b501      	push	{r0, lr}
 8000aca:	f7ff ffb7 	bl	8000a3c <__cmpdf2>
 8000ace:	2800      	cmp	r0, #0
 8000ad0:	bf48      	it	mi
 8000ad2:	f110 0f00 	cmnmi.w	r0, #0
 8000ad6:	bd01      	pop	{r0, pc}

08000ad8 <__aeabi_dcmpeq>:
 8000ad8:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000adc:	f7ff fff4 	bl	8000ac8 <__aeabi_cdcmpeq>
 8000ae0:	bf0c      	ite	eq
 8000ae2:	2001      	moveq	r0, #1
 8000ae4:	2000      	movne	r0, #0
 8000ae6:	f85d fb08 	ldr.w	pc, [sp], #8
 8000aea:	bf00      	nop

08000aec <__aeabi_dcmplt>:
 8000aec:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000af0:	f7ff ffea 	bl	8000ac8 <__aeabi_cdcmpeq>
 8000af4:	bf34      	ite	cc
 8000af6:	2001      	movcc	r0, #1
 8000af8:	2000      	movcs	r0, #0
 8000afa:	f85d fb08 	ldr.w	pc, [sp], #8
 8000afe:	bf00      	nop

08000b00 <__aeabi_dcmple>:
 8000b00:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b04:	f7ff ffe0 	bl	8000ac8 <__aeabi_cdcmpeq>
 8000b08:	bf94      	ite	ls
 8000b0a:	2001      	movls	r0, #1
 8000b0c:	2000      	movhi	r0, #0
 8000b0e:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b12:	bf00      	nop

08000b14 <__aeabi_dcmpge>:
 8000b14:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b18:	f7ff ffce 	bl	8000ab8 <__aeabi_cdrcmple>
 8000b1c:	bf94      	ite	ls
 8000b1e:	2001      	movls	r0, #1
 8000b20:	2000      	movhi	r0, #0
 8000b22:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b26:	bf00      	nop

08000b28 <__aeabi_dcmpgt>:
 8000b28:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b2c:	f7ff ffc4 	bl	8000ab8 <__aeabi_cdrcmple>
 8000b30:	bf34      	ite	cc
 8000b32:	2001      	movcc	r0, #1
 8000b34:	2000      	movcs	r0, #0
 8000b36:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b3a:	bf00      	nop

08000b3c <__aeabi_dcmpun>:
 8000b3c:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000b40:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b44:	d102      	bne.n	8000b4c <__aeabi_dcmpun+0x10>
 8000b46:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000b4a:	d10a      	bne.n	8000b62 <__aeabi_dcmpun+0x26>
 8000b4c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000b50:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b54:	d102      	bne.n	8000b5c <__aeabi_dcmpun+0x20>
 8000b56:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000b5a:	d102      	bne.n	8000b62 <__aeabi_dcmpun+0x26>
 8000b5c:	f04f 0000 	mov.w	r0, #0
 8000b60:	4770      	bx	lr
 8000b62:	f04f 0001 	mov.w	r0, #1
 8000b66:	4770      	bx	lr

08000b68 <__aeabi_d2iz>:
 8000b68:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000b6c:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
 8000b70:	d215      	bcs.n	8000b9e <__aeabi_d2iz+0x36>
 8000b72:	d511      	bpl.n	8000b98 <__aeabi_d2iz+0x30>
 8000b74:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
 8000b78:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000b7c:	d912      	bls.n	8000ba4 <__aeabi_d2iz+0x3c>
 8000b7e:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000b82:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8000b86:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000b8a:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8000b8e:	fa23 f002 	lsr.w	r0, r3, r2
 8000b92:	bf18      	it	ne
 8000b94:	4240      	negne	r0, r0
 8000b96:	4770      	bx	lr
 8000b98:	f04f 0000 	mov.w	r0, #0
 8000b9c:	4770      	bx	lr
 8000b9e:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000ba2:	d105      	bne.n	8000bb0 <__aeabi_d2iz+0x48>
 8000ba4:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
 8000ba8:	bf08      	it	eq
 8000baa:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
 8000bae:	4770      	bx	lr
 8000bb0:	f04f 0000 	mov.w	r0, #0
 8000bb4:	4770      	bx	lr
 8000bb6:	bf00      	nop

08000bb8 <__aeabi_uldivmod>:
 8000bb8:	b953      	cbnz	r3, 8000bd0 <__aeabi_uldivmod+0x18>
 8000bba:	b94a      	cbnz	r2, 8000bd0 <__aeabi_uldivmod+0x18>
 8000bbc:	2900      	cmp	r1, #0
 8000bbe:	bf08      	it	eq
 8000bc0:	2800      	cmpeq	r0, #0
 8000bc2:	bf1c      	itt	ne
 8000bc4:	f04f 31ff 	movne.w	r1, #4294967295
 8000bc8:	f04f 30ff 	movne.w	r0, #4294967295
 8000bcc:	f000 b970 	b.w	8000eb0 <__aeabi_idiv0>
 8000bd0:	f1ad 0c08 	sub.w	ip, sp, #8
 8000bd4:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 8000bd8:	f000 f806 	bl	8000be8 <__udivmoddi4>
 8000bdc:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000be0:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8000be4:	b004      	add	sp, #16
 8000be6:	4770      	bx	lr

08000be8 <__udivmoddi4>:
 8000be8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000bec:	9e08      	ldr	r6, [sp, #32]
 8000bee:	460d      	mov	r5, r1
 8000bf0:	4604      	mov	r4, r0
 8000bf2:	460f      	mov	r7, r1
 8000bf4:	2b00      	cmp	r3, #0
 8000bf6:	d14a      	bne.n	8000c8e <__udivmoddi4+0xa6>
 8000bf8:	428a      	cmp	r2, r1
 8000bfa:	4694      	mov	ip, r2
 8000bfc:	d965      	bls.n	8000cca <__udivmoddi4+0xe2>
 8000bfe:	fab2 f382 	clz	r3, r2
 8000c02:	b143      	cbz	r3, 8000c16 <__udivmoddi4+0x2e>
 8000c04:	fa02 fc03 	lsl.w	ip, r2, r3
 8000c08:	f1c3 0220 	rsb	r2, r3, #32
 8000c0c:	409f      	lsls	r7, r3
 8000c0e:	fa20 f202 	lsr.w	r2, r0, r2
 8000c12:	4317      	orrs	r7, r2
 8000c14:	409c      	lsls	r4, r3
 8000c16:	ea4f 4e1c 	mov.w	lr, ip, lsr #16
 8000c1a:	fa1f f58c 	uxth.w	r5, ip
 8000c1e:	fbb7 f1fe 	udiv	r1, r7, lr
 8000c22:	0c22      	lsrs	r2, r4, #16
 8000c24:	fb0e 7711 	mls	r7, lr, r1, r7
 8000c28:	ea42 4207 	orr.w	r2, r2, r7, lsl #16
 8000c2c:	fb01 f005 	mul.w	r0, r1, r5
 8000c30:	4290      	cmp	r0, r2
 8000c32:	d90a      	bls.n	8000c4a <__udivmoddi4+0x62>
 8000c34:	eb1c 0202 	adds.w	r2, ip, r2
 8000c38:	f101 37ff 	add.w	r7, r1, #4294967295
 8000c3c:	f080 811c 	bcs.w	8000e78 <__udivmoddi4+0x290>
 8000c40:	4290      	cmp	r0, r2
 8000c42:	f240 8119 	bls.w	8000e78 <__udivmoddi4+0x290>
 8000c46:	3902      	subs	r1, #2
 8000c48:	4462      	add	r2, ip
 8000c4a:	1a12      	subs	r2, r2, r0
 8000c4c:	b2a4      	uxth	r4, r4
 8000c4e:	fbb2 f0fe 	udiv	r0, r2, lr
 8000c52:	fb0e 2210 	mls	r2, lr, r0, r2
 8000c56:	ea44 4402 	orr.w	r4, r4, r2, lsl #16
 8000c5a:	fb00 f505 	mul.w	r5, r0, r5
 8000c5e:	42a5      	cmp	r5, r4
 8000c60:	d90a      	bls.n	8000c78 <__udivmoddi4+0x90>
 8000c62:	eb1c 0404 	adds.w	r4, ip, r4
 8000c66:	f100 32ff 	add.w	r2, r0, #4294967295
 8000c6a:	f080 8107 	bcs.w	8000e7c <__udivmoddi4+0x294>
 8000c6e:	42a5      	cmp	r5, r4
 8000c70:	f240 8104 	bls.w	8000e7c <__udivmoddi4+0x294>
 8000c74:	4464      	add	r4, ip
 8000c76:	3802      	subs	r0, #2
 8000c78:	ea40 4001 	orr.w	r0, r0, r1, lsl #16
 8000c7c:	1b64      	subs	r4, r4, r5
 8000c7e:	2100      	movs	r1, #0
 8000c80:	b11e      	cbz	r6, 8000c8a <__udivmoddi4+0xa2>
 8000c82:	40dc      	lsrs	r4, r3
 8000c84:	2300      	movs	r3, #0
 8000c86:	e9c6 4300 	strd	r4, r3, [r6]
 8000c8a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000c8e:	428b      	cmp	r3, r1
 8000c90:	d908      	bls.n	8000ca4 <__udivmoddi4+0xbc>
 8000c92:	2e00      	cmp	r6, #0
 8000c94:	f000 80ed 	beq.w	8000e72 <__udivmoddi4+0x28a>
 8000c98:	2100      	movs	r1, #0
 8000c9a:	e9c6 0500 	strd	r0, r5, [r6]
 8000c9e:	4608      	mov	r0, r1
 8000ca0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000ca4:	fab3 f183 	clz	r1, r3
 8000ca8:	2900      	cmp	r1, #0
 8000caa:	d149      	bne.n	8000d40 <__udivmoddi4+0x158>
 8000cac:	42ab      	cmp	r3, r5
 8000cae:	d302      	bcc.n	8000cb6 <__udivmoddi4+0xce>
 8000cb0:	4282      	cmp	r2, r0
 8000cb2:	f200 80f8 	bhi.w	8000ea6 <__udivmoddi4+0x2be>
 8000cb6:	1a84      	subs	r4, r0, r2
 8000cb8:	eb65 0203 	sbc.w	r2, r5, r3
 8000cbc:	2001      	movs	r0, #1
 8000cbe:	4617      	mov	r7, r2
 8000cc0:	2e00      	cmp	r6, #0
 8000cc2:	d0e2      	beq.n	8000c8a <__udivmoddi4+0xa2>
 8000cc4:	e9c6 4700 	strd	r4, r7, [r6]
 8000cc8:	e7df      	b.n	8000c8a <__udivmoddi4+0xa2>
 8000cca:	b902      	cbnz	r2, 8000cce <__udivmoddi4+0xe6>
 8000ccc:	deff      	udf	#255	; 0xff
 8000cce:	fab2 f382 	clz	r3, r2
 8000cd2:	2b00      	cmp	r3, #0
 8000cd4:	f040 8090 	bne.w	8000df8 <__udivmoddi4+0x210>
 8000cd8:	1a8a      	subs	r2, r1, r2
 8000cda:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8000cde:	fa1f fe8c 	uxth.w	lr, ip
 8000ce2:	2101      	movs	r1, #1
 8000ce4:	fbb2 f5f7 	udiv	r5, r2, r7
 8000ce8:	fb07 2015 	mls	r0, r7, r5, r2
 8000cec:	0c22      	lsrs	r2, r4, #16
 8000cee:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 8000cf2:	fb0e f005 	mul.w	r0, lr, r5
 8000cf6:	4290      	cmp	r0, r2
 8000cf8:	d908      	bls.n	8000d0c <__udivmoddi4+0x124>
 8000cfa:	eb1c 0202 	adds.w	r2, ip, r2
 8000cfe:	f105 38ff 	add.w	r8, r5, #4294967295
 8000d02:	d202      	bcs.n	8000d0a <__udivmoddi4+0x122>
 8000d04:	4290      	cmp	r0, r2
 8000d06:	f200 80cb 	bhi.w	8000ea0 <__udivmoddi4+0x2b8>
 8000d0a:	4645      	mov	r5, r8
 8000d0c:	1a12      	subs	r2, r2, r0
 8000d0e:	b2a4      	uxth	r4, r4
 8000d10:	fbb2 f0f7 	udiv	r0, r2, r7
 8000d14:	fb07 2210 	mls	r2, r7, r0, r2
 8000d18:	ea44 4402 	orr.w	r4, r4, r2, lsl #16
 8000d1c:	fb0e fe00 	mul.w	lr, lr, r0
 8000d20:	45a6      	cmp	lr, r4
 8000d22:	d908      	bls.n	8000d36 <__udivmoddi4+0x14e>
 8000d24:	eb1c 0404 	adds.w	r4, ip, r4
 8000d28:	f100 32ff 	add.w	r2, r0, #4294967295
 8000d2c:	d202      	bcs.n	8000d34 <__udivmoddi4+0x14c>
 8000d2e:	45a6      	cmp	lr, r4
 8000d30:	f200 80bb 	bhi.w	8000eaa <__udivmoddi4+0x2c2>
 8000d34:	4610      	mov	r0, r2
 8000d36:	eba4 040e 	sub.w	r4, r4, lr
 8000d3a:	ea40 4005 	orr.w	r0, r0, r5, lsl #16
 8000d3e:	e79f      	b.n	8000c80 <__udivmoddi4+0x98>
 8000d40:	f1c1 0720 	rsb	r7, r1, #32
 8000d44:	408b      	lsls	r3, r1
 8000d46:	fa22 fc07 	lsr.w	ip, r2, r7
 8000d4a:	ea4c 0c03 	orr.w	ip, ip, r3
 8000d4e:	fa05 f401 	lsl.w	r4, r5, r1
 8000d52:	fa20 f307 	lsr.w	r3, r0, r7
 8000d56:	40fd      	lsrs	r5, r7
 8000d58:	ea4f 491c 	mov.w	r9, ip, lsr #16
 8000d5c:	4323      	orrs	r3, r4
 8000d5e:	fbb5 f8f9 	udiv	r8, r5, r9
 8000d62:	fa1f fe8c 	uxth.w	lr, ip
 8000d66:	fb09 5518 	mls	r5, r9, r8, r5
 8000d6a:	0c1c      	lsrs	r4, r3, #16
 8000d6c:	ea44 4405 	orr.w	r4, r4, r5, lsl #16
 8000d70:	fb08 f50e 	mul.w	r5, r8, lr
 8000d74:	42a5      	cmp	r5, r4
 8000d76:	fa02 f201 	lsl.w	r2, r2, r1
 8000d7a:	fa00 f001 	lsl.w	r0, r0, r1
 8000d7e:	d90b      	bls.n	8000d98 <__udivmoddi4+0x1b0>
 8000d80:	eb1c 0404 	adds.w	r4, ip, r4
 8000d84:	f108 3aff 	add.w	sl, r8, #4294967295
 8000d88:	f080 8088 	bcs.w	8000e9c <__udivmoddi4+0x2b4>
 8000d8c:	42a5      	cmp	r5, r4
 8000d8e:	f240 8085 	bls.w	8000e9c <__udivmoddi4+0x2b4>
 8000d92:	f1a8 0802 	sub.w	r8, r8, #2
 8000d96:	4464      	add	r4, ip
 8000d98:	1b64      	subs	r4, r4, r5
 8000d9a:	b29d      	uxth	r5, r3
 8000d9c:	fbb4 f3f9 	udiv	r3, r4, r9
 8000da0:	fb09 4413 	mls	r4, r9, r3, r4
 8000da4:	ea45 4404 	orr.w	r4, r5, r4, lsl #16
 8000da8:	fb03 fe0e 	mul.w	lr, r3, lr
 8000dac:	45a6      	cmp	lr, r4
 8000dae:	d908      	bls.n	8000dc2 <__udivmoddi4+0x1da>
 8000db0:	eb1c 0404 	adds.w	r4, ip, r4
 8000db4:	f103 35ff 	add.w	r5, r3, #4294967295
 8000db8:	d26c      	bcs.n	8000e94 <__udivmoddi4+0x2ac>
 8000dba:	45a6      	cmp	lr, r4
 8000dbc:	d96a      	bls.n	8000e94 <__udivmoddi4+0x2ac>
 8000dbe:	3b02      	subs	r3, #2
 8000dc0:	4464      	add	r4, ip
 8000dc2:	ea43 4308 	orr.w	r3, r3, r8, lsl #16
 8000dc6:	fba3 9502 	umull	r9, r5, r3, r2
 8000dca:	eba4 040e 	sub.w	r4, r4, lr
 8000dce:	42ac      	cmp	r4, r5
 8000dd0:	46c8      	mov	r8, r9
 8000dd2:	46ae      	mov	lr, r5
 8000dd4:	d356      	bcc.n	8000e84 <__udivmoddi4+0x29c>
 8000dd6:	d053      	beq.n	8000e80 <__udivmoddi4+0x298>
 8000dd8:	b156      	cbz	r6, 8000df0 <__udivmoddi4+0x208>
 8000dda:	ebb0 0208 	subs.w	r2, r0, r8
 8000dde:	eb64 040e 	sbc.w	r4, r4, lr
 8000de2:	fa04 f707 	lsl.w	r7, r4, r7
 8000de6:	40ca      	lsrs	r2, r1
 8000de8:	40cc      	lsrs	r4, r1
 8000dea:	4317      	orrs	r7, r2
 8000dec:	e9c6 7400 	strd	r7, r4, [r6]
 8000df0:	4618      	mov	r0, r3
 8000df2:	2100      	movs	r1, #0
 8000df4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000df8:	f1c3 0120 	rsb	r1, r3, #32
 8000dfc:	fa02 fc03 	lsl.w	ip, r2, r3
 8000e00:	fa20 f201 	lsr.w	r2, r0, r1
 8000e04:	fa25 f101 	lsr.w	r1, r5, r1
 8000e08:	409d      	lsls	r5, r3
 8000e0a:	432a      	orrs	r2, r5
 8000e0c:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8000e10:	fa1f fe8c 	uxth.w	lr, ip
 8000e14:	fbb1 f0f7 	udiv	r0, r1, r7
 8000e18:	fb07 1510 	mls	r5, r7, r0, r1
 8000e1c:	0c11      	lsrs	r1, r2, #16
 8000e1e:	ea41 4105 	orr.w	r1, r1, r5, lsl #16
 8000e22:	fb00 f50e 	mul.w	r5, r0, lr
 8000e26:	428d      	cmp	r5, r1
 8000e28:	fa04 f403 	lsl.w	r4, r4, r3
 8000e2c:	d908      	bls.n	8000e40 <__udivmoddi4+0x258>
 8000e2e:	eb1c 0101 	adds.w	r1, ip, r1
 8000e32:	f100 38ff 	add.w	r8, r0, #4294967295
 8000e36:	d22f      	bcs.n	8000e98 <__udivmoddi4+0x2b0>
 8000e38:	428d      	cmp	r5, r1
 8000e3a:	d92d      	bls.n	8000e98 <__udivmoddi4+0x2b0>
 8000e3c:	3802      	subs	r0, #2
 8000e3e:	4461      	add	r1, ip
 8000e40:	1b49      	subs	r1, r1, r5
 8000e42:	b292      	uxth	r2, r2
 8000e44:	fbb1 f5f7 	udiv	r5, r1, r7
 8000e48:	fb07 1115 	mls	r1, r7, r5, r1
 8000e4c:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 8000e50:	fb05 f10e 	mul.w	r1, r5, lr
 8000e54:	4291      	cmp	r1, r2
 8000e56:	d908      	bls.n	8000e6a <__udivmoddi4+0x282>
 8000e58:	eb1c 0202 	adds.w	r2, ip, r2
 8000e5c:	f105 38ff 	add.w	r8, r5, #4294967295
 8000e60:	d216      	bcs.n	8000e90 <__udivmoddi4+0x2a8>
 8000e62:	4291      	cmp	r1, r2
 8000e64:	d914      	bls.n	8000e90 <__udivmoddi4+0x2a8>
 8000e66:	3d02      	subs	r5, #2
 8000e68:	4462      	add	r2, ip
 8000e6a:	1a52      	subs	r2, r2, r1
 8000e6c:	ea45 4100 	orr.w	r1, r5, r0, lsl #16
 8000e70:	e738      	b.n	8000ce4 <__udivmoddi4+0xfc>
 8000e72:	4631      	mov	r1, r6
 8000e74:	4630      	mov	r0, r6
 8000e76:	e708      	b.n	8000c8a <__udivmoddi4+0xa2>
 8000e78:	4639      	mov	r1, r7
 8000e7a:	e6e6      	b.n	8000c4a <__udivmoddi4+0x62>
 8000e7c:	4610      	mov	r0, r2
 8000e7e:	e6fb      	b.n	8000c78 <__udivmoddi4+0x90>
 8000e80:	4548      	cmp	r0, r9
 8000e82:	d2a9      	bcs.n	8000dd8 <__udivmoddi4+0x1f0>
 8000e84:	ebb9 0802 	subs.w	r8, r9, r2
 8000e88:	eb65 0e0c 	sbc.w	lr, r5, ip
 8000e8c:	3b01      	subs	r3, #1
 8000e8e:	e7a3      	b.n	8000dd8 <__udivmoddi4+0x1f0>
 8000e90:	4645      	mov	r5, r8
 8000e92:	e7ea      	b.n	8000e6a <__udivmoddi4+0x282>
 8000e94:	462b      	mov	r3, r5
 8000e96:	e794      	b.n	8000dc2 <__udivmoddi4+0x1da>
 8000e98:	4640      	mov	r0, r8
 8000e9a:	e7d1      	b.n	8000e40 <__udivmoddi4+0x258>
 8000e9c:	46d0      	mov	r8, sl
 8000e9e:	e77b      	b.n	8000d98 <__udivmoddi4+0x1b0>
 8000ea0:	3d02      	subs	r5, #2
 8000ea2:	4462      	add	r2, ip
 8000ea4:	e732      	b.n	8000d0c <__udivmoddi4+0x124>
 8000ea6:	4608      	mov	r0, r1
 8000ea8:	e70a      	b.n	8000cc0 <__udivmoddi4+0xd8>
 8000eaa:	4464      	add	r4, ip
 8000eac:	3802      	subs	r0, #2
 8000eae:	e742      	b.n	8000d36 <__udivmoddi4+0x14e>

08000eb0 <__aeabi_idiv0>:
 8000eb0:	4770      	bx	lr
 8000eb2:	bf00      	nop

08000eb4 <PIDController_Init>:
 *      Author: peter
 */

#include "TemperatureControl.h"

void PIDController_Init(PIDController *pid) {
 8000eb4:	b480      	push	{r7}
 8000eb6:	b083      	sub	sp, #12
 8000eb8:	af00      	add	r7, sp, #0
 8000eba:	6078      	str	r0, [r7, #4]

	/* Clear controller variables */
	pid->integrator = 0.0f;
 8000ebc:	687b      	ldr	r3, [r7, #4]
 8000ebe:	f04f 0200 	mov.w	r2, #0
 8000ec2:	625a      	str	r2, [r3, #36]	; 0x24
	pid->prevError  = 0.0f;
 8000ec4:	687b      	ldr	r3, [r7, #4]
 8000ec6:	f04f 0200 	mov.w	r2, #0
 8000eca:	629a      	str	r2, [r3, #40]	; 0x28

	pid->differentiator  = 0.0f;
 8000ecc:	687b      	ldr	r3, [r7, #4]
 8000ece:	f04f 0200 	mov.w	r2, #0
 8000ed2:	62da      	str	r2, [r3, #44]	; 0x2c
	pid->prevMeasurement = 0.0f;
 8000ed4:	687b      	ldr	r3, [r7, #4]
 8000ed6:	f04f 0200 	mov.w	r2, #0
 8000eda:	631a      	str	r2, [r3, #48]	; 0x30

	pid->out = 0.0f;
 8000edc:	687b      	ldr	r3, [r7, #4]
 8000ede:	f04f 0200 	mov.w	r2, #0
 8000ee2:	635a      	str	r2, [r3, #52]	; 0x34

}
 8000ee4:	bf00      	nop
 8000ee6:	370c      	adds	r7, #12
 8000ee8:	46bd      	mov	sp, r7
 8000eea:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000eee:	4770      	bx	lr

08000ef0 <PIDController_Update>:

float PIDController_Update(PIDController *pid, float setpoint, float measurement) {
 8000ef0:	b480      	push	{r7}
 8000ef2:	b087      	sub	sp, #28
 8000ef4:	af00      	add	r7, sp, #0
 8000ef6:	60f8      	str	r0, [r7, #12]
 8000ef8:	ed87 0a02 	vstr	s0, [r7, #8]
 8000efc:	edc7 0a01 	vstr	s1, [r7, #4]

	/*
	* Error signal
	*/
    float error = setpoint - measurement;
 8000f00:	ed97 7a02 	vldr	s14, [r7, #8]
 8000f04:	edd7 7a01 	vldr	s15, [r7, #4]
 8000f08:	ee77 7a67 	vsub.f32	s15, s14, s15
 8000f0c:	edc7 7a05 	vstr	s15, [r7, #20]


	/*
	* Proportional
	*/
    float proportional = pid->Kp * error;
 8000f10:	68fb      	ldr	r3, [r7, #12]
 8000f12:	edd3 7a00 	vldr	s15, [r3]
 8000f16:	ed97 7a05 	vldr	s14, [r7, #20]
 8000f1a:	ee67 7a27 	vmul.f32	s15, s14, s15
 8000f1e:	edc7 7a04 	vstr	s15, [r7, #16]


	/*
	* Integral
	*/
    pid->integrator = pid->integrator + 0.5f * pid->Ki * pid->T * (error + pid->prevError);
 8000f22:	68fb      	ldr	r3, [r7, #12]
 8000f24:	ed93 7a09 	vldr	s14, [r3, #36]	; 0x24
 8000f28:	68fb      	ldr	r3, [r7, #12]
 8000f2a:	edd3 7a01 	vldr	s15, [r3, #4]
 8000f2e:	eef6 6a00 	vmov.f32	s13, #96	; 0x3f000000  0.5
 8000f32:	ee67 6aa6 	vmul.f32	s13, s15, s13
 8000f36:	68fb      	ldr	r3, [r7, #12]
 8000f38:	edd3 7a08 	vldr	s15, [r3, #32]
 8000f3c:	ee66 6aa7 	vmul.f32	s13, s13, s15
 8000f40:	68fb      	ldr	r3, [r7, #12]
 8000f42:	ed93 6a0a 	vldr	s12, [r3, #40]	; 0x28
 8000f46:	edd7 7a05 	vldr	s15, [r7, #20]
 8000f4a:	ee76 7a27 	vadd.f32	s15, s12, s15
 8000f4e:	ee66 7aa7 	vmul.f32	s15, s13, s15
 8000f52:	ee77 7a27 	vadd.f32	s15, s14, s15
 8000f56:	68fb      	ldr	r3, [r7, #12]
 8000f58:	edc3 7a09 	vstr	s15, [r3, #36]	; 0x24

	/* Anti-wind-up via integrator clamping */
    if (pid->integrator > pid->limMaxInt) {
 8000f5c:	68fb      	ldr	r3, [r7, #12]
 8000f5e:	ed93 7a09 	vldr	s14, [r3, #36]	; 0x24
 8000f62:	68fb      	ldr	r3, [r7, #12]
 8000f64:	edd3 7a07 	vldr	s15, [r3, #28]
 8000f68:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8000f6c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8000f70:	dd04      	ble.n	8000f7c <PIDController_Update+0x8c>

        pid->integrator = pid->limMaxInt;
 8000f72:	68fb      	ldr	r3, [r7, #12]
 8000f74:	69da      	ldr	r2, [r3, #28]
 8000f76:	68fb      	ldr	r3, [r7, #12]
 8000f78:	625a      	str	r2, [r3, #36]	; 0x24
 8000f7a:	e00e      	b.n	8000f9a <PIDController_Update+0xaa>

    } else if (pid->integrator < pid->limMinInt) {
 8000f7c:	68fb      	ldr	r3, [r7, #12]
 8000f7e:	ed93 7a09 	vldr	s14, [r3, #36]	; 0x24
 8000f82:	68fb      	ldr	r3, [r7, #12]
 8000f84:	edd3 7a06 	vldr	s15, [r3, #24]
 8000f88:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8000f8c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8000f90:	d503      	bpl.n	8000f9a <PIDController_Update+0xaa>

        pid->integrator = pid->limMinInt;
 8000f92:	68fb      	ldr	r3, [r7, #12]
 8000f94:	699a      	ldr	r2, [r3, #24]
 8000f96:	68fb      	ldr	r3, [r7, #12]
 8000f98:	625a      	str	r2, [r3, #36]	; 0x24

	/*
	* Derivative (band-limited differentiator)
	*/

    pid->differentiator = -(2.0f * pid->Kd * (measurement - pid->prevMeasurement)	/* Note: derivative on measurement, therefore minus sign in front of equation! */
 8000f9a:	68fb      	ldr	r3, [r7, #12]
 8000f9c:	edd3 7a02 	vldr	s15, [r3, #8]
 8000fa0:	ee37 7aa7 	vadd.f32	s14, s15, s15
 8000fa4:	68fb      	ldr	r3, [r7, #12]
 8000fa6:	edd3 7a0c 	vldr	s15, [r3, #48]	; 0x30
 8000faa:	edd7 6a01 	vldr	s13, [r7, #4]
 8000fae:	ee76 7ae7 	vsub.f32	s15, s13, s15
 8000fb2:	ee27 7a27 	vmul.f32	s14, s14, s15
                        + (2.0f * pid->tau - pid->T) * pid->differentiator)
 8000fb6:	68fb      	ldr	r3, [r7, #12]
 8000fb8:	edd3 7a03 	vldr	s15, [r3, #12]
 8000fbc:	ee77 6aa7 	vadd.f32	s13, s15, s15
 8000fc0:	68fb      	ldr	r3, [r7, #12]
 8000fc2:	edd3 7a08 	vldr	s15, [r3, #32]
 8000fc6:	ee76 6ae7 	vsub.f32	s13, s13, s15
 8000fca:	68fb      	ldr	r3, [r7, #12]
 8000fcc:	edd3 7a0b 	vldr	s15, [r3, #44]	; 0x2c
 8000fd0:	ee66 7aa7 	vmul.f32	s15, s13, s15
 8000fd4:	ee77 7a27 	vadd.f32	s15, s14, s15
    pid->differentiator = -(2.0f * pid->Kd * (measurement - pid->prevMeasurement)	/* Note: derivative on measurement, therefore minus sign in front of equation! */
 8000fd8:	eef1 6a67 	vneg.f32	s13, s15
                        / (2.0f * pid->tau + pid->T);
 8000fdc:	68fb      	ldr	r3, [r7, #12]
 8000fde:	edd3 7a03 	vldr	s15, [r3, #12]
 8000fe2:	ee37 7aa7 	vadd.f32	s14, s15, s15
 8000fe6:	68fb      	ldr	r3, [r7, #12]
 8000fe8:	edd3 7a08 	vldr	s15, [r3, #32]
 8000fec:	ee37 7a27 	vadd.f32	s14, s14, s15
 8000ff0:	eec6 7a87 	vdiv.f32	s15, s13, s14
    pid->differentiator = -(2.0f * pid->Kd * (measurement - pid->prevMeasurement)	/* Note: derivative on measurement, therefore minus sign in front of equation! */
 8000ff4:	68fb      	ldr	r3, [r7, #12]
 8000ff6:	edc3 7a0b 	vstr	s15, [r3, #44]	; 0x2c


	/*
	* Compute output and apply limits
	*/
    pid->out = proportional + pid->integrator + pid->differentiator;
 8000ffa:	68fb      	ldr	r3, [r7, #12]
 8000ffc:	ed93 7a09 	vldr	s14, [r3, #36]	; 0x24
 8001000:	edd7 7a04 	vldr	s15, [r7, #16]
 8001004:	ee37 7a27 	vadd.f32	s14, s14, s15
 8001008:	68fb      	ldr	r3, [r7, #12]
 800100a:	edd3 7a0b 	vldr	s15, [r3, #44]	; 0x2c
 800100e:	ee77 7a27 	vadd.f32	s15, s14, s15
 8001012:	68fb      	ldr	r3, [r7, #12]
 8001014:	edc3 7a0d 	vstr	s15, [r3, #52]	; 0x34

    if (pid->out > pid->limMax) {
 8001018:	68fb      	ldr	r3, [r7, #12]
 800101a:	ed93 7a0d 	vldr	s14, [r3, #52]	; 0x34
 800101e:	68fb      	ldr	r3, [r7, #12]
 8001020:	edd3 7a05 	vldr	s15, [r3, #20]
 8001024:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8001028:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800102c:	dd04      	ble.n	8001038 <PIDController_Update+0x148>

        pid->out = pid->limMax;
 800102e:	68fb      	ldr	r3, [r7, #12]
 8001030:	695a      	ldr	r2, [r3, #20]
 8001032:	68fb      	ldr	r3, [r7, #12]
 8001034:	635a      	str	r2, [r3, #52]	; 0x34
 8001036:	e00e      	b.n	8001056 <PIDController_Update+0x166>

    } else if (pid->out < pid->limMin) {
 8001038:	68fb      	ldr	r3, [r7, #12]
 800103a:	ed93 7a0d 	vldr	s14, [r3, #52]	; 0x34
 800103e:	68fb      	ldr	r3, [r7, #12]
 8001040:	edd3 7a04 	vldr	s15, [r3, #16]
 8001044:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8001048:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800104c:	d503      	bpl.n	8001056 <PIDController_Update+0x166>

        pid->out = pid->limMin;
 800104e:	68fb      	ldr	r3, [r7, #12]
 8001050:	691a      	ldr	r2, [r3, #16]
 8001052:	68fb      	ldr	r3, [r7, #12]
 8001054:	635a      	str	r2, [r3, #52]	; 0x34

    }

	/* Store error and measurement for later use */
    pid->prevError       = error;
 8001056:	68fb      	ldr	r3, [r7, #12]
 8001058:	697a      	ldr	r2, [r7, #20]
 800105a:	629a      	str	r2, [r3, #40]	; 0x28
    pid->prevMeasurement = measurement;
 800105c:	68fb      	ldr	r3, [r7, #12]
 800105e:	687a      	ldr	r2, [r7, #4]
 8001060:	631a      	str	r2, [r3, #48]	; 0x30

	/* Return controller output */
    return pid->out;
 8001062:	68fb      	ldr	r3, [r7, #12]
 8001064:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8001066:	ee07 3a90 	vmov	s15, r3

}
 800106a:	eeb0 0a67 	vmov.f32	s0, s15
 800106e:	371c      	adds	r7, #28
 8001070:	46bd      	mov	sp, r7
 8001072:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001076:	4770      	bx	lr

08001078 <MX_CRC_Init>:

CRC_HandleTypeDef hcrc;

/* CRC init function */
void MX_CRC_Init(void)
{
 8001078:	b580      	push	{r7, lr}
 800107a:	af00      	add	r7, sp, #0
  /* USER CODE END CRC_Init 0 */

  /* USER CODE BEGIN CRC_Init 1 */

  /* USER CODE END CRC_Init 1 */
  hcrc.Instance = CRC;
 800107c:	4b06      	ldr	r3, [pc, #24]	; (8001098 <MX_CRC_Init+0x20>)
 800107e:	4a07      	ldr	r2, [pc, #28]	; (800109c <MX_CRC_Init+0x24>)
 8001080:	601a      	str	r2, [r3, #0]
  if (HAL_CRC_Init(&hcrc) != HAL_OK)
 8001082:	4805      	ldr	r0, [pc, #20]	; (8001098 <MX_CRC_Init+0x20>)
 8001084:	f001 faf7 	bl	8002676 <HAL_CRC_Init>
 8001088:	4603      	mov	r3, r0
 800108a:	2b00      	cmp	r3, #0
 800108c:	d001      	beq.n	8001092 <MX_CRC_Init+0x1a>
  {
    Error_Handler();
 800108e:	f000 fa59 	bl	8001544 <Error_Handler>
  }
  /* USER CODE BEGIN CRC_Init 2 */

  /* USER CODE END CRC_Init 2 */

}
 8001092:	bf00      	nop
 8001094:	bd80      	pop	{r7, pc}
 8001096:	bf00      	nop
 8001098:	20000374 	.word	0x20000374
 800109c:	40023000 	.word	0x40023000

080010a0 <HAL_CRC_MspInit>:

void HAL_CRC_MspInit(CRC_HandleTypeDef* crcHandle)
{
 80010a0:	b480      	push	{r7}
 80010a2:	b085      	sub	sp, #20
 80010a4:	af00      	add	r7, sp, #0
 80010a6:	6078      	str	r0, [r7, #4]

  if(crcHandle->Instance==CRC)
 80010a8:	687b      	ldr	r3, [r7, #4]
 80010aa:	681b      	ldr	r3, [r3, #0]
 80010ac:	4a0b      	ldr	r2, [pc, #44]	; (80010dc <HAL_CRC_MspInit+0x3c>)
 80010ae:	4293      	cmp	r3, r2
 80010b0:	d10d      	bne.n	80010ce <HAL_CRC_MspInit+0x2e>
  {
  /* USER CODE BEGIN CRC_MspInit 0 */

  /* USER CODE END CRC_MspInit 0 */
    /* CRC clock enable */
    __HAL_RCC_CRC_CLK_ENABLE();
 80010b2:	2300      	movs	r3, #0
 80010b4:	60fb      	str	r3, [r7, #12]
 80010b6:	4b0a      	ldr	r3, [pc, #40]	; (80010e0 <HAL_CRC_MspInit+0x40>)
 80010b8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80010ba:	4a09      	ldr	r2, [pc, #36]	; (80010e0 <HAL_CRC_MspInit+0x40>)
 80010bc:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
 80010c0:	6313      	str	r3, [r2, #48]	; 0x30
 80010c2:	4b07      	ldr	r3, [pc, #28]	; (80010e0 <HAL_CRC_MspInit+0x40>)
 80010c4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80010c6:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 80010ca:	60fb      	str	r3, [r7, #12]
 80010cc:	68fb      	ldr	r3, [r7, #12]
  /* USER CODE BEGIN CRC_MspInit 1 */

  /* USER CODE END CRC_MspInit 1 */
  }
}
 80010ce:	bf00      	nop
 80010d0:	3714      	adds	r7, #20
 80010d2:	46bd      	mov	sp, r7
 80010d4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80010d8:	4770      	bx	lr
 80010da:	bf00      	nop
 80010dc:	40023000 	.word	0x40023000
 80010e0:	40023800 	.word	0x40023800

080010e4 <MX_DMA_Init>:

/**
  * Enable DMA controller clock
  */
void MX_DMA_Init(void)
{
 80010e4:	b580      	push	{r7, lr}
 80010e6:	b082      	sub	sp, #8
 80010e8:	af00      	add	r7, sp, #0

  /* DMA controller clock enable */
  __HAL_RCC_DMA2_CLK_ENABLE();
 80010ea:	2300      	movs	r3, #0
 80010ec:	607b      	str	r3, [r7, #4]
 80010ee:	4b0c      	ldr	r3, [pc, #48]	; (8001120 <MX_DMA_Init+0x3c>)
 80010f0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80010f2:	4a0b      	ldr	r2, [pc, #44]	; (8001120 <MX_DMA_Init+0x3c>)
 80010f4:	f443 0380 	orr.w	r3, r3, #4194304	; 0x400000
 80010f8:	6313      	str	r3, [r2, #48]	; 0x30
 80010fa:	4b09      	ldr	r3, [pc, #36]	; (8001120 <MX_DMA_Init+0x3c>)
 80010fc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80010fe:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 8001102:	607b      	str	r3, [r7, #4]
 8001104:	687b      	ldr	r3, [r7, #4]

  /* DMA interrupt init */
  /* DMA2_Stream2_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(DMA2_Stream2_IRQn, 0, 0);
 8001106:	2200      	movs	r2, #0
 8001108:	2100      	movs	r1, #0
 800110a:	203a      	movs	r0, #58	; 0x3a
 800110c:	f001 fa7d 	bl	800260a <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(DMA2_Stream2_IRQn);
 8001110:	203a      	movs	r0, #58	; 0x3a
 8001112:	f001 fa96 	bl	8002642 <HAL_NVIC_EnableIRQ>

}
 8001116:	bf00      	nop
 8001118:	3708      	adds	r7, #8
 800111a:	46bd      	mov	sp, r7
 800111c:	bd80      	pop	{r7, pc}
 800111e:	bf00      	nop
 8001120:	40023800 	.word	0x40023800

08001124 <MX_GPIO_Init>:
        * Output
        * EVENT_OUT
        * EXTI
*/
void MX_GPIO_Init(void)
{
 8001124:	b580      	push	{r7, lr}
 8001126:	b08a      	sub	sp, #40	; 0x28
 8001128:	af00      	add	r7, sp, #0

  GPIO_InitTypeDef GPIO_InitStruct = {0};
 800112a:	f107 0314 	add.w	r3, r7, #20
 800112e:	2200      	movs	r2, #0
 8001130:	601a      	str	r2, [r3, #0]
 8001132:	605a      	str	r2, [r3, #4]
 8001134:	609a      	str	r2, [r3, #8]
 8001136:	60da      	str	r2, [r3, #12]
 8001138:	611a      	str	r2, [r3, #16]

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOC_CLK_ENABLE();
 800113a:	2300      	movs	r3, #0
 800113c:	613b      	str	r3, [r7, #16]
 800113e:	4b5d      	ldr	r3, [pc, #372]	; (80012b4 <MX_GPIO_Init+0x190>)
 8001140:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001142:	4a5c      	ldr	r2, [pc, #368]	; (80012b4 <MX_GPIO_Init+0x190>)
 8001144:	f043 0304 	orr.w	r3, r3, #4
 8001148:	6313      	str	r3, [r2, #48]	; 0x30
 800114a:	4b5a      	ldr	r3, [pc, #360]	; (80012b4 <MX_GPIO_Init+0x190>)
 800114c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800114e:	f003 0304 	and.w	r3, r3, #4
 8001152:	613b      	str	r3, [r7, #16]
 8001154:	693b      	ldr	r3, [r7, #16]
  __HAL_RCC_GPIOH_CLK_ENABLE();
 8001156:	2300      	movs	r3, #0
 8001158:	60fb      	str	r3, [r7, #12]
 800115a:	4b56      	ldr	r3, [pc, #344]	; (80012b4 <MX_GPIO_Init+0x190>)
 800115c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800115e:	4a55      	ldr	r2, [pc, #340]	; (80012b4 <MX_GPIO_Init+0x190>)
 8001160:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8001164:	6313      	str	r3, [r2, #48]	; 0x30
 8001166:	4b53      	ldr	r3, [pc, #332]	; (80012b4 <MX_GPIO_Init+0x190>)
 8001168:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800116a:	f003 0380 	and.w	r3, r3, #128	; 0x80
 800116e:	60fb      	str	r3, [r7, #12]
 8001170:	68fb      	ldr	r3, [r7, #12]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 8001172:	2300      	movs	r3, #0
 8001174:	60bb      	str	r3, [r7, #8]
 8001176:	4b4f      	ldr	r3, [pc, #316]	; (80012b4 <MX_GPIO_Init+0x190>)
 8001178:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800117a:	4a4e      	ldr	r2, [pc, #312]	; (80012b4 <MX_GPIO_Init+0x190>)
 800117c:	f043 0301 	orr.w	r3, r3, #1
 8001180:	6313      	str	r3, [r2, #48]	; 0x30
 8001182:	4b4c      	ldr	r3, [pc, #304]	; (80012b4 <MX_GPIO_Init+0x190>)
 8001184:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001186:	f003 0301 	and.w	r3, r3, #1
 800118a:	60bb      	str	r3, [r7, #8]
 800118c:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 800118e:	2300      	movs	r3, #0
 8001190:	607b      	str	r3, [r7, #4]
 8001192:	4b48      	ldr	r3, [pc, #288]	; (80012b4 <MX_GPIO_Init+0x190>)
 8001194:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001196:	4a47      	ldr	r2, [pc, #284]	; (80012b4 <MX_GPIO_Init+0x190>)
 8001198:	f043 0302 	orr.w	r3, r3, #2
 800119c:	6313      	str	r3, [r2, #48]	; 0x30
 800119e:	4b45      	ldr	r3, [pc, #276]	; (80012b4 <MX_GPIO_Init+0x190>)
 80011a0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80011a2:	f003 0302 	and.w	r3, r3, #2
 80011a6:	607b      	str	r3, [r7, #4]
 80011a8:	687b      	ldr	r3, [r7, #4]

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_13, GPIO_PIN_SET);
 80011aa:	2201      	movs	r2, #1
 80011ac:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 80011b0:	4841      	ldr	r0, [pc, #260]	; (80012b8 <MX_GPIO_Init+0x194>)
 80011b2:	f001 ff71 	bl	8003098 <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOA, GPIO_PIN_2|DISP_DC_RS_Pin, GPIO_PIN_RESET);
 80011b6:	2200      	movs	r2, #0
 80011b8:	2144      	movs	r1, #68	; 0x44
 80011ba:	4840      	ldr	r0, [pc, #256]	; (80012bc <MX_GPIO_Init+0x198>)
 80011bc:	f001 ff6c 	bl	8003098 <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOA, DISP_RESET_Pin|DISP__CS_Pin, GPIO_PIN_SET);
 80011c0:	2201      	movs	r2, #1
 80011c2:	2118      	movs	r1, #24
 80011c4:	483d      	ldr	r0, [pc, #244]	; (80012bc <MX_GPIO_Init+0x198>)
 80011c6:	f001 ff67 	bl	8003098 <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOB, GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_10|T_CS_Pin
 80011ca:	2200      	movs	r2, #0
 80011cc:	f241 71a6 	movw	r1, #6054	; 0x17a6
 80011d0:	483b      	ldr	r0, [pc, #236]	; (80012c0 <MX_GPIO_Init+0x19c>)
 80011d2:	f001 ff61 	bl	8003098 <HAL_GPIO_WritePin>
                          |TEMP_CS_Pin|SCALE_RIGHT_CLK_Pin|SCALE_LEFT_DIN_Pin|SCALE_LEFT_CLK_Pin, GPIO_PIN_RESET);

  /*Configure GPIO pin : PC13 */
  GPIO_InitStruct.Pin = GPIO_PIN_13;
 80011d6:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 80011da:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80011dc:	2301      	movs	r3, #1
 80011de:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_PULLUP;
 80011e0:	2301      	movs	r3, #1
 80011e2:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80011e4:	2300      	movs	r3, #0
 80011e6:	623b      	str	r3, [r7, #32]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80011e8:	f107 0314 	add.w	r3, r7, #20
 80011ec:	4619      	mov	r1, r3
 80011ee:	4832      	ldr	r0, [pc, #200]	; (80012b8 <MX_GPIO_Init+0x194>)
 80011f0:	f001 fdce 	bl	8002d90 <HAL_GPIO_Init>

  /*Configure GPIO pins : PA2 PAPin */
  GPIO_InitStruct.Pin = GPIO_PIN_2|DISP_DC_RS_Pin;
 80011f4:	2344      	movs	r3, #68	; 0x44
 80011f6:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80011f8:	2301      	movs	r3, #1
 80011fa:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80011fc:	2300      	movs	r3, #0
 80011fe:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001200:	2300      	movs	r3, #0
 8001202:	623b      	str	r3, [r7, #32]
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001204:	f107 0314 	add.w	r3, r7, #20
 8001208:	4619      	mov	r1, r3
 800120a:	482c      	ldr	r0, [pc, #176]	; (80012bc <MX_GPIO_Init+0x198>)
 800120c:	f001 fdc0 	bl	8002d90 <HAL_GPIO_Init>

  /*Configure GPIO pins : PAPin PAPin */
  GPIO_InitStruct.Pin = DISP_RESET_Pin|DISP__CS_Pin;
 8001210:	2318      	movs	r3, #24
 8001212:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001214:	2301      	movs	r3, #1
 8001216:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_PULLUP;
 8001218:	2301      	movs	r3, #1
 800121a:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 800121c:	2300      	movs	r3, #0
 800121e:	623b      	str	r3, [r7, #32]
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001220:	f107 0314 	add.w	r3, r7, #20
 8001224:	4619      	mov	r1, r3
 8001226:	4825      	ldr	r0, [pc, #148]	; (80012bc <MX_GPIO_Init+0x198>)
 8001228:	f001 fdb2 	bl	8002d90 <HAL_GPIO_Init>

  /*Configure GPIO pins : PB1 PBPin PBPin PBPin
                           PBPin PBPin */
  GPIO_InitStruct.Pin = GPIO_PIN_1|T_CS_Pin|TEMP_CS_Pin|SCALE_RIGHT_CLK_Pin
 800122c:	f241 33a2 	movw	r3, #5026	; 0x13a2
 8001230:	617b      	str	r3, [r7, #20]
                          |SCALE_LEFT_DIN_Pin|SCALE_LEFT_CLK_Pin;
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001232:	2301      	movs	r3, #1
 8001234:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001236:	2300      	movs	r3, #0
 8001238:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 800123a:	2300      	movs	r3, #0
 800123c:	623b      	str	r3, [r7, #32]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 800123e:	f107 0314 	add.w	r3, r7, #20
 8001242:	4619      	mov	r1, r3
 8001244:	481e      	ldr	r0, [pc, #120]	; (80012c0 <MX_GPIO_Init+0x19c>)
 8001246:	f001 fda3 	bl	8002d90 <HAL_GPIO_Init>

  /*Configure GPIO pins : PB2 PB10 */
  GPIO_InitStruct.Pin = GPIO_PIN_2|GPIO_PIN_10;
 800124a:	f240 4304 	movw	r3, #1028	; 0x404
 800124e:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001250:	2301      	movs	r3, #1
 8001252:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_PULLDOWN;
 8001254:	2302      	movs	r3, #2
 8001256:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001258:	2300      	movs	r3, #0
 800125a:	623b      	str	r3, [r7, #32]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 800125c:	f107 0314 	add.w	r3, r7, #20
 8001260:	4619      	mov	r1, r3
 8001262:	4817      	ldr	r0, [pc, #92]	; (80012c0 <MX_GPIO_Init+0x19c>)
 8001264:	f001 fd94 	bl	8002d90 <HAL_GPIO_Init>

  /*Configure GPIO pin : PtPin */
  GPIO_InitStruct.Pin = T_IRQ_Pin;
 8001268:	f44f 7380 	mov.w	r3, #256	; 0x100
 800126c:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_IT_FALLING;
 800126e:	f44f 1304 	mov.w	r3, #2162688	; 0x210000
 8001272:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_PULLUP;
 8001274:	2301      	movs	r3, #1
 8001276:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(T_IRQ_GPIO_Port, &GPIO_InitStruct);
 8001278:	f107 0314 	add.w	r3, r7, #20
 800127c:	4619      	mov	r1, r3
 800127e:	480f      	ldr	r0, [pc, #60]	; (80012bc <MX_GPIO_Init+0x198>)
 8001280:	f001 fd86 	bl	8002d90 <HAL_GPIO_Init>

  /*Configure GPIO pin : PtPin */
  GPIO_InitStruct.Pin = SCALE_RIGHT_DIN_Pin;
 8001284:	2340      	movs	r3, #64	; 0x40
 8001286:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 8001288:	2300      	movs	r3, #0
 800128a:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800128c:	2300      	movs	r3, #0
 800128e:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(SCALE_RIGHT_DIN_GPIO_Port, &GPIO_InitStruct);
 8001290:	f107 0314 	add.w	r3, r7, #20
 8001294:	4619      	mov	r1, r3
 8001296:	480a      	ldr	r0, [pc, #40]	; (80012c0 <MX_GPIO_Init+0x19c>)
 8001298:	f001 fd7a 	bl	8002d90 <HAL_GPIO_Init>

  /* EXTI interrupt init*/
  HAL_NVIC_SetPriority(EXTI9_5_IRQn, 0, 0);
 800129c:	2200      	movs	r2, #0
 800129e:	2100      	movs	r1, #0
 80012a0:	2017      	movs	r0, #23
 80012a2:	f001 f9b2 	bl	800260a <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(EXTI9_5_IRQn);
 80012a6:	2017      	movs	r0, #23
 80012a8:	f001 f9cb 	bl	8002642 <HAL_NVIC_EnableIRQ>

}
 80012ac:	bf00      	nop
 80012ae:	3728      	adds	r7, #40	; 0x28
 80012b0:	46bd      	mov	sp, r7
 80012b2:	bd80      	pop	{r7, pc}
 80012b4:	40023800 	.word	0x40023800
 80012b8:	40020800 	.word	0x40020800
 80012bc:	40020000 	.word	0x40020000
 80012c0:	40020400 	.word	0x40020400

080012c4 <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 80012c4:	b580      	push	{r7, lr}
 80012c6:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN 1 */
	InitPIDController();
 80012c8:	f000 f8a4 	bl	8001414 <InitPIDController>
  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 80012cc:	f001 f82c 	bl	8002328 <HAL_Init>
  /* USER CODE BEGIN Init */

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 80012d0:	f000 f830 	bl	8001334 <SystemClock_Config>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 80012d4:	f7ff ff26 	bl	8001124 <MX_GPIO_Init>
  MX_DMA_Init();
 80012d8:	f7ff ff04 	bl	80010e4 <MX_DMA_Init>
  MX_SPI1_Init();
 80012dc:	f000 f938 	bl	8001550 <MX_SPI1_Init>
  MX_SPI2_Init();
 80012e0:	f000 f96e 	bl	80015c0 <MX_SPI2_Init>
  MX_SPI3_Init();
 80012e4:	f000 f9a2 	bl	800162c <MX_SPI3_Init>
  MX_TIM2_Init();
 80012e8:	f000 fc16 	bl	8001b18 <MX_TIM2_Init>
  MX_CRC_Init();
 80012ec:	f7ff fec4 	bl	8001078 <MX_CRC_Init>
  MX_TIM3_Init();
 80012f0:	f000 fc60 	bl	8001bb4 <MX_TIM3_Init>
  MX_TIM5_Init();
 80012f4:	f000 fcac 	bl	8001c50 <MX_TIM5_Init>
  MX_USB_DEVICE_Init();
 80012f8:	f010 f8dc 	bl	80114b4 <MX_USB_DEVICE_Init>
  MX_TouchGFX_Init();
 80012fc:	f009 f92a 	bl	800a554 <MX_TouchGFX_Init>
  /* USER CODE BEGIN 2 */

//Start Timers
  HAL_TIM_Base_Start_IT(&htim2);
 8001300:	4809      	ldr	r0, [pc, #36]	; (8001328 <main+0x64>)
 8001302:	f004 fcf5 	bl	8005cf0 <HAL_TIM_Base_Start_IT>
  HAL_TIM_Base_Start_IT(&htim3);
 8001306:	4809      	ldr	r0, [pc, #36]	; (800132c <main+0x68>)
 8001308:	f004 fcf2 	bl	8005cf0 <HAL_TIM_Base_Start_IT>
  HAL_TIM_PWM_Start(&htim5,TIM_CHANNEL_1);
 800130c:	2100      	movs	r1, #0
 800130e:	4808      	ldr	r0, [pc, #32]	; (8001330 <main+0x6c>)
 8001310:	f004 fda0 	bl	8005e54 <HAL_TIM_PWM_Start>

 //Initialize own modules
   Init_LCD();
 8001314:	f000 fe0e 	bl	8001f34 <Init_LCD>
   XPT2046_Init();
 8001318:	f007 f894 	bl	8008444 <XPT2046_Init>

   InitLoadCells();
 800131c:	f000 f872 	bl	8001404 <InitLoadCells>
		  ReadSensorData=false;
	  }
#endif
    /* USER CODE END WHILE */

  MX_TouchGFX_Process();
 8001320:	f009 f920 	bl	800a564 <MX_TouchGFX_Process>
 8001324:	e7fc      	b.n	8001320 <main+0x5c>
 8001326:	bf00      	nop
 8001328:	2000053c 	.word	0x2000053c
 800132c:	20000584 	.word	0x20000584
 8001330:	200005cc 	.word	0x200005cc

08001334 <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 8001334:	b580      	push	{r7, lr}
 8001336:	b094      	sub	sp, #80	; 0x50
 8001338:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 800133a:	f107 0320 	add.w	r3, r7, #32
 800133e:	2230      	movs	r2, #48	; 0x30
 8001340:	2100      	movs	r1, #0
 8001342:	4618      	mov	r0, r3
 8001344:	f029 fec3 	bl	802b0ce <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8001348:	f107 030c 	add.w	r3, r7, #12
 800134c:	2200      	movs	r2, #0
 800134e:	601a      	str	r2, [r3, #0]
 8001350:	605a      	str	r2, [r3, #4]
 8001352:	609a      	str	r2, [r3, #8]
 8001354:	60da      	str	r2, [r3, #12]
 8001356:	611a      	str	r2, [r3, #16]

  /** Configure the main internal regulator output voltage
  */
  __HAL_RCC_PWR_CLK_ENABLE();
 8001358:	2300      	movs	r3, #0
 800135a:	60bb      	str	r3, [r7, #8]
 800135c:	4b27      	ldr	r3, [pc, #156]	; (80013fc <SystemClock_Config+0xc8>)
 800135e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001360:	4a26      	ldr	r2, [pc, #152]	; (80013fc <SystemClock_Config+0xc8>)
 8001362:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8001366:	6413      	str	r3, [r2, #64]	; 0x40
 8001368:	4b24      	ldr	r3, [pc, #144]	; (80013fc <SystemClock_Config+0xc8>)
 800136a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800136c:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8001370:	60bb      	str	r3, [r7, #8]
 8001372:	68bb      	ldr	r3, [r7, #8]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8001374:	2300      	movs	r3, #0
 8001376:	607b      	str	r3, [r7, #4]
 8001378:	4b21      	ldr	r3, [pc, #132]	; (8001400 <SystemClock_Config+0xcc>)
 800137a:	681b      	ldr	r3, [r3, #0]
 800137c:	4a20      	ldr	r2, [pc, #128]	; (8001400 <SystemClock_Config+0xcc>)
 800137e:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 8001382:	6013      	str	r3, [r2, #0]
 8001384:	4b1e      	ldr	r3, [pc, #120]	; (8001400 <SystemClock_Config+0xcc>)
 8001386:	681b      	ldr	r3, [r3, #0]
 8001388:	f403 4340 	and.w	r3, r3, #49152	; 0xc000
 800138c:	607b      	str	r3, [r7, #4]
 800138e:	687b      	ldr	r3, [r7, #4]

  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 8001390:	2301      	movs	r3, #1
 8001392:	623b      	str	r3, [r7, #32]
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 8001394:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 8001398:	627b      	str	r3, [r7, #36]	; 0x24
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 800139a:	2302      	movs	r3, #2
 800139c:	63bb      	str	r3, [r7, #56]	; 0x38
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 800139e:	f44f 0380 	mov.w	r3, #4194304	; 0x400000
 80013a2:	63fb      	str	r3, [r7, #60]	; 0x3c
  RCC_OscInitStruct.PLL.PLLM = 25;
 80013a4:	2319      	movs	r3, #25
 80013a6:	643b      	str	r3, [r7, #64]	; 0x40
  RCC_OscInitStruct.PLL.PLLN = 192;
 80013a8:	23c0      	movs	r3, #192	; 0xc0
 80013aa:	647b      	str	r3, [r7, #68]	; 0x44
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 80013ac:	2302      	movs	r3, #2
 80013ae:	64bb      	str	r3, [r7, #72]	; 0x48
  RCC_OscInitStruct.PLL.PLLQ = 4;
 80013b0:	2304      	movs	r3, #4
 80013b2:	64fb      	str	r3, [r7, #76]	; 0x4c
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 80013b4:	f107 0320 	add.w	r3, r7, #32
 80013b8:	4618      	mov	r0, r3
 80013ba:	f003 f8fb 	bl	80045b4 <HAL_RCC_OscConfig>
 80013be:	4603      	mov	r3, r0
 80013c0:	2b00      	cmp	r3, #0
 80013c2:	d001      	beq.n	80013c8 <SystemClock_Config+0x94>
  {
    Error_Handler();
 80013c4:	f000 f8be 	bl	8001544 <Error_Handler>
  }

  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 80013c8:	230f      	movs	r3, #15
 80013ca:	60fb      	str	r3, [r7, #12]
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 80013cc:	2302      	movs	r3, #2
 80013ce:	613b      	str	r3, [r7, #16]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 80013d0:	2300      	movs	r3, #0
 80013d2:	617b      	str	r3, [r7, #20]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 80013d4:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 80013d8:	61bb      	str	r3, [r7, #24]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 80013da:	2300      	movs	r3, #0
 80013dc:	61fb      	str	r3, [r7, #28]

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_3) != HAL_OK)
 80013de:	f107 030c 	add.w	r3, r7, #12
 80013e2:	2103      	movs	r1, #3
 80013e4:	4618      	mov	r0, r3
 80013e6:	f003 fb5d 	bl	8004aa4 <HAL_RCC_ClockConfig>
 80013ea:	4603      	mov	r3, r0
 80013ec:	2b00      	cmp	r3, #0
 80013ee:	d001      	beq.n	80013f4 <SystemClock_Config+0xc0>
  {
    Error_Handler();
 80013f0:	f000 f8a8 	bl	8001544 <Error_Handler>
  }
}
 80013f4:	bf00      	nop
 80013f6:	3750      	adds	r7, #80	; 0x50
 80013f8:	46bd      	mov	sp, r7
 80013fa:	bd80      	pop	{r7, pc}
 80013fc:	40023800 	.word	0x40023800
 8001400:	40007000 	.word	0x40007000

08001404 <InitLoadCells>:
  * @brief  Initialization the left and right loadcells
  * @param None
  * @retval None
  */

void InitLoadCells(void){
 8001404:	b480      	push	{r7}
 8001406:	af00      	add	r7, sp, #0
	hx711_init(&loadcell_left,SCALE_LEFT_CLK_GPIO_Port,SCALE_LEFT_CLK_Pin, SCALE_LEFT_DIN_GPIO_Port,SCALE_LEFT_DIN_Pin);
	set_scale(&loadcell_left,LEFT_SCALING,1);
	set_gain(&loadcell_left, 128, 32);
	tare_all(&loadcell_left,10);
#endif
}
 8001408:	bf00      	nop
 800140a:	46bd      	mov	sp, r7
 800140c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001410:	4770      	bx	lr
	...

08001414 <InitPIDController>:

void InitPIDController(void){
 8001414:	b580      	push	{r7, lr}
 8001416:	af00      	add	r7, sp, #0

	temp_controller.Kd=2500;
 8001418:	4b10      	ldr	r3, [pc, #64]	; (800145c <InitPIDController+0x48>)
 800141a:	4a11      	ldr	r2, [pc, #68]	; (8001460 <InitPIDController+0x4c>)
 800141c:	609a      	str	r2, [r3, #8]
	  temp_controller.Ki=150;
 800141e:	4b0f      	ldr	r3, [pc, #60]	; (800145c <InitPIDController+0x48>)
 8001420:	4a10      	ldr	r2, [pc, #64]	; (8001464 <InitPIDController+0x50>)
 8001422:	605a      	str	r2, [r3, #4]
	  temp_controller.Kp=800;
 8001424:	4b0d      	ldr	r3, [pc, #52]	; (800145c <InitPIDController+0x48>)
 8001426:	4a10      	ldr	r2, [pc, #64]	; (8001468 <InitPIDController+0x54>)
 8001428:	601a      	str	r2, [r3, #0]
	  temp_controller.T=0.25;
 800142a:	4b0c      	ldr	r3, [pc, #48]	; (800145c <InitPIDController+0x48>)
 800142c:	f04f 527a 	mov.w	r2, #1048576000	; 0x3e800000
 8001430:	621a      	str	r2, [r3, #32]
	  temp_controller.tau=0.1;
 8001432:	4b0a      	ldr	r3, [pc, #40]	; (800145c <InitPIDController+0x48>)
 8001434:	4a0d      	ldr	r2, [pc, #52]	; (800146c <InitPIDController+0x58>)
 8001436:	60da      	str	r2, [r3, #12]
	  temp_controller.limMax=4999;
 8001438:	4b08      	ldr	r3, [pc, #32]	; (800145c <InitPIDController+0x48>)
 800143a:	4a0d      	ldr	r2, [pc, #52]	; (8001470 <InitPIDController+0x5c>)
 800143c:	615a      	str	r2, [r3, #20]
	  temp_controller.limMin=0;
 800143e:	4b07      	ldr	r3, [pc, #28]	; (800145c <InitPIDController+0x48>)
 8001440:	f04f 0200 	mov.w	r2, #0
 8001444:	611a      	str	r2, [r3, #16]
	  temp_controller.limMaxInt=300;
 8001446:	4b05      	ldr	r3, [pc, #20]	; (800145c <InitPIDController+0x48>)
 8001448:	4a0a      	ldr	r2, [pc, #40]	; (8001474 <InitPIDController+0x60>)
 800144a:	61da      	str	r2, [r3, #28]
	  temp_controller.limMinInt=-4999;
 800144c:	4b03      	ldr	r3, [pc, #12]	; (800145c <InitPIDController+0x48>)
 800144e:	4a0a      	ldr	r2, [pc, #40]	; (8001478 <InitPIDController+0x64>)
 8001450:	619a      	str	r2, [r3, #24]
	  PIDController_Init(&temp_controller);
 8001452:	4802      	ldr	r0, [pc, #8]	; (800145c <InitPIDController+0x48>)
 8001454:	f7ff fd2e 	bl	8000eb4 <PIDController_Init>

}
 8001458:	bf00      	nop
 800145a:	bd80      	pop	{r7, pc}
 800145c:	2000037c 	.word	0x2000037c
 8001460:	451c4000 	.word	0x451c4000
 8001464:	43160000 	.word	0x43160000
 8001468:	44480000 	.word	0x44480000
 800146c:	3dcccccd 	.word	0x3dcccccd
 8001470:	459c3800 	.word	0x459c3800
 8001474:	43960000 	.word	0x43960000
 8001478:	c59c3800 	.word	0xc59c3800

0800147c <HAL_TIM_PeriodElapsedCallback>:
extern void touchgfxSignalVSync(void);



void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
{
 800147c:	b580      	push	{r7, lr}
 800147e:	b084      	sub	sp, #16
 8001480:	af02      	add	r7, sp, #8
 8001482:	6078      	str	r0, [r7, #4]
	if (htim->Instance == TIM2) {
 8001484:	687b      	ldr	r3, [r7, #4]
 8001486:	681b      	ldr	r3, [r3, #0]
 8001488:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800148c:	d101      	bne.n	8001492 <HAL_TIM_PeriodElapsedCallback+0x16>
		touchgfxSignalVSync();
 800148e:	f00f fd81 	bl	8010f94 <touchgfxSignalVSync>
	}
	if (htim->Instance == TIM1) {

	}
	//making a timer interrupt every 0.25 seconds
	if (htim->Instance == TIM3) {
 8001492:	687b      	ldr	r3, [r7, #4]
 8001494:	681b      	ldr	r3, [r3, #0]
 8001496:	4a21      	ldr	r2, [pc, #132]	; (800151c <HAL_TIM_PeriodElapsedCallback+0xa0>)
 8001498:	4293      	cmp	r3, r2
 800149a:	d13a      	bne.n	8001512 <HAL_TIM_PeriodElapsedCallback+0x96>
		 temperature=Max6675_Read_Temp();
 800149c:	f000 fcfc 	bl	8001e98 <Max6675_Read_Temp>
 80014a0:	eef0 7a40 	vmov.f32	s15, s0
 80014a4:	4b1e      	ldr	r3, [pc, #120]	; (8001520 <HAL_TIM_PeriodElapsedCallback+0xa4>)
 80014a6:	edc3 7a00 	vstr	s15, [r3]
		 control=PIDController_Update(&temp_controller,goal_temp,temperature);
 80014aa:	4b1e      	ldr	r3, [pc, #120]	; (8001524 <HAL_TIM_PeriodElapsedCallback+0xa8>)
 80014ac:	edd3 7a00 	vldr	s15, [r3]
 80014b0:	4b1b      	ldr	r3, [pc, #108]	; (8001520 <HAL_TIM_PeriodElapsedCallback+0xa4>)
 80014b2:	ed93 7a00 	vldr	s14, [r3]
 80014b6:	eef0 0a47 	vmov.f32	s1, s14
 80014ba:	eeb0 0a67 	vmov.f32	s0, s15
 80014be:	481a      	ldr	r0, [pc, #104]	; (8001528 <HAL_TIM_PeriodElapsedCallback+0xac>)
 80014c0:	f7ff fd16 	bl	8000ef0 <PIDController_Update>
 80014c4:	eef0 7a40 	vmov.f32	s15, s0
 80014c8:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 80014cc:	ee17 2a90 	vmov	r2, s15
 80014d0:	4b16      	ldr	r3, [pc, #88]	; (800152c <HAL_TIM_PeriodElapsedCallback+0xb0>)
 80014d2:	601a      	str	r2, [r3, #0]
		 __HAL_TIM_SET_COMPARE(&htim5, TIM_CHANNEL_1, control);
 80014d4:	4b16      	ldr	r3, [pc, #88]	; (8001530 <HAL_TIM_PeriodElapsedCallback+0xb4>)
 80014d6:	681b      	ldr	r3, [r3, #0]
 80014d8:	4a14      	ldr	r2, [pc, #80]	; (800152c <HAL_TIM_PeriodElapsedCallback+0xb0>)
 80014da:	6812      	ldr	r2, [r2, #0]
 80014dc:	635a      	str	r2, [r3, #52]	; 0x34
		 ReadSensorData=true;
 80014de:	4b15      	ldr	r3, [pc, #84]	; (8001534 <HAL_TIM_PeriodElapsedCallback+0xb8>)
 80014e0:	2201      	movs	r2, #1
 80014e2:	701a      	strb	r2, [r3, #0]
		 sprintf((char*)buffer, "%.2f;%ld\n", temperature,weight);
 80014e4:	4b0e      	ldr	r3, [pc, #56]	; (8001520 <HAL_TIM_PeriodElapsedCallback+0xa4>)
 80014e6:	681b      	ldr	r3, [r3, #0]
 80014e8:	4618      	mov	r0, r3
 80014ea:	f7ff f835 	bl	8000558 <__aeabi_f2d>
 80014ee:	4602      	mov	r2, r0
 80014f0:	460b      	mov	r3, r1
 80014f2:	4911      	ldr	r1, [pc, #68]	; (8001538 <HAL_TIM_PeriodElapsedCallback+0xbc>)
 80014f4:	6809      	ldr	r1, [r1, #0]
 80014f6:	9100      	str	r1, [sp, #0]
 80014f8:	4910      	ldr	r1, [pc, #64]	; (800153c <HAL_TIM_PeriodElapsedCallback+0xc0>)
 80014fa:	4811      	ldr	r0, [pc, #68]	; (8001540 <HAL_TIM_PeriodElapsedCallback+0xc4>)
 80014fc:	f029 fd84 	bl	802b008 <siprintf>
		 CDC_Transmit_FS((uint8_t*)buffer, strlen((const char*)buffer));
 8001500:	480f      	ldr	r0, [pc, #60]	; (8001540 <HAL_TIM_PeriodElapsedCallback+0xc4>)
 8001502:	f7fe febd 	bl	8000280 <strlen>
 8001506:	4603      	mov	r3, r0
 8001508:	b29b      	uxth	r3, r3
 800150a:	4619      	mov	r1, r3
 800150c:	480c      	ldr	r0, [pc, #48]	; (8001540 <HAL_TIM_PeriodElapsedCallback+0xc4>)
 800150e:	f010 f88f 	bl	8011630 <CDC_Transmit_FS>

	}
}
 8001512:	bf00      	nop
 8001514:	3708      	adds	r7, #8
 8001516:	46bd      	mov	sp, r7
 8001518:	bd80      	pop	{r7, pc}
 800151a:	bf00      	nop
 800151c:	40000400 	.word	0x40000400
 8001520:	200003c4 	.word	0x200003c4
 8001524:	20000004 	.word	0x20000004
 8001528:	2000037c 	.word	0x2000037c
 800152c:	200003c8 	.word	0x200003c8
 8001530:	200005cc 	.word	0x200005cc
 8001534:	20000008 	.word	0x20000008
 8001538:	200003cc 	.word	0x200003cc
 800153c:	0802d1c0 	.word	0x0802d1c0
 8001540:	200003b4 	.word	0x200003b4

08001544 <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 8001544:	b480      	push	{r7}
 8001546:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting special-purpose register PRIMASK.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 8001548:	b672      	cpsid	i
}
 800154a:	bf00      	nop
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  while (1)
 800154c:	e7fe      	b.n	800154c <Error_Handler+0x8>
	...

08001550 <MX_SPI1_Init>:
SPI_HandleTypeDef hspi3;
DMA_HandleTypeDef hdma_spi1_tx;

/* SPI1 init function */
void MX_SPI1_Init(void)
{
 8001550:	b580      	push	{r7, lr}
 8001552:	af00      	add	r7, sp, #0
  /* USER CODE END SPI1_Init 0 */

  /* USER CODE BEGIN SPI1_Init 1 */

  /* USER CODE END SPI1_Init 1 */
  hspi1.Instance = SPI1;
 8001554:	4b18      	ldr	r3, [pc, #96]	; (80015b8 <MX_SPI1_Init+0x68>)
 8001556:	4a19      	ldr	r2, [pc, #100]	; (80015bc <MX_SPI1_Init+0x6c>)
 8001558:	601a      	str	r2, [r3, #0]
  hspi1.Init.Mode = SPI_MODE_MASTER;
 800155a:	4b17      	ldr	r3, [pc, #92]	; (80015b8 <MX_SPI1_Init+0x68>)
 800155c:	f44f 7282 	mov.w	r2, #260	; 0x104
 8001560:	605a      	str	r2, [r3, #4]
  hspi1.Init.Direction = SPI_DIRECTION_1LINE;
 8001562:	4b15      	ldr	r3, [pc, #84]	; (80015b8 <MX_SPI1_Init+0x68>)
 8001564:	f44f 4200 	mov.w	r2, #32768	; 0x8000
 8001568:	609a      	str	r2, [r3, #8]
  hspi1.Init.DataSize = SPI_DATASIZE_8BIT;
 800156a:	4b13      	ldr	r3, [pc, #76]	; (80015b8 <MX_SPI1_Init+0x68>)
 800156c:	2200      	movs	r2, #0
 800156e:	60da      	str	r2, [r3, #12]
  hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
 8001570:	4b11      	ldr	r3, [pc, #68]	; (80015b8 <MX_SPI1_Init+0x68>)
 8001572:	2200      	movs	r2, #0
 8001574:	611a      	str	r2, [r3, #16]
  hspi1.Init.CLKPhase = SPI_PHASE_1EDGE;
 8001576:	4b10      	ldr	r3, [pc, #64]	; (80015b8 <MX_SPI1_Init+0x68>)
 8001578:	2200      	movs	r2, #0
 800157a:	615a      	str	r2, [r3, #20]
  hspi1.Init.NSS = SPI_NSS_SOFT;
 800157c:	4b0e      	ldr	r3, [pc, #56]	; (80015b8 <MX_SPI1_Init+0x68>)
 800157e:	f44f 7200 	mov.w	r2, #512	; 0x200
 8001582:	619a      	str	r2, [r3, #24]
  hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 8001584:	4b0c      	ldr	r3, [pc, #48]	; (80015b8 <MX_SPI1_Init+0x68>)
 8001586:	2200      	movs	r2, #0
 8001588:	61da      	str	r2, [r3, #28]
  hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 800158a:	4b0b      	ldr	r3, [pc, #44]	; (80015b8 <MX_SPI1_Init+0x68>)
 800158c:	2200      	movs	r2, #0
 800158e:	621a      	str	r2, [r3, #32]
  hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 8001590:	4b09      	ldr	r3, [pc, #36]	; (80015b8 <MX_SPI1_Init+0x68>)
 8001592:	2200      	movs	r2, #0
 8001594:	625a      	str	r2, [r3, #36]	; 0x24
  hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 8001596:	4b08      	ldr	r3, [pc, #32]	; (80015b8 <MX_SPI1_Init+0x68>)
 8001598:	2200      	movs	r2, #0
 800159a:	629a      	str	r2, [r3, #40]	; 0x28
  hspi1.Init.CRCPolynomial = 10;
 800159c:	4b06      	ldr	r3, [pc, #24]	; (80015b8 <MX_SPI1_Init+0x68>)
 800159e:	220a      	movs	r2, #10
 80015a0:	62da      	str	r2, [r3, #44]	; 0x2c
  if (HAL_SPI_Init(&hspi1) != HAL_OK)
 80015a2:	4805      	ldr	r0, [pc, #20]	; (80015b8 <MX_SPI1_Init+0x68>)
 80015a4:	f003 fc36 	bl	8004e14 <HAL_SPI_Init>
 80015a8:	4603      	mov	r3, r0
 80015aa:	2b00      	cmp	r3, #0
 80015ac:	d001      	beq.n	80015b2 <MX_SPI1_Init+0x62>
  {
    Error_Handler();
 80015ae:	f7ff ffc9 	bl	8001544 <Error_Handler>
  }
  /* USER CODE BEGIN SPI1_Init 2 */

  /* USER CODE END SPI1_Init 2 */

}
 80015b2:	bf00      	nop
 80015b4:	bd80      	pop	{r7, pc}
 80015b6:	bf00      	nop
 80015b8:	200003d0 	.word	0x200003d0
 80015bc:	40013000 	.word	0x40013000

080015c0 <MX_SPI2_Init>:
/* SPI2 init function */
void MX_SPI2_Init(void)
{
 80015c0:	b580      	push	{r7, lr}
 80015c2:	af00      	add	r7, sp, #0
  /* USER CODE END SPI2_Init 0 */

  /* USER CODE BEGIN SPI2_Init 1 */

  /* USER CODE END SPI2_Init 1 */
  hspi2.Instance = SPI2;
 80015c4:	4b17      	ldr	r3, [pc, #92]	; (8001624 <MX_SPI2_Init+0x64>)
 80015c6:	4a18      	ldr	r2, [pc, #96]	; (8001628 <MX_SPI2_Init+0x68>)
 80015c8:	601a      	str	r2, [r3, #0]
  hspi2.Init.Mode = SPI_MODE_MASTER;
 80015ca:	4b16      	ldr	r3, [pc, #88]	; (8001624 <MX_SPI2_Init+0x64>)
 80015cc:	f44f 7282 	mov.w	r2, #260	; 0x104
 80015d0:	605a      	str	r2, [r3, #4]
  hspi2.Init.Direction = SPI_DIRECTION_2LINES;
 80015d2:	4b14      	ldr	r3, [pc, #80]	; (8001624 <MX_SPI2_Init+0x64>)
 80015d4:	2200      	movs	r2, #0
 80015d6:	609a      	str	r2, [r3, #8]
  hspi2.Init.DataSize = SPI_DATASIZE_8BIT;
 80015d8:	4b12      	ldr	r3, [pc, #72]	; (8001624 <MX_SPI2_Init+0x64>)
 80015da:	2200      	movs	r2, #0
 80015dc:	60da      	str	r2, [r3, #12]
  hspi2.Init.CLKPolarity = SPI_POLARITY_LOW;
 80015de:	4b11      	ldr	r3, [pc, #68]	; (8001624 <MX_SPI2_Init+0x64>)
 80015e0:	2200      	movs	r2, #0
 80015e2:	611a      	str	r2, [r3, #16]
  hspi2.Init.CLKPhase = SPI_PHASE_1EDGE;
 80015e4:	4b0f      	ldr	r3, [pc, #60]	; (8001624 <MX_SPI2_Init+0x64>)
 80015e6:	2200      	movs	r2, #0
 80015e8:	615a      	str	r2, [r3, #20]
  hspi2.Init.NSS = SPI_NSS_SOFT;
 80015ea:	4b0e      	ldr	r3, [pc, #56]	; (8001624 <MX_SPI2_Init+0x64>)
 80015ec:	f44f 7200 	mov.w	r2, #512	; 0x200
 80015f0:	619a      	str	r2, [r3, #24]
  hspi2.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_32;
 80015f2:	4b0c      	ldr	r3, [pc, #48]	; (8001624 <MX_SPI2_Init+0x64>)
 80015f4:	2220      	movs	r2, #32
 80015f6:	61da      	str	r2, [r3, #28]
  hspi2.Init.FirstBit = SPI_FIRSTBIT_MSB;
 80015f8:	4b0a      	ldr	r3, [pc, #40]	; (8001624 <MX_SPI2_Init+0x64>)
 80015fa:	2200      	movs	r2, #0
 80015fc:	621a      	str	r2, [r3, #32]
  hspi2.Init.TIMode = SPI_TIMODE_DISABLE;
 80015fe:	4b09      	ldr	r3, [pc, #36]	; (8001624 <MX_SPI2_Init+0x64>)
 8001600:	2200      	movs	r2, #0
 8001602:	625a      	str	r2, [r3, #36]	; 0x24
  hspi2.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 8001604:	4b07      	ldr	r3, [pc, #28]	; (8001624 <MX_SPI2_Init+0x64>)
 8001606:	2200      	movs	r2, #0
 8001608:	629a      	str	r2, [r3, #40]	; 0x28
  hspi2.Init.CRCPolynomial = 10;
 800160a:	4b06      	ldr	r3, [pc, #24]	; (8001624 <MX_SPI2_Init+0x64>)
 800160c:	220a      	movs	r2, #10
 800160e:	62da      	str	r2, [r3, #44]	; 0x2c
  if (HAL_SPI_Init(&hspi2) != HAL_OK)
 8001610:	4804      	ldr	r0, [pc, #16]	; (8001624 <MX_SPI2_Init+0x64>)
 8001612:	f003 fbff 	bl	8004e14 <HAL_SPI_Init>
 8001616:	4603      	mov	r3, r0
 8001618:	2b00      	cmp	r3, #0
 800161a:	d001      	beq.n	8001620 <MX_SPI2_Init+0x60>
  {
    Error_Handler();
 800161c:	f7ff ff92 	bl	8001544 <Error_Handler>
  }
  /* USER CODE BEGIN SPI2_Init 2 */

  /* USER CODE END SPI2_Init 2 */

}
 8001620:	bf00      	nop
 8001622:	bd80      	pop	{r7, pc}
 8001624:	20000428 	.word	0x20000428
 8001628:	40003800 	.word	0x40003800

0800162c <MX_SPI3_Init>:
/* SPI3 init function */
void MX_SPI3_Init(void)
{
 800162c:	b580      	push	{r7, lr}
 800162e:	af00      	add	r7, sp, #0
  /* USER CODE END SPI3_Init 0 */

  /* USER CODE BEGIN SPI3_Init 1 */

  /* USER CODE END SPI3_Init 1 */
  hspi3.Instance = SPI3;
 8001630:	4b18      	ldr	r3, [pc, #96]	; (8001694 <MX_SPI3_Init+0x68>)
 8001632:	4a19      	ldr	r2, [pc, #100]	; (8001698 <MX_SPI3_Init+0x6c>)
 8001634:	601a      	str	r2, [r3, #0]
  hspi3.Init.Mode = SPI_MODE_MASTER;
 8001636:	4b17      	ldr	r3, [pc, #92]	; (8001694 <MX_SPI3_Init+0x68>)
 8001638:	f44f 7282 	mov.w	r2, #260	; 0x104
 800163c:	605a      	str	r2, [r3, #4]
  hspi3.Init.Direction = SPI_DIRECTION_2LINES_RXONLY;
 800163e:	4b15      	ldr	r3, [pc, #84]	; (8001694 <MX_SPI3_Init+0x68>)
 8001640:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8001644:	609a      	str	r2, [r3, #8]
  hspi3.Init.DataSize = SPI_DATASIZE_16BIT;
 8001646:	4b13      	ldr	r3, [pc, #76]	; (8001694 <MX_SPI3_Init+0x68>)
 8001648:	f44f 6200 	mov.w	r2, #2048	; 0x800
 800164c:	60da      	str	r2, [r3, #12]
  hspi3.Init.CLKPolarity = SPI_POLARITY_LOW;
 800164e:	4b11      	ldr	r3, [pc, #68]	; (8001694 <MX_SPI3_Init+0x68>)
 8001650:	2200      	movs	r2, #0
 8001652:	611a      	str	r2, [r3, #16]
  hspi3.Init.CLKPhase = SPI_PHASE_1EDGE;
 8001654:	4b0f      	ldr	r3, [pc, #60]	; (8001694 <MX_SPI3_Init+0x68>)
 8001656:	2200      	movs	r2, #0
 8001658:	615a      	str	r2, [r3, #20]
  hspi3.Init.NSS = SPI_NSS_SOFT;
 800165a:	4b0e      	ldr	r3, [pc, #56]	; (8001694 <MX_SPI3_Init+0x68>)
 800165c:	f44f 7200 	mov.w	r2, #512	; 0x200
 8001660:	619a      	str	r2, [r3, #24]
  hspi3.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_256;
 8001662:	4b0c      	ldr	r3, [pc, #48]	; (8001694 <MX_SPI3_Init+0x68>)
 8001664:	2238      	movs	r2, #56	; 0x38
 8001666:	61da      	str	r2, [r3, #28]
  hspi3.Init.FirstBit = SPI_FIRSTBIT_MSB;
 8001668:	4b0a      	ldr	r3, [pc, #40]	; (8001694 <MX_SPI3_Init+0x68>)
 800166a:	2200      	movs	r2, #0
 800166c:	621a      	str	r2, [r3, #32]
  hspi3.Init.TIMode = SPI_TIMODE_DISABLE;
 800166e:	4b09      	ldr	r3, [pc, #36]	; (8001694 <MX_SPI3_Init+0x68>)
 8001670:	2200      	movs	r2, #0
 8001672:	625a      	str	r2, [r3, #36]	; 0x24
  hspi3.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 8001674:	4b07      	ldr	r3, [pc, #28]	; (8001694 <MX_SPI3_Init+0x68>)
 8001676:	2200      	movs	r2, #0
 8001678:	629a      	str	r2, [r3, #40]	; 0x28
  hspi3.Init.CRCPolynomial = 10;
 800167a:	4b06      	ldr	r3, [pc, #24]	; (8001694 <MX_SPI3_Init+0x68>)
 800167c:	220a      	movs	r2, #10
 800167e:	62da      	str	r2, [r3, #44]	; 0x2c
  if (HAL_SPI_Init(&hspi3) != HAL_OK)
 8001680:	4804      	ldr	r0, [pc, #16]	; (8001694 <MX_SPI3_Init+0x68>)
 8001682:	f003 fbc7 	bl	8004e14 <HAL_SPI_Init>
 8001686:	4603      	mov	r3, r0
 8001688:	2b00      	cmp	r3, #0
 800168a:	d001      	beq.n	8001690 <MX_SPI3_Init+0x64>
  {
    Error_Handler();
 800168c:	f7ff ff5a 	bl	8001544 <Error_Handler>
  }
  /* USER CODE BEGIN SPI3_Init 2 */

  /* USER CODE END SPI3_Init 2 */

}
 8001690:	bf00      	nop
 8001692:	bd80      	pop	{r7, pc}
 8001694:	20000480 	.word	0x20000480
 8001698:	40003c00 	.word	0x40003c00

0800169c <HAL_SPI_MspInit>:

void HAL_SPI_MspInit(SPI_HandleTypeDef* spiHandle)
{
 800169c:	b580      	push	{r7, lr}
 800169e:	b08e      	sub	sp, #56	; 0x38
 80016a0:	af00      	add	r7, sp, #0
 80016a2:	6078      	str	r0, [r7, #4]

  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80016a4:	f107 0324 	add.w	r3, r7, #36	; 0x24
 80016a8:	2200      	movs	r2, #0
 80016aa:	601a      	str	r2, [r3, #0]
 80016ac:	605a      	str	r2, [r3, #4]
 80016ae:	609a      	str	r2, [r3, #8]
 80016b0:	60da      	str	r2, [r3, #12]
 80016b2:	611a      	str	r2, [r3, #16]
  if(spiHandle->Instance==SPI1)
 80016b4:	687b      	ldr	r3, [r7, #4]
 80016b6:	681b      	ldr	r3, [r3, #0]
 80016b8:	4a62      	ldr	r2, [pc, #392]	; (8001844 <HAL_SPI_MspInit+0x1a8>)
 80016ba:	4293      	cmp	r3, r2
 80016bc:	d15a      	bne.n	8001774 <HAL_SPI_MspInit+0xd8>
  {
  /* USER CODE BEGIN SPI1_MspInit 0 */

  /* USER CODE END SPI1_MspInit 0 */
    /* SPI1 clock enable */
    __HAL_RCC_SPI1_CLK_ENABLE();
 80016be:	2300      	movs	r3, #0
 80016c0:	623b      	str	r3, [r7, #32]
 80016c2:	4b61      	ldr	r3, [pc, #388]	; (8001848 <HAL_SPI_MspInit+0x1ac>)
 80016c4:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80016c6:	4a60      	ldr	r2, [pc, #384]	; (8001848 <HAL_SPI_MspInit+0x1ac>)
 80016c8:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
 80016cc:	6453      	str	r3, [r2, #68]	; 0x44
 80016ce:	4b5e      	ldr	r3, [pc, #376]	; (8001848 <HAL_SPI_MspInit+0x1ac>)
 80016d0:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80016d2:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 80016d6:	623b      	str	r3, [r7, #32]
 80016d8:	6a3b      	ldr	r3, [r7, #32]

    __HAL_RCC_GPIOA_CLK_ENABLE();
 80016da:	2300      	movs	r3, #0
 80016dc:	61fb      	str	r3, [r7, #28]
 80016de:	4b5a      	ldr	r3, [pc, #360]	; (8001848 <HAL_SPI_MspInit+0x1ac>)
 80016e0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80016e2:	4a59      	ldr	r2, [pc, #356]	; (8001848 <HAL_SPI_MspInit+0x1ac>)
 80016e4:	f043 0301 	orr.w	r3, r3, #1
 80016e8:	6313      	str	r3, [r2, #48]	; 0x30
 80016ea:	4b57      	ldr	r3, [pc, #348]	; (8001848 <HAL_SPI_MspInit+0x1ac>)
 80016ec:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80016ee:	f003 0301 	and.w	r3, r3, #1
 80016f2:	61fb      	str	r3, [r7, #28]
 80016f4:	69fb      	ldr	r3, [r7, #28]
    /**SPI1 GPIO Configuration
    PA5     ------> SPI1_SCK
    PA7     ------> SPI1_MOSI
    */
    GPIO_InitStruct.Pin = DISP_SCK_Pin|DISP_MOSI_Pin;
 80016f6:	23a0      	movs	r3, #160	; 0xa0
 80016f8:	627b      	str	r3, [r7, #36]	; 0x24
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80016fa:	2302      	movs	r3, #2
 80016fc:	62bb      	str	r3, [r7, #40]	; 0x28
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 80016fe:	2300      	movs	r3, #0
 8001700:	62fb      	str	r3, [r7, #44]	; 0x2c
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001702:	2303      	movs	r3, #3
 8001704:	633b      	str	r3, [r7, #48]	; 0x30
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI1;
 8001706:	2305      	movs	r3, #5
 8001708:	637b      	str	r3, [r7, #52]	; 0x34
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 800170a:	f107 0324 	add.w	r3, r7, #36	; 0x24
 800170e:	4619      	mov	r1, r3
 8001710:	484e      	ldr	r0, [pc, #312]	; (800184c <HAL_SPI_MspInit+0x1b0>)
 8001712:	f001 fb3d 	bl	8002d90 <HAL_GPIO_Init>

    /* SPI1 DMA Init */
    /* SPI1_TX Init */
    hdma_spi1_tx.Instance = DMA2_Stream2;
 8001716:	4b4e      	ldr	r3, [pc, #312]	; (8001850 <HAL_SPI_MspInit+0x1b4>)
 8001718:	4a4e      	ldr	r2, [pc, #312]	; (8001854 <HAL_SPI_MspInit+0x1b8>)
 800171a:	601a      	str	r2, [r3, #0]
    hdma_spi1_tx.Init.Channel = DMA_CHANNEL_2;
 800171c:	4b4c      	ldr	r3, [pc, #304]	; (8001850 <HAL_SPI_MspInit+0x1b4>)
 800171e:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 8001722:	605a      	str	r2, [r3, #4]
    hdma_spi1_tx.Init.Direction = DMA_MEMORY_TO_PERIPH;
 8001724:	4b4a      	ldr	r3, [pc, #296]	; (8001850 <HAL_SPI_MspInit+0x1b4>)
 8001726:	2240      	movs	r2, #64	; 0x40
 8001728:	609a      	str	r2, [r3, #8]
    hdma_spi1_tx.Init.PeriphInc = DMA_PINC_DISABLE;
 800172a:	4b49      	ldr	r3, [pc, #292]	; (8001850 <HAL_SPI_MspInit+0x1b4>)
 800172c:	2200      	movs	r2, #0
 800172e:	60da      	str	r2, [r3, #12]
    hdma_spi1_tx.Init.MemInc = DMA_MINC_ENABLE;
 8001730:	4b47      	ldr	r3, [pc, #284]	; (8001850 <HAL_SPI_MspInit+0x1b4>)
 8001732:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8001736:	611a      	str	r2, [r3, #16]
    hdma_spi1_tx.Init.PeriphDataAlignment = DMA_PDATAALIGN_BYTE;
 8001738:	4b45      	ldr	r3, [pc, #276]	; (8001850 <HAL_SPI_MspInit+0x1b4>)
 800173a:	2200      	movs	r2, #0
 800173c:	615a      	str	r2, [r3, #20]
    hdma_spi1_tx.Init.MemDataAlignment = DMA_MDATAALIGN_BYTE;
 800173e:	4b44      	ldr	r3, [pc, #272]	; (8001850 <HAL_SPI_MspInit+0x1b4>)
 8001740:	2200      	movs	r2, #0
 8001742:	619a      	str	r2, [r3, #24]
    hdma_spi1_tx.Init.Mode = DMA_NORMAL;
 8001744:	4b42      	ldr	r3, [pc, #264]	; (8001850 <HAL_SPI_MspInit+0x1b4>)
 8001746:	2200      	movs	r2, #0
 8001748:	61da      	str	r2, [r3, #28]
    hdma_spi1_tx.Init.Priority = DMA_PRIORITY_LOW;
 800174a:	4b41      	ldr	r3, [pc, #260]	; (8001850 <HAL_SPI_MspInit+0x1b4>)
 800174c:	2200      	movs	r2, #0
 800174e:	621a      	str	r2, [r3, #32]
    hdma_spi1_tx.Init.FIFOMode = DMA_FIFOMODE_DISABLE;
 8001750:	4b3f      	ldr	r3, [pc, #252]	; (8001850 <HAL_SPI_MspInit+0x1b4>)
 8001752:	2200      	movs	r2, #0
 8001754:	625a      	str	r2, [r3, #36]	; 0x24
    if (HAL_DMA_Init(&hdma_spi1_tx) != HAL_OK)
 8001756:	483e      	ldr	r0, [pc, #248]	; (8001850 <HAL_SPI_MspInit+0x1b4>)
 8001758:	f000 ffaa 	bl	80026b0 <HAL_DMA_Init>
 800175c:	4603      	mov	r3, r0
 800175e:	2b00      	cmp	r3, #0
 8001760:	d001      	beq.n	8001766 <HAL_SPI_MspInit+0xca>
    {
      Error_Handler();
 8001762:	f7ff feef 	bl	8001544 <Error_Handler>
    }

    __HAL_LINKDMA(spiHandle,hdmatx,hdma_spi1_tx);
 8001766:	687b      	ldr	r3, [r7, #4]
 8001768:	4a39      	ldr	r2, [pc, #228]	; (8001850 <HAL_SPI_MspInit+0x1b4>)
 800176a:	649a      	str	r2, [r3, #72]	; 0x48
 800176c:	4a38      	ldr	r2, [pc, #224]	; (8001850 <HAL_SPI_MspInit+0x1b4>)
 800176e:	687b      	ldr	r3, [r7, #4]
 8001770:	6393      	str	r3, [r2, #56]	; 0x38

  /* USER CODE BEGIN SPI3_MspInit 1 */

  /* USER CODE END SPI3_MspInit 1 */
  }
}
 8001772:	e063      	b.n	800183c <HAL_SPI_MspInit+0x1a0>
  else if(spiHandle->Instance==SPI2)
 8001774:	687b      	ldr	r3, [r7, #4]
 8001776:	681b      	ldr	r3, [r3, #0]
 8001778:	4a37      	ldr	r2, [pc, #220]	; (8001858 <HAL_SPI_MspInit+0x1bc>)
 800177a:	4293      	cmp	r3, r2
 800177c:	d12d      	bne.n	80017da <HAL_SPI_MspInit+0x13e>
    __HAL_RCC_SPI2_CLK_ENABLE();
 800177e:	2300      	movs	r3, #0
 8001780:	61bb      	str	r3, [r7, #24]
 8001782:	4b31      	ldr	r3, [pc, #196]	; (8001848 <HAL_SPI_MspInit+0x1ac>)
 8001784:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001786:	4a30      	ldr	r2, [pc, #192]	; (8001848 <HAL_SPI_MspInit+0x1ac>)
 8001788:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 800178c:	6413      	str	r3, [r2, #64]	; 0x40
 800178e:	4b2e      	ldr	r3, [pc, #184]	; (8001848 <HAL_SPI_MspInit+0x1ac>)
 8001790:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001792:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 8001796:	61bb      	str	r3, [r7, #24]
 8001798:	69bb      	ldr	r3, [r7, #24]
    __HAL_RCC_GPIOB_CLK_ENABLE();
 800179a:	2300      	movs	r3, #0
 800179c:	617b      	str	r3, [r7, #20]
 800179e:	4b2a      	ldr	r3, [pc, #168]	; (8001848 <HAL_SPI_MspInit+0x1ac>)
 80017a0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80017a2:	4a29      	ldr	r2, [pc, #164]	; (8001848 <HAL_SPI_MspInit+0x1ac>)
 80017a4:	f043 0302 	orr.w	r3, r3, #2
 80017a8:	6313      	str	r3, [r2, #48]	; 0x30
 80017aa:	4b27      	ldr	r3, [pc, #156]	; (8001848 <HAL_SPI_MspInit+0x1ac>)
 80017ac:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80017ae:	f003 0302 	and.w	r3, r3, #2
 80017b2:	617b      	str	r3, [r7, #20]
 80017b4:	697b      	ldr	r3, [r7, #20]
    GPIO_InitStruct.Pin = T_CLK_Pin|T_DIN_Pin|T_DO_Pin;
 80017b6:	f44f 4360 	mov.w	r3, #57344	; 0xe000
 80017ba:	627b      	str	r3, [r7, #36]	; 0x24
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80017bc:	2302      	movs	r3, #2
 80017be:	62bb      	str	r3, [r7, #40]	; 0x28
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 80017c0:	2300      	movs	r3, #0
 80017c2:	62fb      	str	r3, [r7, #44]	; 0x2c
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80017c4:	2303      	movs	r3, #3
 80017c6:	633b      	str	r3, [r7, #48]	; 0x30
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI2;
 80017c8:	2305      	movs	r3, #5
 80017ca:	637b      	str	r3, [r7, #52]	; 0x34
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80017cc:	f107 0324 	add.w	r3, r7, #36	; 0x24
 80017d0:	4619      	mov	r1, r3
 80017d2:	4822      	ldr	r0, [pc, #136]	; (800185c <HAL_SPI_MspInit+0x1c0>)
 80017d4:	f001 fadc 	bl	8002d90 <HAL_GPIO_Init>
}
 80017d8:	e030      	b.n	800183c <HAL_SPI_MspInit+0x1a0>
  else if(spiHandle->Instance==SPI3)
 80017da:	687b      	ldr	r3, [r7, #4]
 80017dc:	681b      	ldr	r3, [r3, #0]
 80017de:	4a20      	ldr	r2, [pc, #128]	; (8001860 <HAL_SPI_MspInit+0x1c4>)
 80017e0:	4293      	cmp	r3, r2
 80017e2:	d12b      	bne.n	800183c <HAL_SPI_MspInit+0x1a0>
    __HAL_RCC_SPI3_CLK_ENABLE();
 80017e4:	2300      	movs	r3, #0
 80017e6:	613b      	str	r3, [r7, #16]
 80017e8:	4b17      	ldr	r3, [pc, #92]	; (8001848 <HAL_SPI_MspInit+0x1ac>)
 80017ea:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80017ec:	4a16      	ldr	r2, [pc, #88]	; (8001848 <HAL_SPI_MspInit+0x1ac>)
 80017ee:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 80017f2:	6413      	str	r3, [r2, #64]	; 0x40
 80017f4:	4b14      	ldr	r3, [pc, #80]	; (8001848 <HAL_SPI_MspInit+0x1ac>)
 80017f6:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80017f8:	f403 4300 	and.w	r3, r3, #32768	; 0x8000
 80017fc:	613b      	str	r3, [r7, #16]
 80017fe:	693b      	ldr	r3, [r7, #16]
    __HAL_RCC_GPIOB_CLK_ENABLE();
 8001800:	2300      	movs	r3, #0
 8001802:	60fb      	str	r3, [r7, #12]
 8001804:	4b10      	ldr	r3, [pc, #64]	; (8001848 <HAL_SPI_MspInit+0x1ac>)
 8001806:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001808:	4a0f      	ldr	r2, [pc, #60]	; (8001848 <HAL_SPI_MspInit+0x1ac>)
 800180a:	f043 0302 	orr.w	r3, r3, #2
 800180e:	6313      	str	r3, [r2, #48]	; 0x30
 8001810:	4b0d      	ldr	r3, [pc, #52]	; (8001848 <HAL_SPI_MspInit+0x1ac>)
 8001812:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001814:	f003 0302 	and.w	r3, r3, #2
 8001818:	60fb      	str	r3, [r7, #12]
 800181a:	68fb      	ldr	r3, [r7, #12]
    GPIO_InitStruct.Pin = TEMP_SCK_Pin|TEMP_MISO_Pin;
 800181c:	2318      	movs	r3, #24
 800181e:	627b      	str	r3, [r7, #36]	; 0x24
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001820:	2302      	movs	r3, #2
 8001822:	62bb      	str	r3, [r7, #40]	; 0x28
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001824:	2300      	movs	r3, #0
 8001826:	62fb      	str	r3, [r7, #44]	; 0x2c
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001828:	2303      	movs	r3, #3
 800182a:	633b      	str	r3, [r7, #48]	; 0x30
    GPIO_InitStruct.Alternate = GPIO_AF6_SPI3;
 800182c:	2306      	movs	r3, #6
 800182e:	637b      	str	r3, [r7, #52]	; 0x34
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001830:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8001834:	4619      	mov	r1, r3
 8001836:	4809      	ldr	r0, [pc, #36]	; (800185c <HAL_SPI_MspInit+0x1c0>)
 8001838:	f001 faaa 	bl	8002d90 <HAL_GPIO_Init>
}
 800183c:	bf00      	nop
 800183e:	3738      	adds	r7, #56	; 0x38
 8001840:	46bd      	mov	sp, r7
 8001842:	bd80      	pop	{r7, pc}
 8001844:	40013000 	.word	0x40013000
 8001848:	40023800 	.word	0x40023800
 800184c:	40020000 	.word	0x40020000
 8001850:	200004d8 	.word	0x200004d8
 8001854:	40026440 	.word	0x40026440
 8001858:	40003800 	.word	0x40003800
 800185c:	40020400 	.word	0x40020400
 8001860:	40003c00 	.word	0x40003c00

08001864 <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 8001864:	b480      	push	{r7}
 8001866:	b083      	sub	sp, #12
 8001868:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 800186a:	2300      	movs	r3, #0
 800186c:	607b      	str	r3, [r7, #4]
 800186e:	4b10      	ldr	r3, [pc, #64]	; (80018b0 <HAL_MspInit+0x4c>)
 8001870:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8001872:	4a0f      	ldr	r2, [pc, #60]	; (80018b0 <HAL_MspInit+0x4c>)
 8001874:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8001878:	6453      	str	r3, [r2, #68]	; 0x44
 800187a:	4b0d      	ldr	r3, [pc, #52]	; (80018b0 <HAL_MspInit+0x4c>)
 800187c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800187e:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 8001882:	607b      	str	r3, [r7, #4]
 8001884:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_PWR_CLK_ENABLE();
 8001886:	2300      	movs	r3, #0
 8001888:	603b      	str	r3, [r7, #0]
 800188a:	4b09      	ldr	r3, [pc, #36]	; (80018b0 <HAL_MspInit+0x4c>)
 800188c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800188e:	4a08      	ldr	r2, [pc, #32]	; (80018b0 <HAL_MspInit+0x4c>)
 8001890:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8001894:	6413      	str	r3, [r2, #64]	; 0x40
 8001896:	4b06      	ldr	r3, [pc, #24]	; (80018b0 <HAL_MspInit+0x4c>)
 8001898:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800189a:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800189e:	603b      	str	r3, [r7, #0]
 80018a0:	683b      	ldr	r3, [r7, #0]
  /* System interrupt init*/

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 80018a2:	bf00      	nop
 80018a4:	370c      	adds	r7, #12
 80018a6:	46bd      	mov	sp, r7
 80018a8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80018ac:	4770      	bx	lr
 80018ae:	bf00      	nop
 80018b0:	40023800 	.word	0x40023800

080018b4 <NMI_Handler>:
/******************************************************************************/
/**
  * @brief This function handles Non maskable interrupt.
  */
void NMI_Handler(void)
{
 80018b4:	b480      	push	{r7}
 80018b6:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
   while (1)
 80018b8:	e7fe      	b.n	80018b8 <NMI_Handler+0x4>

080018ba <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 80018ba:	b480      	push	{r7}
 80018bc:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 80018be:	e7fe      	b.n	80018be <HardFault_Handler+0x4>

080018c0 <MemManage_Handler>:

/**
  * @brief This function handles Memory management fault.
  */
void MemManage_Handler(void)
{
 80018c0:	b480      	push	{r7}
 80018c2:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 80018c4:	e7fe      	b.n	80018c4 <MemManage_Handler+0x4>

080018c6 <BusFault_Handler>:

/**
  * @brief This function handles Pre-fetch fault, memory access fault.
  */
void BusFault_Handler(void)
{
 80018c6:	b480      	push	{r7}
 80018c8:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 80018ca:	e7fe      	b.n	80018ca <BusFault_Handler+0x4>

080018cc <UsageFault_Handler>:

/**
  * @brief This function handles Undefined instruction or illegal state.
  */
void UsageFault_Handler(void)
{
 80018cc:	b480      	push	{r7}
 80018ce:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 80018d0:	e7fe      	b.n	80018d0 <UsageFault_Handler+0x4>

080018d2 <SVC_Handler>:

/**
  * @brief This function handles System service call via SWI instruction.
  */
void SVC_Handler(void)
{
 80018d2:	b480      	push	{r7}
 80018d4:	af00      	add	r7, sp, #0

  /* USER CODE END SVCall_IRQn 0 */
  /* USER CODE BEGIN SVCall_IRQn 1 */

  /* USER CODE END SVCall_IRQn 1 */
}
 80018d6:	bf00      	nop
 80018d8:	46bd      	mov	sp, r7
 80018da:	f85d 7b04 	ldr.w	r7, [sp], #4
 80018de:	4770      	bx	lr

080018e0 <DebugMon_Handler>:

/**
  * @brief This function handles Debug monitor.
  */
void DebugMon_Handler(void)
{
 80018e0:	b480      	push	{r7}
 80018e2:	af00      	add	r7, sp, #0

  /* USER CODE END DebugMonitor_IRQn 0 */
  /* USER CODE BEGIN DebugMonitor_IRQn 1 */

  /* USER CODE END DebugMonitor_IRQn 1 */
}
 80018e4:	bf00      	nop
 80018e6:	46bd      	mov	sp, r7
 80018e8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80018ec:	4770      	bx	lr

080018ee <PendSV_Handler>:

/**
  * @brief This function handles Pendable request for system service.
  */
void PendSV_Handler(void)
{
 80018ee:	b480      	push	{r7}
 80018f0:	af00      	add	r7, sp, #0

  /* USER CODE END PendSV_IRQn 0 */
  /* USER CODE BEGIN PendSV_IRQn 1 */

  /* USER CODE END PendSV_IRQn 1 */
}
 80018f2:	bf00      	nop
 80018f4:	46bd      	mov	sp, r7
 80018f6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80018fa:	4770      	bx	lr

080018fc <SysTick_Handler>:

/**
  * @brief This function handles System tick timer.
  */
void SysTick_Handler(void)
{
 80018fc:	b580      	push	{r7, lr}
 80018fe:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN SysTick_IRQn 0 */

  /* USER CODE END SysTick_IRQn 0 */
  HAL_IncTick();
 8001900:	f000 fd64 	bl	80023cc <HAL_IncTick>
  /* USER CODE BEGIN SysTick_IRQn 1 */

  /* USER CODE END SysTick_IRQn 1 */
}
 8001904:	bf00      	nop
 8001906:	bd80      	pop	{r7, pc}

08001908 <EXTI9_5_IRQHandler>:

/**
  * @brief This function handles EXTI line[9:5] interrupts.
  */
void EXTI9_5_IRQHandler(void)
{
 8001908:	b580      	push	{r7, lr}
 800190a:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN EXTI9_5_IRQn 0 */

  /* USER CODE END EXTI9_5_IRQn 0 */
  HAL_GPIO_EXTI_IRQHandler(T_IRQ_Pin);
 800190c:	f44f 7080 	mov.w	r0, #256	; 0x100
 8001910:	f001 fbdc 	bl	80030cc <HAL_GPIO_EXTI_IRQHandler>
  /* USER CODE BEGIN EXTI9_5_IRQn 1 */

  /* USER CODE END EXTI9_5_IRQn 1 */
}
 8001914:	bf00      	nop
 8001916:	bd80      	pop	{r7, pc}

08001918 <TIM2_IRQHandler>:

/**
  * @brief This function handles TIM2 global interrupt.
  */
void TIM2_IRQHandler(void)
{
 8001918:	b580      	push	{r7, lr}
 800191a:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN TIM2_IRQn 0 */

  /* USER CODE END TIM2_IRQn 0 */
  HAL_TIM_IRQHandler(&htim2);
 800191c:	4802      	ldr	r0, [pc, #8]	; (8001928 <TIM2_IRQHandler+0x10>)
 800191e:	f004 fb49 	bl	8005fb4 <HAL_TIM_IRQHandler>
  /* USER CODE BEGIN TIM2_IRQn 1 */

  /* USER CODE END TIM2_IRQn 1 */
}
 8001922:	bf00      	nop
 8001924:	bd80      	pop	{r7, pc}
 8001926:	bf00      	nop
 8001928:	2000053c 	.word	0x2000053c

0800192c <TIM3_IRQHandler>:

/**
  * @brief This function handles TIM3 global interrupt.
  */
void TIM3_IRQHandler(void)
{
 800192c:	b580      	push	{r7, lr}
 800192e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN TIM3_IRQn 0 */

  /* USER CODE END TIM3_IRQn 0 */
  HAL_TIM_IRQHandler(&htim3);
 8001930:	4802      	ldr	r0, [pc, #8]	; (800193c <TIM3_IRQHandler+0x10>)
 8001932:	f004 fb3f 	bl	8005fb4 <HAL_TIM_IRQHandler>
  /* USER CODE BEGIN TIM3_IRQn 1 */

  /* USER CODE END TIM3_IRQn 1 */
}
 8001936:	bf00      	nop
 8001938:	bd80      	pop	{r7, pc}
 800193a:	bf00      	nop
 800193c:	20000584 	.word	0x20000584

08001940 <DMA2_Stream2_IRQHandler>:

/**
  * @brief This function handles DMA2 stream2 global interrupt.
  */
void DMA2_Stream2_IRQHandler(void)
{
 8001940:	b580      	push	{r7, lr}
 8001942:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN DMA2_Stream2_IRQn 0 */

  /* USER CODE END DMA2_Stream2_IRQn 0 */
  HAL_DMA_IRQHandler(&hdma_spi1_tx);
 8001944:	4802      	ldr	r0, [pc, #8]	; (8001950 <DMA2_Stream2_IRQHandler+0x10>)
 8001946:	f000 ffb9 	bl	80028bc <HAL_DMA_IRQHandler>
  /* USER CODE BEGIN DMA2_Stream2_IRQn 1 */

  /* USER CODE END DMA2_Stream2_IRQn 1 */
}
 800194a:	bf00      	nop
 800194c:	bd80      	pop	{r7, pc}
 800194e:	bf00      	nop
 8001950:	200004d8 	.word	0x200004d8

08001954 <OTG_FS_IRQHandler>:

/**
  * @brief This function handles USB On The Go FS global interrupt.
  */
void OTG_FS_IRQHandler(void)
{
 8001954:	b580      	push	{r7, lr}
 8001956:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN OTG_FS_IRQn 0 */

  /* USER CODE END OTG_FS_IRQn 0 */
  HAL_PCD_IRQHandler(&hpcd_USB_OTG_FS);
 8001958:	4802      	ldr	r0, [pc, #8]	; (8001964 <OTG_FS_IRQHandler+0x10>)
 800195a:	f001 fd1e 	bl	800339a <HAL_PCD_IRQHandler>
  /* USER CODE BEGIN OTG_FS_IRQn 1 */

  /* USER CODE END OTG_FS_IRQn 1 */
}
 800195e:	bf00      	nop
 8001960:	bd80      	pop	{r7, pc}
 8001962:	bf00      	nop
 8001964:	20006524 	.word	0x20006524

08001968 <_getpid>:
void initialise_monitor_handles()
{
}

int _getpid(void)
{
 8001968:	b480      	push	{r7}
 800196a:	af00      	add	r7, sp, #0
  return 1;
 800196c:	2301      	movs	r3, #1
}
 800196e:	4618      	mov	r0, r3
 8001970:	46bd      	mov	sp, r7
 8001972:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001976:	4770      	bx	lr

08001978 <_kill>:

int _kill(int pid, int sig)
{
 8001978:	b580      	push	{r7, lr}
 800197a:	b082      	sub	sp, #8
 800197c:	af00      	add	r7, sp, #0
 800197e:	6078      	str	r0, [r7, #4]
 8001980:	6039      	str	r1, [r7, #0]
  (void)pid;
  (void)sig;
  errno = EINVAL;
 8001982:	f029 fc4b 	bl	802b21c <__errno>
 8001986:	4603      	mov	r3, r0
 8001988:	2216      	movs	r2, #22
 800198a:	601a      	str	r2, [r3, #0]
  return -1;
 800198c:	f04f 33ff 	mov.w	r3, #4294967295
}
 8001990:	4618      	mov	r0, r3
 8001992:	3708      	adds	r7, #8
 8001994:	46bd      	mov	sp, r7
 8001996:	bd80      	pop	{r7, pc}

08001998 <_exit>:

void _exit (int status)
{
 8001998:	b580      	push	{r7, lr}
 800199a:	b082      	sub	sp, #8
 800199c:	af00      	add	r7, sp, #0
 800199e:	6078      	str	r0, [r7, #4]
  _kill(status, -1);
 80019a0:	f04f 31ff 	mov.w	r1, #4294967295
 80019a4:	6878      	ldr	r0, [r7, #4]
 80019a6:	f7ff ffe7 	bl	8001978 <_kill>
  while (1) {}    /* Make sure we hang here */
 80019aa:	e7fe      	b.n	80019aa <_exit+0x12>

080019ac <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 80019ac:	b580      	push	{r7, lr}
 80019ae:	b086      	sub	sp, #24
 80019b0:	af00      	add	r7, sp, #0
 80019b2:	60f8      	str	r0, [r7, #12]
 80019b4:	60b9      	str	r1, [r7, #8]
 80019b6:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 80019b8:	2300      	movs	r3, #0
 80019ba:	617b      	str	r3, [r7, #20]
 80019bc:	e00a      	b.n	80019d4 <_read+0x28>
  {
    *ptr++ = __io_getchar();
 80019be:	f3af 8000 	nop.w
 80019c2:	4601      	mov	r1, r0
 80019c4:	68bb      	ldr	r3, [r7, #8]
 80019c6:	1c5a      	adds	r2, r3, #1
 80019c8:	60ba      	str	r2, [r7, #8]
 80019ca:	b2ca      	uxtb	r2, r1
 80019cc:	701a      	strb	r2, [r3, #0]
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 80019ce:	697b      	ldr	r3, [r7, #20]
 80019d0:	3301      	adds	r3, #1
 80019d2:	617b      	str	r3, [r7, #20]
 80019d4:	697a      	ldr	r2, [r7, #20]
 80019d6:	687b      	ldr	r3, [r7, #4]
 80019d8:	429a      	cmp	r2, r3
 80019da:	dbf0      	blt.n	80019be <_read+0x12>
  }

  return len;
 80019dc:	687b      	ldr	r3, [r7, #4]
}
 80019de:	4618      	mov	r0, r3
 80019e0:	3718      	adds	r7, #24
 80019e2:	46bd      	mov	sp, r7
 80019e4:	bd80      	pop	{r7, pc}

080019e6 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 80019e6:	b580      	push	{r7, lr}
 80019e8:	b086      	sub	sp, #24
 80019ea:	af00      	add	r7, sp, #0
 80019ec:	60f8      	str	r0, [r7, #12]
 80019ee:	60b9      	str	r1, [r7, #8]
 80019f0:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 80019f2:	2300      	movs	r3, #0
 80019f4:	617b      	str	r3, [r7, #20]
 80019f6:	e009      	b.n	8001a0c <_write+0x26>
  {
    __io_putchar(*ptr++);
 80019f8:	68bb      	ldr	r3, [r7, #8]
 80019fa:	1c5a      	adds	r2, r3, #1
 80019fc:	60ba      	str	r2, [r7, #8]
 80019fe:	781b      	ldrb	r3, [r3, #0]
 8001a00:	4618      	mov	r0, r3
 8001a02:	f3af 8000 	nop.w
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001a06:	697b      	ldr	r3, [r7, #20]
 8001a08:	3301      	adds	r3, #1
 8001a0a:	617b      	str	r3, [r7, #20]
 8001a0c:	697a      	ldr	r2, [r7, #20]
 8001a0e:	687b      	ldr	r3, [r7, #4]
 8001a10:	429a      	cmp	r2, r3
 8001a12:	dbf1      	blt.n	80019f8 <_write+0x12>
  }
  return len;
 8001a14:	687b      	ldr	r3, [r7, #4]
}
 8001a16:	4618      	mov	r0, r3
 8001a18:	3718      	adds	r7, #24
 8001a1a:	46bd      	mov	sp, r7
 8001a1c:	bd80      	pop	{r7, pc}

08001a1e <_close>:

int _close(int file)
{
 8001a1e:	b480      	push	{r7}
 8001a20:	b083      	sub	sp, #12
 8001a22:	af00      	add	r7, sp, #0
 8001a24:	6078      	str	r0, [r7, #4]
  (void)file;
  return -1;
 8001a26:	f04f 33ff 	mov.w	r3, #4294967295
}
 8001a2a:	4618      	mov	r0, r3
 8001a2c:	370c      	adds	r7, #12
 8001a2e:	46bd      	mov	sp, r7
 8001a30:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001a34:	4770      	bx	lr

08001a36 <_fstat>:


int _fstat(int file, struct stat *st)
{
 8001a36:	b480      	push	{r7}
 8001a38:	b083      	sub	sp, #12
 8001a3a:	af00      	add	r7, sp, #0
 8001a3c:	6078      	str	r0, [r7, #4]
 8001a3e:	6039      	str	r1, [r7, #0]
  (void)file;
  st->st_mode = S_IFCHR;
 8001a40:	683b      	ldr	r3, [r7, #0]
 8001a42:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 8001a46:	605a      	str	r2, [r3, #4]
  return 0;
 8001a48:	2300      	movs	r3, #0
}
 8001a4a:	4618      	mov	r0, r3
 8001a4c:	370c      	adds	r7, #12
 8001a4e:	46bd      	mov	sp, r7
 8001a50:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001a54:	4770      	bx	lr

08001a56 <_isatty>:

int _isatty(int file)
{
 8001a56:	b480      	push	{r7}
 8001a58:	b083      	sub	sp, #12
 8001a5a:	af00      	add	r7, sp, #0
 8001a5c:	6078      	str	r0, [r7, #4]
  (void)file;
  return 1;
 8001a5e:	2301      	movs	r3, #1
}
 8001a60:	4618      	mov	r0, r3
 8001a62:	370c      	adds	r7, #12
 8001a64:	46bd      	mov	sp, r7
 8001a66:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001a6a:	4770      	bx	lr

08001a6c <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 8001a6c:	b480      	push	{r7}
 8001a6e:	b085      	sub	sp, #20
 8001a70:	af00      	add	r7, sp, #0
 8001a72:	60f8      	str	r0, [r7, #12]
 8001a74:	60b9      	str	r1, [r7, #8]
 8001a76:	607a      	str	r2, [r7, #4]
  (void)file;
  (void)ptr;
  (void)dir;
  return 0;
 8001a78:	2300      	movs	r3, #0
}
 8001a7a:	4618      	mov	r0, r3
 8001a7c:	3714      	adds	r7, #20
 8001a7e:	46bd      	mov	sp, r7
 8001a80:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001a84:	4770      	bx	lr
	...

08001a88 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 8001a88:	b580      	push	{r7, lr}
 8001a8a:	b086      	sub	sp, #24
 8001a8c:	af00      	add	r7, sp, #0
 8001a8e:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 8001a90:	4a14      	ldr	r2, [pc, #80]	; (8001ae4 <_sbrk+0x5c>)
 8001a92:	4b15      	ldr	r3, [pc, #84]	; (8001ae8 <_sbrk+0x60>)
 8001a94:	1ad3      	subs	r3, r2, r3
 8001a96:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 8001a98:	697b      	ldr	r3, [r7, #20]
 8001a9a:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 8001a9c:	4b13      	ldr	r3, [pc, #76]	; (8001aec <_sbrk+0x64>)
 8001a9e:	681b      	ldr	r3, [r3, #0]
 8001aa0:	2b00      	cmp	r3, #0
 8001aa2:	d102      	bne.n	8001aaa <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 8001aa4:	4b11      	ldr	r3, [pc, #68]	; (8001aec <_sbrk+0x64>)
 8001aa6:	4a12      	ldr	r2, [pc, #72]	; (8001af0 <_sbrk+0x68>)
 8001aa8:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 8001aaa:	4b10      	ldr	r3, [pc, #64]	; (8001aec <_sbrk+0x64>)
 8001aac:	681a      	ldr	r2, [r3, #0]
 8001aae:	687b      	ldr	r3, [r7, #4]
 8001ab0:	4413      	add	r3, r2
 8001ab2:	693a      	ldr	r2, [r7, #16]
 8001ab4:	429a      	cmp	r2, r3
 8001ab6:	d207      	bcs.n	8001ac8 <_sbrk+0x40>
  {
    errno = ENOMEM;
 8001ab8:	f029 fbb0 	bl	802b21c <__errno>
 8001abc:	4603      	mov	r3, r0
 8001abe:	220c      	movs	r2, #12
 8001ac0:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 8001ac2:	f04f 33ff 	mov.w	r3, #4294967295
 8001ac6:	e009      	b.n	8001adc <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 8001ac8:	4b08      	ldr	r3, [pc, #32]	; (8001aec <_sbrk+0x64>)
 8001aca:	681b      	ldr	r3, [r3, #0]
 8001acc:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 8001ace:	4b07      	ldr	r3, [pc, #28]	; (8001aec <_sbrk+0x64>)
 8001ad0:	681a      	ldr	r2, [r3, #0]
 8001ad2:	687b      	ldr	r3, [r7, #4]
 8001ad4:	4413      	add	r3, r2
 8001ad6:	4a05      	ldr	r2, [pc, #20]	; (8001aec <_sbrk+0x64>)
 8001ad8:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 8001ada:	68fb      	ldr	r3, [r7, #12]
}
 8001adc:	4618      	mov	r0, r3
 8001ade:	3718      	adds	r7, #24
 8001ae0:	46bd      	mov	sp, r7
 8001ae2:	bd80      	pop	{r7, pc}
 8001ae4:	20020000 	.word	0x20020000
 8001ae8:	00000400 	.word	0x00000400
 8001aec:	20000538 	.word	0x20000538
 8001af0:	20007870 	.word	0x20007870

08001af4 <SystemInit>:
  *         configuration.
  * @param  None
  * @retval None
  */
void SystemInit(void)
{
 8001af4:	b480      	push	{r7}
 8001af6:	af00      	add	r7, sp, #0
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 8001af8:	4b06      	ldr	r3, [pc, #24]	; (8001b14 <SystemInit+0x20>)
 8001afa:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8001afe:	4a05      	ldr	r2, [pc, #20]	; (8001b14 <SystemInit+0x20>)
 8001b00:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 8001b04:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88

  /* Configure the Vector Table location -------------------------------------*/
#if defined(USER_VECT_TAB_ADDRESS)
  SCB->VTOR = VECT_TAB_BASE_ADDRESS | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#endif /* USER_VECT_TAB_ADDRESS */
}
 8001b08:	bf00      	nop
 8001b0a:	46bd      	mov	sp, r7
 8001b0c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001b10:	4770      	bx	lr
 8001b12:	bf00      	nop
 8001b14:	e000ed00 	.word	0xe000ed00

08001b18 <MX_TIM2_Init>:
TIM_HandleTypeDef htim3;
TIM_HandleTypeDef htim5;

/* TIM2 init function */
void MX_TIM2_Init(void)
{
 8001b18:	b580      	push	{r7, lr}
 8001b1a:	b086      	sub	sp, #24
 8001b1c:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM2_Init 0 */

  /* USER CODE END TIM2_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 8001b1e:	f107 0308 	add.w	r3, r7, #8
 8001b22:	2200      	movs	r2, #0
 8001b24:	601a      	str	r2, [r3, #0]
 8001b26:	605a      	str	r2, [r3, #4]
 8001b28:	609a      	str	r2, [r3, #8]
 8001b2a:	60da      	str	r2, [r3, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8001b2c:	463b      	mov	r3, r7
 8001b2e:	2200      	movs	r2, #0
 8001b30:	601a      	str	r2, [r3, #0]
 8001b32:	605a      	str	r2, [r3, #4]

  /* USER CODE BEGIN TIM2_Init 1 */

  /* USER CODE END TIM2_Init 1 */
  htim2.Instance = TIM2;
 8001b34:	4b1e      	ldr	r3, [pc, #120]	; (8001bb0 <MX_TIM2_Init+0x98>)
 8001b36:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8001b3a:	601a      	str	r2, [r3, #0]
  htim2.Init.Prescaler = 959;
 8001b3c:	4b1c      	ldr	r3, [pc, #112]	; (8001bb0 <MX_TIM2_Init+0x98>)
 8001b3e:	f240 32bf 	movw	r2, #959	; 0x3bf
 8001b42:	605a      	str	r2, [r3, #4]
  htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 8001b44:	4b1a      	ldr	r3, [pc, #104]	; (8001bb0 <MX_TIM2_Init+0x98>)
 8001b46:	2200      	movs	r2, #0
 8001b48:	609a      	str	r2, [r3, #8]
  htim2.Init.Period = 33999;
 8001b4a:	4b19      	ldr	r3, [pc, #100]	; (8001bb0 <MX_TIM2_Init+0x98>)
 8001b4c:	f248 42cf 	movw	r2, #33999	; 0x84cf
 8001b50:	60da      	str	r2, [r3, #12]
  htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8001b52:	4b17      	ldr	r3, [pc, #92]	; (8001bb0 <MX_TIM2_Init+0x98>)
 8001b54:	2200      	movs	r2, #0
 8001b56:	611a      	str	r2, [r3, #16]
  htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8001b58:	4b15      	ldr	r3, [pc, #84]	; (8001bb0 <MX_TIM2_Init+0x98>)
 8001b5a:	2200      	movs	r2, #0
 8001b5c:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 8001b5e:	4814      	ldr	r0, [pc, #80]	; (8001bb0 <MX_TIM2_Init+0x98>)
 8001b60:	f004 f876 	bl	8005c50 <HAL_TIM_Base_Init>
 8001b64:	4603      	mov	r3, r0
 8001b66:	2b00      	cmp	r3, #0
 8001b68:	d001      	beq.n	8001b6e <MX_TIM2_Init+0x56>
  {
    Error_Handler();
 8001b6a:	f7ff fceb 	bl	8001544 <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8001b6e:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8001b72:	60bb      	str	r3, [r7, #8]
  if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 8001b74:	f107 0308 	add.w	r3, r7, #8
 8001b78:	4619      	mov	r1, r3
 8001b7a:	480d      	ldr	r0, [pc, #52]	; (8001bb0 <MX_TIM2_Init+0x98>)
 8001b7c:	f004 fbcc 	bl	8006318 <HAL_TIM_ConfigClockSource>
 8001b80:	4603      	mov	r3, r0
 8001b82:	2b00      	cmp	r3, #0
 8001b84:	d001      	beq.n	8001b8a <MX_TIM2_Init+0x72>
  {
    Error_Handler();
 8001b86:	f7ff fcdd 	bl	8001544 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 8001b8a:	2300      	movs	r3, #0
 8001b8c:	603b      	str	r3, [r7, #0]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8001b8e:	2300      	movs	r3, #0
 8001b90:	607b      	str	r3, [r7, #4]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 8001b92:	463b      	mov	r3, r7
 8001b94:	4619      	mov	r1, r3
 8001b96:	4806      	ldr	r0, [pc, #24]	; (8001bb0 <MX_TIM2_Init+0x98>)
 8001b98:	f004 ff86 	bl	8006aa8 <HAL_TIMEx_MasterConfigSynchronization>
 8001b9c:	4603      	mov	r3, r0
 8001b9e:	2b00      	cmp	r3, #0
 8001ba0:	d001      	beq.n	8001ba6 <MX_TIM2_Init+0x8e>
  {
    Error_Handler();
 8001ba2:	f7ff fccf 	bl	8001544 <Error_Handler>
  }
  /* USER CODE BEGIN TIM2_Init 2 */

  /* USER CODE END TIM2_Init 2 */

}
 8001ba6:	bf00      	nop
 8001ba8:	3718      	adds	r7, #24
 8001baa:	46bd      	mov	sp, r7
 8001bac:	bd80      	pop	{r7, pc}
 8001bae:	bf00      	nop
 8001bb0:	2000053c 	.word	0x2000053c

08001bb4 <MX_TIM3_Init>:
/* TIM3 init function */
void MX_TIM3_Init(void)
{
 8001bb4:	b580      	push	{r7, lr}
 8001bb6:	b086      	sub	sp, #24
 8001bb8:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM3_Init 0 */

  /* USER CODE END TIM3_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 8001bba:	f107 0308 	add.w	r3, r7, #8
 8001bbe:	2200      	movs	r2, #0
 8001bc0:	601a      	str	r2, [r3, #0]
 8001bc2:	605a      	str	r2, [r3, #4]
 8001bc4:	609a      	str	r2, [r3, #8]
 8001bc6:	60da      	str	r2, [r3, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8001bc8:	463b      	mov	r3, r7
 8001bca:	2200      	movs	r2, #0
 8001bcc:	601a      	str	r2, [r3, #0]
 8001bce:	605a      	str	r2, [r3, #4]

  /* USER CODE BEGIN TIM3_Init 1 */

  /* USER CODE END TIM3_Init 1 */
  htim3.Instance = TIM3;
 8001bd0:	4b1d      	ldr	r3, [pc, #116]	; (8001c48 <MX_TIM3_Init+0x94>)
 8001bd2:	4a1e      	ldr	r2, [pc, #120]	; (8001c4c <MX_TIM3_Init+0x98>)
 8001bd4:	601a      	str	r2, [r3, #0]
  htim3.Init.Prescaler = 9599;
 8001bd6:	4b1c      	ldr	r3, [pc, #112]	; (8001c48 <MX_TIM3_Init+0x94>)
 8001bd8:	f242 527f 	movw	r2, #9599	; 0x257f
 8001bdc:	605a      	str	r2, [r3, #4]
  htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 8001bde:	4b1a      	ldr	r3, [pc, #104]	; (8001c48 <MX_TIM3_Init+0x94>)
 8001be0:	2200      	movs	r2, #0
 8001be2:	609a      	str	r2, [r3, #8]
  htim3.Init.Period = 2499;
 8001be4:	4b18      	ldr	r3, [pc, #96]	; (8001c48 <MX_TIM3_Init+0x94>)
 8001be6:	f640 12c3 	movw	r2, #2499	; 0x9c3
 8001bea:	60da      	str	r2, [r3, #12]
  htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8001bec:	4b16      	ldr	r3, [pc, #88]	; (8001c48 <MX_TIM3_Init+0x94>)
 8001bee:	2200      	movs	r2, #0
 8001bf0:	611a      	str	r2, [r3, #16]
  htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8001bf2:	4b15      	ldr	r3, [pc, #84]	; (8001c48 <MX_TIM3_Init+0x94>)
 8001bf4:	2200      	movs	r2, #0
 8001bf6:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 8001bf8:	4813      	ldr	r0, [pc, #76]	; (8001c48 <MX_TIM3_Init+0x94>)
 8001bfa:	f004 f829 	bl	8005c50 <HAL_TIM_Base_Init>
 8001bfe:	4603      	mov	r3, r0
 8001c00:	2b00      	cmp	r3, #0
 8001c02:	d001      	beq.n	8001c08 <MX_TIM3_Init+0x54>
  {
    Error_Handler();
 8001c04:	f7ff fc9e 	bl	8001544 <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8001c08:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8001c0c:	60bb      	str	r3, [r7, #8]
  if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 8001c0e:	f107 0308 	add.w	r3, r7, #8
 8001c12:	4619      	mov	r1, r3
 8001c14:	480c      	ldr	r0, [pc, #48]	; (8001c48 <MX_TIM3_Init+0x94>)
 8001c16:	f004 fb7f 	bl	8006318 <HAL_TIM_ConfigClockSource>
 8001c1a:	4603      	mov	r3, r0
 8001c1c:	2b00      	cmp	r3, #0
 8001c1e:	d001      	beq.n	8001c24 <MX_TIM3_Init+0x70>
  {
    Error_Handler();
 8001c20:	f7ff fc90 	bl	8001544 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 8001c24:	2300      	movs	r3, #0
 8001c26:	603b      	str	r3, [r7, #0]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8001c28:	2300      	movs	r3, #0
 8001c2a:	607b      	str	r3, [r7, #4]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 8001c2c:	463b      	mov	r3, r7
 8001c2e:	4619      	mov	r1, r3
 8001c30:	4805      	ldr	r0, [pc, #20]	; (8001c48 <MX_TIM3_Init+0x94>)
 8001c32:	f004 ff39 	bl	8006aa8 <HAL_TIMEx_MasterConfigSynchronization>
 8001c36:	4603      	mov	r3, r0
 8001c38:	2b00      	cmp	r3, #0
 8001c3a:	d001      	beq.n	8001c40 <MX_TIM3_Init+0x8c>
  {
    Error_Handler();
 8001c3c:	f7ff fc82 	bl	8001544 <Error_Handler>
  }
  /* USER CODE BEGIN TIM3_Init 2 */

  /* USER CODE END TIM3_Init 2 */

}
 8001c40:	bf00      	nop
 8001c42:	3718      	adds	r7, #24
 8001c44:	46bd      	mov	sp, r7
 8001c46:	bd80      	pop	{r7, pc}
 8001c48:	20000584 	.word	0x20000584
 8001c4c:	40000400 	.word	0x40000400

08001c50 <MX_TIM5_Init>:
/* TIM5 init function */
void MX_TIM5_Init(void)
{
 8001c50:	b580      	push	{r7, lr}
 8001c52:	b08a      	sub	sp, #40	; 0x28
 8001c54:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM5_Init 0 */

  /* USER CODE END TIM5_Init 0 */

  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8001c56:	f107 0320 	add.w	r3, r7, #32
 8001c5a:	2200      	movs	r2, #0
 8001c5c:	601a      	str	r2, [r3, #0]
 8001c5e:	605a      	str	r2, [r3, #4]
  TIM_OC_InitTypeDef sConfigOC = {0};
 8001c60:	1d3b      	adds	r3, r7, #4
 8001c62:	2200      	movs	r2, #0
 8001c64:	601a      	str	r2, [r3, #0]
 8001c66:	605a      	str	r2, [r3, #4]
 8001c68:	609a      	str	r2, [r3, #8]
 8001c6a:	60da      	str	r2, [r3, #12]
 8001c6c:	611a      	str	r2, [r3, #16]
 8001c6e:	615a      	str	r2, [r3, #20]
 8001c70:	619a      	str	r2, [r3, #24]

  /* USER CODE BEGIN TIM5_Init 1 */

  /* USER CODE END TIM5_Init 1 */
  htim5.Instance = TIM5;
 8001c72:	4b22      	ldr	r3, [pc, #136]	; (8001cfc <MX_TIM5_Init+0xac>)
 8001c74:	4a22      	ldr	r2, [pc, #136]	; (8001d00 <MX_TIM5_Init+0xb0>)
 8001c76:	601a      	str	r2, [r3, #0]
  htim5.Init.Prescaler = 9599;
 8001c78:	4b20      	ldr	r3, [pc, #128]	; (8001cfc <MX_TIM5_Init+0xac>)
 8001c7a:	f242 527f 	movw	r2, #9599	; 0x257f
 8001c7e:	605a      	str	r2, [r3, #4]
  htim5.Init.CounterMode = TIM_COUNTERMODE_UP;
 8001c80:	4b1e      	ldr	r3, [pc, #120]	; (8001cfc <MX_TIM5_Init+0xac>)
 8001c82:	2200      	movs	r2, #0
 8001c84:	609a      	str	r2, [r3, #8]
  htim5.Init.Period = 9999;
 8001c86:	4b1d      	ldr	r3, [pc, #116]	; (8001cfc <MX_TIM5_Init+0xac>)
 8001c88:	f242 720f 	movw	r2, #9999	; 0x270f
 8001c8c:	60da      	str	r2, [r3, #12]
  htim5.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8001c8e:	4b1b      	ldr	r3, [pc, #108]	; (8001cfc <MX_TIM5_Init+0xac>)
 8001c90:	2200      	movs	r2, #0
 8001c92:	611a      	str	r2, [r3, #16]
  htim5.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8001c94:	4b19      	ldr	r3, [pc, #100]	; (8001cfc <MX_TIM5_Init+0xac>)
 8001c96:	2200      	movs	r2, #0
 8001c98:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_PWM_Init(&htim5) != HAL_OK)
 8001c9a:	4818      	ldr	r0, [pc, #96]	; (8001cfc <MX_TIM5_Init+0xac>)
 8001c9c:	f004 f88a 	bl	8005db4 <HAL_TIM_PWM_Init>
 8001ca0:	4603      	mov	r3, r0
 8001ca2:	2b00      	cmp	r3, #0
 8001ca4:	d001      	beq.n	8001caa <MX_TIM5_Init+0x5a>
  {
    Error_Handler();
 8001ca6:	f7ff fc4d 	bl	8001544 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 8001caa:	2300      	movs	r3, #0
 8001cac:	623b      	str	r3, [r7, #32]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8001cae:	2300      	movs	r3, #0
 8001cb0:	627b      	str	r3, [r7, #36]	; 0x24
  if (HAL_TIMEx_MasterConfigSynchronization(&htim5, &sMasterConfig) != HAL_OK)
 8001cb2:	f107 0320 	add.w	r3, r7, #32
 8001cb6:	4619      	mov	r1, r3
 8001cb8:	4810      	ldr	r0, [pc, #64]	; (8001cfc <MX_TIM5_Init+0xac>)
 8001cba:	f004 fef5 	bl	8006aa8 <HAL_TIMEx_MasterConfigSynchronization>
 8001cbe:	4603      	mov	r3, r0
 8001cc0:	2b00      	cmp	r3, #0
 8001cc2:	d001      	beq.n	8001cc8 <MX_TIM5_Init+0x78>
  {
    Error_Handler();
 8001cc4:	f7ff fc3e 	bl	8001544 <Error_Handler>
  }
  sConfigOC.OCMode = TIM_OCMODE_PWM1;
 8001cc8:	2360      	movs	r3, #96	; 0x60
 8001cca:	607b      	str	r3, [r7, #4]
  sConfigOC.Pulse = 0;
 8001ccc:	2300      	movs	r3, #0
 8001cce:	60bb      	str	r3, [r7, #8]
  sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 8001cd0:	2300      	movs	r3, #0
 8001cd2:	60fb      	str	r3, [r7, #12]
  sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 8001cd4:	2300      	movs	r3, #0
 8001cd6:	617b      	str	r3, [r7, #20]
  if (HAL_TIM_PWM_ConfigChannel(&htim5, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 8001cd8:	1d3b      	adds	r3, r7, #4
 8001cda:	2200      	movs	r2, #0
 8001cdc:	4619      	mov	r1, r3
 8001cde:	4807      	ldr	r0, [pc, #28]	; (8001cfc <MX_TIM5_Init+0xac>)
 8001ce0:	f004 fa58 	bl	8006194 <HAL_TIM_PWM_ConfigChannel>
 8001ce4:	4603      	mov	r3, r0
 8001ce6:	2b00      	cmp	r3, #0
 8001ce8:	d001      	beq.n	8001cee <MX_TIM5_Init+0x9e>
  {
    Error_Handler();
 8001cea:	f7ff fc2b 	bl	8001544 <Error_Handler>
  }
  /* USER CODE BEGIN TIM5_Init 2 */

  /* USER CODE END TIM5_Init 2 */
  HAL_TIM_MspPostInit(&htim5);
 8001cee:	4803      	ldr	r0, [pc, #12]	; (8001cfc <MX_TIM5_Init+0xac>)
 8001cf0:	f000 f86e 	bl	8001dd0 <HAL_TIM_MspPostInit>

}
 8001cf4:	bf00      	nop
 8001cf6:	3728      	adds	r7, #40	; 0x28
 8001cf8:	46bd      	mov	sp, r7
 8001cfa:	bd80      	pop	{r7, pc}
 8001cfc:	200005cc 	.word	0x200005cc
 8001d00:	40000c00 	.word	0x40000c00

08001d04 <HAL_TIM_Base_MspInit>:

void HAL_TIM_Base_MspInit(TIM_HandleTypeDef* tim_baseHandle)
{
 8001d04:	b580      	push	{r7, lr}
 8001d06:	b084      	sub	sp, #16
 8001d08:	af00      	add	r7, sp, #0
 8001d0a:	6078      	str	r0, [r7, #4]

  if(tim_baseHandle->Instance==TIM2)
 8001d0c:	687b      	ldr	r3, [r7, #4]
 8001d0e:	681b      	ldr	r3, [r3, #0]
 8001d10:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8001d14:	d116      	bne.n	8001d44 <HAL_TIM_Base_MspInit+0x40>
  {
  /* USER CODE BEGIN TIM2_MspInit 0 */

  /* USER CODE END TIM2_MspInit 0 */
    /* TIM2 clock enable */
    __HAL_RCC_TIM2_CLK_ENABLE();
 8001d16:	2300      	movs	r3, #0
 8001d18:	60fb      	str	r3, [r7, #12]
 8001d1a:	4b1a      	ldr	r3, [pc, #104]	; (8001d84 <HAL_TIM_Base_MspInit+0x80>)
 8001d1c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001d1e:	4a19      	ldr	r2, [pc, #100]	; (8001d84 <HAL_TIM_Base_MspInit+0x80>)
 8001d20:	f043 0301 	orr.w	r3, r3, #1
 8001d24:	6413      	str	r3, [r2, #64]	; 0x40
 8001d26:	4b17      	ldr	r3, [pc, #92]	; (8001d84 <HAL_TIM_Base_MspInit+0x80>)
 8001d28:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001d2a:	f003 0301 	and.w	r3, r3, #1
 8001d2e:	60fb      	str	r3, [r7, #12]
 8001d30:	68fb      	ldr	r3, [r7, #12]

    /* TIM2 interrupt Init */
    HAL_NVIC_SetPriority(TIM2_IRQn, 0, 0);
 8001d32:	2200      	movs	r2, #0
 8001d34:	2100      	movs	r1, #0
 8001d36:	201c      	movs	r0, #28
 8001d38:	f000 fc67 	bl	800260a <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(TIM2_IRQn);
 8001d3c:	201c      	movs	r0, #28
 8001d3e:	f000 fc80 	bl	8002642 <HAL_NVIC_EnableIRQ>
    HAL_NVIC_EnableIRQ(TIM3_IRQn);
  /* USER CODE BEGIN TIM3_MspInit 1 */

  /* USER CODE END TIM3_MspInit 1 */
  }
}
 8001d42:	e01a      	b.n	8001d7a <HAL_TIM_Base_MspInit+0x76>
  else if(tim_baseHandle->Instance==TIM3)
 8001d44:	687b      	ldr	r3, [r7, #4]
 8001d46:	681b      	ldr	r3, [r3, #0]
 8001d48:	4a0f      	ldr	r2, [pc, #60]	; (8001d88 <HAL_TIM_Base_MspInit+0x84>)
 8001d4a:	4293      	cmp	r3, r2
 8001d4c:	d115      	bne.n	8001d7a <HAL_TIM_Base_MspInit+0x76>
    __HAL_RCC_TIM3_CLK_ENABLE();
 8001d4e:	2300      	movs	r3, #0
 8001d50:	60bb      	str	r3, [r7, #8]
 8001d52:	4b0c      	ldr	r3, [pc, #48]	; (8001d84 <HAL_TIM_Base_MspInit+0x80>)
 8001d54:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001d56:	4a0b      	ldr	r2, [pc, #44]	; (8001d84 <HAL_TIM_Base_MspInit+0x80>)
 8001d58:	f043 0302 	orr.w	r3, r3, #2
 8001d5c:	6413      	str	r3, [r2, #64]	; 0x40
 8001d5e:	4b09      	ldr	r3, [pc, #36]	; (8001d84 <HAL_TIM_Base_MspInit+0x80>)
 8001d60:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001d62:	f003 0302 	and.w	r3, r3, #2
 8001d66:	60bb      	str	r3, [r7, #8]
 8001d68:	68bb      	ldr	r3, [r7, #8]
    HAL_NVIC_SetPriority(TIM3_IRQn, 0, 0);
 8001d6a:	2200      	movs	r2, #0
 8001d6c:	2100      	movs	r1, #0
 8001d6e:	201d      	movs	r0, #29
 8001d70:	f000 fc4b 	bl	800260a <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(TIM3_IRQn);
 8001d74:	201d      	movs	r0, #29
 8001d76:	f000 fc64 	bl	8002642 <HAL_NVIC_EnableIRQ>
}
 8001d7a:	bf00      	nop
 8001d7c:	3710      	adds	r7, #16
 8001d7e:	46bd      	mov	sp, r7
 8001d80:	bd80      	pop	{r7, pc}
 8001d82:	bf00      	nop
 8001d84:	40023800 	.word	0x40023800
 8001d88:	40000400 	.word	0x40000400

08001d8c <HAL_TIM_PWM_MspInit>:

void HAL_TIM_PWM_MspInit(TIM_HandleTypeDef* tim_pwmHandle)
{
 8001d8c:	b480      	push	{r7}
 8001d8e:	b085      	sub	sp, #20
 8001d90:	af00      	add	r7, sp, #0
 8001d92:	6078      	str	r0, [r7, #4]

  if(tim_pwmHandle->Instance==TIM5)
 8001d94:	687b      	ldr	r3, [r7, #4]
 8001d96:	681b      	ldr	r3, [r3, #0]
 8001d98:	4a0b      	ldr	r2, [pc, #44]	; (8001dc8 <HAL_TIM_PWM_MspInit+0x3c>)
 8001d9a:	4293      	cmp	r3, r2
 8001d9c:	d10d      	bne.n	8001dba <HAL_TIM_PWM_MspInit+0x2e>
  {
  /* USER CODE BEGIN TIM5_MspInit 0 */

  /* USER CODE END TIM5_MspInit 0 */
    /* TIM5 clock enable */
    __HAL_RCC_TIM5_CLK_ENABLE();
 8001d9e:	2300      	movs	r3, #0
 8001da0:	60fb      	str	r3, [r7, #12]
 8001da2:	4b0a      	ldr	r3, [pc, #40]	; (8001dcc <HAL_TIM_PWM_MspInit+0x40>)
 8001da4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001da6:	4a09      	ldr	r2, [pc, #36]	; (8001dcc <HAL_TIM_PWM_MspInit+0x40>)
 8001da8:	f043 0308 	orr.w	r3, r3, #8
 8001dac:	6413      	str	r3, [r2, #64]	; 0x40
 8001dae:	4b07      	ldr	r3, [pc, #28]	; (8001dcc <HAL_TIM_PWM_MspInit+0x40>)
 8001db0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001db2:	f003 0308 	and.w	r3, r3, #8
 8001db6:	60fb      	str	r3, [r7, #12]
 8001db8:	68fb      	ldr	r3, [r7, #12]
  /* USER CODE BEGIN TIM5_MspInit 1 */

  /* USER CODE END TIM5_MspInit 1 */
  }
}
 8001dba:	bf00      	nop
 8001dbc:	3714      	adds	r7, #20
 8001dbe:	46bd      	mov	sp, r7
 8001dc0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001dc4:	4770      	bx	lr
 8001dc6:	bf00      	nop
 8001dc8:	40000c00 	.word	0x40000c00
 8001dcc:	40023800 	.word	0x40023800

08001dd0 <HAL_TIM_MspPostInit>:
void HAL_TIM_MspPostInit(TIM_HandleTypeDef* timHandle)
{
 8001dd0:	b580      	push	{r7, lr}
 8001dd2:	b088      	sub	sp, #32
 8001dd4:	af00      	add	r7, sp, #0
 8001dd6:	6078      	str	r0, [r7, #4]

  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001dd8:	f107 030c 	add.w	r3, r7, #12
 8001ddc:	2200      	movs	r2, #0
 8001dde:	601a      	str	r2, [r3, #0]
 8001de0:	605a      	str	r2, [r3, #4]
 8001de2:	609a      	str	r2, [r3, #8]
 8001de4:	60da      	str	r2, [r3, #12]
 8001de6:	611a      	str	r2, [r3, #16]
  if(timHandle->Instance==TIM5)
 8001de8:	687b      	ldr	r3, [r7, #4]
 8001dea:	681b      	ldr	r3, [r3, #0]
 8001dec:	4a12      	ldr	r2, [pc, #72]	; (8001e38 <HAL_TIM_MspPostInit+0x68>)
 8001dee:	4293      	cmp	r3, r2
 8001df0:	d11d      	bne.n	8001e2e <HAL_TIM_MspPostInit+0x5e>
  {
  /* USER CODE BEGIN TIM5_MspPostInit 0 */

  /* USER CODE END TIM5_MspPostInit 0 */

    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001df2:	2300      	movs	r3, #0
 8001df4:	60bb      	str	r3, [r7, #8]
 8001df6:	4b11      	ldr	r3, [pc, #68]	; (8001e3c <HAL_TIM_MspPostInit+0x6c>)
 8001df8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001dfa:	4a10      	ldr	r2, [pc, #64]	; (8001e3c <HAL_TIM_MspPostInit+0x6c>)
 8001dfc:	f043 0301 	orr.w	r3, r3, #1
 8001e00:	6313      	str	r3, [r2, #48]	; 0x30
 8001e02:	4b0e      	ldr	r3, [pc, #56]	; (8001e3c <HAL_TIM_MspPostInit+0x6c>)
 8001e04:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001e06:	f003 0301 	and.w	r3, r3, #1
 8001e0a:	60bb      	str	r3, [r7, #8]
 8001e0c:	68bb      	ldr	r3, [r7, #8]
    /**TIM5 GPIO Configuration
    PA0-WKUP     ------> TIM5_CH1
    */
    GPIO_InitStruct.Pin = HEATER_PWM_Pin;
 8001e0e:	2301      	movs	r3, #1
 8001e10:	60fb      	str	r3, [r7, #12]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001e12:	2302      	movs	r3, #2
 8001e14:	613b      	str	r3, [r7, #16]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001e16:	2300      	movs	r3, #0
 8001e18:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001e1a:	2300      	movs	r3, #0
 8001e1c:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Alternate = GPIO_AF2_TIM5;
 8001e1e:	2302      	movs	r3, #2
 8001e20:	61fb      	str	r3, [r7, #28]
    HAL_GPIO_Init(HEATER_PWM_GPIO_Port, &GPIO_InitStruct);
 8001e22:	f107 030c 	add.w	r3, r7, #12
 8001e26:	4619      	mov	r1, r3
 8001e28:	4805      	ldr	r0, [pc, #20]	; (8001e40 <HAL_TIM_MspPostInit+0x70>)
 8001e2a:	f000 ffb1 	bl	8002d90 <HAL_GPIO_Init>
  /* USER CODE BEGIN TIM5_MspPostInit 1 */

  /* USER CODE END TIM5_MspPostInit 1 */
  }

}
 8001e2e:	bf00      	nop
 8001e30:	3720      	adds	r7, #32
 8001e32:	46bd      	mov	sp, r7
 8001e34:	bd80      	pop	{r7, pc}
 8001e36:	bf00      	nop
 8001e38:	40000c00 	.word	0x40000c00
 8001e3c:	40023800 	.word	0x40023800
 8001e40:	40020000 	.word	0x40020000

08001e44 <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler:  
  ldr   sp, =_estack    		 /* set stack pointer */
 8001e44:	f8df d034 	ldr.w	sp, [pc, #52]	; 8001e7c <LoopFillZerobss+0xe>

/* Call the clock system initialization function.*/
  bl  SystemInit   
 8001e48:	f7ff fe54 	bl	8001af4 <SystemInit>

/* Copy the data segment initializers from flash to SRAM */  
  ldr r0, =_sdata
 8001e4c:	480c      	ldr	r0, [pc, #48]	; (8001e80 <LoopFillZerobss+0x12>)
  ldr r1, =_edata
 8001e4e:	490d      	ldr	r1, [pc, #52]	; (8001e84 <LoopFillZerobss+0x16>)
  ldr r2, =_sidata
 8001e50:	4a0d      	ldr	r2, [pc, #52]	; (8001e88 <LoopFillZerobss+0x1a>)
  movs r3, #0
 8001e52:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8001e54:	e002      	b.n	8001e5c <LoopCopyDataInit>

08001e56 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8001e56:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8001e58:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8001e5a:	3304      	adds	r3, #4

08001e5c <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8001e5c:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8001e5e:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8001e60:	d3f9      	bcc.n	8001e56 <CopyDataInit>
  
/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8001e62:	4a0a      	ldr	r2, [pc, #40]	; (8001e8c <LoopFillZerobss+0x1e>)
  ldr r4, =_ebss
 8001e64:	4c0a      	ldr	r4, [pc, #40]	; (8001e90 <LoopFillZerobss+0x22>)
  movs r3, #0
 8001e66:	2300      	movs	r3, #0
  b LoopFillZerobss
 8001e68:	e001      	b.n	8001e6e <LoopFillZerobss>

08001e6a <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8001e6a:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8001e6c:	3204      	adds	r2, #4

08001e6e <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8001e6e:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8001e70:	d3fb      	bcc.n	8001e6a <FillZerobss>

/* Call static constructors */
    bl __libc_init_array
 8001e72:	f029 f9d9 	bl	802b228 <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
 8001e76:	f7ff fa25 	bl	80012c4 <main>
  bx  lr    
 8001e7a:	4770      	bx	lr
  ldr   sp, =_estack    		 /* set stack pointer */
 8001e7c:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 8001e80:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8001e84:	20000358 	.word	0x20000358
  ldr r2, =_sidata
 8001e88:	0804f350 	.word	0x0804f350
  ldr r2, =_sbss
 8001e8c:	20000358 	.word	0x20000358
  ldr r4, =_ebss
 8001e90:	2000786c 	.word	0x2000786c

08001e94 <ADC_IRQHandler>:
 * @retval None       
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
 8001e94:	e7fe      	b.n	8001e94 <ADC_IRQHandler>
	...

08001e98 <Max6675_Read_Temp>:
// ------------------- Variables ----------------
_Bool TCF=0;                                          // Thermocouple Connection acknowledge Flag
uint8_t DATARX[2];                                    // Raw Data from MAX6675

// ------------------- Functions ----------------
float Max6675_Read_Temp(void){
 8001e98:	b580      	push	{r7, lr}
 8001e9a:	b082      	sub	sp, #8
 8001e9c:	af00      	add	r7, sp, #0
float Temp=0;                                         // Temperature Variable
 8001e9e:	f04f 0300 	mov.w	r3, #0
 8001ea2:	607b      	str	r3, [r7, #4]
HAL_GPIO_WritePin(SSPORT,SSPIN,GPIO_PIN_RESET);       // Low State for SPI Communication
 8001ea4:	2200      	movs	r2, #0
 8001ea6:	2120      	movs	r1, #32
 8001ea8:	481e      	ldr	r0, [pc, #120]	; (8001f24 <Max6675_Read_Temp+0x8c>)
 8001eaa:	f001 f8f5 	bl	8003098 <HAL_GPIO_WritePin>
HAL_SPI_Receive(&hspi3, DATARX, 1, 50);       // DATA Transfer
 8001eae:	2332      	movs	r3, #50	; 0x32
 8001eb0:	2201      	movs	r2, #1
 8001eb2:	491d      	ldr	r1, [pc, #116]	; (8001f28 <Max6675_Read_Temp+0x90>)
 8001eb4:	481d      	ldr	r0, [pc, #116]	; (8001f2c <Max6675_Read_Temp+0x94>)
 8001eb6:	f003 f979 	bl	80051ac <HAL_SPI_Receive>
HAL_GPIO_WritePin(SSPORT,SSPIN,GPIO_PIN_SET);         // High State for SPI Communication
 8001eba:	2201      	movs	r2, #1
 8001ebc:	2120      	movs	r1, #32
 8001ebe:	4819      	ldr	r0, [pc, #100]	; (8001f24 <Max6675_Read_Temp+0x8c>)
 8001ec0:	f001 f8ea 	bl	8003098 <HAL_GPIO_WritePin>
TCF=(((DATARX[0]|(DATARX[1]<<8))>>2)& 0x0001);        // State of Connecting
 8001ec4:	4b18      	ldr	r3, [pc, #96]	; (8001f28 <Max6675_Read_Temp+0x90>)
 8001ec6:	781b      	ldrb	r3, [r3, #0]
 8001ec8:	461a      	mov	r2, r3
 8001eca:	4b17      	ldr	r3, [pc, #92]	; (8001f28 <Max6675_Read_Temp+0x90>)
 8001ecc:	785b      	ldrb	r3, [r3, #1]
 8001ece:	021b      	lsls	r3, r3, #8
 8001ed0:	4313      	orrs	r3, r2
 8001ed2:	109b      	asrs	r3, r3, #2
 8001ed4:	f003 0301 	and.w	r3, r3, #1
 8001ed8:	2b00      	cmp	r3, #0
 8001eda:	bf14      	ite	ne
 8001edc:	2301      	movne	r3, #1
 8001ede:	2300      	moveq	r3, #0
 8001ee0:	b2da      	uxtb	r2, r3
 8001ee2:	4b13      	ldr	r3, [pc, #76]	; (8001f30 <Max6675_Read_Temp+0x98>)
 8001ee4:	701a      	strb	r2, [r3, #0]
Temp=((((DATARX[0]|DATARX[1]<<8)))>>3);               // Temperature Data Extraction
 8001ee6:	4b10      	ldr	r3, [pc, #64]	; (8001f28 <Max6675_Read_Temp+0x90>)
 8001ee8:	781b      	ldrb	r3, [r3, #0]
 8001eea:	461a      	mov	r2, r3
 8001eec:	4b0e      	ldr	r3, [pc, #56]	; (8001f28 <Max6675_Read_Temp+0x90>)
 8001eee:	785b      	ldrb	r3, [r3, #1]
 8001ef0:	021b      	lsls	r3, r3, #8
 8001ef2:	4313      	orrs	r3, r2
 8001ef4:	10db      	asrs	r3, r3, #3
 8001ef6:	ee07 3a90 	vmov	s15, r3
 8001efa:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8001efe:	edc7 7a01 	vstr	s15, [r7, #4]
Temp*=0.25;                                           // Data to Centigrade Conversation
 8001f02:	edd7 7a01 	vldr	s15, [r7, #4]
 8001f06:	eeb5 7a00 	vmov.f32	s14, #80	; 0x3e800000  0.250
 8001f0a:	ee67 7a87 	vmul.f32	s15, s15, s14
 8001f0e:	edc7 7a01 	vstr	s15, [r7, #4]
return Temp;
 8001f12:	687b      	ldr	r3, [r7, #4]
 8001f14:	ee07 3a90 	vmov	s15, r3
}
 8001f18:	eeb0 0a67 	vmov.f32	s0, s15
 8001f1c:	3708      	adds	r7, #8
 8001f1e:	46bd      	mov	sp, r7
 8001f20:	bd80      	pop	{r7, pc}
 8001f22:	bf00      	nop
 8001f24:	40020400 	.word	0x40020400
 8001f28:	20000618 	.word	0x20000618
 8001f2c:	20000480 	.word	0x20000480
 8001f30:	20000614 	.word	0x20000614

08001f34 <Init_LCD>:





void Init_LCD() {
 8001f34:	b580      	push	{r7, lr}
 8001f36:	af00      	add	r7, sp, #0
#ifdef ST7796
	HAL_Delay(120);
 8001f38:	2078      	movs	r0, #120	; 0x78
 8001f3a:	f000 fa67 	bl	800240c <HAL_Delay>
		CS_L();
 8001f3e:	f000 f9c3 	bl	80022c8 <CS_L>
		writecommand(0x01); //Software reset
 8001f42:	2001      	movs	r0, #1
 8001f44:	f000 f980 	bl	8002248 <writecommand>
		HAL_Delay(120);
 8001f48:	2078      	movs	r0, #120	; 0x78
 8001f4a:	f000 fa5f 	bl	800240c <HAL_Delay>

		writecommand(0x11); //Sleep exit
 8001f4e:	2011      	movs	r0, #17
 8001f50:	f000 f97a 	bl	8002248 <writecommand>
		HAL_Delay(120);
 8001f54:	2078      	movs	r0, #120	; 0x78
 8001f56:	f000 fa59 	bl	800240c <HAL_Delay>

		writecommand(0xF0); //Command Set control
 8001f5a:	20f0      	movs	r0, #240	; 0xf0
 8001f5c:	f000 f974 	bl	8002248 <writecommand>
		writedata(0xC3);    //Enable extension command 2 partI
 8001f60:	20c3      	movs	r0, #195	; 0xc3
 8001f62:	f000 f991 	bl	8002288 <writedata>

		writecommand(0xF0); //Command Set control
 8001f66:	20f0      	movs	r0, #240	; 0xf0
 8001f68:	f000 f96e 	bl	8002248 <writecommand>
		writedata(0x96);    //Enable extension command 2 partII
 8001f6c:	2096      	movs	r0, #150	; 0x96
 8001f6e:	f000 f98b 	bl	8002288 <writedata>

		writecommand(0x36); //Memory Data Access Control MX, MY, RGB mode
 8001f72:	2036      	movs	r0, #54	; 0x36
 8001f74:	f000 f968 	bl	8002248 <writecommand>
		writedata(0xE8);    //X-Mirror, Top-Left to right-Buttom, RGB
 8001f78:	20e8      	movs	r0, #232	; 0xe8
 8001f7a:	f000 f985 	bl	8002288 <writedata>

		writecommand(0x3A); //Interface Pixel Format
 8001f7e:	203a      	movs	r0, #58	; 0x3a
 8001f80:	f000 f962 	bl	8002248 <writecommand>
		writedata(0x55);    //Control interface color format set to 16
 8001f84:	2055      	movs	r0, #85	; 0x55
 8001f86:	f000 f97f 	bl	8002288 <writedata>


		writecommand(0xB4); //Column inversion
 8001f8a:	20b4      	movs	r0, #180	; 0xb4
 8001f8c:	f000 f95c 	bl	8002248 <writecommand>
		writedata(0x01);    //1-dot inversion
 8001f90:	2001      	movs	r0, #1
 8001f92:	f000 f979 	bl	8002288 <writedata>

		writecommand(0xB6); //Display Function Control
 8001f96:	20b6      	movs	r0, #182	; 0xb6
 8001f98:	f000 f956 	bl	8002248 <writecommand>
		writedata(0x80);    //Bypass
 8001f9c:	2080      	movs	r0, #128	; 0x80
 8001f9e:	f000 f973 	bl	8002288 <writedata>
		writedata(0x02);    //Source Output Scan from S1 to S960, Gate Output scan from G1 to G480, scan cycle=2
 8001fa2:	2002      	movs	r0, #2
 8001fa4:	f000 f970 	bl	8002288 <writedata>
		writedata(0x3B);    //LCD Drive Line=8*(59+1)
 8001fa8:	203b      	movs	r0, #59	; 0x3b
 8001faa:	f000 f96d 	bl	8002288 <writedata>


		writecommand(0xE8); //Display Output Ctrl Adjust
 8001fae:	20e8      	movs	r0, #232	; 0xe8
 8001fb0:	f000 f94a 	bl	8002248 <writecommand>
		writedata(0x40);
 8001fb4:	2040      	movs	r0, #64	; 0x40
 8001fb6:	f000 f967 	bl	8002288 <writedata>
		writedata(0x8A);
 8001fba:	208a      	movs	r0, #138	; 0x8a
 8001fbc:	f000 f964 	bl	8002288 <writedata>
		writedata(0x00);
 8001fc0:	2000      	movs	r0, #0
 8001fc2:	f000 f961 	bl	8002288 <writedata>
		writedata(0x00);
 8001fc6:	2000      	movs	r0, #0
 8001fc8:	f000 f95e 	bl	8002288 <writedata>
		writedata(0x29);    //Source eqaulizing period time= 22.5 us
 8001fcc:	2029      	movs	r0, #41	; 0x29
 8001fce:	f000 f95b 	bl	8002288 <writedata>
		writedata(0x19);    //Timing for "Gate start"=25 (Tclk)
 8001fd2:	2019      	movs	r0, #25
 8001fd4:	f000 f958 	bl	8002288 <writedata>
		writedata(0xA5);    //Timing for "Gate End"=37 (Tclk), Gate driver EQ function ON
 8001fd8:	20a5      	movs	r0, #165	; 0xa5
 8001fda:	f000 f955 	bl	8002288 <writedata>
		writedata(0x33);
 8001fde:	2033      	movs	r0, #51	; 0x33
 8001fe0:	f000 f952 	bl	8002288 <writedata>

		writecommand(0xC1); //Power control2
 8001fe4:	20c1      	movs	r0, #193	; 0xc1
 8001fe6:	f000 f92f 	bl	8002248 <writecommand>
		writedata(0x06);    //VAP(GVDD)=3.85+( vcom+vcom offset), VAN(GVCL)=-3.85+( vcom+vcom offset)
 8001fea:	2006      	movs	r0, #6
 8001fec:	f000 f94c 	bl	8002288 <writedata>

		writecommand(0xC2); //Power control 3
 8001ff0:	20c2      	movs	r0, #194	; 0xc2
 8001ff2:	f000 f929 	bl	8002248 <writecommand>
		writedata(0xA7);    //Source driving current level=low, Gamma driving current level=High
 8001ff6:	20a7      	movs	r0, #167	; 0xa7
 8001ff8:	f000 f946 	bl	8002288 <writedata>

		writecommand(0xC5); //VCOM Control
 8001ffc:	20c5      	movs	r0, #197	; 0xc5
 8001ffe:	f000 f923 	bl	8002248 <writecommand>
		writedata(0x18);    //VCOM=0.9
 8002002:	2018      	movs	r0, #24
 8002004:	f000 f940 	bl	8002288 <writedata>

		HAL_Delay(120);
 8002008:	2078      	movs	r0, #120	; 0x78
 800200a:	f000 f9ff 	bl	800240c <HAL_Delay>

		//ST7796 Gamma Sequence
		writecommand(0xE0); //Gamma"+"
 800200e:	20e0      	movs	r0, #224	; 0xe0
 8002010:	f000 f91a 	bl	8002248 <writecommand>
		writedata(0xF0);
 8002014:	20f0      	movs	r0, #240	; 0xf0
 8002016:	f000 f937 	bl	8002288 <writedata>
		writedata(0x09);
 800201a:	2009      	movs	r0, #9
 800201c:	f000 f934 	bl	8002288 <writedata>
		writedata(0x0b);
 8002020:	200b      	movs	r0, #11
 8002022:	f000 f931 	bl	8002288 <writedata>
		writedata(0x06);
 8002026:	2006      	movs	r0, #6
 8002028:	f000 f92e 	bl	8002288 <writedata>
		writedata(0x04);
 800202c:	2004      	movs	r0, #4
 800202e:	f000 f92b 	bl	8002288 <writedata>
		writedata(0x15);
 8002032:	2015      	movs	r0, #21
 8002034:	f000 f928 	bl	8002288 <writedata>
		writedata(0x2F);
 8002038:	202f      	movs	r0, #47	; 0x2f
 800203a:	f000 f925 	bl	8002288 <writedata>
		writedata(0x54);
 800203e:	2054      	movs	r0, #84	; 0x54
 8002040:	f000 f922 	bl	8002288 <writedata>
		writedata(0x42);
 8002044:	2042      	movs	r0, #66	; 0x42
 8002046:	f000 f91f 	bl	8002288 <writedata>
		writedata(0x3C);
 800204a:	203c      	movs	r0, #60	; 0x3c
 800204c:	f000 f91c 	bl	8002288 <writedata>
		writedata(0x17);
 8002050:	2017      	movs	r0, #23
 8002052:	f000 f919 	bl	8002288 <writedata>
		writedata(0x14);
 8002056:	2014      	movs	r0, #20
 8002058:	f000 f916 	bl	8002288 <writedata>
		writedata(0x18);
 800205c:	2018      	movs	r0, #24
 800205e:	f000 f913 	bl	8002288 <writedata>
		writedata(0x1B);
 8002062:	201b      	movs	r0, #27
 8002064:	f000 f910 	bl	8002288 <writedata>

		writecommand(0xE1); //Gamma"-"
 8002068:	20e1      	movs	r0, #225	; 0xe1
 800206a:	f000 f8ed 	bl	8002248 <writecommand>
		writedata(0xE0);
 800206e:	20e0      	movs	r0, #224	; 0xe0
 8002070:	f000 f90a 	bl	8002288 <writedata>
		writedata(0x09);
 8002074:	2009      	movs	r0, #9
 8002076:	f000 f907 	bl	8002288 <writedata>
		writedata(0x0B);
 800207a:	200b      	movs	r0, #11
 800207c:	f000 f904 	bl	8002288 <writedata>
		writedata(0x06);
 8002080:	2006      	movs	r0, #6
 8002082:	f000 f901 	bl	8002288 <writedata>
		writedata(0x04);
 8002086:	2004      	movs	r0, #4
 8002088:	f000 f8fe 	bl	8002288 <writedata>
		writedata(0x03);
 800208c:	2003      	movs	r0, #3
 800208e:	f000 f8fb 	bl	8002288 <writedata>
		writedata(0x2B);
 8002092:	202b      	movs	r0, #43	; 0x2b
 8002094:	f000 f8f8 	bl	8002288 <writedata>
		writedata(0x43);
 8002098:	2043      	movs	r0, #67	; 0x43
 800209a:	f000 f8f5 	bl	8002288 <writedata>
		writedata(0x42);
 800209e:	2042      	movs	r0, #66	; 0x42
 80020a0:	f000 f8f2 	bl	8002288 <writedata>
		writedata(0x3B);
 80020a4:	203b      	movs	r0, #59	; 0x3b
 80020a6:	f000 f8ef 	bl	8002288 <writedata>
		writedata(0x16);
 80020aa:	2016      	movs	r0, #22
 80020ac:	f000 f8ec 	bl	8002288 <writedata>
		writedata(0x14);
 80020b0:	2014      	movs	r0, #20
 80020b2:	f000 f8e9 	bl	8002288 <writedata>
		writedata(0x17);
 80020b6:	2017      	movs	r0, #23
 80020b8:	f000 f8e6 	bl	8002288 <writedata>
		writedata(0x1B);
 80020bc:	201b      	movs	r0, #27
 80020be:	f000 f8e3 	bl	8002288 <writedata>

		HAL_Delay(120);
 80020c2:	2078      	movs	r0, #120	; 0x78
 80020c4:	f000 f9a2 	bl	800240c <HAL_Delay>

		writecommand(0xF0); //Command Set control
 80020c8:	20f0      	movs	r0, #240	; 0xf0
 80020ca:	f000 f8bd 	bl	8002248 <writecommand>
		writedata(0x3C);    //Disable extension command 2 partI
 80020ce:	203c      	movs	r0, #60	; 0x3c
 80020d0:	f000 f8da 	bl	8002288 <writedata>

		writecommand(0xF0); //Command Set control
 80020d4:	20f0      	movs	r0, #240	; 0xf0
 80020d6:	f000 f8b7 	bl	8002248 <writecommand>
		writedata(0x69);    //Disable extension command 2 partII
 80020da:	2069      	movs	r0, #105	; 0x69
 80020dc:	f000 f8d4 	bl	8002288 <writedata>

		CS_H();
 80020e0:	f000 f8fe 	bl	80022e0 <CS_H>
	  HAL_Delay(120);
 80020e4:	2078      	movs	r0, #120	; 0x78
 80020e6:	f000 f991 	bl	800240c <HAL_Delay>
	  CS_L();
 80020ea:	f000 f8ed 	bl	80022c8 <CS_L>
		writecommand(0x29); //Display on
 80020ee:	2029      	movs	r0, #41	; 0x29
 80020f0:	f000 f8aa 	bl	8002248 <writecommand>
    HAL_Delay(120);

        writecommand(0x29);  //Display on
        HAL_Delay(25);
#endif
}
 80020f4:	bf00      	nop
 80020f6:	bd80      	pop	{r7, pc}

080020f8 <ST7796_SetWindow>:


void ST7796_SetWindow(uint16_t x0, uint16_t y0, uint16_t x1, uint16_t y1)
{
 80020f8:	b590      	push	{r4, r7, lr}
 80020fa:	b083      	sub	sp, #12
 80020fc:	af00      	add	r7, sp, #0
 80020fe:	4604      	mov	r4, r0
 8002100:	4608      	mov	r0, r1
 8002102:	4611      	mov	r1, r2
 8002104:	461a      	mov	r2, r3
 8002106:	4623      	mov	r3, r4
 8002108:	80fb      	strh	r3, [r7, #6]
 800210a:	4603      	mov	r3, r0
 800210c:	80bb      	strh	r3, [r7, #4]
 800210e:	460b      	mov	r3, r1
 8002110:	807b      	strh	r3, [r7, #2]
 8002112:	4613      	mov	r3, r2
 8002114:	803b      	strh	r3, [r7, #0]
	writecommand(0x2A); // Column addr set
 8002116:	202a      	movs	r0, #42	; 0x2a
 8002118:	f000 f896 	bl	8002248 <writecommand>
	writedata(x0 >> 8);
 800211c:	88fb      	ldrh	r3, [r7, #6]
 800211e:	0a1b      	lsrs	r3, r3, #8
 8002120:	b29b      	uxth	r3, r3
 8002122:	b2db      	uxtb	r3, r3
 8002124:	4618      	mov	r0, r3
 8002126:	f000 f8af 	bl	8002288 <writedata>
	writedata(x0 & 0xFF);     // XSTART
 800212a:	88fb      	ldrh	r3, [r7, #6]
 800212c:	b2db      	uxtb	r3, r3
 800212e:	4618      	mov	r0, r3
 8002130:	f000 f8aa 	bl	8002288 <writedata>
	writedata(x1 >> 8);
 8002134:	887b      	ldrh	r3, [r7, #2]
 8002136:	0a1b      	lsrs	r3, r3, #8
 8002138:	b29b      	uxth	r3, r3
 800213a:	b2db      	uxtb	r3, r3
 800213c:	4618      	mov	r0, r3
 800213e:	f000 f8a3 	bl	8002288 <writedata>
	writedata(x1 & 0xFF);     // XEND
 8002142:	887b      	ldrh	r3, [r7, #2]
 8002144:	b2db      	uxtb	r3, r3
 8002146:	4618      	mov	r0, r3
 8002148:	f000 f89e 	bl	8002288 <writedata>
	writecommand(0x2B); // Row addr set
 800214c:	202b      	movs	r0, #43	; 0x2b
 800214e:	f000 f87b 	bl	8002248 <writecommand>
	writedata(y0 >> 8);
 8002152:	88bb      	ldrh	r3, [r7, #4]
 8002154:	0a1b      	lsrs	r3, r3, #8
 8002156:	b29b      	uxth	r3, r3
 8002158:	b2db      	uxtb	r3, r3
 800215a:	4618      	mov	r0, r3
 800215c:	f000 f894 	bl	8002288 <writedata>
	writedata(y0 & 0xff);     // YSTART
 8002160:	88bb      	ldrh	r3, [r7, #4]
 8002162:	b2db      	uxtb	r3, r3
 8002164:	4618      	mov	r0, r3
 8002166:	f000 f88f 	bl	8002288 <writedata>
	writedata(y1 >> 8);
 800216a:	883b      	ldrh	r3, [r7, #0]
 800216c:	0a1b      	lsrs	r3, r3, #8
 800216e:	b29b      	uxth	r3, r3
 8002170:	b2db      	uxtb	r3, r3
 8002172:	4618      	mov	r0, r3
 8002174:	f000 f888 	bl	8002288 <writedata>
	writedata(y1 & 0xff);     // YEND
 8002178:	883b      	ldrh	r3, [r7, #0]
 800217a:	b2db      	uxtb	r3, r3
 800217c:	4618      	mov	r0, r3
 800217e:	f000 f883 	bl	8002288 <writedata>
	writecommand(0x2C); // write to RAM
 8002182:	202c      	movs	r0, #44	; 0x2c
 8002184:	f000 f860 	bl	8002248 <writecommand>
	CS_L();
 8002188:	f000 f89e 	bl	80022c8 <CS_L>
	HAL_GPIO_WritePin(GPIOA,GPIO_PIN_6,GPIO_PIN_SET);
 800218c:	2201      	movs	r2, #1
 800218e:	2140      	movs	r1, #64	; 0x40
 8002190:	4803      	ldr	r0, [pc, #12]	; (80021a0 <ST7796_SetWindow+0xa8>)
 8002192:	f000 ff81 	bl	8003098 <HAL_GPIO_WritePin>
}
 8002196:	bf00      	nop
 8002198:	370c      	adds	r7, #12
 800219a:	46bd      	mov	sp, r7
 800219c:	bd90      	pop	{r4, r7, pc}
 800219e:	bf00      	nop
 80021a0:	40020000 	.word	0x40020000

080021a4 <ConvHL>:




static void ConvHL(uint8_t *s, int32_t l)
{
 80021a4:	b480      	push	{r7}
 80021a6:	b085      	sub	sp, #20
 80021a8:	af00      	add	r7, sp, #0
 80021aa:	6078      	str	r0, [r7, #4]
 80021ac:	6039      	str	r1, [r7, #0]
	uint8_t v;
	while (l > 0) {
 80021ae:	e010      	b.n	80021d2 <ConvHL+0x2e>
		v = *(s+1);
 80021b0:	687b      	ldr	r3, [r7, #4]
 80021b2:	785b      	ldrb	r3, [r3, #1]
 80021b4:	73fb      	strb	r3, [r7, #15]
		*(s+1) = *s;
 80021b6:	687b      	ldr	r3, [r7, #4]
 80021b8:	3301      	adds	r3, #1
 80021ba:	687a      	ldr	r2, [r7, #4]
 80021bc:	7812      	ldrb	r2, [r2, #0]
 80021be:	701a      	strb	r2, [r3, #0]
		*s = v;
 80021c0:	687b      	ldr	r3, [r7, #4]
 80021c2:	7bfa      	ldrb	r2, [r7, #15]
 80021c4:	701a      	strb	r2, [r3, #0]
		s += 2;
 80021c6:	687b      	ldr	r3, [r7, #4]
 80021c8:	3302      	adds	r3, #2
 80021ca:	607b      	str	r3, [r7, #4]
		l -= 2;
 80021cc:	683b      	ldr	r3, [r7, #0]
 80021ce:	3b02      	subs	r3, #2
 80021d0:	603b      	str	r3, [r7, #0]
	while (l > 0) {
 80021d2:	683b      	ldr	r3, [r7, #0]
 80021d4:	2b00      	cmp	r3, #0
 80021d6:	dceb      	bgt.n	80021b0 <ConvHL+0xc>
	}
}
 80021d8:	bf00      	nop
 80021da:	bf00      	nop
 80021dc:	3714      	adds	r7, #20
 80021de:	46bd      	mov	sp, r7
 80021e0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80021e4:	4770      	bx	lr
	...

080021e8 <ST7796_DrawBitmap>:



void ST7796_DrawBitmap(uint16_t w, uint16_t h, uint8_t *s)
{
 80021e8:	b580      	push	{r7, lr}
 80021ea:	b082      	sub	sp, #8
 80021ec:	af00      	add	r7, sp, #0
 80021ee:	4603      	mov	r3, r0
 80021f0:	603a      	str	r2, [r7, #0]
 80021f2:	80fb      	strh	r3, [r7, #6]
 80021f4:	460b      	mov	r3, r1
 80021f6:	80bb      	strh	r3, [r7, #4]
	// Enable to access GRAM
	writecommand(0x2C);
 80021f8:	202c      	movs	r0, #44	; 0x2c
 80021fa:	f000 f825 	bl	8002248 <writecommand>

	DC_H();
 80021fe:	f000 f887 	bl	8002310 <DC_H>
#if 0
	__HAL_SPI_DISABLE(&hspi1);
	hspi1.Instance->CR2 |= SPI_DATASIZE_16BIT; // Set 16 bit mode
	__HAL_SPI_ENABLE(&hspi1);
#endif
	ConvHL(s, (int32_t)w*h*2);
 8002202:	88fb      	ldrh	r3, [r7, #6]
 8002204:	88ba      	ldrh	r2, [r7, #4]
 8002206:	fb02 f303 	mul.w	r3, r2, r3
 800220a:	005b      	lsls	r3, r3, #1
 800220c:	4619      	mov	r1, r3
 800220e:	6838      	ldr	r0, [r7, #0]
 8002210:	f7ff ffc8 	bl	80021a4 <ConvHL>
	HAL_SPI_Transmit_DMA(&hspi1, (uint8_t*)s, w * h *2);
 8002214:	88fa      	ldrh	r2, [r7, #6]
 8002216:	88bb      	ldrh	r3, [r7, #4]
 8002218:	fb12 f303 	smulbb	r3, r2, r3
 800221c:	b29b      	uxth	r3, r3
 800221e:	005b      	lsls	r3, r3, #1
 8002220:	b29b      	uxth	r3, r3
 8002222:	461a      	mov	r2, r3
 8002224:	6839      	ldr	r1, [r7, #0]
 8002226:	4803      	ldr	r0, [pc, #12]	; (8002234 <ST7796_DrawBitmap+0x4c>)
 8002228:	f003 fa88 	bl	800573c <HAL_SPI_Transmit_DMA>
#if 0
	__HAL_SPI_DISABLE(&hspi1);
	hspi1.Instance->CR2 &= ~(SPI_DATASIZE_16BIT); // Set 8 bit mode
	__HAL_SPI_ENABLE(&hspi1);
#endif
}
 800222c:	bf00      	nop
 800222e:	3708      	adds	r7, #8
 8002230:	46bd      	mov	sp, r7
 8002232:	bd80      	pop	{r7, pc}
 8002234:	200003d0 	.word	0x200003d0

08002238 <ST7796_EndOfDrawBitmap>:


void ST7796_EndOfDrawBitmap(void)
{
 8002238:	b480      	push	{r7}
 800223a:	af00      	add	r7, sp, #0
#if 0
	__HAL_SPI_DISABLE(&hspi1);
	hspi1.Instance->CR2 &= ~(SPI_DATASIZE_16BIT); // Set 8 bit mode
	__HAL_SPI_ENABLE(&hspi1);
#endif
}
 800223c:	bf00      	nop
 800223e:	46bd      	mov	sp, r7
 8002240:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002244:	4770      	bx	lr
	...

08002248 <writecommand>:

void writecommand(uint8_t data)
{
 8002248:	b580      	push	{r7, lr}
 800224a:	b082      	sub	sp, #8
 800224c:	af00      	add	r7, sp, #0
 800224e:	4603      	mov	r3, r0
 8002250:	71fb      	strb	r3, [r7, #7]
	DC_L();
 8002252:	f000 f851 	bl	80022f8 <DC_L>
	CS_L();
 8002256:	f000 f837 	bl	80022c8 <CS_L>
	if (HAL_SPI_Transmit(&hspi1, &data, 1, 1000) != HAL_OK) {
 800225a:	1df9      	adds	r1, r7, #7
 800225c:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8002260:	2201      	movs	r2, #1
 8002262:	4808      	ldr	r0, [pc, #32]	; (8002284 <writecommand+0x3c>)
 8002264:	f002 fe5f 	bl	8004f26 <HAL_SPI_Transmit>
 8002268:	4603      	mov	r3, r0
 800226a:	2b00      	cmp	r3, #0
 800226c:	d001      	beq.n	8002272 <writecommand+0x2a>
		Error_Handler();
 800226e:	f7ff f969 	bl	8001544 <Error_Handler>
	}
	CS_H();
 8002272:	f000 f835 	bl	80022e0 <CS_H>
	DC_H();
 8002276:	f000 f84b 	bl	8002310 <DC_H>
}
 800227a:	bf00      	nop
 800227c:	3708      	adds	r7, #8
 800227e:	46bd      	mov	sp, r7
 8002280:	bd80      	pop	{r7, pc}
 8002282:	bf00      	nop
 8002284:	200003d0 	.word	0x200003d0

08002288 <writedata>:

static void writedata(uint8_t data)
{
 8002288:	b580      	push	{r7, lr}
 800228a:	b082      	sub	sp, #8
 800228c:	af00      	add	r7, sp, #0
 800228e:	4603      	mov	r3, r0
 8002290:	71fb      	strb	r3, [r7, #7]
	DC_H();
 8002292:	f000 f83d 	bl	8002310 <DC_H>
	CS_L();
 8002296:	f000 f817 	bl	80022c8 <CS_L>
	if (HAL_SPI_Transmit(&hspi1, &data, 1, 1000) != HAL_OK) {
 800229a:	1df9      	adds	r1, r7, #7
 800229c:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 80022a0:	2201      	movs	r2, #1
 80022a2:	4808      	ldr	r0, [pc, #32]	; (80022c4 <writedata+0x3c>)
 80022a4:	f002 fe3f 	bl	8004f26 <HAL_SPI_Transmit>
 80022a8:	4603      	mov	r3, r0
 80022aa:	2b00      	cmp	r3, #0
 80022ac:	d001      	beq.n	80022b2 <writedata+0x2a>
		Error_Handler();
 80022ae:	f7ff f949 	bl	8001544 <Error_Handler>
	}
	CS_H();
 80022b2:	f000 f815 	bl	80022e0 <CS_H>
	DC_L();
 80022b6:	f000 f81f 	bl	80022f8 <DC_L>
}
 80022ba:	bf00      	nop
 80022bc:	3708      	adds	r7, #8
 80022be:	46bd      	mov	sp, r7
 80022c0:	bd80      	pop	{r7, pc}
 80022c2:	bf00      	nop
 80022c4:	200003d0 	.word	0x200003d0

080022c8 <CS_L>:
{
	HAL_GPIO_WritePin(GPIOA, GPIO_PIN_3, GPIO_PIN_SET);
}

static void CS_L(void)
{
 80022c8:	b580      	push	{r7, lr}
 80022ca:	af00      	add	r7, sp, #0
	HAL_GPIO_WritePin(GPIOA, GPIO_PIN_4, GPIO_PIN_RESET);
 80022cc:	2200      	movs	r2, #0
 80022ce:	2110      	movs	r1, #16
 80022d0:	4802      	ldr	r0, [pc, #8]	; (80022dc <CS_L+0x14>)
 80022d2:	f000 fee1 	bl	8003098 <HAL_GPIO_WritePin>
}
 80022d6:	bf00      	nop
 80022d8:	bd80      	pop	{r7, pc}
 80022da:	bf00      	nop
 80022dc:	40020000 	.word	0x40020000

080022e0 <CS_H>:
static void CS_H(void)
{
 80022e0:	b580      	push	{r7, lr}
 80022e2:	af00      	add	r7, sp, #0
	HAL_GPIO_WritePin(GPIOA, GPIO_PIN_4, GPIO_PIN_SET);
 80022e4:	2201      	movs	r2, #1
 80022e6:	2110      	movs	r1, #16
 80022e8:	4802      	ldr	r0, [pc, #8]	; (80022f4 <CS_H+0x14>)
 80022ea:	f000 fed5 	bl	8003098 <HAL_GPIO_WritePin>
}
 80022ee:	bf00      	nop
 80022f0:	bd80      	pop	{r7, pc}
 80022f2:	bf00      	nop
 80022f4:	40020000 	.word	0x40020000

080022f8 <DC_L>:

static void DC_L(void)
{
 80022f8:	b580      	push	{r7, lr}
 80022fa:	af00      	add	r7, sp, #0
	HAL_GPIO_WritePin(GPIOA, GPIO_PIN_6, GPIO_PIN_RESET);
 80022fc:	2200      	movs	r2, #0
 80022fe:	2140      	movs	r1, #64	; 0x40
 8002300:	4802      	ldr	r0, [pc, #8]	; (800230c <DC_L+0x14>)
 8002302:	f000 fec9 	bl	8003098 <HAL_GPIO_WritePin>
}
 8002306:	bf00      	nop
 8002308:	bd80      	pop	{r7, pc}
 800230a:	bf00      	nop
 800230c:	40020000 	.word	0x40020000

08002310 <DC_H>:

static void DC_H(void)
{
 8002310:	b580      	push	{r7, lr}
 8002312:	af00      	add	r7, sp, #0
	HAL_GPIO_WritePin(GPIOA, GPIO_PIN_6, GPIO_PIN_SET);
 8002314:	2201      	movs	r2, #1
 8002316:	2140      	movs	r1, #64	; 0x40
 8002318:	4802      	ldr	r0, [pc, #8]	; (8002324 <DC_H+0x14>)
 800231a:	f000 febd 	bl	8003098 <HAL_GPIO_WritePin>
}
 800231e:	bf00      	nop
 8002320:	bd80      	pop	{r7, pc}
 8002322:	bf00      	nop
 8002324:	40020000 	.word	0x40020000

08002328 <HAL_Init>:
  *         need to ensure that the SysTick time base is always set to 1 millisecond
  *         to have correct HAL operation.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_Init(void)
{
 8002328:	b580      	push	{r7, lr}
 800232a:	af00      	add	r7, sp, #0
  /* Configure Flash prefetch, Instruction cache, Data cache */ 
#if (INSTRUCTION_CACHE_ENABLE != 0U)
  __HAL_FLASH_INSTRUCTION_CACHE_ENABLE();
 800232c:	4b0e      	ldr	r3, [pc, #56]	; (8002368 <HAL_Init+0x40>)
 800232e:	681b      	ldr	r3, [r3, #0]
 8002330:	4a0d      	ldr	r2, [pc, #52]	; (8002368 <HAL_Init+0x40>)
 8002332:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8002336:	6013      	str	r3, [r2, #0]
#endif /* INSTRUCTION_CACHE_ENABLE */

#if (DATA_CACHE_ENABLE != 0U)
  __HAL_FLASH_DATA_CACHE_ENABLE();
 8002338:	4b0b      	ldr	r3, [pc, #44]	; (8002368 <HAL_Init+0x40>)
 800233a:	681b      	ldr	r3, [r3, #0]
 800233c:	4a0a      	ldr	r2, [pc, #40]	; (8002368 <HAL_Init+0x40>)
 800233e:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 8002342:	6013      	str	r3, [r2, #0]
#endif /* DATA_CACHE_ENABLE */

#if (PREFETCH_ENABLE != 0U)
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 8002344:	4b08      	ldr	r3, [pc, #32]	; (8002368 <HAL_Init+0x40>)
 8002346:	681b      	ldr	r3, [r3, #0]
 8002348:	4a07      	ldr	r2, [pc, #28]	; (8002368 <HAL_Init+0x40>)
 800234a:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800234e:	6013      	str	r3, [r2, #0]
#endif /* PREFETCH_ENABLE */

  /* Set Interrupt Group Priority */
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 8002350:	2003      	movs	r0, #3
 8002352:	f000 f94f 	bl	80025f4 <HAL_NVIC_SetPriorityGrouping>

  /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
  HAL_InitTick(TICK_INT_PRIORITY);
 8002356:	200f      	movs	r0, #15
 8002358:	f000 f808 	bl	800236c <HAL_InitTick>

  /* Init the low level hardware */
  HAL_MspInit();
 800235c:	f7ff fa82 	bl	8001864 <HAL_MspInit>

  /* Return function status */
  return HAL_OK;
 8002360:	2300      	movs	r3, #0
}
 8002362:	4618      	mov	r0, r3
 8002364:	bd80      	pop	{r7, pc}
 8002366:	bf00      	nop
 8002368:	40023c00 	.word	0x40023c00

0800236c <HAL_InitTick>:
  *       implementation  in user file.
  * @param TickPriority Tick interrupt priority.
  * @retval HAL status
  */
__weak HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
 800236c:	b580      	push	{r7, lr}
 800236e:	b082      	sub	sp, #8
 8002370:	af00      	add	r7, sp, #0
 8002372:	6078      	str	r0, [r7, #4]
  /* Configure the SysTick to have interrupt in 1ms time basis*/
  if (HAL_SYSTICK_Config(SystemCoreClock / (1000U / uwTickFreq)) > 0U)
 8002374:	4b12      	ldr	r3, [pc, #72]	; (80023c0 <HAL_InitTick+0x54>)
 8002376:	681a      	ldr	r2, [r3, #0]
 8002378:	4b12      	ldr	r3, [pc, #72]	; (80023c4 <HAL_InitTick+0x58>)
 800237a:	781b      	ldrb	r3, [r3, #0]
 800237c:	4619      	mov	r1, r3
 800237e:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8002382:	fbb3 f3f1 	udiv	r3, r3, r1
 8002386:	fbb2 f3f3 	udiv	r3, r2, r3
 800238a:	4618      	mov	r0, r3
 800238c:	f000 f967 	bl	800265e <HAL_SYSTICK_Config>
 8002390:	4603      	mov	r3, r0
 8002392:	2b00      	cmp	r3, #0
 8002394:	d001      	beq.n	800239a <HAL_InitTick+0x2e>
  {
    return HAL_ERROR;
 8002396:	2301      	movs	r3, #1
 8002398:	e00e      	b.n	80023b8 <HAL_InitTick+0x4c>
  }

  /* Configure the SysTick IRQ priority */
  if (TickPriority < (1UL << __NVIC_PRIO_BITS))
 800239a:	687b      	ldr	r3, [r7, #4]
 800239c:	2b0f      	cmp	r3, #15
 800239e:	d80a      	bhi.n	80023b6 <HAL_InitTick+0x4a>
  {
    HAL_NVIC_SetPriority(SysTick_IRQn, TickPriority, 0U);
 80023a0:	2200      	movs	r2, #0
 80023a2:	6879      	ldr	r1, [r7, #4]
 80023a4:	f04f 30ff 	mov.w	r0, #4294967295
 80023a8:	f000 f92f 	bl	800260a <HAL_NVIC_SetPriority>
    uwTickPrio = TickPriority;
 80023ac:	4a06      	ldr	r2, [pc, #24]	; (80023c8 <HAL_InitTick+0x5c>)
 80023ae:	687b      	ldr	r3, [r7, #4]
 80023b0:	6013      	str	r3, [r2, #0]
  {
    return HAL_ERROR;
  }

  /* Return function status */
  return HAL_OK;
 80023b2:	2300      	movs	r3, #0
 80023b4:	e000      	b.n	80023b8 <HAL_InitTick+0x4c>
    return HAL_ERROR;
 80023b6:	2301      	movs	r3, #1
}
 80023b8:	4618      	mov	r0, r3
 80023ba:	3708      	adds	r7, #8
 80023bc:	46bd      	mov	sp, r7
 80023be:	bd80      	pop	{r7, pc}
 80023c0:	2000000c 	.word	0x2000000c
 80023c4:	20000014 	.word	0x20000014
 80023c8:	20000010 	.word	0x20000010

080023cc <HAL_IncTick>:
 * @note This function is declared as __weak to be overwritten in case of other 
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
 80023cc:	b480      	push	{r7}
 80023ce:	af00      	add	r7, sp, #0
  uwTick += uwTickFreq;
 80023d0:	4b06      	ldr	r3, [pc, #24]	; (80023ec <HAL_IncTick+0x20>)
 80023d2:	781b      	ldrb	r3, [r3, #0]
 80023d4:	461a      	mov	r2, r3
 80023d6:	4b06      	ldr	r3, [pc, #24]	; (80023f0 <HAL_IncTick+0x24>)
 80023d8:	681b      	ldr	r3, [r3, #0]
 80023da:	4413      	add	r3, r2
 80023dc:	4a04      	ldr	r2, [pc, #16]	; (80023f0 <HAL_IncTick+0x24>)
 80023de:	6013      	str	r3, [r2, #0]
}
 80023e0:	bf00      	nop
 80023e2:	46bd      	mov	sp, r7
 80023e4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80023e8:	4770      	bx	lr
 80023ea:	bf00      	nop
 80023ec:	20000014 	.word	0x20000014
 80023f0:	2000061c 	.word	0x2000061c

080023f4 <HAL_GetTick>:
  * @note This function is declared as __weak to be overwritten in case of other 
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
 80023f4:	b480      	push	{r7}
 80023f6:	af00      	add	r7, sp, #0
  return uwTick;
 80023f8:	4b03      	ldr	r3, [pc, #12]	; (8002408 <HAL_GetTick+0x14>)
 80023fa:	681b      	ldr	r3, [r3, #0]
}
 80023fc:	4618      	mov	r0, r3
 80023fe:	46bd      	mov	sp, r7
 8002400:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002404:	4770      	bx	lr
 8002406:	bf00      	nop
 8002408:	2000061c 	.word	0x2000061c

0800240c <HAL_Delay>:
  *       implementations in user file.
  * @param Delay specifies the delay time length, in milliseconds.
  * @retval None
  */
__weak void HAL_Delay(uint32_t Delay)
{
 800240c:	b580      	push	{r7, lr}
 800240e:	b084      	sub	sp, #16
 8002410:	af00      	add	r7, sp, #0
 8002412:	6078      	str	r0, [r7, #4]
  uint32_t tickstart = HAL_GetTick();
 8002414:	f7ff ffee 	bl	80023f4 <HAL_GetTick>
 8002418:	60b8      	str	r0, [r7, #8]
  uint32_t wait = Delay;
 800241a:	687b      	ldr	r3, [r7, #4]
 800241c:	60fb      	str	r3, [r7, #12]

  /* Add a freq to guarantee minimum wait */
  if (wait < HAL_MAX_DELAY)
 800241e:	68fb      	ldr	r3, [r7, #12]
 8002420:	f1b3 3fff 	cmp.w	r3, #4294967295
 8002424:	d005      	beq.n	8002432 <HAL_Delay+0x26>
  {
    wait += (uint32_t)(uwTickFreq);
 8002426:	4b0a      	ldr	r3, [pc, #40]	; (8002450 <HAL_Delay+0x44>)
 8002428:	781b      	ldrb	r3, [r3, #0]
 800242a:	461a      	mov	r2, r3
 800242c:	68fb      	ldr	r3, [r7, #12]
 800242e:	4413      	add	r3, r2
 8002430:	60fb      	str	r3, [r7, #12]
  }

  while((HAL_GetTick() - tickstart) < wait)
 8002432:	bf00      	nop
 8002434:	f7ff ffde 	bl	80023f4 <HAL_GetTick>
 8002438:	4602      	mov	r2, r0
 800243a:	68bb      	ldr	r3, [r7, #8]
 800243c:	1ad3      	subs	r3, r2, r3
 800243e:	68fa      	ldr	r2, [r7, #12]
 8002440:	429a      	cmp	r2, r3
 8002442:	d8f7      	bhi.n	8002434 <HAL_Delay+0x28>
  {
  }
}
 8002444:	bf00      	nop
 8002446:	bf00      	nop
 8002448:	3710      	adds	r7, #16
 800244a:	46bd      	mov	sp, r7
 800244c:	bd80      	pop	{r7, pc}
 800244e:	bf00      	nop
 8002450:	20000014 	.word	0x20000014

08002454 <__NVIC_SetPriorityGrouping>:
           In case of a conflict between priority grouping and available
           priority bits (__NVIC_PRIO_BITS), the smallest possible priority group is set.
  \param [in]      PriorityGroup  Priority grouping field.
 */
__STATIC_INLINE void __NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
{
 8002454:	b480      	push	{r7}
 8002456:	b085      	sub	sp, #20
 8002458:	af00      	add	r7, sp, #0
 800245a:	6078      	str	r0, [r7, #4]
  uint32_t reg_value;
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);             /* only values 0..7 are used          */
 800245c:	687b      	ldr	r3, [r7, #4]
 800245e:	f003 0307 	and.w	r3, r3, #7
 8002462:	60fb      	str	r3, [r7, #12]

  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 8002464:	4b0c      	ldr	r3, [pc, #48]	; (8002498 <__NVIC_SetPriorityGrouping+0x44>)
 8002466:	68db      	ldr	r3, [r3, #12]
 8002468:	60bb      	str	r3, [r7, #8]
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 800246a:	68ba      	ldr	r2, [r7, #8]
 800246c:	f64f 03ff 	movw	r3, #63743	; 0xf8ff
 8002470:	4013      	ands	r3, r2
 8002472:	60bb      	str	r3, [r7, #8]
  reg_value  =  (reg_value                                   |
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 8002474:	68fb      	ldr	r3, [r7, #12]
 8002476:	021a      	lsls	r2, r3, #8
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
 8002478:	68bb      	ldr	r3, [r7, #8]
 800247a:	4313      	orrs	r3, r2
  reg_value  =  (reg_value                                   |
 800247c:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 8002480:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8002484:	60bb      	str	r3, [r7, #8]
  SCB->AIRCR =  reg_value;
 8002486:	4a04      	ldr	r2, [pc, #16]	; (8002498 <__NVIC_SetPriorityGrouping+0x44>)
 8002488:	68bb      	ldr	r3, [r7, #8]
 800248a:	60d3      	str	r3, [r2, #12]
}
 800248c:	bf00      	nop
 800248e:	3714      	adds	r7, #20
 8002490:	46bd      	mov	sp, r7
 8002492:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002496:	4770      	bx	lr
 8002498:	e000ed00 	.word	0xe000ed00

0800249c <__NVIC_GetPriorityGrouping>:
  \brief   Get Priority Grouping
  \details Reads the priority grouping field from the NVIC Interrupt Controller.
  \return                Priority grouping field (SCB->AIRCR [10:8] PRIGROUP field).
 */
__STATIC_INLINE uint32_t __NVIC_GetPriorityGrouping(void)
{
 800249c:	b480      	push	{r7}
 800249e:	af00      	add	r7, sp, #0
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
 80024a0:	4b04      	ldr	r3, [pc, #16]	; (80024b4 <__NVIC_GetPriorityGrouping+0x18>)
 80024a2:	68db      	ldr	r3, [r3, #12]
 80024a4:	0a1b      	lsrs	r3, r3, #8
 80024a6:	f003 0307 	and.w	r3, r3, #7
}
 80024aa:	4618      	mov	r0, r3
 80024ac:	46bd      	mov	sp, r7
 80024ae:	f85d 7b04 	ldr.w	r7, [sp], #4
 80024b2:	4770      	bx	lr
 80024b4:	e000ed00 	.word	0xe000ed00

080024b8 <__NVIC_EnableIRQ>:
  \details Enables a device specific interrupt in the NVIC interrupt controller.
  \param [in]      IRQn  Device specific interrupt number.
  \note    IRQn must not be negative.
 */
__STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
{
 80024b8:	b480      	push	{r7}
 80024ba:	b083      	sub	sp, #12
 80024bc:	af00      	add	r7, sp, #0
 80024be:	4603      	mov	r3, r0
 80024c0:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 80024c2:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80024c6:	2b00      	cmp	r3, #0
 80024c8:	db0b      	blt.n	80024e2 <__NVIC_EnableIRQ+0x2a>
  {
    __COMPILER_BARRIER();
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 80024ca:	79fb      	ldrb	r3, [r7, #7]
 80024cc:	f003 021f 	and.w	r2, r3, #31
 80024d0:	4907      	ldr	r1, [pc, #28]	; (80024f0 <__NVIC_EnableIRQ+0x38>)
 80024d2:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80024d6:	095b      	lsrs	r3, r3, #5
 80024d8:	2001      	movs	r0, #1
 80024da:	fa00 f202 	lsl.w	r2, r0, r2
 80024de:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
    __COMPILER_BARRIER();
  }
}
 80024e2:	bf00      	nop
 80024e4:	370c      	adds	r7, #12
 80024e6:	46bd      	mov	sp, r7
 80024e8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80024ec:	4770      	bx	lr
 80024ee:	bf00      	nop
 80024f0:	e000e100 	.word	0xe000e100

080024f4 <__NVIC_SetPriority>:
  \param [in]      IRQn  Interrupt number.
  \param [in]  priority  Priority to set.
  \note    The priority cannot be set for every processor exception.
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
 80024f4:	b480      	push	{r7}
 80024f6:	b083      	sub	sp, #12
 80024f8:	af00      	add	r7, sp, #0
 80024fa:	4603      	mov	r3, r0
 80024fc:	6039      	str	r1, [r7, #0]
 80024fe:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 8002500:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8002504:	2b00      	cmp	r3, #0
 8002506:	db0a      	blt.n	800251e <__NVIC_SetPriority+0x2a>
  {
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8002508:	683b      	ldr	r3, [r7, #0]
 800250a:	b2da      	uxtb	r2, r3
 800250c:	490c      	ldr	r1, [pc, #48]	; (8002540 <__NVIC_SetPriority+0x4c>)
 800250e:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8002512:	0112      	lsls	r2, r2, #4
 8002514:	b2d2      	uxtb	r2, r2
 8002516:	440b      	add	r3, r1
 8002518:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
  }
  else
  {
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
  }
}
 800251c:	e00a      	b.n	8002534 <__NVIC_SetPriority+0x40>
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800251e:	683b      	ldr	r3, [r7, #0]
 8002520:	b2da      	uxtb	r2, r3
 8002522:	4908      	ldr	r1, [pc, #32]	; (8002544 <__NVIC_SetPriority+0x50>)
 8002524:	79fb      	ldrb	r3, [r7, #7]
 8002526:	f003 030f 	and.w	r3, r3, #15
 800252a:	3b04      	subs	r3, #4
 800252c:	0112      	lsls	r2, r2, #4
 800252e:	b2d2      	uxtb	r2, r2
 8002530:	440b      	add	r3, r1
 8002532:	761a      	strb	r2, [r3, #24]
}
 8002534:	bf00      	nop
 8002536:	370c      	adds	r7, #12
 8002538:	46bd      	mov	sp, r7
 800253a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800253e:	4770      	bx	lr
 8002540:	e000e100 	.word	0xe000e100
 8002544:	e000ed00 	.word	0xe000ed00

08002548 <NVIC_EncodePriority>:
  \param [in]   PreemptPriority  Preemptive priority value (starting from 0).
  \param [in]       SubPriority  Subpriority value (starting from 0).
  \return                        Encoded priority. Value can be used in the function \ref NVIC_SetPriority().
 */
__STATIC_INLINE uint32_t NVIC_EncodePriority (uint32_t PriorityGroup, uint32_t PreemptPriority, uint32_t SubPriority)
{
 8002548:	b480      	push	{r7}
 800254a:	b089      	sub	sp, #36	; 0x24
 800254c:	af00      	add	r7, sp, #0
 800254e:	60f8      	str	r0, [r7, #12]
 8002550:	60b9      	str	r1, [r7, #8]
 8002552:	607a      	str	r2, [r7, #4]
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used          */
 8002554:	68fb      	ldr	r3, [r7, #12]
 8002556:	f003 0307 	and.w	r3, r3, #7
 800255a:	61fb      	str	r3, [r7, #28]
  uint32_t PreemptPriorityBits;
  uint32_t SubPriorityBits;

  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 800255c:	69fb      	ldr	r3, [r7, #28]
 800255e:	f1c3 0307 	rsb	r3, r3, #7
 8002562:	2b04      	cmp	r3, #4
 8002564:	bf28      	it	cs
 8002566:	2304      	movcs	r3, #4
 8002568:	61bb      	str	r3, [r7, #24]
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 800256a:	69fb      	ldr	r3, [r7, #28]
 800256c:	3304      	adds	r3, #4
 800256e:	2b06      	cmp	r3, #6
 8002570:	d902      	bls.n	8002578 <NVIC_EncodePriority+0x30>
 8002572:	69fb      	ldr	r3, [r7, #28]
 8002574:	3b03      	subs	r3, #3
 8002576:	e000      	b.n	800257a <NVIC_EncodePriority+0x32>
 8002578:	2300      	movs	r3, #0
 800257a:	617b      	str	r3, [r7, #20]

  return (
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 800257c:	f04f 32ff 	mov.w	r2, #4294967295
 8002580:	69bb      	ldr	r3, [r7, #24]
 8002582:	fa02 f303 	lsl.w	r3, r2, r3
 8002586:	43da      	mvns	r2, r3
 8002588:	68bb      	ldr	r3, [r7, #8]
 800258a:	401a      	ands	r2, r3
 800258c:	697b      	ldr	r3, [r7, #20]
 800258e:	409a      	lsls	r2, r3
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 8002590:	f04f 31ff 	mov.w	r1, #4294967295
 8002594:	697b      	ldr	r3, [r7, #20]
 8002596:	fa01 f303 	lsl.w	r3, r1, r3
 800259a:	43d9      	mvns	r1, r3
 800259c:	687b      	ldr	r3, [r7, #4]
 800259e:	400b      	ands	r3, r1
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 80025a0:	4313      	orrs	r3, r2
         );
}
 80025a2:	4618      	mov	r0, r3
 80025a4:	3724      	adds	r7, #36	; 0x24
 80025a6:	46bd      	mov	sp, r7
 80025a8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80025ac:	4770      	bx	lr
	...

080025b0 <SysTick_Config>:
  \note    When the variable <b>__Vendor_SysTickConfig</b> is set to 1, then the
           function <b>SysTick_Config</b> is not included. In this case, the file <b><i>device</i>.h</b>
           must contain a vendor-specific implementation of this function.
 */
__STATIC_INLINE uint32_t SysTick_Config(uint32_t ticks)
{
 80025b0:	b580      	push	{r7, lr}
 80025b2:	b082      	sub	sp, #8
 80025b4:	af00      	add	r7, sp, #0
 80025b6:	6078      	str	r0, [r7, #4]
  if ((ticks - 1UL) > SysTick_LOAD_RELOAD_Msk)
 80025b8:	687b      	ldr	r3, [r7, #4]
 80025ba:	3b01      	subs	r3, #1
 80025bc:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 80025c0:	d301      	bcc.n	80025c6 <SysTick_Config+0x16>
  {
    return (1UL);                                                   /* Reload value impossible */
 80025c2:	2301      	movs	r3, #1
 80025c4:	e00f      	b.n	80025e6 <SysTick_Config+0x36>
  }

  SysTick->LOAD  = (uint32_t)(ticks - 1UL);                         /* set reload register */
 80025c6:	4a0a      	ldr	r2, [pc, #40]	; (80025f0 <SysTick_Config+0x40>)
 80025c8:	687b      	ldr	r3, [r7, #4]
 80025ca:	3b01      	subs	r3, #1
 80025cc:	6053      	str	r3, [r2, #4]
  NVIC_SetPriority (SysTick_IRQn, (1UL << __NVIC_PRIO_BITS) - 1UL); /* set Priority for Systick Interrupt */
 80025ce:	210f      	movs	r1, #15
 80025d0:	f04f 30ff 	mov.w	r0, #4294967295
 80025d4:	f7ff ff8e 	bl	80024f4 <__NVIC_SetPriority>
  SysTick->VAL   = 0UL;                                             /* Load the SysTick Counter Value */
 80025d8:	4b05      	ldr	r3, [pc, #20]	; (80025f0 <SysTick_Config+0x40>)
 80025da:	2200      	movs	r2, #0
 80025dc:	609a      	str	r2, [r3, #8]
  SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk |
 80025de:	4b04      	ldr	r3, [pc, #16]	; (80025f0 <SysTick_Config+0x40>)
 80025e0:	2207      	movs	r2, #7
 80025e2:	601a      	str	r2, [r3, #0]
                   SysTick_CTRL_TICKINT_Msk   |
                   SysTick_CTRL_ENABLE_Msk;                         /* Enable SysTick IRQ and SysTick Timer */
  return (0UL);                                                     /* Function successful */
 80025e4:	2300      	movs	r3, #0
}
 80025e6:	4618      	mov	r0, r3
 80025e8:	3708      	adds	r7, #8
 80025ea:	46bd      	mov	sp, r7
 80025ec:	bd80      	pop	{r7, pc}
 80025ee:	bf00      	nop
 80025f0:	e000e010 	.word	0xe000e010

080025f4 <HAL_NVIC_SetPriorityGrouping>:
  * @note   When the NVIC_PriorityGroup_0 is selected, IRQ preemption is no more possible. 
  *         The pending IRQ priority will be managed only by the subpriority. 
  * @retval None
  */
void HAL_NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
{
 80025f4:	b580      	push	{r7, lr}
 80025f6:	b082      	sub	sp, #8
 80025f8:	af00      	add	r7, sp, #0
 80025fa:	6078      	str	r0, [r7, #4]
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));
  
  /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
  NVIC_SetPriorityGrouping(PriorityGroup);
 80025fc:	6878      	ldr	r0, [r7, #4]
 80025fe:	f7ff ff29 	bl	8002454 <__NVIC_SetPriorityGrouping>
}
 8002602:	bf00      	nop
 8002604:	3708      	adds	r7, #8
 8002606:	46bd      	mov	sp, r7
 8002608:	bd80      	pop	{r7, pc}

0800260a <HAL_NVIC_SetPriority>:
  *         This parameter can be a value between 0 and 15
  *         A lower priority value indicates a higher priority.          
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{ 
 800260a:	b580      	push	{r7, lr}
 800260c:	b086      	sub	sp, #24
 800260e:	af00      	add	r7, sp, #0
 8002610:	4603      	mov	r3, r0
 8002612:	60b9      	str	r1, [r7, #8]
 8002614:	607a      	str	r2, [r7, #4]
 8002616:	73fb      	strb	r3, [r7, #15]
  uint32_t prioritygroup = 0x00U;
 8002618:	2300      	movs	r3, #0
 800261a:	617b      	str	r3, [r7, #20]
  
  /* Check the parameters */
  assert_param(IS_NVIC_SUB_PRIORITY(SubPriority));
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
  
  prioritygroup = NVIC_GetPriorityGrouping();
 800261c:	f7ff ff3e 	bl	800249c <__NVIC_GetPriorityGrouping>
 8002620:	6178      	str	r0, [r7, #20]
  
  NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
 8002622:	687a      	ldr	r2, [r7, #4]
 8002624:	68b9      	ldr	r1, [r7, #8]
 8002626:	6978      	ldr	r0, [r7, #20]
 8002628:	f7ff ff8e 	bl	8002548 <NVIC_EncodePriority>
 800262c:	4602      	mov	r2, r0
 800262e:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8002632:	4611      	mov	r1, r2
 8002634:	4618      	mov	r0, r3
 8002636:	f7ff ff5d 	bl	80024f4 <__NVIC_SetPriority>
}
 800263a:	bf00      	nop
 800263c:	3718      	adds	r7, #24
 800263e:	46bd      	mov	sp, r7
 8002640:	bd80      	pop	{r7, pc}

08002642 <HAL_NVIC_EnableIRQ>:
  *         This parameter can be an enumerator of IRQn_Type enumeration
  *         (For the complete STM32 Devices IRQ Channels list, please refer to the appropriate CMSIS device file (stm32f4xxxx.h))
  * @retval None
  */
void HAL_NVIC_EnableIRQ(IRQn_Type IRQn)
{
 8002642:	b580      	push	{r7, lr}
 8002644:	b082      	sub	sp, #8
 8002646:	af00      	add	r7, sp, #0
 8002648:	4603      	mov	r3, r0
 800264a:	71fb      	strb	r3, [r7, #7]
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
  
  /* Enable interrupt */
  NVIC_EnableIRQ(IRQn);
 800264c:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8002650:	4618      	mov	r0, r3
 8002652:	f7ff ff31 	bl	80024b8 <__NVIC_EnableIRQ>
}
 8002656:	bf00      	nop
 8002658:	3708      	adds	r7, #8
 800265a:	46bd      	mov	sp, r7
 800265c:	bd80      	pop	{r7, pc}

0800265e <HAL_SYSTICK_Config>:
  * @param  TicksNumb Specifies the ticks Number of ticks between two interrupts.
  * @retval status:  - 0  Function succeeded.
  *                  - 1  Function failed.
  */
uint32_t HAL_SYSTICK_Config(uint32_t TicksNumb)
{
 800265e:	b580      	push	{r7, lr}
 8002660:	b082      	sub	sp, #8
 8002662:	af00      	add	r7, sp, #0
 8002664:	6078      	str	r0, [r7, #4]
   return SysTick_Config(TicksNumb);
 8002666:	6878      	ldr	r0, [r7, #4]
 8002668:	f7ff ffa2 	bl	80025b0 <SysTick_Config>
 800266c:	4603      	mov	r3, r0
}
 800266e:	4618      	mov	r0, r3
 8002670:	3708      	adds	r7, #8
 8002672:	46bd      	mov	sp, r7
 8002674:	bd80      	pop	{r7, pc}

08002676 <HAL_CRC_Init>:
  *         parameters in the CRC_InitTypeDef and create the associated handle.
  * @param  hcrc CRC handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_CRC_Init(CRC_HandleTypeDef *hcrc)
{
 8002676:	b580      	push	{r7, lr}
 8002678:	b082      	sub	sp, #8
 800267a:	af00      	add	r7, sp, #0
 800267c:	6078      	str	r0, [r7, #4]
  /* Check the CRC handle allocation */
  if (hcrc == NULL)
 800267e:	687b      	ldr	r3, [r7, #4]
 8002680:	2b00      	cmp	r3, #0
 8002682:	d101      	bne.n	8002688 <HAL_CRC_Init+0x12>
  {
    return HAL_ERROR;
 8002684:	2301      	movs	r3, #1
 8002686:	e00e      	b.n	80026a6 <HAL_CRC_Init+0x30>
  }

  /* Check the parameters */
  assert_param(IS_CRC_ALL_INSTANCE(hcrc->Instance));

  if (hcrc->State == HAL_CRC_STATE_RESET)
 8002688:	687b      	ldr	r3, [r7, #4]
 800268a:	795b      	ldrb	r3, [r3, #5]
 800268c:	b2db      	uxtb	r3, r3
 800268e:	2b00      	cmp	r3, #0
 8002690:	d105      	bne.n	800269e <HAL_CRC_Init+0x28>
  {
    /* Allocate lock resource and initialize it */
    hcrc->Lock = HAL_UNLOCKED;
 8002692:	687b      	ldr	r3, [r7, #4]
 8002694:	2200      	movs	r2, #0
 8002696:	711a      	strb	r2, [r3, #4]
    /* Init the low level hardware */
    HAL_CRC_MspInit(hcrc);
 8002698:	6878      	ldr	r0, [r7, #4]
 800269a:	f7fe fd01 	bl	80010a0 <HAL_CRC_MspInit>
  }

  /* Change CRC peripheral state */
  hcrc->State = HAL_CRC_STATE_READY;
 800269e:	687b      	ldr	r3, [r7, #4]
 80026a0:	2201      	movs	r2, #1
 80026a2:	715a      	strb	r2, [r3, #5]

  /* Return function status */
  return HAL_OK;
 80026a4:	2300      	movs	r3, #0
}
 80026a6:	4618      	mov	r0, r3
 80026a8:	3708      	adds	r7, #8
 80026aa:	46bd      	mov	sp, r7
 80026ac:	bd80      	pop	{r7, pc}
	...

080026b0 <HAL_DMA_Init>:
  * @param  hdma Pointer to a DMA_HandleTypeDef structure that contains
  *               the configuration information for the specified DMA Stream.  
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA_Init(DMA_HandleTypeDef *hdma)
{
 80026b0:	b580      	push	{r7, lr}
 80026b2:	b086      	sub	sp, #24
 80026b4:	af00      	add	r7, sp, #0
 80026b6:	6078      	str	r0, [r7, #4]
  uint32_t tmp = 0U;
 80026b8:	2300      	movs	r3, #0
 80026ba:	617b      	str	r3, [r7, #20]
  uint32_t tickstart = HAL_GetTick();
 80026bc:	f7ff fe9a 	bl	80023f4 <HAL_GetTick>
 80026c0:	6138      	str	r0, [r7, #16]
  DMA_Base_Registers *regs;

  /* Check the DMA peripheral state */
  if(hdma == NULL)
 80026c2:	687b      	ldr	r3, [r7, #4]
 80026c4:	2b00      	cmp	r3, #0
 80026c6:	d101      	bne.n	80026cc <HAL_DMA_Init+0x1c>
  {
    return HAL_ERROR;
 80026c8:	2301      	movs	r3, #1
 80026ca:	e099      	b.n	8002800 <HAL_DMA_Init+0x150>
    assert_param(IS_DMA_MEMORY_BURST(hdma->Init.MemBurst));
    assert_param(IS_DMA_PERIPHERAL_BURST(hdma->Init.PeriphBurst));
  }

  /* Change DMA peripheral state */
  hdma->State = HAL_DMA_STATE_BUSY;
 80026cc:	687b      	ldr	r3, [r7, #4]
 80026ce:	2202      	movs	r2, #2
 80026d0:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35

  /* Allocate lock resource */
  __HAL_UNLOCK(hdma);
 80026d4:	687b      	ldr	r3, [r7, #4]
 80026d6:	2200      	movs	r2, #0
 80026d8:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
  
  /* Disable the peripheral */
  __HAL_DMA_DISABLE(hdma);
 80026dc:	687b      	ldr	r3, [r7, #4]
 80026de:	681b      	ldr	r3, [r3, #0]
 80026e0:	681a      	ldr	r2, [r3, #0]
 80026e2:	687b      	ldr	r3, [r7, #4]
 80026e4:	681b      	ldr	r3, [r3, #0]
 80026e6:	f022 0201 	bic.w	r2, r2, #1
 80026ea:	601a      	str	r2, [r3, #0]
  
  /* Check if the DMA Stream is effectively disabled */
  while((hdma->Instance->CR & DMA_SxCR_EN) != RESET)
 80026ec:	e00f      	b.n	800270e <HAL_DMA_Init+0x5e>
  {
    /* Check for the Timeout */
    if((HAL_GetTick() - tickstart ) > HAL_TIMEOUT_DMA_ABORT)
 80026ee:	f7ff fe81 	bl	80023f4 <HAL_GetTick>
 80026f2:	4602      	mov	r2, r0
 80026f4:	693b      	ldr	r3, [r7, #16]
 80026f6:	1ad3      	subs	r3, r2, r3
 80026f8:	2b05      	cmp	r3, #5
 80026fa:	d908      	bls.n	800270e <HAL_DMA_Init+0x5e>
    {
      /* Update error code */
      hdma->ErrorCode = HAL_DMA_ERROR_TIMEOUT;
 80026fc:	687b      	ldr	r3, [r7, #4]
 80026fe:	2220      	movs	r2, #32
 8002700:	655a      	str	r2, [r3, #84]	; 0x54
      
      /* Change the DMA state */
      hdma->State = HAL_DMA_STATE_TIMEOUT;
 8002702:	687b      	ldr	r3, [r7, #4]
 8002704:	2203      	movs	r2, #3
 8002706:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
      
      return HAL_TIMEOUT;
 800270a:	2303      	movs	r3, #3
 800270c:	e078      	b.n	8002800 <HAL_DMA_Init+0x150>
  while((hdma->Instance->CR & DMA_SxCR_EN) != RESET)
 800270e:	687b      	ldr	r3, [r7, #4]
 8002710:	681b      	ldr	r3, [r3, #0]
 8002712:	681b      	ldr	r3, [r3, #0]
 8002714:	f003 0301 	and.w	r3, r3, #1
 8002718:	2b00      	cmp	r3, #0
 800271a:	d1e8      	bne.n	80026ee <HAL_DMA_Init+0x3e>
    }
  }
  
  /* Get the CR register value */
  tmp = hdma->Instance->CR;
 800271c:	687b      	ldr	r3, [r7, #4]
 800271e:	681b      	ldr	r3, [r3, #0]
 8002720:	681b      	ldr	r3, [r3, #0]
 8002722:	617b      	str	r3, [r7, #20]

  /* Clear CHSEL, MBURST, PBURST, PL, MSIZE, PSIZE, MINC, PINC, CIRC, DIR, CT and DBM bits */
  tmp &= ((uint32_t)~(DMA_SxCR_CHSEL | DMA_SxCR_MBURST | DMA_SxCR_PBURST | \
 8002724:	697a      	ldr	r2, [r7, #20]
 8002726:	4b38      	ldr	r3, [pc, #224]	; (8002808 <HAL_DMA_Init+0x158>)
 8002728:	4013      	ands	r3, r2
 800272a:	617b      	str	r3, [r7, #20]
                      DMA_SxCR_PL    | DMA_SxCR_MSIZE  | DMA_SxCR_PSIZE  | \
                      DMA_SxCR_MINC  | DMA_SxCR_PINC   | DMA_SxCR_CIRC   | \
                      DMA_SxCR_DIR   | DMA_SxCR_CT     | DMA_SxCR_DBM));

  /* Prepare the DMA Stream configuration */
  tmp |=  hdma->Init.Channel             | hdma->Init.Direction        |
 800272c:	687b      	ldr	r3, [r7, #4]
 800272e:	685a      	ldr	r2, [r3, #4]
 8002730:	687b      	ldr	r3, [r7, #4]
 8002732:	689b      	ldr	r3, [r3, #8]
 8002734:	431a      	orrs	r2, r3
          hdma->Init.PeriphInc           | hdma->Init.MemInc           |
 8002736:	687b      	ldr	r3, [r7, #4]
 8002738:	68db      	ldr	r3, [r3, #12]
  tmp |=  hdma->Init.Channel             | hdma->Init.Direction        |
 800273a:	431a      	orrs	r2, r3
          hdma->Init.PeriphInc           | hdma->Init.MemInc           |
 800273c:	687b      	ldr	r3, [r7, #4]
 800273e:	691b      	ldr	r3, [r3, #16]
 8002740:	431a      	orrs	r2, r3
          hdma->Init.PeriphDataAlignment | hdma->Init.MemDataAlignment |
 8002742:	687b      	ldr	r3, [r7, #4]
 8002744:	695b      	ldr	r3, [r3, #20]
          hdma->Init.PeriphInc           | hdma->Init.MemInc           |
 8002746:	431a      	orrs	r2, r3
          hdma->Init.PeriphDataAlignment | hdma->Init.MemDataAlignment |
 8002748:	687b      	ldr	r3, [r7, #4]
 800274a:	699b      	ldr	r3, [r3, #24]
 800274c:	431a      	orrs	r2, r3
          hdma->Init.Mode                | hdma->Init.Priority;
 800274e:	687b      	ldr	r3, [r7, #4]
 8002750:	69db      	ldr	r3, [r3, #28]
          hdma->Init.PeriphDataAlignment | hdma->Init.MemDataAlignment |
 8002752:	431a      	orrs	r2, r3
          hdma->Init.Mode                | hdma->Init.Priority;
 8002754:	687b      	ldr	r3, [r7, #4]
 8002756:	6a1b      	ldr	r3, [r3, #32]
 8002758:	4313      	orrs	r3, r2
  tmp |=  hdma->Init.Channel             | hdma->Init.Direction        |
 800275a:	697a      	ldr	r2, [r7, #20]
 800275c:	4313      	orrs	r3, r2
 800275e:	617b      	str	r3, [r7, #20]

  /* the Memory burst and peripheral burst are not used when the FIFO is disabled */
  if(hdma->Init.FIFOMode == DMA_FIFOMODE_ENABLE)
 8002760:	687b      	ldr	r3, [r7, #4]
 8002762:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002764:	2b04      	cmp	r3, #4
 8002766:	d107      	bne.n	8002778 <HAL_DMA_Init+0xc8>
  {
    /* Get memory burst and peripheral burst */
    tmp |=  hdma->Init.MemBurst | hdma->Init.PeriphBurst;
 8002768:	687b      	ldr	r3, [r7, #4]
 800276a:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800276c:	687b      	ldr	r3, [r7, #4]
 800276e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002770:	4313      	orrs	r3, r2
 8002772:	697a      	ldr	r2, [r7, #20]
 8002774:	4313      	orrs	r3, r2
 8002776:	617b      	str	r3, [r7, #20]
  }
  
  /* Write to DMA Stream CR register */
  hdma->Instance->CR = tmp;  
 8002778:	687b      	ldr	r3, [r7, #4]
 800277a:	681b      	ldr	r3, [r3, #0]
 800277c:	697a      	ldr	r2, [r7, #20]
 800277e:	601a      	str	r2, [r3, #0]

  /* Get the FCR register value */
  tmp = hdma->Instance->FCR;
 8002780:	687b      	ldr	r3, [r7, #4]
 8002782:	681b      	ldr	r3, [r3, #0]
 8002784:	695b      	ldr	r3, [r3, #20]
 8002786:	617b      	str	r3, [r7, #20]

  /* Clear Direct mode and FIFO threshold bits */
  tmp &= (uint32_t)~(DMA_SxFCR_DMDIS | DMA_SxFCR_FTH);
 8002788:	697b      	ldr	r3, [r7, #20]
 800278a:	f023 0307 	bic.w	r3, r3, #7
 800278e:	617b      	str	r3, [r7, #20]

  /* Prepare the DMA Stream FIFO configuration */
  tmp |= hdma->Init.FIFOMode;
 8002790:	687b      	ldr	r3, [r7, #4]
 8002792:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002794:	697a      	ldr	r2, [r7, #20]
 8002796:	4313      	orrs	r3, r2
 8002798:	617b      	str	r3, [r7, #20]

  /* The FIFO threshold is not used when the FIFO mode is disabled */
  if(hdma->Init.FIFOMode == DMA_FIFOMODE_ENABLE)
 800279a:	687b      	ldr	r3, [r7, #4]
 800279c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800279e:	2b04      	cmp	r3, #4
 80027a0:	d117      	bne.n	80027d2 <HAL_DMA_Init+0x122>
  {
    /* Get the FIFO threshold */
    tmp |= hdma->Init.FIFOThreshold;
 80027a2:	687b      	ldr	r3, [r7, #4]
 80027a4:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80027a6:	697a      	ldr	r2, [r7, #20]
 80027a8:	4313      	orrs	r3, r2
 80027aa:	617b      	str	r3, [r7, #20]
    
    /* Check compatibility between FIFO threshold level and size of the memory burst */
    /* for INCR4, INCR8, INCR16 bursts */
    if (hdma->Init.MemBurst != DMA_MBURST_SINGLE)
 80027ac:	687b      	ldr	r3, [r7, #4]
 80027ae:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80027b0:	2b00      	cmp	r3, #0
 80027b2:	d00e      	beq.n	80027d2 <HAL_DMA_Init+0x122>
    {
      if (DMA_CheckFifoParam(hdma) != HAL_OK)
 80027b4:	6878      	ldr	r0, [r7, #4]
 80027b6:	f000 fa6f 	bl	8002c98 <DMA_CheckFifoParam>
 80027ba:	4603      	mov	r3, r0
 80027bc:	2b00      	cmp	r3, #0
 80027be:	d008      	beq.n	80027d2 <HAL_DMA_Init+0x122>
      {
        /* Update error code */
        hdma->ErrorCode = HAL_DMA_ERROR_PARAM;
 80027c0:	687b      	ldr	r3, [r7, #4]
 80027c2:	2240      	movs	r2, #64	; 0x40
 80027c4:	655a      	str	r2, [r3, #84]	; 0x54
        
        /* Change the DMA state */
        hdma->State = HAL_DMA_STATE_READY;
 80027c6:	687b      	ldr	r3, [r7, #4]
 80027c8:	2201      	movs	r2, #1
 80027ca:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
        
        return HAL_ERROR; 
 80027ce:	2301      	movs	r3, #1
 80027d0:	e016      	b.n	8002800 <HAL_DMA_Init+0x150>
      }
    }
  }
  
  /* Write to DMA Stream FCR */
  hdma->Instance->FCR = tmp;
 80027d2:	687b      	ldr	r3, [r7, #4]
 80027d4:	681b      	ldr	r3, [r3, #0]
 80027d6:	697a      	ldr	r2, [r7, #20]
 80027d8:	615a      	str	r2, [r3, #20]

  /* Initialize StreamBaseAddress and StreamIndex parameters to be used to calculate
     DMA steam Base Address needed by HAL_DMA_IRQHandler() and HAL_DMA_PollForTransfer() */
  regs = (DMA_Base_Registers *)DMA_CalcBaseAndBitshift(hdma);
 80027da:	6878      	ldr	r0, [r7, #4]
 80027dc:	f000 fa26 	bl	8002c2c <DMA_CalcBaseAndBitshift>
 80027e0:	4603      	mov	r3, r0
 80027e2:	60fb      	str	r3, [r7, #12]
  
  /* Clear all interrupt flags */
  regs->IFCR = 0x3FU << hdma->StreamIndex;
 80027e4:	687b      	ldr	r3, [r7, #4]
 80027e6:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 80027e8:	223f      	movs	r2, #63	; 0x3f
 80027ea:	409a      	lsls	r2, r3
 80027ec:	68fb      	ldr	r3, [r7, #12]
 80027ee:	609a      	str	r2, [r3, #8]

  /* Initialize the error code */
  hdma->ErrorCode = HAL_DMA_ERROR_NONE;
 80027f0:	687b      	ldr	r3, [r7, #4]
 80027f2:	2200      	movs	r2, #0
 80027f4:	655a      	str	r2, [r3, #84]	; 0x54
                                                                                     
  /* Initialize the DMA state */
  hdma->State = HAL_DMA_STATE_READY;
 80027f6:	687b      	ldr	r3, [r7, #4]
 80027f8:	2201      	movs	r2, #1
 80027fa:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35

  return HAL_OK;
 80027fe:	2300      	movs	r3, #0
}
 8002800:	4618      	mov	r0, r3
 8002802:	3718      	adds	r7, #24
 8002804:	46bd      	mov	sp, r7
 8002806:	bd80      	pop	{r7, pc}
 8002808:	f010803f 	.word	0xf010803f

0800280c <HAL_DMA_Start_IT>:
  * @param  DstAddress The destination memory Buffer address
  * @param  DataLength The length of data to be transferred from source to destination
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA_Start_IT(DMA_HandleTypeDef *hdma, uint32_t SrcAddress, uint32_t DstAddress, uint32_t DataLength)
{
 800280c:	b580      	push	{r7, lr}
 800280e:	b086      	sub	sp, #24
 8002810:	af00      	add	r7, sp, #0
 8002812:	60f8      	str	r0, [r7, #12]
 8002814:	60b9      	str	r1, [r7, #8]
 8002816:	607a      	str	r2, [r7, #4]
 8002818:	603b      	str	r3, [r7, #0]
  HAL_StatusTypeDef status = HAL_OK;
 800281a:	2300      	movs	r3, #0
 800281c:	75fb      	strb	r3, [r7, #23]

  /* calculate DMA base and stream number */
  DMA_Base_Registers *regs = (DMA_Base_Registers *)hdma->StreamBaseAddress;
 800281e:	68fb      	ldr	r3, [r7, #12]
 8002820:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8002822:	613b      	str	r3, [r7, #16]
  
  /* Check the parameters */
  assert_param(IS_DMA_BUFFER_SIZE(DataLength));
 
  /* Process locked */
  __HAL_LOCK(hdma);
 8002824:	68fb      	ldr	r3, [r7, #12]
 8002826:	f893 3034 	ldrb.w	r3, [r3, #52]	; 0x34
 800282a:	2b01      	cmp	r3, #1
 800282c:	d101      	bne.n	8002832 <HAL_DMA_Start_IT+0x26>
 800282e:	2302      	movs	r3, #2
 8002830:	e040      	b.n	80028b4 <HAL_DMA_Start_IT+0xa8>
 8002832:	68fb      	ldr	r3, [r7, #12]
 8002834:	2201      	movs	r2, #1
 8002836:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
  
  if(HAL_DMA_STATE_READY == hdma->State)
 800283a:	68fb      	ldr	r3, [r7, #12]
 800283c:	f893 3035 	ldrb.w	r3, [r3, #53]	; 0x35
 8002840:	b2db      	uxtb	r3, r3
 8002842:	2b01      	cmp	r3, #1
 8002844:	d12f      	bne.n	80028a6 <HAL_DMA_Start_IT+0x9a>
  {
    /* Change DMA peripheral state */
    hdma->State = HAL_DMA_STATE_BUSY;
 8002846:	68fb      	ldr	r3, [r7, #12]
 8002848:	2202      	movs	r2, #2
 800284a:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
    
    /* Initialize the error code */
    hdma->ErrorCode = HAL_DMA_ERROR_NONE;
 800284e:	68fb      	ldr	r3, [r7, #12]
 8002850:	2200      	movs	r2, #0
 8002852:	655a      	str	r2, [r3, #84]	; 0x54
    
    /* Configure the source, destination address and the data length */
    DMA_SetConfig(hdma, SrcAddress, DstAddress, DataLength);
 8002854:	683b      	ldr	r3, [r7, #0]
 8002856:	687a      	ldr	r2, [r7, #4]
 8002858:	68b9      	ldr	r1, [r7, #8]
 800285a:	68f8      	ldr	r0, [r7, #12]
 800285c:	f000 f9b8 	bl	8002bd0 <DMA_SetConfig>
    
    /* Clear all interrupt flags at correct offset within the register */
    regs->IFCR = 0x3FU << hdma->StreamIndex;
 8002860:	68fb      	ldr	r3, [r7, #12]
 8002862:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8002864:	223f      	movs	r2, #63	; 0x3f
 8002866:	409a      	lsls	r2, r3
 8002868:	693b      	ldr	r3, [r7, #16]
 800286a:	609a      	str	r2, [r3, #8]
    
    /* Enable Common interrupts*/
    hdma->Instance->CR  |= DMA_IT_TC | DMA_IT_TE | DMA_IT_DME;
 800286c:	68fb      	ldr	r3, [r7, #12]
 800286e:	681b      	ldr	r3, [r3, #0]
 8002870:	681a      	ldr	r2, [r3, #0]
 8002872:	68fb      	ldr	r3, [r7, #12]
 8002874:	681b      	ldr	r3, [r3, #0]
 8002876:	f042 0216 	orr.w	r2, r2, #22
 800287a:	601a      	str	r2, [r3, #0]
    
    if(hdma->XferHalfCpltCallback != NULL)
 800287c:	68fb      	ldr	r3, [r7, #12]
 800287e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002880:	2b00      	cmp	r3, #0
 8002882:	d007      	beq.n	8002894 <HAL_DMA_Start_IT+0x88>
    {
      hdma->Instance->CR  |= DMA_IT_HT;
 8002884:	68fb      	ldr	r3, [r7, #12]
 8002886:	681b      	ldr	r3, [r3, #0]
 8002888:	681a      	ldr	r2, [r3, #0]
 800288a:	68fb      	ldr	r3, [r7, #12]
 800288c:	681b      	ldr	r3, [r3, #0]
 800288e:	f042 0208 	orr.w	r2, r2, #8
 8002892:	601a      	str	r2, [r3, #0]
    }
    
    /* Enable the Peripheral */
    __HAL_DMA_ENABLE(hdma);
 8002894:	68fb      	ldr	r3, [r7, #12]
 8002896:	681b      	ldr	r3, [r3, #0]
 8002898:	681a      	ldr	r2, [r3, #0]
 800289a:	68fb      	ldr	r3, [r7, #12]
 800289c:	681b      	ldr	r3, [r3, #0]
 800289e:	f042 0201 	orr.w	r2, r2, #1
 80028a2:	601a      	str	r2, [r3, #0]
 80028a4:	e005      	b.n	80028b2 <HAL_DMA_Start_IT+0xa6>
  }
  else
  {
    /* Process unlocked */
    __HAL_UNLOCK(hdma);	  
 80028a6:	68fb      	ldr	r3, [r7, #12]
 80028a8:	2200      	movs	r2, #0
 80028aa:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
    
    /* Return error status */
    status = HAL_BUSY;
 80028ae:	2302      	movs	r3, #2
 80028b0:	75fb      	strb	r3, [r7, #23]
  }
  
  return status;
 80028b2:	7dfb      	ldrb	r3, [r7, #23]
}
 80028b4:	4618      	mov	r0, r3
 80028b6:	3718      	adds	r7, #24
 80028b8:	46bd      	mov	sp, r7
 80028ba:	bd80      	pop	{r7, pc}

080028bc <HAL_DMA_IRQHandler>:
  * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
  *               the configuration information for the specified DMA Stream.  
  * @retval None
  */
void HAL_DMA_IRQHandler(DMA_HandleTypeDef *hdma)
{
 80028bc:	b580      	push	{r7, lr}
 80028be:	b086      	sub	sp, #24
 80028c0:	af00      	add	r7, sp, #0
 80028c2:	6078      	str	r0, [r7, #4]
  uint32_t tmpisr;
  __IO uint32_t count = 0U;
 80028c4:	2300      	movs	r3, #0
 80028c6:	60bb      	str	r3, [r7, #8]
  uint32_t timeout = SystemCoreClock / 9600U;
 80028c8:	4b8e      	ldr	r3, [pc, #568]	; (8002b04 <HAL_DMA_IRQHandler+0x248>)
 80028ca:	681b      	ldr	r3, [r3, #0]
 80028cc:	4a8e      	ldr	r2, [pc, #568]	; (8002b08 <HAL_DMA_IRQHandler+0x24c>)
 80028ce:	fba2 2303 	umull	r2, r3, r2, r3
 80028d2:	0a9b      	lsrs	r3, r3, #10
 80028d4:	617b      	str	r3, [r7, #20]

  /* calculate DMA base and stream number */
  DMA_Base_Registers *regs = (DMA_Base_Registers *)hdma->StreamBaseAddress;
 80028d6:	687b      	ldr	r3, [r7, #4]
 80028d8:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 80028da:	613b      	str	r3, [r7, #16]

  tmpisr = regs->ISR;
 80028dc:	693b      	ldr	r3, [r7, #16]
 80028de:	681b      	ldr	r3, [r3, #0]
 80028e0:	60fb      	str	r3, [r7, #12]

  /* Transfer Error Interrupt management ***************************************/
  if ((tmpisr & (DMA_FLAG_TEIF0_4 << hdma->StreamIndex)) != RESET)
 80028e2:	687b      	ldr	r3, [r7, #4]
 80028e4:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 80028e6:	2208      	movs	r2, #8
 80028e8:	409a      	lsls	r2, r3
 80028ea:	68fb      	ldr	r3, [r7, #12]
 80028ec:	4013      	ands	r3, r2
 80028ee:	2b00      	cmp	r3, #0
 80028f0:	d01a      	beq.n	8002928 <HAL_DMA_IRQHandler+0x6c>
  {
    if(__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_TE) != RESET)
 80028f2:	687b      	ldr	r3, [r7, #4]
 80028f4:	681b      	ldr	r3, [r3, #0]
 80028f6:	681b      	ldr	r3, [r3, #0]
 80028f8:	f003 0304 	and.w	r3, r3, #4
 80028fc:	2b00      	cmp	r3, #0
 80028fe:	d013      	beq.n	8002928 <HAL_DMA_IRQHandler+0x6c>
    {
      /* Disable the transfer error interrupt */
      hdma->Instance->CR  &= ~(DMA_IT_TE);
 8002900:	687b      	ldr	r3, [r7, #4]
 8002902:	681b      	ldr	r3, [r3, #0]
 8002904:	681a      	ldr	r2, [r3, #0]
 8002906:	687b      	ldr	r3, [r7, #4]
 8002908:	681b      	ldr	r3, [r3, #0]
 800290a:	f022 0204 	bic.w	r2, r2, #4
 800290e:	601a      	str	r2, [r3, #0]
      
      /* Clear the transfer error flag */
      regs->IFCR = DMA_FLAG_TEIF0_4 << hdma->StreamIndex;
 8002910:	687b      	ldr	r3, [r7, #4]
 8002912:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8002914:	2208      	movs	r2, #8
 8002916:	409a      	lsls	r2, r3
 8002918:	693b      	ldr	r3, [r7, #16]
 800291a:	609a      	str	r2, [r3, #8]
      
      /* Update error code */
      hdma->ErrorCode |= HAL_DMA_ERROR_TE;
 800291c:	687b      	ldr	r3, [r7, #4]
 800291e:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8002920:	f043 0201 	orr.w	r2, r3, #1
 8002924:	687b      	ldr	r3, [r7, #4]
 8002926:	655a      	str	r2, [r3, #84]	; 0x54
    }
  }
  /* FIFO Error Interrupt management ******************************************/
  if ((tmpisr & (DMA_FLAG_FEIF0_4 << hdma->StreamIndex)) != RESET)
 8002928:	687b      	ldr	r3, [r7, #4]
 800292a:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 800292c:	2201      	movs	r2, #1
 800292e:	409a      	lsls	r2, r3
 8002930:	68fb      	ldr	r3, [r7, #12]
 8002932:	4013      	ands	r3, r2
 8002934:	2b00      	cmp	r3, #0
 8002936:	d012      	beq.n	800295e <HAL_DMA_IRQHandler+0xa2>
  {
    if(__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_FE) != RESET)
 8002938:	687b      	ldr	r3, [r7, #4]
 800293a:	681b      	ldr	r3, [r3, #0]
 800293c:	695b      	ldr	r3, [r3, #20]
 800293e:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8002942:	2b00      	cmp	r3, #0
 8002944:	d00b      	beq.n	800295e <HAL_DMA_IRQHandler+0xa2>
    {
      /* Clear the FIFO error flag */
      regs->IFCR = DMA_FLAG_FEIF0_4 << hdma->StreamIndex;
 8002946:	687b      	ldr	r3, [r7, #4]
 8002948:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 800294a:	2201      	movs	r2, #1
 800294c:	409a      	lsls	r2, r3
 800294e:	693b      	ldr	r3, [r7, #16]
 8002950:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma->ErrorCode |= HAL_DMA_ERROR_FE;
 8002952:	687b      	ldr	r3, [r7, #4]
 8002954:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8002956:	f043 0202 	orr.w	r2, r3, #2
 800295a:	687b      	ldr	r3, [r7, #4]
 800295c:	655a      	str	r2, [r3, #84]	; 0x54
    }
  }
  /* Direct Mode Error Interrupt management ***********************************/
  if ((tmpisr & (DMA_FLAG_DMEIF0_4 << hdma->StreamIndex)) != RESET)
 800295e:	687b      	ldr	r3, [r7, #4]
 8002960:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8002962:	2204      	movs	r2, #4
 8002964:	409a      	lsls	r2, r3
 8002966:	68fb      	ldr	r3, [r7, #12]
 8002968:	4013      	ands	r3, r2
 800296a:	2b00      	cmp	r3, #0
 800296c:	d012      	beq.n	8002994 <HAL_DMA_IRQHandler+0xd8>
  {
    if(__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_DME) != RESET)
 800296e:	687b      	ldr	r3, [r7, #4]
 8002970:	681b      	ldr	r3, [r3, #0]
 8002972:	681b      	ldr	r3, [r3, #0]
 8002974:	f003 0302 	and.w	r3, r3, #2
 8002978:	2b00      	cmp	r3, #0
 800297a:	d00b      	beq.n	8002994 <HAL_DMA_IRQHandler+0xd8>
    {
      /* Clear the direct mode error flag */
      regs->IFCR = DMA_FLAG_DMEIF0_4 << hdma->StreamIndex;
 800297c:	687b      	ldr	r3, [r7, #4]
 800297e:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8002980:	2204      	movs	r2, #4
 8002982:	409a      	lsls	r2, r3
 8002984:	693b      	ldr	r3, [r7, #16]
 8002986:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma->ErrorCode |= HAL_DMA_ERROR_DME;
 8002988:	687b      	ldr	r3, [r7, #4]
 800298a:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800298c:	f043 0204 	orr.w	r2, r3, #4
 8002990:	687b      	ldr	r3, [r7, #4]
 8002992:	655a      	str	r2, [r3, #84]	; 0x54
    }
  }
  /* Half Transfer Complete Interrupt management ******************************/
  if ((tmpisr & (DMA_FLAG_HTIF0_4 << hdma->StreamIndex)) != RESET)
 8002994:	687b      	ldr	r3, [r7, #4]
 8002996:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8002998:	2210      	movs	r2, #16
 800299a:	409a      	lsls	r2, r3
 800299c:	68fb      	ldr	r3, [r7, #12]
 800299e:	4013      	ands	r3, r2
 80029a0:	2b00      	cmp	r3, #0
 80029a2:	d043      	beq.n	8002a2c <HAL_DMA_IRQHandler+0x170>
  {
    if(__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_HT) != RESET)
 80029a4:	687b      	ldr	r3, [r7, #4]
 80029a6:	681b      	ldr	r3, [r3, #0]
 80029a8:	681b      	ldr	r3, [r3, #0]
 80029aa:	f003 0308 	and.w	r3, r3, #8
 80029ae:	2b00      	cmp	r3, #0
 80029b0:	d03c      	beq.n	8002a2c <HAL_DMA_IRQHandler+0x170>
    {
      /* Clear the half transfer complete flag */
      regs->IFCR = DMA_FLAG_HTIF0_4 << hdma->StreamIndex;
 80029b2:	687b      	ldr	r3, [r7, #4]
 80029b4:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 80029b6:	2210      	movs	r2, #16
 80029b8:	409a      	lsls	r2, r3
 80029ba:	693b      	ldr	r3, [r7, #16]
 80029bc:	609a      	str	r2, [r3, #8]
      
      /* Multi_Buffering mode enabled */
      if(((hdma->Instance->CR) & (uint32_t)(DMA_SxCR_DBM)) != RESET)
 80029be:	687b      	ldr	r3, [r7, #4]
 80029c0:	681b      	ldr	r3, [r3, #0]
 80029c2:	681b      	ldr	r3, [r3, #0]
 80029c4:	f403 2380 	and.w	r3, r3, #262144	; 0x40000
 80029c8:	2b00      	cmp	r3, #0
 80029ca:	d018      	beq.n	80029fe <HAL_DMA_IRQHandler+0x142>
      {
        /* Current memory buffer used is Memory 0 */
        if((hdma->Instance->CR & DMA_SxCR_CT) == RESET)
 80029cc:	687b      	ldr	r3, [r7, #4]
 80029ce:	681b      	ldr	r3, [r3, #0]
 80029d0:	681b      	ldr	r3, [r3, #0]
 80029d2:	f403 2300 	and.w	r3, r3, #524288	; 0x80000
 80029d6:	2b00      	cmp	r3, #0
 80029d8:	d108      	bne.n	80029ec <HAL_DMA_IRQHandler+0x130>
        {
          if(hdma->XferHalfCpltCallback != NULL)
 80029da:	687b      	ldr	r3, [r7, #4]
 80029dc:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80029de:	2b00      	cmp	r3, #0
 80029e0:	d024      	beq.n	8002a2c <HAL_DMA_IRQHandler+0x170>
          {
            /* Half transfer callback */
            hdma->XferHalfCpltCallback(hdma);
 80029e2:	687b      	ldr	r3, [r7, #4]
 80029e4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80029e6:	6878      	ldr	r0, [r7, #4]
 80029e8:	4798      	blx	r3
 80029ea:	e01f      	b.n	8002a2c <HAL_DMA_IRQHandler+0x170>
          }
        }
        /* Current memory buffer used is Memory 1 */
        else
        {
          if(hdma->XferM1HalfCpltCallback != NULL)
 80029ec:	687b      	ldr	r3, [r7, #4]
 80029ee:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 80029f0:	2b00      	cmp	r3, #0
 80029f2:	d01b      	beq.n	8002a2c <HAL_DMA_IRQHandler+0x170>
          {
            /* Half transfer callback */
            hdma->XferM1HalfCpltCallback(hdma);
 80029f4:	687b      	ldr	r3, [r7, #4]
 80029f6:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 80029f8:	6878      	ldr	r0, [r7, #4]
 80029fa:	4798      	blx	r3
 80029fc:	e016      	b.n	8002a2c <HAL_DMA_IRQHandler+0x170>
        }
      }
      else
      {
        /* Disable the half transfer interrupt if the DMA mode is not CIRCULAR */
        if((hdma->Instance->CR & DMA_SxCR_CIRC) == RESET)
 80029fe:	687b      	ldr	r3, [r7, #4]
 8002a00:	681b      	ldr	r3, [r3, #0]
 8002a02:	681b      	ldr	r3, [r3, #0]
 8002a04:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8002a08:	2b00      	cmp	r3, #0
 8002a0a:	d107      	bne.n	8002a1c <HAL_DMA_IRQHandler+0x160>
        {
          /* Disable the half transfer interrupt */
          hdma->Instance->CR  &= ~(DMA_IT_HT);
 8002a0c:	687b      	ldr	r3, [r7, #4]
 8002a0e:	681b      	ldr	r3, [r3, #0]
 8002a10:	681a      	ldr	r2, [r3, #0]
 8002a12:	687b      	ldr	r3, [r7, #4]
 8002a14:	681b      	ldr	r3, [r3, #0]
 8002a16:	f022 0208 	bic.w	r2, r2, #8
 8002a1a:	601a      	str	r2, [r3, #0]
        }
        
        if(hdma->XferHalfCpltCallback != NULL)
 8002a1c:	687b      	ldr	r3, [r7, #4]
 8002a1e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002a20:	2b00      	cmp	r3, #0
 8002a22:	d003      	beq.n	8002a2c <HAL_DMA_IRQHandler+0x170>
        {
          /* Half transfer callback */
          hdma->XferHalfCpltCallback(hdma);
 8002a24:	687b      	ldr	r3, [r7, #4]
 8002a26:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002a28:	6878      	ldr	r0, [r7, #4]
 8002a2a:	4798      	blx	r3
        }
      }
    }
  }
  /* Transfer Complete Interrupt management ***********************************/
  if ((tmpisr & (DMA_FLAG_TCIF0_4 << hdma->StreamIndex)) != RESET)
 8002a2c:	687b      	ldr	r3, [r7, #4]
 8002a2e:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8002a30:	2220      	movs	r2, #32
 8002a32:	409a      	lsls	r2, r3
 8002a34:	68fb      	ldr	r3, [r7, #12]
 8002a36:	4013      	ands	r3, r2
 8002a38:	2b00      	cmp	r3, #0
 8002a3a:	f000 808f 	beq.w	8002b5c <HAL_DMA_IRQHandler+0x2a0>
  {
    if(__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_TC) != RESET)
 8002a3e:	687b      	ldr	r3, [r7, #4]
 8002a40:	681b      	ldr	r3, [r3, #0]
 8002a42:	681b      	ldr	r3, [r3, #0]
 8002a44:	f003 0310 	and.w	r3, r3, #16
 8002a48:	2b00      	cmp	r3, #0
 8002a4a:	f000 8087 	beq.w	8002b5c <HAL_DMA_IRQHandler+0x2a0>
    {
      /* Clear the transfer complete flag */
      regs->IFCR = DMA_FLAG_TCIF0_4 << hdma->StreamIndex;
 8002a4e:	687b      	ldr	r3, [r7, #4]
 8002a50:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8002a52:	2220      	movs	r2, #32
 8002a54:	409a      	lsls	r2, r3
 8002a56:	693b      	ldr	r3, [r7, #16]
 8002a58:	609a      	str	r2, [r3, #8]
      
      if(HAL_DMA_STATE_ABORT == hdma->State)
 8002a5a:	687b      	ldr	r3, [r7, #4]
 8002a5c:	f893 3035 	ldrb.w	r3, [r3, #53]	; 0x35
 8002a60:	b2db      	uxtb	r3, r3
 8002a62:	2b05      	cmp	r3, #5
 8002a64:	d136      	bne.n	8002ad4 <HAL_DMA_IRQHandler+0x218>
      {
        /* Disable all the transfer interrupts */
        hdma->Instance->CR  &= ~(DMA_IT_TC | DMA_IT_TE | DMA_IT_DME);
 8002a66:	687b      	ldr	r3, [r7, #4]
 8002a68:	681b      	ldr	r3, [r3, #0]
 8002a6a:	681a      	ldr	r2, [r3, #0]
 8002a6c:	687b      	ldr	r3, [r7, #4]
 8002a6e:	681b      	ldr	r3, [r3, #0]
 8002a70:	f022 0216 	bic.w	r2, r2, #22
 8002a74:	601a      	str	r2, [r3, #0]
        hdma->Instance->FCR &= ~(DMA_IT_FE);
 8002a76:	687b      	ldr	r3, [r7, #4]
 8002a78:	681b      	ldr	r3, [r3, #0]
 8002a7a:	695a      	ldr	r2, [r3, #20]
 8002a7c:	687b      	ldr	r3, [r7, #4]
 8002a7e:	681b      	ldr	r3, [r3, #0]
 8002a80:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 8002a84:	615a      	str	r2, [r3, #20]
        
        if((hdma->XferHalfCpltCallback != NULL) || (hdma->XferM1HalfCpltCallback != NULL))
 8002a86:	687b      	ldr	r3, [r7, #4]
 8002a88:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002a8a:	2b00      	cmp	r3, #0
 8002a8c:	d103      	bne.n	8002a96 <HAL_DMA_IRQHandler+0x1da>
 8002a8e:	687b      	ldr	r3, [r7, #4]
 8002a90:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8002a92:	2b00      	cmp	r3, #0
 8002a94:	d007      	beq.n	8002aa6 <HAL_DMA_IRQHandler+0x1ea>
        {
          hdma->Instance->CR  &= ~(DMA_IT_HT);
 8002a96:	687b      	ldr	r3, [r7, #4]
 8002a98:	681b      	ldr	r3, [r3, #0]
 8002a9a:	681a      	ldr	r2, [r3, #0]
 8002a9c:	687b      	ldr	r3, [r7, #4]
 8002a9e:	681b      	ldr	r3, [r3, #0]
 8002aa0:	f022 0208 	bic.w	r2, r2, #8
 8002aa4:	601a      	str	r2, [r3, #0]
        }

        /* Clear all interrupt flags at correct offset within the register */
        regs->IFCR = 0x3FU << hdma->StreamIndex;
 8002aa6:	687b      	ldr	r3, [r7, #4]
 8002aa8:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8002aaa:	223f      	movs	r2, #63	; 0x3f
 8002aac:	409a      	lsls	r2, r3
 8002aae:	693b      	ldr	r3, [r7, #16]
 8002ab0:	609a      	str	r2, [r3, #8]

        /* Change the DMA state */
        hdma->State = HAL_DMA_STATE_READY;
 8002ab2:	687b      	ldr	r3, [r7, #4]
 8002ab4:	2201      	movs	r2, #1
 8002ab6:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35

        /* Process Unlocked */
        __HAL_UNLOCK(hdma);
 8002aba:	687b      	ldr	r3, [r7, #4]
 8002abc:	2200      	movs	r2, #0
 8002abe:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34

        if(hdma->XferAbortCallback != NULL)
 8002ac2:	687b      	ldr	r3, [r7, #4]
 8002ac4:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8002ac6:	2b00      	cmp	r3, #0
 8002ac8:	d07e      	beq.n	8002bc8 <HAL_DMA_IRQHandler+0x30c>
        {
          hdma->XferAbortCallback(hdma);
 8002aca:	687b      	ldr	r3, [r7, #4]
 8002acc:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8002ace:	6878      	ldr	r0, [r7, #4]
 8002ad0:	4798      	blx	r3
        }
        return;
 8002ad2:	e079      	b.n	8002bc8 <HAL_DMA_IRQHandler+0x30c>
      }

      if(((hdma->Instance->CR) & (uint32_t)(DMA_SxCR_DBM)) != RESET)
 8002ad4:	687b      	ldr	r3, [r7, #4]
 8002ad6:	681b      	ldr	r3, [r3, #0]
 8002ad8:	681b      	ldr	r3, [r3, #0]
 8002ada:	f403 2380 	and.w	r3, r3, #262144	; 0x40000
 8002ade:	2b00      	cmp	r3, #0
 8002ae0:	d01d      	beq.n	8002b1e <HAL_DMA_IRQHandler+0x262>
      {
        /* Current memory buffer used is Memory 0 */
        if((hdma->Instance->CR & DMA_SxCR_CT) == RESET)
 8002ae2:	687b      	ldr	r3, [r7, #4]
 8002ae4:	681b      	ldr	r3, [r3, #0]
 8002ae6:	681b      	ldr	r3, [r3, #0]
 8002ae8:	f403 2300 	and.w	r3, r3, #524288	; 0x80000
 8002aec:	2b00      	cmp	r3, #0
 8002aee:	d10d      	bne.n	8002b0c <HAL_DMA_IRQHandler+0x250>
        {
          if(hdma->XferM1CpltCallback != NULL)
 8002af0:	687b      	ldr	r3, [r7, #4]
 8002af2:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8002af4:	2b00      	cmp	r3, #0
 8002af6:	d031      	beq.n	8002b5c <HAL_DMA_IRQHandler+0x2a0>
          {
            /* Transfer complete Callback for memory1 */
            hdma->XferM1CpltCallback(hdma);
 8002af8:	687b      	ldr	r3, [r7, #4]
 8002afa:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8002afc:	6878      	ldr	r0, [r7, #4]
 8002afe:	4798      	blx	r3
 8002b00:	e02c      	b.n	8002b5c <HAL_DMA_IRQHandler+0x2a0>
 8002b02:	bf00      	nop
 8002b04:	2000000c 	.word	0x2000000c
 8002b08:	1b4e81b5 	.word	0x1b4e81b5
          }
        }
        /* Current memory buffer used is Memory 1 */
        else
        {
          if(hdma->XferCpltCallback != NULL)
 8002b0c:	687b      	ldr	r3, [r7, #4]
 8002b0e:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8002b10:	2b00      	cmp	r3, #0
 8002b12:	d023      	beq.n	8002b5c <HAL_DMA_IRQHandler+0x2a0>
          {
            /* Transfer complete Callback for memory0 */
            hdma->XferCpltCallback(hdma);
 8002b14:	687b      	ldr	r3, [r7, #4]
 8002b16:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8002b18:	6878      	ldr	r0, [r7, #4]
 8002b1a:	4798      	blx	r3
 8002b1c:	e01e      	b.n	8002b5c <HAL_DMA_IRQHandler+0x2a0>
        }
      }
      /* Disable the transfer complete interrupt if the DMA mode is not CIRCULAR */
      else
      {
        if((hdma->Instance->CR & DMA_SxCR_CIRC) == RESET)
 8002b1e:	687b      	ldr	r3, [r7, #4]
 8002b20:	681b      	ldr	r3, [r3, #0]
 8002b22:	681b      	ldr	r3, [r3, #0]
 8002b24:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8002b28:	2b00      	cmp	r3, #0
 8002b2a:	d10f      	bne.n	8002b4c <HAL_DMA_IRQHandler+0x290>
        {
          /* Disable the transfer complete interrupt */
          hdma->Instance->CR  &= ~(DMA_IT_TC);
 8002b2c:	687b      	ldr	r3, [r7, #4]
 8002b2e:	681b      	ldr	r3, [r3, #0]
 8002b30:	681a      	ldr	r2, [r3, #0]
 8002b32:	687b      	ldr	r3, [r7, #4]
 8002b34:	681b      	ldr	r3, [r3, #0]
 8002b36:	f022 0210 	bic.w	r2, r2, #16
 8002b3a:	601a      	str	r2, [r3, #0]

          /* Change the DMA state */
          hdma->State = HAL_DMA_STATE_READY;
 8002b3c:	687b      	ldr	r3, [r7, #4]
 8002b3e:	2201      	movs	r2, #1
 8002b40:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35

          /* Process Unlocked */
          __HAL_UNLOCK(hdma);
 8002b44:	687b      	ldr	r3, [r7, #4]
 8002b46:	2200      	movs	r2, #0
 8002b48:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
        }

        if(hdma->XferCpltCallback != NULL)
 8002b4c:	687b      	ldr	r3, [r7, #4]
 8002b4e:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8002b50:	2b00      	cmp	r3, #0
 8002b52:	d003      	beq.n	8002b5c <HAL_DMA_IRQHandler+0x2a0>
        {
          /* Transfer complete callback */
          hdma->XferCpltCallback(hdma);
 8002b54:	687b      	ldr	r3, [r7, #4]
 8002b56:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8002b58:	6878      	ldr	r0, [r7, #4]
 8002b5a:	4798      	blx	r3
      }
    }
  }
  
  /* manage error case */
  if(hdma->ErrorCode != HAL_DMA_ERROR_NONE)
 8002b5c:	687b      	ldr	r3, [r7, #4]
 8002b5e:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8002b60:	2b00      	cmp	r3, #0
 8002b62:	d032      	beq.n	8002bca <HAL_DMA_IRQHandler+0x30e>
  {
    if((hdma->ErrorCode & HAL_DMA_ERROR_TE) != RESET)
 8002b64:	687b      	ldr	r3, [r7, #4]
 8002b66:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8002b68:	f003 0301 	and.w	r3, r3, #1
 8002b6c:	2b00      	cmp	r3, #0
 8002b6e:	d022      	beq.n	8002bb6 <HAL_DMA_IRQHandler+0x2fa>
    {
      hdma->State = HAL_DMA_STATE_ABORT;
 8002b70:	687b      	ldr	r3, [r7, #4]
 8002b72:	2205      	movs	r2, #5
 8002b74:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35

      /* Disable the stream */
      __HAL_DMA_DISABLE(hdma);
 8002b78:	687b      	ldr	r3, [r7, #4]
 8002b7a:	681b      	ldr	r3, [r3, #0]
 8002b7c:	681a      	ldr	r2, [r3, #0]
 8002b7e:	687b      	ldr	r3, [r7, #4]
 8002b80:	681b      	ldr	r3, [r3, #0]
 8002b82:	f022 0201 	bic.w	r2, r2, #1
 8002b86:	601a      	str	r2, [r3, #0]

      do
      {
        if (++count > timeout)
 8002b88:	68bb      	ldr	r3, [r7, #8]
 8002b8a:	3301      	adds	r3, #1
 8002b8c:	60bb      	str	r3, [r7, #8]
 8002b8e:	697a      	ldr	r2, [r7, #20]
 8002b90:	429a      	cmp	r2, r3
 8002b92:	d307      	bcc.n	8002ba4 <HAL_DMA_IRQHandler+0x2e8>
        {
          break;
        }
      }
      while((hdma->Instance->CR & DMA_SxCR_EN) != RESET);
 8002b94:	687b      	ldr	r3, [r7, #4]
 8002b96:	681b      	ldr	r3, [r3, #0]
 8002b98:	681b      	ldr	r3, [r3, #0]
 8002b9a:	f003 0301 	and.w	r3, r3, #1
 8002b9e:	2b00      	cmp	r3, #0
 8002ba0:	d1f2      	bne.n	8002b88 <HAL_DMA_IRQHandler+0x2cc>
 8002ba2:	e000      	b.n	8002ba6 <HAL_DMA_IRQHandler+0x2ea>
          break;
 8002ba4:	bf00      	nop

      /* Change the DMA state */
      hdma->State = HAL_DMA_STATE_READY;
 8002ba6:	687b      	ldr	r3, [r7, #4]
 8002ba8:	2201      	movs	r2, #1
 8002baa:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35

      /* Process Unlocked */
      __HAL_UNLOCK(hdma);
 8002bae:	687b      	ldr	r3, [r7, #4]
 8002bb0:	2200      	movs	r2, #0
 8002bb2:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
    }

    if(hdma->XferErrorCallback != NULL)
 8002bb6:	687b      	ldr	r3, [r7, #4]
 8002bb8:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8002bba:	2b00      	cmp	r3, #0
 8002bbc:	d005      	beq.n	8002bca <HAL_DMA_IRQHandler+0x30e>
    {
      /* Transfer error callback */
      hdma->XferErrorCallback(hdma);
 8002bbe:	687b      	ldr	r3, [r7, #4]
 8002bc0:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8002bc2:	6878      	ldr	r0, [r7, #4]
 8002bc4:	4798      	blx	r3
 8002bc6:	e000      	b.n	8002bca <HAL_DMA_IRQHandler+0x30e>
        return;
 8002bc8:	bf00      	nop
    }
  }
}
 8002bca:	3718      	adds	r7, #24
 8002bcc:	46bd      	mov	sp, r7
 8002bce:	bd80      	pop	{r7, pc}

08002bd0 <DMA_SetConfig>:
  * @param  DstAddress The destination memory Buffer address
  * @param  DataLength The length of data to be transferred from source to destination
  * @retval HAL status
  */
static void DMA_SetConfig(DMA_HandleTypeDef *hdma, uint32_t SrcAddress, uint32_t DstAddress, uint32_t DataLength)
{
 8002bd0:	b480      	push	{r7}
 8002bd2:	b085      	sub	sp, #20
 8002bd4:	af00      	add	r7, sp, #0
 8002bd6:	60f8      	str	r0, [r7, #12]
 8002bd8:	60b9      	str	r1, [r7, #8]
 8002bda:	607a      	str	r2, [r7, #4]
 8002bdc:	603b      	str	r3, [r7, #0]
  /* Clear DBM bit */
  hdma->Instance->CR &= (uint32_t)(~DMA_SxCR_DBM);
 8002bde:	68fb      	ldr	r3, [r7, #12]
 8002be0:	681b      	ldr	r3, [r3, #0]
 8002be2:	681a      	ldr	r2, [r3, #0]
 8002be4:	68fb      	ldr	r3, [r7, #12]
 8002be6:	681b      	ldr	r3, [r3, #0]
 8002be8:	f422 2280 	bic.w	r2, r2, #262144	; 0x40000
 8002bec:	601a      	str	r2, [r3, #0]

  /* Configure DMA Stream data length */
  hdma->Instance->NDTR = DataLength;
 8002bee:	68fb      	ldr	r3, [r7, #12]
 8002bf0:	681b      	ldr	r3, [r3, #0]
 8002bf2:	683a      	ldr	r2, [r7, #0]
 8002bf4:	605a      	str	r2, [r3, #4]

  /* Memory to Peripheral */
  if((hdma->Init.Direction) == DMA_MEMORY_TO_PERIPH)
 8002bf6:	68fb      	ldr	r3, [r7, #12]
 8002bf8:	689b      	ldr	r3, [r3, #8]
 8002bfa:	2b40      	cmp	r3, #64	; 0x40
 8002bfc:	d108      	bne.n	8002c10 <DMA_SetConfig+0x40>
  {
    /* Configure DMA Stream destination address */
    hdma->Instance->PAR = DstAddress;
 8002bfe:	68fb      	ldr	r3, [r7, #12]
 8002c00:	681b      	ldr	r3, [r3, #0]
 8002c02:	687a      	ldr	r2, [r7, #4]
 8002c04:	609a      	str	r2, [r3, #8]

    /* Configure DMA Stream source address */
    hdma->Instance->M0AR = SrcAddress;
 8002c06:	68fb      	ldr	r3, [r7, #12]
 8002c08:	681b      	ldr	r3, [r3, #0]
 8002c0a:	68ba      	ldr	r2, [r7, #8]
 8002c0c:	60da      	str	r2, [r3, #12]
    hdma->Instance->PAR = SrcAddress;

    /* Configure DMA Stream destination address */
    hdma->Instance->M0AR = DstAddress;
  }
}
 8002c0e:	e007      	b.n	8002c20 <DMA_SetConfig+0x50>
    hdma->Instance->PAR = SrcAddress;
 8002c10:	68fb      	ldr	r3, [r7, #12]
 8002c12:	681b      	ldr	r3, [r3, #0]
 8002c14:	68ba      	ldr	r2, [r7, #8]
 8002c16:	609a      	str	r2, [r3, #8]
    hdma->Instance->M0AR = DstAddress;
 8002c18:	68fb      	ldr	r3, [r7, #12]
 8002c1a:	681b      	ldr	r3, [r3, #0]
 8002c1c:	687a      	ldr	r2, [r7, #4]
 8002c1e:	60da      	str	r2, [r3, #12]
}
 8002c20:	bf00      	nop
 8002c22:	3714      	adds	r7, #20
 8002c24:	46bd      	mov	sp, r7
 8002c26:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002c2a:	4770      	bx	lr

08002c2c <DMA_CalcBaseAndBitshift>:
  * @param  hdma       pointer to a DMA_HandleTypeDef structure that contains
  *                     the configuration information for the specified DMA Stream. 
  * @retval Stream base address
  */
static uint32_t DMA_CalcBaseAndBitshift(DMA_HandleTypeDef *hdma)
{
 8002c2c:	b480      	push	{r7}
 8002c2e:	b085      	sub	sp, #20
 8002c30:	af00      	add	r7, sp, #0
 8002c32:	6078      	str	r0, [r7, #4]
  uint32_t stream_number = (((uint32_t)hdma->Instance & 0xFFU) - 16U) / 24U;
 8002c34:	687b      	ldr	r3, [r7, #4]
 8002c36:	681b      	ldr	r3, [r3, #0]
 8002c38:	b2db      	uxtb	r3, r3
 8002c3a:	3b10      	subs	r3, #16
 8002c3c:	4a14      	ldr	r2, [pc, #80]	; (8002c90 <DMA_CalcBaseAndBitshift+0x64>)
 8002c3e:	fba2 2303 	umull	r2, r3, r2, r3
 8002c42:	091b      	lsrs	r3, r3, #4
 8002c44:	60fb      	str	r3, [r7, #12]
  
  /* lookup table for necessary bitshift of flags within status registers */
  static const uint8_t flagBitshiftOffset[8U] = {0U, 6U, 16U, 22U, 0U, 6U, 16U, 22U};
  hdma->StreamIndex = flagBitshiftOffset[stream_number];
 8002c46:	4a13      	ldr	r2, [pc, #76]	; (8002c94 <DMA_CalcBaseAndBitshift+0x68>)
 8002c48:	68fb      	ldr	r3, [r7, #12]
 8002c4a:	4413      	add	r3, r2
 8002c4c:	781b      	ldrb	r3, [r3, #0]
 8002c4e:	461a      	mov	r2, r3
 8002c50:	687b      	ldr	r3, [r7, #4]
 8002c52:	65da      	str	r2, [r3, #92]	; 0x5c
  
  if (stream_number > 3U)
 8002c54:	68fb      	ldr	r3, [r7, #12]
 8002c56:	2b03      	cmp	r3, #3
 8002c58:	d909      	bls.n	8002c6e <DMA_CalcBaseAndBitshift+0x42>
  {
    /* return pointer to HISR and HIFCR */
    hdma->StreamBaseAddress = (((uint32_t)hdma->Instance & (uint32_t)(~0x3FFU)) + 4U);
 8002c5a:	687b      	ldr	r3, [r7, #4]
 8002c5c:	681b      	ldr	r3, [r3, #0]
 8002c5e:	f423 737f 	bic.w	r3, r3, #1020	; 0x3fc
 8002c62:	f023 0303 	bic.w	r3, r3, #3
 8002c66:	1d1a      	adds	r2, r3, #4
 8002c68:	687b      	ldr	r3, [r7, #4]
 8002c6a:	659a      	str	r2, [r3, #88]	; 0x58
 8002c6c:	e007      	b.n	8002c7e <DMA_CalcBaseAndBitshift+0x52>
  }
  else
  {
    /* return pointer to LISR and LIFCR */
    hdma->StreamBaseAddress = ((uint32_t)hdma->Instance & (uint32_t)(~0x3FFU));
 8002c6e:	687b      	ldr	r3, [r7, #4]
 8002c70:	681b      	ldr	r3, [r3, #0]
 8002c72:	f423 737f 	bic.w	r3, r3, #1020	; 0x3fc
 8002c76:	f023 0303 	bic.w	r3, r3, #3
 8002c7a:	687a      	ldr	r2, [r7, #4]
 8002c7c:	6593      	str	r3, [r2, #88]	; 0x58
  }
  
  return hdma->StreamBaseAddress;
 8002c7e:	687b      	ldr	r3, [r7, #4]
 8002c80:	6d9b      	ldr	r3, [r3, #88]	; 0x58
}
 8002c82:	4618      	mov	r0, r3
 8002c84:	3714      	adds	r7, #20
 8002c86:	46bd      	mov	sp, r7
 8002c88:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002c8c:	4770      	bx	lr
 8002c8e:	bf00      	nop
 8002c90:	aaaaaaab 	.word	0xaaaaaaab
 8002c94:	0802e4a8 	.word	0x0802e4a8

08002c98 <DMA_CheckFifoParam>:
  * @param  hdma       pointer to a DMA_HandleTypeDef structure that contains
  *                     the configuration information for the specified DMA Stream. 
  * @retval HAL status
  */
static HAL_StatusTypeDef DMA_CheckFifoParam(DMA_HandleTypeDef *hdma)
{
 8002c98:	b480      	push	{r7}
 8002c9a:	b085      	sub	sp, #20
 8002c9c:	af00      	add	r7, sp, #0
 8002c9e:	6078      	str	r0, [r7, #4]
  HAL_StatusTypeDef status = HAL_OK;
 8002ca0:	2300      	movs	r3, #0
 8002ca2:	73fb      	strb	r3, [r7, #15]
  uint32_t tmp = hdma->Init.FIFOThreshold;
 8002ca4:	687b      	ldr	r3, [r7, #4]
 8002ca6:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8002ca8:	60bb      	str	r3, [r7, #8]
  
  /* Memory Data size equal to Byte */
  if(hdma->Init.MemDataAlignment == DMA_MDATAALIGN_BYTE)
 8002caa:	687b      	ldr	r3, [r7, #4]
 8002cac:	699b      	ldr	r3, [r3, #24]
 8002cae:	2b00      	cmp	r3, #0
 8002cb0:	d11f      	bne.n	8002cf2 <DMA_CheckFifoParam+0x5a>
  {
    switch (tmp)
 8002cb2:	68bb      	ldr	r3, [r7, #8]
 8002cb4:	2b03      	cmp	r3, #3
 8002cb6:	d856      	bhi.n	8002d66 <DMA_CheckFifoParam+0xce>
 8002cb8:	a201      	add	r2, pc, #4	; (adr r2, 8002cc0 <DMA_CheckFifoParam+0x28>)
 8002cba:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8002cbe:	bf00      	nop
 8002cc0:	08002cd1 	.word	0x08002cd1
 8002cc4:	08002ce3 	.word	0x08002ce3
 8002cc8:	08002cd1 	.word	0x08002cd1
 8002ccc:	08002d67 	.word	0x08002d67
    {
    case DMA_FIFO_THRESHOLD_1QUARTERFULL:
    case DMA_FIFO_THRESHOLD_3QUARTERSFULL:
      if ((hdma->Init.MemBurst & DMA_SxCR_MBURST_1) == DMA_SxCR_MBURST_1)
 8002cd0:	687b      	ldr	r3, [r7, #4]
 8002cd2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8002cd4:	f003 7380 	and.w	r3, r3, #16777216	; 0x1000000
 8002cd8:	2b00      	cmp	r3, #0
 8002cda:	d046      	beq.n	8002d6a <DMA_CheckFifoParam+0xd2>
      {
        status = HAL_ERROR;
 8002cdc:	2301      	movs	r3, #1
 8002cde:	73fb      	strb	r3, [r7, #15]
      }
      break;
 8002ce0:	e043      	b.n	8002d6a <DMA_CheckFifoParam+0xd2>
    case DMA_FIFO_THRESHOLD_HALFFULL:
      if (hdma->Init.MemBurst == DMA_MBURST_INC16)
 8002ce2:	687b      	ldr	r3, [r7, #4]
 8002ce4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8002ce6:	f1b3 7fc0 	cmp.w	r3, #25165824	; 0x1800000
 8002cea:	d140      	bne.n	8002d6e <DMA_CheckFifoParam+0xd6>
      {
        status = HAL_ERROR;
 8002cec:	2301      	movs	r3, #1
 8002cee:	73fb      	strb	r3, [r7, #15]
      }
      break;
 8002cf0:	e03d      	b.n	8002d6e <DMA_CheckFifoParam+0xd6>
      break;
    }
  }
  
  /* Memory Data size equal to Half-Word */
  else if (hdma->Init.MemDataAlignment == DMA_MDATAALIGN_HALFWORD)
 8002cf2:	687b      	ldr	r3, [r7, #4]
 8002cf4:	699b      	ldr	r3, [r3, #24]
 8002cf6:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8002cfa:	d121      	bne.n	8002d40 <DMA_CheckFifoParam+0xa8>
  {
    switch (tmp)
 8002cfc:	68bb      	ldr	r3, [r7, #8]
 8002cfe:	2b03      	cmp	r3, #3
 8002d00:	d837      	bhi.n	8002d72 <DMA_CheckFifoParam+0xda>
 8002d02:	a201      	add	r2, pc, #4	; (adr r2, 8002d08 <DMA_CheckFifoParam+0x70>)
 8002d04:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8002d08:	08002d19 	.word	0x08002d19
 8002d0c:	08002d1f 	.word	0x08002d1f
 8002d10:	08002d19 	.word	0x08002d19
 8002d14:	08002d31 	.word	0x08002d31
    {
    case DMA_FIFO_THRESHOLD_1QUARTERFULL:
    case DMA_FIFO_THRESHOLD_3QUARTERSFULL:
      status = HAL_ERROR;
 8002d18:	2301      	movs	r3, #1
 8002d1a:	73fb      	strb	r3, [r7, #15]
      break;
 8002d1c:	e030      	b.n	8002d80 <DMA_CheckFifoParam+0xe8>
    case DMA_FIFO_THRESHOLD_HALFFULL:
      if ((hdma->Init.MemBurst & DMA_SxCR_MBURST_1) == DMA_SxCR_MBURST_1)
 8002d1e:	687b      	ldr	r3, [r7, #4]
 8002d20:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8002d22:	f003 7380 	and.w	r3, r3, #16777216	; 0x1000000
 8002d26:	2b00      	cmp	r3, #0
 8002d28:	d025      	beq.n	8002d76 <DMA_CheckFifoParam+0xde>
      {
        status = HAL_ERROR;
 8002d2a:	2301      	movs	r3, #1
 8002d2c:	73fb      	strb	r3, [r7, #15]
      }
      break;
 8002d2e:	e022      	b.n	8002d76 <DMA_CheckFifoParam+0xde>
    case DMA_FIFO_THRESHOLD_FULL:
      if (hdma->Init.MemBurst == DMA_MBURST_INC16)
 8002d30:	687b      	ldr	r3, [r7, #4]
 8002d32:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8002d34:	f1b3 7fc0 	cmp.w	r3, #25165824	; 0x1800000
 8002d38:	d11f      	bne.n	8002d7a <DMA_CheckFifoParam+0xe2>
      {
        status = HAL_ERROR;
 8002d3a:	2301      	movs	r3, #1
 8002d3c:	73fb      	strb	r3, [r7, #15]
      }
      break;   
 8002d3e:	e01c      	b.n	8002d7a <DMA_CheckFifoParam+0xe2>
  }
  
  /* Memory Data size equal to Word */
  else
  {
    switch (tmp)
 8002d40:	68bb      	ldr	r3, [r7, #8]
 8002d42:	2b02      	cmp	r3, #2
 8002d44:	d903      	bls.n	8002d4e <DMA_CheckFifoParam+0xb6>
 8002d46:	68bb      	ldr	r3, [r7, #8]
 8002d48:	2b03      	cmp	r3, #3
 8002d4a:	d003      	beq.n	8002d54 <DMA_CheckFifoParam+0xbc>
      {
        status = HAL_ERROR;
      }
      break;
    default:
      break;
 8002d4c:	e018      	b.n	8002d80 <DMA_CheckFifoParam+0xe8>
      status = HAL_ERROR;
 8002d4e:	2301      	movs	r3, #1
 8002d50:	73fb      	strb	r3, [r7, #15]
      break;
 8002d52:	e015      	b.n	8002d80 <DMA_CheckFifoParam+0xe8>
      if ((hdma->Init.MemBurst & DMA_SxCR_MBURST_1) == DMA_SxCR_MBURST_1)
 8002d54:	687b      	ldr	r3, [r7, #4]
 8002d56:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8002d58:	f003 7380 	and.w	r3, r3, #16777216	; 0x1000000
 8002d5c:	2b00      	cmp	r3, #0
 8002d5e:	d00e      	beq.n	8002d7e <DMA_CheckFifoParam+0xe6>
        status = HAL_ERROR;
 8002d60:	2301      	movs	r3, #1
 8002d62:	73fb      	strb	r3, [r7, #15]
      break;
 8002d64:	e00b      	b.n	8002d7e <DMA_CheckFifoParam+0xe6>
      break;
 8002d66:	bf00      	nop
 8002d68:	e00a      	b.n	8002d80 <DMA_CheckFifoParam+0xe8>
      break;
 8002d6a:	bf00      	nop
 8002d6c:	e008      	b.n	8002d80 <DMA_CheckFifoParam+0xe8>
      break;
 8002d6e:	bf00      	nop
 8002d70:	e006      	b.n	8002d80 <DMA_CheckFifoParam+0xe8>
      break;
 8002d72:	bf00      	nop
 8002d74:	e004      	b.n	8002d80 <DMA_CheckFifoParam+0xe8>
      break;
 8002d76:	bf00      	nop
 8002d78:	e002      	b.n	8002d80 <DMA_CheckFifoParam+0xe8>
      break;   
 8002d7a:	bf00      	nop
 8002d7c:	e000      	b.n	8002d80 <DMA_CheckFifoParam+0xe8>
      break;
 8002d7e:	bf00      	nop
    }
  } 
  
  return status; 
 8002d80:	7bfb      	ldrb	r3, [r7, #15]
}
 8002d82:	4618      	mov	r0, r3
 8002d84:	3714      	adds	r7, #20
 8002d86:	46bd      	mov	sp, r7
 8002d88:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002d8c:	4770      	bx	lr
 8002d8e:	bf00      	nop

08002d90 <HAL_GPIO_Init>:
  * @param  GPIO_Init pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
 8002d90:	b480      	push	{r7}
 8002d92:	b089      	sub	sp, #36	; 0x24
 8002d94:	af00      	add	r7, sp, #0
 8002d96:	6078      	str	r0, [r7, #4]
 8002d98:	6039      	str	r1, [r7, #0]
  uint32_t position;
  uint32_t ioposition = 0x00U;
 8002d9a:	2300      	movs	r3, #0
 8002d9c:	617b      	str	r3, [r7, #20]
  uint32_t iocurrent = 0x00U;
 8002d9e:	2300      	movs	r3, #0
 8002da0:	613b      	str	r3, [r7, #16]
  uint32_t temp = 0x00U;
 8002da2:	2300      	movs	r3, #0
 8002da4:	61bb      	str	r3, [r7, #24]
  assert_param(IS_GPIO_ALL_INSTANCE(GPIOx));
  assert_param(IS_GPIO_PIN(GPIO_Init->Pin));
  assert_param(IS_GPIO_MODE(GPIO_Init->Mode));

  /* Configure the port pins */
  for(position = 0U; position < GPIO_NUMBER; position++)
 8002da6:	2300      	movs	r3, #0
 8002da8:	61fb      	str	r3, [r7, #28]
 8002daa:	e159      	b.n	8003060 <HAL_GPIO_Init+0x2d0>
  {
    /* Get the IO position */
    ioposition = 0x01U << position;
 8002dac:	2201      	movs	r2, #1
 8002dae:	69fb      	ldr	r3, [r7, #28]
 8002db0:	fa02 f303 	lsl.w	r3, r2, r3
 8002db4:	617b      	str	r3, [r7, #20]
    /* Get the current IO position */
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 8002db6:	683b      	ldr	r3, [r7, #0]
 8002db8:	681b      	ldr	r3, [r3, #0]
 8002dba:	697a      	ldr	r2, [r7, #20]
 8002dbc:	4013      	ands	r3, r2
 8002dbe:	613b      	str	r3, [r7, #16]

    if(iocurrent == ioposition)
 8002dc0:	693a      	ldr	r2, [r7, #16]
 8002dc2:	697b      	ldr	r3, [r7, #20]
 8002dc4:	429a      	cmp	r2, r3
 8002dc6:	f040 8148 	bne.w	800305a <HAL_GPIO_Init+0x2ca>
    {
      /*--------------------- GPIO Mode Configuration ------------------------*/
      /* In case of Output or Alternate function mode selection */
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || \
 8002dca:	683b      	ldr	r3, [r7, #0]
 8002dcc:	685b      	ldr	r3, [r3, #4]
 8002dce:	f003 0303 	and.w	r3, r3, #3
 8002dd2:	2b01      	cmp	r3, #1
 8002dd4:	d005      	beq.n	8002de2 <HAL_GPIO_Init+0x52>
          (GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 8002dd6:	683b      	ldr	r3, [r7, #0]
 8002dd8:	685b      	ldr	r3, [r3, #4]
 8002dda:	f003 0303 	and.w	r3, r3, #3
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || \
 8002dde:	2b02      	cmp	r3, #2
 8002de0:	d130      	bne.n	8002e44 <HAL_GPIO_Init+0xb4>
      {
        /* Check the Speed parameter */
        assert_param(IS_GPIO_SPEED(GPIO_Init->Speed));
        /* Configure the IO Speed */
        temp = GPIOx->OSPEEDR; 
 8002de2:	687b      	ldr	r3, [r7, #4]
 8002de4:	689b      	ldr	r3, [r3, #8]
 8002de6:	61bb      	str	r3, [r7, #24]
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 8002de8:	69fb      	ldr	r3, [r7, #28]
 8002dea:	005b      	lsls	r3, r3, #1
 8002dec:	2203      	movs	r2, #3
 8002dee:	fa02 f303 	lsl.w	r3, r2, r3
 8002df2:	43db      	mvns	r3, r3
 8002df4:	69ba      	ldr	r2, [r7, #24]
 8002df6:	4013      	ands	r3, r2
 8002df8:	61bb      	str	r3, [r7, #24]
        temp |= (GPIO_Init->Speed << (position * 2U));
 8002dfa:	683b      	ldr	r3, [r7, #0]
 8002dfc:	68da      	ldr	r2, [r3, #12]
 8002dfe:	69fb      	ldr	r3, [r7, #28]
 8002e00:	005b      	lsls	r3, r3, #1
 8002e02:	fa02 f303 	lsl.w	r3, r2, r3
 8002e06:	69ba      	ldr	r2, [r7, #24]
 8002e08:	4313      	orrs	r3, r2
 8002e0a:	61bb      	str	r3, [r7, #24]
        GPIOx->OSPEEDR = temp;
 8002e0c:	687b      	ldr	r3, [r7, #4]
 8002e0e:	69ba      	ldr	r2, [r7, #24]
 8002e10:	609a      	str	r2, [r3, #8]

        /* Configure the IO Output Type */
        temp = GPIOx->OTYPER;
 8002e12:	687b      	ldr	r3, [r7, #4]
 8002e14:	685b      	ldr	r3, [r3, #4]
 8002e16:	61bb      	str	r3, [r7, #24]
        temp &= ~(GPIO_OTYPER_OT_0 << position) ;
 8002e18:	2201      	movs	r2, #1
 8002e1a:	69fb      	ldr	r3, [r7, #28]
 8002e1c:	fa02 f303 	lsl.w	r3, r2, r3
 8002e20:	43db      	mvns	r3, r3
 8002e22:	69ba      	ldr	r2, [r7, #24]
 8002e24:	4013      	ands	r3, r2
 8002e26:	61bb      	str	r3, [r7, #24]
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
 8002e28:	683b      	ldr	r3, [r7, #0]
 8002e2a:	685b      	ldr	r3, [r3, #4]
 8002e2c:	091b      	lsrs	r3, r3, #4
 8002e2e:	f003 0201 	and.w	r2, r3, #1
 8002e32:	69fb      	ldr	r3, [r7, #28]
 8002e34:	fa02 f303 	lsl.w	r3, r2, r3
 8002e38:	69ba      	ldr	r2, [r7, #24]
 8002e3a:	4313      	orrs	r3, r2
 8002e3c:	61bb      	str	r3, [r7, #24]
        GPIOx->OTYPER = temp;
 8002e3e:	687b      	ldr	r3, [r7, #4]
 8002e40:	69ba      	ldr	r2, [r7, #24]
 8002e42:	605a      	str	r2, [r3, #4]
       }

      if((GPIO_Init->Mode & GPIO_MODE) != MODE_ANALOG)
 8002e44:	683b      	ldr	r3, [r7, #0]
 8002e46:	685b      	ldr	r3, [r3, #4]
 8002e48:	f003 0303 	and.w	r3, r3, #3
 8002e4c:	2b03      	cmp	r3, #3
 8002e4e:	d017      	beq.n	8002e80 <HAL_GPIO_Init+0xf0>
      {
        /* Check the parameters */
        assert_param(IS_GPIO_PULL(GPIO_Init->Pull));
        
        /* Activate the Pull-up or Pull down resistor for the current IO */
        temp = GPIOx->PUPDR;
 8002e50:	687b      	ldr	r3, [r7, #4]
 8002e52:	68db      	ldr	r3, [r3, #12]
 8002e54:	61bb      	str	r3, [r7, #24]
        temp &= ~(GPIO_PUPDR_PUPDR0 << (position * 2U));
 8002e56:	69fb      	ldr	r3, [r7, #28]
 8002e58:	005b      	lsls	r3, r3, #1
 8002e5a:	2203      	movs	r2, #3
 8002e5c:	fa02 f303 	lsl.w	r3, r2, r3
 8002e60:	43db      	mvns	r3, r3
 8002e62:	69ba      	ldr	r2, [r7, #24]
 8002e64:	4013      	ands	r3, r2
 8002e66:	61bb      	str	r3, [r7, #24]
        temp |= ((GPIO_Init->Pull) << (position * 2U));
 8002e68:	683b      	ldr	r3, [r7, #0]
 8002e6a:	689a      	ldr	r2, [r3, #8]
 8002e6c:	69fb      	ldr	r3, [r7, #28]
 8002e6e:	005b      	lsls	r3, r3, #1
 8002e70:	fa02 f303 	lsl.w	r3, r2, r3
 8002e74:	69ba      	ldr	r2, [r7, #24]
 8002e76:	4313      	orrs	r3, r2
 8002e78:	61bb      	str	r3, [r7, #24]
        GPIOx->PUPDR = temp;
 8002e7a:	687b      	ldr	r3, [r7, #4]
 8002e7c:	69ba      	ldr	r2, [r7, #24]
 8002e7e:	60da      	str	r2, [r3, #12]
      }

      /* In case of Alternate function mode selection */
      if((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 8002e80:	683b      	ldr	r3, [r7, #0]
 8002e82:	685b      	ldr	r3, [r3, #4]
 8002e84:	f003 0303 	and.w	r3, r3, #3
 8002e88:	2b02      	cmp	r3, #2
 8002e8a:	d123      	bne.n	8002ed4 <HAL_GPIO_Init+0x144>
      {
        /* Check the Alternate function parameter */
        assert_param(IS_GPIO_AF(GPIO_Init->Alternate));
        /* Configure Alternate function mapped with the current IO */
        temp = GPIOx->AFR[position >> 3U];
 8002e8c:	69fb      	ldr	r3, [r7, #28]
 8002e8e:	08da      	lsrs	r2, r3, #3
 8002e90:	687b      	ldr	r3, [r7, #4]
 8002e92:	3208      	adds	r2, #8
 8002e94:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8002e98:	61bb      	str	r3, [r7, #24]
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 8002e9a:	69fb      	ldr	r3, [r7, #28]
 8002e9c:	f003 0307 	and.w	r3, r3, #7
 8002ea0:	009b      	lsls	r3, r3, #2
 8002ea2:	220f      	movs	r2, #15
 8002ea4:	fa02 f303 	lsl.w	r3, r2, r3
 8002ea8:	43db      	mvns	r3, r3
 8002eaa:	69ba      	ldr	r2, [r7, #24]
 8002eac:	4013      	ands	r3, r2
 8002eae:	61bb      	str	r3, [r7, #24]
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));
 8002eb0:	683b      	ldr	r3, [r7, #0]
 8002eb2:	691a      	ldr	r2, [r3, #16]
 8002eb4:	69fb      	ldr	r3, [r7, #28]
 8002eb6:	f003 0307 	and.w	r3, r3, #7
 8002eba:	009b      	lsls	r3, r3, #2
 8002ebc:	fa02 f303 	lsl.w	r3, r2, r3
 8002ec0:	69ba      	ldr	r2, [r7, #24]
 8002ec2:	4313      	orrs	r3, r2
 8002ec4:	61bb      	str	r3, [r7, #24]
        GPIOx->AFR[position >> 3U] = temp;
 8002ec6:	69fb      	ldr	r3, [r7, #28]
 8002ec8:	08da      	lsrs	r2, r3, #3
 8002eca:	687b      	ldr	r3, [r7, #4]
 8002ecc:	3208      	adds	r2, #8
 8002ece:	69b9      	ldr	r1, [r7, #24]
 8002ed0:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
      }

      /* Configure IO Direction mode (Input, Output, Alternate or Analog) */
      temp = GPIOx->MODER;
 8002ed4:	687b      	ldr	r3, [r7, #4]
 8002ed6:	681b      	ldr	r3, [r3, #0]
 8002ed8:	61bb      	str	r3, [r7, #24]
      temp &= ~(GPIO_MODER_MODER0 << (position * 2U));
 8002eda:	69fb      	ldr	r3, [r7, #28]
 8002edc:	005b      	lsls	r3, r3, #1
 8002ede:	2203      	movs	r2, #3
 8002ee0:	fa02 f303 	lsl.w	r3, r2, r3
 8002ee4:	43db      	mvns	r3, r3
 8002ee6:	69ba      	ldr	r2, [r7, #24]
 8002ee8:	4013      	ands	r3, r2
 8002eea:	61bb      	str	r3, [r7, #24]
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 8002eec:	683b      	ldr	r3, [r7, #0]
 8002eee:	685b      	ldr	r3, [r3, #4]
 8002ef0:	f003 0203 	and.w	r2, r3, #3
 8002ef4:	69fb      	ldr	r3, [r7, #28]
 8002ef6:	005b      	lsls	r3, r3, #1
 8002ef8:	fa02 f303 	lsl.w	r3, r2, r3
 8002efc:	69ba      	ldr	r2, [r7, #24]
 8002efe:	4313      	orrs	r3, r2
 8002f00:	61bb      	str	r3, [r7, #24]
      GPIOx->MODER = temp;
 8002f02:	687b      	ldr	r3, [r7, #4]
 8002f04:	69ba      	ldr	r2, [r7, #24]
 8002f06:	601a      	str	r2, [r3, #0]

      /*--------------------- EXTI Mode Configuration ------------------------*/
      /* Configure the External Interrupt or event for the current IO */
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
 8002f08:	683b      	ldr	r3, [r7, #0]
 8002f0a:	685b      	ldr	r3, [r3, #4]
 8002f0c:	f403 3340 	and.w	r3, r3, #196608	; 0x30000
 8002f10:	2b00      	cmp	r3, #0
 8002f12:	f000 80a2 	beq.w	800305a <HAL_GPIO_Init+0x2ca>
      {
        /* Enable SYSCFG Clock */
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8002f16:	2300      	movs	r3, #0
 8002f18:	60fb      	str	r3, [r7, #12]
 8002f1a:	4b57      	ldr	r3, [pc, #348]	; (8003078 <HAL_GPIO_Init+0x2e8>)
 8002f1c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8002f1e:	4a56      	ldr	r2, [pc, #344]	; (8003078 <HAL_GPIO_Init+0x2e8>)
 8002f20:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8002f24:	6453      	str	r3, [r2, #68]	; 0x44
 8002f26:	4b54      	ldr	r3, [pc, #336]	; (8003078 <HAL_GPIO_Init+0x2e8>)
 8002f28:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8002f2a:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 8002f2e:	60fb      	str	r3, [r7, #12]
 8002f30:	68fb      	ldr	r3, [r7, #12]

        temp = SYSCFG->EXTICR[position >> 2U];
 8002f32:	4a52      	ldr	r2, [pc, #328]	; (800307c <HAL_GPIO_Init+0x2ec>)
 8002f34:	69fb      	ldr	r3, [r7, #28]
 8002f36:	089b      	lsrs	r3, r3, #2
 8002f38:	3302      	adds	r3, #2
 8002f3a:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8002f3e:	61bb      	str	r3, [r7, #24]
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 8002f40:	69fb      	ldr	r3, [r7, #28]
 8002f42:	f003 0303 	and.w	r3, r3, #3
 8002f46:	009b      	lsls	r3, r3, #2
 8002f48:	220f      	movs	r2, #15
 8002f4a:	fa02 f303 	lsl.w	r3, r2, r3
 8002f4e:	43db      	mvns	r3, r3
 8002f50:	69ba      	ldr	r2, [r7, #24]
 8002f52:	4013      	ands	r3, r2
 8002f54:	61bb      	str	r3, [r7, #24]
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 8002f56:	687b      	ldr	r3, [r7, #4]
 8002f58:	4a49      	ldr	r2, [pc, #292]	; (8003080 <HAL_GPIO_Init+0x2f0>)
 8002f5a:	4293      	cmp	r3, r2
 8002f5c:	d019      	beq.n	8002f92 <HAL_GPIO_Init+0x202>
 8002f5e:	687b      	ldr	r3, [r7, #4]
 8002f60:	4a48      	ldr	r2, [pc, #288]	; (8003084 <HAL_GPIO_Init+0x2f4>)
 8002f62:	4293      	cmp	r3, r2
 8002f64:	d013      	beq.n	8002f8e <HAL_GPIO_Init+0x1fe>
 8002f66:	687b      	ldr	r3, [r7, #4]
 8002f68:	4a47      	ldr	r2, [pc, #284]	; (8003088 <HAL_GPIO_Init+0x2f8>)
 8002f6a:	4293      	cmp	r3, r2
 8002f6c:	d00d      	beq.n	8002f8a <HAL_GPIO_Init+0x1fa>
 8002f6e:	687b      	ldr	r3, [r7, #4]
 8002f70:	4a46      	ldr	r2, [pc, #280]	; (800308c <HAL_GPIO_Init+0x2fc>)
 8002f72:	4293      	cmp	r3, r2
 8002f74:	d007      	beq.n	8002f86 <HAL_GPIO_Init+0x1f6>
 8002f76:	687b      	ldr	r3, [r7, #4]
 8002f78:	4a45      	ldr	r2, [pc, #276]	; (8003090 <HAL_GPIO_Init+0x300>)
 8002f7a:	4293      	cmp	r3, r2
 8002f7c:	d101      	bne.n	8002f82 <HAL_GPIO_Init+0x1f2>
 8002f7e:	2304      	movs	r3, #4
 8002f80:	e008      	b.n	8002f94 <HAL_GPIO_Init+0x204>
 8002f82:	2307      	movs	r3, #7
 8002f84:	e006      	b.n	8002f94 <HAL_GPIO_Init+0x204>
 8002f86:	2303      	movs	r3, #3
 8002f88:	e004      	b.n	8002f94 <HAL_GPIO_Init+0x204>
 8002f8a:	2302      	movs	r3, #2
 8002f8c:	e002      	b.n	8002f94 <HAL_GPIO_Init+0x204>
 8002f8e:	2301      	movs	r3, #1
 8002f90:	e000      	b.n	8002f94 <HAL_GPIO_Init+0x204>
 8002f92:	2300      	movs	r3, #0
 8002f94:	69fa      	ldr	r2, [r7, #28]
 8002f96:	f002 0203 	and.w	r2, r2, #3
 8002f9a:	0092      	lsls	r2, r2, #2
 8002f9c:	4093      	lsls	r3, r2
 8002f9e:	69ba      	ldr	r2, [r7, #24]
 8002fa0:	4313      	orrs	r3, r2
 8002fa2:	61bb      	str	r3, [r7, #24]
        SYSCFG->EXTICR[position >> 2U] = temp;
 8002fa4:	4935      	ldr	r1, [pc, #212]	; (800307c <HAL_GPIO_Init+0x2ec>)
 8002fa6:	69fb      	ldr	r3, [r7, #28]
 8002fa8:	089b      	lsrs	r3, r3, #2
 8002faa:	3302      	adds	r3, #2
 8002fac:	69ba      	ldr	r2, [r7, #24]
 8002fae:	f841 2023 	str.w	r2, [r1, r3, lsl #2]

        /* Clear Rising Falling edge configuration */
        temp = EXTI->RTSR;
 8002fb2:	4b38      	ldr	r3, [pc, #224]	; (8003094 <HAL_GPIO_Init+0x304>)
 8002fb4:	689b      	ldr	r3, [r3, #8]
 8002fb6:	61bb      	str	r3, [r7, #24]
        temp &= ~((uint32_t)iocurrent);
 8002fb8:	693b      	ldr	r3, [r7, #16]
 8002fba:	43db      	mvns	r3, r3
 8002fbc:	69ba      	ldr	r2, [r7, #24]
 8002fbe:	4013      	ands	r3, r2
 8002fc0:	61bb      	str	r3, [r7, #24]
        if((GPIO_Init->Mode & TRIGGER_RISING) != 0x00U)
 8002fc2:	683b      	ldr	r3, [r7, #0]
 8002fc4:	685b      	ldr	r3, [r3, #4]
 8002fc6:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 8002fca:	2b00      	cmp	r3, #0
 8002fcc:	d003      	beq.n	8002fd6 <HAL_GPIO_Init+0x246>
        {
          temp |= iocurrent;
 8002fce:	69ba      	ldr	r2, [r7, #24]
 8002fd0:	693b      	ldr	r3, [r7, #16]
 8002fd2:	4313      	orrs	r3, r2
 8002fd4:	61bb      	str	r3, [r7, #24]
        }
        EXTI->RTSR = temp;
 8002fd6:	4a2f      	ldr	r2, [pc, #188]	; (8003094 <HAL_GPIO_Init+0x304>)
 8002fd8:	69bb      	ldr	r3, [r7, #24]
 8002fda:	6093      	str	r3, [r2, #8]

        temp = EXTI->FTSR;
 8002fdc:	4b2d      	ldr	r3, [pc, #180]	; (8003094 <HAL_GPIO_Init+0x304>)
 8002fde:	68db      	ldr	r3, [r3, #12]
 8002fe0:	61bb      	str	r3, [r7, #24]
        temp &= ~((uint32_t)iocurrent);
 8002fe2:	693b      	ldr	r3, [r7, #16]
 8002fe4:	43db      	mvns	r3, r3
 8002fe6:	69ba      	ldr	r2, [r7, #24]
 8002fe8:	4013      	ands	r3, r2
 8002fea:	61bb      	str	r3, [r7, #24]
        if((GPIO_Init->Mode & TRIGGER_FALLING) != 0x00U)
 8002fec:	683b      	ldr	r3, [r7, #0]
 8002fee:	685b      	ldr	r3, [r3, #4]
 8002ff0:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 8002ff4:	2b00      	cmp	r3, #0
 8002ff6:	d003      	beq.n	8003000 <HAL_GPIO_Init+0x270>
        {
          temp |= iocurrent;
 8002ff8:	69ba      	ldr	r2, [r7, #24]
 8002ffa:	693b      	ldr	r3, [r7, #16]
 8002ffc:	4313      	orrs	r3, r2
 8002ffe:	61bb      	str	r3, [r7, #24]
        }
        EXTI->FTSR = temp;
 8003000:	4a24      	ldr	r2, [pc, #144]	; (8003094 <HAL_GPIO_Init+0x304>)
 8003002:	69bb      	ldr	r3, [r7, #24]
 8003004:	60d3      	str	r3, [r2, #12]

        temp = EXTI->EMR;
 8003006:	4b23      	ldr	r3, [pc, #140]	; (8003094 <HAL_GPIO_Init+0x304>)
 8003008:	685b      	ldr	r3, [r3, #4]
 800300a:	61bb      	str	r3, [r7, #24]
        temp &= ~((uint32_t)iocurrent);
 800300c:	693b      	ldr	r3, [r7, #16]
 800300e:	43db      	mvns	r3, r3
 8003010:	69ba      	ldr	r2, [r7, #24]
 8003012:	4013      	ands	r3, r2
 8003014:	61bb      	str	r3, [r7, #24]
        if((GPIO_Init->Mode & EXTI_EVT) != 0x00U)
 8003016:	683b      	ldr	r3, [r7, #0]
 8003018:	685b      	ldr	r3, [r3, #4]
 800301a:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 800301e:	2b00      	cmp	r3, #0
 8003020:	d003      	beq.n	800302a <HAL_GPIO_Init+0x29a>
        {
          temp |= iocurrent;
 8003022:	69ba      	ldr	r2, [r7, #24]
 8003024:	693b      	ldr	r3, [r7, #16]
 8003026:	4313      	orrs	r3, r2
 8003028:	61bb      	str	r3, [r7, #24]
        }
        EXTI->EMR = temp;
 800302a:	4a1a      	ldr	r2, [pc, #104]	; (8003094 <HAL_GPIO_Init+0x304>)
 800302c:	69bb      	ldr	r3, [r7, #24]
 800302e:	6053      	str	r3, [r2, #4]

        /* Clear EXTI line configuration */
        temp = EXTI->IMR;
 8003030:	4b18      	ldr	r3, [pc, #96]	; (8003094 <HAL_GPIO_Init+0x304>)
 8003032:	681b      	ldr	r3, [r3, #0]
 8003034:	61bb      	str	r3, [r7, #24]
        temp &= ~((uint32_t)iocurrent);
 8003036:	693b      	ldr	r3, [r7, #16]
 8003038:	43db      	mvns	r3, r3
 800303a:	69ba      	ldr	r2, [r7, #24]
 800303c:	4013      	ands	r3, r2
 800303e:	61bb      	str	r3, [r7, #24]
        if((GPIO_Init->Mode & EXTI_IT) != 0x00U)
 8003040:	683b      	ldr	r3, [r7, #0]
 8003042:	685b      	ldr	r3, [r3, #4]
 8003044:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8003048:	2b00      	cmp	r3, #0
 800304a:	d003      	beq.n	8003054 <HAL_GPIO_Init+0x2c4>
        {
          temp |= iocurrent;
 800304c:	69ba      	ldr	r2, [r7, #24]
 800304e:	693b      	ldr	r3, [r7, #16]
 8003050:	4313      	orrs	r3, r2
 8003052:	61bb      	str	r3, [r7, #24]
        }
        EXTI->IMR = temp;
 8003054:	4a0f      	ldr	r2, [pc, #60]	; (8003094 <HAL_GPIO_Init+0x304>)
 8003056:	69bb      	ldr	r3, [r7, #24]
 8003058:	6013      	str	r3, [r2, #0]
  for(position = 0U; position < GPIO_NUMBER; position++)
 800305a:	69fb      	ldr	r3, [r7, #28]
 800305c:	3301      	adds	r3, #1
 800305e:	61fb      	str	r3, [r7, #28]
 8003060:	69fb      	ldr	r3, [r7, #28]
 8003062:	2b0f      	cmp	r3, #15
 8003064:	f67f aea2 	bls.w	8002dac <HAL_GPIO_Init+0x1c>
      }
    }
  }
}
 8003068:	bf00      	nop
 800306a:	bf00      	nop
 800306c:	3724      	adds	r7, #36	; 0x24
 800306e:	46bd      	mov	sp, r7
 8003070:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003074:	4770      	bx	lr
 8003076:	bf00      	nop
 8003078:	40023800 	.word	0x40023800
 800307c:	40013800 	.word	0x40013800
 8003080:	40020000 	.word	0x40020000
 8003084:	40020400 	.word	0x40020400
 8003088:	40020800 	.word	0x40020800
 800308c:	40020c00 	.word	0x40020c00
 8003090:	40021000 	.word	0x40021000
 8003094:	40013c00 	.word	0x40013c00

08003098 <HAL_GPIO_WritePin>:
  *            @arg GPIO_PIN_RESET: to clear the port pin
  *            @arg GPIO_PIN_SET: to set the port pin
  * @retval None
  */
void HAL_GPIO_WritePin(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin, GPIO_PinState PinState)
{
 8003098:	b480      	push	{r7}
 800309a:	b083      	sub	sp, #12
 800309c:	af00      	add	r7, sp, #0
 800309e:	6078      	str	r0, [r7, #4]
 80030a0:	460b      	mov	r3, r1
 80030a2:	807b      	strh	r3, [r7, #2]
 80030a4:	4613      	mov	r3, r2
 80030a6:	707b      	strb	r3, [r7, #1]
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));
  assert_param(IS_GPIO_PIN_ACTION(PinState));

  if(PinState != GPIO_PIN_RESET)
 80030a8:	787b      	ldrb	r3, [r7, #1]
 80030aa:	2b00      	cmp	r3, #0
 80030ac:	d003      	beq.n	80030b6 <HAL_GPIO_WritePin+0x1e>
  {
    GPIOx->BSRR = GPIO_Pin;
 80030ae:	887a      	ldrh	r2, [r7, #2]
 80030b0:	687b      	ldr	r3, [r7, #4]
 80030b2:	619a      	str	r2, [r3, #24]
  }
  else
  {
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16U;
  }
}
 80030b4:	e003      	b.n	80030be <HAL_GPIO_WritePin+0x26>
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16U;
 80030b6:	887b      	ldrh	r3, [r7, #2]
 80030b8:	041a      	lsls	r2, r3, #16
 80030ba:	687b      	ldr	r3, [r7, #4]
 80030bc:	619a      	str	r2, [r3, #24]
}
 80030be:	bf00      	nop
 80030c0:	370c      	adds	r7, #12
 80030c2:	46bd      	mov	sp, r7
 80030c4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80030c8:	4770      	bx	lr
	...

080030cc <HAL_GPIO_EXTI_IRQHandler>:
  * @brief  This function handles EXTI interrupt request.
  * @param  GPIO_Pin Specifies the pins connected EXTI line
  * @retval None
  */
void HAL_GPIO_EXTI_IRQHandler(uint16_t GPIO_Pin)
{
 80030cc:	b580      	push	{r7, lr}
 80030ce:	b082      	sub	sp, #8
 80030d0:	af00      	add	r7, sp, #0
 80030d2:	4603      	mov	r3, r0
 80030d4:	80fb      	strh	r3, [r7, #6]
  /* EXTI line interrupt detected */
  if(__HAL_GPIO_EXTI_GET_IT(GPIO_Pin) != RESET)
 80030d6:	4b08      	ldr	r3, [pc, #32]	; (80030f8 <HAL_GPIO_EXTI_IRQHandler+0x2c>)
 80030d8:	695a      	ldr	r2, [r3, #20]
 80030da:	88fb      	ldrh	r3, [r7, #6]
 80030dc:	4013      	ands	r3, r2
 80030de:	2b00      	cmp	r3, #0
 80030e0:	d006      	beq.n	80030f0 <HAL_GPIO_EXTI_IRQHandler+0x24>
  {
    __HAL_GPIO_EXTI_CLEAR_IT(GPIO_Pin);
 80030e2:	4a05      	ldr	r2, [pc, #20]	; (80030f8 <HAL_GPIO_EXTI_IRQHandler+0x2c>)
 80030e4:	88fb      	ldrh	r3, [r7, #6]
 80030e6:	6153      	str	r3, [r2, #20]
    HAL_GPIO_EXTI_Callback(GPIO_Pin);
 80030e8:	88fb      	ldrh	r3, [r7, #6]
 80030ea:	4618      	mov	r0, r3
 80030ec:	f000 f806 	bl	80030fc <HAL_GPIO_EXTI_Callback>
  }
}
 80030f0:	bf00      	nop
 80030f2:	3708      	adds	r7, #8
 80030f4:	46bd      	mov	sp, r7
 80030f6:	bd80      	pop	{r7, pc}
 80030f8:	40013c00 	.word	0x40013c00

080030fc <HAL_GPIO_EXTI_Callback>:
  * @brief  EXTI line detection callbacks.
  * @param  GPIO_Pin Specifies the pins connected EXTI line
  * @retval None
  */
__weak void HAL_GPIO_EXTI_Callback(uint16_t GPIO_Pin)
{
 80030fc:	b480      	push	{r7}
 80030fe:	b083      	sub	sp, #12
 8003100:	af00      	add	r7, sp, #0
 8003102:	4603      	mov	r3, r0
 8003104:	80fb      	strh	r3, [r7, #6]
  /* Prevent unused argument(s) compilation warning */
  UNUSED(GPIO_Pin);
  /* NOTE: This function Should not be modified, when the callback is needed,
           the HAL_GPIO_EXTI_Callback could be implemented in the user file
   */
}
 8003106:	bf00      	nop
 8003108:	370c      	adds	r7, #12
 800310a:	46bd      	mov	sp, r7
 800310c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003110:	4770      	bx	lr

08003112 <HAL_PCD_Init>:
  *         parameters in the PCD_InitTypeDef and initialize the associated handle.
  * @param  hpcd PCD handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_PCD_Init(PCD_HandleTypeDef *hpcd)
{
 8003112:	b580      	push	{r7, lr}
 8003114:	b086      	sub	sp, #24
 8003116:	af02      	add	r7, sp, #8
 8003118:	6078      	str	r0, [r7, #4]
  const USB_OTG_GlobalTypeDef *USBx;
#endif /* defined (USB_OTG_FS) */
  uint8_t i;

  /* Check the PCD handle allocation */
  if (hpcd == NULL)
 800311a:	687b      	ldr	r3, [r7, #4]
 800311c:	2b00      	cmp	r3, #0
 800311e:	d101      	bne.n	8003124 <HAL_PCD_Init+0x12>
  {
    return HAL_ERROR;
 8003120:	2301      	movs	r3, #1
 8003122:	e101      	b.n	8003328 <HAL_PCD_Init+0x216>

  /* Check the parameters */
  assert_param(IS_PCD_ALL_INSTANCE(hpcd->Instance));

#if defined (USB_OTG_FS)
  USBx = hpcd->Instance;
 8003124:	687b      	ldr	r3, [r7, #4]
 8003126:	681b      	ldr	r3, [r3, #0]
 8003128:	60bb      	str	r3, [r7, #8]
#endif /* defined (USB_OTG_FS) */

  if (hpcd->State == HAL_PCD_STATE_RESET)
 800312a:	687b      	ldr	r3, [r7, #4]
 800312c:	f893 3495 	ldrb.w	r3, [r3, #1173]	; 0x495
 8003130:	b2db      	uxtb	r3, r3
 8003132:	2b00      	cmp	r3, #0
 8003134:	d106      	bne.n	8003144 <HAL_PCD_Init+0x32>
  {
    /* Allocate lock resource and initialize it */
    hpcd->Lock = HAL_UNLOCKED;
 8003136:	687b      	ldr	r3, [r7, #4]
 8003138:	2200      	movs	r2, #0
 800313a:	f883 2494 	strb.w	r2, [r3, #1172]	; 0x494

    /* Init the low level hardware */
    hpcd->MspInitCallback(hpcd);
#else
    /* Init the low level hardware : GPIO, CLOCK, NVIC... */
    HAL_PCD_MspInit(hpcd);
 800313e:	6878      	ldr	r0, [r7, #4]
 8003140:	f00e fbbe 	bl	80118c0 <HAL_PCD_MspInit>
#endif /* (USE_HAL_PCD_REGISTER_CALLBACKS) */
  }

  hpcd->State = HAL_PCD_STATE_BUSY;
 8003144:	687b      	ldr	r3, [r7, #4]
 8003146:	2203      	movs	r2, #3
 8003148:	f883 2495 	strb.w	r2, [r3, #1173]	; 0x495

#if defined (USB_OTG_FS)
  /* Disable DMA mode for FS instance */
  if (USBx == USB_OTG_FS)
 800314c:	68bb      	ldr	r3, [r7, #8]
 800314e:	f1b3 4fa0 	cmp.w	r3, #1342177280	; 0x50000000
 8003152:	d102      	bne.n	800315a <HAL_PCD_Init+0x48>
  {
    hpcd->Init.dma_enable = 0U;
 8003154:	687b      	ldr	r3, [r7, #4]
 8003156:	2200      	movs	r2, #0
 8003158:	719a      	strb	r2, [r3, #6]
  }
#endif /* defined (USB_OTG_FS) */

  /* Disable the Interrupts */
  __HAL_PCD_DISABLE(hpcd);
 800315a:	687b      	ldr	r3, [r7, #4]
 800315c:	681b      	ldr	r3, [r3, #0]
 800315e:	4618      	mov	r0, r3
 8003160:	f003 fe3b 	bl	8006dda <USB_DisableGlobalInt>

  /*Init the Core (common init.) */
  if (USB_CoreInit(hpcd->Instance, hpcd->Init) != HAL_OK)
 8003164:	687b      	ldr	r3, [r7, #4]
 8003166:	6818      	ldr	r0, [r3, #0]
 8003168:	687b      	ldr	r3, [r7, #4]
 800316a:	7c1a      	ldrb	r2, [r3, #16]
 800316c:	f88d 2000 	strb.w	r2, [sp]
 8003170:	3304      	adds	r3, #4
 8003172:	cb0e      	ldmia	r3, {r1, r2, r3}
 8003174:	f003 fd1a 	bl	8006bac <USB_CoreInit>
 8003178:	4603      	mov	r3, r0
 800317a:	2b00      	cmp	r3, #0
 800317c:	d005      	beq.n	800318a <HAL_PCD_Init+0x78>
  {
    hpcd->State = HAL_PCD_STATE_ERROR;
 800317e:	687b      	ldr	r3, [r7, #4]
 8003180:	2202      	movs	r2, #2
 8003182:	f883 2495 	strb.w	r2, [r3, #1173]	; 0x495
    return HAL_ERROR;
 8003186:	2301      	movs	r3, #1
 8003188:	e0ce      	b.n	8003328 <HAL_PCD_Init+0x216>
  }

  /* Force Device Mode */
  if (USB_SetCurrentMode(hpcd->Instance, USB_DEVICE_MODE) != HAL_OK)
 800318a:	687b      	ldr	r3, [r7, #4]
 800318c:	681b      	ldr	r3, [r3, #0]
 800318e:	2100      	movs	r1, #0
 8003190:	4618      	mov	r0, r3
 8003192:	f003 fe33 	bl	8006dfc <USB_SetCurrentMode>
 8003196:	4603      	mov	r3, r0
 8003198:	2b00      	cmp	r3, #0
 800319a:	d005      	beq.n	80031a8 <HAL_PCD_Init+0x96>
  {
    hpcd->State = HAL_PCD_STATE_ERROR;
 800319c:	687b      	ldr	r3, [r7, #4]
 800319e:	2202      	movs	r2, #2
 80031a0:	f883 2495 	strb.w	r2, [r3, #1173]	; 0x495
    return HAL_ERROR;
 80031a4:	2301      	movs	r3, #1
 80031a6:	e0bf      	b.n	8003328 <HAL_PCD_Init+0x216>
  }

  /* Init endpoints structures */
  for (i = 0U; i < hpcd->Init.dev_endpoints; i++)
 80031a8:	2300      	movs	r3, #0
 80031aa:	73fb      	strb	r3, [r7, #15]
 80031ac:	e04a      	b.n	8003244 <HAL_PCD_Init+0x132>
  {
    /* Init ep structure */
    hpcd->IN_ep[i].is_in = 1U;
 80031ae:	7bfa      	ldrb	r2, [r7, #15]
 80031b0:	6879      	ldr	r1, [r7, #4]
 80031b2:	4613      	mov	r3, r2
 80031b4:	00db      	lsls	r3, r3, #3
 80031b6:	4413      	add	r3, r2
 80031b8:	009b      	lsls	r3, r3, #2
 80031ba:	440b      	add	r3, r1
 80031bc:	3315      	adds	r3, #21
 80031be:	2201      	movs	r2, #1
 80031c0:	701a      	strb	r2, [r3, #0]
    hpcd->IN_ep[i].num = i;
 80031c2:	7bfa      	ldrb	r2, [r7, #15]
 80031c4:	6879      	ldr	r1, [r7, #4]
 80031c6:	4613      	mov	r3, r2
 80031c8:	00db      	lsls	r3, r3, #3
 80031ca:	4413      	add	r3, r2
 80031cc:	009b      	lsls	r3, r3, #2
 80031ce:	440b      	add	r3, r1
 80031d0:	3314      	adds	r3, #20
 80031d2:	7bfa      	ldrb	r2, [r7, #15]
 80031d4:	701a      	strb	r2, [r3, #0]
    hpcd->IN_ep[i].tx_fifo_num = i;
 80031d6:	7bfa      	ldrb	r2, [r7, #15]
 80031d8:	7bfb      	ldrb	r3, [r7, #15]
 80031da:	b298      	uxth	r0, r3
 80031dc:	6879      	ldr	r1, [r7, #4]
 80031de:	4613      	mov	r3, r2
 80031e0:	00db      	lsls	r3, r3, #3
 80031e2:	4413      	add	r3, r2
 80031e4:	009b      	lsls	r3, r3, #2
 80031e6:	440b      	add	r3, r1
 80031e8:	332e      	adds	r3, #46	; 0x2e
 80031ea:	4602      	mov	r2, r0
 80031ec:	801a      	strh	r2, [r3, #0]
    /* Control until ep is activated */
    hpcd->IN_ep[i].type = EP_TYPE_CTRL;
 80031ee:	7bfa      	ldrb	r2, [r7, #15]
 80031f0:	6879      	ldr	r1, [r7, #4]
 80031f2:	4613      	mov	r3, r2
 80031f4:	00db      	lsls	r3, r3, #3
 80031f6:	4413      	add	r3, r2
 80031f8:	009b      	lsls	r3, r3, #2
 80031fa:	440b      	add	r3, r1
 80031fc:	3318      	adds	r3, #24
 80031fe:	2200      	movs	r2, #0
 8003200:	701a      	strb	r2, [r3, #0]
    hpcd->IN_ep[i].maxpacket = 0U;
 8003202:	7bfa      	ldrb	r2, [r7, #15]
 8003204:	6879      	ldr	r1, [r7, #4]
 8003206:	4613      	mov	r3, r2
 8003208:	00db      	lsls	r3, r3, #3
 800320a:	4413      	add	r3, r2
 800320c:	009b      	lsls	r3, r3, #2
 800320e:	440b      	add	r3, r1
 8003210:	331c      	adds	r3, #28
 8003212:	2200      	movs	r2, #0
 8003214:	601a      	str	r2, [r3, #0]
    hpcd->IN_ep[i].xfer_buff = 0U;
 8003216:	7bfa      	ldrb	r2, [r7, #15]
 8003218:	6879      	ldr	r1, [r7, #4]
 800321a:	4613      	mov	r3, r2
 800321c:	00db      	lsls	r3, r3, #3
 800321e:	4413      	add	r3, r2
 8003220:	009b      	lsls	r3, r3, #2
 8003222:	440b      	add	r3, r1
 8003224:	3320      	adds	r3, #32
 8003226:	2200      	movs	r2, #0
 8003228:	601a      	str	r2, [r3, #0]
    hpcd->IN_ep[i].xfer_len = 0U;
 800322a:	7bfa      	ldrb	r2, [r7, #15]
 800322c:	6879      	ldr	r1, [r7, #4]
 800322e:	4613      	mov	r3, r2
 8003230:	00db      	lsls	r3, r3, #3
 8003232:	4413      	add	r3, r2
 8003234:	009b      	lsls	r3, r3, #2
 8003236:	440b      	add	r3, r1
 8003238:	3324      	adds	r3, #36	; 0x24
 800323a:	2200      	movs	r2, #0
 800323c:	601a      	str	r2, [r3, #0]
  for (i = 0U; i < hpcd->Init.dev_endpoints; i++)
 800323e:	7bfb      	ldrb	r3, [r7, #15]
 8003240:	3301      	adds	r3, #1
 8003242:	73fb      	strb	r3, [r7, #15]
 8003244:	687b      	ldr	r3, [r7, #4]
 8003246:	791b      	ldrb	r3, [r3, #4]
 8003248:	7bfa      	ldrb	r2, [r7, #15]
 800324a:	429a      	cmp	r2, r3
 800324c:	d3af      	bcc.n	80031ae <HAL_PCD_Init+0x9c>
  }

  for (i = 0U; i < hpcd->Init.dev_endpoints; i++)
 800324e:	2300      	movs	r3, #0
 8003250:	73fb      	strb	r3, [r7, #15]
 8003252:	e044      	b.n	80032de <HAL_PCD_Init+0x1cc>
  {
    hpcd->OUT_ep[i].is_in = 0U;
 8003254:	7bfa      	ldrb	r2, [r7, #15]
 8003256:	6879      	ldr	r1, [r7, #4]
 8003258:	4613      	mov	r3, r2
 800325a:	00db      	lsls	r3, r3, #3
 800325c:	4413      	add	r3, r2
 800325e:	009b      	lsls	r3, r3, #2
 8003260:	440b      	add	r3, r1
 8003262:	f203 2355 	addw	r3, r3, #597	; 0x255
 8003266:	2200      	movs	r2, #0
 8003268:	701a      	strb	r2, [r3, #0]
    hpcd->OUT_ep[i].num = i;
 800326a:	7bfa      	ldrb	r2, [r7, #15]
 800326c:	6879      	ldr	r1, [r7, #4]
 800326e:	4613      	mov	r3, r2
 8003270:	00db      	lsls	r3, r3, #3
 8003272:	4413      	add	r3, r2
 8003274:	009b      	lsls	r3, r3, #2
 8003276:	440b      	add	r3, r1
 8003278:	f503 7315 	add.w	r3, r3, #596	; 0x254
 800327c:	7bfa      	ldrb	r2, [r7, #15]
 800327e:	701a      	strb	r2, [r3, #0]
    /* Control until ep is activated */
    hpcd->OUT_ep[i].type = EP_TYPE_CTRL;
 8003280:	7bfa      	ldrb	r2, [r7, #15]
 8003282:	6879      	ldr	r1, [r7, #4]
 8003284:	4613      	mov	r3, r2
 8003286:	00db      	lsls	r3, r3, #3
 8003288:	4413      	add	r3, r2
 800328a:	009b      	lsls	r3, r3, #2
 800328c:	440b      	add	r3, r1
 800328e:	f503 7316 	add.w	r3, r3, #600	; 0x258
 8003292:	2200      	movs	r2, #0
 8003294:	701a      	strb	r2, [r3, #0]
    hpcd->OUT_ep[i].maxpacket = 0U;
 8003296:	7bfa      	ldrb	r2, [r7, #15]
 8003298:	6879      	ldr	r1, [r7, #4]
 800329a:	4613      	mov	r3, r2
 800329c:	00db      	lsls	r3, r3, #3
 800329e:	4413      	add	r3, r2
 80032a0:	009b      	lsls	r3, r3, #2
 80032a2:	440b      	add	r3, r1
 80032a4:	f503 7317 	add.w	r3, r3, #604	; 0x25c
 80032a8:	2200      	movs	r2, #0
 80032aa:	601a      	str	r2, [r3, #0]
    hpcd->OUT_ep[i].xfer_buff = 0U;
 80032ac:	7bfa      	ldrb	r2, [r7, #15]
 80032ae:	6879      	ldr	r1, [r7, #4]
 80032b0:	4613      	mov	r3, r2
 80032b2:	00db      	lsls	r3, r3, #3
 80032b4:	4413      	add	r3, r2
 80032b6:	009b      	lsls	r3, r3, #2
 80032b8:	440b      	add	r3, r1
 80032ba:	f503 7318 	add.w	r3, r3, #608	; 0x260
 80032be:	2200      	movs	r2, #0
 80032c0:	601a      	str	r2, [r3, #0]
    hpcd->OUT_ep[i].xfer_len = 0U;
 80032c2:	7bfa      	ldrb	r2, [r7, #15]
 80032c4:	6879      	ldr	r1, [r7, #4]
 80032c6:	4613      	mov	r3, r2
 80032c8:	00db      	lsls	r3, r3, #3
 80032ca:	4413      	add	r3, r2
 80032cc:	009b      	lsls	r3, r3, #2
 80032ce:	440b      	add	r3, r1
 80032d0:	f503 7319 	add.w	r3, r3, #612	; 0x264
 80032d4:	2200      	movs	r2, #0
 80032d6:	601a      	str	r2, [r3, #0]
  for (i = 0U; i < hpcd->Init.dev_endpoints; i++)
 80032d8:	7bfb      	ldrb	r3, [r7, #15]
 80032da:	3301      	adds	r3, #1
 80032dc:	73fb      	strb	r3, [r7, #15]
 80032de:	687b      	ldr	r3, [r7, #4]
 80032e0:	791b      	ldrb	r3, [r3, #4]
 80032e2:	7bfa      	ldrb	r2, [r7, #15]
 80032e4:	429a      	cmp	r2, r3
 80032e6:	d3b5      	bcc.n	8003254 <HAL_PCD_Init+0x142>
  }

  /* Init Device */
  if (USB_DevInit(hpcd->Instance, hpcd->Init) != HAL_OK)
 80032e8:	687b      	ldr	r3, [r7, #4]
 80032ea:	6818      	ldr	r0, [r3, #0]
 80032ec:	687b      	ldr	r3, [r7, #4]
 80032ee:	7c1a      	ldrb	r2, [r3, #16]
 80032f0:	f88d 2000 	strb.w	r2, [sp]
 80032f4:	3304      	adds	r3, #4
 80032f6:	cb0e      	ldmia	r3, {r1, r2, r3}
 80032f8:	f003 fdcc 	bl	8006e94 <USB_DevInit>
 80032fc:	4603      	mov	r3, r0
 80032fe:	2b00      	cmp	r3, #0
 8003300:	d005      	beq.n	800330e <HAL_PCD_Init+0x1fc>
  {
    hpcd->State = HAL_PCD_STATE_ERROR;
 8003302:	687b      	ldr	r3, [r7, #4]
 8003304:	2202      	movs	r2, #2
 8003306:	f883 2495 	strb.w	r2, [r3, #1173]	; 0x495
    return HAL_ERROR;
 800330a:	2301      	movs	r3, #1
 800330c:	e00c      	b.n	8003328 <HAL_PCD_Init+0x216>
  }

  hpcd->USB_Address = 0U;
 800330e:	687b      	ldr	r3, [r7, #4]
 8003310:	2200      	movs	r2, #0
 8003312:	745a      	strb	r2, [r3, #17]
  hpcd->State = HAL_PCD_STATE_READY;
 8003314:	687b      	ldr	r3, [r7, #4]
 8003316:	2201      	movs	r2, #1
 8003318:	f883 2495 	strb.w	r2, [r3, #1173]	; 0x495
    (void)HAL_PCDEx_ActivateLPM(hpcd);
  }
#endif /* defined(STM32F446xx) || defined(STM32F469xx) || defined(STM32F479xx) || defined(STM32F412Zx) ||
          defined(STM32F412Vx) || defined(STM32F412Rx) || defined(STM32F412Cx) || defined(STM32F413xx) ||
          defined(STM32F423xx) */
  (void)USB_DevDisconnect(hpcd->Instance);
 800331c:	687b      	ldr	r3, [r7, #4]
 800331e:	681b      	ldr	r3, [r3, #0]
 8003320:	4618      	mov	r0, r3
 8003322:	f004 fe10 	bl	8007f46 <USB_DevDisconnect>

  return HAL_OK;
 8003326:	2300      	movs	r3, #0
}
 8003328:	4618      	mov	r0, r3
 800332a:	3710      	adds	r7, #16
 800332c:	46bd      	mov	sp, r7
 800332e:	bd80      	pop	{r7, pc}

08003330 <HAL_PCD_Start>:
  * @brief  Start the USB device
  * @param  hpcd PCD handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_PCD_Start(PCD_HandleTypeDef *hpcd)
{
 8003330:	b580      	push	{r7, lr}
 8003332:	b084      	sub	sp, #16
 8003334:	af00      	add	r7, sp, #0
 8003336:	6078      	str	r0, [r7, #4]
  USB_OTG_GlobalTypeDef *USBx = hpcd->Instance;
 8003338:	687b      	ldr	r3, [r7, #4]
 800333a:	681b      	ldr	r3, [r3, #0]
 800333c:	60fb      	str	r3, [r7, #12]

  __HAL_LOCK(hpcd);
 800333e:	687b      	ldr	r3, [r7, #4]
 8003340:	f893 3494 	ldrb.w	r3, [r3, #1172]	; 0x494
 8003344:	2b01      	cmp	r3, #1
 8003346:	d101      	bne.n	800334c <HAL_PCD_Start+0x1c>
 8003348:	2302      	movs	r3, #2
 800334a:	e022      	b.n	8003392 <HAL_PCD_Start+0x62>
 800334c:	687b      	ldr	r3, [r7, #4]
 800334e:	2201      	movs	r2, #1
 8003350:	f883 2494 	strb.w	r2, [r3, #1172]	; 0x494

  if (((USBx->GUSBCFG & USB_OTG_GUSBCFG_PHYSEL) != 0U) &&
 8003354:	68fb      	ldr	r3, [r7, #12]
 8003356:	68db      	ldr	r3, [r3, #12]
 8003358:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800335c:	2b00      	cmp	r3, #0
 800335e:	d009      	beq.n	8003374 <HAL_PCD_Start+0x44>
      (hpcd->Init.battery_charging_enable == 1U))
 8003360:	687b      	ldr	r3, [r7, #4]
 8003362:	7b5b      	ldrb	r3, [r3, #13]
  if (((USBx->GUSBCFG & USB_OTG_GUSBCFG_PHYSEL) != 0U) &&
 8003364:	2b01      	cmp	r3, #1
 8003366:	d105      	bne.n	8003374 <HAL_PCD_Start+0x44>
  {
    /* Enable USB Transceiver */
    USBx->GCCFG |= USB_OTG_GCCFG_PWRDWN;
 8003368:	68fb      	ldr	r3, [r7, #12]
 800336a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800336c:	f443 3280 	orr.w	r2, r3, #65536	; 0x10000
 8003370:	68fb      	ldr	r3, [r7, #12]
 8003372:	639a      	str	r2, [r3, #56]	; 0x38
  }

  __HAL_PCD_ENABLE(hpcd);
 8003374:	687b      	ldr	r3, [r7, #4]
 8003376:	681b      	ldr	r3, [r3, #0]
 8003378:	4618      	mov	r0, r3
 800337a:	f003 fd1d 	bl	8006db8 <USB_EnableGlobalInt>
  (void)USB_DevConnect(hpcd->Instance);
 800337e:	687b      	ldr	r3, [r7, #4]
 8003380:	681b      	ldr	r3, [r3, #0]
 8003382:	4618      	mov	r0, r3
 8003384:	f004 fdbe 	bl	8007f04 <USB_DevConnect>
  __HAL_UNLOCK(hpcd);
 8003388:	687b      	ldr	r3, [r7, #4]
 800338a:	2200      	movs	r2, #0
 800338c:	f883 2494 	strb.w	r2, [r3, #1172]	; 0x494

  return HAL_OK;
 8003390:	2300      	movs	r3, #0
}
 8003392:	4618      	mov	r0, r3
 8003394:	3710      	adds	r7, #16
 8003396:	46bd      	mov	sp, r7
 8003398:	bd80      	pop	{r7, pc}

0800339a <HAL_PCD_IRQHandler>:
  * @brief  Handles PCD interrupt request.
  * @param  hpcd PCD handle
  * @retval HAL status
  */
void HAL_PCD_IRQHandler(PCD_HandleTypeDef *hpcd)
{
 800339a:	b590      	push	{r4, r7, lr}
 800339c:	b08d      	sub	sp, #52	; 0x34
 800339e:	af00      	add	r7, sp, #0
 80033a0:	6078      	str	r0, [r7, #4]
  USB_OTG_GlobalTypeDef *USBx = hpcd->Instance;
 80033a2:	687b      	ldr	r3, [r7, #4]
 80033a4:	681b      	ldr	r3, [r3, #0]
 80033a6:	623b      	str	r3, [r7, #32]
  uint32_t USBx_BASE = (uint32_t)USBx;
 80033a8:	6a3b      	ldr	r3, [r7, #32]
 80033aa:	61fb      	str	r3, [r7, #28]
  uint32_t epnum;
  uint32_t fifoemptymsk;
  uint32_t RegVal;

  /* ensure that we are in device mode */
  if (USB_GetMode(hpcd->Instance) == USB_OTG_MODE_DEVICE)
 80033ac:	687b      	ldr	r3, [r7, #4]
 80033ae:	681b      	ldr	r3, [r3, #0]
 80033b0:	4618      	mov	r0, r3
 80033b2:	f004 fe7c 	bl	80080ae <USB_GetMode>
 80033b6:	4603      	mov	r3, r0
 80033b8:	2b00      	cmp	r3, #0
 80033ba:	f040 848c 	bne.w	8003cd6 <HAL_PCD_IRQHandler+0x93c>
  {
    /* avoid spurious interrupt */
    if (__HAL_PCD_IS_INVALID_INTERRUPT(hpcd))
 80033be:	687b      	ldr	r3, [r7, #4]
 80033c0:	681b      	ldr	r3, [r3, #0]
 80033c2:	4618      	mov	r0, r3
 80033c4:	f004 fde0 	bl	8007f88 <USB_ReadInterrupts>
 80033c8:	4603      	mov	r3, r0
 80033ca:	2b00      	cmp	r3, #0
 80033cc:	f000 8482 	beq.w	8003cd4 <HAL_PCD_IRQHandler+0x93a>
    {
      return;
    }

    /* store current frame number */
    hpcd->FrameNumber = (USBx_DEVICE->DSTS & USB_OTG_DSTS_FNSOF_Msk) >> USB_OTG_DSTS_FNSOF_Pos;
 80033d0:	69fb      	ldr	r3, [r7, #28]
 80033d2:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 80033d6:	689b      	ldr	r3, [r3, #8]
 80033d8:	0a1b      	lsrs	r3, r3, #8
 80033da:	f3c3 020d 	ubfx	r2, r3, #0, #14
 80033de:	687b      	ldr	r3, [r7, #4]
 80033e0:	f8c3 24d4 	str.w	r2, [r3, #1236]	; 0x4d4

    if (__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_MMIS))
 80033e4:	687b      	ldr	r3, [r7, #4]
 80033e6:	681b      	ldr	r3, [r3, #0]
 80033e8:	4618      	mov	r0, r3
 80033ea:	f004 fdcd 	bl	8007f88 <USB_ReadInterrupts>
 80033ee:	4603      	mov	r3, r0
 80033f0:	f003 0302 	and.w	r3, r3, #2
 80033f4:	2b02      	cmp	r3, #2
 80033f6:	d107      	bne.n	8003408 <HAL_PCD_IRQHandler+0x6e>
    {
      /* incorrect mode, acknowledge the interrupt */
      __HAL_PCD_CLEAR_FLAG(hpcd, USB_OTG_GINTSTS_MMIS);
 80033f8:	687b      	ldr	r3, [r7, #4]
 80033fa:	681b      	ldr	r3, [r3, #0]
 80033fc:	695a      	ldr	r2, [r3, #20]
 80033fe:	687b      	ldr	r3, [r7, #4]
 8003400:	681b      	ldr	r3, [r3, #0]
 8003402:	f002 0202 	and.w	r2, r2, #2
 8003406:	615a      	str	r2, [r3, #20]
    }

    /* Handle RxQLevel Interrupt */
    if (__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_RXFLVL))
 8003408:	687b      	ldr	r3, [r7, #4]
 800340a:	681b      	ldr	r3, [r3, #0]
 800340c:	4618      	mov	r0, r3
 800340e:	f004 fdbb 	bl	8007f88 <USB_ReadInterrupts>
 8003412:	4603      	mov	r3, r0
 8003414:	f003 0310 	and.w	r3, r3, #16
 8003418:	2b10      	cmp	r3, #16
 800341a:	d161      	bne.n	80034e0 <HAL_PCD_IRQHandler+0x146>
    {
      USB_MASK_INTERRUPT(hpcd->Instance, USB_OTG_GINTSTS_RXFLVL);
 800341c:	687b      	ldr	r3, [r7, #4]
 800341e:	681b      	ldr	r3, [r3, #0]
 8003420:	699a      	ldr	r2, [r3, #24]
 8003422:	687b      	ldr	r3, [r7, #4]
 8003424:	681b      	ldr	r3, [r3, #0]
 8003426:	f022 0210 	bic.w	r2, r2, #16
 800342a:	619a      	str	r2, [r3, #24]

      RegVal = USBx->GRXSTSP;
 800342c:	6a3b      	ldr	r3, [r7, #32]
 800342e:	6a1b      	ldr	r3, [r3, #32]
 8003430:	61bb      	str	r3, [r7, #24]

      ep = &hpcd->OUT_ep[RegVal & USB_OTG_GRXSTSP_EPNUM];
 8003432:	69bb      	ldr	r3, [r7, #24]
 8003434:	f003 020f 	and.w	r2, r3, #15
 8003438:	4613      	mov	r3, r2
 800343a:	00db      	lsls	r3, r3, #3
 800343c:	4413      	add	r3, r2
 800343e:	009b      	lsls	r3, r3, #2
 8003440:	f503 7314 	add.w	r3, r3, #592	; 0x250
 8003444:	687a      	ldr	r2, [r7, #4]
 8003446:	4413      	add	r3, r2
 8003448:	3304      	adds	r3, #4
 800344a:	617b      	str	r3, [r7, #20]

      if (((RegVal & USB_OTG_GRXSTSP_PKTSTS) >> 17) ==  STS_DATA_UPDT)
 800344c:	69bb      	ldr	r3, [r7, #24]
 800344e:	0c5b      	lsrs	r3, r3, #17
 8003450:	f003 030f 	and.w	r3, r3, #15
 8003454:	2b02      	cmp	r3, #2
 8003456:	d124      	bne.n	80034a2 <HAL_PCD_IRQHandler+0x108>
      {
        if ((RegVal & USB_OTG_GRXSTSP_BCNT) != 0U)
 8003458:	69ba      	ldr	r2, [r7, #24]
 800345a:	f647 73f0 	movw	r3, #32752	; 0x7ff0
 800345e:	4013      	ands	r3, r2
 8003460:	2b00      	cmp	r3, #0
 8003462:	d035      	beq.n	80034d0 <HAL_PCD_IRQHandler+0x136>
        {
          (void)USB_ReadPacket(USBx, ep->xfer_buff,
 8003464:	697b      	ldr	r3, [r7, #20]
 8003466:	68d9      	ldr	r1, [r3, #12]
                               (uint16_t)((RegVal & USB_OTG_GRXSTSP_BCNT) >> 4));
 8003468:	69bb      	ldr	r3, [r7, #24]
 800346a:	091b      	lsrs	r3, r3, #4
 800346c:	b29b      	uxth	r3, r3
          (void)USB_ReadPacket(USBx, ep->xfer_buff,
 800346e:	f3c3 030a 	ubfx	r3, r3, #0, #11
 8003472:	b29b      	uxth	r3, r3
 8003474:	461a      	mov	r2, r3
 8003476:	6a38      	ldr	r0, [r7, #32]
 8003478:	f004 fbf2 	bl	8007c60 <USB_ReadPacket>

          ep->xfer_buff += (RegVal & USB_OTG_GRXSTSP_BCNT) >> 4;
 800347c:	697b      	ldr	r3, [r7, #20]
 800347e:	68da      	ldr	r2, [r3, #12]
 8003480:	69bb      	ldr	r3, [r7, #24]
 8003482:	091b      	lsrs	r3, r3, #4
 8003484:	f3c3 030a 	ubfx	r3, r3, #0, #11
 8003488:	441a      	add	r2, r3
 800348a:	697b      	ldr	r3, [r7, #20]
 800348c:	60da      	str	r2, [r3, #12]
          ep->xfer_count += (RegVal & USB_OTG_GRXSTSP_BCNT) >> 4;
 800348e:	697b      	ldr	r3, [r7, #20]
 8003490:	695a      	ldr	r2, [r3, #20]
 8003492:	69bb      	ldr	r3, [r7, #24]
 8003494:	091b      	lsrs	r3, r3, #4
 8003496:	f3c3 030a 	ubfx	r3, r3, #0, #11
 800349a:	441a      	add	r2, r3
 800349c:	697b      	ldr	r3, [r7, #20]
 800349e:	615a      	str	r2, [r3, #20]
 80034a0:	e016      	b.n	80034d0 <HAL_PCD_IRQHandler+0x136>
        }
      }
      else if (((RegVal & USB_OTG_GRXSTSP_PKTSTS) >> 17) == STS_SETUP_UPDT)
 80034a2:	69bb      	ldr	r3, [r7, #24]
 80034a4:	0c5b      	lsrs	r3, r3, #17
 80034a6:	f003 030f 	and.w	r3, r3, #15
 80034aa:	2b06      	cmp	r3, #6
 80034ac:	d110      	bne.n	80034d0 <HAL_PCD_IRQHandler+0x136>
      {
        (void)USB_ReadPacket(USBx, (uint8_t *)hpcd->Setup, 8U);
 80034ae:	687b      	ldr	r3, [r7, #4]
 80034b0:	f203 439c 	addw	r3, r3, #1180	; 0x49c
 80034b4:	2208      	movs	r2, #8
 80034b6:	4619      	mov	r1, r3
 80034b8:	6a38      	ldr	r0, [r7, #32]
 80034ba:	f004 fbd1 	bl	8007c60 <USB_ReadPacket>
        ep->xfer_count += (RegVal & USB_OTG_GRXSTSP_BCNT) >> 4;
 80034be:	697b      	ldr	r3, [r7, #20]
 80034c0:	695a      	ldr	r2, [r3, #20]
 80034c2:	69bb      	ldr	r3, [r7, #24]
 80034c4:	091b      	lsrs	r3, r3, #4
 80034c6:	f3c3 030a 	ubfx	r3, r3, #0, #11
 80034ca:	441a      	add	r2, r3
 80034cc:	697b      	ldr	r3, [r7, #20]
 80034ce:	615a      	str	r2, [r3, #20]
      else
      {
        /* ... */
      }

      USB_UNMASK_INTERRUPT(hpcd->Instance, USB_OTG_GINTSTS_RXFLVL);
 80034d0:	687b      	ldr	r3, [r7, #4]
 80034d2:	681b      	ldr	r3, [r3, #0]
 80034d4:	699a      	ldr	r2, [r3, #24]
 80034d6:	687b      	ldr	r3, [r7, #4]
 80034d8:	681b      	ldr	r3, [r3, #0]
 80034da:	f042 0210 	orr.w	r2, r2, #16
 80034de:	619a      	str	r2, [r3, #24]
    }

    if (__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_OEPINT))
 80034e0:	687b      	ldr	r3, [r7, #4]
 80034e2:	681b      	ldr	r3, [r3, #0]
 80034e4:	4618      	mov	r0, r3
 80034e6:	f004 fd4f 	bl	8007f88 <USB_ReadInterrupts>
 80034ea:	4603      	mov	r3, r0
 80034ec:	f403 2300 	and.w	r3, r3, #524288	; 0x80000
 80034f0:	f5b3 2f00 	cmp.w	r3, #524288	; 0x80000
 80034f4:	f040 80a7 	bne.w	8003646 <HAL_PCD_IRQHandler+0x2ac>
    {
      epnum = 0U;
 80034f8:	2300      	movs	r3, #0
 80034fa:	627b      	str	r3, [r7, #36]	; 0x24

      /* Read in the device interrupt bits */
      ep_intr = USB_ReadDevAllOutEpInterrupt(hpcd->Instance);
 80034fc:	687b      	ldr	r3, [r7, #4]
 80034fe:	681b      	ldr	r3, [r3, #0]
 8003500:	4618      	mov	r0, r3
 8003502:	f004 fd54 	bl	8007fae <USB_ReadDevAllOutEpInterrupt>
 8003506:	62b8      	str	r0, [r7, #40]	; 0x28

      while (ep_intr != 0U)
 8003508:	e099      	b.n	800363e <HAL_PCD_IRQHandler+0x2a4>
      {
        if ((ep_intr & 0x1U) != 0U)
 800350a:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800350c:	f003 0301 	and.w	r3, r3, #1
 8003510:	2b00      	cmp	r3, #0
 8003512:	f000 808e 	beq.w	8003632 <HAL_PCD_IRQHandler+0x298>
        {
          epint = USB_ReadDevOutEPInterrupt(hpcd->Instance, (uint8_t)epnum);
 8003516:	687b      	ldr	r3, [r7, #4]
 8003518:	681b      	ldr	r3, [r3, #0]
 800351a:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 800351c:	b2d2      	uxtb	r2, r2
 800351e:	4611      	mov	r1, r2
 8003520:	4618      	mov	r0, r3
 8003522:	f004 fd78 	bl	8008016 <USB_ReadDevOutEPInterrupt>
 8003526:	6138      	str	r0, [r7, #16]

          if ((epint & USB_OTG_DOEPINT_XFRC) == USB_OTG_DOEPINT_XFRC)
 8003528:	693b      	ldr	r3, [r7, #16]
 800352a:	f003 0301 	and.w	r3, r3, #1
 800352e:	2b00      	cmp	r3, #0
 8003530:	d00c      	beq.n	800354c <HAL_PCD_IRQHandler+0x1b2>
          {
            CLEAR_OUT_EP_INTR(epnum, USB_OTG_DOEPINT_XFRC);
 8003532:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003534:	015a      	lsls	r2, r3, #5
 8003536:	69fb      	ldr	r3, [r7, #28]
 8003538:	4413      	add	r3, r2
 800353a:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 800353e:	461a      	mov	r2, r3
 8003540:	2301      	movs	r3, #1
 8003542:	6093      	str	r3, [r2, #8]
            (void)PCD_EP_OutXfrComplete_int(hpcd, epnum);
 8003544:	6a79      	ldr	r1, [r7, #36]	; 0x24
 8003546:	6878      	ldr	r0, [r7, #4]
 8003548:	f000 fea2 	bl	8004290 <PCD_EP_OutXfrComplete_int>
          }

          if ((epint & USB_OTG_DOEPINT_STUP) == USB_OTG_DOEPINT_STUP)
 800354c:	693b      	ldr	r3, [r7, #16]
 800354e:	f003 0308 	and.w	r3, r3, #8
 8003552:	2b00      	cmp	r3, #0
 8003554:	d00c      	beq.n	8003570 <HAL_PCD_IRQHandler+0x1d6>
          {
            CLEAR_OUT_EP_INTR(epnum, USB_OTG_DOEPINT_STUP);
 8003556:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003558:	015a      	lsls	r2, r3, #5
 800355a:	69fb      	ldr	r3, [r7, #28]
 800355c:	4413      	add	r3, r2
 800355e:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 8003562:	461a      	mov	r2, r3
 8003564:	2308      	movs	r3, #8
 8003566:	6093      	str	r3, [r2, #8]
            /* Class B setup phase done for previous decoded setup */
            (void)PCD_EP_OutSetupPacket_int(hpcd, epnum);
 8003568:	6a79      	ldr	r1, [r7, #36]	; 0x24
 800356a:	6878      	ldr	r0, [r7, #4]
 800356c:	f000 ff78 	bl	8004460 <PCD_EP_OutSetupPacket_int>
          }

          if ((epint & USB_OTG_DOEPINT_OTEPDIS) == USB_OTG_DOEPINT_OTEPDIS)
 8003570:	693b      	ldr	r3, [r7, #16]
 8003572:	f003 0310 	and.w	r3, r3, #16
 8003576:	2b00      	cmp	r3, #0
 8003578:	d008      	beq.n	800358c <HAL_PCD_IRQHandler+0x1f2>
          {
            CLEAR_OUT_EP_INTR(epnum, USB_OTG_DOEPINT_OTEPDIS);
 800357a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800357c:	015a      	lsls	r2, r3, #5
 800357e:	69fb      	ldr	r3, [r7, #28]
 8003580:	4413      	add	r3, r2
 8003582:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 8003586:	461a      	mov	r2, r3
 8003588:	2310      	movs	r3, #16
 800358a:	6093      	str	r3, [r2, #8]
          }

          /* Clear OUT Endpoint disable interrupt */
          if ((epint & USB_OTG_DOEPINT_EPDISD) == USB_OTG_DOEPINT_EPDISD)
 800358c:	693b      	ldr	r3, [r7, #16]
 800358e:	f003 0302 	and.w	r3, r3, #2
 8003592:	2b00      	cmp	r3, #0
 8003594:	d030      	beq.n	80035f8 <HAL_PCD_IRQHandler+0x25e>
          {
            if ((USBx->GINTSTS & USB_OTG_GINTSTS_BOUTNAKEFF) == USB_OTG_GINTSTS_BOUTNAKEFF)
 8003596:	6a3b      	ldr	r3, [r7, #32]
 8003598:	695b      	ldr	r3, [r3, #20]
 800359a:	f003 0380 	and.w	r3, r3, #128	; 0x80
 800359e:	2b80      	cmp	r3, #128	; 0x80
 80035a0:	d109      	bne.n	80035b6 <HAL_PCD_IRQHandler+0x21c>
            {
              USBx_DEVICE->DCTL |= USB_OTG_DCTL_CGONAK;
 80035a2:	69fb      	ldr	r3, [r7, #28]
 80035a4:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 80035a8:	685b      	ldr	r3, [r3, #4]
 80035aa:	69fa      	ldr	r2, [r7, #28]
 80035ac:	f502 6200 	add.w	r2, r2, #2048	; 0x800
 80035b0:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 80035b4:	6053      	str	r3, [r2, #4]
            }

            ep = &hpcd->OUT_ep[epnum];
 80035b6:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 80035b8:	4613      	mov	r3, r2
 80035ba:	00db      	lsls	r3, r3, #3
 80035bc:	4413      	add	r3, r2
 80035be:	009b      	lsls	r3, r3, #2
 80035c0:	f503 7314 	add.w	r3, r3, #592	; 0x250
 80035c4:	687a      	ldr	r2, [r7, #4]
 80035c6:	4413      	add	r3, r2
 80035c8:	3304      	adds	r3, #4
 80035ca:	617b      	str	r3, [r7, #20]

            if (ep->is_iso_incomplete == 1U)
 80035cc:	697b      	ldr	r3, [r7, #20]
 80035ce:	78db      	ldrb	r3, [r3, #3]
 80035d0:	2b01      	cmp	r3, #1
 80035d2:	d108      	bne.n	80035e6 <HAL_PCD_IRQHandler+0x24c>
            {
              ep->is_iso_incomplete = 0U;
 80035d4:	697b      	ldr	r3, [r7, #20]
 80035d6:	2200      	movs	r2, #0
 80035d8:	70da      	strb	r2, [r3, #3]

#if (USE_HAL_PCD_REGISTER_CALLBACKS == 1U)
              hpcd->ISOOUTIncompleteCallback(hpcd, (uint8_t)epnum);
#else
              HAL_PCD_ISOOUTIncompleteCallback(hpcd, (uint8_t)epnum);
 80035da:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80035dc:	b2db      	uxtb	r3, r3
 80035de:	4619      	mov	r1, r3
 80035e0:	6878      	ldr	r0, [r7, #4]
 80035e2:	f00e fa69 	bl	8011ab8 <HAL_PCD_ISOOUTIncompleteCallback>
#endif /* USE_HAL_PCD_REGISTER_CALLBACKS */
            }

            CLEAR_OUT_EP_INTR(epnum, USB_OTG_DOEPINT_EPDISD);
 80035e6:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80035e8:	015a      	lsls	r2, r3, #5
 80035ea:	69fb      	ldr	r3, [r7, #28]
 80035ec:	4413      	add	r3, r2
 80035ee:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 80035f2:	461a      	mov	r2, r3
 80035f4:	2302      	movs	r3, #2
 80035f6:	6093      	str	r3, [r2, #8]
          }

          /* Clear Status Phase Received interrupt */
          if ((epint & USB_OTG_DOEPINT_OTEPSPR) == USB_OTG_DOEPINT_OTEPSPR)
 80035f8:	693b      	ldr	r3, [r7, #16]
 80035fa:	f003 0320 	and.w	r3, r3, #32
 80035fe:	2b00      	cmp	r3, #0
 8003600:	d008      	beq.n	8003614 <HAL_PCD_IRQHandler+0x27a>
          {
            CLEAR_OUT_EP_INTR(epnum, USB_OTG_DOEPINT_OTEPSPR);
 8003602:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003604:	015a      	lsls	r2, r3, #5
 8003606:	69fb      	ldr	r3, [r7, #28]
 8003608:	4413      	add	r3, r2
 800360a:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 800360e:	461a      	mov	r2, r3
 8003610:	2320      	movs	r3, #32
 8003612:	6093      	str	r3, [r2, #8]
          }

          /* Clear OUT NAK interrupt */
          if ((epint & USB_OTG_DOEPINT_NAK) == USB_OTG_DOEPINT_NAK)
 8003614:	693b      	ldr	r3, [r7, #16]
 8003616:	f403 5300 	and.w	r3, r3, #8192	; 0x2000
 800361a:	2b00      	cmp	r3, #0
 800361c:	d009      	beq.n	8003632 <HAL_PCD_IRQHandler+0x298>
          {
            CLEAR_OUT_EP_INTR(epnum, USB_OTG_DOEPINT_NAK);
 800361e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003620:	015a      	lsls	r2, r3, #5
 8003622:	69fb      	ldr	r3, [r7, #28]
 8003624:	4413      	add	r3, r2
 8003626:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 800362a:	461a      	mov	r2, r3
 800362c:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 8003630:	6093      	str	r3, [r2, #8]
          }
        }
        epnum++;
 8003632:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003634:	3301      	adds	r3, #1
 8003636:	627b      	str	r3, [r7, #36]	; 0x24
        ep_intr >>= 1U;
 8003638:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800363a:	085b      	lsrs	r3, r3, #1
 800363c:	62bb      	str	r3, [r7, #40]	; 0x28
      while (ep_intr != 0U)
 800363e:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8003640:	2b00      	cmp	r3, #0
 8003642:	f47f af62 	bne.w	800350a <HAL_PCD_IRQHandler+0x170>
      }
    }

    if (__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_IEPINT))
 8003646:	687b      	ldr	r3, [r7, #4]
 8003648:	681b      	ldr	r3, [r3, #0]
 800364a:	4618      	mov	r0, r3
 800364c:	f004 fc9c 	bl	8007f88 <USB_ReadInterrupts>
 8003650:	4603      	mov	r3, r0
 8003652:	f403 2380 	and.w	r3, r3, #262144	; 0x40000
 8003656:	f5b3 2f80 	cmp.w	r3, #262144	; 0x40000
 800365a:	f040 80db 	bne.w	8003814 <HAL_PCD_IRQHandler+0x47a>
    {
      /* Read in the device interrupt bits */
      ep_intr = USB_ReadDevAllInEpInterrupt(hpcd->Instance);
 800365e:	687b      	ldr	r3, [r7, #4]
 8003660:	681b      	ldr	r3, [r3, #0]
 8003662:	4618      	mov	r0, r3
 8003664:	f004 fcbd 	bl	8007fe2 <USB_ReadDevAllInEpInterrupt>
 8003668:	62b8      	str	r0, [r7, #40]	; 0x28

      epnum = 0U;
 800366a:	2300      	movs	r3, #0
 800366c:	627b      	str	r3, [r7, #36]	; 0x24

      while (ep_intr != 0U)
 800366e:	e0cd      	b.n	800380c <HAL_PCD_IRQHandler+0x472>
      {
        if ((ep_intr & 0x1U) != 0U) /* In ITR */
 8003670:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8003672:	f003 0301 	and.w	r3, r3, #1
 8003676:	2b00      	cmp	r3, #0
 8003678:	f000 80c2 	beq.w	8003800 <HAL_PCD_IRQHandler+0x466>
        {
          epint = USB_ReadDevInEPInterrupt(hpcd->Instance, (uint8_t)epnum);
 800367c:	687b      	ldr	r3, [r7, #4]
 800367e:	681b      	ldr	r3, [r3, #0]
 8003680:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8003682:	b2d2      	uxtb	r2, r2
 8003684:	4611      	mov	r1, r2
 8003686:	4618      	mov	r0, r3
 8003688:	f004 fce3 	bl	8008052 <USB_ReadDevInEPInterrupt>
 800368c:	6138      	str	r0, [r7, #16]

          if ((epint & USB_OTG_DIEPINT_XFRC) == USB_OTG_DIEPINT_XFRC)
 800368e:	693b      	ldr	r3, [r7, #16]
 8003690:	f003 0301 	and.w	r3, r3, #1
 8003694:	2b00      	cmp	r3, #0
 8003696:	d057      	beq.n	8003748 <HAL_PCD_IRQHandler+0x3ae>
          {
            fifoemptymsk = (uint32_t)(0x1UL << (epnum & EP_ADDR_MSK));
 8003698:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800369a:	f003 030f 	and.w	r3, r3, #15
 800369e:	2201      	movs	r2, #1
 80036a0:	fa02 f303 	lsl.w	r3, r2, r3
 80036a4:	60fb      	str	r3, [r7, #12]
            USBx_DEVICE->DIEPEMPMSK &= ~fifoemptymsk;
 80036a6:	69fb      	ldr	r3, [r7, #28]
 80036a8:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 80036ac:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 80036ae:	68fb      	ldr	r3, [r7, #12]
 80036b0:	43db      	mvns	r3, r3
 80036b2:	69f9      	ldr	r1, [r7, #28]
 80036b4:	f501 6100 	add.w	r1, r1, #2048	; 0x800
 80036b8:	4013      	ands	r3, r2
 80036ba:	634b      	str	r3, [r1, #52]	; 0x34

            CLEAR_IN_EP_INTR(epnum, USB_OTG_DIEPINT_XFRC);
 80036bc:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80036be:	015a      	lsls	r2, r3, #5
 80036c0:	69fb      	ldr	r3, [r7, #28]
 80036c2:	4413      	add	r3, r2
 80036c4:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 80036c8:	461a      	mov	r2, r3
 80036ca:	2301      	movs	r3, #1
 80036cc:	6093      	str	r3, [r2, #8]

            if (hpcd->Init.dma_enable == 1U)
 80036ce:	687b      	ldr	r3, [r7, #4]
 80036d0:	799b      	ldrb	r3, [r3, #6]
 80036d2:	2b01      	cmp	r3, #1
 80036d4:	d132      	bne.n	800373c <HAL_PCD_IRQHandler+0x3a2>
            {
              hpcd->IN_ep[epnum].xfer_buff += hpcd->IN_ep[epnum].maxpacket;
 80036d6:	6879      	ldr	r1, [r7, #4]
 80036d8:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 80036da:	4613      	mov	r3, r2
 80036dc:	00db      	lsls	r3, r3, #3
 80036de:	4413      	add	r3, r2
 80036e0:	009b      	lsls	r3, r3, #2
 80036e2:	440b      	add	r3, r1
 80036e4:	3320      	adds	r3, #32
 80036e6:	6819      	ldr	r1, [r3, #0]
 80036e8:	6878      	ldr	r0, [r7, #4]
 80036ea:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 80036ec:	4613      	mov	r3, r2
 80036ee:	00db      	lsls	r3, r3, #3
 80036f0:	4413      	add	r3, r2
 80036f2:	009b      	lsls	r3, r3, #2
 80036f4:	4403      	add	r3, r0
 80036f6:	331c      	adds	r3, #28
 80036f8:	681b      	ldr	r3, [r3, #0]
 80036fa:	4419      	add	r1, r3
 80036fc:	6878      	ldr	r0, [r7, #4]
 80036fe:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8003700:	4613      	mov	r3, r2
 8003702:	00db      	lsls	r3, r3, #3
 8003704:	4413      	add	r3, r2
 8003706:	009b      	lsls	r3, r3, #2
 8003708:	4403      	add	r3, r0
 800370a:	3320      	adds	r3, #32
 800370c:	6019      	str	r1, [r3, #0]

              /* this is ZLP, so prepare EP0 for next setup */
              if ((epnum == 0U) && (hpcd->IN_ep[epnum].xfer_len == 0U))
 800370e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003710:	2b00      	cmp	r3, #0
 8003712:	d113      	bne.n	800373c <HAL_PCD_IRQHandler+0x3a2>
 8003714:	6879      	ldr	r1, [r7, #4]
 8003716:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8003718:	4613      	mov	r3, r2
 800371a:	00db      	lsls	r3, r3, #3
 800371c:	4413      	add	r3, r2
 800371e:	009b      	lsls	r3, r3, #2
 8003720:	440b      	add	r3, r1
 8003722:	3324      	adds	r3, #36	; 0x24
 8003724:	681b      	ldr	r3, [r3, #0]
 8003726:	2b00      	cmp	r3, #0
 8003728:	d108      	bne.n	800373c <HAL_PCD_IRQHandler+0x3a2>
              {
                /* prepare to rx more setup packets */
                (void)USB_EP0_OutStart(hpcd->Instance, 1U, (uint8_t *)hpcd->Setup);
 800372a:	687b      	ldr	r3, [r7, #4]
 800372c:	6818      	ldr	r0, [r3, #0]
 800372e:	687b      	ldr	r3, [r7, #4]
 8003730:	f203 439c 	addw	r3, r3, #1180	; 0x49c
 8003734:	461a      	mov	r2, r3
 8003736:	2101      	movs	r1, #1
 8003738:	f004 fcea 	bl	8008110 <USB_EP0_OutStart>
            }

#if (USE_HAL_PCD_REGISTER_CALLBACKS == 1U)
            hpcd->DataInStageCallback(hpcd, (uint8_t)epnum);
#else
            HAL_PCD_DataInStageCallback(hpcd, (uint8_t)epnum);
 800373c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800373e:	b2db      	uxtb	r3, r3
 8003740:	4619      	mov	r1, r3
 8003742:	6878      	ldr	r0, [r7, #4]
 8003744:	f00e f93d 	bl	80119c2 <HAL_PCD_DataInStageCallback>
#endif /* USE_HAL_PCD_REGISTER_CALLBACKS */
          }
          if ((epint & USB_OTG_DIEPINT_TOC) == USB_OTG_DIEPINT_TOC)
 8003748:	693b      	ldr	r3, [r7, #16]
 800374a:	f003 0308 	and.w	r3, r3, #8
 800374e:	2b00      	cmp	r3, #0
 8003750:	d008      	beq.n	8003764 <HAL_PCD_IRQHandler+0x3ca>
          {
            CLEAR_IN_EP_INTR(epnum, USB_OTG_DIEPINT_TOC);
 8003752:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003754:	015a      	lsls	r2, r3, #5
 8003756:	69fb      	ldr	r3, [r7, #28]
 8003758:	4413      	add	r3, r2
 800375a:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 800375e:	461a      	mov	r2, r3
 8003760:	2308      	movs	r3, #8
 8003762:	6093      	str	r3, [r2, #8]
          }
          if ((epint & USB_OTG_DIEPINT_ITTXFE) == USB_OTG_DIEPINT_ITTXFE)
 8003764:	693b      	ldr	r3, [r7, #16]
 8003766:	f003 0310 	and.w	r3, r3, #16
 800376a:	2b00      	cmp	r3, #0
 800376c:	d008      	beq.n	8003780 <HAL_PCD_IRQHandler+0x3e6>
          {
            CLEAR_IN_EP_INTR(epnum, USB_OTG_DIEPINT_ITTXFE);
 800376e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003770:	015a      	lsls	r2, r3, #5
 8003772:	69fb      	ldr	r3, [r7, #28]
 8003774:	4413      	add	r3, r2
 8003776:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 800377a:	461a      	mov	r2, r3
 800377c:	2310      	movs	r3, #16
 800377e:	6093      	str	r3, [r2, #8]
          }
          if ((epint & USB_OTG_DIEPINT_INEPNE) == USB_OTG_DIEPINT_INEPNE)
 8003780:	693b      	ldr	r3, [r7, #16]
 8003782:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8003786:	2b00      	cmp	r3, #0
 8003788:	d008      	beq.n	800379c <HAL_PCD_IRQHandler+0x402>
          {
            CLEAR_IN_EP_INTR(epnum, USB_OTG_DIEPINT_INEPNE);
 800378a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800378c:	015a      	lsls	r2, r3, #5
 800378e:	69fb      	ldr	r3, [r7, #28]
 8003790:	4413      	add	r3, r2
 8003792:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 8003796:	461a      	mov	r2, r3
 8003798:	2340      	movs	r3, #64	; 0x40
 800379a:	6093      	str	r3, [r2, #8]
          }
          if ((epint & USB_OTG_DIEPINT_EPDISD) == USB_OTG_DIEPINT_EPDISD)
 800379c:	693b      	ldr	r3, [r7, #16]
 800379e:	f003 0302 	and.w	r3, r3, #2
 80037a2:	2b00      	cmp	r3, #0
 80037a4:	d023      	beq.n	80037ee <HAL_PCD_IRQHandler+0x454>
          {
            (void)USB_FlushTxFifo(USBx, epnum);
 80037a6:	6a79      	ldr	r1, [r7, #36]	; 0x24
 80037a8:	6a38      	ldr	r0, [r7, #32]
 80037aa:	f003 fcd7 	bl	800715c <USB_FlushTxFifo>

            ep = &hpcd->IN_ep[epnum];
 80037ae:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 80037b0:	4613      	mov	r3, r2
 80037b2:	00db      	lsls	r3, r3, #3
 80037b4:	4413      	add	r3, r2
 80037b6:	009b      	lsls	r3, r3, #2
 80037b8:	3310      	adds	r3, #16
 80037ba:	687a      	ldr	r2, [r7, #4]
 80037bc:	4413      	add	r3, r2
 80037be:	3304      	adds	r3, #4
 80037c0:	617b      	str	r3, [r7, #20]

            if (ep->is_iso_incomplete == 1U)
 80037c2:	697b      	ldr	r3, [r7, #20]
 80037c4:	78db      	ldrb	r3, [r3, #3]
 80037c6:	2b01      	cmp	r3, #1
 80037c8:	d108      	bne.n	80037dc <HAL_PCD_IRQHandler+0x442>
            {
              ep->is_iso_incomplete = 0U;
 80037ca:	697b      	ldr	r3, [r7, #20]
 80037cc:	2200      	movs	r2, #0
 80037ce:	70da      	strb	r2, [r3, #3]

#if (USE_HAL_PCD_REGISTER_CALLBACKS == 1U)
              hpcd->ISOINIncompleteCallback(hpcd, (uint8_t)epnum);
#else
              HAL_PCD_ISOINIncompleteCallback(hpcd, (uint8_t)epnum);
 80037d0:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80037d2:	b2db      	uxtb	r3, r3
 80037d4:	4619      	mov	r1, r3
 80037d6:	6878      	ldr	r0, [r7, #4]
 80037d8:	f00e f980 	bl	8011adc <HAL_PCD_ISOINIncompleteCallback>
#endif /* USE_HAL_PCD_REGISTER_CALLBACKS */
            }

            CLEAR_IN_EP_INTR(epnum, USB_OTG_DIEPINT_EPDISD);
 80037dc:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80037de:	015a      	lsls	r2, r3, #5
 80037e0:	69fb      	ldr	r3, [r7, #28]
 80037e2:	4413      	add	r3, r2
 80037e4:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 80037e8:	461a      	mov	r2, r3
 80037ea:	2302      	movs	r3, #2
 80037ec:	6093      	str	r3, [r2, #8]
          }
          if ((epint & USB_OTG_DIEPINT_TXFE) == USB_OTG_DIEPINT_TXFE)
 80037ee:	693b      	ldr	r3, [r7, #16]
 80037f0:	f003 0380 	and.w	r3, r3, #128	; 0x80
 80037f4:	2b00      	cmp	r3, #0
 80037f6:	d003      	beq.n	8003800 <HAL_PCD_IRQHandler+0x466>
          {
            (void)PCD_WriteEmptyTxFifo(hpcd, epnum);
 80037f8:	6a79      	ldr	r1, [r7, #36]	; 0x24
 80037fa:	6878      	ldr	r0, [r7, #4]
 80037fc:	f000 fcbb 	bl	8004176 <PCD_WriteEmptyTxFifo>
          }
        }
        epnum++;
 8003800:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003802:	3301      	adds	r3, #1
 8003804:	627b      	str	r3, [r7, #36]	; 0x24
        ep_intr >>= 1U;
 8003806:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8003808:	085b      	lsrs	r3, r3, #1
 800380a:	62bb      	str	r3, [r7, #40]	; 0x28
      while (ep_intr != 0U)
 800380c:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800380e:	2b00      	cmp	r3, #0
 8003810:	f47f af2e 	bne.w	8003670 <HAL_PCD_IRQHandler+0x2d6>
      }
    }

    /* Handle Resume Interrupt */
    if (__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_WKUINT))
 8003814:	687b      	ldr	r3, [r7, #4]
 8003816:	681b      	ldr	r3, [r3, #0]
 8003818:	4618      	mov	r0, r3
 800381a:	f004 fbb5 	bl	8007f88 <USB_ReadInterrupts>
 800381e:	4603      	mov	r3, r0
 8003820:	f003 4300 	and.w	r3, r3, #2147483648	; 0x80000000
 8003824:	f1b3 4f00 	cmp.w	r3, #2147483648	; 0x80000000
 8003828:	d122      	bne.n	8003870 <HAL_PCD_IRQHandler+0x4d6>
    {
      /* Clear the Remote Wake-up Signaling */
      USBx_DEVICE->DCTL &= ~USB_OTG_DCTL_RWUSIG;
 800382a:	69fb      	ldr	r3, [r7, #28]
 800382c:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 8003830:	685b      	ldr	r3, [r3, #4]
 8003832:	69fa      	ldr	r2, [r7, #28]
 8003834:	f502 6200 	add.w	r2, r2, #2048	; 0x800
 8003838:	f023 0301 	bic.w	r3, r3, #1
 800383c:	6053      	str	r3, [r2, #4]

      if (hpcd->LPM_State == LPM_L1)
 800383e:	687b      	ldr	r3, [r7, #4]
 8003840:	f893 34cc 	ldrb.w	r3, [r3, #1228]	; 0x4cc
 8003844:	2b01      	cmp	r3, #1
 8003846:	d108      	bne.n	800385a <HAL_PCD_IRQHandler+0x4c0>
      {
        hpcd->LPM_State = LPM_L0;
 8003848:	687b      	ldr	r3, [r7, #4]
 800384a:	2200      	movs	r2, #0
 800384c:	f883 24cc 	strb.w	r2, [r3, #1228]	; 0x4cc

#if (USE_HAL_PCD_REGISTER_CALLBACKS == 1U)
        hpcd->LPMCallback(hpcd, PCD_LPM_L0_ACTIVE);
#else
        HAL_PCDEx_LPM_Callback(hpcd, PCD_LPM_L0_ACTIVE);
 8003850:	2100      	movs	r1, #0
 8003852:	6878      	ldr	r0, [r7, #4]
 8003854:	f000 fea2 	bl	800459c <HAL_PCDEx_LPM_Callback>
 8003858:	e002      	b.n	8003860 <HAL_PCD_IRQHandler+0x4c6>
      else
      {
#if (USE_HAL_PCD_REGISTER_CALLBACKS == 1U)
        hpcd->ResumeCallback(hpcd);
#else
        HAL_PCD_ResumeCallback(hpcd);
 800385a:	6878      	ldr	r0, [r7, #4]
 800385c:	f00e f91e 	bl	8011a9c <HAL_PCD_ResumeCallback>
#endif /* USE_HAL_PCD_REGISTER_CALLBACKS */
      }

      __HAL_PCD_CLEAR_FLAG(hpcd, USB_OTG_GINTSTS_WKUINT);
 8003860:	687b      	ldr	r3, [r7, #4]
 8003862:	681b      	ldr	r3, [r3, #0]
 8003864:	695a      	ldr	r2, [r3, #20]
 8003866:	687b      	ldr	r3, [r7, #4]
 8003868:	681b      	ldr	r3, [r3, #0]
 800386a:	f002 4200 	and.w	r2, r2, #2147483648	; 0x80000000
 800386e:	615a      	str	r2, [r3, #20]
    }

    /* Handle Suspend Interrupt */
    if (__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_USBSUSP))
 8003870:	687b      	ldr	r3, [r7, #4]
 8003872:	681b      	ldr	r3, [r3, #0]
 8003874:	4618      	mov	r0, r3
 8003876:	f004 fb87 	bl	8007f88 <USB_ReadInterrupts>
 800387a:	4603      	mov	r3, r0
 800387c:	f403 6300 	and.w	r3, r3, #2048	; 0x800
 8003880:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 8003884:	d112      	bne.n	80038ac <HAL_PCD_IRQHandler+0x512>
    {
      if ((USBx_DEVICE->DSTS & USB_OTG_DSTS_SUSPSTS) == USB_OTG_DSTS_SUSPSTS)
 8003886:	69fb      	ldr	r3, [r7, #28]
 8003888:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 800388c:	689b      	ldr	r3, [r3, #8]
 800388e:	f003 0301 	and.w	r3, r3, #1
 8003892:	2b01      	cmp	r3, #1
 8003894:	d102      	bne.n	800389c <HAL_PCD_IRQHandler+0x502>
      {
#if (USE_HAL_PCD_REGISTER_CALLBACKS == 1U)
        hpcd->SuspendCallback(hpcd);
#else
        HAL_PCD_SuspendCallback(hpcd);
 8003896:	6878      	ldr	r0, [r7, #4]
 8003898:	f00e f8da 	bl	8011a50 <HAL_PCD_SuspendCallback>
#endif /* USE_HAL_PCD_REGISTER_CALLBACKS */
      }
      __HAL_PCD_CLEAR_FLAG(hpcd, USB_OTG_GINTSTS_USBSUSP);
 800389c:	687b      	ldr	r3, [r7, #4]
 800389e:	681b      	ldr	r3, [r3, #0]
 80038a0:	695a      	ldr	r2, [r3, #20]
 80038a2:	687b      	ldr	r3, [r7, #4]
 80038a4:	681b      	ldr	r3, [r3, #0]
 80038a6:	f402 6200 	and.w	r2, r2, #2048	; 0x800
 80038aa:	615a      	str	r2, [r3, #20]
    }
#endif /* defined(STM32F446xx) || defined(STM32F469xx) || defined(STM32F479xx) || defined(STM32F412Zx) ||
          defined(STM32F412Vx) || defined(STM32F412Rx) || defined(STM32F412Cx) || defined(STM32F413xx) ||
          defined(STM32F423xx) */
    /* Handle Reset Interrupt */
    if (__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_USBRST))
 80038ac:	687b      	ldr	r3, [r7, #4]
 80038ae:	681b      	ldr	r3, [r3, #0]
 80038b0:	4618      	mov	r0, r3
 80038b2:	f004 fb69 	bl	8007f88 <USB_ReadInterrupts>
 80038b6:	4603      	mov	r3, r0
 80038b8:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 80038bc:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 80038c0:	f040 80b7 	bne.w	8003a32 <HAL_PCD_IRQHandler+0x698>
    {
      USBx_DEVICE->DCTL &= ~USB_OTG_DCTL_RWUSIG;
 80038c4:	69fb      	ldr	r3, [r7, #28]
 80038c6:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 80038ca:	685b      	ldr	r3, [r3, #4]
 80038cc:	69fa      	ldr	r2, [r7, #28]
 80038ce:	f502 6200 	add.w	r2, r2, #2048	; 0x800
 80038d2:	f023 0301 	bic.w	r3, r3, #1
 80038d6:	6053      	str	r3, [r2, #4]
      (void)USB_FlushTxFifo(hpcd->Instance, 0x10U);
 80038d8:	687b      	ldr	r3, [r7, #4]
 80038da:	681b      	ldr	r3, [r3, #0]
 80038dc:	2110      	movs	r1, #16
 80038de:	4618      	mov	r0, r3
 80038e0:	f003 fc3c 	bl	800715c <USB_FlushTxFifo>

      for (i = 0U; i < hpcd->Init.dev_endpoints; i++)
 80038e4:	2300      	movs	r3, #0
 80038e6:	62fb      	str	r3, [r7, #44]	; 0x2c
 80038e8:	e046      	b.n	8003978 <HAL_PCD_IRQHandler+0x5de>
      {
        USBx_INEP(i)->DIEPINT = 0xFB7FU;
 80038ea:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 80038ec:	015a      	lsls	r2, r3, #5
 80038ee:	69fb      	ldr	r3, [r7, #28]
 80038f0:	4413      	add	r3, r2
 80038f2:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 80038f6:	461a      	mov	r2, r3
 80038f8:	f64f 337f 	movw	r3, #64383	; 0xfb7f
 80038fc:	6093      	str	r3, [r2, #8]
        USBx_INEP(i)->DIEPCTL &= ~USB_OTG_DIEPCTL_STALL;
 80038fe:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8003900:	015a      	lsls	r2, r3, #5
 8003902:	69fb      	ldr	r3, [r7, #28]
 8003904:	4413      	add	r3, r2
 8003906:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 800390a:	681b      	ldr	r3, [r3, #0]
 800390c:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 800390e:	0151      	lsls	r1, r2, #5
 8003910:	69fa      	ldr	r2, [r7, #28]
 8003912:	440a      	add	r2, r1
 8003914:	f502 6210 	add.w	r2, r2, #2304	; 0x900
 8003918:	f423 1300 	bic.w	r3, r3, #2097152	; 0x200000
 800391c:	6013      	str	r3, [r2, #0]
        USBx_OUTEP(i)->DOEPINT = 0xFB7FU;
 800391e:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8003920:	015a      	lsls	r2, r3, #5
 8003922:	69fb      	ldr	r3, [r7, #28]
 8003924:	4413      	add	r3, r2
 8003926:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 800392a:	461a      	mov	r2, r3
 800392c:	f64f 337f 	movw	r3, #64383	; 0xfb7f
 8003930:	6093      	str	r3, [r2, #8]
        USBx_OUTEP(i)->DOEPCTL &= ~USB_OTG_DOEPCTL_STALL;
 8003932:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8003934:	015a      	lsls	r2, r3, #5
 8003936:	69fb      	ldr	r3, [r7, #28]
 8003938:	4413      	add	r3, r2
 800393a:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 800393e:	681b      	ldr	r3, [r3, #0]
 8003940:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 8003942:	0151      	lsls	r1, r2, #5
 8003944:	69fa      	ldr	r2, [r7, #28]
 8003946:	440a      	add	r2, r1
 8003948:	f502 6230 	add.w	r2, r2, #2816	; 0xb00
 800394c:	f423 1300 	bic.w	r3, r3, #2097152	; 0x200000
 8003950:	6013      	str	r3, [r2, #0]
        USBx_OUTEP(i)->DOEPCTL |= USB_OTG_DOEPCTL_SNAK;
 8003952:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8003954:	015a      	lsls	r2, r3, #5
 8003956:	69fb      	ldr	r3, [r7, #28]
 8003958:	4413      	add	r3, r2
 800395a:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 800395e:	681b      	ldr	r3, [r3, #0]
 8003960:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 8003962:	0151      	lsls	r1, r2, #5
 8003964:	69fa      	ldr	r2, [r7, #28]
 8003966:	440a      	add	r2, r1
 8003968:	f502 6230 	add.w	r2, r2, #2816	; 0xb00
 800396c:	f043 6300 	orr.w	r3, r3, #134217728	; 0x8000000
 8003970:	6013      	str	r3, [r2, #0]
      for (i = 0U; i < hpcd->Init.dev_endpoints; i++)
 8003972:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8003974:	3301      	adds	r3, #1
 8003976:	62fb      	str	r3, [r7, #44]	; 0x2c
 8003978:	687b      	ldr	r3, [r7, #4]
 800397a:	791b      	ldrb	r3, [r3, #4]
 800397c:	461a      	mov	r2, r3
 800397e:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8003980:	4293      	cmp	r3, r2
 8003982:	d3b2      	bcc.n	80038ea <HAL_PCD_IRQHandler+0x550>
      }
      USBx_DEVICE->DAINTMSK |= 0x10001U;
 8003984:	69fb      	ldr	r3, [r7, #28]
 8003986:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 800398a:	69db      	ldr	r3, [r3, #28]
 800398c:	69fa      	ldr	r2, [r7, #28]
 800398e:	f502 6200 	add.w	r2, r2, #2048	; 0x800
 8003992:	f043 1301 	orr.w	r3, r3, #65537	; 0x10001
 8003996:	61d3      	str	r3, [r2, #28]

      if (hpcd->Init.use_dedicated_ep1 != 0U)
 8003998:	687b      	ldr	r3, [r7, #4]
 800399a:	7bdb      	ldrb	r3, [r3, #15]
 800399c:	2b00      	cmp	r3, #0
 800399e:	d016      	beq.n	80039ce <HAL_PCD_IRQHandler+0x634>
      {
        USBx_DEVICE->DOUTEP1MSK |= USB_OTG_DOEPMSK_STUPM |
 80039a0:	69fb      	ldr	r3, [r7, #28]
 80039a2:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 80039a6:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 80039aa:	69fa      	ldr	r2, [r7, #28]
 80039ac:	f502 6200 	add.w	r2, r2, #2048	; 0x800
 80039b0:	f043 030b 	orr.w	r3, r3, #11
 80039b4:	f8c2 3084 	str.w	r3, [r2, #132]	; 0x84
                                   USB_OTG_DOEPMSK_XFRCM |
                                   USB_OTG_DOEPMSK_EPDM;

        USBx_DEVICE->DINEP1MSK |= USB_OTG_DIEPMSK_TOM |
 80039b8:	69fb      	ldr	r3, [r7, #28]
 80039ba:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 80039be:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80039c0:	69fa      	ldr	r2, [r7, #28]
 80039c2:	f502 6200 	add.w	r2, r2, #2048	; 0x800
 80039c6:	f043 030b 	orr.w	r3, r3, #11
 80039ca:	6453      	str	r3, [r2, #68]	; 0x44
 80039cc:	e015      	b.n	80039fa <HAL_PCD_IRQHandler+0x660>
                                  USB_OTG_DIEPMSK_XFRCM |
                                  USB_OTG_DIEPMSK_EPDM;
      }
      else
      {
        USBx_DEVICE->DOEPMSK |= USB_OTG_DOEPMSK_STUPM |
 80039ce:	69fb      	ldr	r3, [r7, #28]
 80039d0:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 80039d4:	695b      	ldr	r3, [r3, #20]
 80039d6:	69fa      	ldr	r2, [r7, #28]
 80039d8:	f502 6200 	add.w	r2, r2, #2048	; 0x800
 80039dc:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 80039e0:	f043 032b 	orr.w	r3, r3, #43	; 0x2b
 80039e4:	6153      	str	r3, [r2, #20]
                                USB_OTG_DOEPMSK_XFRCM |
                                USB_OTG_DOEPMSK_EPDM |
                                USB_OTG_DOEPMSK_OTEPSPRM |
                                USB_OTG_DOEPMSK_NAKM;

        USBx_DEVICE->DIEPMSK |= USB_OTG_DIEPMSK_TOM |
 80039e6:	69fb      	ldr	r3, [r7, #28]
 80039e8:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 80039ec:	691b      	ldr	r3, [r3, #16]
 80039ee:	69fa      	ldr	r2, [r7, #28]
 80039f0:	f502 6200 	add.w	r2, r2, #2048	; 0x800
 80039f4:	f043 030b 	orr.w	r3, r3, #11
 80039f8:	6113      	str	r3, [r2, #16]
                                USB_OTG_DIEPMSK_XFRCM |
                                USB_OTG_DIEPMSK_EPDM;
      }

      /* Set Default Address to 0 */
      USBx_DEVICE->DCFG &= ~USB_OTG_DCFG_DAD;
 80039fa:	69fb      	ldr	r3, [r7, #28]
 80039fc:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 8003a00:	681b      	ldr	r3, [r3, #0]
 8003a02:	69fa      	ldr	r2, [r7, #28]
 8003a04:	f502 6200 	add.w	r2, r2, #2048	; 0x800
 8003a08:	f423 63fe 	bic.w	r3, r3, #2032	; 0x7f0
 8003a0c:	6013      	str	r3, [r2, #0]

      /* setup EP0 to receive SETUP packets */
      (void)USB_EP0_OutStart(hpcd->Instance, (uint8_t)hpcd->Init.dma_enable,
 8003a0e:	687b      	ldr	r3, [r7, #4]
 8003a10:	6818      	ldr	r0, [r3, #0]
 8003a12:	687b      	ldr	r3, [r7, #4]
 8003a14:	7999      	ldrb	r1, [r3, #6]
                             (uint8_t *)hpcd->Setup);
 8003a16:	687b      	ldr	r3, [r7, #4]
 8003a18:	f203 439c 	addw	r3, r3, #1180	; 0x49c
      (void)USB_EP0_OutStart(hpcd->Instance, (uint8_t)hpcd->Init.dma_enable,
 8003a1c:	461a      	mov	r2, r3
 8003a1e:	f004 fb77 	bl	8008110 <USB_EP0_OutStart>

      __HAL_PCD_CLEAR_FLAG(hpcd, USB_OTG_GINTSTS_USBRST);
 8003a22:	687b      	ldr	r3, [r7, #4]
 8003a24:	681b      	ldr	r3, [r3, #0]
 8003a26:	695a      	ldr	r2, [r3, #20]
 8003a28:	687b      	ldr	r3, [r7, #4]
 8003a2a:	681b      	ldr	r3, [r3, #0]
 8003a2c:	f402 5280 	and.w	r2, r2, #4096	; 0x1000
 8003a30:	615a      	str	r2, [r3, #20]
    }

    /* Handle Enumeration done Interrupt */
    if (__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_ENUMDNE))
 8003a32:	687b      	ldr	r3, [r7, #4]
 8003a34:	681b      	ldr	r3, [r3, #0]
 8003a36:	4618      	mov	r0, r3
 8003a38:	f004 faa6 	bl	8007f88 <USB_ReadInterrupts>
 8003a3c:	4603      	mov	r3, r0
 8003a3e:	f403 5300 	and.w	r3, r3, #8192	; 0x2000
 8003a42:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8003a46:	d123      	bne.n	8003a90 <HAL_PCD_IRQHandler+0x6f6>
    {
      (void)USB_ActivateSetup(hpcd->Instance);
 8003a48:	687b      	ldr	r3, [r7, #4]
 8003a4a:	681b      	ldr	r3, [r3, #0]
 8003a4c:	4618      	mov	r0, r3
 8003a4e:	f004 fb3c 	bl	80080ca <USB_ActivateSetup>
      hpcd->Init.speed = USB_GetDevSpeed(hpcd->Instance);
 8003a52:	687b      	ldr	r3, [r7, #4]
 8003a54:	681b      	ldr	r3, [r3, #0]
 8003a56:	4618      	mov	r0, r3
 8003a58:	f003 fbf9 	bl	800724e <USB_GetDevSpeed>
 8003a5c:	4603      	mov	r3, r0
 8003a5e:	461a      	mov	r2, r3
 8003a60:	687b      	ldr	r3, [r7, #4]
 8003a62:	71da      	strb	r2, [r3, #7]

      /* Set USB Turnaround time */
      (void)USB_SetTurnaroundTime(hpcd->Instance,
 8003a64:	687b      	ldr	r3, [r7, #4]
 8003a66:	681c      	ldr	r4, [r3, #0]
 8003a68:	f001 f9c8 	bl	8004dfc <HAL_RCC_GetHCLKFreq>
 8003a6c:	4601      	mov	r1, r0
                                  HAL_RCC_GetHCLKFreq(),
                                  (uint8_t)hpcd->Init.speed);
 8003a6e:	687b      	ldr	r3, [r7, #4]
 8003a70:	79db      	ldrb	r3, [r3, #7]
      (void)USB_SetTurnaroundTime(hpcd->Instance,
 8003a72:	461a      	mov	r2, r3
 8003a74:	4620      	mov	r0, r4
 8003a76:	f003 f8fd 	bl	8006c74 <USB_SetTurnaroundTime>

#if (USE_HAL_PCD_REGISTER_CALLBACKS == 1U)
      hpcd->ResetCallback(hpcd);
#else
      HAL_PCD_ResetCallback(hpcd);
 8003a7a:	6878      	ldr	r0, [r7, #4]
 8003a7c:	f00d ffc9 	bl	8011a12 <HAL_PCD_ResetCallback>
#endif /* USE_HAL_PCD_REGISTER_CALLBACKS */

      __HAL_PCD_CLEAR_FLAG(hpcd, USB_OTG_GINTSTS_ENUMDNE);
 8003a80:	687b      	ldr	r3, [r7, #4]
 8003a82:	681b      	ldr	r3, [r3, #0]
 8003a84:	695a      	ldr	r2, [r3, #20]
 8003a86:	687b      	ldr	r3, [r7, #4]
 8003a88:	681b      	ldr	r3, [r3, #0]
 8003a8a:	f402 5200 	and.w	r2, r2, #8192	; 0x2000
 8003a8e:	615a      	str	r2, [r3, #20]
    }

    /* Handle SOF Interrupt */
    if (__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_SOF))
 8003a90:	687b      	ldr	r3, [r7, #4]
 8003a92:	681b      	ldr	r3, [r3, #0]
 8003a94:	4618      	mov	r0, r3
 8003a96:	f004 fa77 	bl	8007f88 <USB_ReadInterrupts>
 8003a9a:	4603      	mov	r3, r0
 8003a9c:	f003 0308 	and.w	r3, r3, #8
 8003aa0:	2b08      	cmp	r3, #8
 8003aa2:	d10a      	bne.n	8003aba <HAL_PCD_IRQHandler+0x720>
    {
#if (USE_HAL_PCD_REGISTER_CALLBACKS == 1U)
      hpcd->SOFCallback(hpcd);
#else
      HAL_PCD_SOFCallback(hpcd);
 8003aa4:	6878      	ldr	r0, [r7, #4]
 8003aa6:	f00d ffa6 	bl	80119f6 <HAL_PCD_SOFCallback>
#endif /* USE_HAL_PCD_REGISTER_CALLBACKS */

      __HAL_PCD_CLEAR_FLAG(hpcd, USB_OTG_GINTSTS_SOF);
 8003aaa:	687b      	ldr	r3, [r7, #4]
 8003aac:	681b      	ldr	r3, [r3, #0]
 8003aae:	695a      	ldr	r2, [r3, #20]
 8003ab0:	687b      	ldr	r3, [r7, #4]
 8003ab2:	681b      	ldr	r3, [r3, #0]
 8003ab4:	f002 0208 	and.w	r2, r2, #8
 8003ab8:	615a      	str	r2, [r3, #20]
    }

    /* Handle Global OUT NAK effective Interrupt */
    if (__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_BOUTNAKEFF))
 8003aba:	687b      	ldr	r3, [r7, #4]
 8003abc:	681b      	ldr	r3, [r3, #0]
 8003abe:	4618      	mov	r0, r3
 8003ac0:	f004 fa62 	bl	8007f88 <USB_ReadInterrupts>
 8003ac4:	4603      	mov	r3, r0
 8003ac6:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8003aca:	2b80      	cmp	r3, #128	; 0x80
 8003acc:	d123      	bne.n	8003b16 <HAL_PCD_IRQHandler+0x77c>
    {
      USBx->GINTMSK &= ~USB_OTG_GINTMSK_GONAKEFFM;
 8003ace:	6a3b      	ldr	r3, [r7, #32]
 8003ad0:	699b      	ldr	r3, [r3, #24]
 8003ad2:	f023 0280 	bic.w	r2, r3, #128	; 0x80
 8003ad6:	6a3b      	ldr	r3, [r7, #32]
 8003ad8:	619a      	str	r2, [r3, #24]

      for (epnum = 1U; epnum < hpcd->Init.dev_endpoints; epnum++)
 8003ada:	2301      	movs	r3, #1
 8003adc:	627b      	str	r3, [r7, #36]	; 0x24
 8003ade:	e014      	b.n	8003b0a <HAL_PCD_IRQHandler+0x770>
      {
        if (hpcd->OUT_ep[epnum].is_iso_incomplete == 1U)
 8003ae0:	6879      	ldr	r1, [r7, #4]
 8003ae2:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8003ae4:	4613      	mov	r3, r2
 8003ae6:	00db      	lsls	r3, r3, #3
 8003ae8:	4413      	add	r3, r2
 8003aea:	009b      	lsls	r3, r3, #2
 8003aec:	440b      	add	r3, r1
 8003aee:	f203 2357 	addw	r3, r3, #599	; 0x257
 8003af2:	781b      	ldrb	r3, [r3, #0]
 8003af4:	2b01      	cmp	r3, #1
 8003af6:	d105      	bne.n	8003b04 <HAL_PCD_IRQHandler+0x76a>
        {
          /* Abort current transaction and disable the EP */
          (void)HAL_PCD_EP_Abort(hpcd, (uint8_t)epnum);
 8003af8:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003afa:	b2db      	uxtb	r3, r3
 8003afc:	4619      	mov	r1, r3
 8003afe:	6878      	ldr	r0, [r7, #4]
 8003b00:	f000 fb08 	bl	8004114 <HAL_PCD_EP_Abort>
      for (epnum = 1U; epnum < hpcd->Init.dev_endpoints; epnum++)
 8003b04:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003b06:	3301      	adds	r3, #1
 8003b08:	627b      	str	r3, [r7, #36]	; 0x24
 8003b0a:	687b      	ldr	r3, [r7, #4]
 8003b0c:	791b      	ldrb	r3, [r3, #4]
 8003b0e:	461a      	mov	r2, r3
 8003b10:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003b12:	4293      	cmp	r3, r2
 8003b14:	d3e4      	bcc.n	8003ae0 <HAL_PCD_IRQHandler+0x746>
        }
      }
    }

    /* Handle Incomplete ISO IN Interrupt */
    if (__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_IISOIXFR))
 8003b16:	687b      	ldr	r3, [r7, #4]
 8003b18:	681b      	ldr	r3, [r3, #0]
 8003b1a:	4618      	mov	r0, r3
 8003b1c:	f004 fa34 	bl	8007f88 <USB_ReadInterrupts>
 8003b20:	4603      	mov	r3, r0
 8003b22:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 8003b26:	f5b3 1f80 	cmp.w	r3, #1048576	; 0x100000
 8003b2a:	d13c      	bne.n	8003ba6 <HAL_PCD_IRQHandler+0x80c>
    {
      for (epnum = 1U; epnum < hpcd->Init.dev_endpoints; epnum++)
 8003b2c:	2301      	movs	r3, #1
 8003b2e:	627b      	str	r3, [r7, #36]	; 0x24
 8003b30:	e02b      	b.n	8003b8a <HAL_PCD_IRQHandler+0x7f0>
      {
        RegVal = USBx_INEP(epnum)->DIEPCTL;
 8003b32:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003b34:	015a      	lsls	r2, r3, #5
 8003b36:	69fb      	ldr	r3, [r7, #28]
 8003b38:	4413      	add	r3, r2
 8003b3a:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 8003b3e:	681b      	ldr	r3, [r3, #0]
 8003b40:	61bb      	str	r3, [r7, #24]

        if ((hpcd->IN_ep[epnum].type == EP_TYPE_ISOC) &&
 8003b42:	6879      	ldr	r1, [r7, #4]
 8003b44:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8003b46:	4613      	mov	r3, r2
 8003b48:	00db      	lsls	r3, r3, #3
 8003b4a:	4413      	add	r3, r2
 8003b4c:	009b      	lsls	r3, r3, #2
 8003b4e:	440b      	add	r3, r1
 8003b50:	3318      	adds	r3, #24
 8003b52:	781b      	ldrb	r3, [r3, #0]
 8003b54:	2b01      	cmp	r3, #1
 8003b56:	d115      	bne.n	8003b84 <HAL_PCD_IRQHandler+0x7ea>
            ((RegVal & USB_OTG_DIEPCTL_EPENA) == USB_OTG_DIEPCTL_EPENA))
 8003b58:	69bb      	ldr	r3, [r7, #24]
        if ((hpcd->IN_ep[epnum].type == EP_TYPE_ISOC) &&
 8003b5a:	2b00      	cmp	r3, #0
 8003b5c:	da12      	bge.n	8003b84 <HAL_PCD_IRQHandler+0x7ea>
        {
          hpcd->IN_ep[epnum].is_iso_incomplete = 1U;
 8003b5e:	6879      	ldr	r1, [r7, #4]
 8003b60:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8003b62:	4613      	mov	r3, r2
 8003b64:	00db      	lsls	r3, r3, #3
 8003b66:	4413      	add	r3, r2
 8003b68:	009b      	lsls	r3, r3, #2
 8003b6a:	440b      	add	r3, r1
 8003b6c:	3317      	adds	r3, #23
 8003b6e:	2201      	movs	r2, #1
 8003b70:	701a      	strb	r2, [r3, #0]

          /* Abort current transaction and disable the EP */
          (void)HAL_PCD_EP_Abort(hpcd, (uint8_t)(epnum | 0x80U));
 8003b72:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003b74:	b2db      	uxtb	r3, r3
 8003b76:	f063 037f 	orn	r3, r3, #127	; 0x7f
 8003b7a:	b2db      	uxtb	r3, r3
 8003b7c:	4619      	mov	r1, r3
 8003b7e:	6878      	ldr	r0, [r7, #4]
 8003b80:	f000 fac8 	bl	8004114 <HAL_PCD_EP_Abort>
      for (epnum = 1U; epnum < hpcd->Init.dev_endpoints; epnum++)
 8003b84:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003b86:	3301      	adds	r3, #1
 8003b88:	627b      	str	r3, [r7, #36]	; 0x24
 8003b8a:	687b      	ldr	r3, [r7, #4]
 8003b8c:	791b      	ldrb	r3, [r3, #4]
 8003b8e:	461a      	mov	r2, r3
 8003b90:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003b92:	4293      	cmp	r3, r2
 8003b94:	d3cd      	bcc.n	8003b32 <HAL_PCD_IRQHandler+0x798>
        }
      }

      __HAL_PCD_CLEAR_FLAG(hpcd, USB_OTG_GINTSTS_IISOIXFR);
 8003b96:	687b      	ldr	r3, [r7, #4]
 8003b98:	681b      	ldr	r3, [r3, #0]
 8003b9a:	695a      	ldr	r2, [r3, #20]
 8003b9c:	687b      	ldr	r3, [r7, #4]
 8003b9e:	681b      	ldr	r3, [r3, #0]
 8003ba0:	f402 1280 	and.w	r2, r2, #1048576	; 0x100000
 8003ba4:	615a      	str	r2, [r3, #20]
    }

    /* Handle Incomplete ISO OUT Interrupt */
    if (__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_PXFR_INCOMPISOOUT))
 8003ba6:	687b      	ldr	r3, [r7, #4]
 8003ba8:	681b      	ldr	r3, [r3, #0]
 8003baa:	4618      	mov	r0, r3
 8003bac:	f004 f9ec 	bl	8007f88 <USB_ReadInterrupts>
 8003bb0:	4603      	mov	r3, r0
 8003bb2:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 8003bb6:	f5b3 1f00 	cmp.w	r3, #2097152	; 0x200000
 8003bba:	d156      	bne.n	8003c6a <HAL_PCD_IRQHandler+0x8d0>
    {
      for (epnum = 1U; epnum < hpcd->Init.dev_endpoints; epnum++)
 8003bbc:	2301      	movs	r3, #1
 8003bbe:	627b      	str	r3, [r7, #36]	; 0x24
 8003bc0:	e045      	b.n	8003c4e <HAL_PCD_IRQHandler+0x8b4>
      {
        RegVal = USBx_OUTEP(epnum)->DOEPCTL;
 8003bc2:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003bc4:	015a      	lsls	r2, r3, #5
 8003bc6:	69fb      	ldr	r3, [r7, #28]
 8003bc8:	4413      	add	r3, r2
 8003bca:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 8003bce:	681b      	ldr	r3, [r3, #0]
 8003bd0:	61bb      	str	r3, [r7, #24]

        if ((hpcd->OUT_ep[epnum].type == EP_TYPE_ISOC) &&
 8003bd2:	6879      	ldr	r1, [r7, #4]
 8003bd4:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8003bd6:	4613      	mov	r3, r2
 8003bd8:	00db      	lsls	r3, r3, #3
 8003bda:	4413      	add	r3, r2
 8003bdc:	009b      	lsls	r3, r3, #2
 8003bde:	440b      	add	r3, r1
 8003be0:	f503 7316 	add.w	r3, r3, #600	; 0x258
 8003be4:	781b      	ldrb	r3, [r3, #0]
 8003be6:	2b01      	cmp	r3, #1
 8003be8:	d12e      	bne.n	8003c48 <HAL_PCD_IRQHandler+0x8ae>
            ((RegVal & USB_OTG_DOEPCTL_EPENA) == USB_OTG_DOEPCTL_EPENA) &&
 8003bea:	69bb      	ldr	r3, [r7, #24]
        if ((hpcd->OUT_ep[epnum].type == EP_TYPE_ISOC) &&
 8003bec:	2b00      	cmp	r3, #0
 8003bee:	da2b      	bge.n	8003c48 <HAL_PCD_IRQHandler+0x8ae>
            ((RegVal & (0x1U << 16)) == (hpcd->FrameNumber & 0x1U)))
 8003bf0:	69bb      	ldr	r3, [r7, #24]
 8003bf2:	f403 3280 	and.w	r2, r3, #65536	; 0x10000
 8003bf6:	687b      	ldr	r3, [r7, #4]
 8003bf8:	f8d3 34d4 	ldr.w	r3, [r3, #1236]	; 0x4d4
 8003bfc:	f003 0301 	and.w	r3, r3, #1
            ((RegVal & USB_OTG_DOEPCTL_EPENA) == USB_OTG_DOEPCTL_EPENA) &&
 8003c00:	429a      	cmp	r2, r3
 8003c02:	d121      	bne.n	8003c48 <HAL_PCD_IRQHandler+0x8ae>
        {
          hpcd->OUT_ep[epnum].is_iso_incomplete = 1U;
 8003c04:	6879      	ldr	r1, [r7, #4]
 8003c06:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8003c08:	4613      	mov	r3, r2
 8003c0a:	00db      	lsls	r3, r3, #3
 8003c0c:	4413      	add	r3, r2
 8003c0e:	009b      	lsls	r3, r3, #2
 8003c10:	440b      	add	r3, r1
 8003c12:	f203 2357 	addw	r3, r3, #599	; 0x257
 8003c16:	2201      	movs	r2, #1
 8003c18:	701a      	strb	r2, [r3, #0]

          USBx->GINTMSK |= USB_OTG_GINTMSK_GONAKEFFM;
 8003c1a:	6a3b      	ldr	r3, [r7, #32]
 8003c1c:	699b      	ldr	r3, [r3, #24]
 8003c1e:	f043 0280 	orr.w	r2, r3, #128	; 0x80
 8003c22:	6a3b      	ldr	r3, [r7, #32]
 8003c24:	619a      	str	r2, [r3, #24]

          if ((USBx->GINTSTS & USB_OTG_GINTSTS_BOUTNAKEFF) == 0U)
 8003c26:	6a3b      	ldr	r3, [r7, #32]
 8003c28:	695b      	ldr	r3, [r3, #20]
 8003c2a:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8003c2e:	2b00      	cmp	r3, #0
 8003c30:	d10a      	bne.n	8003c48 <HAL_PCD_IRQHandler+0x8ae>
          {
            USBx_DEVICE->DCTL |= USB_OTG_DCTL_SGONAK;
 8003c32:	69fb      	ldr	r3, [r7, #28]
 8003c34:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 8003c38:	685b      	ldr	r3, [r3, #4]
 8003c3a:	69fa      	ldr	r2, [r7, #28]
 8003c3c:	f502 6200 	add.w	r2, r2, #2048	; 0x800
 8003c40:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8003c44:	6053      	str	r3, [r2, #4]
            break;
 8003c46:	e008      	b.n	8003c5a <HAL_PCD_IRQHandler+0x8c0>
      for (epnum = 1U; epnum < hpcd->Init.dev_endpoints; epnum++)
 8003c48:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003c4a:	3301      	adds	r3, #1
 8003c4c:	627b      	str	r3, [r7, #36]	; 0x24
 8003c4e:	687b      	ldr	r3, [r7, #4]
 8003c50:	791b      	ldrb	r3, [r3, #4]
 8003c52:	461a      	mov	r2, r3
 8003c54:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003c56:	4293      	cmp	r3, r2
 8003c58:	d3b3      	bcc.n	8003bc2 <HAL_PCD_IRQHandler+0x828>
          }
        }
      }

      __HAL_PCD_CLEAR_FLAG(hpcd, USB_OTG_GINTSTS_PXFR_INCOMPISOOUT);
 8003c5a:	687b      	ldr	r3, [r7, #4]
 8003c5c:	681b      	ldr	r3, [r3, #0]
 8003c5e:	695a      	ldr	r2, [r3, #20]
 8003c60:	687b      	ldr	r3, [r7, #4]
 8003c62:	681b      	ldr	r3, [r3, #0]
 8003c64:	f402 1200 	and.w	r2, r2, #2097152	; 0x200000
 8003c68:	615a      	str	r2, [r3, #20]
    }

    /* Handle Connection event Interrupt */
    if (__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_SRQINT))
 8003c6a:	687b      	ldr	r3, [r7, #4]
 8003c6c:	681b      	ldr	r3, [r3, #0]
 8003c6e:	4618      	mov	r0, r3
 8003c70:	f004 f98a 	bl	8007f88 <USB_ReadInterrupts>
 8003c74:	4603      	mov	r3, r0
 8003c76:	f003 4380 	and.w	r3, r3, #1073741824	; 0x40000000
 8003c7a:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8003c7e:	d10a      	bne.n	8003c96 <HAL_PCD_IRQHandler+0x8fc>
    {
#if (USE_HAL_PCD_REGISTER_CALLBACKS == 1U)
      hpcd->ConnectCallback(hpcd);
#else
      HAL_PCD_ConnectCallback(hpcd);
 8003c80:	6878      	ldr	r0, [r7, #4]
 8003c82:	f00d ff3d 	bl	8011b00 <HAL_PCD_ConnectCallback>
#endif /* USE_HAL_PCD_REGISTER_CALLBACKS */

      __HAL_PCD_CLEAR_FLAG(hpcd, USB_OTG_GINTSTS_SRQINT);
 8003c86:	687b      	ldr	r3, [r7, #4]
 8003c88:	681b      	ldr	r3, [r3, #0]
 8003c8a:	695a      	ldr	r2, [r3, #20]
 8003c8c:	687b      	ldr	r3, [r7, #4]
 8003c8e:	681b      	ldr	r3, [r3, #0]
 8003c90:	f002 4280 	and.w	r2, r2, #1073741824	; 0x40000000
 8003c94:	615a      	str	r2, [r3, #20]
    }

    /* Handle Disconnection event Interrupt */
    if (__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_OTGINT))
 8003c96:	687b      	ldr	r3, [r7, #4]
 8003c98:	681b      	ldr	r3, [r3, #0]
 8003c9a:	4618      	mov	r0, r3
 8003c9c:	f004 f974 	bl	8007f88 <USB_ReadInterrupts>
 8003ca0:	4603      	mov	r3, r0
 8003ca2:	f003 0304 	and.w	r3, r3, #4
 8003ca6:	2b04      	cmp	r3, #4
 8003ca8:	d115      	bne.n	8003cd6 <HAL_PCD_IRQHandler+0x93c>
    {
      RegVal = hpcd->Instance->GOTGINT;
 8003caa:	687b      	ldr	r3, [r7, #4]
 8003cac:	681b      	ldr	r3, [r3, #0]
 8003cae:	685b      	ldr	r3, [r3, #4]
 8003cb0:	61bb      	str	r3, [r7, #24]

      if ((RegVal & USB_OTG_GOTGINT_SEDET) == USB_OTG_GOTGINT_SEDET)
 8003cb2:	69bb      	ldr	r3, [r7, #24]
 8003cb4:	f003 0304 	and.w	r3, r3, #4
 8003cb8:	2b00      	cmp	r3, #0
 8003cba:	d002      	beq.n	8003cc2 <HAL_PCD_IRQHandler+0x928>
      {
#if (USE_HAL_PCD_REGISTER_CALLBACKS == 1U)
        hpcd->DisconnectCallback(hpcd);
#else
        HAL_PCD_DisconnectCallback(hpcd);
 8003cbc:	6878      	ldr	r0, [r7, #4]
 8003cbe:	f00d ff2d 	bl	8011b1c <HAL_PCD_DisconnectCallback>
#endif /* USE_HAL_PCD_REGISTER_CALLBACKS */
      }
      hpcd->Instance->GOTGINT |= RegVal;
 8003cc2:	687b      	ldr	r3, [r7, #4]
 8003cc4:	681b      	ldr	r3, [r3, #0]
 8003cc6:	6859      	ldr	r1, [r3, #4]
 8003cc8:	687b      	ldr	r3, [r7, #4]
 8003cca:	681b      	ldr	r3, [r3, #0]
 8003ccc:	69ba      	ldr	r2, [r7, #24]
 8003cce:	430a      	orrs	r2, r1
 8003cd0:	605a      	str	r2, [r3, #4]
 8003cd2:	e000      	b.n	8003cd6 <HAL_PCD_IRQHandler+0x93c>
      return;
 8003cd4:	bf00      	nop
    }
  }
}
 8003cd6:	3734      	adds	r7, #52	; 0x34
 8003cd8:	46bd      	mov	sp, r7
 8003cda:	bd90      	pop	{r4, r7, pc}

08003cdc <HAL_PCD_SetAddress>:
  * @param  hpcd PCD handle
  * @param  address new device address
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_PCD_SetAddress(PCD_HandleTypeDef *hpcd, uint8_t address)
{
 8003cdc:	b580      	push	{r7, lr}
 8003cde:	b082      	sub	sp, #8
 8003ce0:	af00      	add	r7, sp, #0
 8003ce2:	6078      	str	r0, [r7, #4]
 8003ce4:	460b      	mov	r3, r1
 8003ce6:	70fb      	strb	r3, [r7, #3]
  __HAL_LOCK(hpcd);
 8003ce8:	687b      	ldr	r3, [r7, #4]
 8003cea:	f893 3494 	ldrb.w	r3, [r3, #1172]	; 0x494
 8003cee:	2b01      	cmp	r3, #1
 8003cf0:	d101      	bne.n	8003cf6 <HAL_PCD_SetAddress+0x1a>
 8003cf2:	2302      	movs	r3, #2
 8003cf4:	e012      	b.n	8003d1c <HAL_PCD_SetAddress+0x40>
 8003cf6:	687b      	ldr	r3, [r7, #4]
 8003cf8:	2201      	movs	r2, #1
 8003cfa:	f883 2494 	strb.w	r2, [r3, #1172]	; 0x494
  hpcd->USB_Address = address;
 8003cfe:	687b      	ldr	r3, [r7, #4]
 8003d00:	78fa      	ldrb	r2, [r7, #3]
 8003d02:	745a      	strb	r2, [r3, #17]
  (void)USB_SetDevAddress(hpcd->Instance, address);
 8003d04:	687b      	ldr	r3, [r7, #4]
 8003d06:	681b      	ldr	r3, [r3, #0]
 8003d08:	78fa      	ldrb	r2, [r7, #3]
 8003d0a:	4611      	mov	r1, r2
 8003d0c:	4618      	mov	r0, r3
 8003d0e:	f004 f8d3 	bl	8007eb8 <USB_SetDevAddress>
  __HAL_UNLOCK(hpcd);
 8003d12:	687b      	ldr	r3, [r7, #4]
 8003d14:	2200      	movs	r2, #0
 8003d16:	f883 2494 	strb.w	r2, [r3, #1172]	; 0x494

  return HAL_OK;
 8003d1a:	2300      	movs	r3, #0
}
 8003d1c:	4618      	mov	r0, r3
 8003d1e:	3708      	adds	r7, #8
 8003d20:	46bd      	mov	sp, r7
 8003d22:	bd80      	pop	{r7, pc}

08003d24 <HAL_PCD_EP_Open>:
  * @param  ep_type endpoint type
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_PCD_EP_Open(PCD_HandleTypeDef *hpcd, uint8_t ep_addr,
                                  uint16_t ep_mps, uint8_t ep_type)
{
 8003d24:	b580      	push	{r7, lr}
 8003d26:	b084      	sub	sp, #16
 8003d28:	af00      	add	r7, sp, #0
 8003d2a:	6078      	str	r0, [r7, #4]
 8003d2c:	4608      	mov	r0, r1
 8003d2e:	4611      	mov	r1, r2
 8003d30:	461a      	mov	r2, r3
 8003d32:	4603      	mov	r3, r0
 8003d34:	70fb      	strb	r3, [r7, #3]
 8003d36:	460b      	mov	r3, r1
 8003d38:	803b      	strh	r3, [r7, #0]
 8003d3a:	4613      	mov	r3, r2
 8003d3c:	70bb      	strb	r3, [r7, #2]
  HAL_StatusTypeDef  ret = HAL_OK;
 8003d3e:	2300      	movs	r3, #0
 8003d40:	72fb      	strb	r3, [r7, #11]
  PCD_EPTypeDef *ep;

  if ((ep_addr & 0x80U) == 0x80U)
 8003d42:	f997 3003 	ldrsb.w	r3, [r7, #3]
 8003d46:	2b00      	cmp	r3, #0
 8003d48:	da0f      	bge.n	8003d6a <HAL_PCD_EP_Open+0x46>
  {
    ep = &hpcd->IN_ep[ep_addr & EP_ADDR_MSK];
 8003d4a:	78fb      	ldrb	r3, [r7, #3]
 8003d4c:	f003 020f 	and.w	r2, r3, #15
 8003d50:	4613      	mov	r3, r2
 8003d52:	00db      	lsls	r3, r3, #3
 8003d54:	4413      	add	r3, r2
 8003d56:	009b      	lsls	r3, r3, #2
 8003d58:	3310      	adds	r3, #16
 8003d5a:	687a      	ldr	r2, [r7, #4]
 8003d5c:	4413      	add	r3, r2
 8003d5e:	3304      	adds	r3, #4
 8003d60:	60fb      	str	r3, [r7, #12]
    ep->is_in = 1U;
 8003d62:	68fb      	ldr	r3, [r7, #12]
 8003d64:	2201      	movs	r2, #1
 8003d66:	705a      	strb	r2, [r3, #1]
 8003d68:	e00f      	b.n	8003d8a <HAL_PCD_EP_Open+0x66>
  }
  else
  {
    ep = &hpcd->OUT_ep[ep_addr & EP_ADDR_MSK];
 8003d6a:	78fb      	ldrb	r3, [r7, #3]
 8003d6c:	f003 020f 	and.w	r2, r3, #15
 8003d70:	4613      	mov	r3, r2
 8003d72:	00db      	lsls	r3, r3, #3
 8003d74:	4413      	add	r3, r2
 8003d76:	009b      	lsls	r3, r3, #2
 8003d78:	f503 7314 	add.w	r3, r3, #592	; 0x250
 8003d7c:	687a      	ldr	r2, [r7, #4]
 8003d7e:	4413      	add	r3, r2
 8003d80:	3304      	adds	r3, #4
 8003d82:	60fb      	str	r3, [r7, #12]
    ep->is_in = 0U;
 8003d84:	68fb      	ldr	r3, [r7, #12]
 8003d86:	2200      	movs	r2, #0
 8003d88:	705a      	strb	r2, [r3, #1]
  }

  ep->num = ep_addr & EP_ADDR_MSK;
 8003d8a:	78fb      	ldrb	r3, [r7, #3]
 8003d8c:	f003 030f 	and.w	r3, r3, #15
 8003d90:	b2da      	uxtb	r2, r3
 8003d92:	68fb      	ldr	r3, [r7, #12]
 8003d94:	701a      	strb	r2, [r3, #0]
  ep->maxpacket = ep_mps;
 8003d96:	883a      	ldrh	r2, [r7, #0]
 8003d98:	68fb      	ldr	r3, [r7, #12]
 8003d9a:	609a      	str	r2, [r3, #8]
  ep->type = ep_type;
 8003d9c:	68fb      	ldr	r3, [r7, #12]
 8003d9e:	78ba      	ldrb	r2, [r7, #2]
 8003da0:	711a      	strb	r2, [r3, #4]

  if (ep->is_in != 0U)
 8003da2:	68fb      	ldr	r3, [r7, #12]
 8003da4:	785b      	ldrb	r3, [r3, #1]
 8003da6:	2b00      	cmp	r3, #0
 8003da8:	d004      	beq.n	8003db4 <HAL_PCD_EP_Open+0x90>
  {
    /* Assign a Tx FIFO */
    ep->tx_fifo_num = ep->num;
 8003daa:	68fb      	ldr	r3, [r7, #12]
 8003dac:	781b      	ldrb	r3, [r3, #0]
 8003dae:	b29a      	uxth	r2, r3
 8003db0:	68fb      	ldr	r3, [r7, #12]
 8003db2:	835a      	strh	r2, [r3, #26]
  }

  /* Set initial data PID. */
  if (ep_type == EP_TYPE_BULK)
 8003db4:	78bb      	ldrb	r3, [r7, #2]
 8003db6:	2b02      	cmp	r3, #2
 8003db8:	d102      	bne.n	8003dc0 <HAL_PCD_EP_Open+0x9c>
  {
    ep->data_pid_start = 0U;
 8003dba:	68fb      	ldr	r3, [r7, #12]
 8003dbc:	2200      	movs	r2, #0
 8003dbe:	715a      	strb	r2, [r3, #5]
  }

  __HAL_LOCK(hpcd);
 8003dc0:	687b      	ldr	r3, [r7, #4]
 8003dc2:	f893 3494 	ldrb.w	r3, [r3, #1172]	; 0x494
 8003dc6:	2b01      	cmp	r3, #1
 8003dc8:	d101      	bne.n	8003dce <HAL_PCD_EP_Open+0xaa>
 8003dca:	2302      	movs	r3, #2
 8003dcc:	e00e      	b.n	8003dec <HAL_PCD_EP_Open+0xc8>
 8003dce:	687b      	ldr	r3, [r7, #4]
 8003dd0:	2201      	movs	r2, #1
 8003dd2:	f883 2494 	strb.w	r2, [r3, #1172]	; 0x494
  (void)USB_ActivateEndpoint(hpcd->Instance, ep);
 8003dd6:	687b      	ldr	r3, [r7, #4]
 8003dd8:	681b      	ldr	r3, [r3, #0]
 8003dda:	68f9      	ldr	r1, [r7, #12]
 8003ddc:	4618      	mov	r0, r3
 8003dde:	f003 fa5b 	bl	8007298 <USB_ActivateEndpoint>
  __HAL_UNLOCK(hpcd);
 8003de2:	687b      	ldr	r3, [r7, #4]
 8003de4:	2200      	movs	r2, #0
 8003de6:	f883 2494 	strb.w	r2, [r3, #1172]	; 0x494

  return ret;
 8003dea:	7afb      	ldrb	r3, [r7, #11]
}
 8003dec:	4618      	mov	r0, r3
 8003dee:	3710      	adds	r7, #16
 8003df0:	46bd      	mov	sp, r7
 8003df2:	bd80      	pop	{r7, pc}

08003df4 <HAL_PCD_EP_Close>:
  * @param  hpcd PCD handle
  * @param  ep_addr endpoint address
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_PCD_EP_Close(PCD_HandleTypeDef *hpcd, uint8_t ep_addr)
{
 8003df4:	b580      	push	{r7, lr}
 8003df6:	b084      	sub	sp, #16
 8003df8:	af00      	add	r7, sp, #0
 8003dfa:	6078      	str	r0, [r7, #4]
 8003dfc:	460b      	mov	r3, r1
 8003dfe:	70fb      	strb	r3, [r7, #3]
  PCD_EPTypeDef *ep;

  if ((ep_addr & 0x80U) == 0x80U)
 8003e00:	f997 3003 	ldrsb.w	r3, [r7, #3]
 8003e04:	2b00      	cmp	r3, #0
 8003e06:	da0f      	bge.n	8003e28 <HAL_PCD_EP_Close+0x34>
  {
    ep = &hpcd->IN_ep[ep_addr & EP_ADDR_MSK];
 8003e08:	78fb      	ldrb	r3, [r7, #3]
 8003e0a:	f003 020f 	and.w	r2, r3, #15
 8003e0e:	4613      	mov	r3, r2
 8003e10:	00db      	lsls	r3, r3, #3
 8003e12:	4413      	add	r3, r2
 8003e14:	009b      	lsls	r3, r3, #2
 8003e16:	3310      	adds	r3, #16
 8003e18:	687a      	ldr	r2, [r7, #4]
 8003e1a:	4413      	add	r3, r2
 8003e1c:	3304      	adds	r3, #4
 8003e1e:	60fb      	str	r3, [r7, #12]
    ep->is_in = 1U;
 8003e20:	68fb      	ldr	r3, [r7, #12]
 8003e22:	2201      	movs	r2, #1
 8003e24:	705a      	strb	r2, [r3, #1]
 8003e26:	e00f      	b.n	8003e48 <HAL_PCD_EP_Close+0x54>
  }
  else
  {
    ep = &hpcd->OUT_ep[ep_addr & EP_ADDR_MSK];
 8003e28:	78fb      	ldrb	r3, [r7, #3]
 8003e2a:	f003 020f 	and.w	r2, r3, #15
 8003e2e:	4613      	mov	r3, r2
 8003e30:	00db      	lsls	r3, r3, #3
 8003e32:	4413      	add	r3, r2
 8003e34:	009b      	lsls	r3, r3, #2
 8003e36:	f503 7314 	add.w	r3, r3, #592	; 0x250
 8003e3a:	687a      	ldr	r2, [r7, #4]
 8003e3c:	4413      	add	r3, r2
 8003e3e:	3304      	adds	r3, #4
 8003e40:	60fb      	str	r3, [r7, #12]
    ep->is_in = 0U;
 8003e42:	68fb      	ldr	r3, [r7, #12]
 8003e44:	2200      	movs	r2, #0
 8003e46:	705a      	strb	r2, [r3, #1]
  }
  ep->num = ep_addr & EP_ADDR_MSK;
 8003e48:	78fb      	ldrb	r3, [r7, #3]
 8003e4a:	f003 030f 	and.w	r3, r3, #15
 8003e4e:	b2da      	uxtb	r2, r3
 8003e50:	68fb      	ldr	r3, [r7, #12]
 8003e52:	701a      	strb	r2, [r3, #0]

  __HAL_LOCK(hpcd);
 8003e54:	687b      	ldr	r3, [r7, #4]
 8003e56:	f893 3494 	ldrb.w	r3, [r3, #1172]	; 0x494
 8003e5a:	2b01      	cmp	r3, #1
 8003e5c:	d101      	bne.n	8003e62 <HAL_PCD_EP_Close+0x6e>
 8003e5e:	2302      	movs	r3, #2
 8003e60:	e00e      	b.n	8003e80 <HAL_PCD_EP_Close+0x8c>
 8003e62:	687b      	ldr	r3, [r7, #4]
 8003e64:	2201      	movs	r2, #1
 8003e66:	f883 2494 	strb.w	r2, [r3, #1172]	; 0x494
  (void)USB_DeactivateEndpoint(hpcd->Instance, ep);
 8003e6a:	687b      	ldr	r3, [r7, #4]
 8003e6c:	681b      	ldr	r3, [r3, #0]
 8003e6e:	68f9      	ldr	r1, [r7, #12]
 8003e70:	4618      	mov	r0, r3
 8003e72:	f003 fa99 	bl	80073a8 <USB_DeactivateEndpoint>
  __HAL_UNLOCK(hpcd);
 8003e76:	687b      	ldr	r3, [r7, #4]
 8003e78:	2200      	movs	r2, #0
 8003e7a:	f883 2494 	strb.w	r2, [r3, #1172]	; 0x494
  return HAL_OK;
 8003e7e:	2300      	movs	r3, #0
}
 8003e80:	4618      	mov	r0, r3
 8003e82:	3710      	adds	r7, #16
 8003e84:	46bd      	mov	sp, r7
 8003e86:	bd80      	pop	{r7, pc}

08003e88 <HAL_PCD_EP_Receive>:
  * @param  pBuf pointer to the reception buffer
  * @param  len amount of data to be received
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_PCD_EP_Receive(PCD_HandleTypeDef *hpcd, uint8_t ep_addr, uint8_t *pBuf, uint32_t len)
{
 8003e88:	b580      	push	{r7, lr}
 8003e8a:	b086      	sub	sp, #24
 8003e8c:	af00      	add	r7, sp, #0
 8003e8e:	60f8      	str	r0, [r7, #12]
 8003e90:	607a      	str	r2, [r7, #4]
 8003e92:	603b      	str	r3, [r7, #0]
 8003e94:	460b      	mov	r3, r1
 8003e96:	72fb      	strb	r3, [r7, #11]
  PCD_EPTypeDef *ep;

  ep = &hpcd->OUT_ep[ep_addr & EP_ADDR_MSK];
 8003e98:	7afb      	ldrb	r3, [r7, #11]
 8003e9a:	f003 020f 	and.w	r2, r3, #15
 8003e9e:	4613      	mov	r3, r2
 8003ea0:	00db      	lsls	r3, r3, #3
 8003ea2:	4413      	add	r3, r2
 8003ea4:	009b      	lsls	r3, r3, #2
 8003ea6:	f503 7314 	add.w	r3, r3, #592	; 0x250
 8003eaa:	68fa      	ldr	r2, [r7, #12]
 8003eac:	4413      	add	r3, r2
 8003eae:	3304      	adds	r3, #4
 8003eb0:	617b      	str	r3, [r7, #20]

  /*setup and start the Xfer */
  ep->xfer_buff = pBuf;
 8003eb2:	697b      	ldr	r3, [r7, #20]
 8003eb4:	687a      	ldr	r2, [r7, #4]
 8003eb6:	60da      	str	r2, [r3, #12]
  ep->xfer_len = len;
 8003eb8:	697b      	ldr	r3, [r7, #20]
 8003eba:	683a      	ldr	r2, [r7, #0]
 8003ebc:	611a      	str	r2, [r3, #16]
  ep->xfer_count = 0U;
 8003ebe:	697b      	ldr	r3, [r7, #20]
 8003ec0:	2200      	movs	r2, #0
 8003ec2:	615a      	str	r2, [r3, #20]
  ep->is_in = 0U;
 8003ec4:	697b      	ldr	r3, [r7, #20]
 8003ec6:	2200      	movs	r2, #0
 8003ec8:	705a      	strb	r2, [r3, #1]
  ep->num = ep_addr & EP_ADDR_MSK;
 8003eca:	7afb      	ldrb	r3, [r7, #11]
 8003ecc:	f003 030f 	and.w	r3, r3, #15
 8003ed0:	b2da      	uxtb	r2, r3
 8003ed2:	697b      	ldr	r3, [r7, #20]
 8003ed4:	701a      	strb	r2, [r3, #0]

  if (hpcd->Init.dma_enable == 1U)
 8003ed6:	68fb      	ldr	r3, [r7, #12]
 8003ed8:	799b      	ldrb	r3, [r3, #6]
 8003eda:	2b01      	cmp	r3, #1
 8003edc:	d102      	bne.n	8003ee4 <HAL_PCD_EP_Receive+0x5c>
  {
    ep->dma_addr = (uint32_t)pBuf;
 8003ede:	687a      	ldr	r2, [r7, #4]
 8003ee0:	697b      	ldr	r3, [r7, #20]
 8003ee2:	61da      	str	r2, [r3, #28]
  }

  (void)USB_EPStartXfer(hpcd->Instance, ep, (uint8_t)hpcd->Init.dma_enable);
 8003ee4:	68fb      	ldr	r3, [r7, #12]
 8003ee6:	6818      	ldr	r0, [r3, #0]
 8003ee8:	68fb      	ldr	r3, [r7, #12]
 8003eea:	799b      	ldrb	r3, [r3, #6]
 8003eec:	461a      	mov	r2, r3
 8003eee:	6979      	ldr	r1, [r7, #20]
 8003ef0:	f003 fb36 	bl	8007560 <USB_EPStartXfer>

  return HAL_OK;
 8003ef4:	2300      	movs	r3, #0
}
 8003ef6:	4618      	mov	r0, r3
 8003ef8:	3718      	adds	r7, #24
 8003efa:	46bd      	mov	sp, r7
 8003efc:	bd80      	pop	{r7, pc}

08003efe <HAL_PCD_EP_GetRxCount>:
  * @param  hpcd PCD handle
  * @param  ep_addr endpoint address
  * @retval Data Size
  */
uint32_t HAL_PCD_EP_GetRxCount(PCD_HandleTypeDef const *hpcd, uint8_t ep_addr)
{
 8003efe:	b480      	push	{r7}
 8003f00:	b083      	sub	sp, #12
 8003f02:	af00      	add	r7, sp, #0
 8003f04:	6078      	str	r0, [r7, #4]
 8003f06:	460b      	mov	r3, r1
 8003f08:	70fb      	strb	r3, [r7, #3]
  return hpcd->OUT_ep[ep_addr & EP_ADDR_MSK].xfer_count;
 8003f0a:	78fb      	ldrb	r3, [r7, #3]
 8003f0c:	f003 020f 	and.w	r2, r3, #15
 8003f10:	6879      	ldr	r1, [r7, #4]
 8003f12:	4613      	mov	r3, r2
 8003f14:	00db      	lsls	r3, r3, #3
 8003f16:	4413      	add	r3, r2
 8003f18:	009b      	lsls	r3, r3, #2
 8003f1a:	440b      	add	r3, r1
 8003f1c:	f503 731a 	add.w	r3, r3, #616	; 0x268
 8003f20:	681b      	ldr	r3, [r3, #0]
}
 8003f22:	4618      	mov	r0, r3
 8003f24:	370c      	adds	r7, #12
 8003f26:	46bd      	mov	sp, r7
 8003f28:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003f2c:	4770      	bx	lr

08003f2e <HAL_PCD_EP_Transmit>:
  * @param  pBuf pointer to the transmission buffer
  * @param  len amount of data to be sent
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_PCD_EP_Transmit(PCD_HandleTypeDef *hpcd, uint8_t ep_addr, uint8_t *pBuf, uint32_t len)
{
 8003f2e:	b580      	push	{r7, lr}
 8003f30:	b086      	sub	sp, #24
 8003f32:	af00      	add	r7, sp, #0
 8003f34:	60f8      	str	r0, [r7, #12]
 8003f36:	607a      	str	r2, [r7, #4]
 8003f38:	603b      	str	r3, [r7, #0]
 8003f3a:	460b      	mov	r3, r1
 8003f3c:	72fb      	strb	r3, [r7, #11]
  PCD_EPTypeDef *ep;

  ep = &hpcd->IN_ep[ep_addr & EP_ADDR_MSK];
 8003f3e:	7afb      	ldrb	r3, [r7, #11]
 8003f40:	f003 020f 	and.w	r2, r3, #15
 8003f44:	4613      	mov	r3, r2
 8003f46:	00db      	lsls	r3, r3, #3
 8003f48:	4413      	add	r3, r2
 8003f4a:	009b      	lsls	r3, r3, #2
 8003f4c:	3310      	adds	r3, #16
 8003f4e:	68fa      	ldr	r2, [r7, #12]
 8003f50:	4413      	add	r3, r2
 8003f52:	3304      	adds	r3, #4
 8003f54:	617b      	str	r3, [r7, #20]

  /*setup and start the Xfer */
  ep->xfer_buff = pBuf;
 8003f56:	697b      	ldr	r3, [r7, #20]
 8003f58:	687a      	ldr	r2, [r7, #4]
 8003f5a:	60da      	str	r2, [r3, #12]
  ep->xfer_len = len;
 8003f5c:	697b      	ldr	r3, [r7, #20]
 8003f5e:	683a      	ldr	r2, [r7, #0]
 8003f60:	611a      	str	r2, [r3, #16]
  ep->xfer_count = 0U;
 8003f62:	697b      	ldr	r3, [r7, #20]
 8003f64:	2200      	movs	r2, #0
 8003f66:	615a      	str	r2, [r3, #20]
  ep->is_in = 1U;
 8003f68:	697b      	ldr	r3, [r7, #20]
 8003f6a:	2201      	movs	r2, #1
 8003f6c:	705a      	strb	r2, [r3, #1]
  ep->num = ep_addr & EP_ADDR_MSK;
 8003f6e:	7afb      	ldrb	r3, [r7, #11]
 8003f70:	f003 030f 	and.w	r3, r3, #15
 8003f74:	b2da      	uxtb	r2, r3
 8003f76:	697b      	ldr	r3, [r7, #20]
 8003f78:	701a      	strb	r2, [r3, #0]

  if (hpcd->Init.dma_enable == 1U)
 8003f7a:	68fb      	ldr	r3, [r7, #12]
 8003f7c:	799b      	ldrb	r3, [r3, #6]
 8003f7e:	2b01      	cmp	r3, #1
 8003f80:	d102      	bne.n	8003f88 <HAL_PCD_EP_Transmit+0x5a>
  {
    ep->dma_addr = (uint32_t)pBuf;
 8003f82:	687a      	ldr	r2, [r7, #4]
 8003f84:	697b      	ldr	r3, [r7, #20]
 8003f86:	61da      	str	r2, [r3, #28]
  }

  (void)USB_EPStartXfer(hpcd->Instance, ep, (uint8_t)hpcd->Init.dma_enable);
 8003f88:	68fb      	ldr	r3, [r7, #12]
 8003f8a:	6818      	ldr	r0, [r3, #0]
 8003f8c:	68fb      	ldr	r3, [r7, #12]
 8003f8e:	799b      	ldrb	r3, [r3, #6]
 8003f90:	461a      	mov	r2, r3
 8003f92:	6979      	ldr	r1, [r7, #20]
 8003f94:	f003 fae4 	bl	8007560 <USB_EPStartXfer>

  return HAL_OK;
 8003f98:	2300      	movs	r3, #0
}
 8003f9a:	4618      	mov	r0, r3
 8003f9c:	3718      	adds	r7, #24
 8003f9e:	46bd      	mov	sp, r7
 8003fa0:	bd80      	pop	{r7, pc}

08003fa2 <HAL_PCD_EP_SetStall>:
  * @param  hpcd PCD handle
  * @param  ep_addr endpoint address
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_PCD_EP_SetStall(PCD_HandleTypeDef *hpcd, uint8_t ep_addr)
{
 8003fa2:	b580      	push	{r7, lr}
 8003fa4:	b084      	sub	sp, #16
 8003fa6:	af00      	add	r7, sp, #0
 8003fa8:	6078      	str	r0, [r7, #4]
 8003faa:	460b      	mov	r3, r1
 8003fac:	70fb      	strb	r3, [r7, #3]
  PCD_EPTypeDef *ep;

  if (((uint32_t)ep_addr & EP_ADDR_MSK) > hpcd->Init.dev_endpoints)
 8003fae:	78fb      	ldrb	r3, [r7, #3]
 8003fb0:	f003 030f 	and.w	r3, r3, #15
 8003fb4:	687a      	ldr	r2, [r7, #4]
 8003fb6:	7912      	ldrb	r2, [r2, #4]
 8003fb8:	4293      	cmp	r3, r2
 8003fba:	d901      	bls.n	8003fc0 <HAL_PCD_EP_SetStall+0x1e>
  {
    return HAL_ERROR;
 8003fbc:	2301      	movs	r3, #1
 8003fbe:	e04f      	b.n	8004060 <HAL_PCD_EP_SetStall+0xbe>
  }

  if ((0x80U & ep_addr) == 0x80U)
 8003fc0:	f997 3003 	ldrsb.w	r3, [r7, #3]
 8003fc4:	2b00      	cmp	r3, #0
 8003fc6:	da0f      	bge.n	8003fe8 <HAL_PCD_EP_SetStall+0x46>
  {
    ep = &hpcd->IN_ep[ep_addr & EP_ADDR_MSK];
 8003fc8:	78fb      	ldrb	r3, [r7, #3]
 8003fca:	f003 020f 	and.w	r2, r3, #15
 8003fce:	4613      	mov	r3, r2
 8003fd0:	00db      	lsls	r3, r3, #3
 8003fd2:	4413      	add	r3, r2
 8003fd4:	009b      	lsls	r3, r3, #2
 8003fd6:	3310      	adds	r3, #16
 8003fd8:	687a      	ldr	r2, [r7, #4]
 8003fda:	4413      	add	r3, r2
 8003fdc:	3304      	adds	r3, #4
 8003fde:	60fb      	str	r3, [r7, #12]
    ep->is_in = 1U;
 8003fe0:	68fb      	ldr	r3, [r7, #12]
 8003fe2:	2201      	movs	r2, #1
 8003fe4:	705a      	strb	r2, [r3, #1]
 8003fe6:	e00d      	b.n	8004004 <HAL_PCD_EP_SetStall+0x62>
  }
  else
  {
    ep = &hpcd->OUT_ep[ep_addr];
 8003fe8:	78fa      	ldrb	r2, [r7, #3]
 8003fea:	4613      	mov	r3, r2
 8003fec:	00db      	lsls	r3, r3, #3
 8003fee:	4413      	add	r3, r2
 8003ff0:	009b      	lsls	r3, r3, #2
 8003ff2:	f503 7314 	add.w	r3, r3, #592	; 0x250
 8003ff6:	687a      	ldr	r2, [r7, #4]
 8003ff8:	4413      	add	r3, r2
 8003ffa:	3304      	adds	r3, #4
 8003ffc:	60fb      	str	r3, [r7, #12]
    ep->is_in = 0U;
 8003ffe:	68fb      	ldr	r3, [r7, #12]
 8004000:	2200      	movs	r2, #0
 8004002:	705a      	strb	r2, [r3, #1]
  }

  ep->is_stall = 1U;
 8004004:	68fb      	ldr	r3, [r7, #12]
 8004006:	2201      	movs	r2, #1
 8004008:	709a      	strb	r2, [r3, #2]
  ep->num = ep_addr & EP_ADDR_MSK;
 800400a:	78fb      	ldrb	r3, [r7, #3]
 800400c:	f003 030f 	and.w	r3, r3, #15
 8004010:	b2da      	uxtb	r2, r3
 8004012:	68fb      	ldr	r3, [r7, #12]
 8004014:	701a      	strb	r2, [r3, #0]

  __HAL_LOCK(hpcd);
 8004016:	687b      	ldr	r3, [r7, #4]
 8004018:	f893 3494 	ldrb.w	r3, [r3, #1172]	; 0x494
 800401c:	2b01      	cmp	r3, #1
 800401e:	d101      	bne.n	8004024 <HAL_PCD_EP_SetStall+0x82>
 8004020:	2302      	movs	r3, #2
 8004022:	e01d      	b.n	8004060 <HAL_PCD_EP_SetStall+0xbe>
 8004024:	687b      	ldr	r3, [r7, #4]
 8004026:	2201      	movs	r2, #1
 8004028:	f883 2494 	strb.w	r2, [r3, #1172]	; 0x494

  (void)USB_EPSetStall(hpcd->Instance, ep);
 800402c:	687b      	ldr	r3, [r7, #4]
 800402e:	681b      	ldr	r3, [r3, #0]
 8004030:	68f9      	ldr	r1, [r7, #12]
 8004032:	4618      	mov	r0, r3
 8004034:	f003 fe6c 	bl	8007d10 <USB_EPSetStall>

  if ((ep_addr & EP_ADDR_MSK) == 0U)
 8004038:	78fb      	ldrb	r3, [r7, #3]
 800403a:	f003 030f 	and.w	r3, r3, #15
 800403e:	2b00      	cmp	r3, #0
 8004040:	d109      	bne.n	8004056 <HAL_PCD_EP_SetStall+0xb4>
  {
    (void)USB_EP0_OutStart(hpcd->Instance, (uint8_t)hpcd->Init.dma_enable, (uint8_t *)hpcd->Setup);
 8004042:	687b      	ldr	r3, [r7, #4]
 8004044:	6818      	ldr	r0, [r3, #0]
 8004046:	687b      	ldr	r3, [r7, #4]
 8004048:	7999      	ldrb	r1, [r3, #6]
 800404a:	687b      	ldr	r3, [r7, #4]
 800404c:	f203 439c 	addw	r3, r3, #1180	; 0x49c
 8004050:	461a      	mov	r2, r3
 8004052:	f004 f85d 	bl	8008110 <USB_EP0_OutStart>
  }

  __HAL_UNLOCK(hpcd);
 8004056:	687b      	ldr	r3, [r7, #4]
 8004058:	2200      	movs	r2, #0
 800405a:	f883 2494 	strb.w	r2, [r3, #1172]	; 0x494

  return HAL_OK;
 800405e:	2300      	movs	r3, #0
}
 8004060:	4618      	mov	r0, r3
 8004062:	3710      	adds	r7, #16
 8004064:	46bd      	mov	sp, r7
 8004066:	bd80      	pop	{r7, pc}

08004068 <HAL_PCD_EP_ClrStall>:
  * @param  hpcd PCD handle
  * @param  ep_addr endpoint address
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_PCD_EP_ClrStall(PCD_HandleTypeDef *hpcd, uint8_t ep_addr)
{
 8004068:	b580      	push	{r7, lr}
 800406a:	b084      	sub	sp, #16
 800406c:	af00      	add	r7, sp, #0
 800406e:	6078      	str	r0, [r7, #4]
 8004070:	460b      	mov	r3, r1
 8004072:	70fb      	strb	r3, [r7, #3]
  PCD_EPTypeDef *ep;

  if (((uint32_t)ep_addr & 0x0FU) > hpcd->Init.dev_endpoints)
 8004074:	78fb      	ldrb	r3, [r7, #3]
 8004076:	f003 030f 	and.w	r3, r3, #15
 800407a:	687a      	ldr	r2, [r7, #4]
 800407c:	7912      	ldrb	r2, [r2, #4]
 800407e:	4293      	cmp	r3, r2
 8004080:	d901      	bls.n	8004086 <HAL_PCD_EP_ClrStall+0x1e>
  {
    return HAL_ERROR;
 8004082:	2301      	movs	r3, #1
 8004084:	e042      	b.n	800410c <HAL_PCD_EP_ClrStall+0xa4>
  }

  if ((0x80U & ep_addr) == 0x80U)
 8004086:	f997 3003 	ldrsb.w	r3, [r7, #3]
 800408a:	2b00      	cmp	r3, #0
 800408c:	da0f      	bge.n	80040ae <HAL_PCD_EP_ClrStall+0x46>
  {
    ep = &hpcd->IN_ep[ep_addr & EP_ADDR_MSK];
 800408e:	78fb      	ldrb	r3, [r7, #3]
 8004090:	f003 020f 	and.w	r2, r3, #15
 8004094:	4613      	mov	r3, r2
 8004096:	00db      	lsls	r3, r3, #3
 8004098:	4413      	add	r3, r2
 800409a:	009b      	lsls	r3, r3, #2
 800409c:	3310      	adds	r3, #16
 800409e:	687a      	ldr	r2, [r7, #4]
 80040a0:	4413      	add	r3, r2
 80040a2:	3304      	adds	r3, #4
 80040a4:	60fb      	str	r3, [r7, #12]
    ep->is_in = 1U;
 80040a6:	68fb      	ldr	r3, [r7, #12]
 80040a8:	2201      	movs	r2, #1
 80040aa:	705a      	strb	r2, [r3, #1]
 80040ac:	e00f      	b.n	80040ce <HAL_PCD_EP_ClrStall+0x66>
  }
  else
  {
    ep = &hpcd->OUT_ep[ep_addr & EP_ADDR_MSK];
 80040ae:	78fb      	ldrb	r3, [r7, #3]
 80040b0:	f003 020f 	and.w	r2, r3, #15
 80040b4:	4613      	mov	r3, r2
 80040b6:	00db      	lsls	r3, r3, #3
 80040b8:	4413      	add	r3, r2
 80040ba:	009b      	lsls	r3, r3, #2
 80040bc:	f503 7314 	add.w	r3, r3, #592	; 0x250
 80040c0:	687a      	ldr	r2, [r7, #4]
 80040c2:	4413      	add	r3, r2
 80040c4:	3304      	adds	r3, #4
 80040c6:	60fb      	str	r3, [r7, #12]
    ep->is_in = 0U;
 80040c8:	68fb      	ldr	r3, [r7, #12]
 80040ca:	2200      	movs	r2, #0
 80040cc:	705a      	strb	r2, [r3, #1]
  }

  ep->is_stall = 0U;
 80040ce:	68fb      	ldr	r3, [r7, #12]
 80040d0:	2200      	movs	r2, #0
 80040d2:	709a      	strb	r2, [r3, #2]
  ep->num = ep_addr & EP_ADDR_MSK;
 80040d4:	78fb      	ldrb	r3, [r7, #3]
 80040d6:	f003 030f 	and.w	r3, r3, #15
 80040da:	b2da      	uxtb	r2, r3
 80040dc:	68fb      	ldr	r3, [r7, #12]
 80040de:	701a      	strb	r2, [r3, #0]

  __HAL_LOCK(hpcd);
 80040e0:	687b      	ldr	r3, [r7, #4]
 80040e2:	f893 3494 	ldrb.w	r3, [r3, #1172]	; 0x494
 80040e6:	2b01      	cmp	r3, #1
 80040e8:	d101      	bne.n	80040ee <HAL_PCD_EP_ClrStall+0x86>
 80040ea:	2302      	movs	r3, #2
 80040ec:	e00e      	b.n	800410c <HAL_PCD_EP_ClrStall+0xa4>
 80040ee:	687b      	ldr	r3, [r7, #4]
 80040f0:	2201      	movs	r2, #1
 80040f2:	f883 2494 	strb.w	r2, [r3, #1172]	; 0x494
  (void)USB_EPClearStall(hpcd->Instance, ep);
 80040f6:	687b      	ldr	r3, [r7, #4]
 80040f8:	681b      	ldr	r3, [r3, #0]
 80040fa:	68f9      	ldr	r1, [r7, #12]
 80040fc:	4618      	mov	r0, r3
 80040fe:	f003 fe75 	bl	8007dec <USB_EPClearStall>
  __HAL_UNLOCK(hpcd);
 8004102:	687b      	ldr	r3, [r7, #4]
 8004104:	2200      	movs	r2, #0
 8004106:	f883 2494 	strb.w	r2, [r3, #1172]	; 0x494

  return HAL_OK;
 800410a:	2300      	movs	r3, #0
}
 800410c:	4618      	mov	r0, r3
 800410e:	3710      	adds	r7, #16
 8004110:	46bd      	mov	sp, r7
 8004112:	bd80      	pop	{r7, pc}

08004114 <HAL_PCD_EP_Abort>:
   * @param  hpcd PCD handle
   * @param  ep_addr endpoint address
   * @retval HAL status
   */
HAL_StatusTypeDef HAL_PCD_EP_Abort(PCD_HandleTypeDef *hpcd, uint8_t ep_addr)
{
 8004114:	b580      	push	{r7, lr}
 8004116:	b084      	sub	sp, #16
 8004118:	af00      	add	r7, sp, #0
 800411a:	6078      	str	r0, [r7, #4]
 800411c:	460b      	mov	r3, r1
 800411e:	70fb      	strb	r3, [r7, #3]
  HAL_StatusTypeDef ret;
  PCD_EPTypeDef *ep;

  if ((0x80U & ep_addr) == 0x80U)
 8004120:	f997 3003 	ldrsb.w	r3, [r7, #3]
 8004124:	2b00      	cmp	r3, #0
 8004126:	da0c      	bge.n	8004142 <HAL_PCD_EP_Abort+0x2e>
  {
    ep = &hpcd->IN_ep[ep_addr & EP_ADDR_MSK];
 8004128:	78fb      	ldrb	r3, [r7, #3]
 800412a:	f003 020f 	and.w	r2, r3, #15
 800412e:	4613      	mov	r3, r2
 8004130:	00db      	lsls	r3, r3, #3
 8004132:	4413      	add	r3, r2
 8004134:	009b      	lsls	r3, r3, #2
 8004136:	3310      	adds	r3, #16
 8004138:	687a      	ldr	r2, [r7, #4]
 800413a:	4413      	add	r3, r2
 800413c:	3304      	adds	r3, #4
 800413e:	60fb      	str	r3, [r7, #12]
 8004140:	e00c      	b.n	800415c <HAL_PCD_EP_Abort+0x48>
  }
  else
  {
    ep = &hpcd->OUT_ep[ep_addr & EP_ADDR_MSK];
 8004142:	78fb      	ldrb	r3, [r7, #3]
 8004144:	f003 020f 	and.w	r2, r3, #15
 8004148:	4613      	mov	r3, r2
 800414a:	00db      	lsls	r3, r3, #3
 800414c:	4413      	add	r3, r2
 800414e:	009b      	lsls	r3, r3, #2
 8004150:	f503 7314 	add.w	r3, r3, #592	; 0x250
 8004154:	687a      	ldr	r2, [r7, #4]
 8004156:	4413      	add	r3, r2
 8004158:	3304      	adds	r3, #4
 800415a:	60fb      	str	r3, [r7, #12]
  }

  /* Stop Xfer */
  ret = USB_EPStopXfer(hpcd->Instance, ep);
 800415c:	687b      	ldr	r3, [r7, #4]
 800415e:	681b      	ldr	r3, [r3, #0]
 8004160:	68f9      	ldr	r1, [r7, #12]
 8004162:	4618      	mov	r0, r3
 8004164:	f003 fc94 	bl	8007a90 <USB_EPStopXfer>
 8004168:	4603      	mov	r3, r0
 800416a:	72fb      	strb	r3, [r7, #11]

  return ret;
 800416c:	7afb      	ldrb	r3, [r7, #11]
}
 800416e:	4618      	mov	r0, r3
 8004170:	3710      	adds	r7, #16
 8004172:	46bd      	mov	sp, r7
 8004174:	bd80      	pop	{r7, pc}

08004176 <PCD_WriteEmptyTxFifo>:
  * @param  hpcd PCD handle
  * @param  epnum endpoint number
  * @retval HAL status
  */
static HAL_StatusTypeDef PCD_WriteEmptyTxFifo(PCD_HandleTypeDef *hpcd, uint32_t epnum)
{
 8004176:	b580      	push	{r7, lr}
 8004178:	b08a      	sub	sp, #40	; 0x28
 800417a:	af02      	add	r7, sp, #8
 800417c:	6078      	str	r0, [r7, #4]
 800417e:	6039      	str	r1, [r7, #0]
  USB_OTG_GlobalTypeDef *USBx = hpcd->Instance;
 8004180:	687b      	ldr	r3, [r7, #4]
 8004182:	681b      	ldr	r3, [r3, #0]
 8004184:	617b      	str	r3, [r7, #20]
  uint32_t USBx_BASE = (uint32_t)USBx;
 8004186:	697b      	ldr	r3, [r7, #20]
 8004188:	613b      	str	r3, [r7, #16]
  USB_OTG_EPTypeDef *ep;
  uint32_t len;
  uint32_t len32b;
  uint32_t fifoemptymsk;

  ep = &hpcd->IN_ep[epnum];
 800418a:	683a      	ldr	r2, [r7, #0]
 800418c:	4613      	mov	r3, r2
 800418e:	00db      	lsls	r3, r3, #3
 8004190:	4413      	add	r3, r2
 8004192:	009b      	lsls	r3, r3, #2
 8004194:	3310      	adds	r3, #16
 8004196:	687a      	ldr	r2, [r7, #4]
 8004198:	4413      	add	r3, r2
 800419a:	3304      	adds	r3, #4
 800419c:	60fb      	str	r3, [r7, #12]

  if (ep->xfer_count > ep->xfer_len)
 800419e:	68fb      	ldr	r3, [r7, #12]
 80041a0:	695a      	ldr	r2, [r3, #20]
 80041a2:	68fb      	ldr	r3, [r7, #12]
 80041a4:	691b      	ldr	r3, [r3, #16]
 80041a6:	429a      	cmp	r2, r3
 80041a8:	d901      	bls.n	80041ae <PCD_WriteEmptyTxFifo+0x38>
  {
    return HAL_ERROR;
 80041aa:	2301      	movs	r3, #1
 80041ac:	e06b      	b.n	8004286 <PCD_WriteEmptyTxFifo+0x110>
  }

  len = ep->xfer_len - ep->xfer_count;
 80041ae:	68fb      	ldr	r3, [r7, #12]
 80041b0:	691a      	ldr	r2, [r3, #16]
 80041b2:	68fb      	ldr	r3, [r7, #12]
 80041b4:	695b      	ldr	r3, [r3, #20]
 80041b6:	1ad3      	subs	r3, r2, r3
 80041b8:	61fb      	str	r3, [r7, #28]

  if (len > ep->maxpacket)
 80041ba:	68fb      	ldr	r3, [r7, #12]
 80041bc:	689b      	ldr	r3, [r3, #8]
 80041be:	69fa      	ldr	r2, [r7, #28]
 80041c0:	429a      	cmp	r2, r3
 80041c2:	d902      	bls.n	80041ca <PCD_WriteEmptyTxFifo+0x54>
  {
    len = ep->maxpacket;
 80041c4:	68fb      	ldr	r3, [r7, #12]
 80041c6:	689b      	ldr	r3, [r3, #8]
 80041c8:	61fb      	str	r3, [r7, #28]
  }

  len32b = (len + 3U) / 4U;
 80041ca:	69fb      	ldr	r3, [r7, #28]
 80041cc:	3303      	adds	r3, #3
 80041ce:	089b      	lsrs	r3, r3, #2
 80041d0:	61bb      	str	r3, [r7, #24]

  while (((USBx_INEP(epnum)->DTXFSTS & USB_OTG_DTXFSTS_INEPTFSAV) >= len32b) &&
 80041d2:	e02a      	b.n	800422a <PCD_WriteEmptyTxFifo+0xb4>
         (ep->xfer_count < ep->xfer_len) && (ep->xfer_len != 0U))
  {
    /* Write the FIFO */
    len = ep->xfer_len - ep->xfer_count;
 80041d4:	68fb      	ldr	r3, [r7, #12]
 80041d6:	691a      	ldr	r2, [r3, #16]
 80041d8:	68fb      	ldr	r3, [r7, #12]
 80041da:	695b      	ldr	r3, [r3, #20]
 80041dc:	1ad3      	subs	r3, r2, r3
 80041de:	61fb      	str	r3, [r7, #28]

    if (len > ep->maxpacket)
 80041e0:	68fb      	ldr	r3, [r7, #12]
 80041e2:	689b      	ldr	r3, [r3, #8]
 80041e4:	69fa      	ldr	r2, [r7, #28]
 80041e6:	429a      	cmp	r2, r3
 80041e8:	d902      	bls.n	80041f0 <PCD_WriteEmptyTxFifo+0x7a>
    {
      len = ep->maxpacket;
 80041ea:	68fb      	ldr	r3, [r7, #12]
 80041ec:	689b      	ldr	r3, [r3, #8]
 80041ee:	61fb      	str	r3, [r7, #28]
    }
    len32b = (len + 3U) / 4U;
 80041f0:	69fb      	ldr	r3, [r7, #28]
 80041f2:	3303      	adds	r3, #3
 80041f4:	089b      	lsrs	r3, r3, #2
 80041f6:	61bb      	str	r3, [r7, #24]

    (void)USB_WritePacket(USBx, ep->xfer_buff, (uint8_t)epnum, (uint16_t)len,
 80041f8:	68fb      	ldr	r3, [r7, #12]
 80041fa:	68d9      	ldr	r1, [r3, #12]
 80041fc:	683b      	ldr	r3, [r7, #0]
 80041fe:	b2da      	uxtb	r2, r3
 8004200:	69fb      	ldr	r3, [r7, #28]
 8004202:	b298      	uxth	r0, r3
                          (uint8_t)hpcd->Init.dma_enable);
 8004204:	687b      	ldr	r3, [r7, #4]
 8004206:	799b      	ldrb	r3, [r3, #6]
    (void)USB_WritePacket(USBx, ep->xfer_buff, (uint8_t)epnum, (uint16_t)len,
 8004208:	9300      	str	r3, [sp, #0]
 800420a:	4603      	mov	r3, r0
 800420c:	6978      	ldr	r0, [r7, #20]
 800420e:	f003 fce9 	bl	8007be4 <USB_WritePacket>

    ep->xfer_buff  += len;
 8004212:	68fb      	ldr	r3, [r7, #12]
 8004214:	68da      	ldr	r2, [r3, #12]
 8004216:	69fb      	ldr	r3, [r7, #28]
 8004218:	441a      	add	r2, r3
 800421a:	68fb      	ldr	r3, [r7, #12]
 800421c:	60da      	str	r2, [r3, #12]
    ep->xfer_count += len;
 800421e:	68fb      	ldr	r3, [r7, #12]
 8004220:	695a      	ldr	r2, [r3, #20]
 8004222:	69fb      	ldr	r3, [r7, #28]
 8004224:	441a      	add	r2, r3
 8004226:	68fb      	ldr	r3, [r7, #12]
 8004228:	615a      	str	r2, [r3, #20]
  while (((USBx_INEP(epnum)->DTXFSTS & USB_OTG_DTXFSTS_INEPTFSAV) >= len32b) &&
 800422a:	683b      	ldr	r3, [r7, #0]
 800422c:	015a      	lsls	r2, r3, #5
 800422e:	693b      	ldr	r3, [r7, #16]
 8004230:	4413      	add	r3, r2
 8004232:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 8004236:	699b      	ldr	r3, [r3, #24]
 8004238:	b29b      	uxth	r3, r3
         (ep->xfer_count < ep->xfer_len) && (ep->xfer_len != 0U))
 800423a:	69ba      	ldr	r2, [r7, #24]
 800423c:	429a      	cmp	r2, r3
 800423e:	d809      	bhi.n	8004254 <PCD_WriteEmptyTxFifo+0xde>
 8004240:	68fb      	ldr	r3, [r7, #12]
 8004242:	695a      	ldr	r2, [r3, #20]
 8004244:	68fb      	ldr	r3, [r7, #12]
 8004246:	691b      	ldr	r3, [r3, #16]
  while (((USBx_INEP(epnum)->DTXFSTS & USB_OTG_DTXFSTS_INEPTFSAV) >= len32b) &&
 8004248:	429a      	cmp	r2, r3
 800424a:	d203      	bcs.n	8004254 <PCD_WriteEmptyTxFifo+0xde>
         (ep->xfer_count < ep->xfer_len) && (ep->xfer_len != 0U))
 800424c:	68fb      	ldr	r3, [r7, #12]
 800424e:	691b      	ldr	r3, [r3, #16]
 8004250:	2b00      	cmp	r3, #0
 8004252:	d1bf      	bne.n	80041d4 <PCD_WriteEmptyTxFifo+0x5e>
  }

  if (ep->xfer_len <= ep->xfer_count)
 8004254:	68fb      	ldr	r3, [r7, #12]
 8004256:	691a      	ldr	r2, [r3, #16]
 8004258:	68fb      	ldr	r3, [r7, #12]
 800425a:	695b      	ldr	r3, [r3, #20]
 800425c:	429a      	cmp	r2, r3
 800425e:	d811      	bhi.n	8004284 <PCD_WriteEmptyTxFifo+0x10e>
  {
    fifoemptymsk = (uint32_t)(0x1UL << (epnum & EP_ADDR_MSK));
 8004260:	683b      	ldr	r3, [r7, #0]
 8004262:	f003 030f 	and.w	r3, r3, #15
 8004266:	2201      	movs	r2, #1
 8004268:	fa02 f303 	lsl.w	r3, r2, r3
 800426c:	60bb      	str	r3, [r7, #8]
    USBx_DEVICE->DIEPEMPMSK &= ~fifoemptymsk;
 800426e:	693b      	ldr	r3, [r7, #16]
 8004270:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 8004274:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8004276:	68bb      	ldr	r3, [r7, #8]
 8004278:	43db      	mvns	r3, r3
 800427a:	6939      	ldr	r1, [r7, #16]
 800427c:	f501 6100 	add.w	r1, r1, #2048	; 0x800
 8004280:	4013      	ands	r3, r2
 8004282:	634b      	str	r3, [r1, #52]	; 0x34
  }

  return HAL_OK;
 8004284:	2300      	movs	r3, #0
}
 8004286:	4618      	mov	r0, r3
 8004288:	3720      	adds	r7, #32
 800428a:	46bd      	mov	sp, r7
 800428c:	bd80      	pop	{r7, pc}
	...

08004290 <PCD_EP_OutXfrComplete_int>:
  * @param  hpcd PCD handle
  * @param  epnum endpoint number
  * @retval HAL status
  */
static HAL_StatusTypeDef PCD_EP_OutXfrComplete_int(PCD_HandleTypeDef *hpcd, uint32_t epnum)
{
 8004290:	b580      	push	{r7, lr}
 8004292:	b088      	sub	sp, #32
 8004294:	af00      	add	r7, sp, #0
 8004296:	6078      	str	r0, [r7, #4]
 8004298:	6039      	str	r1, [r7, #0]
  USB_OTG_EPTypeDef *ep;
  const USB_OTG_GlobalTypeDef *USBx = hpcd->Instance;
 800429a:	687b      	ldr	r3, [r7, #4]
 800429c:	681b      	ldr	r3, [r3, #0]
 800429e:	61fb      	str	r3, [r7, #28]
  uint32_t USBx_BASE = (uint32_t)USBx;
 80042a0:	69fb      	ldr	r3, [r7, #28]
 80042a2:	61bb      	str	r3, [r7, #24]
  uint32_t gSNPSiD = *(__IO const uint32_t *)(&USBx->CID + 0x1U);
 80042a4:	69fb      	ldr	r3, [r7, #28]
 80042a6:	333c      	adds	r3, #60	; 0x3c
 80042a8:	3304      	adds	r3, #4
 80042aa:	681b      	ldr	r3, [r3, #0]
 80042ac:	617b      	str	r3, [r7, #20]
  uint32_t DoepintReg = USBx_OUTEP(epnum)->DOEPINT;
 80042ae:	683b      	ldr	r3, [r7, #0]
 80042b0:	015a      	lsls	r2, r3, #5
 80042b2:	69bb      	ldr	r3, [r7, #24]
 80042b4:	4413      	add	r3, r2
 80042b6:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 80042ba:	689b      	ldr	r3, [r3, #8]
 80042bc:	613b      	str	r3, [r7, #16]

  if (hpcd->Init.dma_enable == 1U)
 80042be:	687b      	ldr	r3, [r7, #4]
 80042c0:	799b      	ldrb	r3, [r3, #6]
 80042c2:	2b01      	cmp	r3, #1
 80042c4:	d17b      	bne.n	80043be <PCD_EP_OutXfrComplete_int+0x12e>
  {
    if ((DoepintReg & USB_OTG_DOEPINT_STUP) == USB_OTG_DOEPINT_STUP) /* Class C */
 80042c6:	693b      	ldr	r3, [r7, #16]
 80042c8:	f003 0308 	and.w	r3, r3, #8
 80042cc:	2b00      	cmp	r3, #0
 80042ce:	d015      	beq.n	80042fc <PCD_EP_OutXfrComplete_int+0x6c>
    {
      /* StupPktRcvd = 1 this is a setup packet */
      if ((gSNPSiD > USB_OTG_CORE_ID_300A) &&
 80042d0:	697b      	ldr	r3, [r7, #20]
 80042d2:	4a61      	ldr	r2, [pc, #388]	; (8004458 <PCD_EP_OutXfrComplete_int+0x1c8>)
 80042d4:	4293      	cmp	r3, r2
 80042d6:	f240 80b9 	bls.w	800444c <PCD_EP_OutXfrComplete_int+0x1bc>
          ((DoepintReg & USB_OTG_DOEPINT_STPKTRX) == USB_OTG_DOEPINT_STPKTRX))
 80042da:	693b      	ldr	r3, [r7, #16]
 80042dc:	f403 4300 	and.w	r3, r3, #32768	; 0x8000
      if ((gSNPSiD > USB_OTG_CORE_ID_300A) &&
 80042e0:	2b00      	cmp	r3, #0
 80042e2:	f000 80b3 	beq.w	800444c <PCD_EP_OutXfrComplete_int+0x1bc>
      {
        CLEAR_OUT_EP_INTR(epnum, USB_OTG_DOEPINT_STPKTRX);
 80042e6:	683b      	ldr	r3, [r7, #0]
 80042e8:	015a      	lsls	r2, r3, #5
 80042ea:	69bb      	ldr	r3, [r7, #24]
 80042ec:	4413      	add	r3, r2
 80042ee:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 80042f2:	461a      	mov	r2, r3
 80042f4:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 80042f8:	6093      	str	r3, [r2, #8]
 80042fa:	e0a7      	b.n	800444c <PCD_EP_OutXfrComplete_int+0x1bc>
      }
    }
    else if ((DoepintReg & USB_OTG_DOEPINT_OTEPSPR) == USB_OTG_DOEPINT_OTEPSPR) /* Class E */
 80042fc:	693b      	ldr	r3, [r7, #16]
 80042fe:	f003 0320 	and.w	r3, r3, #32
 8004302:	2b00      	cmp	r3, #0
 8004304:	d009      	beq.n	800431a <PCD_EP_OutXfrComplete_int+0x8a>
    {
      CLEAR_OUT_EP_INTR(epnum, USB_OTG_DOEPINT_OTEPSPR);
 8004306:	683b      	ldr	r3, [r7, #0]
 8004308:	015a      	lsls	r2, r3, #5
 800430a:	69bb      	ldr	r3, [r7, #24]
 800430c:	4413      	add	r3, r2
 800430e:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 8004312:	461a      	mov	r2, r3
 8004314:	2320      	movs	r3, #32
 8004316:	6093      	str	r3, [r2, #8]
 8004318:	e098      	b.n	800444c <PCD_EP_OutXfrComplete_int+0x1bc>
    }
    else if ((DoepintReg & (USB_OTG_DOEPINT_STUP | USB_OTG_DOEPINT_OTEPSPR)) == 0U)
 800431a:	693b      	ldr	r3, [r7, #16]
 800431c:	f003 0328 	and.w	r3, r3, #40	; 0x28
 8004320:	2b00      	cmp	r3, #0
 8004322:	f040 8093 	bne.w	800444c <PCD_EP_OutXfrComplete_int+0x1bc>
    {
      /* StupPktRcvd = 1 this is a setup packet */
      if ((gSNPSiD > USB_OTG_CORE_ID_300A) &&
 8004326:	697b      	ldr	r3, [r7, #20]
 8004328:	4a4b      	ldr	r2, [pc, #300]	; (8004458 <PCD_EP_OutXfrComplete_int+0x1c8>)
 800432a:	4293      	cmp	r3, r2
 800432c:	d90f      	bls.n	800434e <PCD_EP_OutXfrComplete_int+0xbe>
          ((DoepintReg & USB_OTG_DOEPINT_STPKTRX) == USB_OTG_DOEPINT_STPKTRX))
 800432e:	693b      	ldr	r3, [r7, #16]
 8004330:	f403 4300 	and.w	r3, r3, #32768	; 0x8000
      if ((gSNPSiD > USB_OTG_CORE_ID_300A) &&
 8004334:	2b00      	cmp	r3, #0
 8004336:	d00a      	beq.n	800434e <PCD_EP_OutXfrComplete_int+0xbe>
      {
        CLEAR_OUT_EP_INTR(epnum, USB_OTG_DOEPINT_STPKTRX);
 8004338:	683b      	ldr	r3, [r7, #0]
 800433a:	015a      	lsls	r2, r3, #5
 800433c:	69bb      	ldr	r3, [r7, #24]
 800433e:	4413      	add	r3, r2
 8004340:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 8004344:	461a      	mov	r2, r3
 8004346:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 800434a:	6093      	str	r3, [r2, #8]
 800434c:	e07e      	b.n	800444c <PCD_EP_OutXfrComplete_int+0x1bc>
      }
      else
      {
        ep = &hpcd->OUT_ep[epnum];
 800434e:	683a      	ldr	r2, [r7, #0]
 8004350:	4613      	mov	r3, r2
 8004352:	00db      	lsls	r3, r3, #3
 8004354:	4413      	add	r3, r2
 8004356:	009b      	lsls	r3, r3, #2
 8004358:	f503 7314 	add.w	r3, r3, #592	; 0x250
 800435c:	687a      	ldr	r2, [r7, #4]
 800435e:	4413      	add	r3, r2
 8004360:	3304      	adds	r3, #4
 8004362:	60fb      	str	r3, [r7, #12]

        /* out data packet received over EP */
        ep->xfer_count = ep->xfer_size - (USBx_OUTEP(epnum)->DOEPTSIZ & USB_OTG_DOEPTSIZ_XFRSIZ);
 8004364:	68fb      	ldr	r3, [r7, #12]
 8004366:	6a1a      	ldr	r2, [r3, #32]
 8004368:	683b      	ldr	r3, [r7, #0]
 800436a:	0159      	lsls	r1, r3, #5
 800436c:	69bb      	ldr	r3, [r7, #24]
 800436e:	440b      	add	r3, r1
 8004370:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 8004374:	691b      	ldr	r3, [r3, #16]
 8004376:	f3c3 0312 	ubfx	r3, r3, #0, #19
 800437a:	1ad2      	subs	r2, r2, r3
 800437c:	68fb      	ldr	r3, [r7, #12]
 800437e:	615a      	str	r2, [r3, #20]

        if (epnum == 0U)
 8004380:	683b      	ldr	r3, [r7, #0]
 8004382:	2b00      	cmp	r3, #0
 8004384:	d114      	bne.n	80043b0 <PCD_EP_OutXfrComplete_int+0x120>
        {
          if (ep->xfer_len == 0U)
 8004386:	68fb      	ldr	r3, [r7, #12]
 8004388:	691b      	ldr	r3, [r3, #16]
 800438a:	2b00      	cmp	r3, #0
 800438c:	d109      	bne.n	80043a2 <PCD_EP_OutXfrComplete_int+0x112>
          {
            /* this is ZLP, so prepare EP0 for next setup */
            (void)USB_EP0_OutStart(hpcd->Instance, 1U, (uint8_t *)hpcd->Setup);
 800438e:	687b      	ldr	r3, [r7, #4]
 8004390:	6818      	ldr	r0, [r3, #0]
 8004392:	687b      	ldr	r3, [r7, #4]
 8004394:	f203 439c 	addw	r3, r3, #1180	; 0x49c
 8004398:	461a      	mov	r2, r3
 800439a:	2101      	movs	r1, #1
 800439c:	f003 feb8 	bl	8008110 <USB_EP0_OutStart>
 80043a0:	e006      	b.n	80043b0 <PCD_EP_OutXfrComplete_int+0x120>
          }
          else
          {
            ep->xfer_buff += ep->xfer_count;
 80043a2:	68fb      	ldr	r3, [r7, #12]
 80043a4:	68da      	ldr	r2, [r3, #12]
 80043a6:	68fb      	ldr	r3, [r7, #12]
 80043a8:	695b      	ldr	r3, [r3, #20]
 80043aa:	441a      	add	r2, r3
 80043ac:	68fb      	ldr	r3, [r7, #12]
 80043ae:	60da      	str	r2, [r3, #12]
        }

#if (USE_HAL_PCD_REGISTER_CALLBACKS == 1U)
        hpcd->DataOutStageCallback(hpcd, (uint8_t)epnum);
#else
        HAL_PCD_DataOutStageCallback(hpcd, (uint8_t)epnum);
 80043b0:	683b      	ldr	r3, [r7, #0]
 80043b2:	b2db      	uxtb	r3, r3
 80043b4:	4619      	mov	r1, r3
 80043b6:	6878      	ldr	r0, [r7, #4]
 80043b8:	f00d fae8 	bl	801198c <HAL_PCD_DataOutStageCallback>
 80043bc:	e046      	b.n	800444c <PCD_EP_OutXfrComplete_int+0x1bc>
      /* ... */
    }
  }
  else
  {
    if (gSNPSiD == USB_OTG_CORE_ID_310A)
 80043be:	697b      	ldr	r3, [r7, #20]
 80043c0:	4a26      	ldr	r2, [pc, #152]	; (800445c <PCD_EP_OutXfrComplete_int+0x1cc>)
 80043c2:	4293      	cmp	r3, r2
 80043c4:	d124      	bne.n	8004410 <PCD_EP_OutXfrComplete_int+0x180>
    {
      /* StupPktRcvd = 1 this is a setup packet */
      if ((DoepintReg & USB_OTG_DOEPINT_STPKTRX) == USB_OTG_DOEPINT_STPKTRX)
 80043c6:	693b      	ldr	r3, [r7, #16]
 80043c8:	f403 4300 	and.w	r3, r3, #32768	; 0x8000
 80043cc:	2b00      	cmp	r3, #0
 80043ce:	d00a      	beq.n	80043e6 <PCD_EP_OutXfrComplete_int+0x156>
      {
        CLEAR_OUT_EP_INTR(epnum, USB_OTG_DOEPINT_STPKTRX);
 80043d0:	683b      	ldr	r3, [r7, #0]
 80043d2:	015a      	lsls	r2, r3, #5
 80043d4:	69bb      	ldr	r3, [r7, #24]
 80043d6:	4413      	add	r3, r2
 80043d8:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 80043dc:	461a      	mov	r2, r3
 80043de:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 80043e2:	6093      	str	r3, [r2, #8]
 80043e4:	e032      	b.n	800444c <PCD_EP_OutXfrComplete_int+0x1bc>
      }
      else
      {
        if ((DoepintReg & USB_OTG_DOEPINT_OTEPSPR) == USB_OTG_DOEPINT_OTEPSPR)
 80043e6:	693b      	ldr	r3, [r7, #16]
 80043e8:	f003 0320 	and.w	r3, r3, #32
 80043ec:	2b00      	cmp	r3, #0
 80043ee:	d008      	beq.n	8004402 <PCD_EP_OutXfrComplete_int+0x172>
        {
          CLEAR_OUT_EP_INTR(epnum, USB_OTG_DOEPINT_OTEPSPR);
 80043f0:	683b      	ldr	r3, [r7, #0]
 80043f2:	015a      	lsls	r2, r3, #5
 80043f4:	69bb      	ldr	r3, [r7, #24]
 80043f6:	4413      	add	r3, r2
 80043f8:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 80043fc:	461a      	mov	r2, r3
 80043fe:	2320      	movs	r3, #32
 8004400:	6093      	str	r3, [r2, #8]
        }

#if (USE_HAL_PCD_REGISTER_CALLBACKS == 1U)
        hpcd->DataOutStageCallback(hpcd, (uint8_t)epnum);
#else
        HAL_PCD_DataOutStageCallback(hpcd, (uint8_t)epnum);
 8004402:	683b      	ldr	r3, [r7, #0]
 8004404:	b2db      	uxtb	r3, r3
 8004406:	4619      	mov	r1, r3
 8004408:	6878      	ldr	r0, [r7, #4]
 800440a:	f00d fabf 	bl	801198c <HAL_PCD_DataOutStageCallback>
 800440e:	e01d      	b.n	800444c <PCD_EP_OutXfrComplete_int+0x1bc>
#endif /* USE_HAL_PCD_REGISTER_CALLBACKS */
      }
    }
    else
    {
      if ((epnum == 0U) && (hpcd->OUT_ep[epnum].xfer_len == 0U))
 8004410:	683b      	ldr	r3, [r7, #0]
 8004412:	2b00      	cmp	r3, #0
 8004414:	d114      	bne.n	8004440 <PCD_EP_OutXfrComplete_int+0x1b0>
 8004416:	6879      	ldr	r1, [r7, #4]
 8004418:	683a      	ldr	r2, [r7, #0]
 800441a:	4613      	mov	r3, r2
 800441c:	00db      	lsls	r3, r3, #3
 800441e:	4413      	add	r3, r2
 8004420:	009b      	lsls	r3, r3, #2
 8004422:	440b      	add	r3, r1
 8004424:	f503 7319 	add.w	r3, r3, #612	; 0x264
 8004428:	681b      	ldr	r3, [r3, #0]
 800442a:	2b00      	cmp	r3, #0
 800442c:	d108      	bne.n	8004440 <PCD_EP_OutXfrComplete_int+0x1b0>
      {
        /* this is ZLP, so prepare EP0 for next setup */
        (void)USB_EP0_OutStart(hpcd->Instance, 0U, (uint8_t *)hpcd->Setup);
 800442e:	687b      	ldr	r3, [r7, #4]
 8004430:	6818      	ldr	r0, [r3, #0]
 8004432:	687b      	ldr	r3, [r7, #4]
 8004434:	f203 439c 	addw	r3, r3, #1180	; 0x49c
 8004438:	461a      	mov	r2, r3
 800443a:	2100      	movs	r1, #0
 800443c:	f003 fe68 	bl	8008110 <USB_EP0_OutStart>
      }

#if (USE_HAL_PCD_REGISTER_CALLBACKS == 1U)
      hpcd->DataOutStageCallback(hpcd, (uint8_t)epnum);
#else
      HAL_PCD_DataOutStageCallback(hpcd, (uint8_t)epnum);
 8004440:	683b      	ldr	r3, [r7, #0]
 8004442:	b2db      	uxtb	r3, r3
 8004444:	4619      	mov	r1, r3
 8004446:	6878      	ldr	r0, [r7, #4]
 8004448:	f00d faa0 	bl	801198c <HAL_PCD_DataOutStageCallback>
#endif /* USE_HAL_PCD_REGISTER_CALLBACKS */
    }
  }

  return HAL_OK;
 800444c:	2300      	movs	r3, #0
}
 800444e:	4618      	mov	r0, r3
 8004450:	3720      	adds	r7, #32
 8004452:	46bd      	mov	sp, r7
 8004454:	bd80      	pop	{r7, pc}
 8004456:	bf00      	nop
 8004458:	4f54300a 	.word	0x4f54300a
 800445c:	4f54310a 	.word	0x4f54310a

08004460 <PCD_EP_OutSetupPacket_int>:
  * @param  hpcd PCD handle
  * @param  epnum endpoint number
  * @retval HAL status
  */
static HAL_StatusTypeDef PCD_EP_OutSetupPacket_int(PCD_HandleTypeDef *hpcd, uint32_t epnum)
{
 8004460:	b580      	push	{r7, lr}
 8004462:	b086      	sub	sp, #24
 8004464:	af00      	add	r7, sp, #0
 8004466:	6078      	str	r0, [r7, #4]
 8004468:	6039      	str	r1, [r7, #0]
  const USB_OTG_GlobalTypeDef *USBx = hpcd->Instance;
 800446a:	687b      	ldr	r3, [r7, #4]
 800446c:	681b      	ldr	r3, [r3, #0]
 800446e:	617b      	str	r3, [r7, #20]
  uint32_t USBx_BASE = (uint32_t)USBx;
 8004470:	697b      	ldr	r3, [r7, #20]
 8004472:	613b      	str	r3, [r7, #16]
  uint32_t gSNPSiD = *(__IO const uint32_t *)(&USBx->CID + 0x1U);
 8004474:	697b      	ldr	r3, [r7, #20]
 8004476:	333c      	adds	r3, #60	; 0x3c
 8004478:	3304      	adds	r3, #4
 800447a:	681b      	ldr	r3, [r3, #0]
 800447c:	60fb      	str	r3, [r7, #12]
  uint32_t DoepintReg = USBx_OUTEP(epnum)->DOEPINT;
 800447e:	683b      	ldr	r3, [r7, #0]
 8004480:	015a      	lsls	r2, r3, #5
 8004482:	693b      	ldr	r3, [r7, #16]
 8004484:	4413      	add	r3, r2
 8004486:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 800448a:	689b      	ldr	r3, [r3, #8]
 800448c:	60bb      	str	r3, [r7, #8]

  if ((gSNPSiD > USB_OTG_CORE_ID_300A) &&
 800448e:	68fb      	ldr	r3, [r7, #12]
 8004490:	4a15      	ldr	r2, [pc, #84]	; (80044e8 <PCD_EP_OutSetupPacket_int+0x88>)
 8004492:	4293      	cmp	r3, r2
 8004494:	d90e      	bls.n	80044b4 <PCD_EP_OutSetupPacket_int+0x54>
      ((DoepintReg & USB_OTG_DOEPINT_STPKTRX) == USB_OTG_DOEPINT_STPKTRX))
 8004496:	68bb      	ldr	r3, [r7, #8]
 8004498:	f403 4300 	and.w	r3, r3, #32768	; 0x8000
  if ((gSNPSiD > USB_OTG_CORE_ID_300A) &&
 800449c:	2b00      	cmp	r3, #0
 800449e:	d009      	beq.n	80044b4 <PCD_EP_OutSetupPacket_int+0x54>
  {
    CLEAR_OUT_EP_INTR(epnum, USB_OTG_DOEPINT_STPKTRX);
 80044a0:	683b      	ldr	r3, [r7, #0]
 80044a2:	015a      	lsls	r2, r3, #5
 80044a4:	693b      	ldr	r3, [r7, #16]
 80044a6:	4413      	add	r3, r2
 80044a8:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 80044ac:	461a      	mov	r2, r3
 80044ae:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 80044b2:	6093      	str	r3, [r2, #8]

  /* Inform the upper layer that a setup packet is available */
#if (USE_HAL_PCD_REGISTER_CALLBACKS == 1U)
  hpcd->SetupStageCallback(hpcd);
#else
  HAL_PCD_SetupStageCallback(hpcd);
 80044b4:	6878      	ldr	r0, [r7, #4]
 80044b6:	f00d fa57 	bl	8011968 <HAL_PCD_SetupStageCallback>
#endif /* USE_HAL_PCD_REGISTER_CALLBACKS */

  if ((gSNPSiD > USB_OTG_CORE_ID_300A) && (hpcd->Init.dma_enable == 1U))
 80044ba:	68fb      	ldr	r3, [r7, #12]
 80044bc:	4a0a      	ldr	r2, [pc, #40]	; (80044e8 <PCD_EP_OutSetupPacket_int+0x88>)
 80044be:	4293      	cmp	r3, r2
 80044c0:	d90c      	bls.n	80044dc <PCD_EP_OutSetupPacket_int+0x7c>
 80044c2:	687b      	ldr	r3, [r7, #4]
 80044c4:	799b      	ldrb	r3, [r3, #6]
 80044c6:	2b01      	cmp	r3, #1
 80044c8:	d108      	bne.n	80044dc <PCD_EP_OutSetupPacket_int+0x7c>
  {
    (void)USB_EP0_OutStart(hpcd->Instance, 1U, (uint8_t *)hpcd->Setup);
 80044ca:	687b      	ldr	r3, [r7, #4]
 80044cc:	6818      	ldr	r0, [r3, #0]
 80044ce:	687b      	ldr	r3, [r7, #4]
 80044d0:	f203 439c 	addw	r3, r3, #1180	; 0x49c
 80044d4:	461a      	mov	r2, r3
 80044d6:	2101      	movs	r1, #1
 80044d8:	f003 fe1a 	bl	8008110 <USB_EP0_OutStart>
  }

  return HAL_OK;
 80044dc:	2300      	movs	r3, #0
}
 80044de:	4618      	mov	r0, r3
 80044e0:	3718      	adds	r7, #24
 80044e2:	46bd      	mov	sp, r7
 80044e4:	bd80      	pop	{r7, pc}
 80044e6:	bf00      	nop
 80044e8:	4f54300a 	.word	0x4f54300a

080044ec <HAL_PCDEx_SetTxFiFo>:
  * @param  fifo The number of Tx fifo
  * @param  size Fifo size
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_PCDEx_SetTxFiFo(PCD_HandleTypeDef *hpcd, uint8_t fifo, uint16_t size)
{
 80044ec:	b480      	push	{r7}
 80044ee:	b085      	sub	sp, #20
 80044f0:	af00      	add	r7, sp, #0
 80044f2:	6078      	str	r0, [r7, #4]
 80044f4:	460b      	mov	r3, r1
 80044f6:	70fb      	strb	r3, [r7, #3]
 80044f8:	4613      	mov	r3, r2
 80044fa:	803b      	strh	r3, [r7, #0]
         --> Txn should be configured with the minimum space of 16 words
     The FIFO is used optimally when used TxFIFOs are allocated in the top
         of the FIFO.Ex: use EP1 and EP2 as IN instead of EP1 and EP3 as IN ones.
     When DMA is used 3n * FIFO locations should be reserved for internal DMA registers */

  Tx_Offset = hpcd->Instance->GRXFSIZ;
 80044fc:	687b      	ldr	r3, [r7, #4]
 80044fe:	681b      	ldr	r3, [r3, #0]
 8004500:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004502:	60bb      	str	r3, [r7, #8]

  if (fifo == 0U)
 8004504:	78fb      	ldrb	r3, [r7, #3]
 8004506:	2b00      	cmp	r3, #0
 8004508:	d107      	bne.n	800451a <HAL_PCDEx_SetTxFiFo+0x2e>
  {
    hpcd->Instance->DIEPTXF0_HNPTXFSIZ = ((uint32_t)size << 16) | Tx_Offset;
 800450a:	883b      	ldrh	r3, [r7, #0]
 800450c:	0419      	lsls	r1, r3, #16
 800450e:	687b      	ldr	r3, [r7, #4]
 8004510:	681b      	ldr	r3, [r3, #0]
 8004512:	68ba      	ldr	r2, [r7, #8]
 8004514:	430a      	orrs	r2, r1
 8004516:	629a      	str	r2, [r3, #40]	; 0x28
 8004518:	e028      	b.n	800456c <HAL_PCDEx_SetTxFiFo+0x80>
  }
  else
  {
    Tx_Offset += (hpcd->Instance->DIEPTXF0_HNPTXFSIZ) >> 16;
 800451a:	687b      	ldr	r3, [r7, #4]
 800451c:	681b      	ldr	r3, [r3, #0]
 800451e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8004520:	0c1b      	lsrs	r3, r3, #16
 8004522:	68ba      	ldr	r2, [r7, #8]
 8004524:	4413      	add	r3, r2
 8004526:	60bb      	str	r3, [r7, #8]
    for (i = 0U; i < (fifo - 1U); i++)
 8004528:	2300      	movs	r3, #0
 800452a:	73fb      	strb	r3, [r7, #15]
 800452c:	e00d      	b.n	800454a <HAL_PCDEx_SetTxFiFo+0x5e>
    {
      Tx_Offset += (hpcd->Instance->DIEPTXF[i] >> 16);
 800452e:	687b      	ldr	r3, [r7, #4]
 8004530:	681a      	ldr	r2, [r3, #0]
 8004532:	7bfb      	ldrb	r3, [r7, #15]
 8004534:	3340      	adds	r3, #64	; 0x40
 8004536:	009b      	lsls	r3, r3, #2
 8004538:	4413      	add	r3, r2
 800453a:	685b      	ldr	r3, [r3, #4]
 800453c:	0c1b      	lsrs	r3, r3, #16
 800453e:	68ba      	ldr	r2, [r7, #8]
 8004540:	4413      	add	r3, r2
 8004542:	60bb      	str	r3, [r7, #8]
    for (i = 0U; i < (fifo - 1U); i++)
 8004544:	7bfb      	ldrb	r3, [r7, #15]
 8004546:	3301      	adds	r3, #1
 8004548:	73fb      	strb	r3, [r7, #15]
 800454a:	7bfa      	ldrb	r2, [r7, #15]
 800454c:	78fb      	ldrb	r3, [r7, #3]
 800454e:	3b01      	subs	r3, #1
 8004550:	429a      	cmp	r2, r3
 8004552:	d3ec      	bcc.n	800452e <HAL_PCDEx_SetTxFiFo+0x42>
    }

    /* Multiply Tx_Size by 2 to get higher performance */
    hpcd->Instance->DIEPTXF[fifo - 1U] = ((uint32_t)size << 16) | Tx_Offset;
 8004554:	883b      	ldrh	r3, [r7, #0]
 8004556:	0418      	lsls	r0, r3, #16
 8004558:	687b      	ldr	r3, [r7, #4]
 800455a:	6819      	ldr	r1, [r3, #0]
 800455c:	78fb      	ldrb	r3, [r7, #3]
 800455e:	3b01      	subs	r3, #1
 8004560:	68ba      	ldr	r2, [r7, #8]
 8004562:	4302      	orrs	r2, r0
 8004564:	3340      	adds	r3, #64	; 0x40
 8004566:	009b      	lsls	r3, r3, #2
 8004568:	440b      	add	r3, r1
 800456a:	605a      	str	r2, [r3, #4]
  }

  return HAL_OK;
 800456c:	2300      	movs	r3, #0
}
 800456e:	4618      	mov	r0, r3
 8004570:	3714      	adds	r7, #20
 8004572:	46bd      	mov	sp, r7
 8004574:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004578:	4770      	bx	lr

0800457a <HAL_PCDEx_SetRxFiFo>:
  * @param  hpcd PCD handle
  * @param  size Size of Rx fifo
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_PCDEx_SetRxFiFo(PCD_HandleTypeDef *hpcd, uint16_t size)
{
 800457a:	b480      	push	{r7}
 800457c:	b083      	sub	sp, #12
 800457e:	af00      	add	r7, sp, #0
 8004580:	6078      	str	r0, [r7, #4]
 8004582:	460b      	mov	r3, r1
 8004584:	807b      	strh	r3, [r7, #2]
  hpcd->Instance->GRXFSIZ = size;
 8004586:	687b      	ldr	r3, [r7, #4]
 8004588:	681b      	ldr	r3, [r3, #0]
 800458a:	887a      	ldrh	r2, [r7, #2]
 800458c:	625a      	str	r2, [r3, #36]	; 0x24

  return HAL_OK;
 800458e:	2300      	movs	r3, #0
}
 8004590:	4618      	mov	r0, r3
 8004592:	370c      	adds	r7, #12
 8004594:	46bd      	mov	sp, r7
 8004596:	f85d 7b04 	ldr.w	r7, [sp], #4
 800459a:	4770      	bx	lr

0800459c <HAL_PCDEx_LPM_Callback>:
  * @param  hpcd PCD handle
  * @param  msg LPM message
  * @retval HAL status
  */
__weak void HAL_PCDEx_LPM_Callback(PCD_HandleTypeDef *hpcd, PCD_LPM_MsgTypeDef msg)
{
 800459c:	b480      	push	{r7}
 800459e:	b083      	sub	sp, #12
 80045a0:	af00      	add	r7, sp, #0
 80045a2:	6078      	str	r0, [r7, #4]
 80045a4:	460b      	mov	r3, r1
 80045a6:	70fb      	strb	r3, [r7, #3]
  UNUSED(msg);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_PCDEx_LPM_Callback could be implemented in the user file
   */
}
 80045a8:	bf00      	nop
 80045aa:	370c      	adds	r7, #12
 80045ac:	46bd      	mov	sp, r7
 80045ae:	f85d 7b04 	ldr.w	r7, [sp], #4
 80045b2:	4770      	bx	lr

080045b4 <HAL_RCC_OscConfig>:
  *         supported by this API. User should request a transition to HSE Off
  *         first and then HSE On or HSE Bypass.
  * @retval HAL status
  */
__weak HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
{
 80045b4:	b580      	push	{r7, lr}
 80045b6:	b086      	sub	sp, #24
 80045b8:	af00      	add	r7, sp, #0
 80045ba:	6078      	str	r0, [r7, #4]
  uint32_t tickstart, pll_config;

  /* Check Null pointer */
  if(RCC_OscInitStruct == NULL)
 80045bc:	687b      	ldr	r3, [r7, #4]
 80045be:	2b00      	cmp	r3, #0
 80045c0:	d101      	bne.n	80045c6 <HAL_RCC_OscConfig+0x12>
  {
    return HAL_ERROR;
 80045c2:	2301      	movs	r3, #1
 80045c4:	e267      	b.n	8004a96 <HAL_RCC_OscConfig+0x4e2>
  }

  /* Check the parameters */
  assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));
  /*------------------------------- HSE Configuration ------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 80045c6:	687b      	ldr	r3, [r7, #4]
 80045c8:	681b      	ldr	r3, [r3, #0]
 80045ca:	f003 0301 	and.w	r3, r3, #1
 80045ce:	2b00      	cmp	r3, #0
 80045d0:	d075      	beq.n	80046be <HAL_RCC_OscConfig+0x10a>
  {
    /* Check the parameters */
    assert_param(IS_RCC_HSE(RCC_OscInitStruct->HSEState));
    /* When the HSE is used as system clock or clock source for PLL in these cases HSE will not disabled */
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE) ||\
 80045d2:	4b88      	ldr	r3, [pc, #544]	; (80047f4 <HAL_RCC_OscConfig+0x240>)
 80045d4:	689b      	ldr	r3, [r3, #8]
 80045d6:	f003 030c 	and.w	r3, r3, #12
 80045da:	2b04      	cmp	r3, #4
 80045dc:	d00c      	beq.n	80045f8 <HAL_RCC_OscConfig+0x44>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 80045de:	4b85      	ldr	r3, [pc, #532]	; (80047f4 <HAL_RCC_OscConfig+0x240>)
 80045e0:	689b      	ldr	r3, [r3, #8]
 80045e2:	f003 030c 	and.w	r3, r3, #12
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE) ||\
 80045e6:	2b08      	cmp	r3, #8
 80045e8:	d112      	bne.n	8004610 <HAL_RCC_OscConfig+0x5c>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 80045ea:	4b82      	ldr	r3, [pc, #520]	; (80047f4 <HAL_RCC_OscConfig+0x240>)
 80045ec:	685b      	ldr	r3, [r3, #4]
 80045ee:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 80045f2:	f5b3 0f80 	cmp.w	r3, #4194304	; 0x400000
 80045f6:	d10b      	bne.n	8004610 <HAL_RCC_OscConfig+0x5c>
    {
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 80045f8:	4b7e      	ldr	r3, [pc, #504]	; (80047f4 <HAL_RCC_OscConfig+0x240>)
 80045fa:	681b      	ldr	r3, [r3, #0]
 80045fc:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8004600:	2b00      	cmp	r3, #0
 8004602:	d05b      	beq.n	80046bc <HAL_RCC_OscConfig+0x108>
 8004604:	687b      	ldr	r3, [r7, #4]
 8004606:	685b      	ldr	r3, [r3, #4]
 8004608:	2b00      	cmp	r3, #0
 800460a:	d157      	bne.n	80046bc <HAL_RCC_OscConfig+0x108>
      {
        return HAL_ERROR;
 800460c:	2301      	movs	r3, #1
 800460e:	e242      	b.n	8004a96 <HAL_RCC_OscConfig+0x4e2>
      }
    }
    else
    {
      /* Set the new HSE configuration ---------------------------------------*/
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 8004610:	687b      	ldr	r3, [r7, #4]
 8004612:	685b      	ldr	r3, [r3, #4]
 8004614:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8004618:	d106      	bne.n	8004628 <HAL_RCC_OscConfig+0x74>
 800461a:	4b76      	ldr	r3, [pc, #472]	; (80047f4 <HAL_RCC_OscConfig+0x240>)
 800461c:	681b      	ldr	r3, [r3, #0]
 800461e:	4a75      	ldr	r2, [pc, #468]	; (80047f4 <HAL_RCC_OscConfig+0x240>)
 8004620:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8004624:	6013      	str	r3, [r2, #0]
 8004626:	e01d      	b.n	8004664 <HAL_RCC_OscConfig+0xb0>
 8004628:	687b      	ldr	r3, [r7, #4]
 800462a:	685b      	ldr	r3, [r3, #4]
 800462c:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 8004630:	d10c      	bne.n	800464c <HAL_RCC_OscConfig+0x98>
 8004632:	4b70      	ldr	r3, [pc, #448]	; (80047f4 <HAL_RCC_OscConfig+0x240>)
 8004634:	681b      	ldr	r3, [r3, #0]
 8004636:	4a6f      	ldr	r2, [pc, #444]	; (80047f4 <HAL_RCC_OscConfig+0x240>)
 8004638:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 800463c:	6013      	str	r3, [r2, #0]
 800463e:	4b6d      	ldr	r3, [pc, #436]	; (80047f4 <HAL_RCC_OscConfig+0x240>)
 8004640:	681b      	ldr	r3, [r3, #0]
 8004642:	4a6c      	ldr	r2, [pc, #432]	; (80047f4 <HAL_RCC_OscConfig+0x240>)
 8004644:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8004648:	6013      	str	r3, [r2, #0]
 800464a:	e00b      	b.n	8004664 <HAL_RCC_OscConfig+0xb0>
 800464c:	4b69      	ldr	r3, [pc, #420]	; (80047f4 <HAL_RCC_OscConfig+0x240>)
 800464e:	681b      	ldr	r3, [r3, #0]
 8004650:	4a68      	ldr	r2, [pc, #416]	; (80047f4 <HAL_RCC_OscConfig+0x240>)
 8004652:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8004656:	6013      	str	r3, [r2, #0]
 8004658:	4b66      	ldr	r3, [pc, #408]	; (80047f4 <HAL_RCC_OscConfig+0x240>)
 800465a:	681b      	ldr	r3, [r3, #0]
 800465c:	4a65      	ldr	r2, [pc, #404]	; (80047f4 <HAL_RCC_OscConfig+0x240>)
 800465e:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 8004662:	6013      	str	r3, [r2, #0]

      /* Check the HSE State */
      if((RCC_OscInitStruct->HSEState) != RCC_HSE_OFF)
 8004664:	687b      	ldr	r3, [r7, #4]
 8004666:	685b      	ldr	r3, [r3, #4]
 8004668:	2b00      	cmp	r3, #0
 800466a:	d013      	beq.n	8004694 <HAL_RCC_OscConfig+0xe0>
      {
        /* Get Start Tick */
        tickstart = HAL_GetTick();
 800466c:	f7fd fec2 	bl	80023f4 <HAL_GetTick>
 8004670:	6138      	str	r0, [r7, #16]

        /* Wait till HSE is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8004672:	e008      	b.n	8004686 <HAL_RCC_OscConfig+0xd2>
        {
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 8004674:	f7fd febe 	bl	80023f4 <HAL_GetTick>
 8004678:	4602      	mov	r2, r0
 800467a:	693b      	ldr	r3, [r7, #16]
 800467c:	1ad3      	subs	r3, r2, r3
 800467e:	2b64      	cmp	r3, #100	; 0x64
 8004680:	d901      	bls.n	8004686 <HAL_RCC_OscConfig+0xd2>
          {
            return HAL_TIMEOUT;
 8004682:	2303      	movs	r3, #3
 8004684:	e207      	b.n	8004a96 <HAL_RCC_OscConfig+0x4e2>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8004686:	4b5b      	ldr	r3, [pc, #364]	; (80047f4 <HAL_RCC_OscConfig+0x240>)
 8004688:	681b      	ldr	r3, [r3, #0]
 800468a:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 800468e:	2b00      	cmp	r3, #0
 8004690:	d0f0      	beq.n	8004674 <HAL_RCC_OscConfig+0xc0>
 8004692:	e014      	b.n	80046be <HAL_RCC_OscConfig+0x10a>
        }
      }
      else
      {
        /* Get Start Tick */
        tickstart = HAL_GetTick();
 8004694:	f7fd feae 	bl	80023f4 <HAL_GetTick>
 8004698:	6138      	str	r0, [r7, #16]

        /* Wait till HSE is bypassed or disabled */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 800469a:	e008      	b.n	80046ae <HAL_RCC_OscConfig+0xfa>
        {
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 800469c:	f7fd feaa 	bl	80023f4 <HAL_GetTick>
 80046a0:	4602      	mov	r2, r0
 80046a2:	693b      	ldr	r3, [r7, #16]
 80046a4:	1ad3      	subs	r3, r2, r3
 80046a6:	2b64      	cmp	r3, #100	; 0x64
 80046a8:	d901      	bls.n	80046ae <HAL_RCC_OscConfig+0xfa>
          {
            return HAL_TIMEOUT;
 80046aa:	2303      	movs	r3, #3
 80046ac:	e1f3      	b.n	8004a96 <HAL_RCC_OscConfig+0x4e2>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 80046ae:	4b51      	ldr	r3, [pc, #324]	; (80047f4 <HAL_RCC_OscConfig+0x240>)
 80046b0:	681b      	ldr	r3, [r3, #0]
 80046b2:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80046b6:	2b00      	cmp	r3, #0
 80046b8:	d1f0      	bne.n	800469c <HAL_RCC_OscConfig+0xe8>
 80046ba:	e000      	b.n	80046be <HAL_RCC_OscConfig+0x10a>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 80046bc:	bf00      	nop
        }
      }
    }
  }
  /*----------------------------- HSI Configuration --------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 80046be:	687b      	ldr	r3, [r7, #4]
 80046c0:	681b      	ldr	r3, [r3, #0]
 80046c2:	f003 0302 	and.w	r3, r3, #2
 80046c6:	2b00      	cmp	r3, #0
 80046c8:	d063      	beq.n	8004792 <HAL_RCC_OscConfig+0x1de>
    /* Check the parameters */
    assert_param(IS_RCC_HSI(RCC_OscInitStruct->HSIState));
    assert_param(IS_RCC_CALIBRATION_VALUE(RCC_OscInitStruct->HSICalibrationValue));

    /* Check if HSI is used as system clock or as PLL source when PLL is selected as system clock */
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI) ||\
 80046ca:	4b4a      	ldr	r3, [pc, #296]	; (80047f4 <HAL_RCC_OscConfig+0x240>)
 80046cc:	689b      	ldr	r3, [r3, #8]
 80046ce:	f003 030c 	and.w	r3, r3, #12
 80046d2:	2b00      	cmp	r3, #0
 80046d4:	d00b      	beq.n	80046ee <HAL_RCC_OscConfig+0x13a>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 80046d6:	4b47      	ldr	r3, [pc, #284]	; (80047f4 <HAL_RCC_OscConfig+0x240>)
 80046d8:	689b      	ldr	r3, [r3, #8]
 80046da:	f003 030c 	and.w	r3, r3, #12
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI) ||\
 80046de:	2b08      	cmp	r3, #8
 80046e0:	d11c      	bne.n	800471c <HAL_RCC_OscConfig+0x168>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 80046e2:	4b44      	ldr	r3, [pc, #272]	; (80047f4 <HAL_RCC_OscConfig+0x240>)
 80046e4:	685b      	ldr	r3, [r3, #4]
 80046e6:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 80046ea:	2b00      	cmp	r3, #0
 80046ec:	d116      	bne.n	800471c <HAL_RCC_OscConfig+0x168>
    {
      /* When HSI is used as system clock it will not disabled */
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 80046ee:	4b41      	ldr	r3, [pc, #260]	; (80047f4 <HAL_RCC_OscConfig+0x240>)
 80046f0:	681b      	ldr	r3, [r3, #0]
 80046f2:	f003 0302 	and.w	r3, r3, #2
 80046f6:	2b00      	cmp	r3, #0
 80046f8:	d005      	beq.n	8004706 <HAL_RCC_OscConfig+0x152>
 80046fa:	687b      	ldr	r3, [r7, #4]
 80046fc:	68db      	ldr	r3, [r3, #12]
 80046fe:	2b01      	cmp	r3, #1
 8004700:	d001      	beq.n	8004706 <HAL_RCC_OscConfig+0x152>
      {
        return HAL_ERROR;
 8004702:	2301      	movs	r3, #1
 8004704:	e1c7      	b.n	8004a96 <HAL_RCC_OscConfig+0x4e2>
      }
      /* Otherwise, just the calibration is allowed */
      else
      {
        /* Adjusts the Internal High Speed oscillator (HSI) calibration value.*/
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 8004706:	4b3b      	ldr	r3, [pc, #236]	; (80047f4 <HAL_RCC_OscConfig+0x240>)
 8004708:	681b      	ldr	r3, [r3, #0]
 800470a:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 800470e:	687b      	ldr	r3, [r7, #4]
 8004710:	691b      	ldr	r3, [r3, #16]
 8004712:	00db      	lsls	r3, r3, #3
 8004714:	4937      	ldr	r1, [pc, #220]	; (80047f4 <HAL_RCC_OscConfig+0x240>)
 8004716:	4313      	orrs	r3, r2
 8004718:	600b      	str	r3, [r1, #0]
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 800471a:	e03a      	b.n	8004792 <HAL_RCC_OscConfig+0x1de>
      }
    }
    else
    {
      /* Check the HSI State */
      if((RCC_OscInitStruct->HSIState)!= RCC_HSI_OFF)
 800471c:	687b      	ldr	r3, [r7, #4]
 800471e:	68db      	ldr	r3, [r3, #12]
 8004720:	2b00      	cmp	r3, #0
 8004722:	d020      	beq.n	8004766 <HAL_RCC_OscConfig+0x1b2>
      {
        /* Enable the Internal High Speed oscillator (HSI). */
        __HAL_RCC_HSI_ENABLE();
 8004724:	4b34      	ldr	r3, [pc, #208]	; (80047f8 <HAL_RCC_OscConfig+0x244>)
 8004726:	2201      	movs	r2, #1
 8004728:	601a      	str	r2, [r3, #0]

        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 800472a:	f7fd fe63 	bl	80023f4 <HAL_GetTick>
 800472e:	6138      	str	r0, [r7, #16]

        /* Wait till HSI is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8004730:	e008      	b.n	8004744 <HAL_RCC_OscConfig+0x190>
        {
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 8004732:	f7fd fe5f 	bl	80023f4 <HAL_GetTick>
 8004736:	4602      	mov	r2, r0
 8004738:	693b      	ldr	r3, [r7, #16]
 800473a:	1ad3      	subs	r3, r2, r3
 800473c:	2b02      	cmp	r3, #2
 800473e:	d901      	bls.n	8004744 <HAL_RCC_OscConfig+0x190>
          {
            return HAL_TIMEOUT;
 8004740:	2303      	movs	r3, #3
 8004742:	e1a8      	b.n	8004a96 <HAL_RCC_OscConfig+0x4e2>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8004744:	4b2b      	ldr	r3, [pc, #172]	; (80047f4 <HAL_RCC_OscConfig+0x240>)
 8004746:	681b      	ldr	r3, [r3, #0]
 8004748:	f003 0302 	and.w	r3, r3, #2
 800474c:	2b00      	cmp	r3, #0
 800474e:	d0f0      	beq.n	8004732 <HAL_RCC_OscConfig+0x17e>
          }
        }

        /* Adjusts the Internal High Speed oscillator (HSI) calibration value. */
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 8004750:	4b28      	ldr	r3, [pc, #160]	; (80047f4 <HAL_RCC_OscConfig+0x240>)
 8004752:	681b      	ldr	r3, [r3, #0]
 8004754:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 8004758:	687b      	ldr	r3, [r7, #4]
 800475a:	691b      	ldr	r3, [r3, #16]
 800475c:	00db      	lsls	r3, r3, #3
 800475e:	4925      	ldr	r1, [pc, #148]	; (80047f4 <HAL_RCC_OscConfig+0x240>)
 8004760:	4313      	orrs	r3, r2
 8004762:	600b      	str	r3, [r1, #0]
 8004764:	e015      	b.n	8004792 <HAL_RCC_OscConfig+0x1de>
      }
      else
      {
        /* Disable the Internal High Speed oscillator (HSI). */
        __HAL_RCC_HSI_DISABLE();
 8004766:	4b24      	ldr	r3, [pc, #144]	; (80047f8 <HAL_RCC_OscConfig+0x244>)
 8004768:	2200      	movs	r2, #0
 800476a:	601a      	str	r2, [r3, #0]

        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 800476c:	f7fd fe42 	bl	80023f4 <HAL_GetTick>
 8004770:	6138      	str	r0, [r7, #16]

        /* Wait till HSI is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 8004772:	e008      	b.n	8004786 <HAL_RCC_OscConfig+0x1d2>
        {
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 8004774:	f7fd fe3e 	bl	80023f4 <HAL_GetTick>
 8004778:	4602      	mov	r2, r0
 800477a:	693b      	ldr	r3, [r7, #16]
 800477c:	1ad3      	subs	r3, r2, r3
 800477e:	2b02      	cmp	r3, #2
 8004780:	d901      	bls.n	8004786 <HAL_RCC_OscConfig+0x1d2>
          {
            return HAL_TIMEOUT;
 8004782:	2303      	movs	r3, #3
 8004784:	e187      	b.n	8004a96 <HAL_RCC_OscConfig+0x4e2>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 8004786:	4b1b      	ldr	r3, [pc, #108]	; (80047f4 <HAL_RCC_OscConfig+0x240>)
 8004788:	681b      	ldr	r3, [r3, #0]
 800478a:	f003 0302 	and.w	r3, r3, #2
 800478e:	2b00      	cmp	r3, #0
 8004790:	d1f0      	bne.n	8004774 <HAL_RCC_OscConfig+0x1c0>
        }
      }
    }
  }
  /*------------------------------ LSI Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 8004792:	687b      	ldr	r3, [r7, #4]
 8004794:	681b      	ldr	r3, [r3, #0]
 8004796:	f003 0308 	and.w	r3, r3, #8
 800479a:	2b00      	cmp	r3, #0
 800479c:	d036      	beq.n	800480c <HAL_RCC_OscConfig+0x258>
  {
    /* Check the parameters */
    assert_param(IS_RCC_LSI(RCC_OscInitStruct->LSIState));

    /* Check the LSI State */
    if((RCC_OscInitStruct->LSIState)!= RCC_LSI_OFF)
 800479e:	687b      	ldr	r3, [r7, #4]
 80047a0:	695b      	ldr	r3, [r3, #20]
 80047a2:	2b00      	cmp	r3, #0
 80047a4:	d016      	beq.n	80047d4 <HAL_RCC_OscConfig+0x220>
    {
      /* Enable the Internal Low Speed oscillator (LSI). */
      __HAL_RCC_LSI_ENABLE();
 80047a6:	4b15      	ldr	r3, [pc, #84]	; (80047fc <HAL_RCC_OscConfig+0x248>)
 80047a8:	2201      	movs	r2, #1
 80047aa:	601a      	str	r2, [r3, #0]

      /* Get Start Tick*/
      tickstart = HAL_GetTick();
 80047ac:	f7fd fe22 	bl	80023f4 <HAL_GetTick>
 80047b0:	6138      	str	r0, [r7, #16]

      /* Wait till LSI is ready */
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 80047b2:	e008      	b.n	80047c6 <HAL_RCC_OscConfig+0x212>
      {
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 80047b4:	f7fd fe1e 	bl	80023f4 <HAL_GetTick>
 80047b8:	4602      	mov	r2, r0
 80047ba:	693b      	ldr	r3, [r7, #16]
 80047bc:	1ad3      	subs	r3, r2, r3
 80047be:	2b02      	cmp	r3, #2
 80047c0:	d901      	bls.n	80047c6 <HAL_RCC_OscConfig+0x212>
        {
          return HAL_TIMEOUT;
 80047c2:	2303      	movs	r3, #3
 80047c4:	e167      	b.n	8004a96 <HAL_RCC_OscConfig+0x4e2>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 80047c6:	4b0b      	ldr	r3, [pc, #44]	; (80047f4 <HAL_RCC_OscConfig+0x240>)
 80047c8:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 80047ca:	f003 0302 	and.w	r3, r3, #2
 80047ce:	2b00      	cmp	r3, #0
 80047d0:	d0f0      	beq.n	80047b4 <HAL_RCC_OscConfig+0x200>
 80047d2:	e01b      	b.n	800480c <HAL_RCC_OscConfig+0x258>
      }
    }
    else
    {
      /* Disable the Internal Low Speed oscillator (LSI). */
      __HAL_RCC_LSI_DISABLE();
 80047d4:	4b09      	ldr	r3, [pc, #36]	; (80047fc <HAL_RCC_OscConfig+0x248>)
 80047d6:	2200      	movs	r2, #0
 80047d8:	601a      	str	r2, [r3, #0]

      /* Get Start Tick */
      tickstart = HAL_GetTick();
 80047da:	f7fd fe0b 	bl	80023f4 <HAL_GetTick>
 80047de:	6138      	str	r0, [r7, #16]

      /* Wait till LSI is ready */
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 80047e0:	e00e      	b.n	8004800 <HAL_RCC_OscConfig+0x24c>
      {
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 80047e2:	f7fd fe07 	bl	80023f4 <HAL_GetTick>
 80047e6:	4602      	mov	r2, r0
 80047e8:	693b      	ldr	r3, [r7, #16]
 80047ea:	1ad3      	subs	r3, r2, r3
 80047ec:	2b02      	cmp	r3, #2
 80047ee:	d907      	bls.n	8004800 <HAL_RCC_OscConfig+0x24c>
        {
          return HAL_TIMEOUT;
 80047f0:	2303      	movs	r3, #3
 80047f2:	e150      	b.n	8004a96 <HAL_RCC_OscConfig+0x4e2>
 80047f4:	40023800 	.word	0x40023800
 80047f8:	42470000 	.word	0x42470000
 80047fc:	42470e80 	.word	0x42470e80
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 8004800:	4b88      	ldr	r3, [pc, #544]	; (8004a24 <HAL_RCC_OscConfig+0x470>)
 8004802:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8004804:	f003 0302 	and.w	r3, r3, #2
 8004808:	2b00      	cmp	r3, #0
 800480a:	d1ea      	bne.n	80047e2 <HAL_RCC_OscConfig+0x22e>
        }
      }
    }
  }
  /*------------------------------ LSE Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 800480c:	687b      	ldr	r3, [r7, #4]
 800480e:	681b      	ldr	r3, [r3, #0]
 8004810:	f003 0304 	and.w	r3, r3, #4
 8004814:	2b00      	cmp	r3, #0
 8004816:	f000 8097 	beq.w	8004948 <HAL_RCC_OscConfig+0x394>
  {
    FlagStatus       pwrclkchanged = RESET;
 800481a:	2300      	movs	r3, #0
 800481c:	75fb      	strb	r3, [r7, #23]
    /* Check the parameters */
    assert_param(IS_RCC_LSE(RCC_OscInitStruct->LSEState));

    /* Update LSE configuration in Backup Domain control register    */
    /* Requires to enable write access to Backup Domain of necessary */
    if(__HAL_RCC_PWR_IS_CLK_DISABLED())
 800481e:	4b81      	ldr	r3, [pc, #516]	; (8004a24 <HAL_RCC_OscConfig+0x470>)
 8004820:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004822:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8004826:	2b00      	cmp	r3, #0
 8004828:	d10f      	bne.n	800484a <HAL_RCC_OscConfig+0x296>
    {
      __HAL_RCC_PWR_CLK_ENABLE();
 800482a:	2300      	movs	r3, #0
 800482c:	60bb      	str	r3, [r7, #8]
 800482e:	4b7d      	ldr	r3, [pc, #500]	; (8004a24 <HAL_RCC_OscConfig+0x470>)
 8004830:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004832:	4a7c      	ldr	r2, [pc, #496]	; (8004a24 <HAL_RCC_OscConfig+0x470>)
 8004834:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8004838:	6413      	str	r3, [r2, #64]	; 0x40
 800483a:	4b7a      	ldr	r3, [pc, #488]	; (8004a24 <HAL_RCC_OscConfig+0x470>)
 800483c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800483e:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8004842:	60bb      	str	r3, [r7, #8]
 8004844:	68bb      	ldr	r3, [r7, #8]
      pwrclkchanged = SET;
 8004846:	2301      	movs	r3, #1
 8004848:	75fb      	strb	r3, [r7, #23]
    }

    if(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 800484a:	4b77      	ldr	r3, [pc, #476]	; (8004a28 <HAL_RCC_OscConfig+0x474>)
 800484c:	681b      	ldr	r3, [r3, #0]
 800484e:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8004852:	2b00      	cmp	r3, #0
 8004854:	d118      	bne.n	8004888 <HAL_RCC_OscConfig+0x2d4>
    {
      /* Enable write access to Backup domain */
      SET_BIT(PWR->CR, PWR_CR_DBP);
 8004856:	4b74      	ldr	r3, [pc, #464]	; (8004a28 <HAL_RCC_OscConfig+0x474>)
 8004858:	681b      	ldr	r3, [r3, #0]
 800485a:	4a73      	ldr	r2, [pc, #460]	; (8004a28 <HAL_RCC_OscConfig+0x474>)
 800485c:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8004860:	6013      	str	r3, [r2, #0]

      /* Wait for Backup domain Write protection disable */
      tickstart = HAL_GetTick();
 8004862:	f7fd fdc7 	bl	80023f4 <HAL_GetTick>
 8004866:	6138      	str	r0, [r7, #16]

      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 8004868:	e008      	b.n	800487c <HAL_RCC_OscConfig+0x2c8>
      {
        if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 800486a:	f7fd fdc3 	bl	80023f4 <HAL_GetTick>
 800486e:	4602      	mov	r2, r0
 8004870:	693b      	ldr	r3, [r7, #16]
 8004872:	1ad3      	subs	r3, r2, r3
 8004874:	2b02      	cmp	r3, #2
 8004876:	d901      	bls.n	800487c <HAL_RCC_OscConfig+0x2c8>
        {
          return HAL_TIMEOUT;
 8004878:	2303      	movs	r3, #3
 800487a:	e10c      	b.n	8004a96 <HAL_RCC_OscConfig+0x4e2>
      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 800487c:	4b6a      	ldr	r3, [pc, #424]	; (8004a28 <HAL_RCC_OscConfig+0x474>)
 800487e:	681b      	ldr	r3, [r3, #0]
 8004880:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8004884:	2b00      	cmp	r3, #0
 8004886:	d0f0      	beq.n	800486a <HAL_RCC_OscConfig+0x2b6>
        }
      }
    }

    /* Set the new LSE configuration -----------------------------------------*/
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 8004888:	687b      	ldr	r3, [r7, #4]
 800488a:	689b      	ldr	r3, [r3, #8]
 800488c:	2b01      	cmp	r3, #1
 800488e:	d106      	bne.n	800489e <HAL_RCC_OscConfig+0x2ea>
 8004890:	4b64      	ldr	r3, [pc, #400]	; (8004a24 <HAL_RCC_OscConfig+0x470>)
 8004892:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8004894:	4a63      	ldr	r2, [pc, #396]	; (8004a24 <HAL_RCC_OscConfig+0x470>)
 8004896:	f043 0301 	orr.w	r3, r3, #1
 800489a:	6713      	str	r3, [r2, #112]	; 0x70
 800489c:	e01c      	b.n	80048d8 <HAL_RCC_OscConfig+0x324>
 800489e:	687b      	ldr	r3, [r7, #4]
 80048a0:	689b      	ldr	r3, [r3, #8]
 80048a2:	2b05      	cmp	r3, #5
 80048a4:	d10c      	bne.n	80048c0 <HAL_RCC_OscConfig+0x30c>
 80048a6:	4b5f      	ldr	r3, [pc, #380]	; (8004a24 <HAL_RCC_OscConfig+0x470>)
 80048a8:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80048aa:	4a5e      	ldr	r2, [pc, #376]	; (8004a24 <HAL_RCC_OscConfig+0x470>)
 80048ac:	f043 0304 	orr.w	r3, r3, #4
 80048b0:	6713      	str	r3, [r2, #112]	; 0x70
 80048b2:	4b5c      	ldr	r3, [pc, #368]	; (8004a24 <HAL_RCC_OscConfig+0x470>)
 80048b4:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80048b6:	4a5b      	ldr	r2, [pc, #364]	; (8004a24 <HAL_RCC_OscConfig+0x470>)
 80048b8:	f043 0301 	orr.w	r3, r3, #1
 80048bc:	6713      	str	r3, [r2, #112]	; 0x70
 80048be:	e00b      	b.n	80048d8 <HAL_RCC_OscConfig+0x324>
 80048c0:	4b58      	ldr	r3, [pc, #352]	; (8004a24 <HAL_RCC_OscConfig+0x470>)
 80048c2:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80048c4:	4a57      	ldr	r2, [pc, #348]	; (8004a24 <HAL_RCC_OscConfig+0x470>)
 80048c6:	f023 0301 	bic.w	r3, r3, #1
 80048ca:	6713      	str	r3, [r2, #112]	; 0x70
 80048cc:	4b55      	ldr	r3, [pc, #340]	; (8004a24 <HAL_RCC_OscConfig+0x470>)
 80048ce:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80048d0:	4a54      	ldr	r2, [pc, #336]	; (8004a24 <HAL_RCC_OscConfig+0x470>)
 80048d2:	f023 0304 	bic.w	r3, r3, #4
 80048d6:	6713      	str	r3, [r2, #112]	; 0x70
    /* Check the LSE State */
    if((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
 80048d8:	687b      	ldr	r3, [r7, #4]
 80048da:	689b      	ldr	r3, [r3, #8]
 80048dc:	2b00      	cmp	r3, #0
 80048de:	d015      	beq.n	800490c <HAL_RCC_OscConfig+0x358>
    {
      /* Get Start Tick*/
      tickstart = HAL_GetTick();
 80048e0:	f7fd fd88 	bl	80023f4 <HAL_GetTick>
 80048e4:	6138      	str	r0, [r7, #16]

      /* Wait till LSE is ready */
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 80048e6:	e00a      	b.n	80048fe <HAL_RCC_OscConfig+0x34a>
      {
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 80048e8:	f7fd fd84 	bl	80023f4 <HAL_GetTick>
 80048ec:	4602      	mov	r2, r0
 80048ee:	693b      	ldr	r3, [r7, #16]
 80048f0:	1ad3      	subs	r3, r2, r3
 80048f2:	f241 3288 	movw	r2, #5000	; 0x1388
 80048f6:	4293      	cmp	r3, r2
 80048f8:	d901      	bls.n	80048fe <HAL_RCC_OscConfig+0x34a>
        {
          return HAL_TIMEOUT;
 80048fa:	2303      	movs	r3, #3
 80048fc:	e0cb      	b.n	8004a96 <HAL_RCC_OscConfig+0x4e2>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 80048fe:	4b49      	ldr	r3, [pc, #292]	; (8004a24 <HAL_RCC_OscConfig+0x470>)
 8004900:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8004902:	f003 0302 	and.w	r3, r3, #2
 8004906:	2b00      	cmp	r3, #0
 8004908:	d0ee      	beq.n	80048e8 <HAL_RCC_OscConfig+0x334>
 800490a:	e014      	b.n	8004936 <HAL_RCC_OscConfig+0x382>
      }
    }
    else
    {
      /* Get Start Tick */
      tickstart = HAL_GetTick();
 800490c:	f7fd fd72 	bl	80023f4 <HAL_GetTick>
 8004910:	6138      	str	r0, [r7, #16]

      /* Wait till LSE is ready */
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 8004912:	e00a      	b.n	800492a <HAL_RCC_OscConfig+0x376>
      {
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8004914:	f7fd fd6e 	bl	80023f4 <HAL_GetTick>
 8004918:	4602      	mov	r2, r0
 800491a:	693b      	ldr	r3, [r7, #16]
 800491c:	1ad3      	subs	r3, r2, r3
 800491e:	f241 3288 	movw	r2, #5000	; 0x1388
 8004922:	4293      	cmp	r3, r2
 8004924:	d901      	bls.n	800492a <HAL_RCC_OscConfig+0x376>
        {
          return HAL_TIMEOUT;
 8004926:	2303      	movs	r3, #3
 8004928:	e0b5      	b.n	8004a96 <HAL_RCC_OscConfig+0x4e2>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 800492a:	4b3e      	ldr	r3, [pc, #248]	; (8004a24 <HAL_RCC_OscConfig+0x470>)
 800492c:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800492e:	f003 0302 	and.w	r3, r3, #2
 8004932:	2b00      	cmp	r3, #0
 8004934:	d1ee      	bne.n	8004914 <HAL_RCC_OscConfig+0x360>
        }
      }
    }

    /* Restore clock configuration if changed */
    if(pwrclkchanged == SET)
 8004936:	7dfb      	ldrb	r3, [r7, #23]
 8004938:	2b01      	cmp	r3, #1
 800493a:	d105      	bne.n	8004948 <HAL_RCC_OscConfig+0x394>
    {
      __HAL_RCC_PWR_CLK_DISABLE();
 800493c:	4b39      	ldr	r3, [pc, #228]	; (8004a24 <HAL_RCC_OscConfig+0x470>)
 800493e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004940:	4a38      	ldr	r2, [pc, #224]	; (8004a24 <HAL_RCC_OscConfig+0x470>)
 8004942:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 8004946:	6413      	str	r3, [r2, #64]	; 0x40
    }
  }
  /*-------------------------------- PLL Configuration -----------------------*/
  /* Check the parameters */
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 8004948:	687b      	ldr	r3, [r7, #4]
 800494a:	699b      	ldr	r3, [r3, #24]
 800494c:	2b00      	cmp	r3, #0
 800494e:	f000 80a1 	beq.w	8004a94 <HAL_RCC_OscConfig+0x4e0>
  {
    /* Check if the PLL is used as system clock or not */
    if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL)
 8004952:	4b34      	ldr	r3, [pc, #208]	; (8004a24 <HAL_RCC_OscConfig+0x470>)
 8004954:	689b      	ldr	r3, [r3, #8]
 8004956:	f003 030c 	and.w	r3, r3, #12
 800495a:	2b08      	cmp	r3, #8
 800495c:	d05c      	beq.n	8004a18 <HAL_RCC_OscConfig+0x464>
    {
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 800495e:	687b      	ldr	r3, [r7, #4]
 8004960:	699b      	ldr	r3, [r3, #24]
 8004962:	2b02      	cmp	r3, #2
 8004964:	d141      	bne.n	80049ea <HAL_RCC_OscConfig+0x436>
        assert_param(IS_RCC_PLLN_VALUE(RCC_OscInitStruct->PLL.PLLN));
        assert_param(IS_RCC_PLLP_VALUE(RCC_OscInitStruct->PLL.PLLP));
        assert_param(IS_RCC_PLLQ_VALUE(RCC_OscInitStruct->PLL.PLLQ));

        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();
 8004966:	4b31      	ldr	r3, [pc, #196]	; (8004a2c <HAL_RCC_OscConfig+0x478>)
 8004968:	2200      	movs	r2, #0
 800496a:	601a      	str	r2, [r3, #0]

        /* Get Start Tick */
        tickstart = HAL_GetTick();
 800496c:	f7fd fd42 	bl	80023f4 <HAL_GetTick>
 8004970:	6138      	str	r0, [r7, #16]

        /* Wait till PLL is disabled */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 8004972:	e008      	b.n	8004986 <HAL_RCC_OscConfig+0x3d2>
        {
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 8004974:	f7fd fd3e 	bl	80023f4 <HAL_GetTick>
 8004978:	4602      	mov	r2, r0
 800497a:	693b      	ldr	r3, [r7, #16]
 800497c:	1ad3      	subs	r3, r2, r3
 800497e:	2b02      	cmp	r3, #2
 8004980:	d901      	bls.n	8004986 <HAL_RCC_OscConfig+0x3d2>
          {
            return HAL_TIMEOUT;
 8004982:	2303      	movs	r3, #3
 8004984:	e087      	b.n	8004a96 <HAL_RCC_OscConfig+0x4e2>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 8004986:	4b27      	ldr	r3, [pc, #156]	; (8004a24 <HAL_RCC_OscConfig+0x470>)
 8004988:	681b      	ldr	r3, [r3, #0]
 800498a:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 800498e:	2b00      	cmp	r3, #0
 8004990:	d1f0      	bne.n	8004974 <HAL_RCC_OscConfig+0x3c0>
          }
        }

        /* Configure the main PLL clock source, multiplication and division factors. */
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
 8004992:	687b      	ldr	r3, [r7, #4]
 8004994:	69da      	ldr	r2, [r3, #28]
 8004996:	687b      	ldr	r3, [r7, #4]
 8004998:	6a1b      	ldr	r3, [r3, #32]
 800499a:	431a      	orrs	r2, r3
 800499c:	687b      	ldr	r3, [r7, #4]
 800499e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80049a0:	019b      	lsls	r3, r3, #6
 80049a2:	431a      	orrs	r2, r3
 80049a4:	687b      	ldr	r3, [r7, #4]
 80049a6:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80049a8:	085b      	lsrs	r3, r3, #1
 80049aa:	3b01      	subs	r3, #1
 80049ac:	041b      	lsls	r3, r3, #16
 80049ae:	431a      	orrs	r2, r3
 80049b0:	687b      	ldr	r3, [r7, #4]
 80049b2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80049b4:	061b      	lsls	r3, r3, #24
 80049b6:	491b      	ldr	r1, [pc, #108]	; (8004a24 <HAL_RCC_OscConfig+0x470>)
 80049b8:	4313      	orrs	r3, r2
 80049ba:	604b      	str	r3, [r1, #4]
                                 RCC_OscInitStruct->PLL.PLLM                                                 | \
                                 (RCC_OscInitStruct->PLL.PLLN << RCC_PLLCFGR_PLLN_Pos)             | \
                                 (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U) << RCC_PLLCFGR_PLLP_Pos) | \
                                 (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)));
        /* Enable the main PLL. */
        __HAL_RCC_PLL_ENABLE();
 80049bc:	4b1b      	ldr	r3, [pc, #108]	; (8004a2c <HAL_RCC_OscConfig+0x478>)
 80049be:	2201      	movs	r2, #1
 80049c0:	601a      	str	r2, [r3, #0]

        /* Get Start Tick */
        tickstart = HAL_GetTick();
 80049c2:	f7fd fd17 	bl	80023f4 <HAL_GetTick>
 80049c6:	6138      	str	r0, [r7, #16]

        /* Wait till PLL is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 80049c8:	e008      	b.n	80049dc <HAL_RCC_OscConfig+0x428>
        {
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 80049ca:	f7fd fd13 	bl	80023f4 <HAL_GetTick>
 80049ce:	4602      	mov	r2, r0
 80049d0:	693b      	ldr	r3, [r7, #16]
 80049d2:	1ad3      	subs	r3, r2, r3
 80049d4:	2b02      	cmp	r3, #2
 80049d6:	d901      	bls.n	80049dc <HAL_RCC_OscConfig+0x428>
          {
            return HAL_TIMEOUT;
 80049d8:	2303      	movs	r3, #3
 80049da:	e05c      	b.n	8004a96 <HAL_RCC_OscConfig+0x4e2>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 80049dc:	4b11      	ldr	r3, [pc, #68]	; (8004a24 <HAL_RCC_OscConfig+0x470>)
 80049de:	681b      	ldr	r3, [r3, #0]
 80049e0:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 80049e4:	2b00      	cmp	r3, #0
 80049e6:	d0f0      	beq.n	80049ca <HAL_RCC_OscConfig+0x416>
 80049e8:	e054      	b.n	8004a94 <HAL_RCC_OscConfig+0x4e0>
        }
      }
      else
      {
        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();
 80049ea:	4b10      	ldr	r3, [pc, #64]	; (8004a2c <HAL_RCC_OscConfig+0x478>)
 80049ec:	2200      	movs	r2, #0
 80049ee:	601a      	str	r2, [r3, #0]

        /* Get Start Tick */
        tickstart = HAL_GetTick();
 80049f0:	f7fd fd00 	bl	80023f4 <HAL_GetTick>
 80049f4:	6138      	str	r0, [r7, #16]

        /* Wait till PLL is disabled */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 80049f6:	e008      	b.n	8004a0a <HAL_RCC_OscConfig+0x456>
        {
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 80049f8:	f7fd fcfc 	bl	80023f4 <HAL_GetTick>
 80049fc:	4602      	mov	r2, r0
 80049fe:	693b      	ldr	r3, [r7, #16]
 8004a00:	1ad3      	subs	r3, r2, r3
 8004a02:	2b02      	cmp	r3, #2
 8004a04:	d901      	bls.n	8004a0a <HAL_RCC_OscConfig+0x456>
          {
            return HAL_TIMEOUT;
 8004a06:	2303      	movs	r3, #3
 8004a08:	e045      	b.n	8004a96 <HAL_RCC_OscConfig+0x4e2>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 8004a0a:	4b06      	ldr	r3, [pc, #24]	; (8004a24 <HAL_RCC_OscConfig+0x470>)
 8004a0c:	681b      	ldr	r3, [r3, #0]
 8004a0e:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8004a12:	2b00      	cmp	r3, #0
 8004a14:	d1f0      	bne.n	80049f8 <HAL_RCC_OscConfig+0x444>
 8004a16:	e03d      	b.n	8004a94 <HAL_RCC_OscConfig+0x4e0>
      }
    }
    else
    {
      /* Check if there is a request to disable the PLL used as System clock source */
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
 8004a18:	687b      	ldr	r3, [r7, #4]
 8004a1a:	699b      	ldr	r3, [r3, #24]
 8004a1c:	2b01      	cmp	r3, #1
 8004a1e:	d107      	bne.n	8004a30 <HAL_RCC_OscConfig+0x47c>
      {
        return HAL_ERROR;
 8004a20:	2301      	movs	r3, #1
 8004a22:	e038      	b.n	8004a96 <HAL_RCC_OscConfig+0x4e2>
 8004a24:	40023800 	.word	0x40023800
 8004a28:	40007000 	.word	0x40007000
 8004a2c:	42470060 	.word	0x42470060
      }
      else
      {
        /* Do not return HAL_ERROR if request repeats the current configuration */
        pll_config = RCC->PLLCFGR;
 8004a30:	4b1b      	ldr	r3, [pc, #108]	; (8004aa0 <HAL_RCC_OscConfig+0x4ec>)
 8004a32:	685b      	ldr	r3, [r3, #4]
 8004a34:	60fb      	str	r3, [r7, #12]
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)) ||
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLR) != (RCC_OscInitStruct->PLL.PLLR << RCC_PLLCFGR_PLLR_Pos)))
#else
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 8004a36:	687b      	ldr	r3, [r7, #4]
 8004a38:	699b      	ldr	r3, [r3, #24]
 8004a3a:	2b01      	cmp	r3, #1
 8004a3c:	d028      	beq.n	8004a90 <HAL_RCC_OscConfig+0x4dc>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 8004a3e:	68fb      	ldr	r3, [r7, #12]
 8004a40:	f403 0280 	and.w	r2, r3, #4194304	; 0x400000
 8004a44:	687b      	ldr	r3, [r7, #4]
 8004a46:	69db      	ldr	r3, [r3, #28]
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 8004a48:	429a      	cmp	r2, r3
 8004a4a:	d121      	bne.n	8004a90 <HAL_RCC_OscConfig+0x4dc>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
 8004a4c:	68fb      	ldr	r3, [r7, #12]
 8004a4e:	f003 023f 	and.w	r2, r3, #63	; 0x3f
 8004a52:	687b      	ldr	r3, [r7, #4]
 8004a54:	6a1b      	ldr	r3, [r3, #32]
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 8004a56:	429a      	cmp	r2, r3
 8004a58:	d11a      	bne.n	8004a90 <HAL_RCC_OscConfig+0x4dc>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
 8004a5a:	68fa      	ldr	r2, [r7, #12]
 8004a5c:	f647 73c0 	movw	r3, #32704	; 0x7fc0
 8004a60:	4013      	ands	r3, r2
 8004a62:	687a      	ldr	r2, [r7, #4]
 8004a64:	6a52      	ldr	r2, [r2, #36]	; 0x24
 8004a66:	0192      	lsls	r2, r2, #6
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
 8004a68:	4293      	cmp	r3, r2
 8004a6a:	d111      	bne.n	8004a90 <HAL_RCC_OscConfig+0x4dc>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
 8004a6c:	68fb      	ldr	r3, [r7, #12]
 8004a6e:	f403 3240 	and.w	r2, r3, #196608	; 0x30000
 8004a72:	687b      	ldr	r3, [r7, #4]
 8004a74:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8004a76:	085b      	lsrs	r3, r3, #1
 8004a78:	3b01      	subs	r3, #1
 8004a7a:	041b      	lsls	r3, r3, #16
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
 8004a7c:	429a      	cmp	r2, r3
 8004a7e:	d107      	bne.n	8004a90 <HAL_RCC_OscConfig+0x4dc>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)))
 8004a80:	68fb      	ldr	r3, [r7, #12]
 8004a82:	f003 6270 	and.w	r2, r3, #251658240	; 0xf000000
 8004a86:	687b      	ldr	r3, [r7, #4]
 8004a88:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8004a8a:	061b      	lsls	r3, r3, #24
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
 8004a8c:	429a      	cmp	r2, r3
 8004a8e:	d001      	beq.n	8004a94 <HAL_RCC_OscConfig+0x4e0>
#endif
        {
          return HAL_ERROR;
 8004a90:	2301      	movs	r3, #1
 8004a92:	e000      	b.n	8004a96 <HAL_RCC_OscConfig+0x4e2>
        }
      }
    }
  }
  return HAL_OK;
 8004a94:	2300      	movs	r3, #0
}
 8004a96:	4618      	mov	r0, r3
 8004a98:	3718      	adds	r7, #24
 8004a9a:	46bd      	mov	sp, r7
 8004a9c:	bd80      	pop	{r7, pc}
 8004a9e:	bf00      	nop
 8004aa0:	40023800 	.word	0x40023800

08004aa4 <HAL_RCC_ClockConfig>:
  *         HPRE[3:0] bits to ensure that HCLK not exceed the maximum allowed frequency
  *         (for more details refer to section above "Initialization/de-initialization functions")
  * @retval None
  */
HAL_StatusTypeDef HAL_RCC_ClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t FLatency)
{
 8004aa4:	b580      	push	{r7, lr}
 8004aa6:	b084      	sub	sp, #16
 8004aa8:	af00      	add	r7, sp, #0
 8004aaa:	6078      	str	r0, [r7, #4]
 8004aac:	6039      	str	r1, [r7, #0]
  uint32_t tickstart;

  /* Check Null pointer */
  if(RCC_ClkInitStruct == NULL)
 8004aae:	687b      	ldr	r3, [r7, #4]
 8004ab0:	2b00      	cmp	r3, #0
 8004ab2:	d101      	bne.n	8004ab8 <HAL_RCC_ClockConfig+0x14>
  {
    return HAL_ERROR;
 8004ab4:	2301      	movs	r3, #1
 8004ab6:	e0cc      	b.n	8004c52 <HAL_RCC_ClockConfig+0x1ae>
  /* To correctly read data from FLASH memory, the number of wait states (LATENCY)
    must be correctly programmed according to the frequency of the CPU clock
    (HCLK) and the supply voltage of the device. */

  /* Increasing the number of wait states because of higher CPU frequency */
  if(FLatency > __HAL_FLASH_GET_LATENCY())
 8004ab8:	4b68      	ldr	r3, [pc, #416]	; (8004c5c <HAL_RCC_ClockConfig+0x1b8>)
 8004aba:	681b      	ldr	r3, [r3, #0]
 8004abc:	f003 0307 	and.w	r3, r3, #7
 8004ac0:	683a      	ldr	r2, [r7, #0]
 8004ac2:	429a      	cmp	r2, r3
 8004ac4:	d90c      	bls.n	8004ae0 <HAL_RCC_ClockConfig+0x3c>
  {
    /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
    __HAL_FLASH_SET_LATENCY(FLatency);
 8004ac6:	4b65      	ldr	r3, [pc, #404]	; (8004c5c <HAL_RCC_ClockConfig+0x1b8>)
 8004ac8:	683a      	ldr	r2, [r7, #0]
 8004aca:	b2d2      	uxtb	r2, r2
 8004acc:	701a      	strb	r2, [r3, #0]

    /* Check that the new number of wait states is taken into account to access the Flash
    memory by reading the FLASH_ACR register */
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 8004ace:	4b63      	ldr	r3, [pc, #396]	; (8004c5c <HAL_RCC_ClockConfig+0x1b8>)
 8004ad0:	681b      	ldr	r3, [r3, #0]
 8004ad2:	f003 0307 	and.w	r3, r3, #7
 8004ad6:	683a      	ldr	r2, [r7, #0]
 8004ad8:	429a      	cmp	r2, r3
 8004ada:	d001      	beq.n	8004ae0 <HAL_RCC_ClockConfig+0x3c>
    {
      return HAL_ERROR;
 8004adc:	2301      	movs	r3, #1
 8004ade:	e0b8      	b.n	8004c52 <HAL_RCC_ClockConfig+0x1ae>
    }
  }

  /*-------------------------- HCLK Configuration --------------------------*/
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 8004ae0:	687b      	ldr	r3, [r7, #4]
 8004ae2:	681b      	ldr	r3, [r3, #0]
 8004ae4:	f003 0302 	and.w	r3, r3, #2
 8004ae8:	2b00      	cmp	r3, #0
 8004aea:	d020      	beq.n	8004b2e <HAL_RCC_ClockConfig+0x8a>
  {
    /* Set the highest APBx dividers in order to ensure that we do not go through
       a non-spec phase whatever we decrease or increase HCLK. */
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 8004aec:	687b      	ldr	r3, [r7, #4]
 8004aee:	681b      	ldr	r3, [r3, #0]
 8004af0:	f003 0304 	and.w	r3, r3, #4
 8004af4:	2b00      	cmp	r3, #0
 8004af6:	d005      	beq.n	8004b04 <HAL_RCC_ClockConfig+0x60>
    {
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_HCLK_DIV16);
 8004af8:	4b59      	ldr	r3, [pc, #356]	; (8004c60 <HAL_RCC_ClockConfig+0x1bc>)
 8004afa:	689b      	ldr	r3, [r3, #8]
 8004afc:	4a58      	ldr	r2, [pc, #352]	; (8004c60 <HAL_RCC_ClockConfig+0x1bc>)
 8004afe:	f443 53e0 	orr.w	r3, r3, #7168	; 0x1c00
 8004b02:	6093      	str	r3, [r2, #8]
    }

    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 8004b04:	687b      	ldr	r3, [r7, #4]
 8004b06:	681b      	ldr	r3, [r3, #0]
 8004b08:	f003 0308 	and.w	r3, r3, #8
 8004b0c:	2b00      	cmp	r3, #0
 8004b0e:	d005      	beq.n	8004b1c <HAL_RCC_ClockConfig+0x78>
    {
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, (RCC_HCLK_DIV16 << 3));
 8004b10:	4b53      	ldr	r3, [pc, #332]	; (8004c60 <HAL_RCC_ClockConfig+0x1bc>)
 8004b12:	689b      	ldr	r3, [r3, #8]
 8004b14:	4a52      	ldr	r2, [pc, #328]	; (8004c60 <HAL_RCC_ClockConfig+0x1bc>)
 8004b16:	f443 4360 	orr.w	r3, r3, #57344	; 0xe000
 8004b1a:	6093      	str	r3, [r2, #8]
    }

    assert_param(IS_RCC_HCLK(RCC_ClkInitStruct->AHBCLKDivider));
    MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 8004b1c:	4b50      	ldr	r3, [pc, #320]	; (8004c60 <HAL_RCC_ClockConfig+0x1bc>)
 8004b1e:	689b      	ldr	r3, [r3, #8]
 8004b20:	f023 02f0 	bic.w	r2, r3, #240	; 0xf0
 8004b24:	687b      	ldr	r3, [r7, #4]
 8004b26:	689b      	ldr	r3, [r3, #8]
 8004b28:	494d      	ldr	r1, [pc, #308]	; (8004c60 <HAL_RCC_ClockConfig+0x1bc>)
 8004b2a:	4313      	orrs	r3, r2
 8004b2c:	608b      	str	r3, [r1, #8]
  }

  /*------------------------- SYSCLK Configuration ---------------------------*/
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 8004b2e:	687b      	ldr	r3, [r7, #4]
 8004b30:	681b      	ldr	r3, [r3, #0]
 8004b32:	f003 0301 	and.w	r3, r3, #1
 8004b36:	2b00      	cmp	r3, #0
 8004b38:	d044      	beq.n	8004bc4 <HAL_RCC_ClockConfig+0x120>
  {
    assert_param(IS_RCC_SYSCLKSOURCE(RCC_ClkInitStruct->SYSCLKSource));

    /* HSE is selected as System Clock Source */
    if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 8004b3a:	687b      	ldr	r3, [r7, #4]
 8004b3c:	685b      	ldr	r3, [r3, #4]
 8004b3e:	2b01      	cmp	r3, #1
 8004b40:	d107      	bne.n	8004b52 <HAL_RCC_ClockConfig+0xae>
    {
      /* Check the HSE ready flag */
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8004b42:	4b47      	ldr	r3, [pc, #284]	; (8004c60 <HAL_RCC_ClockConfig+0x1bc>)
 8004b44:	681b      	ldr	r3, [r3, #0]
 8004b46:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8004b4a:	2b00      	cmp	r3, #0
 8004b4c:	d119      	bne.n	8004b82 <HAL_RCC_ClockConfig+0xde>
      {
        return HAL_ERROR;
 8004b4e:	2301      	movs	r3, #1
 8004b50:	e07f      	b.n	8004c52 <HAL_RCC_ClockConfig+0x1ae>
      }
    }
    /* PLL is selected as System Clock Source */
    else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 8004b52:	687b      	ldr	r3, [r7, #4]
 8004b54:	685b      	ldr	r3, [r3, #4]
 8004b56:	2b02      	cmp	r3, #2
 8004b58:	d003      	beq.n	8004b62 <HAL_RCC_ClockConfig+0xbe>
            (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLRCLK))
 8004b5a:	687b      	ldr	r3, [r7, #4]
 8004b5c:	685b      	ldr	r3, [r3, #4]
    else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 8004b5e:	2b03      	cmp	r3, #3
 8004b60:	d107      	bne.n	8004b72 <HAL_RCC_ClockConfig+0xce>
    {
      /* Check the PLL ready flag */
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8004b62:	4b3f      	ldr	r3, [pc, #252]	; (8004c60 <HAL_RCC_ClockConfig+0x1bc>)
 8004b64:	681b      	ldr	r3, [r3, #0]
 8004b66:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8004b6a:	2b00      	cmp	r3, #0
 8004b6c:	d109      	bne.n	8004b82 <HAL_RCC_ClockConfig+0xde>
      {
        return HAL_ERROR;
 8004b6e:	2301      	movs	r3, #1
 8004b70:	e06f      	b.n	8004c52 <HAL_RCC_ClockConfig+0x1ae>
    }
    /* HSI is selected as System Clock Source */
    else
    {
      /* Check the HSI ready flag */
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8004b72:	4b3b      	ldr	r3, [pc, #236]	; (8004c60 <HAL_RCC_ClockConfig+0x1bc>)
 8004b74:	681b      	ldr	r3, [r3, #0]
 8004b76:	f003 0302 	and.w	r3, r3, #2
 8004b7a:	2b00      	cmp	r3, #0
 8004b7c:	d101      	bne.n	8004b82 <HAL_RCC_ClockConfig+0xde>
      {
        return HAL_ERROR;
 8004b7e:	2301      	movs	r3, #1
 8004b80:	e067      	b.n	8004c52 <HAL_RCC_ClockConfig+0x1ae>
      }
    }

    __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 8004b82:	4b37      	ldr	r3, [pc, #220]	; (8004c60 <HAL_RCC_ClockConfig+0x1bc>)
 8004b84:	689b      	ldr	r3, [r3, #8]
 8004b86:	f023 0203 	bic.w	r2, r3, #3
 8004b8a:	687b      	ldr	r3, [r7, #4]
 8004b8c:	685b      	ldr	r3, [r3, #4]
 8004b8e:	4934      	ldr	r1, [pc, #208]	; (8004c60 <HAL_RCC_ClockConfig+0x1bc>)
 8004b90:	4313      	orrs	r3, r2
 8004b92:	608b      	str	r3, [r1, #8]

    /* Get Start Tick */
    tickstart = HAL_GetTick();
 8004b94:	f7fd fc2e 	bl	80023f4 <HAL_GetTick>
 8004b98:	60f8      	str	r0, [r7, #12]

    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 8004b9a:	e00a      	b.n	8004bb2 <HAL_RCC_ClockConfig+0x10e>
    {
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 8004b9c:	f7fd fc2a 	bl	80023f4 <HAL_GetTick>
 8004ba0:	4602      	mov	r2, r0
 8004ba2:	68fb      	ldr	r3, [r7, #12]
 8004ba4:	1ad3      	subs	r3, r2, r3
 8004ba6:	f241 3288 	movw	r2, #5000	; 0x1388
 8004baa:	4293      	cmp	r3, r2
 8004bac:	d901      	bls.n	8004bb2 <HAL_RCC_ClockConfig+0x10e>
      {
        return HAL_TIMEOUT;
 8004bae:	2303      	movs	r3, #3
 8004bb0:	e04f      	b.n	8004c52 <HAL_RCC_ClockConfig+0x1ae>
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 8004bb2:	4b2b      	ldr	r3, [pc, #172]	; (8004c60 <HAL_RCC_ClockConfig+0x1bc>)
 8004bb4:	689b      	ldr	r3, [r3, #8]
 8004bb6:	f003 020c 	and.w	r2, r3, #12
 8004bba:	687b      	ldr	r3, [r7, #4]
 8004bbc:	685b      	ldr	r3, [r3, #4]
 8004bbe:	009b      	lsls	r3, r3, #2
 8004bc0:	429a      	cmp	r2, r3
 8004bc2:	d1eb      	bne.n	8004b9c <HAL_RCC_ClockConfig+0xf8>
      }
    }
  }

  /* Decreasing the number of wait states because of lower CPU frequency */
  if(FLatency < __HAL_FLASH_GET_LATENCY())
 8004bc4:	4b25      	ldr	r3, [pc, #148]	; (8004c5c <HAL_RCC_ClockConfig+0x1b8>)
 8004bc6:	681b      	ldr	r3, [r3, #0]
 8004bc8:	f003 0307 	and.w	r3, r3, #7
 8004bcc:	683a      	ldr	r2, [r7, #0]
 8004bce:	429a      	cmp	r2, r3
 8004bd0:	d20c      	bcs.n	8004bec <HAL_RCC_ClockConfig+0x148>
  {
     /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
    __HAL_FLASH_SET_LATENCY(FLatency);
 8004bd2:	4b22      	ldr	r3, [pc, #136]	; (8004c5c <HAL_RCC_ClockConfig+0x1b8>)
 8004bd4:	683a      	ldr	r2, [r7, #0]
 8004bd6:	b2d2      	uxtb	r2, r2
 8004bd8:	701a      	strb	r2, [r3, #0]

    /* Check that the new number of wait states is taken into account to access the Flash
    memory by reading the FLASH_ACR register */
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 8004bda:	4b20      	ldr	r3, [pc, #128]	; (8004c5c <HAL_RCC_ClockConfig+0x1b8>)
 8004bdc:	681b      	ldr	r3, [r3, #0]
 8004bde:	f003 0307 	and.w	r3, r3, #7
 8004be2:	683a      	ldr	r2, [r7, #0]
 8004be4:	429a      	cmp	r2, r3
 8004be6:	d001      	beq.n	8004bec <HAL_RCC_ClockConfig+0x148>
    {
      return HAL_ERROR;
 8004be8:	2301      	movs	r3, #1
 8004bea:	e032      	b.n	8004c52 <HAL_RCC_ClockConfig+0x1ae>
    }
  }

  /*-------------------------- PCLK1 Configuration ---------------------------*/
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 8004bec:	687b      	ldr	r3, [r7, #4]
 8004bee:	681b      	ldr	r3, [r3, #0]
 8004bf0:	f003 0304 	and.w	r3, r3, #4
 8004bf4:	2b00      	cmp	r3, #0
 8004bf6:	d008      	beq.n	8004c0a <HAL_RCC_ClockConfig+0x166>
  {
    assert_param(IS_RCC_PCLK(RCC_ClkInitStruct->APB1CLKDivider));
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_ClkInitStruct->APB1CLKDivider);
 8004bf8:	4b19      	ldr	r3, [pc, #100]	; (8004c60 <HAL_RCC_ClockConfig+0x1bc>)
 8004bfa:	689b      	ldr	r3, [r3, #8]
 8004bfc:	f423 52e0 	bic.w	r2, r3, #7168	; 0x1c00
 8004c00:	687b      	ldr	r3, [r7, #4]
 8004c02:	68db      	ldr	r3, [r3, #12]
 8004c04:	4916      	ldr	r1, [pc, #88]	; (8004c60 <HAL_RCC_ClockConfig+0x1bc>)
 8004c06:	4313      	orrs	r3, r2
 8004c08:	608b      	str	r3, [r1, #8]
  }

  /*-------------------------- PCLK2 Configuration ---------------------------*/
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 8004c0a:	687b      	ldr	r3, [r7, #4]
 8004c0c:	681b      	ldr	r3, [r3, #0]
 8004c0e:	f003 0308 	and.w	r3, r3, #8
 8004c12:	2b00      	cmp	r3, #0
 8004c14:	d009      	beq.n	8004c2a <HAL_RCC_ClockConfig+0x186>
  {
    assert_param(IS_RCC_PCLK(RCC_ClkInitStruct->APB2CLKDivider));
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, ((RCC_ClkInitStruct->APB2CLKDivider) << 3U));
 8004c16:	4b12      	ldr	r3, [pc, #72]	; (8004c60 <HAL_RCC_ClockConfig+0x1bc>)
 8004c18:	689b      	ldr	r3, [r3, #8]
 8004c1a:	f423 4260 	bic.w	r2, r3, #57344	; 0xe000
 8004c1e:	687b      	ldr	r3, [r7, #4]
 8004c20:	691b      	ldr	r3, [r3, #16]
 8004c22:	00db      	lsls	r3, r3, #3
 8004c24:	490e      	ldr	r1, [pc, #56]	; (8004c60 <HAL_RCC_ClockConfig+0x1bc>)
 8004c26:	4313      	orrs	r3, r2
 8004c28:	608b      	str	r3, [r1, #8]
  }

  /* Update the SystemCoreClock global variable */
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CFGR_HPRE_Pos];
 8004c2a:	f000 f821 	bl	8004c70 <HAL_RCC_GetSysClockFreq>
 8004c2e:	4602      	mov	r2, r0
 8004c30:	4b0b      	ldr	r3, [pc, #44]	; (8004c60 <HAL_RCC_ClockConfig+0x1bc>)
 8004c32:	689b      	ldr	r3, [r3, #8]
 8004c34:	091b      	lsrs	r3, r3, #4
 8004c36:	f003 030f 	and.w	r3, r3, #15
 8004c3a:	490a      	ldr	r1, [pc, #40]	; (8004c64 <HAL_RCC_ClockConfig+0x1c0>)
 8004c3c:	5ccb      	ldrb	r3, [r1, r3]
 8004c3e:	fa22 f303 	lsr.w	r3, r2, r3
 8004c42:	4a09      	ldr	r2, [pc, #36]	; (8004c68 <HAL_RCC_ClockConfig+0x1c4>)
 8004c44:	6013      	str	r3, [r2, #0]

  /* Configure the source of time base considering new system clocks settings */
  HAL_InitTick (uwTickPrio);
 8004c46:	4b09      	ldr	r3, [pc, #36]	; (8004c6c <HAL_RCC_ClockConfig+0x1c8>)
 8004c48:	681b      	ldr	r3, [r3, #0]
 8004c4a:	4618      	mov	r0, r3
 8004c4c:	f7fd fb8e 	bl	800236c <HAL_InitTick>

  return HAL_OK;
 8004c50:	2300      	movs	r3, #0
}
 8004c52:	4618      	mov	r0, r3
 8004c54:	3710      	adds	r7, #16
 8004c56:	46bd      	mov	sp, r7
 8004c58:	bd80      	pop	{r7, pc}
 8004c5a:	bf00      	nop
 8004c5c:	40023c00 	.word	0x40023c00
 8004c60:	40023800 	.word	0x40023800
 8004c64:	0802e498 	.word	0x0802e498
 8004c68:	2000000c 	.word	0x2000000c
 8004c6c:	20000010 	.word	0x20000010

08004c70 <HAL_RCC_GetSysClockFreq>:
  *
  *
  * @retval SYSCLK frequency
  */
__weak uint32_t HAL_RCC_GetSysClockFreq(void)
{
 8004c70:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 8004c74:	b090      	sub	sp, #64	; 0x40
 8004c76:	af00      	add	r7, sp, #0
  uint32_t pllm = 0U, pllvco = 0U, pllp = 0U;
 8004c78:	2300      	movs	r3, #0
 8004c7a:	637b      	str	r3, [r7, #52]	; 0x34
 8004c7c:	2300      	movs	r3, #0
 8004c7e:	63fb      	str	r3, [r7, #60]	; 0x3c
 8004c80:	2300      	movs	r3, #0
 8004c82:	633b      	str	r3, [r7, #48]	; 0x30
  uint32_t sysclockfreq = 0U;
 8004c84:	2300      	movs	r3, #0
 8004c86:	63bb      	str	r3, [r7, #56]	; 0x38

  /* Get SYSCLK source -------------------------------------------------------*/
  switch (RCC->CFGR & RCC_CFGR_SWS)
 8004c88:	4b59      	ldr	r3, [pc, #356]	; (8004df0 <HAL_RCC_GetSysClockFreq+0x180>)
 8004c8a:	689b      	ldr	r3, [r3, #8]
 8004c8c:	f003 030c 	and.w	r3, r3, #12
 8004c90:	2b08      	cmp	r3, #8
 8004c92:	d00d      	beq.n	8004cb0 <HAL_RCC_GetSysClockFreq+0x40>
 8004c94:	2b08      	cmp	r3, #8
 8004c96:	f200 80a1 	bhi.w	8004ddc <HAL_RCC_GetSysClockFreq+0x16c>
 8004c9a:	2b00      	cmp	r3, #0
 8004c9c:	d002      	beq.n	8004ca4 <HAL_RCC_GetSysClockFreq+0x34>
 8004c9e:	2b04      	cmp	r3, #4
 8004ca0:	d003      	beq.n	8004caa <HAL_RCC_GetSysClockFreq+0x3a>
 8004ca2:	e09b      	b.n	8004ddc <HAL_RCC_GetSysClockFreq+0x16c>
  {
    case RCC_CFGR_SWS_HSI:  /* HSI used as system clock source */
    {
      sysclockfreq = HSI_VALUE;
 8004ca4:	4b53      	ldr	r3, [pc, #332]	; (8004df4 <HAL_RCC_GetSysClockFreq+0x184>)
 8004ca6:	63bb      	str	r3, [r7, #56]	; 0x38
       break;
 8004ca8:	e09b      	b.n	8004de2 <HAL_RCC_GetSysClockFreq+0x172>
    }
    case RCC_CFGR_SWS_HSE:  /* HSE used as system clock  source */
    {
      sysclockfreq = HSE_VALUE;
 8004caa:	4b53      	ldr	r3, [pc, #332]	; (8004df8 <HAL_RCC_GetSysClockFreq+0x188>)
 8004cac:	63bb      	str	r3, [r7, #56]	; 0x38
      break;
 8004cae:	e098      	b.n	8004de2 <HAL_RCC_GetSysClockFreq+0x172>
    }
    case RCC_CFGR_SWS_PLL:  /* PLL used as system clock  source */
    {
      /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLLM) * PLLN
      SYSCLK = PLL_VCO / PLLP */
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 8004cb0:	4b4f      	ldr	r3, [pc, #316]	; (8004df0 <HAL_RCC_GetSysClockFreq+0x180>)
 8004cb2:	685b      	ldr	r3, [r3, #4]
 8004cb4:	f003 033f 	and.w	r3, r3, #63	; 0x3f
 8004cb8:	637b      	str	r3, [r7, #52]	; 0x34
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 8004cba:	4b4d      	ldr	r3, [pc, #308]	; (8004df0 <HAL_RCC_GetSysClockFreq+0x180>)
 8004cbc:	685b      	ldr	r3, [r3, #4]
 8004cbe:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 8004cc2:	2b00      	cmp	r3, #0
 8004cc4:	d028      	beq.n	8004d18 <HAL_RCC_GetSysClockFreq+0xa8>
      {
        /* HSE used as PLL clock source */
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8004cc6:	4b4a      	ldr	r3, [pc, #296]	; (8004df0 <HAL_RCC_GetSysClockFreq+0x180>)
 8004cc8:	685b      	ldr	r3, [r3, #4]
 8004cca:	099b      	lsrs	r3, r3, #6
 8004ccc:	2200      	movs	r2, #0
 8004cce:	623b      	str	r3, [r7, #32]
 8004cd0:	627a      	str	r2, [r7, #36]	; 0x24
 8004cd2:	6a3b      	ldr	r3, [r7, #32]
 8004cd4:	f3c3 0008 	ubfx	r0, r3, #0, #9
 8004cd8:	2100      	movs	r1, #0
 8004cda:	4b47      	ldr	r3, [pc, #284]	; (8004df8 <HAL_RCC_GetSysClockFreq+0x188>)
 8004cdc:	fb03 f201 	mul.w	r2, r3, r1
 8004ce0:	2300      	movs	r3, #0
 8004ce2:	fb00 f303 	mul.w	r3, r0, r3
 8004ce6:	4413      	add	r3, r2
 8004ce8:	4a43      	ldr	r2, [pc, #268]	; (8004df8 <HAL_RCC_GetSysClockFreq+0x188>)
 8004cea:	fba0 1202 	umull	r1, r2, r0, r2
 8004cee:	62fa      	str	r2, [r7, #44]	; 0x2c
 8004cf0:	460a      	mov	r2, r1
 8004cf2:	62ba      	str	r2, [r7, #40]	; 0x28
 8004cf4:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 8004cf6:	4413      	add	r3, r2
 8004cf8:	62fb      	str	r3, [r7, #44]	; 0x2c
 8004cfa:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8004cfc:	2200      	movs	r2, #0
 8004cfe:	61bb      	str	r3, [r7, #24]
 8004d00:	61fa      	str	r2, [r7, #28]
 8004d02:	e9d7 2306 	ldrd	r2, r3, [r7, #24]
 8004d06:	e9d7 010a 	ldrd	r0, r1, [r7, #40]	; 0x28
 8004d0a:	f7fb ff55 	bl	8000bb8 <__aeabi_uldivmod>
 8004d0e:	4602      	mov	r2, r0
 8004d10:	460b      	mov	r3, r1
 8004d12:	4613      	mov	r3, r2
 8004d14:	63fb      	str	r3, [r7, #60]	; 0x3c
 8004d16:	e053      	b.n	8004dc0 <HAL_RCC_GetSysClockFreq+0x150>
      }
      else
      {
        /* HSI used as PLL clock source */
        pllvco = (uint32_t) ((((uint64_t) HSI_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8004d18:	4b35      	ldr	r3, [pc, #212]	; (8004df0 <HAL_RCC_GetSysClockFreq+0x180>)
 8004d1a:	685b      	ldr	r3, [r3, #4]
 8004d1c:	099b      	lsrs	r3, r3, #6
 8004d1e:	2200      	movs	r2, #0
 8004d20:	613b      	str	r3, [r7, #16]
 8004d22:	617a      	str	r2, [r7, #20]
 8004d24:	693b      	ldr	r3, [r7, #16]
 8004d26:	f3c3 0a08 	ubfx	sl, r3, #0, #9
 8004d2a:	f04f 0b00 	mov.w	fp, #0
 8004d2e:	4652      	mov	r2, sl
 8004d30:	465b      	mov	r3, fp
 8004d32:	f04f 0000 	mov.w	r0, #0
 8004d36:	f04f 0100 	mov.w	r1, #0
 8004d3a:	0159      	lsls	r1, r3, #5
 8004d3c:	ea41 61d2 	orr.w	r1, r1, r2, lsr #27
 8004d40:	0150      	lsls	r0, r2, #5
 8004d42:	4602      	mov	r2, r0
 8004d44:	460b      	mov	r3, r1
 8004d46:	ebb2 080a 	subs.w	r8, r2, sl
 8004d4a:	eb63 090b 	sbc.w	r9, r3, fp
 8004d4e:	f04f 0200 	mov.w	r2, #0
 8004d52:	f04f 0300 	mov.w	r3, #0
 8004d56:	ea4f 1389 	mov.w	r3, r9, lsl #6
 8004d5a:	ea43 6398 	orr.w	r3, r3, r8, lsr #26
 8004d5e:	ea4f 1288 	mov.w	r2, r8, lsl #6
 8004d62:	ebb2 0408 	subs.w	r4, r2, r8
 8004d66:	eb63 0509 	sbc.w	r5, r3, r9
 8004d6a:	f04f 0200 	mov.w	r2, #0
 8004d6e:	f04f 0300 	mov.w	r3, #0
 8004d72:	00eb      	lsls	r3, r5, #3
 8004d74:	ea43 7354 	orr.w	r3, r3, r4, lsr #29
 8004d78:	00e2      	lsls	r2, r4, #3
 8004d7a:	4614      	mov	r4, r2
 8004d7c:	461d      	mov	r5, r3
 8004d7e:	eb14 030a 	adds.w	r3, r4, sl
 8004d82:	603b      	str	r3, [r7, #0]
 8004d84:	eb45 030b 	adc.w	r3, r5, fp
 8004d88:	607b      	str	r3, [r7, #4]
 8004d8a:	f04f 0200 	mov.w	r2, #0
 8004d8e:	f04f 0300 	mov.w	r3, #0
 8004d92:	e9d7 4500 	ldrd	r4, r5, [r7]
 8004d96:	4629      	mov	r1, r5
 8004d98:	028b      	lsls	r3, r1, #10
 8004d9a:	4621      	mov	r1, r4
 8004d9c:	ea43 5391 	orr.w	r3, r3, r1, lsr #22
 8004da0:	4621      	mov	r1, r4
 8004da2:	028a      	lsls	r2, r1, #10
 8004da4:	4610      	mov	r0, r2
 8004da6:	4619      	mov	r1, r3
 8004da8:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8004daa:	2200      	movs	r2, #0
 8004dac:	60bb      	str	r3, [r7, #8]
 8004dae:	60fa      	str	r2, [r7, #12]
 8004db0:	e9d7 2302 	ldrd	r2, r3, [r7, #8]
 8004db4:	f7fb ff00 	bl	8000bb8 <__aeabi_uldivmod>
 8004db8:	4602      	mov	r2, r0
 8004dba:	460b      	mov	r3, r1
 8004dbc:	4613      	mov	r3, r2
 8004dbe:	63fb      	str	r3, [r7, #60]	; 0x3c
      }
      pllp = ((((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >> RCC_PLLCFGR_PLLP_Pos) + 1U) *2U);
 8004dc0:	4b0b      	ldr	r3, [pc, #44]	; (8004df0 <HAL_RCC_GetSysClockFreq+0x180>)
 8004dc2:	685b      	ldr	r3, [r3, #4]
 8004dc4:	0c1b      	lsrs	r3, r3, #16
 8004dc6:	f003 0303 	and.w	r3, r3, #3
 8004dca:	3301      	adds	r3, #1
 8004dcc:	005b      	lsls	r3, r3, #1
 8004dce:	633b      	str	r3, [r7, #48]	; 0x30

      sysclockfreq = pllvco/pllp;
 8004dd0:	6bfa      	ldr	r2, [r7, #60]	; 0x3c
 8004dd2:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8004dd4:	fbb2 f3f3 	udiv	r3, r2, r3
 8004dd8:	63bb      	str	r3, [r7, #56]	; 0x38
      break;
 8004dda:	e002      	b.n	8004de2 <HAL_RCC_GetSysClockFreq+0x172>
    }
    default:
    {
      sysclockfreq = HSI_VALUE;
 8004ddc:	4b05      	ldr	r3, [pc, #20]	; (8004df4 <HAL_RCC_GetSysClockFreq+0x184>)
 8004dde:	63bb      	str	r3, [r7, #56]	; 0x38
      break;
 8004de0:	bf00      	nop
    }
  }
  return sysclockfreq;
 8004de2:	6bbb      	ldr	r3, [r7, #56]	; 0x38
}
 8004de4:	4618      	mov	r0, r3
 8004de6:	3740      	adds	r7, #64	; 0x40
 8004de8:	46bd      	mov	sp, r7
 8004dea:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 8004dee:	bf00      	nop
 8004df0:	40023800 	.word	0x40023800
 8004df4:	00f42400 	.word	0x00f42400
 8004df8:	017d7840 	.word	0x017d7840

08004dfc <HAL_RCC_GetHCLKFreq>:
  * @note   The SystemCoreClock CMSIS variable is used to store System Clock Frequency
  *         and updated within this function
  * @retval HCLK frequency
  */
uint32_t HAL_RCC_GetHCLKFreq(void)
{
 8004dfc:	b480      	push	{r7}
 8004dfe:	af00      	add	r7, sp, #0
  return SystemCoreClock;
 8004e00:	4b03      	ldr	r3, [pc, #12]	; (8004e10 <HAL_RCC_GetHCLKFreq+0x14>)
 8004e02:	681b      	ldr	r3, [r3, #0]
}
 8004e04:	4618      	mov	r0, r3
 8004e06:	46bd      	mov	sp, r7
 8004e08:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004e0c:	4770      	bx	lr
 8004e0e:	bf00      	nop
 8004e10:	2000000c 	.word	0x2000000c

08004e14 <HAL_SPI_Init>:
  * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
  *               the configuration information for SPI module.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SPI_Init(SPI_HandleTypeDef *hspi)
{
 8004e14:	b580      	push	{r7, lr}
 8004e16:	b082      	sub	sp, #8
 8004e18:	af00      	add	r7, sp, #0
 8004e1a:	6078      	str	r0, [r7, #4]
  /* Check the SPI handle allocation */
  if (hspi == NULL)
 8004e1c:	687b      	ldr	r3, [r7, #4]
 8004e1e:	2b00      	cmp	r3, #0
 8004e20:	d101      	bne.n	8004e26 <HAL_SPI_Init+0x12>
  {
    return HAL_ERROR;
 8004e22:	2301      	movs	r3, #1
 8004e24:	e07b      	b.n	8004f1e <HAL_SPI_Init+0x10a>
  assert_param(IS_SPI_DATASIZE(hspi->Init.DataSize));
  assert_param(IS_SPI_NSS(hspi->Init.NSS));
  assert_param(IS_SPI_BAUDRATE_PRESCALER(hspi->Init.BaudRatePrescaler));
  assert_param(IS_SPI_FIRST_BIT(hspi->Init.FirstBit));
  assert_param(IS_SPI_TIMODE(hspi->Init.TIMode));
  if (hspi->Init.TIMode == SPI_TIMODE_DISABLE)
 8004e26:	687b      	ldr	r3, [r7, #4]
 8004e28:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004e2a:	2b00      	cmp	r3, #0
 8004e2c:	d108      	bne.n	8004e40 <HAL_SPI_Init+0x2c>
  {
    assert_param(IS_SPI_CPOL(hspi->Init.CLKPolarity));
    assert_param(IS_SPI_CPHA(hspi->Init.CLKPhase));

    if (hspi->Init.Mode == SPI_MODE_MASTER)
 8004e2e:	687b      	ldr	r3, [r7, #4]
 8004e30:	685b      	ldr	r3, [r3, #4]
 8004e32:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 8004e36:	d009      	beq.n	8004e4c <HAL_SPI_Init+0x38>
      assert_param(IS_SPI_BAUDRATE_PRESCALER(hspi->Init.BaudRatePrescaler));
    }
    else
    {
      /* Baudrate prescaler not use in Motoraola Slave mode. force to default value */
      hspi->Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 8004e38:	687b      	ldr	r3, [r7, #4]
 8004e3a:	2200      	movs	r2, #0
 8004e3c:	61da      	str	r2, [r3, #28]
 8004e3e:	e005      	b.n	8004e4c <HAL_SPI_Init+0x38>
  else
  {
    assert_param(IS_SPI_BAUDRATE_PRESCALER(hspi->Init.BaudRatePrescaler));

    /* Force polarity and phase to TI protocaol requirements */
    hspi->Init.CLKPolarity = SPI_POLARITY_LOW;
 8004e40:	687b      	ldr	r3, [r7, #4]
 8004e42:	2200      	movs	r2, #0
 8004e44:	611a      	str	r2, [r3, #16]
    hspi->Init.CLKPhase    = SPI_PHASE_1EDGE;
 8004e46:	687b      	ldr	r3, [r7, #4]
 8004e48:	2200      	movs	r2, #0
 8004e4a:	615a      	str	r2, [r3, #20]
  if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
  {
    assert_param(IS_SPI_CRC_POLYNOMIAL(hspi->Init.CRCPolynomial));
  }
#else
  hspi->Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 8004e4c:	687b      	ldr	r3, [r7, #4]
 8004e4e:	2200      	movs	r2, #0
 8004e50:	629a      	str	r2, [r3, #40]	; 0x28
#endif /* USE_SPI_CRC */

  if (hspi->State == HAL_SPI_STATE_RESET)
 8004e52:	687b      	ldr	r3, [r7, #4]
 8004e54:	f893 3051 	ldrb.w	r3, [r3, #81]	; 0x51
 8004e58:	b2db      	uxtb	r3, r3
 8004e5a:	2b00      	cmp	r3, #0
 8004e5c:	d106      	bne.n	8004e6c <HAL_SPI_Init+0x58>
  {
    /* Allocate lock resource and initialize it */
    hspi->Lock = HAL_UNLOCKED;
 8004e5e:	687b      	ldr	r3, [r7, #4]
 8004e60:	2200      	movs	r2, #0
 8004e62:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50

    /* Init the low level hardware : GPIO, CLOCK, NVIC... */
    hspi->MspInitCallback(hspi);
#else
    /* Init the low level hardware : GPIO, CLOCK, NVIC... */
    HAL_SPI_MspInit(hspi);
 8004e66:	6878      	ldr	r0, [r7, #4]
 8004e68:	f7fc fc18 	bl	800169c <HAL_SPI_MspInit>
#endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
  }

  hspi->State = HAL_SPI_STATE_BUSY;
 8004e6c:	687b      	ldr	r3, [r7, #4]
 8004e6e:	2202      	movs	r2, #2
 8004e70:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51

  /* Disable the selected SPI peripheral */
  __HAL_SPI_DISABLE(hspi);
 8004e74:	687b      	ldr	r3, [r7, #4]
 8004e76:	681b      	ldr	r3, [r3, #0]
 8004e78:	681a      	ldr	r2, [r3, #0]
 8004e7a:	687b      	ldr	r3, [r7, #4]
 8004e7c:	681b      	ldr	r3, [r3, #0]
 8004e7e:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 8004e82:	601a      	str	r2, [r3, #0]

  /*----------------------- SPIx CR1 & CR2 Configuration ---------------------*/
  /* Configure : SPI Mode, Communication Mode, Data size, Clock polarity and phase, NSS management,
  Communication speed, First bit and CRC calculation state */
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 8004e84:	687b      	ldr	r3, [r7, #4]
 8004e86:	685b      	ldr	r3, [r3, #4]
 8004e88:	f403 7282 	and.w	r2, r3, #260	; 0x104
 8004e8c:	687b      	ldr	r3, [r7, #4]
 8004e8e:	689b      	ldr	r3, [r3, #8]
 8004e90:	f403 4304 	and.w	r3, r3, #33792	; 0x8400
 8004e94:	431a      	orrs	r2, r3
 8004e96:	687b      	ldr	r3, [r7, #4]
 8004e98:	68db      	ldr	r3, [r3, #12]
 8004e9a:	f403 6300 	and.w	r3, r3, #2048	; 0x800
 8004e9e:	431a      	orrs	r2, r3
 8004ea0:	687b      	ldr	r3, [r7, #4]
 8004ea2:	691b      	ldr	r3, [r3, #16]
 8004ea4:	f003 0302 	and.w	r3, r3, #2
 8004ea8:	431a      	orrs	r2, r3
 8004eaa:	687b      	ldr	r3, [r7, #4]
 8004eac:	695b      	ldr	r3, [r3, #20]
 8004eae:	f003 0301 	and.w	r3, r3, #1
 8004eb2:	431a      	orrs	r2, r3
 8004eb4:	687b      	ldr	r3, [r7, #4]
 8004eb6:	699b      	ldr	r3, [r3, #24]
 8004eb8:	f403 7300 	and.w	r3, r3, #512	; 0x200
 8004ebc:	431a      	orrs	r2, r3
 8004ebe:	687b      	ldr	r3, [r7, #4]
 8004ec0:	69db      	ldr	r3, [r3, #28]
 8004ec2:	f003 0338 	and.w	r3, r3, #56	; 0x38
 8004ec6:	431a      	orrs	r2, r3
 8004ec8:	687b      	ldr	r3, [r7, #4]
 8004eca:	6a1b      	ldr	r3, [r3, #32]
 8004ecc:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8004ed0:	ea42 0103 	orr.w	r1, r2, r3
 8004ed4:	687b      	ldr	r3, [r7, #4]
 8004ed6:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8004ed8:	f403 5200 	and.w	r2, r3, #8192	; 0x2000
 8004edc:	687b      	ldr	r3, [r7, #4]
 8004ede:	681b      	ldr	r3, [r3, #0]
 8004ee0:	430a      	orrs	r2, r1
 8004ee2:	601a      	str	r2, [r3, #0]
                                  (hspi->Init.BaudRatePrescaler & SPI_CR1_BR_Msk) |
                                  (hspi->Init.FirstBit  & SPI_CR1_LSBFIRST) |
                                  (hspi->Init.CRCCalculation & SPI_CR1_CRCEN)));

  /* Configure : NSS management, TI Mode */
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | (hspi->Init.TIMode & SPI_CR2_FRF)));
 8004ee4:	687b      	ldr	r3, [r7, #4]
 8004ee6:	699b      	ldr	r3, [r3, #24]
 8004ee8:	0c1b      	lsrs	r3, r3, #16
 8004eea:	f003 0104 	and.w	r1, r3, #4
 8004eee:	687b      	ldr	r3, [r7, #4]
 8004ef0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004ef2:	f003 0210 	and.w	r2, r3, #16
 8004ef6:	687b      	ldr	r3, [r7, #4]
 8004ef8:	681b      	ldr	r3, [r3, #0]
 8004efa:	430a      	orrs	r2, r1
 8004efc:	605a      	str	r2, [r3, #4]
  }
#endif /* USE_SPI_CRC */

#if defined(SPI_I2SCFGR_I2SMOD)
  /* Activate the SPI mode (Make sure that I2SMOD bit in I2SCFGR register is reset) */
  CLEAR_BIT(hspi->Instance->I2SCFGR, SPI_I2SCFGR_I2SMOD);
 8004efe:	687b      	ldr	r3, [r7, #4]
 8004f00:	681b      	ldr	r3, [r3, #0]
 8004f02:	69da      	ldr	r2, [r3, #28]
 8004f04:	687b      	ldr	r3, [r7, #4]
 8004f06:	681b      	ldr	r3, [r3, #0]
 8004f08:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 8004f0c:	61da      	str	r2, [r3, #28]
#endif /* SPI_I2SCFGR_I2SMOD */

  hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 8004f0e:	687b      	ldr	r3, [r7, #4]
 8004f10:	2200      	movs	r2, #0
 8004f12:	655a      	str	r2, [r3, #84]	; 0x54
  hspi->State     = HAL_SPI_STATE_READY;
 8004f14:	687b      	ldr	r3, [r7, #4]
 8004f16:	2201      	movs	r2, #1
 8004f18:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51

  return HAL_OK;
 8004f1c:	2300      	movs	r3, #0
}
 8004f1e:	4618      	mov	r0, r3
 8004f20:	3708      	adds	r7, #8
 8004f22:	46bd      	mov	sp, r7
 8004f24:	bd80      	pop	{r7, pc}

08004f26 <HAL_SPI_Transmit>:
  * @param  Size amount of data to be sent
  * @param  Timeout Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SPI_Transmit(SPI_HandleTypeDef *hspi, uint8_t *pData, uint16_t Size, uint32_t Timeout)
{
 8004f26:	b580      	push	{r7, lr}
 8004f28:	b088      	sub	sp, #32
 8004f2a:	af00      	add	r7, sp, #0
 8004f2c:	60f8      	str	r0, [r7, #12]
 8004f2e:	60b9      	str	r1, [r7, #8]
 8004f30:	603b      	str	r3, [r7, #0]
 8004f32:	4613      	mov	r3, r2
 8004f34:	80fb      	strh	r3, [r7, #6]
  uint32_t tickstart;
  HAL_StatusTypeDef errorcode = HAL_OK;
 8004f36:	2300      	movs	r3, #0
 8004f38:	77fb      	strb	r3, [r7, #31]

  /* Check Direction parameter */
  assert_param(IS_SPI_DIRECTION_2LINES_OR_1LINE(hspi->Init.Direction));

  /* Process Locked */
  __HAL_LOCK(hspi);
 8004f3a:	68fb      	ldr	r3, [r7, #12]
 8004f3c:	f893 3050 	ldrb.w	r3, [r3, #80]	; 0x50
 8004f40:	2b01      	cmp	r3, #1
 8004f42:	d101      	bne.n	8004f48 <HAL_SPI_Transmit+0x22>
 8004f44:	2302      	movs	r3, #2
 8004f46:	e12d      	b.n	80051a4 <HAL_SPI_Transmit+0x27e>
 8004f48:	68fb      	ldr	r3, [r7, #12]
 8004f4a:	2201      	movs	r2, #1
 8004f4c:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50

  /* Init tickstart for timeout management*/
  tickstart = HAL_GetTick();
 8004f50:	f7fd fa50 	bl	80023f4 <HAL_GetTick>
 8004f54:	61b8      	str	r0, [r7, #24]
  initial_TxXferCount = Size;
 8004f56:	88fb      	ldrh	r3, [r7, #6]
 8004f58:	82fb      	strh	r3, [r7, #22]

  if (hspi->State != HAL_SPI_STATE_READY)
 8004f5a:	68fb      	ldr	r3, [r7, #12]
 8004f5c:	f893 3051 	ldrb.w	r3, [r3, #81]	; 0x51
 8004f60:	b2db      	uxtb	r3, r3
 8004f62:	2b01      	cmp	r3, #1
 8004f64:	d002      	beq.n	8004f6c <HAL_SPI_Transmit+0x46>
  {
    errorcode = HAL_BUSY;
 8004f66:	2302      	movs	r3, #2
 8004f68:	77fb      	strb	r3, [r7, #31]
    goto error;
 8004f6a:	e116      	b.n	800519a <HAL_SPI_Transmit+0x274>
  }

  if ((pData == NULL) || (Size == 0U))
 8004f6c:	68bb      	ldr	r3, [r7, #8]
 8004f6e:	2b00      	cmp	r3, #0
 8004f70:	d002      	beq.n	8004f78 <HAL_SPI_Transmit+0x52>
 8004f72:	88fb      	ldrh	r3, [r7, #6]
 8004f74:	2b00      	cmp	r3, #0
 8004f76:	d102      	bne.n	8004f7e <HAL_SPI_Transmit+0x58>
  {
    errorcode = HAL_ERROR;
 8004f78:	2301      	movs	r3, #1
 8004f7a:	77fb      	strb	r3, [r7, #31]
    goto error;
 8004f7c:	e10d      	b.n	800519a <HAL_SPI_Transmit+0x274>
  }

  /* Set the transaction information */
  hspi->State       = HAL_SPI_STATE_BUSY_TX;
 8004f7e:	68fb      	ldr	r3, [r7, #12]
 8004f80:	2203      	movs	r2, #3
 8004f82:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 8004f86:	68fb      	ldr	r3, [r7, #12]
 8004f88:	2200      	movs	r2, #0
 8004f8a:	655a      	str	r2, [r3, #84]	; 0x54
  hspi->pTxBuffPtr  = (uint8_t *)pData;
 8004f8c:	68fb      	ldr	r3, [r7, #12]
 8004f8e:	68ba      	ldr	r2, [r7, #8]
 8004f90:	631a      	str	r2, [r3, #48]	; 0x30
  hspi->TxXferSize  = Size;
 8004f92:	68fb      	ldr	r3, [r7, #12]
 8004f94:	88fa      	ldrh	r2, [r7, #6]
 8004f96:	869a      	strh	r2, [r3, #52]	; 0x34
  hspi->TxXferCount = Size;
 8004f98:	68fb      	ldr	r3, [r7, #12]
 8004f9a:	88fa      	ldrh	r2, [r7, #6]
 8004f9c:	86da      	strh	r2, [r3, #54]	; 0x36

  /*Init field not used in handle to zero */
  hspi->pRxBuffPtr  = (uint8_t *)NULL;
 8004f9e:	68fb      	ldr	r3, [r7, #12]
 8004fa0:	2200      	movs	r2, #0
 8004fa2:	639a      	str	r2, [r3, #56]	; 0x38
  hspi->RxXferSize  = 0U;
 8004fa4:	68fb      	ldr	r3, [r7, #12]
 8004fa6:	2200      	movs	r2, #0
 8004fa8:	879a      	strh	r2, [r3, #60]	; 0x3c
  hspi->RxXferCount = 0U;
 8004faa:	68fb      	ldr	r3, [r7, #12]
 8004fac:	2200      	movs	r2, #0
 8004fae:	87da      	strh	r2, [r3, #62]	; 0x3e
  hspi->TxISR       = NULL;
 8004fb0:	68fb      	ldr	r3, [r7, #12]
 8004fb2:	2200      	movs	r2, #0
 8004fb4:	645a      	str	r2, [r3, #68]	; 0x44
  hspi->RxISR       = NULL;
 8004fb6:	68fb      	ldr	r3, [r7, #12]
 8004fb8:	2200      	movs	r2, #0
 8004fba:	641a      	str	r2, [r3, #64]	; 0x40

  /* Configure communication direction : 1Line */
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8004fbc:	68fb      	ldr	r3, [r7, #12]
 8004fbe:	689b      	ldr	r3, [r3, #8]
 8004fc0:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 8004fc4:	d10f      	bne.n	8004fe6 <HAL_SPI_Transmit+0xc0>
  {
    /* Disable SPI Peripheral before set 1Line direction (BIDIOE bit) */
    __HAL_SPI_DISABLE(hspi);
 8004fc6:	68fb      	ldr	r3, [r7, #12]
 8004fc8:	681b      	ldr	r3, [r3, #0]
 8004fca:	681a      	ldr	r2, [r3, #0]
 8004fcc:	68fb      	ldr	r3, [r7, #12]
 8004fce:	681b      	ldr	r3, [r3, #0]
 8004fd0:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 8004fd4:	601a      	str	r2, [r3, #0]
    SPI_1LINE_TX(hspi);
 8004fd6:	68fb      	ldr	r3, [r7, #12]
 8004fd8:	681b      	ldr	r3, [r3, #0]
 8004fda:	681a      	ldr	r2, [r3, #0]
 8004fdc:	68fb      	ldr	r3, [r7, #12]
 8004fde:	681b      	ldr	r3, [r3, #0]
 8004fe0:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 8004fe4:	601a      	str	r2, [r3, #0]
    SPI_RESET_CRC(hspi);
  }
#endif /* USE_SPI_CRC */

  /* Check if the SPI is already enabled */
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 8004fe6:	68fb      	ldr	r3, [r7, #12]
 8004fe8:	681b      	ldr	r3, [r3, #0]
 8004fea:	681b      	ldr	r3, [r3, #0]
 8004fec:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8004ff0:	2b40      	cmp	r3, #64	; 0x40
 8004ff2:	d007      	beq.n	8005004 <HAL_SPI_Transmit+0xde>
  {
    /* Enable SPI peripheral */
    __HAL_SPI_ENABLE(hspi);
 8004ff4:	68fb      	ldr	r3, [r7, #12]
 8004ff6:	681b      	ldr	r3, [r3, #0]
 8004ff8:	681a      	ldr	r2, [r3, #0]
 8004ffa:	68fb      	ldr	r3, [r7, #12]
 8004ffc:	681b      	ldr	r3, [r3, #0]
 8004ffe:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 8005002:	601a      	str	r2, [r3, #0]
  }

  /* Transmit data in 16 Bit mode */
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 8005004:	68fb      	ldr	r3, [r7, #12]
 8005006:	68db      	ldr	r3, [r3, #12]
 8005008:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 800500c:	d14f      	bne.n	80050ae <HAL_SPI_Transmit+0x188>
  {
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800500e:	68fb      	ldr	r3, [r7, #12]
 8005010:	685b      	ldr	r3, [r3, #4]
 8005012:	2b00      	cmp	r3, #0
 8005014:	d002      	beq.n	800501c <HAL_SPI_Transmit+0xf6>
 8005016:	8afb      	ldrh	r3, [r7, #22]
 8005018:	2b01      	cmp	r3, #1
 800501a:	d142      	bne.n	80050a2 <HAL_SPI_Transmit+0x17c>
    {
      hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800501c:	68fb      	ldr	r3, [r7, #12]
 800501e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8005020:	881a      	ldrh	r2, [r3, #0]
 8005022:	68fb      	ldr	r3, [r7, #12]
 8005024:	681b      	ldr	r3, [r3, #0]
 8005026:	60da      	str	r2, [r3, #12]
      hspi->pTxBuffPtr += sizeof(uint16_t);
 8005028:	68fb      	ldr	r3, [r7, #12]
 800502a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800502c:	1c9a      	adds	r2, r3, #2
 800502e:	68fb      	ldr	r3, [r7, #12]
 8005030:	631a      	str	r2, [r3, #48]	; 0x30
      hspi->TxXferCount--;
 8005032:	68fb      	ldr	r3, [r7, #12]
 8005034:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 8005036:	b29b      	uxth	r3, r3
 8005038:	3b01      	subs	r3, #1
 800503a:	b29a      	uxth	r2, r3
 800503c:	68fb      	ldr	r3, [r7, #12]
 800503e:	86da      	strh	r2, [r3, #54]	; 0x36
    }
    /* Transmit data in 16 Bit mode */
    while (hspi->TxXferCount > 0U)
 8005040:	e02f      	b.n	80050a2 <HAL_SPI_Transmit+0x17c>
    {
      /* Wait until TXE flag is set to send data */
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 8005042:	68fb      	ldr	r3, [r7, #12]
 8005044:	681b      	ldr	r3, [r3, #0]
 8005046:	689b      	ldr	r3, [r3, #8]
 8005048:	f003 0302 	and.w	r3, r3, #2
 800504c:	2b02      	cmp	r3, #2
 800504e:	d112      	bne.n	8005076 <HAL_SPI_Transmit+0x150>
      {
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 8005050:	68fb      	ldr	r3, [r7, #12]
 8005052:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8005054:	881a      	ldrh	r2, [r3, #0]
 8005056:	68fb      	ldr	r3, [r7, #12]
 8005058:	681b      	ldr	r3, [r3, #0]
 800505a:	60da      	str	r2, [r3, #12]
        hspi->pTxBuffPtr += sizeof(uint16_t);
 800505c:	68fb      	ldr	r3, [r7, #12]
 800505e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8005060:	1c9a      	adds	r2, r3, #2
 8005062:	68fb      	ldr	r3, [r7, #12]
 8005064:	631a      	str	r2, [r3, #48]	; 0x30
        hspi->TxXferCount--;
 8005066:	68fb      	ldr	r3, [r7, #12]
 8005068:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 800506a:	b29b      	uxth	r3, r3
 800506c:	3b01      	subs	r3, #1
 800506e:	b29a      	uxth	r2, r3
 8005070:	68fb      	ldr	r3, [r7, #12]
 8005072:	86da      	strh	r2, [r3, #54]	; 0x36
 8005074:	e015      	b.n	80050a2 <HAL_SPI_Transmit+0x17c>
      }
      else
      {
        /* Timeout management */
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 8005076:	f7fd f9bd 	bl	80023f4 <HAL_GetTick>
 800507a:	4602      	mov	r2, r0
 800507c:	69bb      	ldr	r3, [r7, #24]
 800507e:	1ad3      	subs	r3, r2, r3
 8005080:	683a      	ldr	r2, [r7, #0]
 8005082:	429a      	cmp	r2, r3
 8005084:	d803      	bhi.n	800508e <HAL_SPI_Transmit+0x168>
 8005086:	683b      	ldr	r3, [r7, #0]
 8005088:	f1b3 3fff 	cmp.w	r3, #4294967295
 800508c:	d102      	bne.n	8005094 <HAL_SPI_Transmit+0x16e>
 800508e:	683b      	ldr	r3, [r7, #0]
 8005090:	2b00      	cmp	r3, #0
 8005092:	d106      	bne.n	80050a2 <HAL_SPI_Transmit+0x17c>
        {
          errorcode = HAL_TIMEOUT;
 8005094:	2303      	movs	r3, #3
 8005096:	77fb      	strb	r3, [r7, #31]
          hspi->State = HAL_SPI_STATE_READY;
 8005098:	68fb      	ldr	r3, [r7, #12]
 800509a:	2201      	movs	r2, #1
 800509c:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
          goto error;
 80050a0:	e07b      	b.n	800519a <HAL_SPI_Transmit+0x274>
    while (hspi->TxXferCount > 0U)
 80050a2:	68fb      	ldr	r3, [r7, #12]
 80050a4:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 80050a6:	b29b      	uxth	r3, r3
 80050a8:	2b00      	cmp	r3, #0
 80050aa:	d1ca      	bne.n	8005042 <HAL_SPI_Transmit+0x11c>
 80050ac:	e050      	b.n	8005150 <HAL_SPI_Transmit+0x22a>
    }
  }
  /* Transmit data in 8 Bit mode */
  else
  {
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 80050ae:	68fb      	ldr	r3, [r7, #12]
 80050b0:	685b      	ldr	r3, [r3, #4]
 80050b2:	2b00      	cmp	r3, #0
 80050b4:	d002      	beq.n	80050bc <HAL_SPI_Transmit+0x196>
 80050b6:	8afb      	ldrh	r3, [r7, #22]
 80050b8:	2b01      	cmp	r3, #1
 80050ba:	d144      	bne.n	8005146 <HAL_SPI_Transmit+0x220>
    {
      *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 80050bc:	68fb      	ldr	r3, [r7, #12]
 80050be:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80050c0:	68fb      	ldr	r3, [r7, #12]
 80050c2:	681b      	ldr	r3, [r3, #0]
 80050c4:	330c      	adds	r3, #12
 80050c6:	7812      	ldrb	r2, [r2, #0]
 80050c8:	701a      	strb	r2, [r3, #0]
      hspi->pTxBuffPtr += sizeof(uint8_t);
 80050ca:	68fb      	ldr	r3, [r7, #12]
 80050cc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80050ce:	1c5a      	adds	r2, r3, #1
 80050d0:	68fb      	ldr	r3, [r7, #12]
 80050d2:	631a      	str	r2, [r3, #48]	; 0x30
      hspi->TxXferCount--;
 80050d4:	68fb      	ldr	r3, [r7, #12]
 80050d6:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 80050d8:	b29b      	uxth	r3, r3
 80050da:	3b01      	subs	r3, #1
 80050dc:	b29a      	uxth	r2, r3
 80050de:	68fb      	ldr	r3, [r7, #12]
 80050e0:	86da      	strh	r2, [r3, #54]	; 0x36
    }
    while (hspi->TxXferCount > 0U)
 80050e2:	e030      	b.n	8005146 <HAL_SPI_Transmit+0x220>
    {
      /* Wait until TXE flag is set to send data */
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 80050e4:	68fb      	ldr	r3, [r7, #12]
 80050e6:	681b      	ldr	r3, [r3, #0]
 80050e8:	689b      	ldr	r3, [r3, #8]
 80050ea:	f003 0302 	and.w	r3, r3, #2
 80050ee:	2b02      	cmp	r3, #2
 80050f0:	d113      	bne.n	800511a <HAL_SPI_Transmit+0x1f4>
      {
        *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 80050f2:	68fb      	ldr	r3, [r7, #12]
 80050f4:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80050f6:	68fb      	ldr	r3, [r7, #12]
 80050f8:	681b      	ldr	r3, [r3, #0]
 80050fa:	330c      	adds	r3, #12
 80050fc:	7812      	ldrb	r2, [r2, #0]
 80050fe:	701a      	strb	r2, [r3, #0]
        hspi->pTxBuffPtr += sizeof(uint8_t);
 8005100:	68fb      	ldr	r3, [r7, #12]
 8005102:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8005104:	1c5a      	adds	r2, r3, #1
 8005106:	68fb      	ldr	r3, [r7, #12]
 8005108:	631a      	str	r2, [r3, #48]	; 0x30
        hspi->TxXferCount--;
 800510a:	68fb      	ldr	r3, [r7, #12]
 800510c:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 800510e:	b29b      	uxth	r3, r3
 8005110:	3b01      	subs	r3, #1
 8005112:	b29a      	uxth	r2, r3
 8005114:	68fb      	ldr	r3, [r7, #12]
 8005116:	86da      	strh	r2, [r3, #54]	; 0x36
 8005118:	e015      	b.n	8005146 <HAL_SPI_Transmit+0x220>
      }
      else
      {
        /* Timeout management */
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800511a:	f7fd f96b 	bl	80023f4 <HAL_GetTick>
 800511e:	4602      	mov	r2, r0
 8005120:	69bb      	ldr	r3, [r7, #24]
 8005122:	1ad3      	subs	r3, r2, r3
 8005124:	683a      	ldr	r2, [r7, #0]
 8005126:	429a      	cmp	r2, r3
 8005128:	d803      	bhi.n	8005132 <HAL_SPI_Transmit+0x20c>
 800512a:	683b      	ldr	r3, [r7, #0]
 800512c:	f1b3 3fff 	cmp.w	r3, #4294967295
 8005130:	d102      	bne.n	8005138 <HAL_SPI_Transmit+0x212>
 8005132:	683b      	ldr	r3, [r7, #0]
 8005134:	2b00      	cmp	r3, #0
 8005136:	d106      	bne.n	8005146 <HAL_SPI_Transmit+0x220>
        {
          errorcode = HAL_TIMEOUT;
 8005138:	2303      	movs	r3, #3
 800513a:	77fb      	strb	r3, [r7, #31]
          hspi->State = HAL_SPI_STATE_READY;
 800513c:	68fb      	ldr	r3, [r7, #12]
 800513e:	2201      	movs	r2, #1
 8005140:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
          goto error;
 8005144:	e029      	b.n	800519a <HAL_SPI_Transmit+0x274>
    while (hspi->TxXferCount > 0U)
 8005146:	68fb      	ldr	r3, [r7, #12]
 8005148:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 800514a:	b29b      	uxth	r3, r3
 800514c:	2b00      	cmp	r3, #0
 800514e:	d1c9      	bne.n	80050e4 <HAL_SPI_Transmit+0x1be>
    SET_BIT(hspi->Instance->CR1, SPI_CR1_CRCNEXT);
  }
#endif /* USE_SPI_CRC */

  /* Check the end of the transaction */
  if (SPI_EndRxTxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 8005150:	69ba      	ldr	r2, [r7, #24]
 8005152:	6839      	ldr	r1, [r7, #0]
 8005154:	68f8      	ldr	r0, [r7, #12]
 8005156:	f000 fd27 	bl	8005ba8 <SPI_EndRxTxTransaction>
 800515a:	4603      	mov	r3, r0
 800515c:	2b00      	cmp	r3, #0
 800515e:	d002      	beq.n	8005166 <HAL_SPI_Transmit+0x240>
  {
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 8005160:	68fb      	ldr	r3, [r7, #12]
 8005162:	2220      	movs	r2, #32
 8005164:	655a      	str	r2, [r3, #84]	; 0x54
  }

  /* Clear overrun flag in 2 Lines communication mode because received is not read */
  if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 8005166:	68fb      	ldr	r3, [r7, #12]
 8005168:	689b      	ldr	r3, [r3, #8]
 800516a:	2b00      	cmp	r3, #0
 800516c:	d10a      	bne.n	8005184 <HAL_SPI_Transmit+0x25e>
  {
    __HAL_SPI_CLEAR_OVRFLAG(hspi);
 800516e:	2300      	movs	r3, #0
 8005170:	613b      	str	r3, [r7, #16]
 8005172:	68fb      	ldr	r3, [r7, #12]
 8005174:	681b      	ldr	r3, [r3, #0]
 8005176:	68db      	ldr	r3, [r3, #12]
 8005178:	613b      	str	r3, [r7, #16]
 800517a:	68fb      	ldr	r3, [r7, #12]
 800517c:	681b      	ldr	r3, [r3, #0]
 800517e:	689b      	ldr	r3, [r3, #8]
 8005180:	613b      	str	r3, [r7, #16]
 8005182:	693b      	ldr	r3, [r7, #16]
  }

  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 8005184:	68fb      	ldr	r3, [r7, #12]
 8005186:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8005188:	2b00      	cmp	r3, #0
 800518a:	d002      	beq.n	8005192 <HAL_SPI_Transmit+0x26c>
  {
    errorcode = HAL_ERROR;
 800518c:	2301      	movs	r3, #1
 800518e:	77fb      	strb	r3, [r7, #31]
 8005190:	e003      	b.n	800519a <HAL_SPI_Transmit+0x274>
  }
  else
  {
    hspi->State = HAL_SPI_STATE_READY;
 8005192:	68fb      	ldr	r3, [r7, #12]
 8005194:	2201      	movs	r2, #1
 8005196:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
  }

error:
  /* Process Unlocked */
  __HAL_UNLOCK(hspi);
 800519a:	68fb      	ldr	r3, [r7, #12]
 800519c:	2200      	movs	r2, #0
 800519e:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50
  return errorcode;
 80051a2:	7ffb      	ldrb	r3, [r7, #31]
}
 80051a4:	4618      	mov	r0, r3
 80051a6:	3720      	adds	r7, #32
 80051a8:	46bd      	mov	sp, r7
 80051aa:	bd80      	pop	{r7, pc}

080051ac <HAL_SPI_Receive>:
  * @param  Size amount of data to be received
  * @param  Timeout Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SPI_Receive(SPI_HandleTypeDef *hspi, uint8_t *pData, uint16_t Size, uint32_t Timeout)
{
 80051ac:	b580      	push	{r7, lr}
 80051ae:	b088      	sub	sp, #32
 80051b0:	af02      	add	r7, sp, #8
 80051b2:	60f8      	str	r0, [r7, #12]
 80051b4:	60b9      	str	r1, [r7, #8]
 80051b6:	603b      	str	r3, [r7, #0]
 80051b8:	4613      	mov	r3, r2
 80051ba:	80fb      	strh	r3, [r7, #6]
#if (USE_SPI_CRC != 0U)
  __IO uint32_t tmpreg = 0U;
#endif /* USE_SPI_CRC */
  uint32_t tickstart;
  HAL_StatusTypeDef errorcode = HAL_OK;
 80051bc:	2300      	movs	r3, #0
 80051be:	75fb      	strb	r3, [r7, #23]

  if (hspi->State != HAL_SPI_STATE_READY)
 80051c0:	68fb      	ldr	r3, [r7, #12]
 80051c2:	f893 3051 	ldrb.w	r3, [r3, #81]	; 0x51
 80051c6:	b2db      	uxtb	r3, r3
 80051c8:	2b01      	cmp	r3, #1
 80051ca:	d002      	beq.n	80051d2 <HAL_SPI_Receive+0x26>
  {
    errorcode = HAL_BUSY;
 80051cc:	2302      	movs	r3, #2
 80051ce:	75fb      	strb	r3, [r7, #23]
    goto error;
 80051d0:	e0fb      	b.n	80053ca <HAL_SPI_Receive+0x21e>
  }

  if ((hspi->Init.Mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES))
 80051d2:	68fb      	ldr	r3, [r7, #12]
 80051d4:	685b      	ldr	r3, [r3, #4]
 80051d6:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 80051da:	d112      	bne.n	8005202 <HAL_SPI_Receive+0x56>
 80051dc:	68fb      	ldr	r3, [r7, #12]
 80051de:	689b      	ldr	r3, [r3, #8]
 80051e0:	2b00      	cmp	r3, #0
 80051e2:	d10e      	bne.n	8005202 <HAL_SPI_Receive+0x56>
  {
    hspi->State = HAL_SPI_STATE_BUSY_RX;
 80051e4:	68fb      	ldr	r3, [r7, #12]
 80051e6:	2204      	movs	r2, #4
 80051e8:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
    /* Call transmit-receive function to send Dummy data on Tx line and generate clock on CLK line */
    return HAL_SPI_TransmitReceive(hspi, pData, pData, Size, Timeout);
 80051ec:	88fa      	ldrh	r2, [r7, #6]
 80051ee:	683b      	ldr	r3, [r7, #0]
 80051f0:	9300      	str	r3, [sp, #0]
 80051f2:	4613      	mov	r3, r2
 80051f4:	68ba      	ldr	r2, [r7, #8]
 80051f6:	68b9      	ldr	r1, [r7, #8]
 80051f8:	68f8      	ldr	r0, [r7, #12]
 80051fa:	f000 f8ef 	bl	80053dc <HAL_SPI_TransmitReceive>
 80051fe:	4603      	mov	r3, r0
 8005200:	e0e8      	b.n	80053d4 <HAL_SPI_Receive+0x228>
  }

  /* Process Locked */
  __HAL_LOCK(hspi);
 8005202:	68fb      	ldr	r3, [r7, #12]
 8005204:	f893 3050 	ldrb.w	r3, [r3, #80]	; 0x50
 8005208:	2b01      	cmp	r3, #1
 800520a:	d101      	bne.n	8005210 <HAL_SPI_Receive+0x64>
 800520c:	2302      	movs	r3, #2
 800520e:	e0e1      	b.n	80053d4 <HAL_SPI_Receive+0x228>
 8005210:	68fb      	ldr	r3, [r7, #12]
 8005212:	2201      	movs	r2, #1
 8005214:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50

  /* Init tickstart for timeout management*/
  tickstart = HAL_GetTick();
 8005218:	f7fd f8ec 	bl	80023f4 <HAL_GetTick>
 800521c:	6138      	str	r0, [r7, #16]

  if ((pData == NULL) || (Size == 0U))
 800521e:	68bb      	ldr	r3, [r7, #8]
 8005220:	2b00      	cmp	r3, #0
 8005222:	d002      	beq.n	800522a <HAL_SPI_Receive+0x7e>
 8005224:	88fb      	ldrh	r3, [r7, #6]
 8005226:	2b00      	cmp	r3, #0
 8005228:	d102      	bne.n	8005230 <HAL_SPI_Receive+0x84>
  {
    errorcode = HAL_ERROR;
 800522a:	2301      	movs	r3, #1
 800522c:	75fb      	strb	r3, [r7, #23]
    goto error;
 800522e:	e0cc      	b.n	80053ca <HAL_SPI_Receive+0x21e>
  }

  /* Set the transaction information */
  hspi->State       = HAL_SPI_STATE_BUSY_RX;
 8005230:	68fb      	ldr	r3, [r7, #12]
 8005232:	2204      	movs	r2, #4
 8005234:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 8005238:	68fb      	ldr	r3, [r7, #12]
 800523a:	2200      	movs	r2, #0
 800523c:	655a      	str	r2, [r3, #84]	; 0x54
  hspi->pRxBuffPtr  = (uint8_t *)pData;
 800523e:	68fb      	ldr	r3, [r7, #12]
 8005240:	68ba      	ldr	r2, [r7, #8]
 8005242:	639a      	str	r2, [r3, #56]	; 0x38
  hspi->RxXferSize  = Size;
 8005244:	68fb      	ldr	r3, [r7, #12]
 8005246:	88fa      	ldrh	r2, [r7, #6]
 8005248:	879a      	strh	r2, [r3, #60]	; 0x3c
  hspi->RxXferCount = Size;
 800524a:	68fb      	ldr	r3, [r7, #12]
 800524c:	88fa      	ldrh	r2, [r7, #6]
 800524e:	87da      	strh	r2, [r3, #62]	; 0x3e

  /*Init field not used in handle to zero */
  hspi->pTxBuffPtr  = (uint8_t *)NULL;
 8005250:	68fb      	ldr	r3, [r7, #12]
 8005252:	2200      	movs	r2, #0
 8005254:	631a      	str	r2, [r3, #48]	; 0x30
  hspi->TxXferSize  = 0U;
 8005256:	68fb      	ldr	r3, [r7, #12]
 8005258:	2200      	movs	r2, #0
 800525a:	869a      	strh	r2, [r3, #52]	; 0x34
  hspi->TxXferCount = 0U;
 800525c:	68fb      	ldr	r3, [r7, #12]
 800525e:	2200      	movs	r2, #0
 8005260:	86da      	strh	r2, [r3, #54]	; 0x36
  hspi->RxISR       = NULL;
 8005262:	68fb      	ldr	r3, [r7, #12]
 8005264:	2200      	movs	r2, #0
 8005266:	641a      	str	r2, [r3, #64]	; 0x40
  hspi->TxISR       = NULL;
 8005268:	68fb      	ldr	r3, [r7, #12]
 800526a:	2200      	movs	r2, #0
 800526c:	645a      	str	r2, [r3, #68]	; 0x44
    hspi->RxXferCount--;
  }
#endif /* USE_SPI_CRC */

  /* Configure communication direction: 1Line */
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800526e:	68fb      	ldr	r3, [r7, #12]
 8005270:	689b      	ldr	r3, [r3, #8]
 8005272:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 8005276:	d10f      	bne.n	8005298 <HAL_SPI_Receive+0xec>
  {
    /* Disable SPI Peripheral before set 1Line direction (BIDIOE bit) */
    __HAL_SPI_DISABLE(hspi);
 8005278:	68fb      	ldr	r3, [r7, #12]
 800527a:	681b      	ldr	r3, [r3, #0]
 800527c:	681a      	ldr	r2, [r3, #0]
 800527e:	68fb      	ldr	r3, [r7, #12]
 8005280:	681b      	ldr	r3, [r3, #0]
 8005282:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 8005286:	601a      	str	r2, [r3, #0]
    SPI_1LINE_RX(hspi);
 8005288:	68fb      	ldr	r3, [r7, #12]
 800528a:	681b      	ldr	r3, [r3, #0]
 800528c:	681a      	ldr	r2, [r3, #0]
 800528e:	68fb      	ldr	r3, [r7, #12]
 8005290:	681b      	ldr	r3, [r3, #0]
 8005292:	f422 4280 	bic.w	r2, r2, #16384	; 0x4000
 8005296:	601a      	str	r2, [r3, #0]
  }

  /* Check if the SPI is already enabled */
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 8005298:	68fb      	ldr	r3, [r7, #12]
 800529a:	681b      	ldr	r3, [r3, #0]
 800529c:	681b      	ldr	r3, [r3, #0]
 800529e:	f003 0340 	and.w	r3, r3, #64	; 0x40
 80052a2:	2b40      	cmp	r3, #64	; 0x40
 80052a4:	d007      	beq.n	80052b6 <HAL_SPI_Receive+0x10a>
  {
    /* Enable SPI peripheral */
    __HAL_SPI_ENABLE(hspi);
 80052a6:	68fb      	ldr	r3, [r7, #12]
 80052a8:	681b      	ldr	r3, [r3, #0]
 80052aa:	681a      	ldr	r2, [r3, #0]
 80052ac:	68fb      	ldr	r3, [r7, #12]
 80052ae:	681b      	ldr	r3, [r3, #0]
 80052b0:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 80052b4:	601a      	str	r2, [r3, #0]
  }

  /* Receive data in 8 Bit mode */
  if (hspi->Init.DataSize == SPI_DATASIZE_8BIT)
 80052b6:	68fb      	ldr	r3, [r7, #12]
 80052b8:	68db      	ldr	r3, [r3, #12]
 80052ba:	2b00      	cmp	r3, #0
 80052bc:	d16a      	bne.n	8005394 <HAL_SPI_Receive+0x1e8>
  {
    /* Transfer loop */
    while (hspi->RxXferCount > 0U)
 80052be:	e032      	b.n	8005326 <HAL_SPI_Receive+0x17a>
    {
      /* Check the RXNE flag */
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 80052c0:	68fb      	ldr	r3, [r7, #12]
 80052c2:	681b      	ldr	r3, [r3, #0]
 80052c4:	689b      	ldr	r3, [r3, #8]
 80052c6:	f003 0301 	and.w	r3, r3, #1
 80052ca:	2b01      	cmp	r3, #1
 80052cc:	d115      	bne.n	80052fa <HAL_SPI_Receive+0x14e>
      {
        /* read the received data */
        (* (uint8_t *)hspi->pRxBuffPtr) = *(__IO uint8_t *)&hspi->Instance->DR;
 80052ce:	68fb      	ldr	r3, [r7, #12]
 80052d0:	681b      	ldr	r3, [r3, #0]
 80052d2:	f103 020c 	add.w	r2, r3, #12
 80052d6:	68fb      	ldr	r3, [r7, #12]
 80052d8:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80052da:	7812      	ldrb	r2, [r2, #0]
 80052dc:	b2d2      	uxtb	r2, r2
 80052de:	701a      	strb	r2, [r3, #0]
        hspi->pRxBuffPtr += sizeof(uint8_t);
 80052e0:	68fb      	ldr	r3, [r7, #12]
 80052e2:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80052e4:	1c5a      	adds	r2, r3, #1
 80052e6:	68fb      	ldr	r3, [r7, #12]
 80052e8:	639a      	str	r2, [r3, #56]	; 0x38
        hspi->RxXferCount--;
 80052ea:	68fb      	ldr	r3, [r7, #12]
 80052ec:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 80052ee:	b29b      	uxth	r3, r3
 80052f0:	3b01      	subs	r3, #1
 80052f2:	b29a      	uxth	r2, r3
 80052f4:	68fb      	ldr	r3, [r7, #12]
 80052f6:	87da      	strh	r2, [r3, #62]	; 0x3e
 80052f8:	e015      	b.n	8005326 <HAL_SPI_Receive+0x17a>
      }
      else
      {
        /* Timeout management */
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 80052fa:	f7fd f87b 	bl	80023f4 <HAL_GetTick>
 80052fe:	4602      	mov	r2, r0
 8005300:	693b      	ldr	r3, [r7, #16]
 8005302:	1ad3      	subs	r3, r2, r3
 8005304:	683a      	ldr	r2, [r7, #0]
 8005306:	429a      	cmp	r2, r3
 8005308:	d803      	bhi.n	8005312 <HAL_SPI_Receive+0x166>
 800530a:	683b      	ldr	r3, [r7, #0]
 800530c:	f1b3 3fff 	cmp.w	r3, #4294967295
 8005310:	d102      	bne.n	8005318 <HAL_SPI_Receive+0x16c>
 8005312:	683b      	ldr	r3, [r7, #0]
 8005314:	2b00      	cmp	r3, #0
 8005316:	d106      	bne.n	8005326 <HAL_SPI_Receive+0x17a>
        {
          errorcode = HAL_TIMEOUT;
 8005318:	2303      	movs	r3, #3
 800531a:	75fb      	strb	r3, [r7, #23]
          hspi->State = HAL_SPI_STATE_READY;
 800531c:	68fb      	ldr	r3, [r7, #12]
 800531e:	2201      	movs	r2, #1
 8005320:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
          goto error;
 8005324:	e051      	b.n	80053ca <HAL_SPI_Receive+0x21e>
    while (hspi->RxXferCount > 0U)
 8005326:	68fb      	ldr	r3, [r7, #12]
 8005328:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 800532a:	b29b      	uxth	r3, r3
 800532c:	2b00      	cmp	r3, #0
 800532e:	d1c7      	bne.n	80052c0 <HAL_SPI_Receive+0x114>
 8005330:	e035      	b.n	800539e <HAL_SPI_Receive+0x1f2>
  {
    /* Transfer loop */
    while (hspi->RxXferCount > 0U)
    {
      /* Check the RXNE flag */
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 8005332:	68fb      	ldr	r3, [r7, #12]
 8005334:	681b      	ldr	r3, [r3, #0]
 8005336:	689b      	ldr	r3, [r3, #8]
 8005338:	f003 0301 	and.w	r3, r3, #1
 800533c:	2b01      	cmp	r3, #1
 800533e:	d113      	bne.n	8005368 <HAL_SPI_Receive+0x1bc>
      {
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 8005340:	68fb      	ldr	r3, [r7, #12]
 8005342:	681b      	ldr	r3, [r3, #0]
 8005344:	68da      	ldr	r2, [r3, #12]
 8005346:	68fb      	ldr	r3, [r7, #12]
 8005348:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800534a:	b292      	uxth	r2, r2
 800534c:	801a      	strh	r2, [r3, #0]
        hspi->pRxBuffPtr += sizeof(uint16_t);
 800534e:	68fb      	ldr	r3, [r7, #12]
 8005350:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8005352:	1c9a      	adds	r2, r3, #2
 8005354:	68fb      	ldr	r3, [r7, #12]
 8005356:	639a      	str	r2, [r3, #56]	; 0x38
        hspi->RxXferCount--;
 8005358:	68fb      	ldr	r3, [r7, #12]
 800535a:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 800535c:	b29b      	uxth	r3, r3
 800535e:	3b01      	subs	r3, #1
 8005360:	b29a      	uxth	r2, r3
 8005362:	68fb      	ldr	r3, [r7, #12]
 8005364:	87da      	strh	r2, [r3, #62]	; 0x3e
 8005366:	e015      	b.n	8005394 <HAL_SPI_Receive+0x1e8>
      }
      else
      {
        /* Timeout management */
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 8005368:	f7fd f844 	bl	80023f4 <HAL_GetTick>
 800536c:	4602      	mov	r2, r0
 800536e:	693b      	ldr	r3, [r7, #16]
 8005370:	1ad3      	subs	r3, r2, r3
 8005372:	683a      	ldr	r2, [r7, #0]
 8005374:	429a      	cmp	r2, r3
 8005376:	d803      	bhi.n	8005380 <HAL_SPI_Receive+0x1d4>
 8005378:	683b      	ldr	r3, [r7, #0]
 800537a:	f1b3 3fff 	cmp.w	r3, #4294967295
 800537e:	d102      	bne.n	8005386 <HAL_SPI_Receive+0x1da>
 8005380:	683b      	ldr	r3, [r7, #0]
 8005382:	2b00      	cmp	r3, #0
 8005384:	d106      	bne.n	8005394 <HAL_SPI_Receive+0x1e8>
        {
          errorcode = HAL_TIMEOUT;
 8005386:	2303      	movs	r3, #3
 8005388:	75fb      	strb	r3, [r7, #23]
          hspi->State = HAL_SPI_STATE_READY;
 800538a:	68fb      	ldr	r3, [r7, #12]
 800538c:	2201      	movs	r2, #1
 800538e:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
          goto error;
 8005392:	e01a      	b.n	80053ca <HAL_SPI_Receive+0x21e>
    while (hspi->RxXferCount > 0U)
 8005394:	68fb      	ldr	r3, [r7, #12]
 8005396:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 8005398:	b29b      	uxth	r3, r3
 800539a:	2b00      	cmp	r3, #0
 800539c:	d1c9      	bne.n	8005332 <HAL_SPI_Receive+0x186>
    UNUSED(tmpreg);
  }
#endif /* USE_SPI_CRC */

  /* Check the end of the transaction */
  if (SPI_EndRxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 800539e:	693a      	ldr	r2, [r7, #16]
 80053a0:	6839      	ldr	r1, [r7, #0]
 80053a2:	68f8      	ldr	r0, [r7, #12]
 80053a4:	f000 fb9a 	bl	8005adc <SPI_EndRxTransaction>
 80053a8:	4603      	mov	r3, r0
 80053aa:	2b00      	cmp	r3, #0
 80053ac:	d002      	beq.n	80053b4 <HAL_SPI_Receive+0x208>
  {
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 80053ae:	68fb      	ldr	r3, [r7, #12]
 80053b0:	2220      	movs	r2, #32
 80053b2:	655a      	str	r2, [r3, #84]	; 0x54
    SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_CRC);
    __HAL_SPI_CLEAR_CRCERRFLAG(hspi);
  }
#endif /* USE_SPI_CRC */

  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 80053b4:	68fb      	ldr	r3, [r7, #12]
 80053b6:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 80053b8:	2b00      	cmp	r3, #0
 80053ba:	d002      	beq.n	80053c2 <HAL_SPI_Receive+0x216>
  {
    errorcode = HAL_ERROR;
 80053bc:	2301      	movs	r3, #1
 80053be:	75fb      	strb	r3, [r7, #23]
 80053c0:	e003      	b.n	80053ca <HAL_SPI_Receive+0x21e>
  }
  else
  {
    hspi->State = HAL_SPI_STATE_READY;
 80053c2:	68fb      	ldr	r3, [r7, #12]
 80053c4:	2201      	movs	r2, #1
 80053c6:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
  }

error :
  __HAL_UNLOCK(hspi);
 80053ca:	68fb      	ldr	r3, [r7, #12]
 80053cc:	2200      	movs	r2, #0
 80053ce:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50
  return errorcode;
 80053d2:	7dfb      	ldrb	r3, [r7, #23]
}
 80053d4:	4618      	mov	r0, r3
 80053d6:	3718      	adds	r7, #24
 80053d8:	46bd      	mov	sp, r7
 80053da:	bd80      	pop	{r7, pc}

080053dc <HAL_SPI_TransmitReceive>:
  * @param  Timeout Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SPI_TransmitReceive(SPI_HandleTypeDef *hspi, uint8_t *pTxData, uint8_t *pRxData, uint16_t Size,
                                          uint32_t Timeout)
{
 80053dc:	b580      	push	{r7, lr}
 80053de:	b08c      	sub	sp, #48	; 0x30
 80053e0:	af00      	add	r7, sp, #0
 80053e2:	60f8      	str	r0, [r7, #12]
 80053e4:	60b9      	str	r1, [r7, #8]
 80053e6:	607a      	str	r2, [r7, #4]
 80053e8:	807b      	strh	r3, [r7, #2]
#if (USE_SPI_CRC != 0U)
  __IO uint32_t tmpreg = 0U;
#endif /* USE_SPI_CRC */

  /* Variable used to alternate Rx and Tx during transfer */
  uint32_t             txallowed = 1U;
 80053ea:	2301      	movs	r3, #1
 80053ec:	62fb      	str	r3, [r7, #44]	; 0x2c
  HAL_StatusTypeDef    errorcode = HAL_OK;
 80053ee:	2300      	movs	r3, #0
 80053f0:	f887 302b 	strb.w	r3, [r7, #43]	; 0x2b

  /* Check Direction parameter */
  assert_param(IS_SPI_DIRECTION_2LINES(hspi->Init.Direction));

  /* Process Locked */
  __HAL_LOCK(hspi);
 80053f4:	68fb      	ldr	r3, [r7, #12]
 80053f6:	f893 3050 	ldrb.w	r3, [r3, #80]	; 0x50
 80053fa:	2b01      	cmp	r3, #1
 80053fc:	d101      	bne.n	8005402 <HAL_SPI_TransmitReceive+0x26>
 80053fe:	2302      	movs	r3, #2
 8005400:	e198      	b.n	8005734 <HAL_SPI_TransmitReceive+0x358>
 8005402:	68fb      	ldr	r3, [r7, #12]
 8005404:	2201      	movs	r2, #1
 8005406:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50

  /* Init tickstart for timeout management*/
  tickstart = HAL_GetTick();
 800540a:	f7fc fff3 	bl	80023f4 <HAL_GetTick>
 800540e:	6278      	str	r0, [r7, #36]	; 0x24

  /* Init temporary variables */
  tmp_state           = hspi->State;
 8005410:	68fb      	ldr	r3, [r7, #12]
 8005412:	f893 3051 	ldrb.w	r3, [r3, #81]	; 0x51
 8005416:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
  tmp_mode            = hspi->Init.Mode;
 800541a:	68fb      	ldr	r3, [r7, #12]
 800541c:	685b      	ldr	r3, [r3, #4]
 800541e:	61fb      	str	r3, [r7, #28]
  initial_TxXferCount = Size;
 8005420:	887b      	ldrh	r3, [r7, #2]
 8005422:	837b      	strh	r3, [r7, #26]

  if (!((tmp_state == HAL_SPI_STATE_READY) || \
 8005424:	f897 3023 	ldrb.w	r3, [r7, #35]	; 0x23
 8005428:	2b01      	cmp	r3, #1
 800542a:	d00f      	beq.n	800544c <HAL_SPI_TransmitReceive+0x70>
 800542c:	69fb      	ldr	r3, [r7, #28]
 800542e:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 8005432:	d107      	bne.n	8005444 <HAL_SPI_TransmitReceive+0x68>
        ((tmp_mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES) && (tmp_state == HAL_SPI_STATE_BUSY_RX))))
 8005434:	68fb      	ldr	r3, [r7, #12]
 8005436:	689b      	ldr	r3, [r3, #8]
 8005438:	2b00      	cmp	r3, #0
 800543a:	d103      	bne.n	8005444 <HAL_SPI_TransmitReceive+0x68>
 800543c:	f897 3023 	ldrb.w	r3, [r7, #35]	; 0x23
 8005440:	2b04      	cmp	r3, #4
 8005442:	d003      	beq.n	800544c <HAL_SPI_TransmitReceive+0x70>
  {
    errorcode = HAL_BUSY;
 8005444:	2302      	movs	r3, #2
 8005446:	f887 302b 	strb.w	r3, [r7, #43]	; 0x2b
    goto error;
 800544a:	e16d      	b.n	8005728 <HAL_SPI_TransmitReceive+0x34c>
  }

  if ((pTxData == NULL) || (pRxData == NULL) || (Size == 0U))
 800544c:	68bb      	ldr	r3, [r7, #8]
 800544e:	2b00      	cmp	r3, #0
 8005450:	d005      	beq.n	800545e <HAL_SPI_TransmitReceive+0x82>
 8005452:	687b      	ldr	r3, [r7, #4]
 8005454:	2b00      	cmp	r3, #0
 8005456:	d002      	beq.n	800545e <HAL_SPI_TransmitReceive+0x82>
 8005458:	887b      	ldrh	r3, [r7, #2]
 800545a:	2b00      	cmp	r3, #0
 800545c:	d103      	bne.n	8005466 <HAL_SPI_TransmitReceive+0x8a>
  {
    errorcode = HAL_ERROR;
 800545e:	2301      	movs	r3, #1
 8005460:	f887 302b 	strb.w	r3, [r7, #43]	; 0x2b
    goto error;
 8005464:	e160      	b.n	8005728 <HAL_SPI_TransmitReceive+0x34c>
  }

  /* Don't overwrite in case of HAL_SPI_STATE_BUSY_RX */
  if (hspi->State != HAL_SPI_STATE_BUSY_RX)
 8005466:	68fb      	ldr	r3, [r7, #12]
 8005468:	f893 3051 	ldrb.w	r3, [r3, #81]	; 0x51
 800546c:	b2db      	uxtb	r3, r3
 800546e:	2b04      	cmp	r3, #4
 8005470:	d003      	beq.n	800547a <HAL_SPI_TransmitReceive+0x9e>
  {
    hspi->State = HAL_SPI_STATE_BUSY_TX_RX;
 8005472:	68fb      	ldr	r3, [r7, #12]
 8005474:	2205      	movs	r2, #5
 8005476:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
  }

  /* Set the transaction information */
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800547a:	68fb      	ldr	r3, [r7, #12]
 800547c:	2200      	movs	r2, #0
 800547e:	655a      	str	r2, [r3, #84]	; 0x54
  hspi->pRxBuffPtr  = (uint8_t *)pRxData;
 8005480:	68fb      	ldr	r3, [r7, #12]
 8005482:	687a      	ldr	r2, [r7, #4]
 8005484:	639a      	str	r2, [r3, #56]	; 0x38
  hspi->RxXferCount = Size;
 8005486:	68fb      	ldr	r3, [r7, #12]
 8005488:	887a      	ldrh	r2, [r7, #2]
 800548a:	87da      	strh	r2, [r3, #62]	; 0x3e
  hspi->RxXferSize  = Size;
 800548c:	68fb      	ldr	r3, [r7, #12]
 800548e:	887a      	ldrh	r2, [r7, #2]
 8005490:	879a      	strh	r2, [r3, #60]	; 0x3c
  hspi->pTxBuffPtr  = (uint8_t *)pTxData;
 8005492:	68fb      	ldr	r3, [r7, #12]
 8005494:	68ba      	ldr	r2, [r7, #8]
 8005496:	631a      	str	r2, [r3, #48]	; 0x30
  hspi->TxXferCount = Size;
 8005498:	68fb      	ldr	r3, [r7, #12]
 800549a:	887a      	ldrh	r2, [r7, #2]
 800549c:	86da      	strh	r2, [r3, #54]	; 0x36
  hspi->TxXferSize  = Size;
 800549e:	68fb      	ldr	r3, [r7, #12]
 80054a0:	887a      	ldrh	r2, [r7, #2]
 80054a2:	869a      	strh	r2, [r3, #52]	; 0x34

  /*Init field not used in handle to zero */
  hspi->RxISR       = NULL;
 80054a4:	68fb      	ldr	r3, [r7, #12]
 80054a6:	2200      	movs	r2, #0
 80054a8:	641a      	str	r2, [r3, #64]	; 0x40
  hspi->TxISR       = NULL;
 80054aa:	68fb      	ldr	r3, [r7, #12]
 80054ac:	2200      	movs	r2, #0
 80054ae:	645a      	str	r2, [r3, #68]	; 0x44
    SPI_RESET_CRC(hspi);
  }
#endif /* USE_SPI_CRC */

  /* Check if the SPI is already enabled */
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 80054b0:	68fb      	ldr	r3, [r7, #12]
 80054b2:	681b      	ldr	r3, [r3, #0]
 80054b4:	681b      	ldr	r3, [r3, #0]
 80054b6:	f003 0340 	and.w	r3, r3, #64	; 0x40
 80054ba:	2b40      	cmp	r3, #64	; 0x40
 80054bc:	d007      	beq.n	80054ce <HAL_SPI_TransmitReceive+0xf2>
  {
    /* Enable SPI peripheral */
    __HAL_SPI_ENABLE(hspi);
 80054be:	68fb      	ldr	r3, [r7, #12]
 80054c0:	681b      	ldr	r3, [r3, #0]
 80054c2:	681a      	ldr	r2, [r3, #0]
 80054c4:	68fb      	ldr	r3, [r7, #12]
 80054c6:	681b      	ldr	r3, [r3, #0]
 80054c8:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 80054cc:	601a      	str	r2, [r3, #0]
  }

  /* Transmit and Receive data in 16 Bit mode */
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 80054ce:	68fb      	ldr	r3, [r7, #12]
 80054d0:	68db      	ldr	r3, [r3, #12]
 80054d2:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 80054d6:	d17c      	bne.n	80055d2 <HAL_SPI_TransmitReceive+0x1f6>
  {
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 80054d8:	68fb      	ldr	r3, [r7, #12]
 80054da:	685b      	ldr	r3, [r3, #4]
 80054dc:	2b00      	cmp	r3, #0
 80054de:	d002      	beq.n	80054e6 <HAL_SPI_TransmitReceive+0x10a>
 80054e0:	8b7b      	ldrh	r3, [r7, #26]
 80054e2:	2b01      	cmp	r3, #1
 80054e4:	d16a      	bne.n	80055bc <HAL_SPI_TransmitReceive+0x1e0>
    {
      hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 80054e6:	68fb      	ldr	r3, [r7, #12]
 80054e8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80054ea:	881a      	ldrh	r2, [r3, #0]
 80054ec:	68fb      	ldr	r3, [r7, #12]
 80054ee:	681b      	ldr	r3, [r3, #0]
 80054f0:	60da      	str	r2, [r3, #12]
      hspi->pTxBuffPtr += sizeof(uint16_t);
 80054f2:	68fb      	ldr	r3, [r7, #12]
 80054f4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80054f6:	1c9a      	adds	r2, r3, #2
 80054f8:	68fb      	ldr	r3, [r7, #12]
 80054fa:	631a      	str	r2, [r3, #48]	; 0x30
      hspi->TxXferCount--;
 80054fc:	68fb      	ldr	r3, [r7, #12]
 80054fe:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 8005500:	b29b      	uxth	r3, r3
 8005502:	3b01      	subs	r3, #1
 8005504:	b29a      	uxth	r2, r3
 8005506:	68fb      	ldr	r3, [r7, #12]
 8005508:	86da      	strh	r2, [r3, #54]	; 0x36
        SET_BIT(hspi->Instance->CR1, SPI_CR1_CRCNEXT);
      }
#endif /* USE_SPI_CRC */

    }
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 800550a:	e057      	b.n	80055bc <HAL_SPI_TransmitReceive+0x1e0>
    {
      /* Check TXE flag */
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 800550c:	68fb      	ldr	r3, [r7, #12]
 800550e:	681b      	ldr	r3, [r3, #0]
 8005510:	689b      	ldr	r3, [r3, #8]
 8005512:	f003 0302 	and.w	r3, r3, #2
 8005516:	2b02      	cmp	r3, #2
 8005518:	d11b      	bne.n	8005552 <HAL_SPI_TransmitReceive+0x176>
 800551a:	68fb      	ldr	r3, [r7, #12]
 800551c:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 800551e:	b29b      	uxth	r3, r3
 8005520:	2b00      	cmp	r3, #0
 8005522:	d016      	beq.n	8005552 <HAL_SPI_TransmitReceive+0x176>
 8005524:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8005526:	2b01      	cmp	r3, #1
 8005528:	d113      	bne.n	8005552 <HAL_SPI_TransmitReceive+0x176>
      {
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800552a:	68fb      	ldr	r3, [r7, #12]
 800552c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800552e:	881a      	ldrh	r2, [r3, #0]
 8005530:	68fb      	ldr	r3, [r7, #12]
 8005532:	681b      	ldr	r3, [r3, #0]
 8005534:	60da      	str	r2, [r3, #12]
        hspi->pTxBuffPtr += sizeof(uint16_t);
 8005536:	68fb      	ldr	r3, [r7, #12]
 8005538:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800553a:	1c9a      	adds	r2, r3, #2
 800553c:	68fb      	ldr	r3, [r7, #12]
 800553e:	631a      	str	r2, [r3, #48]	; 0x30
        hspi->TxXferCount--;
 8005540:	68fb      	ldr	r3, [r7, #12]
 8005542:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 8005544:	b29b      	uxth	r3, r3
 8005546:	3b01      	subs	r3, #1
 8005548:	b29a      	uxth	r2, r3
 800554a:	68fb      	ldr	r3, [r7, #12]
 800554c:	86da      	strh	r2, [r3, #54]	; 0x36
        /* Next Data is a reception (Rx). Tx not allowed */
        txallowed = 0U;
 800554e:	2300      	movs	r3, #0
 8005550:	62fb      	str	r3, [r7, #44]	; 0x2c
        }
#endif /* USE_SPI_CRC */
      }

      /* Check RXNE flag */
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 8005552:	68fb      	ldr	r3, [r7, #12]
 8005554:	681b      	ldr	r3, [r3, #0]
 8005556:	689b      	ldr	r3, [r3, #8]
 8005558:	f003 0301 	and.w	r3, r3, #1
 800555c:	2b01      	cmp	r3, #1
 800555e:	d119      	bne.n	8005594 <HAL_SPI_TransmitReceive+0x1b8>
 8005560:	68fb      	ldr	r3, [r7, #12]
 8005562:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 8005564:	b29b      	uxth	r3, r3
 8005566:	2b00      	cmp	r3, #0
 8005568:	d014      	beq.n	8005594 <HAL_SPI_TransmitReceive+0x1b8>
      {
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 800556a:	68fb      	ldr	r3, [r7, #12]
 800556c:	681b      	ldr	r3, [r3, #0]
 800556e:	68da      	ldr	r2, [r3, #12]
 8005570:	68fb      	ldr	r3, [r7, #12]
 8005572:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8005574:	b292      	uxth	r2, r2
 8005576:	801a      	strh	r2, [r3, #0]
        hspi->pRxBuffPtr += sizeof(uint16_t);
 8005578:	68fb      	ldr	r3, [r7, #12]
 800557a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800557c:	1c9a      	adds	r2, r3, #2
 800557e:	68fb      	ldr	r3, [r7, #12]
 8005580:	639a      	str	r2, [r3, #56]	; 0x38
        hspi->RxXferCount--;
 8005582:	68fb      	ldr	r3, [r7, #12]
 8005584:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 8005586:	b29b      	uxth	r3, r3
 8005588:	3b01      	subs	r3, #1
 800558a:	b29a      	uxth	r2, r3
 800558c:	68fb      	ldr	r3, [r7, #12]
 800558e:	87da      	strh	r2, [r3, #62]	; 0x3e
        /* Next Data is a Transmission (Tx). Tx is allowed */
        txallowed = 1U;
 8005590:	2301      	movs	r3, #1
 8005592:	62fb      	str	r3, [r7, #44]	; 0x2c
      }
      if (((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY))
 8005594:	f7fc ff2e 	bl	80023f4 <HAL_GetTick>
 8005598:	4602      	mov	r2, r0
 800559a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800559c:	1ad3      	subs	r3, r2, r3
 800559e:	6bba      	ldr	r2, [r7, #56]	; 0x38
 80055a0:	429a      	cmp	r2, r3
 80055a2:	d80b      	bhi.n	80055bc <HAL_SPI_TransmitReceive+0x1e0>
 80055a4:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80055a6:	f1b3 3fff 	cmp.w	r3, #4294967295
 80055aa:	d007      	beq.n	80055bc <HAL_SPI_TransmitReceive+0x1e0>
      {
        errorcode = HAL_TIMEOUT;
 80055ac:	2303      	movs	r3, #3
 80055ae:	f887 302b 	strb.w	r3, [r7, #43]	; 0x2b
        hspi->State = HAL_SPI_STATE_READY;
 80055b2:	68fb      	ldr	r3, [r7, #12]
 80055b4:	2201      	movs	r2, #1
 80055b6:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
        goto error;
 80055ba:	e0b5      	b.n	8005728 <HAL_SPI_TransmitReceive+0x34c>
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 80055bc:	68fb      	ldr	r3, [r7, #12]
 80055be:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 80055c0:	b29b      	uxth	r3, r3
 80055c2:	2b00      	cmp	r3, #0
 80055c4:	d1a2      	bne.n	800550c <HAL_SPI_TransmitReceive+0x130>
 80055c6:	68fb      	ldr	r3, [r7, #12]
 80055c8:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 80055ca:	b29b      	uxth	r3, r3
 80055cc:	2b00      	cmp	r3, #0
 80055ce:	d19d      	bne.n	800550c <HAL_SPI_TransmitReceive+0x130>
 80055d0:	e080      	b.n	80056d4 <HAL_SPI_TransmitReceive+0x2f8>
    }
  }
  /* Transmit and Receive data in 8 Bit mode */
  else
  {
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 80055d2:	68fb      	ldr	r3, [r7, #12]
 80055d4:	685b      	ldr	r3, [r3, #4]
 80055d6:	2b00      	cmp	r3, #0
 80055d8:	d002      	beq.n	80055e0 <HAL_SPI_TransmitReceive+0x204>
 80055da:	8b7b      	ldrh	r3, [r7, #26]
 80055dc:	2b01      	cmp	r3, #1
 80055de:	d16f      	bne.n	80056c0 <HAL_SPI_TransmitReceive+0x2e4>
    {
      *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 80055e0:	68fb      	ldr	r3, [r7, #12]
 80055e2:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80055e4:	68fb      	ldr	r3, [r7, #12]
 80055e6:	681b      	ldr	r3, [r3, #0]
 80055e8:	330c      	adds	r3, #12
 80055ea:	7812      	ldrb	r2, [r2, #0]
 80055ec:	701a      	strb	r2, [r3, #0]
      hspi->pTxBuffPtr += sizeof(uint8_t);
 80055ee:	68fb      	ldr	r3, [r7, #12]
 80055f0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80055f2:	1c5a      	adds	r2, r3, #1
 80055f4:	68fb      	ldr	r3, [r7, #12]
 80055f6:	631a      	str	r2, [r3, #48]	; 0x30
      hspi->TxXferCount--;
 80055f8:	68fb      	ldr	r3, [r7, #12]
 80055fa:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 80055fc:	b29b      	uxth	r3, r3
 80055fe:	3b01      	subs	r3, #1
 8005600:	b29a      	uxth	r2, r3
 8005602:	68fb      	ldr	r3, [r7, #12]
 8005604:	86da      	strh	r2, [r3, #54]	; 0x36
      {
        SET_BIT(hspi->Instance->CR1, SPI_CR1_CRCNEXT);
      }
#endif /* USE_SPI_CRC */
    }
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 8005606:	e05b      	b.n	80056c0 <HAL_SPI_TransmitReceive+0x2e4>
    {
      /* Check TXE flag */
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 8005608:	68fb      	ldr	r3, [r7, #12]
 800560a:	681b      	ldr	r3, [r3, #0]
 800560c:	689b      	ldr	r3, [r3, #8]
 800560e:	f003 0302 	and.w	r3, r3, #2
 8005612:	2b02      	cmp	r3, #2
 8005614:	d11c      	bne.n	8005650 <HAL_SPI_TransmitReceive+0x274>
 8005616:	68fb      	ldr	r3, [r7, #12]
 8005618:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 800561a:	b29b      	uxth	r3, r3
 800561c:	2b00      	cmp	r3, #0
 800561e:	d017      	beq.n	8005650 <HAL_SPI_TransmitReceive+0x274>
 8005620:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8005622:	2b01      	cmp	r3, #1
 8005624:	d114      	bne.n	8005650 <HAL_SPI_TransmitReceive+0x274>
      {
        *(__IO uint8_t *)&hspi->Instance->DR = (*hspi->pTxBuffPtr);
 8005626:	68fb      	ldr	r3, [r7, #12]
 8005628:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800562a:	68fb      	ldr	r3, [r7, #12]
 800562c:	681b      	ldr	r3, [r3, #0]
 800562e:	330c      	adds	r3, #12
 8005630:	7812      	ldrb	r2, [r2, #0]
 8005632:	701a      	strb	r2, [r3, #0]
        hspi->pTxBuffPtr++;
 8005634:	68fb      	ldr	r3, [r7, #12]
 8005636:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8005638:	1c5a      	adds	r2, r3, #1
 800563a:	68fb      	ldr	r3, [r7, #12]
 800563c:	631a      	str	r2, [r3, #48]	; 0x30
        hspi->TxXferCount--;
 800563e:	68fb      	ldr	r3, [r7, #12]
 8005640:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 8005642:	b29b      	uxth	r3, r3
 8005644:	3b01      	subs	r3, #1
 8005646:	b29a      	uxth	r2, r3
 8005648:	68fb      	ldr	r3, [r7, #12]
 800564a:	86da      	strh	r2, [r3, #54]	; 0x36
        /* Next Data is a reception (Rx). Tx not allowed */
        txallowed = 0U;
 800564c:	2300      	movs	r3, #0
 800564e:	62fb      	str	r3, [r7, #44]	; 0x2c
        }
#endif /* USE_SPI_CRC */
      }

      /* Wait until RXNE flag is reset */
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 8005650:	68fb      	ldr	r3, [r7, #12]
 8005652:	681b      	ldr	r3, [r3, #0]
 8005654:	689b      	ldr	r3, [r3, #8]
 8005656:	f003 0301 	and.w	r3, r3, #1
 800565a:	2b01      	cmp	r3, #1
 800565c:	d119      	bne.n	8005692 <HAL_SPI_TransmitReceive+0x2b6>
 800565e:	68fb      	ldr	r3, [r7, #12]
 8005660:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 8005662:	b29b      	uxth	r3, r3
 8005664:	2b00      	cmp	r3, #0
 8005666:	d014      	beq.n	8005692 <HAL_SPI_TransmitReceive+0x2b6>
      {
        (*(uint8_t *)hspi->pRxBuffPtr) = hspi->Instance->DR;
 8005668:	68fb      	ldr	r3, [r7, #12]
 800566a:	681b      	ldr	r3, [r3, #0]
 800566c:	68da      	ldr	r2, [r3, #12]
 800566e:	68fb      	ldr	r3, [r7, #12]
 8005670:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8005672:	b2d2      	uxtb	r2, r2
 8005674:	701a      	strb	r2, [r3, #0]
        hspi->pRxBuffPtr++;
 8005676:	68fb      	ldr	r3, [r7, #12]
 8005678:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800567a:	1c5a      	adds	r2, r3, #1
 800567c:	68fb      	ldr	r3, [r7, #12]
 800567e:	639a      	str	r2, [r3, #56]	; 0x38
        hspi->RxXferCount--;
 8005680:	68fb      	ldr	r3, [r7, #12]
 8005682:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 8005684:	b29b      	uxth	r3, r3
 8005686:	3b01      	subs	r3, #1
 8005688:	b29a      	uxth	r2, r3
 800568a:	68fb      	ldr	r3, [r7, #12]
 800568c:	87da      	strh	r2, [r3, #62]	; 0x3e
        /* Next Data is a Transmission (Tx). Tx is allowed */
        txallowed = 1U;
 800568e:	2301      	movs	r3, #1
 8005690:	62fb      	str	r3, [r7, #44]	; 0x2c
      }
      if ((((HAL_GetTick() - tickstart) >=  Timeout) && ((Timeout != HAL_MAX_DELAY))) || (Timeout == 0U))
 8005692:	f7fc feaf 	bl	80023f4 <HAL_GetTick>
 8005696:	4602      	mov	r2, r0
 8005698:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800569a:	1ad3      	subs	r3, r2, r3
 800569c:	6bba      	ldr	r2, [r7, #56]	; 0x38
 800569e:	429a      	cmp	r2, r3
 80056a0:	d803      	bhi.n	80056aa <HAL_SPI_TransmitReceive+0x2ce>
 80056a2:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80056a4:	f1b3 3fff 	cmp.w	r3, #4294967295
 80056a8:	d102      	bne.n	80056b0 <HAL_SPI_TransmitReceive+0x2d4>
 80056aa:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80056ac:	2b00      	cmp	r3, #0
 80056ae:	d107      	bne.n	80056c0 <HAL_SPI_TransmitReceive+0x2e4>
      {
        errorcode = HAL_TIMEOUT;
 80056b0:	2303      	movs	r3, #3
 80056b2:	f887 302b 	strb.w	r3, [r7, #43]	; 0x2b
        hspi->State = HAL_SPI_STATE_READY;
 80056b6:	68fb      	ldr	r3, [r7, #12]
 80056b8:	2201      	movs	r2, #1
 80056ba:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
        goto error;
 80056be:	e033      	b.n	8005728 <HAL_SPI_TransmitReceive+0x34c>
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 80056c0:	68fb      	ldr	r3, [r7, #12]
 80056c2:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 80056c4:	b29b      	uxth	r3, r3
 80056c6:	2b00      	cmp	r3, #0
 80056c8:	d19e      	bne.n	8005608 <HAL_SPI_TransmitReceive+0x22c>
 80056ca:	68fb      	ldr	r3, [r7, #12]
 80056cc:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 80056ce:	b29b      	uxth	r3, r3
 80056d0:	2b00      	cmp	r3, #0
 80056d2:	d199      	bne.n	8005608 <HAL_SPI_TransmitReceive+0x22c>
    errorcode = HAL_ERROR;
  }
#endif /* USE_SPI_CRC */

  /* Check the end of the transaction */
  if (SPI_EndRxTxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 80056d4:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 80056d6:	6bb9      	ldr	r1, [r7, #56]	; 0x38
 80056d8:	68f8      	ldr	r0, [r7, #12]
 80056da:	f000 fa65 	bl	8005ba8 <SPI_EndRxTxTransaction>
 80056de:	4603      	mov	r3, r0
 80056e0:	2b00      	cmp	r3, #0
 80056e2:	d006      	beq.n	80056f2 <HAL_SPI_TransmitReceive+0x316>
  {
    errorcode = HAL_ERROR;
 80056e4:	2301      	movs	r3, #1
 80056e6:	f887 302b 	strb.w	r3, [r7, #43]	; 0x2b
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 80056ea:	68fb      	ldr	r3, [r7, #12]
 80056ec:	2220      	movs	r2, #32
 80056ee:	655a      	str	r2, [r3, #84]	; 0x54
    goto error;
 80056f0:	e01a      	b.n	8005728 <HAL_SPI_TransmitReceive+0x34c>
  }

  /* Clear overrun flag in 2 Lines communication mode because received is not read */
  if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 80056f2:	68fb      	ldr	r3, [r7, #12]
 80056f4:	689b      	ldr	r3, [r3, #8]
 80056f6:	2b00      	cmp	r3, #0
 80056f8:	d10a      	bne.n	8005710 <HAL_SPI_TransmitReceive+0x334>
  {
    __HAL_SPI_CLEAR_OVRFLAG(hspi);
 80056fa:	2300      	movs	r3, #0
 80056fc:	617b      	str	r3, [r7, #20]
 80056fe:	68fb      	ldr	r3, [r7, #12]
 8005700:	681b      	ldr	r3, [r3, #0]
 8005702:	68db      	ldr	r3, [r3, #12]
 8005704:	617b      	str	r3, [r7, #20]
 8005706:	68fb      	ldr	r3, [r7, #12]
 8005708:	681b      	ldr	r3, [r3, #0]
 800570a:	689b      	ldr	r3, [r3, #8]
 800570c:	617b      	str	r3, [r7, #20]
 800570e:	697b      	ldr	r3, [r7, #20]
  }

  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 8005710:	68fb      	ldr	r3, [r7, #12]
 8005712:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8005714:	2b00      	cmp	r3, #0
 8005716:	d003      	beq.n	8005720 <HAL_SPI_TransmitReceive+0x344>
  {
    errorcode = HAL_ERROR;
 8005718:	2301      	movs	r3, #1
 800571a:	f887 302b 	strb.w	r3, [r7, #43]	; 0x2b
 800571e:	e003      	b.n	8005728 <HAL_SPI_TransmitReceive+0x34c>
  }
  else
  {
    hspi->State = HAL_SPI_STATE_READY;
 8005720:	68fb      	ldr	r3, [r7, #12]
 8005722:	2201      	movs	r2, #1
 8005724:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
  }
  
error :
  __HAL_UNLOCK(hspi);
 8005728:	68fb      	ldr	r3, [r7, #12]
 800572a:	2200      	movs	r2, #0
 800572c:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50
  return errorcode;
 8005730:	f897 302b 	ldrb.w	r3, [r7, #43]	; 0x2b
}
 8005734:	4618      	mov	r0, r3
 8005736:	3730      	adds	r7, #48	; 0x30
 8005738:	46bd      	mov	sp, r7
 800573a:	bd80      	pop	{r7, pc}

0800573c <HAL_SPI_Transmit_DMA>:
  * @param  pData pointer to data buffer
  * @param  Size amount of data to be sent
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SPI_Transmit_DMA(SPI_HandleTypeDef *hspi, uint8_t *pData, uint16_t Size)
{
 800573c:	b580      	push	{r7, lr}
 800573e:	b086      	sub	sp, #24
 8005740:	af00      	add	r7, sp, #0
 8005742:	60f8      	str	r0, [r7, #12]
 8005744:	60b9      	str	r1, [r7, #8]
 8005746:	4613      	mov	r3, r2
 8005748:	80fb      	strh	r3, [r7, #6]
  HAL_StatusTypeDef errorcode = HAL_OK;
 800574a:	2300      	movs	r3, #0
 800574c:	75fb      	strb	r3, [r7, #23]

  /* Check Direction parameter */
  assert_param(IS_SPI_DIRECTION_2LINES_OR_1LINE(hspi->Init.Direction));

  /* Process Locked */
  __HAL_LOCK(hspi);
 800574e:	68fb      	ldr	r3, [r7, #12]
 8005750:	f893 3050 	ldrb.w	r3, [r3, #80]	; 0x50
 8005754:	2b01      	cmp	r3, #1
 8005756:	d101      	bne.n	800575c <HAL_SPI_Transmit_DMA+0x20>
 8005758:	2302      	movs	r3, #2
 800575a:	e097      	b.n	800588c <HAL_SPI_Transmit_DMA+0x150>
 800575c:	68fb      	ldr	r3, [r7, #12]
 800575e:	2201      	movs	r2, #1
 8005760:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50

  if (hspi->State != HAL_SPI_STATE_READY)
 8005764:	68fb      	ldr	r3, [r7, #12]
 8005766:	f893 3051 	ldrb.w	r3, [r3, #81]	; 0x51
 800576a:	b2db      	uxtb	r3, r3
 800576c:	2b01      	cmp	r3, #1
 800576e:	d002      	beq.n	8005776 <HAL_SPI_Transmit_DMA+0x3a>
  {
    errorcode = HAL_BUSY;
 8005770:	2302      	movs	r3, #2
 8005772:	75fb      	strb	r3, [r7, #23]
    goto error;
 8005774:	e085      	b.n	8005882 <HAL_SPI_Transmit_DMA+0x146>
  }

  if ((pData == NULL) || (Size == 0U))
 8005776:	68bb      	ldr	r3, [r7, #8]
 8005778:	2b00      	cmp	r3, #0
 800577a:	d002      	beq.n	8005782 <HAL_SPI_Transmit_DMA+0x46>
 800577c:	88fb      	ldrh	r3, [r7, #6]
 800577e:	2b00      	cmp	r3, #0
 8005780:	d102      	bne.n	8005788 <HAL_SPI_Transmit_DMA+0x4c>
  {
    errorcode = HAL_ERROR;
 8005782:	2301      	movs	r3, #1
 8005784:	75fb      	strb	r3, [r7, #23]
    goto error;
 8005786:	e07c      	b.n	8005882 <HAL_SPI_Transmit_DMA+0x146>
  }

  /* Set the transaction information */
  hspi->State       = HAL_SPI_STATE_BUSY_TX;
 8005788:	68fb      	ldr	r3, [r7, #12]
 800578a:	2203      	movs	r2, #3
 800578c:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 8005790:	68fb      	ldr	r3, [r7, #12]
 8005792:	2200      	movs	r2, #0
 8005794:	655a      	str	r2, [r3, #84]	; 0x54
  hspi->pTxBuffPtr  = (uint8_t *)pData;
 8005796:	68fb      	ldr	r3, [r7, #12]
 8005798:	68ba      	ldr	r2, [r7, #8]
 800579a:	631a      	str	r2, [r3, #48]	; 0x30
  hspi->TxXferSize  = Size;
 800579c:	68fb      	ldr	r3, [r7, #12]
 800579e:	88fa      	ldrh	r2, [r7, #6]
 80057a0:	869a      	strh	r2, [r3, #52]	; 0x34
  hspi->TxXferCount = Size;
 80057a2:	68fb      	ldr	r3, [r7, #12]
 80057a4:	88fa      	ldrh	r2, [r7, #6]
 80057a6:	86da      	strh	r2, [r3, #54]	; 0x36

  /* Init field not used in handle to zero */
  hspi->pRxBuffPtr  = (uint8_t *)NULL;
 80057a8:	68fb      	ldr	r3, [r7, #12]
 80057aa:	2200      	movs	r2, #0
 80057ac:	639a      	str	r2, [r3, #56]	; 0x38
  hspi->TxISR       = NULL;
 80057ae:	68fb      	ldr	r3, [r7, #12]
 80057b0:	2200      	movs	r2, #0
 80057b2:	645a      	str	r2, [r3, #68]	; 0x44
  hspi->RxISR       = NULL;
 80057b4:	68fb      	ldr	r3, [r7, #12]
 80057b6:	2200      	movs	r2, #0
 80057b8:	641a      	str	r2, [r3, #64]	; 0x40
  hspi->RxXferSize  = 0U;
 80057ba:	68fb      	ldr	r3, [r7, #12]
 80057bc:	2200      	movs	r2, #0
 80057be:	879a      	strh	r2, [r3, #60]	; 0x3c
  hspi->RxXferCount = 0U;
 80057c0:	68fb      	ldr	r3, [r7, #12]
 80057c2:	2200      	movs	r2, #0
 80057c4:	87da      	strh	r2, [r3, #62]	; 0x3e

  /* Configure communication direction : 1Line */
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 80057c6:	68fb      	ldr	r3, [r7, #12]
 80057c8:	689b      	ldr	r3, [r3, #8]
 80057ca:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 80057ce:	d10f      	bne.n	80057f0 <HAL_SPI_Transmit_DMA+0xb4>
  {
    /* Disable SPI Peripheral before set 1Line direction (BIDIOE bit) */
    __HAL_SPI_DISABLE(hspi);
 80057d0:	68fb      	ldr	r3, [r7, #12]
 80057d2:	681b      	ldr	r3, [r3, #0]
 80057d4:	681a      	ldr	r2, [r3, #0]
 80057d6:	68fb      	ldr	r3, [r7, #12]
 80057d8:	681b      	ldr	r3, [r3, #0]
 80057da:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 80057de:	601a      	str	r2, [r3, #0]
    SPI_1LINE_TX(hspi);
 80057e0:	68fb      	ldr	r3, [r7, #12]
 80057e2:	681b      	ldr	r3, [r3, #0]
 80057e4:	681a      	ldr	r2, [r3, #0]
 80057e6:	68fb      	ldr	r3, [r7, #12]
 80057e8:	681b      	ldr	r3, [r3, #0]
 80057ea:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 80057ee:	601a      	str	r2, [r3, #0]
    SPI_RESET_CRC(hspi);
  }
#endif /* USE_SPI_CRC */

  /* Set the SPI TxDMA Half transfer complete callback */
  hspi->hdmatx->XferHalfCpltCallback = SPI_DMAHalfTransmitCplt;
 80057f0:	68fb      	ldr	r3, [r7, #12]
 80057f2:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 80057f4:	4a27      	ldr	r2, [pc, #156]	; (8005894 <HAL_SPI_Transmit_DMA+0x158>)
 80057f6:	641a      	str	r2, [r3, #64]	; 0x40

  /* Set the SPI TxDMA transfer complete callback */
  hspi->hdmatx->XferCpltCallback = SPI_DMATransmitCplt;
 80057f8:	68fb      	ldr	r3, [r7, #12]
 80057fa:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 80057fc:	4a26      	ldr	r2, [pc, #152]	; (8005898 <HAL_SPI_Transmit_DMA+0x15c>)
 80057fe:	63da      	str	r2, [r3, #60]	; 0x3c

  /* Set the DMA error callback */
  hspi->hdmatx->XferErrorCallback = SPI_DMAError;
 8005800:	68fb      	ldr	r3, [r7, #12]
 8005802:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8005804:	4a25      	ldr	r2, [pc, #148]	; (800589c <HAL_SPI_Transmit_DMA+0x160>)
 8005806:	64da      	str	r2, [r3, #76]	; 0x4c

  /* Set the DMA AbortCpltCallback */
  hspi->hdmatx->XferAbortCallback = NULL;
 8005808:	68fb      	ldr	r3, [r7, #12]
 800580a:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800580c:	2200      	movs	r2, #0
 800580e:	651a      	str	r2, [r3, #80]	; 0x50

  /* Enable the Tx DMA Stream/Channel */
  if (HAL_OK != HAL_DMA_Start_IT(hspi->hdmatx, (uint32_t)hspi->pTxBuffPtr, (uint32_t)&hspi->Instance->DR,
 8005810:	68fb      	ldr	r3, [r7, #12]
 8005812:	6c98      	ldr	r0, [r3, #72]	; 0x48
 8005814:	68fb      	ldr	r3, [r7, #12]
 8005816:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8005818:	4619      	mov	r1, r3
 800581a:	68fb      	ldr	r3, [r7, #12]
 800581c:	681b      	ldr	r3, [r3, #0]
 800581e:	330c      	adds	r3, #12
 8005820:	461a      	mov	r2, r3
                                 hspi->TxXferCount))
 8005822:	68fb      	ldr	r3, [r7, #12]
 8005824:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 8005826:	b29b      	uxth	r3, r3
  if (HAL_OK != HAL_DMA_Start_IT(hspi->hdmatx, (uint32_t)hspi->pTxBuffPtr, (uint32_t)&hspi->Instance->DR,
 8005828:	f7fc fff0 	bl	800280c <HAL_DMA_Start_IT>
 800582c:	4603      	mov	r3, r0
 800582e:	2b00      	cmp	r3, #0
 8005830:	d008      	beq.n	8005844 <HAL_SPI_Transmit_DMA+0x108>
  {
    /* Update SPI error code */
    SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_DMA);
 8005832:	68fb      	ldr	r3, [r7, #12]
 8005834:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8005836:	f043 0210 	orr.w	r2, r3, #16
 800583a:	68fb      	ldr	r3, [r7, #12]
 800583c:	655a      	str	r2, [r3, #84]	; 0x54
    errorcode = HAL_ERROR;
 800583e:	2301      	movs	r3, #1
 8005840:	75fb      	strb	r3, [r7, #23]

    goto error;
 8005842:	e01e      	b.n	8005882 <HAL_SPI_Transmit_DMA+0x146>
  }

  /* Check if the SPI is already enabled */
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 8005844:	68fb      	ldr	r3, [r7, #12]
 8005846:	681b      	ldr	r3, [r3, #0]
 8005848:	681b      	ldr	r3, [r3, #0]
 800584a:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800584e:	2b40      	cmp	r3, #64	; 0x40
 8005850:	d007      	beq.n	8005862 <HAL_SPI_Transmit_DMA+0x126>
  {
    /* Enable SPI peripheral */
    __HAL_SPI_ENABLE(hspi);
 8005852:	68fb      	ldr	r3, [r7, #12]
 8005854:	681b      	ldr	r3, [r3, #0]
 8005856:	681a      	ldr	r2, [r3, #0]
 8005858:	68fb      	ldr	r3, [r7, #12]
 800585a:	681b      	ldr	r3, [r3, #0]
 800585c:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 8005860:	601a      	str	r2, [r3, #0]
  }

  /* Enable the SPI Error Interrupt Bit */
  __HAL_SPI_ENABLE_IT(hspi, (SPI_IT_ERR));
 8005862:	68fb      	ldr	r3, [r7, #12]
 8005864:	681b      	ldr	r3, [r3, #0]
 8005866:	685a      	ldr	r2, [r3, #4]
 8005868:	68fb      	ldr	r3, [r7, #12]
 800586a:	681b      	ldr	r3, [r3, #0]
 800586c:	f042 0220 	orr.w	r2, r2, #32
 8005870:	605a      	str	r2, [r3, #4]

  /* Enable Tx DMA Request */
  SET_BIT(hspi->Instance->CR2, SPI_CR2_TXDMAEN);
 8005872:	68fb      	ldr	r3, [r7, #12]
 8005874:	681b      	ldr	r3, [r3, #0]
 8005876:	685a      	ldr	r2, [r3, #4]
 8005878:	68fb      	ldr	r3, [r7, #12]
 800587a:	681b      	ldr	r3, [r3, #0]
 800587c:	f042 0202 	orr.w	r2, r2, #2
 8005880:	605a      	str	r2, [r3, #4]

error :
  /* Process Unlocked */
  __HAL_UNLOCK(hspi);
 8005882:	68fb      	ldr	r3, [r7, #12]
 8005884:	2200      	movs	r2, #0
 8005886:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50
  return errorcode;
 800588a:	7dfb      	ldrb	r3, [r7, #23]
}
 800588c:	4618      	mov	r0, r3
 800588e:	3718      	adds	r7, #24
 8005890:	46bd      	mov	sp, r7
 8005892:	bd80      	pop	{r7, pc}
 8005894:	08005971 	.word	0x08005971
 8005898:	080058c9 	.word	0x080058c9
 800589c:	0800598d 	.word	0x0800598d

080058a0 <HAL_SPI_TxHalfCpltCallback>:
  * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
  *               the configuration information for SPI module.
  * @retval None
  */
__weak void HAL_SPI_TxHalfCpltCallback(SPI_HandleTypeDef *hspi)
{
 80058a0:	b480      	push	{r7}
 80058a2:	b083      	sub	sp, #12
 80058a4:	af00      	add	r7, sp, #0
 80058a6:	6078      	str	r0, [r7, #4]
  UNUSED(hspi);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_SPI_TxHalfCpltCallback should be implemented in the user file
   */
}
 80058a8:	bf00      	nop
 80058aa:	370c      	adds	r7, #12
 80058ac:	46bd      	mov	sp, r7
 80058ae:	f85d 7b04 	ldr.w	r7, [sp], #4
 80058b2:	4770      	bx	lr

080058b4 <HAL_SPI_ErrorCallback>:
  * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
  *               the configuration information for SPI module.
  * @retval None
  */
__weak void HAL_SPI_ErrorCallback(SPI_HandleTypeDef *hspi)
{
 80058b4:	b480      	push	{r7}
 80058b6:	b083      	sub	sp, #12
 80058b8:	af00      	add	r7, sp, #0
 80058ba:	6078      	str	r0, [r7, #4]
            the HAL_SPI_ErrorCallback should be implemented in the user file
   */
  /* NOTE : The ErrorCode parameter in the hspi handle is updated by the SPI processes
            and user can use HAL_SPI_GetError() API to check the latest error occurred
   */
}
 80058bc:	bf00      	nop
 80058be:	370c      	adds	r7, #12
 80058c0:	46bd      	mov	sp, r7
 80058c2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80058c6:	4770      	bx	lr

080058c8 <SPI_DMATransmitCplt>:
  * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
  *               the configuration information for the specified DMA module.
  * @retval None
  */
static void SPI_DMATransmitCplt(DMA_HandleTypeDef *hdma)
{
 80058c8:	b580      	push	{r7, lr}
 80058ca:	b086      	sub	sp, #24
 80058cc:	af00      	add	r7, sp, #0
 80058ce:	6078      	str	r0, [r7, #4]
  SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogation MISRAC2012-Rule-11.5 */
 80058d0:	687b      	ldr	r3, [r7, #4]
 80058d2:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80058d4:	617b      	str	r3, [r7, #20]
  uint32_t tickstart;

  /* Init tickstart for timeout management*/
  tickstart = HAL_GetTick();
 80058d6:	f7fc fd8d 	bl	80023f4 <HAL_GetTick>
 80058da:	6138      	str	r0, [r7, #16]

  /* DMA Normal Mode */
  if ((hdma->Instance->CR & DMA_SxCR_CIRC) != DMA_SxCR_CIRC)
 80058dc:	687b      	ldr	r3, [r7, #4]
 80058de:	681b      	ldr	r3, [r3, #0]
 80058e0:	681b      	ldr	r3, [r3, #0]
 80058e2:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80058e6:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 80058ea:	d03b      	beq.n	8005964 <SPI_DMATransmitCplt+0x9c>
  {
    /* Disable ERR interrupt */
    __HAL_SPI_DISABLE_IT(hspi, SPI_IT_ERR);
 80058ec:	697b      	ldr	r3, [r7, #20]
 80058ee:	681b      	ldr	r3, [r3, #0]
 80058f0:	685a      	ldr	r2, [r3, #4]
 80058f2:	697b      	ldr	r3, [r7, #20]
 80058f4:	681b      	ldr	r3, [r3, #0]
 80058f6:	f022 0220 	bic.w	r2, r2, #32
 80058fa:	605a      	str	r2, [r3, #4]

    /* Disable Tx DMA Request */
    CLEAR_BIT(hspi->Instance->CR2, SPI_CR2_TXDMAEN);
 80058fc:	697b      	ldr	r3, [r7, #20]
 80058fe:	681b      	ldr	r3, [r3, #0]
 8005900:	685a      	ldr	r2, [r3, #4]
 8005902:	697b      	ldr	r3, [r7, #20]
 8005904:	681b      	ldr	r3, [r3, #0]
 8005906:	f022 0202 	bic.w	r2, r2, #2
 800590a:	605a      	str	r2, [r3, #4]

    /* Check the end of the transaction */
    if (SPI_EndRxTxTransaction(hspi, SPI_DEFAULT_TIMEOUT, tickstart) != HAL_OK)
 800590c:	693a      	ldr	r2, [r7, #16]
 800590e:	2164      	movs	r1, #100	; 0x64
 8005910:	6978      	ldr	r0, [r7, #20]
 8005912:	f000 f949 	bl	8005ba8 <SPI_EndRxTxTransaction>
 8005916:	4603      	mov	r3, r0
 8005918:	2b00      	cmp	r3, #0
 800591a:	d005      	beq.n	8005928 <SPI_DMATransmitCplt+0x60>
    {
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800591c:	697b      	ldr	r3, [r7, #20]
 800591e:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8005920:	f043 0220 	orr.w	r2, r3, #32
 8005924:	697b      	ldr	r3, [r7, #20]
 8005926:	655a      	str	r2, [r3, #84]	; 0x54
    }

    /* Clear overrun flag in 2 Lines communication mode because received data is not read */
    if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 8005928:	697b      	ldr	r3, [r7, #20]
 800592a:	689b      	ldr	r3, [r3, #8]
 800592c:	2b00      	cmp	r3, #0
 800592e:	d10a      	bne.n	8005946 <SPI_DMATransmitCplt+0x7e>
    {
      __HAL_SPI_CLEAR_OVRFLAG(hspi);
 8005930:	2300      	movs	r3, #0
 8005932:	60fb      	str	r3, [r7, #12]
 8005934:	697b      	ldr	r3, [r7, #20]
 8005936:	681b      	ldr	r3, [r3, #0]
 8005938:	68db      	ldr	r3, [r3, #12]
 800593a:	60fb      	str	r3, [r7, #12]
 800593c:	697b      	ldr	r3, [r7, #20]
 800593e:	681b      	ldr	r3, [r3, #0]
 8005940:	689b      	ldr	r3, [r3, #8]
 8005942:	60fb      	str	r3, [r7, #12]
 8005944:	68fb      	ldr	r3, [r7, #12]
    }

    hspi->TxXferCount = 0U;
 8005946:	697b      	ldr	r3, [r7, #20]
 8005948:	2200      	movs	r2, #0
 800594a:	86da      	strh	r2, [r3, #54]	; 0x36
    hspi->State = HAL_SPI_STATE_READY;
 800594c:	697b      	ldr	r3, [r7, #20]
 800594e:	2201      	movs	r2, #1
 8005950:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51

    if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 8005954:	697b      	ldr	r3, [r7, #20]
 8005956:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8005958:	2b00      	cmp	r3, #0
 800595a:	d003      	beq.n	8005964 <SPI_DMATransmitCplt+0x9c>
    {
      /* Call user error callback */
#if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
      hspi->ErrorCallback(hspi);
#else
      HAL_SPI_ErrorCallback(hspi);
 800595c:	6978      	ldr	r0, [r7, #20]
 800595e:	f7ff ffa9 	bl	80058b4 <HAL_SPI_ErrorCallback>
#endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
      return;
 8005962:	e002      	b.n	800596a <SPI_DMATransmitCplt+0xa2>
  }
  /* Call user Tx complete callback */
#if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
  hspi->TxCpltCallback(hspi);
#else
  HAL_SPI_TxCpltCallback(hspi);
 8005964:	6978      	ldr	r0, [r7, #20]
 8005966:	f00a f9f9 	bl	800fd5c <HAL_SPI_TxCpltCallback>
#endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
}
 800596a:	3718      	adds	r7, #24
 800596c:	46bd      	mov	sp, r7
 800596e:	bd80      	pop	{r7, pc}

08005970 <SPI_DMAHalfTransmitCplt>:
  * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
  *               the configuration information for the specified DMA module.
  * @retval None
  */
static void SPI_DMAHalfTransmitCplt(DMA_HandleTypeDef *hdma)
{
 8005970:	b580      	push	{r7, lr}
 8005972:	b084      	sub	sp, #16
 8005974:	af00      	add	r7, sp, #0
 8005976:	6078      	str	r0, [r7, #4]
  SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogation MISRAC2012-Rule-11.5 */
 8005978:	687b      	ldr	r3, [r7, #4]
 800597a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800597c:	60fb      	str	r3, [r7, #12]

  /* Call user Tx half complete callback */
#if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
  hspi->TxHalfCpltCallback(hspi);
#else
  HAL_SPI_TxHalfCpltCallback(hspi);
 800597e:	68f8      	ldr	r0, [r7, #12]
 8005980:	f7ff ff8e 	bl	80058a0 <HAL_SPI_TxHalfCpltCallback>
#endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
}
 8005984:	bf00      	nop
 8005986:	3710      	adds	r7, #16
 8005988:	46bd      	mov	sp, r7
 800598a:	bd80      	pop	{r7, pc}

0800598c <SPI_DMAError>:
  * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
  *               the configuration information for the specified DMA module.
  * @retval None
  */
static void SPI_DMAError(DMA_HandleTypeDef *hdma)
{
 800598c:	b580      	push	{r7, lr}
 800598e:	b084      	sub	sp, #16
 8005990:	af00      	add	r7, sp, #0
 8005992:	6078      	str	r0, [r7, #4]
  SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogation MISRAC2012-Rule-11.5 */
 8005994:	687b      	ldr	r3, [r7, #4]
 8005996:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8005998:	60fb      	str	r3, [r7, #12]

  /* Stop the disable DMA transfer on SPI side */
  CLEAR_BIT(hspi->Instance->CR2, SPI_CR2_TXDMAEN | SPI_CR2_RXDMAEN);
 800599a:	68fb      	ldr	r3, [r7, #12]
 800599c:	681b      	ldr	r3, [r3, #0]
 800599e:	685a      	ldr	r2, [r3, #4]
 80059a0:	68fb      	ldr	r3, [r7, #12]
 80059a2:	681b      	ldr	r3, [r3, #0]
 80059a4:	f022 0203 	bic.w	r2, r2, #3
 80059a8:	605a      	str	r2, [r3, #4]

  SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_DMA);
 80059aa:	68fb      	ldr	r3, [r7, #12]
 80059ac:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 80059ae:	f043 0210 	orr.w	r2, r3, #16
 80059b2:	68fb      	ldr	r3, [r7, #12]
 80059b4:	655a      	str	r2, [r3, #84]	; 0x54
  hspi->State = HAL_SPI_STATE_READY;
 80059b6:	68fb      	ldr	r3, [r7, #12]
 80059b8:	2201      	movs	r2, #1
 80059ba:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
  /* Call user error callback */
#if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
  hspi->ErrorCallback(hspi);
#else
  HAL_SPI_ErrorCallback(hspi);
 80059be:	68f8      	ldr	r0, [r7, #12]
 80059c0:	f7ff ff78 	bl	80058b4 <HAL_SPI_ErrorCallback>
#endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
}
 80059c4:	bf00      	nop
 80059c6:	3710      	adds	r7, #16
 80059c8:	46bd      	mov	sp, r7
 80059ca:	bd80      	pop	{r7, pc}

080059cc <SPI_WaitFlagStateUntilTimeout>:
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_WaitFlagStateUntilTimeout(SPI_HandleTypeDef *hspi, uint32_t Flag, FlagStatus State,
                                                       uint32_t Timeout, uint32_t Tickstart)
{
 80059cc:	b580      	push	{r7, lr}
 80059ce:	b088      	sub	sp, #32
 80059d0:	af00      	add	r7, sp, #0
 80059d2:	60f8      	str	r0, [r7, #12]
 80059d4:	60b9      	str	r1, [r7, #8]
 80059d6:	603b      	str	r3, [r7, #0]
 80059d8:	4613      	mov	r3, r2
 80059da:	71fb      	strb	r3, [r7, #7]
  __IO uint32_t count;
  uint32_t tmp_timeout;
  uint32_t tmp_tickstart;

  /* Adjust Timeout value  in case of end of transfer */
  tmp_timeout   = Timeout - (HAL_GetTick() - Tickstart);
 80059dc:	f7fc fd0a 	bl	80023f4 <HAL_GetTick>
 80059e0:	4602      	mov	r2, r0
 80059e2:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80059e4:	1a9b      	subs	r3, r3, r2
 80059e6:	683a      	ldr	r2, [r7, #0]
 80059e8:	4413      	add	r3, r2
 80059ea:	61fb      	str	r3, [r7, #28]
  tmp_tickstart = HAL_GetTick();
 80059ec:	f7fc fd02 	bl	80023f4 <HAL_GetTick>
 80059f0:	61b8      	str	r0, [r7, #24]

  /* Calculate Timeout based on a software loop to avoid blocking issue if Systick is disabled */
  count = tmp_timeout * ((SystemCoreClock * 32U) >> 20U);
 80059f2:	4b39      	ldr	r3, [pc, #228]	; (8005ad8 <SPI_WaitFlagStateUntilTimeout+0x10c>)
 80059f4:	681b      	ldr	r3, [r3, #0]
 80059f6:	015b      	lsls	r3, r3, #5
 80059f8:	0d1b      	lsrs	r3, r3, #20
 80059fa:	69fa      	ldr	r2, [r7, #28]
 80059fc:	fb02 f303 	mul.w	r3, r2, r3
 8005a00:	617b      	str	r3, [r7, #20]

  while ((__HAL_SPI_GET_FLAG(hspi, Flag) ? SET : RESET) != State)
 8005a02:	e054      	b.n	8005aae <SPI_WaitFlagStateUntilTimeout+0xe2>
  {
    if (Timeout != HAL_MAX_DELAY)
 8005a04:	683b      	ldr	r3, [r7, #0]
 8005a06:	f1b3 3fff 	cmp.w	r3, #4294967295
 8005a0a:	d050      	beq.n	8005aae <SPI_WaitFlagStateUntilTimeout+0xe2>
    {
      if (((HAL_GetTick() - tmp_tickstart) >= tmp_timeout) || (tmp_timeout == 0U))
 8005a0c:	f7fc fcf2 	bl	80023f4 <HAL_GetTick>
 8005a10:	4602      	mov	r2, r0
 8005a12:	69bb      	ldr	r3, [r7, #24]
 8005a14:	1ad3      	subs	r3, r2, r3
 8005a16:	69fa      	ldr	r2, [r7, #28]
 8005a18:	429a      	cmp	r2, r3
 8005a1a:	d902      	bls.n	8005a22 <SPI_WaitFlagStateUntilTimeout+0x56>
 8005a1c:	69fb      	ldr	r3, [r7, #28]
 8005a1e:	2b00      	cmp	r3, #0
 8005a20:	d13d      	bne.n	8005a9e <SPI_WaitFlagStateUntilTimeout+0xd2>
        /* Disable the SPI and reset the CRC: the CRC value should be cleared
           on both master and slave sides in order to resynchronize the master
           and slave for their respective CRC calculation */

        /* Disable TXE, RXNE and ERR interrupts for the interrupt process */
        __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_TXE | SPI_IT_RXNE | SPI_IT_ERR));
 8005a22:	68fb      	ldr	r3, [r7, #12]
 8005a24:	681b      	ldr	r3, [r3, #0]
 8005a26:	685a      	ldr	r2, [r3, #4]
 8005a28:	68fb      	ldr	r3, [r7, #12]
 8005a2a:	681b      	ldr	r3, [r3, #0]
 8005a2c:	f022 02e0 	bic.w	r2, r2, #224	; 0xe0
 8005a30:	605a      	str	r2, [r3, #4]

        if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8005a32:	68fb      	ldr	r3, [r7, #12]
 8005a34:	685b      	ldr	r3, [r3, #4]
 8005a36:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 8005a3a:	d111      	bne.n	8005a60 <SPI_WaitFlagStateUntilTimeout+0x94>
 8005a3c:	68fb      	ldr	r3, [r7, #12]
 8005a3e:	689b      	ldr	r3, [r3, #8]
 8005a40:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 8005a44:	d004      	beq.n	8005a50 <SPI_WaitFlagStateUntilTimeout+0x84>
                                                     || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXONLY)))
 8005a46:	68fb      	ldr	r3, [r7, #12]
 8005a48:	689b      	ldr	r3, [r3, #8]
 8005a4a:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8005a4e:	d107      	bne.n	8005a60 <SPI_WaitFlagStateUntilTimeout+0x94>
        {
          /* Disable SPI peripheral */
          __HAL_SPI_DISABLE(hspi);
 8005a50:	68fb      	ldr	r3, [r7, #12]
 8005a52:	681b      	ldr	r3, [r3, #0]
 8005a54:	681a      	ldr	r2, [r3, #0]
 8005a56:	68fb      	ldr	r3, [r7, #12]
 8005a58:	681b      	ldr	r3, [r3, #0]
 8005a5a:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 8005a5e:	601a      	str	r2, [r3, #0]
        }

        /* Reset CRC Calculation */
        if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
 8005a60:	68fb      	ldr	r3, [r7, #12]
 8005a62:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8005a64:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8005a68:	d10f      	bne.n	8005a8a <SPI_WaitFlagStateUntilTimeout+0xbe>
        {
          SPI_RESET_CRC(hspi);
 8005a6a:	68fb      	ldr	r3, [r7, #12]
 8005a6c:	681b      	ldr	r3, [r3, #0]
 8005a6e:	681a      	ldr	r2, [r3, #0]
 8005a70:	68fb      	ldr	r3, [r7, #12]
 8005a72:	681b      	ldr	r3, [r3, #0]
 8005a74:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 8005a78:	601a      	str	r2, [r3, #0]
 8005a7a:	68fb      	ldr	r3, [r7, #12]
 8005a7c:	681b      	ldr	r3, [r3, #0]
 8005a7e:	681a      	ldr	r2, [r3, #0]
 8005a80:	68fb      	ldr	r3, [r7, #12]
 8005a82:	681b      	ldr	r3, [r3, #0]
 8005a84:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 8005a88:	601a      	str	r2, [r3, #0]
        }

        hspi->State = HAL_SPI_STATE_READY;
 8005a8a:	68fb      	ldr	r3, [r7, #12]
 8005a8c:	2201      	movs	r2, #1
 8005a8e:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51

        /* Process Unlocked */
        __HAL_UNLOCK(hspi);
 8005a92:	68fb      	ldr	r3, [r7, #12]
 8005a94:	2200      	movs	r2, #0
 8005a96:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50

        return HAL_TIMEOUT;
 8005a9a:	2303      	movs	r3, #3
 8005a9c:	e017      	b.n	8005ace <SPI_WaitFlagStateUntilTimeout+0x102>
      }
      /* If Systick is disabled or not incremented, deactivate timeout to go in disable loop procedure */
      if (count == 0U)
 8005a9e:	697b      	ldr	r3, [r7, #20]
 8005aa0:	2b00      	cmp	r3, #0
 8005aa2:	d101      	bne.n	8005aa8 <SPI_WaitFlagStateUntilTimeout+0xdc>
      {
        tmp_timeout = 0U;
 8005aa4:	2300      	movs	r3, #0
 8005aa6:	61fb      	str	r3, [r7, #28]
      }
      count--;
 8005aa8:	697b      	ldr	r3, [r7, #20]
 8005aaa:	3b01      	subs	r3, #1
 8005aac:	617b      	str	r3, [r7, #20]
  while ((__HAL_SPI_GET_FLAG(hspi, Flag) ? SET : RESET) != State)
 8005aae:	68fb      	ldr	r3, [r7, #12]
 8005ab0:	681b      	ldr	r3, [r3, #0]
 8005ab2:	689a      	ldr	r2, [r3, #8]
 8005ab4:	68bb      	ldr	r3, [r7, #8]
 8005ab6:	4013      	ands	r3, r2
 8005ab8:	68ba      	ldr	r2, [r7, #8]
 8005aba:	429a      	cmp	r2, r3
 8005abc:	bf0c      	ite	eq
 8005abe:	2301      	moveq	r3, #1
 8005ac0:	2300      	movne	r3, #0
 8005ac2:	b2db      	uxtb	r3, r3
 8005ac4:	461a      	mov	r2, r3
 8005ac6:	79fb      	ldrb	r3, [r7, #7]
 8005ac8:	429a      	cmp	r2, r3
 8005aca:	d19b      	bne.n	8005a04 <SPI_WaitFlagStateUntilTimeout+0x38>
    }
  }

  return HAL_OK;
 8005acc:	2300      	movs	r3, #0
}
 8005ace:	4618      	mov	r0, r3
 8005ad0:	3720      	adds	r7, #32
 8005ad2:	46bd      	mov	sp, r7
 8005ad4:	bd80      	pop	{r7, pc}
 8005ad6:	bf00      	nop
 8005ad8:	2000000c 	.word	0x2000000c

08005adc <SPI_EndRxTransaction>:
  * @param  Timeout Timeout duration
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_EndRxTransaction(SPI_HandleTypeDef *hspi,  uint32_t Timeout, uint32_t Tickstart)
{
 8005adc:	b580      	push	{r7, lr}
 8005ade:	b086      	sub	sp, #24
 8005ae0:	af02      	add	r7, sp, #8
 8005ae2:	60f8      	str	r0, [r7, #12]
 8005ae4:	60b9      	str	r1, [r7, #8]
 8005ae6:	607a      	str	r2, [r7, #4]
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8005ae8:	68fb      	ldr	r3, [r7, #12]
 8005aea:	685b      	ldr	r3, [r3, #4]
 8005aec:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 8005af0:	d111      	bne.n	8005b16 <SPI_EndRxTransaction+0x3a>
 8005af2:	68fb      	ldr	r3, [r7, #12]
 8005af4:	689b      	ldr	r3, [r3, #8]
 8005af6:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 8005afa:	d004      	beq.n	8005b06 <SPI_EndRxTransaction+0x2a>
                                               || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXONLY)))
 8005afc:	68fb      	ldr	r3, [r7, #12]
 8005afe:	689b      	ldr	r3, [r3, #8]
 8005b00:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8005b04:	d107      	bne.n	8005b16 <SPI_EndRxTransaction+0x3a>
  {
    /* Disable SPI peripheral */
    __HAL_SPI_DISABLE(hspi);
 8005b06:	68fb      	ldr	r3, [r7, #12]
 8005b08:	681b      	ldr	r3, [r3, #0]
 8005b0a:	681a      	ldr	r2, [r3, #0]
 8005b0c:	68fb      	ldr	r3, [r7, #12]
 8005b0e:	681b      	ldr	r3, [r3, #0]
 8005b10:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 8005b14:	601a      	str	r2, [r3, #0]
  }

  /* Erratasheet: BSY bit may stay high at the end of a data transfer in Slave mode */
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 8005b16:	68fb      	ldr	r3, [r7, #12]
 8005b18:	685b      	ldr	r3, [r3, #4]
 8005b1a:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 8005b1e:	d12a      	bne.n	8005b76 <SPI_EndRxTransaction+0x9a>
  {
    if (hspi->Init.Direction != SPI_DIRECTION_2LINES_RXONLY)
 8005b20:	68fb      	ldr	r3, [r7, #12]
 8005b22:	689b      	ldr	r3, [r3, #8]
 8005b24:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8005b28:	d012      	beq.n	8005b50 <SPI_EndRxTransaction+0x74>
    {
      /* Control the BSY flag */
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 8005b2a:	687b      	ldr	r3, [r7, #4]
 8005b2c:	9300      	str	r3, [sp, #0]
 8005b2e:	68bb      	ldr	r3, [r7, #8]
 8005b30:	2200      	movs	r2, #0
 8005b32:	2180      	movs	r1, #128	; 0x80
 8005b34:	68f8      	ldr	r0, [r7, #12]
 8005b36:	f7ff ff49 	bl	80059cc <SPI_WaitFlagStateUntilTimeout>
 8005b3a:	4603      	mov	r3, r0
 8005b3c:	2b00      	cmp	r3, #0
 8005b3e:	d02d      	beq.n	8005b9c <SPI_EndRxTransaction+0xc0>
      {
        SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 8005b40:	68fb      	ldr	r3, [r7, #12]
 8005b42:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8005b44:	f043 0220 	orr.w	r2, r3, #32
 8005b48:	68fb      	ldr	r3, [r7, #12]
 8005b4a:	655a      	str	r2, [r3, #84]	; 0x54
        return HAL_TIMEOUT;
 8005b4c:	2303      	movs	r3, #3
 8005b4e:	e026      	b.n	8005b9e <SPI_EndRxTransaction+0xc2>
      }
    }
    else
    {
      /* Wait the RXNE reset */
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout, Tickstart) != HAL_OK)
 8005b50:	687b      	ldr	r3, [r7, #4]
 8005b52:	9300      	str	r3, [sp, #0]
 8005b54:	68bb      	ldr	r3, [r7, #8]
 8005b56:	2200      	movs	r2, #0
 8005b58:	2101      	movs	r1, #1
 8005b5a:	68f8      	ldr	r0, [r7, #12]
 8005b5c:	f7ff ff36 	bl	80059cc <SPI_WaitFlagStateUntilTimeout>
 8005b60:	4603      	mov	r3, r0
 8005b62:	2b00      	cmp	r3, #0
 8005b64:	d01a      	beq.n	8005b9c <SPI_EndRxTransaction+0xc0>
      {
        SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 8005b66:	68fb      	ldr	r3, [r7, #12]
 8005b68:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8005b6a:	f043 0220 	orr.w	r2, r3, #32
 8005b6e:	68fb      	ldr	r3, [r7, #12]
 8005b70:	655a      	str	r2, [r3, #84]	; 0x54
        return HAL_TIMEOUT;
 8005b72:	2303      	movs	r3, #3
 8005b74:	e013      	b.n	8005b9e <SPI_EndRxTransaction+0xc2>
    }
  }
  else
  {
    /* Wait the RXNE reset */
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout, Tickstart) != HAL_OK)
 8005b76:	687b      	ldr	r3, [r7, #4]
 8005b78:	9300      	str	r3, [sp, #0]
 8005b7a:	68bb      	ldr	r3, [r7, #8]
 8005b7c:	2200      	movs	r2, #0
 8005b7e:	2101      	movs	r1, #1
 8005b80:	68f8      	ldr	r0, [r7, #12]
 8005b82:	f7ff ff23 	bl	80059cc <SPI_WaitFlagStateUntilTimeout>
 8005b86:	4603      	mov	r3, r0
 8005b88:	2b00      	cmp	r3, #0
 8005b8a:	d007      	beq.n	8005b9c <SPI_EndRxTransaction+0xc0>
    {
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 8005b8c:	68fb      	ldr	r3, [r7, #12]
 8005b8e:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8005b90:	f043 0220 	orr.w	r2, r3, #32
 8005b94:	68fb      	ldr	r3, [r7, #12]
 8005b96:	655a      	str	r2, [r3, #84]	; 0x54
      return HAL_TIMEOUT;
 8005b98:	2303      	movs	r3, #3
 8005b9a:	e000      	b.n	8005b9e <SPI_EndRxTransaction+0xc2>
    }
  }
  return HAL_OK;
 8005b9c:	2300      	movs	r3, #0
}
 8005b9e:	4618      	mov	r0, r3
 8005ba0:	3710      	adds	r7, #16
 8005ba2:	46bd      	mov	sp, r7
 8005ba4:	bd80      	pop	{r7, pc}
	...

08005ba8 <SPI_EndRxTxTransaction>:
  * @param  Timeout Timeout duration
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_EndRxTxTransaction(SPI_HandleTypeDef *hspi, uint32_t Timeout, uint32_t Tickstart)
{
 8005ba8:	b580      	push	{r7, lr}
 8005baa:	b088      	sub	sp, #32
 8005bac:	af02      	add	r7, sp, #8
 8005bae:	60f8      	str	r0, [r7, #12]
 8005bb0:	60b9      	str	r1, [r7, #8]
 8005bb2:	607a      	str	r2, [r7, #4]
  /* Wait until TXE flag */
  if(SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_TXE, SET, Timeout, Tickstart) != HAL_OK)
 8005bb4:	687b      	ldr	r3, [r7, #4]
 8005bb6:	9300      	str	r3, [sp, #0]
 8005bb8:	68bb      	ldr	r3, [r7, #8]
 8005bba:	2201      	movs	r2, #1
 8005bbc:	2102      	movs	r1, #2
 8005bbe:	68f8      	ldr	r0, [r7, #12]
 8005bc0:	f7ff ff04 	bl	80059cc <SPI_WaitFlagStateUntilTimeout>
 8005bc4:	4603      	mov	r3, r0
 8005bc6:	2b00      	cmp	r3, #0
 8005bc8:	d007      	beq.n	8005bda <SPI_EndRxTxTransaction+0x32>
  {
    SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 8005bca:	68fb      	ldr	r3, [r7, #12]
 8005bcc:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8005bce:	f043 0220 	orr.w	r2, r3, #32
 8005bd2:	68fb      	ldr	r3, [r7, #12]
 8005bd4:	655a      	str	r2, [r3, #84]	; 0x54
    return HAL_TIMEOUT;
 8005bd6:	2303      	movs	r3, #3
 8005bd8:	e032      	b.n	8005c40 <SPI_EndRxTxTransaction+0x98>
  }

  /* Timeout in µs */
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 8005bda:	4b1b      	ldr	r3, [pc, #108]	; (8005c48 <SPI_EndRxTxTransaction+0xa0>)
 8005bdc:	681b      	ldr	r3, [r3, #0]
 8005bde:	4a1b      	ldr	r2, [pc, #108]	; (8005c4c <SPI_EndRxTxTransaction+0xa4>)
 8005be0:	fba2 2303 	umull	r2, r3, r2, r3
 8005be4:	0d5b      	lsrs	r3, r3, #21
 8005be6:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 8005bea:	fb02 f303 	mul.w	r3, r2, r3
 8005bee:	617b      	str	r3, [r7, #20]
  /* Erratasheet: BSY bit may stay high at the end of a data transfer in Slave mode */
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 8005bf0:	68fb      	ldr	r3, [r7, #12]
 8005bf2:	685b      	ldr	r3, [r3, #4]
 8005bf4:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 8005bf8:	d112      	bne.n	8005c20 <SPI_EndRxTxTransaction+0x78>
  {
    /* Control the BSY flag */
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 8005bfa:	687b      	ldr	r3, [r7, #4]
 8005bfc:	9300      	str	r3, [sp, #0]
 8005bfe:	68bb      	ldr	r3, [r7, #8]
 8005c00:	2200      	movs	r2, #0
 8005c02:	2180      	movs	r1, #128	; 0x80
 8005c04:	68f8      	ldr	r0, [r7, #12]
 8005c06:	f7ff fee1 	bl	80059cc <SPI_WaitFlagStateUntilTimeout>
 8005c0a:	4603      	mov	r3, r0
 8005c0c:	2b00      	cmp	r3, #0
 8005c0e:	d016      	beq.n	8005c3e <SPI_EndRxTxTransaction+0x96>
    {
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 8005c10:	68fb      	ldr	r3, [r7, #12]
 8005c12:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8005c14:	f043 0220 	orr.w	r2, r3, #32
 8005c18:	68fb      	ldr	r3, [r7, #12]
 8005c1a:	655a      	str	r2, [r3, #84]	; 0x54
      return HAL_TIMEOUT;
 8005c1c:	2303      	movs	r3, #3
 8005c1e:	e00f      	b.n	8005c40 <SPI_EndRxTxTransaction+0x98>
    * User have to calculate the timeout value to fit with the time of 1 byte transfer.
    * This time is directly link with the SPI clock from Master device.
    */
    do
    {
      if (count == 0U)
 8005c20:	697b      	ldr	r3, [r7, #20]
 8005c22:	2b00      	cmp	r3, #0
 8005c24:	d00a      	beq.n	8005c3c <SPI_EndRxTxTransaction+0x94>
      {
        break;
      }
      count--;
 8005c26:	697b      	ldr	r3, [r7, #20]
 8005c28:	3b01      	subs	r3, #1
 8005c2a:	617b      	str	r3, [r7, #20]
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
 8005c2c:	68fb      	ldr	r3, [r7, #12]
 8005c2e:	681b      	ldr	r3, [r3, #0]
 8005c30:	689b      	ldr	r3, [r3, #8]
 8005c32:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8005c36:	2b80      	cmp	r3, #128	; 0x80
 8005c38:	d0f2      	beq.n	8005c20 <SPI_EndRxTxTransaction+0x78>
 8005c3a:	e000      	b.n	8005c3e <SPI_EndRxTxTransaction+0x96>
        break;
 8005c3c:	bf00      	nop
  }

  return HAL_OK;
 8005c3e:	2300      	movs	r3, #0
}
 8005c40:	4618      	mov	r0, r3
 8005c42:	3718      	adds	r7, #24
 8005c44:	46bd      	mov	sp, r7
 8005c46:	bd80      	pop	{r7, pc}
 8005c48:	2000000c 	.word	0x2000000c
 8005c4c:	165e9f81 	.word	0x165e9f81

08005c50 <HAL_TIM_Base_Init>:
  *         Ex: call @ref HAL_TIM_Base_DeInit() before HAL_TIM_Base_Init()
  * @param  htim TIM Base handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIM_Base_Init(TIM_HandleTypeDef *htim)
{
 8005c50:	b580      	push	{r7, lr}
 8005c52:	b082      	sub	sp, #8
 8005c54:	af00      	add	r7, sp, #0
 8005c56:	6078      	str	r0, [r7, #4]
  /* Check the TIM handle allocation */
  if (htim == NULL)
 8005c58:	687b      	ldr	r3, [r7, #4]
 8005c5a:	2b00      	cmp	r3, #0
 8005c5c:	d101      	bne.n	8005c62 <HAL_TIM_Base_Init+0x12>
  {
    return HAL_ERROR;
 8005c5e:	2301      	movs	r3, #1
 8005c60:	e041      	b.n	8005ce6 <HAL_TIM_Base_Init+0x96>
  assert_param(IS_TIM_COUNTER_MODE(htim->Init.CounterMode));
  assert_param(IS_TIM_CLOCKDIVISION_DIV(htim->Init.ClockDivision));
  assert_param(IS_TIM_PERIOD(htim, htim->Init.Period));
  assert_param(IS_TIM_AUTORELOAD_PRELOAD(htim->Init.AutoReloadPreload));

  if (htim->State == HAL_TIM_STATE_RESET)
 8005c62:	687b      	ldr	r3, [r7, #4]
 8005c64:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8005c68:	b2db      	uxtb	r3, r3
 8005c6a:	2b00      	cmp	r3, #0
 8005c6c:	d106      	bne.n	8005c7c <HAL_TIM_Base_Init+0x2c>
  {
    /* Allocate lock resource and initialize it */
    htim->Lock = HAL_UNLOCKED;
 8005c6e:	687b      	ldr	r3, [r7, #4]
 8005c70:	2200      	movs	r2, #0
 8005c72:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
    }
    /* Init the low level hardware : GPIO, CLOCK, NVIC */
    htim->Base_MspInitCallback(htim);
#else
    /* Init the low level hardware : GPIO, CLOCK, NVIC */
    HAL_TIM_Base_MspInit(htim);
 8005c76:	6878      	ldr	r0, [r7, #4]
 8005c78:	f7fc f844 	bl	8001d04 <HAL_TIM_Base_MspInit>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
  }

  /* Set the TIM state */
  htim->State = HAL_TIM_STATE_BUSY;
 8005c7c:	687b      	ldr	r3, [r7, #4]
 8005c7e:	2202      	movs	r2, #2
 8005c80:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d

  /* Set the Time Base configuration */
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 8005c84:	687b      	ldr	r3, [r7, #4]
 8005c86:	681a      	ldr	r2, [r3, #0]
 8005c88:	687b      	ldr	r3, [r7, #4]
 8005c8a:	3304      	adds	r3, #4
 8005c8c:	4619      	mov	r1, r3
 8005c8e:	4610      	mov	r0, r2
 8005c90:	f000 fc32 	bl	80064f8 <TIM_Base_SetConfig>

  /* Initialize the DMA burst operation state */
  htim->DMABurstState = HAL_DMA_BURST_STATE_READY;
 8005c94:	687b      	ldr	r3, [r7, #4]
 8005c96:	2201      	movs	r2, #1
 8005c98:	f883 2046 	strb.w	r2, [r3, #70]	; 0x46

  /* Initialize the TIM channels state */
  TIM_CHANNEL_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 8005c9c:	687b      	ldr	r3, [r7, #4]
 8005c9e:	2201      	movs	r2, #1
 8005ca0:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8005ca4:	687b      	ldr	r3, [r7, #4]
 8005ca6:	2201      	movs	r2, #1
 8005ca8:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 8005cac:	687b      	ldr	r3, [r7, #4]
 8005cae:	2201      	movs	r2, #1
 8005cb0:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 8005cb4:	687b      	ldr	r3, [r7, #4]
 8005cb6:	2201      	movs	r2, #1
 8005cb8:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
  TIM_CHANNEL_N_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 8005cbc:	687b      	ldr	r3, [r7, #4]
 8005cbe:	2201      	movs	r2, #1
 8005cc0:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 8005cc4:	687b      	ldr	r3, [r7, #4]
 8005cc6:	2201      	movs	r2, #1
 8005cc8:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43
 8005ccc:	687b      	ldr	r3, [r7, #4]
 8005cce:	2201      	movs	r2, #1
 8005cd0:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 8005cd4:	687b      	ldr	r3, [r7, #4]
 8005cd6:	2201      	movs	r2, #1
 8005cd8:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45

  /* Initialize the TIM state*/
  htim->State = HAL_TIM_STATE_READY;
 8005cdc:	687b      	ldr	r3, [r7, #4]
 8005cde:	2201      	movs	r2, #1
 8005ce0:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d

  return HAL_OK;
 8005ce4:	2300      	movs	r3, #0
}
 8005ce6:	4618      	mov	r0, r3
 8005ce8:	3708      	adds	r7, #8
 8005cea:	46bd      	mov	sp, r7
 8005cec:	bd80      	pop	{r7, pc}
	...

08005cf0 <HAL_TIM_Base_Start_IT>:
  * @brief  Starts the TIM Base generation in interrupt mode.
  * @param  htim TIM Base handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIM_Base_Start_IT(TIM_HandleTypeDef *htim)
{
 8005cf0:	b480      	push	{r7}
 8005cf2:	b085      	sub	sp, #20
 8005cf4:	af00      	add	r7, sp, #0
 8005cf6:	6078      	str	r0, [r7, #4]

  /* Check the parameters */
  assert_param(IS_TIM_INSTANCE(htim->Instance));

  /* Check the TIM state */
  if (htim->State != HAL_TIM_STATE_READY)
 8005cf8:	687b      	ldr	r3, [r7, #4]
 8005cfa:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8005cfe:	b2db      	uxtb	r3, r3
 8005d00:	2b01      	cmp	r3, #1
 8005d02:	d001      	beq.n	8005d08 <HAL_TIM_Base_Start_IT+0x18>
  {
    return HAL_ERROR;
 8005d04:	2301      	movs	r3, #1
 8005d06:	e044      	b.n	8005d92 <HAL_TIM_Base_Start_IT+0xa2>
  }

  /* Set the TIM state */
  htim->State = HAL_TIM_STATE_BUSY;
 8005d08:	687b      	ldr	r3, [r7, #4]
 8005d0a:	2202      	movs	r2, #2
 8005d0c:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d

  /* Enable the TIM Update interrupt */
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
 8005d10:	687b      	ldr	r3, [r7, #4]
 8005d12:	681b      	ldr	r3, [r3, #0]
 8005d14:	68da      	ldr	r2, [r3, #12]
 8005d16:	687b      	ldr	r3, [r7, #4]
 8005d18:	681b      	ldr	r3, [r3, #0]
 8005d1a:	f042 0201 	orr.w	r2, r2, #1
 8005d1e:	60da      	str	r2, [r3, #12]

  /* Enable the Peripheral, except in trigger mode where enable is automatically done with trigger */
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 8005d20:	687b      	ldr	r3, [r7, #4]
 8005d22:	681b      	ldr	r3, [r3, #0]
 8005d24:	4a1e      	ldr	r2, [pc, #120]	; (8005da0 <HAL_TIM_Base_Start_IT+0xb0>)
 8005d26:	4293      	cmp	r3, r2
 8005d28:	d018      	beq.n	8005d5c <HAL_TIM_Base_Start_IT+0x6c>
 8005d2a:	687b      	ldr	r3, [r7, #4]
 8005d2c:	681b      	ldr	r3, [r3, #0]
 8005d2e:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8005d32:	d013      	beq.n	8005d5c <HAL_TIM_Base_Start_IT+0x6c>
 8005d34:	687b      	ldr	r3, [r7, #4]
 8005d36:	681b      	ldr	r3, [r3, #0]
 8005d38:	4a1a      	ldr	r2, [pc, #104]	; (8005da4 <HAL_TIM_Base_Start_IT+0xb4>)
 8005d3a:	4293      	cmp	r3, r2
 8005d3c:	d00e      	beq.n	8005d5c <HAL_TIM_Base_Start_IT+0x6c>
 8005d3e:	687b      	ldr	r3, [r7, #4]
 8005d40:	681b      	ldr	r3, [r3, #0]
 8005d42:	4a19      	ldr	r2, [pc, #100]	; (8005da8 <HAL_TIM_Base_Start_IT+0xb8>)
 8005d44:	4293      	cmp	r3, r2
 8005d46:	d009      	beq.n	8005d5c <HAL_TIM_Base_Start_IT+0x6c>
 8005d48:	687b      	ldr	r3, [r7, #4]
 8005d4a:	681b      	ldr	r3, [r3, #0]
 8005d4c:	4a17      	ldr	r2, [pc, #92]	; (8005dac <HAL_TIM_Base_Start_IT+0xbc>)
 8005d4e:	4293      	cmp	r3, r2
 8005d50:	d004      	beq.n	8005d5c <HAL_TIM_Base_Start_IT+0x6c>
 8005d52:	687b      	ldr	r3, [r7, #4]
 8005d54:	681b      	ldr	r3, [r3, #0]
 8005d56:	4a16      	ldr	r2, [pc, #88]	; (8005db0 <HAL_TIM_Base_Start_IT+0xc0>)
 8005d58:	4293      	cmp	r3, r2
 8005d5a:	d111      	bne.n	8005d80 <HAL_TIM_Base_Start_IT+0x90>
  {
    tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
 8005d5c:	687b      	ldr	r3, [r7, #4]
 8005d5e:	681b      	ldr	r3, [r3, #0]
 8005d60:	689b      	ldr	r3, [r3, #8]
 8005d62:	f003 0307 	and.w	r3, r3, #7
 8005d66:	60fb      	str	r3, [r7, #12]
    if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 8005d68:	68fb      	ldr	r3, [r7, #12]
 8005d6a:	2b06      	cmp	r3, #6
 8005d6c:	d010      	beq.n	8005d90 <HAL_TIM_Base_Start_IT+0xa0>
    {
      __HAL_TIM_ENABLE(htim);
 8005d6e:	687b      	ldr	r3, [r7, #4]
 8005d70:	681b      	ldr	r3, [r3, #0]
 8005d72:	681a      	ldr	r2, [r3, #0]
 8005d74:	687b      	ldr	r3, [r7, #4]
 8005d76:	681b      	ldr	r3, [r3, #0]
 8005d78:	f042 0201 	orr.w	r2, r2, #1
 8005d7c:	601a      	str	r2, [r3, #0]
    if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 8005d7e:	e007      	b.n	8005d90 <HAL_TIM_Base_Start_IT+0xa0>
    }
  }
  else
  {
    __HAL_TIM_ENABLE(htim);
 8005d80:	687b      	ldr	r3, [r7, #4]
 8005d82:	681b      	ldr	r3, [r3, #0]
 8005d84:	681a      	ldr	r2, [r3, #0]
 8005d86:	687b      	ldr	r3, [r7, #4]
 8005d88:	681b      	ldr	r3, [r3, #0]
 8005d8a:	f042 0201 	orr.w	r2, r2, #1
 8005d8e:	601a      	str	r2, [r3, #0]
  }

  /* Return function status */
  return HAL_OK;
 8005d90:	2300      	movs	r3, #0
}
 8005d92:	4618      	mov	r0, r3
 8005d94:	3714      	adds	r7, #20
 8005d96:	46bd      	mov	sp, r7
 8005d98:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005d9c:	4770      	bx	lr
 8005d9e:	bf00      	nop
 8005da0:	40010000 	.word	0x40010000
 8005da4:	40000400 	.word	0x40000400
 8005da8:	40000800 	.word	0x40000800
 8005dac:	40000c00 	.word	0x40000c00
 8005db0:	40014000 	.word	0x40014000

08005db4 <HAL_TIM_PWM_Init>:
  *         Ex: call @ref HAL_TIM_PWM_DeInit() before HAL_TIM_PWM_Init()
  * @param  htim TIM PWM handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIM_PWM_Init(TIM_HandleTypeDef *htim)
{
 8005db4:	b580      	push	{r7, lr}
 8005db6:	b082      	sub	sp, #8
 8005db8:	af00      	add	r7, sp, #0
 8005dba:	6078      	str	r0, [r7, #4]
  /* Check the TIM handle allocation */
  if (htim == NULL)
 8005dbc:	687b      	ldr	r3, [r7, #4]
 8005dbe:	2b00      	cmp	r3, #0
 8005dc0:	d101      	bne.n	8005dc6 <HAL_TIM_PWM_Init+0x12>
  {
    return HAL_ERROR;
 8005dc2:	2301      	movs	r3, #1
 8005dc4:	e041      	b.n	8005e4a <HAL_TIM_PWM_Init+0x96>
  assert_param(IS_TIM_COUNTER_MODE(htim->Init.CounterMode));
  assert_param(IS_TIM_CLOCKDIVISION_DIV(htim->Init.ClockDivision));
  assert_param(IS_TIM_PERIOD(htim, htim->Init.Period));
  assert_param(IS_TIM_AUTORELOAD_PRELOAD(htim->Init.AutoReloadPreload));

  if (htim->State == HAL_TIM_STATE_RESET)
 8005dc6:	687b      	ldr	r3, [r7, #4]
 8005dc8:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8005dcc:	b2db      	uxtb	r3, r3
 8005dce:	2b00      	cmp	r3, #0
 8005dd0:	d106      	bne.n	8005de0 <HAL_TIM_PWM_Init+0x2c>
  {
    /* Allocate lock resource and initialize it */
    htim->Lock = HAL_UNLOCKED;
 8005dd2:	687b      	ldr	r3, [r7, #4]
 8005dd4:	2200      	movs	r2, #0
 8005dd6:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
    }
    /* Init the low level hardware : GPIO, CLOCK, NVIC */
    htim->PWM_MspInitCallback(htim);
#else
    /* Init the low level hardware : GPIO, CLOCK, NVIC and DMA */
    HAL_TIM_PWM_MspInit(htim);
 8005dda:	6878      	ldr	r0, [r7, #4]
 8005ddc:	f7fb ffd6 	bl	8001d8c <HAL_TIM_PWM_MspInit>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
  }

  /* Set the TIM state */
  htim->State = HAL_TIM_STATE_BUSY;
 8005de0:	687b      	ldr	r3, [r7, #4]
 8005de2:	2202      	movs	r2, #2
 8005de4:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d

  /* Init the base time for the PWM */
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 8005de8:	687b      	ldr	r3, [r7, #4]
 8005dea:	681a      	ldr	r2, [r3, #0]
 8005dec:	687b      	ldr	r3, [r7, #4]
 8005dee:	3304      	adds	r3, #4
 8005df0:	4619      	mov	r1, r3
 8005df2:	4610      	mov	r0, r2
 8005df4:	f000 fb80 	bl	80064f8 <TIM_Base_SetConfig>

  /* Initialize the DMA burst operation state */
  htim->DMABurstState = HAL_DMA_BURST_STATE_READY;
 8005df8:	687b      	ldr	r3, [r7, #4]
 8005dfa:	2201      	movs	r2, #1
 8005dfc:	f883 2046 	strb.w	r2, [r3, #70]	; 0x46

  /* Initialize the TIM channels state */
  TIM_CHANNEL_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 8005e00:	687b      	ldr	r3, [r7, #4]
 8005e02:	2201      	movs	r2, #1
 8005e04:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8005e08:	687b      	ldr	r3, [r7, #4]
 8005e0a:	2201      	movs	r2, #1
 8005e0c:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 8005e10:	687b      	ldr	r3, [r7, #4]
 8005e12:	2201      	movs	r2, #1
 8005e14:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 8005e18:	687b      	ldr	r3, [r7, #4]
 8005e1a:	2201      	movs	r2, #1
 8005e1c:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
  TIM_CHANNEL_N_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 8005e20:	687b      	ldr	r3, [r7, #4]
 8005e22:	2201      	movs	r2, #1
 8005e24:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 8005e28:	687b      	ldr	r3, [r7, #4]
 8005e2a:	2201      	movs	r2, #1
 8005e2c:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43
 8005e30:	687b      	ldr	r3, [r7, #4]
 8005e32:	2201      	movs	r2, #1
 8005e34:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 8005e38:	687b      	ldr	r3, [r7, #4]
 8005e3a:	2201      	movs	r2, #1
 8005e3c:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45

  /* Initialize the TIM state*/
  htim->State = HAL_TIM_STATE_READY;
 8005e40:	687b      	ldr	r3, [r7, #4]
 8005e42:	2201      	movs	r2, #1
 8005e44:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d

  return HAL_OK;
 8005e48:	2300      	movs	r3, #0
}
 8005e4a:	4618      	mov	r0, r3
 8005e4c:	3708      	adds	r7, #8
 8005e4e:	46bd      	mov	sp, r7
 8005e50:	bd80      	pop	{r7, pc}
	...

08005e54 <HAL_TIM_PWM_Start>:
  *            @arg TIM_CHANNEL_3: TIM Channel 3 selected
  *            @arg TIM_CHANNEL_4: TIM Channel 4 selected
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIM_PWM_Start(TIM_HandleTypeDef *htim, uint32_t Channel)
{
 8005e54:	b580      	push	{r7, lr}
 8005e56:	b084      	sub	sp, #16
 8005e58:	af00      	add	r7, sp, #0
 8005e5a:	6078      	str	r0, [r7, #4]
 8005e5c:	6039      	str	r1, [r7, #0]

  /* Check the parameters */
  assert_param(IS_TIM_CCX_INSTANCE(htim->Instance, Channel));

  /* Check the TIM channel state */
  if (TIM_CHANNEL_STATE_GET(htim, Channel) != HAL_TIM_CHANNEL_STATE_READY)
 8005e5e:	683b      	ldr	r3, [r7, #0]
 8005e60:	2b00      	cmp	r3, #0
 8005e62:	d109      	bne.n	8005e78 <HAL_TIM_PWM_Start+0x24>
 8005e64:	687b      	ldr	r3, [r7, #4]
 8005e66:	f893 303e 	ldrb.w	r3, [r3, #62]	; 0x3e
 8005e6a:	b2db      	uxtb	r3, r3
 8005e6c:	2b01      	cmp	r3, #1
 8005e6e:	bf14      	ite	ne
 8005e70:	2301      	movne	r3, #1
 8005e72:	2300      	moveq	r3, #0
 8005e74:	b2db      	uxtb	r3, r3
 8005e76:	e022      	b.n	8005ebe <HAL_TIM_PWM_Start+0x6a>
 8005e78:	683b      	ldr	r3, [r7, #0]
 8005e7a:	2b04      	cmp	r3, #4
 8005e7c:	d109      	bne.n	8005e92 <HAL_TIM_PWM_Start+0x3e>
 8005e7e:	687b      	ldr	r3, [r7, #4]
 8005e80:	f893 303f 	ldrb.w	r3, [r3, #63]	; 0x3f
 8005e84:	b2db      	uxtb	r3, r3
 8005e86:	2b01      	cmp	r3, #1
 8005e88:	bf14      	ite	ne
 8005e8a:	2301      	movne	r3, #1
 8005e8c:	2300      	moveq	r3, #0
 8005e8e:	b2db      	uxtb	r3, r3
 8005e90:	e015      	b.n	8005ebe <HAL_TIM_PWM_Start+0x6a>
 8005e92:	683b      	ldr	r3, [r7, #0]
 8005e94:	2b08      	cmp	r3, #8
 8005e96:	d109      	bne.n	8005eac <HAL_TIM_PWM_Start+0x58>
 8005e98:	687b      	ldr	r3, [r7, #4]
 8005e9a:	f893 3040 	ldrb.w	r3, [r3, #64]	; 0x40
 8005e9e:	b2db      	uxtb	r3, r3
 8005ea0:	2b01      	cmp	r3, #1
 8005ea2:	bf14      	ite	ne
 8005ea4:	2301      	movne	r3, #1
 8005ea6:	2300      	moveq	r3, #0
 8005ea8:	b2db      	uxtb	r3, r3
 8005eaa:	e008      	b.n	8005ebe <HAL_TIM_PWM_Start+0x6a>
 8005eac:	687b      	ldr	r3, [r7, #4]
 8005eae:	f893 3041 	ldrb.w	r3, [r3, #65]	; 0x41
 8005eb2:	b2db      	uxtb	r3, r3
 8005eb4:	2b01      	cmp	r3, #1
 8005eb6:	bf14      	ite	ne
 8005eb8:	2301      	movne	r3, #1
 8005eba:	2300      	moveq	r3, #0
 8005ebc:	b2db      	uxtb	r3, r3
 8005ebe:	2b00      	cmp	r3, #0
 8005ec0:	d001      	beq.n	8005ec6 <HAL_TIM_PWM_Start+0x72>
  {
    return HAL_ERROR;
 8005ec2:	2301      	movs	r3, #1
 8005ec4:	e068      	b.n	8005f98 <HAL_TIM_PWM_Start+0x144>
  }

  /* Set the TIM channel state */
  TIM_CHANNEL_STATE_SET(htim, Channel, HAL_TIM_CHANNEL_STATE_BUSY);
 8005ec6:	683b      	ldr	r3, [r7, #0]
 8005ec8:	2b00      	cmp	r3, #0
 8005eca:	d104      	bne.n	8005ed6 <HAL_TIM_PWM_Start+0x82>
 8005ecc:	687b      	ldr	r3, [r7, #4]
 8005ece:	2202      	movs	r2, #2
 8005ed0:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8005ed4:	e013      	b.n	8005efe <HAL_TIM_PWM_Start+0xaa>
 8005ed6:	683b      	ldr	r3, [r7, #0]
 8005ed8:	2b04      	cmp	r3, #4
 8005eda:	d104      	bne.n	8005ee6 <HAL_TIM_PWM_Start+0x92>
 8005edc:	687b      	ldr	r3, [r7, #4]
 8005ede:	2202      	movs	r2, #2
 8005ee0:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 8005ee4:	e00b      	b.n	8005efe <HAL_TIM_PWM_Start+0xaa>
 8005ee6:	683b      	ldr	r3, [r7, #0]
 8005ee8:	2b08      	cmp	r3, #8
 8005eea:	d104      	bne.n	8005ef6 <HAL_TIM_PWM_Start+0xa2>
 8005eec:	687b      	ldr	r3, [r7, #4]
 8005eee:	2202      	movs	r2, #2
 8005ef0:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 8005ef4:	e003      	b.n	8005efe <HAL_TIM_PWM_Start+0xaa>
 8005ef6:	687b      	ldr	r3, [r7, #4]
 8005ef8:	2202      	movs	r2, #2
 8005efa:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41

  /* Enable the Capture compare channel */
  TIM_CCxChannelCmd(htim->Instance, Channel, TIM_CCx_ENABLE);
 8005efe:	687b      	ldr	r3, [r7, #4]
 8005f00:	681b      	ldr	r3, [r3, #0]
 8005f02:	2201      	movs	r2, #1
 8005f04:	6839      	ldr	r1, [r7, #0]
 8005f06:	4618      	mov	r0, r3
 8005f08:	f000 fda8 	bl	8006a5c <TIM_CCxChannelCmd>

  if (IS_TIM_BREAK_INSTANCE(htim->Instance) != RESET)
 8005f0c:	687b      	ldr	r3, [r7, #4]
 8005f0e:	681b      	ldr	r3, [r3, #0]
 8005f10:	4a23      	ldr	r2, [pc, #140]	; (8005fa0 <HAL_TIM_PWM_Start+0x14c>)
 8005f12:	4293      	cmp	r3, r2
 8005f14:	d107      	bne.n	8005f26 <HAL_TIM_PWM_Start+0xd2>
  {
    /* Enable the main output */
    __HAL_TIM_MOE_ENABLE(htim);
 8005f16:	687b      	ldr	r3, [r7, #4]
 8005f18:	681b      	ldr	r3, [r3, #0]
 8005f1a:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8005f1c:	687b      	ldr	r3, [r7, #4]
 8005f1e:	681b      	ldr	r3, [r3, #0]
 8005f20:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 8005f24:	645a      	str	r2, [r3, #68]	; 0x44
  }

  /* Enable the Peripheral, except in trigger mode where enable is automatically done with trigger */
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 8005f26:	687b      	ldr	r3, [r7, #4]
 8005f28:	681b      	ldr	r3, [r3, #0]
 8005f2a:	4a1d      	ldr	r2, [pc, #116]	; (8005fa0 <HAL_TIM_PWM_Start+0x14c>)
 8005f2c:	4293      	cmp	r3, r2
 8005f2e:	d018      	beq.n	8005f62 <HAL_TIM_PWM_Start+0x10e>
 8005f30:	687b      	ldr	r3, [r7, #4]
 8005f32:	681b      	ldr	r3, [r3, #0]
 8005f34:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8005f38:	d013      	beq.n	8005f62 <HAL_TIM_PWM_Start+0x10e>
 8005f3a:	687b      	ldr	r3, [r7, #4]
 8005f3c:	681b      	ldr	r3, [r3, #0]
 8005f3e:	4a19      	ldr	r2, [pc, #100]	; (8005fa4 <HAL_TIM_PWM_Start+0x150>)
 8005f40:	4293      	cmp	r3, r2
 8005f42:	d00e      	beq.n	8005f62 <HAL_TIM_PWM_Start+0x10e>
 8005f44:	687b      	ldr	r3, [r7, #4]
 8005f46:	681b      	ldr	r3, [r3, #0]
 8005f48:	4a17      	ldr	r2, [pc, #92]	; (8005fa8 <HAL_TIM_PWM_Start+0x154>)
 8005f4a:	4293      	cmp	r3, r2
 8005f4c:	d009      	beq.n	8005f62 <HAL_TIM_PWM_Start+0x10e>
 8005f4e:	687b      	ldr	r3, [r7, #4]
 8005f50:	681b      	ldr	r3, [r3, #0]
 8005f52:	4a16      	ldr	r2, [pc, #88]	; (8005fac <HAL_TIM_PWM_Start+0x158>)
 8005f54:	4293      	cmp	r3, r2
 8005f56:	d004      	beq.n	8005f62 <HAL_TIM_PWM_Start+0x10e>
 8005f58:	687b      	ldr	r3, [r7, #4]
 8005f5a:	681b      	ldr	r3, [r3, #0]
 8005f5c:	4a14      	ldr	r2, [pc, #80]	; (8005fb0 <HAL_TIM_PWM_Start+0x15c>)
 8005f5e:	4293      	cmp	r3, r2
 8005f60:	d111      	bne.n	8005f86 <HAL_TIM_PWM_Start+0x132>
  {
    tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
 8005f62:	687b      	ldr	r3, [r7, #4]
 8005f64:	681b      	ldr	r3, [r3, #0]
 8005f66:	689b      	ldr	r3, [r3, #8]
 8005f68:	f003 0307 	and.w	r3, r3, #7
 8005f6c:	60fb      	str	r3, [r7, #12]
    if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 8005f6e:	68fb      	ldr	r3, [r7, #12]
 8005f70:	2b06      	cmp	r3, #6
 8005f72:	d010      	beq.n	8005f96 <HAL_TIM_PWM_Start+0x142>
    {
      __HAL_TIM_ENABLE(htim);
 8005f74:	687b      	ldr	r3, [r7, #4]
 8005f76:	681b      	ldr	r3, [r3, #0]
 8005f78:	681a      	ldr	r2, [r3, #0]
 8005f7a:	687b      	ldr	r3, [r7, #4]
 8005f7c:	681b      	ldr	r3, [r3, #0]
 8005f7e:	f042 0201 	orr.w	r2, r2, #1
 8005f82:	601a      	str	r2, [r3, #0]
    if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 8005f84:	e007      	b.n	8005f96 <HAL_TIM_PWM_Start+0x142>
    }
  }
  else
  {
    __HAL_TIM_ENABLE(htim);
 8005f86:	687b      	ldr	r3, [r7, #4]
 8005f88:	681b      	ldr	r3, [r3, #0]
 8005f8a:	681a      	ldr	r2, [r3, #0]
 8005f8c:	687b      	ldr	r3, [r7, #4]
 8005f8e:	681b      	ldr	r3, [r3, #0]
 8005f90:	f042 0201 	orr.w	r2, r2, #1
 8005f94:	601a      	str	r2, [r3, #0]
  }

  /* Return function status */
  return HAL_OK;
 8005f96:	2300      	movs	r3, #0
}
 8005f98:	4618      	mov	r0, r3
 8005f9a:	3710      	adds	r7, #16
 8005f9c:	46bd      	mov	sp, r7
 8005f9e:	bd80      	pop	{r7, pc}
 8005fa0:	40010000 	.word	0x40010000
 8005fa4:	40000400 	.word	0x40000400
 8005fa8:	40000800 	.word	0x40000800
 8005fac:	40000c00 	.word	0x40000c00
 8005fb0:	40014000 	.word	0x40014000

08005fb4 <HAL_TIM_IRQHandler>:
  * @brief  This function handles TIM interrupts requests.
  * @param  htim TIM  handle
  * @retval None
  */
void HAL_TIM_IRQHandler(TIM_HandleTypeDef *htim)
{
 8005fb4:	b580      	push	{r7, lr}
 8005fb6:	b084      	sub	sp, #16
 8005fb8:	af00      	add	r7, sp, #0
 8005fba:	6078      	str	r0, [r7, #4]
  uint32_t itsource = htim->Instance->DIER;
 8005fbc:	687b      	ldr	r3, [r7, #4]
 8005fbe:	681b      	ldr	r3, [r3, #0]
 8005fc0:	68db      	ldr	r3, [r3, #12]
 8005fc2:	60fb      	str	r3, [r7, #12]
  uint32_t itflag   = htim->Instance->SR;
 8005fc4:	687b      	ldr	r3, [r7, #4]
 8005fc6:	681b      	ldr	r3, [r3, #0]
 8005fc8:	691b      	ldr	r3, [r3, #16]
 8005fca:	60bb      	str	r3, [r7, #8]

  /* Capture compare 1 event */
  if ((itflag & (TIM_FLAG_CC1)) == (TIM_FLAG_CC1))
 8005fcc:	68bb      	ldr	r3, [r7, #8]
 8005fce:	f003 0302 	and.w	r3, r3, #2
 8005fd2:	2b00      	cmp	r3, #0
 8005fd4:	d020      	beq.n	8006018 <HAL_TIM_IRQHandler+0x64>
  {
    if ((itsource & (TIM_IT_CC1)) == (TIM_IT_CC1))
 8005fd6:	68fb      	ldr	r3, [r7, #12]
 8005fd8:	f003 0302 	and.w	r3, r3, #2
 8005fdc:	2b00      	cmp	r3, #0
 8005fde:	d01b      	beq.n	8006018 <HAL_TIM_IRQHandler+0x64>
    {
      {
        __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC1);
 8005fe0:	687b      	ldr	r3, [r7, #4]
 8005fe2:	681b      	ldr	r3, [r3, #0]
 8005fe4:	f06f 0202 	mvn.w	r2, #2
 8005fe8:	611a      	str	r2, [r3, #16]
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
 8005fea:	687b      	ldr	r3, [r7, #4]
 8005fec:	2201      	movs	r2, #1
 8005fee:	771a      	strb	r2, [r3, #28]

        /* Input capture event */
        if ((htim->Instance->CCMR1 & TIM_CCMR1_CC1S) != 0x00U)
 8005ff0:	687b      	ldr	r3, [r7, #4]
 8005ff2:	681b      	ldr	r3, [r3, #0]
 8005ff4:	699b      	ldr	r3, [r3, #24]
 8005ff6:	f003 0303 	and.w	r3, r3, #3
 8005ffa:	2b00      	cmp	r3, #0
 8005ffc:	d003      	beq.n	8006006 <HAL_TIM_IRQHandler+0x52>
        {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
          htim->IC_CaptureCallback(htim);
#else
          HAL_TIM_IC_CaptureCallback(htim);
 8005ffe:	6878      	ldr	r0, [r7, #4]
 8006000:	f000 fa5b 	bl	80064ba <HAL_TIM_IC_CaptureCallback>
 8006004:	e005      	b.n	8006012 <HAL_TIM_IRQHandler+0x5e>
        {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
          htim->OC_DelayElapsedCallback(htim);
          htim->PWM_PulseFinishedCallback(htim);
#else
          HAL_TIM_OC_DelayElapsedCallback(htim);
 8006006:	6878      	ldr	r0, [r7, #4]
 8006008:	f000 fa4d 	bl	80064a6 <HAL_TIM_OC_DelayElapsedCallback>
          HAL_TIM_PWM_PulseFinishedCallback(htim);
 800600c:	6878      	ldr	r0, [r7, #4]
 800600e:	f000 fa5e 	bl	80064ce <HAL_TIM_PWM_PulseFinishedCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
        }
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 8006012:	687b      	ldr	r3, [r7, #4]
 8006014:	2200      	movs	r2, #0
 8006016:	771a      	strb	r2, [r3, #28]
      }
    }
  }
  /* Capture compare 2 event */
  if ((itflag & (TIM_FLAG_CC2)) == (TIM_FLAG_CC2))
 8006018:	68bb      	ldr	r3, [r7, #8]
 800601a:	f003 0304 	and.w	r3, r3, #4
 800601e:	2b00      	cmp	r3, #0
 8006020:	d020      	beq.n	8006064 <HAL_TIM_IRQHandler+0xb0>
  {
    if ((itsource & (TIM_IT_CC2)) == (TIM_IT_CC2))
 8006022:	68fb      	ldr	r3, [r7, #12]
 8006024:	f003 0304 	and.w	r3, r3, #4
 8006028:	2b00      	cmp	r3, #0
 800602a:	d01b      	beq.n	8006064 <HAL_TIM_IRQHandler+0xb0>
    {
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC2);
 800602c:	687b      	ldr	r3, [r7, #4]
 800602e:	681b      	ldr	r3, [r3, #0]
 8006030:	f06f 0204 	mvn.w	r2, #4
 8006034:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
 8006036:	687b      	ldr	r3, [r7, #4]
 8006038:	2202      	movs	r2, #2
 800603a:	771a      	strb	r2, [r3, #28]
      /* Input capture event */
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 800603c:	687b      	ldr	r3, [r7, #4]
 800603e:	681b      	ldr	r3, [r3, #0]
 8006040:	699b      	ldr	r3, [r3, #24]
 8006042:	f403 7340 	and.w	r3, r3, #768	; 0x300
 8006046:	2b00      	cmp	r3, #0
 8006048:	d003      	beq.n	8006052 <HAL_TIM_IRQHandler+0x9e>
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->IC_CaptureCallback(htim);
#else
        HAL_TIM_IC_CaptureCallback(htim);
 800604a:	6878      	ldr	r0, [r7, #4]
 800604c:	f000 fa35 	bl	80064ba <HAL_TIM_IC_CaptureCallback>
 8006050:	e005      	b.n	800605e <HAL_TIM_IRQHandler+0xaa>
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->OC_DelayElapsedCallback(htim);
        htim->PWM_PulseFinishedCallback(htim);
#else
        HAL_TIM_OC_DelayElapsedCallback(htim);
 8006052:	6878      	ldr	r0, [r7, #4]
 8006054:	f000 fa27 	bl	80064a6 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 8006058:	6878      	ldr	r0, [r7, #4]
 800605a:	f000 fa38 	bl	80064ce <HAL_TIM_PWM_PulseFinishedCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
      }
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800605e:	687b      	ldr	r3, [r7, #4]
 8006060:	2200      	movs	r2, #0
 8006062:	771a      	strb	r2, [r3, #28]
    }
  }
  /* Capture compare 3 event */
  if ((itflag & (TIM_FLAG_CC3)) == (TIM_FLAG_CC3))
 8006064:	68bb      	ldr	r3, [r7, #8]
 8006066:	f003 0308 	and.w	r3, r3, #8
 800606a:	2b00      	cmp	r3, #0
 800606c:	d020      	beq.n	80060b0 <HAL_TIM_IRQHandler+0xfc>
  {
    if ((itsource & (TIM_IT_CC3)) == (TIM_IT_CC3))
 800606e:	68fb      	ldr	r3, [r7, #12]
 8006070:	f003 0308 	and.w	r3, r3, #8
 8006074:	2b00      	cmp	r3, #0
 8006076:	d01b      	beq.n	80060b0 <HAL_TIM_IRQHandler+0xfc>
    {
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC3);
 8006078:	687b      	ldr	r3, [r7, #4]
 800607a:	681b      	ldr	r3, [r3, #0]
 800607c:	f06f 0208 	mvn.w	r2, #8
 8006080:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
 8006082:	687b      	ldr	r3, [r7, #4]
 8006084:	2204      	movs	r2, #4
 8006086:	771a      	strb	r2, [r3, #28]
      /* Input capture event */
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 8006088:	687b      	ldr	r3, [r7, #4]
 800608a:	681b      	ldr	r3, [r3, #0]
 800608c:	69db      	ldr	r3, [r3, #28]
 800608e:	f003 0303 	and.w	r3, r3, #3
 8006092:	2b00      	cmp	r3, #0
 8006094:	d003      	beq.n	800609e <HAL_TIM_IRQHandler+0xea>
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->IC_CaptureCallback(htim);
#else
        HAL_TIM_IC_CaptureCallback(htim);
 8006096:	6878      	ldr	r0, [r7, #4]
 8006098:	f000 fa0f 	bl	80064ba <HAL_TIM_IC_CaptureCallback>
 800609c:	e005      	b.n	80060aa <HAL_TIM_IRQHandler+0xf6>
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->OC_DelayElapsedCallback(htim);
        htim->PWM_PulseFinishedCallback(htim);
#else
        HAL_TIM_OC_DelayElapsedCallback(htim);
 800609e:	6878      	ldr	r0, [r7, #4]
 80060a0:	f000 fa01 	bl	80064a6 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 80060a4:	6878      	ldr	r0, [r7, #4]
 80060a6:	f000 fa12 	bl	80064ce <HAL_TIM_PWM_PulseFinishedCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
      }
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 80060aa:	687b      	ldr	r3, [r7, #4]
 80060ac:	2200      	movs	r2, #0
 80060ae:	771a      	strb	r2, [r3, #28]
    }
  }
  /* Capture compare 4 event */
  if ((itflag & (TIM_FLAG_CC4)) == (TIM_FLAG_CC4))
 80060b0:	68bb      	ldr	r3, [r7, #8]
 80060b2:	f003 0310 	and.w	r3, r3, #16
 80060b6:	2b00      	cmp	r3, #0
 80060b8:	d020      	beq.n	80060fc <HAL_TIM_IRQHandler+0x148>
  {
    if ((itsource & (TIM_IT_CC4)) == (TIM_IT_CC4))
 80060ba:	68fb      	ldr	r3, [r7, #12]
 80060bc:	f003 0310 	and.w	r3, r3, #16
 80060c0:	2b00      	cmp	r3, #0
 80060c2:	d01b      	beq.n	80060fc <HAL_TIM_IRQHandler+0x148>
    {
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC4);
 80060c4:	687b      	ldr	r3, [r7, #4]
 80060c6:	681b      	ldr	r3, [r3, #0]
 80060c8:	f06f 0210 	mvn.w	r2, #16
 80060cc:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
 80060ce:	687b      	ldr	r3, [r7, #4]
 80060d0:	2208      	movs	r2, #8
 80060d2:	771a      	strb	r2, [r3, #28]
      /* Input capture event */
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 80060d4:	687b      	ldr	r3, [r7, #4]
 80060d6:	681b      	ldr	r3, [r3, #0]
 80060d8:	69db      	ldr	r3, [r3, #28]
 80060da:	f403 7340 	and.w	r3, r3, #768	; 0x300
 80060de:	2b00      	cmp	r3, #0
 80060e0:	d003      	beq.n	80060ea <HAL_TIM_IRQHandler+0x136>
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->IC_CaptureCallback(htim);
#else
        HAL_TIM_IC_CaptureCallback(htim);
 80060e2:	6878      	ldr	r0, [r7, #4]
 80060e4:	f000 f9e9 	bl	80064ba <HAL_TIM_IC_CaptureCallback>
 80060e8:	e005      	b.n	80060f6 <HAL_TIM_IRQHandler+0x142>
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->OC_DelayElapsedCallback(htim);
        htim->PWM_PulseFinishedCallback(htim);
#else
        HAL_TIM_OC_DelayElapsedCallback(htim);
 80060ea:	6878      	ldr	r0, [r7, #4]
 80060ec:	f000 f9db 	bl	80064a6 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 80060f0:	6878      	ldr	r0, [r7, #4]
 80060f2:	f000 f9ec 	bl	80064ce <HAL_TIM_PWM_PulseFinishedCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
      }
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 80060f6:	687b      	ldr	r3, [r7, #4]
 80060f8:	2200      	movs	r2, #0
 80060fa:	771a      	strb	r2, [r3, #28]
    }
  }
  /* TIM Update event */
  if ((itflag & (TIM_FLAG_UPDATE)) == (TIM_FLAG_UPDATE))
 80060fc:	68bb      	ldr	r3, [r7, #8]
 80060fe:	f003 0301 	and.w	r3, r3, #1
 8006102:	2b00      	cmp	r3, #0
 8006104:	d00c      	beq.n	8006120 <HAL_TIM_IRQHandler+0x16c>
  {
    if ((itsource & (TIM_IT_UPDATE)) == (TIM_IT_UPDATE))
 8006106:	68fb      	ldr	r3, [r7, #12]
 8006108:	f003 0301 	and.w	r3, r3, #1
 800610c:	2b00      	cmp	r3, #0
 800610e:	d007      	beq.n	8006120 <HAL_TIM_IRQHandler+0x16c>
    {
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_UPDATE);
 8006110:	687b      	ldr	r3, [r7, #4]
 8006112:	681b      	ldr	r3, [r3, #0]
 8006114:	f06f 0201 	mvn.w	r2, #1
 8006118:	611a      	str	r2, [r3, #16]
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->PeriodElapsedCallback(htim);
#else
      HAL_TIM_PeriodElapsedCallback(htim);
 800611a:	6878      	ldr	r0, [r7, #4]
 800611c:	f7fb f9ae 	bl	800147c <HAL_TIM_PeriodElapsedCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM Break input event */
  if ((itflag & (TIM_FLAG_BREAK)) == (TIM_FLAG_BREAK))
 8006120:	68bb      	ldr	r3, [r7, #8]
 8006122:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8006126:	2b00      	cmp	r3, #0
 8006128:	d00c      	beq.n	8006144 <HAL_TIM_IRQHandler+0x190>
  {
    if ((itsource & (TIM_IT_BREAK)) == (TIM_IT_BREAK))
 800612a:	68fb      	ldr	r3, [r7, #12]
 800612c:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8006130:	2b00      	cmp	r3, #0
 8006132:	d007      	beq.n	8006144 <HAL_TIM_IRQHandler+0x190>
    {
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_BREAK);
 8006134:	687b      	ldr	r3, [r7, #4]
 8006136:	681b      	ldr	r3, [r3, #0]
 8006138:	f06f 0280 	mvn.w	r2, #128	; 0x80
 800613c:	611a      	str	r2, [r3, #16]
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->BreakCallback(htim);
#else
      HAL_TIMEx_BreakCallback(htim);
 800613e:	6878      	ldr	r0, [r7, #4]
 8006140:	f000 fd2a 	bl	8006b98 <HAL_TIMEx_BreakCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM Trigger detection event */
  if ((itflag & (TIM_FLAG_TRIGGER)) == (TIM_FLAG_TRIGGER))
 8006144:	68bb      	ldr	r3, [r7, #8]
 8006146:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800614a:	2b00      	cmp	r3, #0
 800614c:	d00c      	beq.n	8006168 <HAL_TIM_IRQHandler+0x1b4>
  {
    if ((itsource & (TIM_IT_TRIGGER)) == (TIM_IT_TRIGGER))
 800614e:	68fb      	ldr	r3, [r7, #12]
 8006150:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8006154:	2b00      	cmp	r3, #0
 8006156:	d007      	beq.n	8006168 <HAL_TIM_IRQHandler+0x1b4>
    {
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_TRIGGER);
 8006158:	687b      	ldr	r3, [r7, #4]
 800615a:	681b      	ldr	r3, [r3, #0]
 800615c:	f06f 0240 	mvn.w	r2, #64	; 0x40
 8006160:	611a      	str	r2, [r3, #16]
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->TriggerCallback(htim);
#else
      HAL_TIM_TriggerCallback(htim);
 8006162:	6878      	ldr	r0, [r7, #4]
 8006164:	f000 f9bd 	bl	80064e2 <HAL_TIM_TriggerCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM commutation event */
  if ((itflag & (TIM_FLAG_COM)) == (TIM_FLAG_COM))
 8006168:	68bb      	ldr	r3, [r7, #8]
 800616a:	f003 0320 	and.w	r3, r3, #32
 800616e:	2b00      	cmp	r3, #0
 8006170:	d00c      	beq.n	800618c <HAL_TIM_IRQHandler+0x1d8>
  {
    if ((itsource & (TIM_IT_COM)) == (TIM_IT_COM))
 8006172:	68fb      	ldr	r3, [r7, #12]
 8006174:	f003 0320 	and.w	r3, r3, #32
 8006178:	2b00      	cmp	r3, #0
 800617a:	d007      	beq.n	800618c <HAL_TIM_IRQHandler+0x1d8>
    {
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_COM);
 800617c:	687b      	ldr	r3, [r7, #4]
 800617e:	681b      	ldr	r3, [r3, #0]
 8006180:	f06f 0220 	mvn.w	r2, #32
 8006184:	611a      	str	r2, [r3, #16]
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->CommutationCallback(htim);
#else
      HAL_TIMEx_CommutCallback(htim);
 8006186:	6878      	ldr	r0, [r7, #4]
 8006188:	f000 fcfc 	bl	8006b84 <HAL_TIMEx_CommutCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
}
 800618c:	bf00      	nop
 800618e:	3710      	adds	r7, #16
 8006190:	46bd      	mov	sp, r7
 8006192:	bd80      	pop	{r7, pc}

08006194 <HAL_TIM_PWM_ConfigChannel>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIM_PWM_ConfigChannel(TIM_HandleTypeDef *htim,
                                            const TIM_OC_InitTypeDef *sConfig,
                                            uint32_t Channel)
{
 8006194:	b580      	push	{r7, lr}
 8006196:	b086      	sub	sp, #24
 8006198:	af00      	add	r7, sp, #0
 800619a:	60f8      	str	r0, [r7, #12]
 800619c:	60b9      	str	r1, [r7, #8]
 800619e:	607a      	str	r2, [r7, #4]
  HAL_StatusTypeDef status = HAL_OK;
 80061a0:	2300      	movs	r3, #0
 80061a2:	75fb      	strb	r3, [r7, #23]
  assert_param(IS_TIM_PWM_MODE(sConfig->OCMode));
  assert_param(IS_TIM_OC_POLARITY(sConfig->OCPolarity));
  assert_param(IS_TIM_FAST_STATE(sConfig->OCFastMode));

  /* Process Locked */
  __HAL_LOCK(htim);
 80061a4:	68fb      	ldr	r3, [r7, #12]
 80061a6:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 80061aa:	2b01      	cmp	r3, #1
 80061ac:	d101      	bne.n	80061b2 <HAL_TIM_PWM_ConfigChannel+0x1e>
 80061ae:	2302      	movs	r3, #2
 80061b0:	e0ae      	b.n	8006310 <HAL_TIM_PWM_ConfigChannel+0x17c>
 80061b2:	68fb      	ldr	r3, [r7, #12]
 80061b4:	2201      	movs	r2, #1
 80061b6:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

  switch (Channel)
 80061ba:	687b      	ldr	r3, [r7, #4]
 80061bc:	2b0c      	cmp	r3, #12
 80061be:	f200 809f 	bhi.w	8006300 <HAL_TIM_PWM_ConfigChannel+0x16c>
 80061c2:	a201      	add	r2, pc, #4	; (adr r2, 80061c8 <HAL_TIM_PWM_ConfigChannel+0x34>)
 80061c4:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80061c8:	080061fd 	.word	0x080061fd
 80061cc:	08006301 	.word	0x08006301
 80061d0:	08006301 	.word	0x08006301
 80061d4:	08006301 	.word	0x08006301
 80061d8:	0800623d 	.word	0x0800623d
 80061dc:	08006301 	.word	0x08006301
 80061e0:	08006301 	.word	0x08006301
 80061e4:	08006301 	.word	0x08006301
 80061e8:	0800627f 	.word	0x0800627f
 80061ec:	08006301 	.word	0x08006301
 80061f0:	08006301 	.word	0x08006301
 80061f4:	08006301 	.word	0x08006301
 80061f8:	080062bf 	.word	0x080062bf
    {
      /* Check the parameters */
      assert_param(IS_TIM_CC1_INSTANCE(htim->Instance));

      /* Configure the Channel 1 in PWM mode */
      TIM_OC1_SetConfig(htim->Instance, sConfig);
 80061fc:	68fb      	ldr	r3, [r7, #12]
 80061fe:	681b      	ldr	r3, [r3, #0]
 8006200:	68b9      	ldr	r1, [r7, #8]
 8006202:	4618      	mov	r0, r3
 8006204:	f000 fa04 	bl	8006610 <TIM_OC1_SetConfig>

      /* Set the Preload enable bit for channel1 */
      htim->Instance->CCMR1 |= TIM_CCMR1_OC1PE;
 8006208:	68fb      	ldr	r3, [r7, #12]
 800620a:	681b      	ldr	r3, [r3, #0]
 800620c:	699a      	ldr	r2, [r3, #24]
 800620e:	68fb      	ldr	r3, [r7, #12]
 8006210:	681b      	ldr	r3, [r3, #0]
 8006212:	f042 0208 	orr.w	r2, r2, #8
 8006216:	619a      	str	r2, [r3, #24]

      /* Configure the Output Fast mode */
      htim->Instance->CCMR1 &= ~TIM_CCMR1_OC1FE;
 8006218:	68fb      	ldr	r3, [r7, #12]
 800621a:	681b      	ldr	r3, [r3, #0]
 800621c:	699a      	ldr	r2, [r3, #24]
 800621e:	68fb      	ldr	r3, [r7, #12]
 8006220:	681b      	ldr	r3, [r3, #0]
 8006222:	f022 0204 	bic.w	r2, r2, #4
 8006226:	619a      	str	r2, [r3, #24]
      htim->Instance->CCMR1 |= sConfig->OCFastMode;
 8006228:	68fb      	ldr	r3, [r7, #12]
 800622a:	681b      	ldr	r3, [r3, #0]
 800622c:	6999      	ldr	r1, [r3, #24]
 800622e:	68bb      	ldr	r3, [r7, #8]
 8006230:	691a      	ldr	r2, [r3, #16]
 8006232:	68fb      	ldr	r3, [r7, #12]
 8006234:	681b      	ldr	r3, [r3, #0]
 8006236:	430a      	orrs	r2, r1
 8006238:	619a      	str	r2, [r3, #24]
      break;
 800623a:	e064      	b.n	8006306 <HAL_TIM_PWM_ConfigChannel+0x172>
    {
      /* Check the parameters */
      assert_param(IS_TIM_CC2_INSTANCE(htim->Instance));

      /* Configure the Channel 2 in PWM mode */
      TIM_OC2_SetConfig(htim->Instance, sConfig);
 800623c:	68fb      	ldr	r3, [r7, #12]
 800623e:	681b      	ldr	r3, [r3, #0]
 8006240:	68b9      	ldr	r1, [r7, #8]
 8006242:	4618      	mov	r0, r3
 8006244:	f000 fa4a 	bl	80066dc <TIM_OC2_SetConfig>

      /* Set the Preload enable bit for channel2 */
      htim->Instance->CCMR1 |= TIM_CCMR1_OC2PE;
 8006248:	68fb      	ldr	r3, [r7, #12]
 800624a:	681b      	ldr	r3, [r3, #0]
 800624c:	699a      	ldr	r2, [r3, #24]
 800624e:	68fb      	ldr	r3, [r7, #12]
 8006250:	681b      	ldr	r3, [r3, #0]
 8006252:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 8006256:	619a      	str	r2, [r3, #24]

      /* Configure the Output Fast mode */
      htim->Instance->CCMR1 &= ~TIM_CCMR1_OC2FE;
 8006258:	68fb      	ldr	r3, [r7, #12]
 800625a:	681b      	ldr	r3, [r3, #0]
 800625c:	699a      	ldr	r2, [r3, #24]
 800625e:	68fb      	ldr	r3, [r7, #12]
 8006260:	681b      	ldr	r3, [r3, #0]
 8006262:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8006266:	619a      	str	r2, [r3, #24]
      htim->Instance->CCMR1 |= sConfig->OCFastMode << 8U;
 8006268:	68fb      	ldr	r3, [r7, #12]
 800626a:	681b      	ldr	r3, [r3, #0]
 800626c:	6999      	ldr	r1, [r3, #24]
 800626e:	68bb      	ldr	r3, [r7, #8]
 8006270:	691b      	ldr	r3, [r3, #16]
 8006272:	021a      	lsls	r2, r3, #8
 8006274:	68fb      	ldr	r3, [r7, #12]
 8006276:	681b      	ldr	r3, [r3, #0]
 8006278:	430a      	orrs	r2, r1
 800627a:	619a      	str	r2, [r3, #24]
      break;
 800627c:	e043      	b.n	8006306 <HAL_TIM_PWM_ConfigChannel+0x172>
    {
      /* Check the parameters */
      assert_param(IS_TIM_CC3_INSTANCE(htim->Instance));

      /* Configure the Channel 3 in PWM mode */
      TIM_OC3_SetConfig(htim->Instance, sConfig);
 800627e:	68fb      	ldr	r3, [r7, #12]
 8006280:	681b      	ldr	r3, [r3, #0]
 8006282:	68b9      	ldr	r1, [r7, #8]
 8006284:	4618      	mov	r0, r3
 8006286:	f000 fa95 	bl	80067b4 <TIM_OC3_SetConfig>

      /* Set the Preload enable bit for channel3 */
      htim->Instance->CCMR2 |= TIM_CCMR2_OC3PE;
 800628a:	68fb      	ldr	r3, [r7, #12]
 800628c:	681b      	ldr	r3, [r3, #0]
 800628e:	69da      	ldr	r2, [r3, #28]
 8006290:	68fb      	ldr	r3, [r7, #12]
 8006292:	681b      	ldr	r3, [r3, #0]
 8006294:	f042 0208 	orr.w	r2, r2, #8
 8006298:	61da      	str	r2, [r3, #28]

      /* Configure the Output Fast mode */
      htim->Instance->CCMR2 &= ~TIM_CCMR2_OC3FE;
 800629a:	68fb      	ldr	r3, [r7, #12]
 800629c:	681b      	ldr	r3, [r3, #0]
 800629e:	69da      	ldr	r2, [r3, #28]
 80062a0:	68fb      	ldr	r3, [r7, #12]
 80062a2:	681b      	ldr	r3, [r3, #0]
 80062a4:	f022 0204 	bic.w	r2, r2, #4
 80062a8:	61da      	str	r2, [r3, #28]
      htim->Instance->CCMR2 |= sConfig->OCFastMode;
 80062aa:	68fb      	ldr	r3, [r7, #12]
 80062ac:	681b      	ldr	r3, [r3, #0]
 80062ae:	69d9      	ldr	r1, [r3, #28]
 80062b0:	68bb      	ldr	r3, [r7, #8]
 80062b2:	691a      	ldr	r2, [r3, #16]
 80062b4:	68fb      	ldr	r3, [r7, #12]
 80062b6:	681b      	ldr	r3, [r3, #0]
 80062b8:	430a      	orrs	r2, r1
 80062ba:	61da      	str	r2, [r3, #28]
      break;
 80062bc:	e023      	b.n	8006306 <HAL_TIM_PWM_ConfigChannel+0x172>
    {
      /* Check the parameters */
      assert_param(IS_TIM_CC4_INSTANCE(htim->Instance));

      /* Configure the Channel 4 in PWM mode */
      TIM_OC4_SetConfig(htim->Instance, sConfig);
 80062be:	68fb      	ldr	r3, [r7, #12]
 80062c0:	681b      	ldr	r3, [r3, #0]
 80062c2:	68b9      	ldr	r1, [r7, #8]
 80062c4:	4618      	mov	r0, r3
 80062c6:	f000 fadf 	bl	8006888 <TIM_OC4_SetConfig>

      /* Set the Preload enable bit for channel4 */
      htim->Instance->CCMR2 |= TIM_CCMR2_OC4PE;
 80062ca:	68fb      	ldr	r3, [r7, #12]
 80062cc:	681b      	ldr	r3, [r3, #0]
 80062ce:	69da      	ldr	r2, [r3, #28]
 80062d0:	68fb      	ldr	r3, [r7, #12]
 80062d2:	681b      	ldr	r3, [r3, #0]
 80062d4:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 80062d8:	61da      	str	r2, [r3, #28]

      /* Configure the Output Fast mode */
      htim->Instance->CCMR2 &= ~TIM_CCMR2_OC4FE;
 80062da:	68fb      	ldr	r3, [r7, #12]
 80062dc:	681b      	ldr	r3, [r3, #0]
 80062de:	69da      	ldr	r2, [r3, #28]
 80062e0:	68fb      	ldr	r3, [r7, #12]
 80062e2:	681b      	ldr	r3, [r3, #0]
 80062e4:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 80062e8:	61da      	str	r2, [r3, #28]
      htim->Instance->CCMR2 |= sConfig->OCFastMode << 8U;
 80062ea:	68fb      	ldr	r3, [r7, #12]
 80062ec:	681b      	ldr	r3, [r3, #0]
 80062ee:	69d9      	ldr	r1, [r3, #28]
 80062f0:	68bb      	ldr	r3, [r7, #8]
 80062f2:	691b      	ldr	r3, [r3, #16]
 80062f4:	021a      	lsls	r2, r3, #8
 80062f6:	68fb      	ldr	r3, [r7, #12]
 80062f8:	681b      	ldr	r3, [r3, #0]
 80062fa:	430a      	orrs	r2, r1
 80062fc:	61da      	str	r2, [r3, #28]
      break;
 80062fe:	e002      	b.n	8006306 <HAL_TIM_PWM_ConfigChannel+0x172>
    }

    default:
      status = HAL_ERROR;
 8006300:	2301      	movs	r3, #1
 8006302:	75fb      	strb	r3, [r7, #23]
      break;
 8006304:	bf00      	nop
  }

  __HAL_UNLOCK(htim);
 8006306:	68fb      	ldr	r3, [r7, #12]
 8006308:	2200      	movs	r2, #0
 800630a:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

  return status;
 800630e:	7dfb      	ldrb	r3, [r7, #23]
}
 8006310:	4618      	mov	r0, r3
 8006312:	3718      	adds	r7, #24
 8006314:	46bd      	mov	sp, r7
 8006316:	bd80      	pop	{r7, pc}

08006318 <HAL_TIM_ConfigClockSource>:
  * @param  sClockSourceConfig pointer to a TIM_ClockConfigTypeDef structure that
  *         contains the clock source information for the TIM peripheral.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIM_ConfigClockSource(TIM_HandleTypeDef *htim, const TIM_ClockConfigTypeDef *sClockSourceConfig)
{
 8006318:	b580      	push	{r7, lr}
 800631a:	b084      	sub	sp, #16
 800631c:	af00      	add	r7, sp, #0
 800631e:	6078      	str	r0, [r7, #4]
 8006320:	6039      	str	r1, [r7, #0]
  HAL_StatusTypeDef status = HAL_OK;
 8006322:	2300      	movs	r3, #0
 8006324:	73fb      	strb	r3, [r7, #15]
  uint32_t tmpsmcr;

  /* Process Locked */
  __HAL_LOCK(htim);
 8006326:	687b      	ldr	r3, [r7, #4]
 8006328:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 800632c:	2b01      	cmp	r3, #1
 800632e:	d101      	bne.n	8006334 <HAL_TIM_ConfigClockSource+0x1c>
 8006330:	2302      	movs	r3, #2
 8006332:	e0b4      	b.n	800649e <HAL_TIM_ConfigClockSource+0x186>
 8006334:	687b      	ldr	r3, [r7, #4]
 8006336:	2201      	movs	r2, #1
 8006338:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

  htim->State = HAL_TIM_STATE_BUSY;
 800633c:	687b      	ldr	r3, [r7, #4]
 800633e:	2202      	movs	r2, #2
 8006340:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d

  /* Check the parameters */
  assert_param(IS_TIM_CLOCKSOURCE(sClockSourceConfig->ClockSource));

  /* Reset the SMS, TS, ECE, ETPS and ETRF bits */
  tmpsmcr = htim->Instance->SMCR;
 8006344:	687b      	ldr	r3, [r7, #4]
 8006346:	681b      	ldr	r3, [r3, #0]
 8006348:	689b      	ldr	r3, [r3, #8]
 800634a:	60bb      	str	r3, [r7, #8]
  tmpsmcr &= ~(TIM_SMCR_SMS | TIM_SMCR_TS);
 800634c:	68bb      	ldr	r3, [r7, #8]
 800634e:	f023 0377 	bic.w	r3, r3, #119	; 0x77
 8006352:	60bb      	str	r3, [r7, #8]
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);
 8006354:	68bb      	ldr	r3, [r7, #8]
 8006356:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 800635a:	60bb      	str	r3, [r7, #8]
  htim->Instance->SMCR = tmpsmcr;
 800635c:	687b      	ldr	r3, [r7, #4]
 800635e:	681b      	ldr	r3, [r3, #0]
 8006360:	68ba      	ldr	r2, [r7, #8]
 8006362:	609a      	str	r2, [r3, #8]

  switch (sClockSourceConfig->ClockSource)
 8006364:	683b      	ldr	r3, [r7, #0]
 8006366:	681b      	ldr	r3, [r3, #0]
 8006368:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 800636c:	d03e      	beq.n	80063ec <HAL_TIM_ConfigClockSource+0xd4>
 800636e:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8006372:	f200 8087 	bhi.w	8006484 <HAL_TIM_ConfigClockSource+0x16c>
 8006376:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 800637a:	f000 8086 	beq.w	800648a <HAL_TIM_ConfigClockSource+0x172>
 800637e:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8006382:	d87f      	bhi.n	8006484 <HAL_TIM_ConfigClockSource+0x16c>
 8006384:	2b70      	cmp	r3, #112	; 0x70
 8006386:	d01a      	beq.n	80063be <HAL_TIM_ConfigClockSource+0xa6>
 8006388:	2b70      	cmp	r3, #112	; 0x70
 800638a:	d87b      	bhi.n	8006484 <HAL_TIM_ConfigClockSource+0x16c>
 800638c:	2b60      	cmp	r3, #96	; 0x60
 800638e:	d050      	beq.n	8006432 <HAL_TIM_ConfigClockSource+0x11a>
 8006390:	2b60      	cmp	r3, #96	; 0x60
 8006392:	d877      	bhi.n	8006484 <HAL_TIM_ConfigClockSource+0x16c>
 8006394:	2b50      	cmp	r3, #80	; 0x50
 8006396:	d03c      	beq.n	8006412 <HAL_TIM_ConfigClockSource+0xfa>
 8006398:	2b50      	cmp	r3, #80	; 0x50
 800639a:	d873      	bhi.n	8006484 <HAL_TIM_ConfigClockSource+0x16c>
 800639c:	2b40      	cmp	r3, #64	; 0x40
 800639e:	d058      	beq.n	8006452 <HAL_TIM_ConfigClockSource+0x13a>
 80063a0:	2b40      	cmp	r3, #64	; 0x40
 80063a2:	d86f      	bhi.n	8006484 <HAL_TIM_ConfigClockSource+0x16c>
 80063a4:	2b30      	cmp	r3, #48	; 0x30
 80063a6:	d064      	beq.n	8006472 <HAL_TIM_ConfigClockSource+0x15a>
 80063a8:	2b30      	cmp	r3, #48	; 0x30
 80063aa:	d86b      	bhi.n	8006484 <HAL_TIM_ConfigClockSource+0x16c>
 80063ac:	2b20      	cmp	r3, #32
 80063ae:	d060      	beq.n	8006472 <HAL_TIM_ConfigClockSource+0x15a>
 80063b0:	2b20      	cmp	r3, #32
 80063b2:	d867      	bhi.n	8006484 <HAL_TIM_ConfigClockSource+0x16c>
 80063b4:	2b00      	cmp	r3, #0
 80063b6:	d05c      	beq.n	8006472 <HAL_TIM_ConfigClockSource+0x15a>
 80063b8:	2b10      	cmp	r3, #16
 80063ba:	d05a      	beq.n	8006472 <HAL_TIM_ConfigClockSource+0x15a>
 80063bc:	e062      	b.n	8006484 <HAL_TIM_ConfigClockSource+0x16c>
      assert_param(IS_TIM_CLOCKPRESCALER(sClockSourceConfig->ClockPrescaler));
      assert_param(IS_TIM_CLOCKPOLARITY(sClockSourceConfig->ClockPolarity));
      assert_param(IS_TIM_CLOCKFILTER(sClockSourceConfig->ClockFilter));

      /* Configure the ETR Clock source */
      TIM_ETR_SetConfig(htim->Instance,
 80063be:	687b      	ldr	r3, [r7, #4]
 80063c0:	6818      	ldr	r0, [r3, #0]
                        sClockSourceConfig->ClockPrescaler,
 80063c2:	683b      	ldr	r3, [r7, #0]
 80063c4:	6899      	ldr	r1, [r3, #8]
                        sClockSourceConfig->ClockPolarity,
 80063c6:	683b      	ldr	r3, [r7, #0]
 80063c8:	685a      	ldr	r2, [r3, #4]
                        sClockSourceConfig->ClockFilter);
 80063ca:	683b      	ldr	r3, [r7, #0]
 80063cc:	68db      	ldr	r3, [r3, #12]
      TIM_ETR_SetConfig(htim->Instance,
 80063ce:	f000 fb25 	bl	8006a1c <TIM_ETR_SetConfig>

      /* Select the External clock mode1 and the ETRF trigger */
      tmpsmcr = htim->Instance->SMCR;
 80063d2:	687b      	ldr	r3, [r7, #4]
 80063d4:	681b      	ldr	r3, [r3, #0]
 80063d6:	689b      	ldr	r3, [r3, #8]
 80063d8:	60bb      	str	r3, [r7, #8]
      tmpsmcr |= (TIM_SLAVEMODE_EXTERNAL1 | TIM_CLOCKSOURCE_ETRMODE1);
 80063da:	68bb      	ldr	r3, [r7, #8]
 80063dc:	f043 0377 	orr.w	r3, r3, #119	; 0x77
 80063e0:	60bb      	str	r3, [r7, #8]
      /* Write to TIMx SMCR */
      htim->Instance->SMCR = tmpsmcr;
 80063e2:	687b      	ldr	r3, [r7, #4]
 80063e4:	681b      	ldr	r3, [r3, #0]
 80063e6:	68ba      	ldr	r2, [r7, #8]
 80063e8:	609a      	str	r2, [r3, #8]
      break;
 80063ea:	e04f      	b.n	800648c <HAL_TIM_ConfigClockSource+0x174>
      assert_param(IS_TIM_CLOCKPRESCALER(sClockSourceConfig->ClockPrescaler));
      assert_param(IS_TIM_CLOCKPOLARITY(sClockSourceConfig->ClockPolarity));
      assert_param(IS_TIM_CLOCKFILTER(sClockSourceConfig->ClockFilter));

      /* Configure the ETR Clock source */
      TIM_ETR_SetConfig(htim->Instance,
 80063ec:	687b      	ldr	r3, [r7, #4]
 80063ee:	6818      	ldr	r0, [r3, #0]
                        sClockSourceConfig->ClockPrescaler,
 80063f0:	683b      	ldr	r3, [r7, #0]
 80063f2:	6899      	ldr	r1, [r3, #8]
                        sClockSourceConfig->ClockPolarity,
 80063f4:	683b      	ldr	r3, [r7, #0]
 80063f6:	685a      	ldr	r2, [r3, #4]
                        sClockSourceConfig->ClockFilter);
 80063f8:	683b      	ldr	r3, [r7, #0]
 80063fa:	68db      	ldr	r3, [r3, #12]
      TIM_ETR_SetConfig(htim->Instance,
 80063fc:	f000 fb0e 	bl	8006a1c <TIM_ETR_SetConfig>
      /* Enable the External clock mode2 */
      htim->Instance->SMCR |= TIM_SMCR_ECE;
 8006400:	687b      	ldr	r3, [r7, #4]
 8006402:	681b      	ldr	r3, [r3, #0]
 8006404:	689a      	ldr	r2, [r3, #8]
 8006406:	687b      	ldr	r3, [r7, #4]
 8006408:	681b      	ldr	r3, [r3, #0]
 800640a:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 800640e:	609a      	str	r2, [r3, #8]
      break;
 8006410:	e03c      	b.n	800648c <HAL_TIM_ConfigClockSource+0x174>

      /* Check TI1 input conditioning related parameters */
      assert_param(IS_TIM_CLOCKPOLARITY(sClockSourceConfig->ClockPolarity));
      assert_param(IS_TIM_CLOCKFILTER(sClockSourceConfig->ClockFilter));

      TIM_TI1_ConfigInputStage(htim->Instance,
 8006412:	687b      	ldr	r3, [r7, #4]
 8006414:	6818      	ldr	r0, [r3, #0]
                               sClockSourceConfig->ClockPolarity,
 8006416:	683b      	ldr	r3, [r7, #0]
 8006418:	6859      	ldr	r1, [r3, #4]
                               sClockSourceConfig->ClockFilter);
 800641a:	683b      	ldr	r3, [r7, #0]
 800641c:	68db      	ldr	r3, [r3, #12]
      TIM_TI1_ConfigInputStage(htim->Instance,
 800641e:	461a      	mov	r2, r3
 8006420:	f000 fa82 	bl	8006928 <TIM_TI1_ConfigInputStage>
      TIM_ITRx_SetConfig(htim->Instance, TIM_CLOCKSOURCE_TI1);
 8006424:	687b      	ldr	r3, [r7, #4]
 8006426:	681b      	ldr	r3, [r3, #0]
 8006428:	2150      	movs	r1, #80	; 0x50
 800642a:	4618      	mov	r0, r3
 800642c:	f000 fadb 	bl	80069e6 <TIM_ITRx_SetConfig>
      break;
 8006430:	e02c      	b.n	800648c <HAL_TIM_ConfigClockSource+0x174>

      /* Check TI2 input conditioning related parameters */
      assert_param(IS_TIM_CLOCKPOLARITY(sClockSourceConfig->ClockPolarity));
      assert_param(IS_TIM_CLOCKFILTER(sClockSourceConfig->ClockFilter));

      TIM_TI2_ConfigInputStage(htim->Instance,
 8006432:	687b      	ldr	r3, [r7, #4]
 8006434:	6818      	ldr	r0, [r3, #0]
                               sClockSourceConfig->ClockPolarity,
 8006436:	683b      	ldr	r3, [r7, #0]
 8006438:	6859      	ldr	r1, [r3, #4]
                               sClockSourceConfig->ClockFilter);
 800643a:	683b      	ldr	r3, [r7, #0]
 800643c:	68db      	ldr	r3, [r3, #12]
      TIM_TI2_ConfigInputStage(htim->Instance,
 800643e:	461a      	mov	r2, r3
 8006440:	f000 faa1 	bl	8006986 <TIM_TI2_ConfigInputStage>
      TIM_ITRx_SetConfig(htim->Instance, TIM_CLOCKSOURCE_TI2);
 8006444:	687b      	ldr	r3, [r7, #4]
 8006446:	681b      	ldr	r3, [r3, #0]
 8006448:	2160      	movs	r1, #96	; 0x60
 800644a:	4618      	mov	r0, r3
 800644c:	f000 facb 	bl	80069e6 <TIM_ITRx_SetConfig>
      break;
 8006450:	e01c      	b.n	800648c <HAL_TIM_ConfigClockSource+0x174>

      /* Check TI1 input conditioning related parameters */
      assert_param(IS_TIM_CLOCKPOLARITY(sClockSourceConfig->ClockPolarity));
      assert_param(IS_TIM_CLOCKFILTER(sClockSourceConfig->ClockFilter));

      TIM_TI1_ConfigInputStage(htim->Instance,
 8006452:	687b      	ldr	r3, [r7, #4]
 8006454:	6818      	ldr	r0, [r3, #0]
                               sClockSourceConfig->ClockPolarity,
 8006456:	683b      	ldr	r3, [r7, #0]
 8006458:	6859      	ldr	r1, [r3, #4]
                               sClockSourceConfig->ClockFilter);
 800645a:	683b      	ldr	r3, [r7, #0]
 800645c:	68db      	ldr	r3, [r3, #12]
      TIM_TI1_ConfigInputStage(htim->Instance,
 800645e:	461a      	mov	r2, r3
 8006460:	f000 fa62 	bl	8006928 <TIM_TI1_ConfigInputStage>
      TIM_ITRx_SetConfig(htim->Instance, TIM_CLOCKSOURCE_TI1ED);
 8006464:	687b      	ldr	r3, [r7, #4]
 8006466:	681b      	ldr	r3, [r3, #0]
 8006468:	2140      	movs	r1, #64	; 0x40
 800646a:	4618      	mov	r0, r3
 800646c:	f000 fabb 	bl	80069e6 <TIM_ITRx_SetConfig>
      break;
 8006470:	e00c      	b.n	800648c <HAL_TIM_ConfigClockSource+0x174>
    case TIM_CLOCKSOURCE_ITR3:
    {
      /* Check whether or not the timer instance supports internal trigger input */
      assert_param(IS_TIM_CLOCKSOURCE_ITRX_INSTANCE(htim->Instance));

      TIM_ITRx_SetConfig(htim->Instance, sClockSourceConfig->ClockSource);
 8006472:	687b      	ldr	r3, [r7, #4]
 8006474:	681a      	ldr	r2, [r3, #0]
 8006476:	683b      	ldr	r3, [r7, #0]
 8006478:	681b      	ldr	r3, [r3, #0]
 800647a:	4619      	mov	r1, r3
 800647c:	4610      	mov	r0, r2
 800647e:	f000 fab2 	bl	80069e6 <TIM_ITRx_SetConfig>
      break;
 8006482:	e003      	b.n	800648c <HAL_TIM_ConfigClockSource+0x174>
    }

    default:
      status = HAL_ERROR;
 8006484:	2301      	movs	r3, #1
 8006486:	73fb      	strb	r3, [r7, #15]
      break;
 8006488:	e000      	b.n	800648c <HAL_TIM_ConfigClockSource+0x174>
      break;
 800648a:	bf00      	nop
  }
  htim->State = HAL_TIM_STATE_READY;
 800648c:	687b      	ldr	r3, [r7, #4]
 800648e:	2201      	movs	r2, #1
 8006490:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d

  __HAL_UNLOCK(htim);
 8006494:	687b      	ldr	r3, [r7, #4]
 8006496:	2200      	movs	r2, #0
 8006498:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

  return status;
 800649c:	7bfb      	ldrb	r3, [r7, #15]
}
 800649e:	4618      	mov	r0, r3
 80064a0:	3710      	adds	r7, #16
 80064a2:	46bd      	mov	sp, r7
 80064a4:	bd80      	pop	{r7, pc}

080064a6 <HAL_TIM_OC_DelayElapsedCallback>:
  * @brief  Output Compare callback in non-blocking mode
  * @param  htim TIM OC handle
  * @retval None
  */
__weak void HAL_TIM_OC_DelayElapsedCallback(TIM_HandleTypeDef *htim)
{
 80064a6:	b480      	push	{r7}
 80064a8:	b083      	sub	sp, #12
 80064aa:	af00      	add	r7, sp, #0
 80064ac:	6078      	str	r0, [r7, #4]
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIM_OC_DelayElapsedCallback could be implemented in the user file
   */
}
 80064ae:	bf00      	nop
 80064b0:	370c      	adds	r7, #12
 80064b2:	46bd      	mov	sp, r7
 80064b4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80064b8:	4770      	bx	lr

080064ba <HAL_TIM_IC_CaptureCallback>:
  * @brief  Input Capture callback in non-blocking mode
  * @param  htim TIM IC handle
  * @retval None
  */
__weak void HAL_TIM_IC_CaptureCallback(TIM_HandleTypeDef *htim)
{
 80064ba:	b480      	push	{r7}
 80064bc:	b083      	sub	sp, #12
 80064be:	af00      	add	r7, sp, #0
 80064c0:	6078      	str	r0, [r7, #4]
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIM_IC_CaptureCallback could be implemented in the user file
   */
}
 80064c2:	bf00      	nop
 80064c4:	370c      	adds	r7, #12
 80064c6:	46bd      	mov	sp, r7
 80064c8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80064cc:	4770      	bx	lr

080064ce <HAL_TIM_PWM_PulseFinishedCallback>:
  * @brief  PWM Pulse finished callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIM_PWM_PulseFinishedCallback(TIM_HandleTypeDef *htim)
{
 80064ce:	b480      	push	{r7}
 80064d0:	b083      	sub	sp, #12
 80064d2:	af00      	add	r7, sp, #0
 80064d4:	6078      	str	r0, [r7, #4]
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIM_PWM_PulseFinishedCallback could be implemented in the user file
   */
}
 80064d6:	bf00      	nop
 80064d8:	370c      	adds	r7, #12
 80064da:	46bd      	mov	sp, r7
 80064dc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80064e0:	4770      	bx	lr

080064e2 <HAL_TIM_TriggerCallback>:
  * @brief  Hall Trigger detection callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIM_TriggerCallback(TIM_HandleTypeDef *htim)
{
 80064e2:	b480      	push	{r7}
 80064e4:	b083      	sub	sp, #12
 80064e6:	af00      	add	r7, sp, #0
 80064e8:	6078      	str	r0, [r7, #4]
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIM_TriggerCallback could be implemented in the user file
   */
}
 80064ea:	bf00      	nop
 80064ec:	370c      	adds	r7, #12
 80064ee:	46bd      	mov	sp, r7
 80064f0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80064f4:	4770      	bx	lr
	...

080064f8 <TIM_Base_SetConfig>:
  * @param  TIMx TIM peripheral
  * @param  Structure TIM Base configuration structure
  * @retval None
  */
void TIM_Base_SetConfig(TIM_TypeDef *TIMx, const TIM_Base_InitTypeDef *Structure)
{
 80064f8:	b480      	push	{r7}
 80064fa:	b085      	sub	sp, #20
 80064fc:	af00      	add	r7, sp, #0
 80064fe:	6078      	str	r0, [r7, #4]
 8006500:	6039      	str	r1, [r7, #0]
  uint32_t tmpcr1;
  tmpcr1 = TIMx->CR1;
 8006502:	687b      	ldr	r3, [r7, #4]
 8006504:	681b      	ldr	r3, [r3, #0]
 8006506:	60fb      	str	r3, [r7, #12]

  /* Set TIM Time Base Unit parameters ---------------------------------------*/
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 8006508:	687b      	ldr	r3, [r7, #4]
 800650a:	4a3a      	ldr	r2, [pc, #232]	; (80065f4 <TIM_Base_SetConfig+0xfc>)
 800650c:	4293      	cmp	r3, r2
 800650e:	d00f      	beq.n	8006530 <TIM_Base_SetConfig+0x38>
 8006510:	687b      	ldr	r3, [r7, #4]
 8006512:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8006516:	d00b      	beq.n	8006530 <TIM_Base_SetConfig+0x38>
 8006518:	687b      	ldr	r3, [r7, #4]
 800651a:	4a37      	ldr	r2, [pc, #220]	; (80065f8 <TIM_Base_SetConfig+0x100>)
 800651c:	4293      	cmp	r3, r2
 800651e:	d007      	beq.n	8006530 <TIM_Base_SetConfig+0x38>
 8006520:	687b      	ldr	r3, [r7, #4]
 8006522:	4a36      	ldr	r2, [pc, #216]	; (80065fc <TIM_Base_SetConfig+0x104>)
 8006524:	4293      	cmp	r3, r2
 8006526:	d003      	beq.n	8006530 <TIM_Base_SetConfig+0x38>
 8006528:	687b      	ldr	r3, [r7, #4]
 800652a:	4a35      	ldr	r2, [pc, #212]	; (8006600 <TIM_Base_SetConfig+0x108>)
 800652c:	4293      	cmp	r3, r2
 800652e:	d108      	bne.n	8006542 <TIM_Base_SetConfig+0x4a>
  {
    /* Select the Counter Mode */
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 8006530:	68fb      	ldr	r3, [r7, #12]
 8006532:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8006536:	60fb      	str	r3, [r7, #12]
    tmpcr1 |= Structure->CounterMode;
 8006538:	683b      	ldr	r3, [r7, #0]
 800653a:	685b      	ldr	r3, [r3, #4]
 800653c:	68fa      	ldr	r2, [r7, #12]
 800653e:	4313      	orrs	r3, r2
 8006540:	60fb      	str	r3, [r7, #12]
  }

  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
 8006542:	687b      	ldr	r3, [r7, #4]
 8006544:	4a2b      	ldr	r2, [pc, #172]	; (80065f4 <TIM_Base_SetConfig+0xfc>)
 8006546:	4293      	cmp	r3, r2
 8006548:	d01b      	beq.n	8006582 <TIM_Base_SetConfig+0x8a>
 800654a:	687b      	ldr	r3, [r7, #4]
 800654c:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8006550:	d017      	beq.n	8006582 <TIM_Base_SetConfig+0x8a>
 8006552:	687b      	ldr	r3, [r7, #4]
 8006554:	4a28      	ldr	r2, [pc, #160]	; (80065f8 <TIM_Base_SetConfig+0x100>)
 8006556:	4293      	cmp	r3, r2
 8006558:	d013      	beq.n	8006582 <TIM_Base_SetConfig+0x8a>
 800655a:	687b      	ldr	r3, [r7, #4]
 800655c:	4a27      	ldr	r2, [pc, #156]	; (80065fc <TIM_Base_SetConfig+0x104>)
 800655e:	4293      	cmp	r3, r2
 8006560:	d00f      	beq.n	8006582 <TIM_Base_SetConfig+0x8a>
 8006562:	687b      	ldr	r3, [r7, #4]
 8006564:	4a26      	ldr	r2, [pc, #152]	; (8006600 <TIM_Base_SetConfig+0x108>)
 8006566:	4293      	cmp	r3, r2
 8006568:	d00b      	beq.n	8006582 <TIM_Base_SetConfig+0x8a>
 800656a:	687b      	ldr	r3, [r7, #4]
 800656c:	4a25      	ldr	r2, [pc, #148]	; (8006604 <TIM_Base_SetConfig+0x10c>)
 800656e:	4293      	cmp	r3, r2
 8006570:	d007      	beq.n	8006582 <TIM_Base_SetConfig+0x8a>
 8006572:	687b      	ldr	r3, [r7, #4]
 8006574:	4a24      	ldr	r2, [pc, #144]	; (8006608 <TIM_Base_SetConfig+0x110>)
 8006576:	4293      	cmp	r3, r2
 8006578:	d003      	beq.n	8006582 <TIM_Base_SetConfig+0x8a>
 800657a:	687b      	ldr	r3, [r7, #4]
 800657c:	4a23      	ldr	r2, [pc, #140]	; (800660c <TIM_Base_SetConfig+0x114>)
 800657e:	4293      	cmp	r3, r2
 8006580:	d108      	bne.n	8006594 <TIM_Base_SetConfig+0x9c>
  {
    /* Set the clock division */
    tmpcr1 &= ~TIM_CR1_CKD;
 8006582:	68fb      	ldr	r3, [r7, #12]
 8006584:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8006588:	60fb      	str	r3, [r7, #12]
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800658a:	683b      	ldr	r3, [r7, #0]
 800658c:	68db      	ldr	r3, [r3, #12]
 800658e:	68fa      	ldr	r2, [r7, #12]
 8006590:	4313      	orrs	r3, r2
 8006592:	60fb      	str	r3, [r7, #12]
  }

  /* Set the auto-reload preload */
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 8006594:	68fb      	ldr	r3, [r7, #12]
 8006596:	f023 0280 	bic.w	r2, r3, #128	; 0x80
 800659a:	683b      	ldr	r3, [r7, #0]
 800659c:	695b      	ldr	r3, [r3, #20]
 800659e:	4313      	orrs	r3, r2
 80065a0:	60fb      	str	r3, [r7, #12]

  TIMx->CR1 = tmpcr1;
 80065a2:	687b      	ldr	r3, [r7, #4]
 80065a4:	68fa      	ldr	r2, [r7, #12]
 80065a6:	601a      	str	r2, [r3, #0]

  /* Set the Autoreload value */
  TIMx->ARR = (uint32_t)Structure->Period ;
 80065a8:	683b      	ldr	r3, [r7, #0]
 80065aa:	689a      	ldr	r2, [r3, #8]
 80065ac:	687b      	ldr	r3, [r7, #4]
 80065ae:	62da      	str	r2, [r3, #44]	; 0x2c

  /* Set the Prescaler value */
  TIMx->PSC = Structure->Prescaler;
 80065b0:	683b      	ldr	r3, [r7, #0]
 80065b2:	681a      	ldr	r2, [r3, #0]
 80065b4:	687b      	ldr	r3, [r7, #4]
 80065b6:	629a      	str	r2, [r3, #40]	; 0x28

  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
 80065b8:	687b      	ldr	r3, [r7, #4]
 80065ba:	4a0e      	ldr	r2, [pc, #56]	; (80065f4 <TIM_Base_SetConfig+0xfc>)
 80065bc:	4293      	cmp	r3, r2
 80065be:	d103      	bne.n	80065c8 <TIM_Base_SetConfig+0xd0>
  {
    /* Set the Repetition Counter value */
    TIMx->RCR = Structure->RepetitionCounter;
 80065c0:	683b      	ldr	r3, [r7, #0]
 80065c2:	691a      	ldr	r2, [r3, #16]
 80065c4:	687b      	ldr	r3, [r7, #4]
 80065c6:	631a      	str	r2, [r3, #48]	; 0x30
  }

  /* Generate an update event to reload the Prescaler
     and the repetition counter (only for advanced timer) value immediately */
  TIMx->EGR = TIM_EGR_UG;
 80065c8:	687b      	ldr	r3, [r7, #4]
 80065ca:	2201      	movs	r2, #1
 80065cc:	615a      	str	r2, [r3, #20]

  /* Check if the update flag is set after the Update Generation, if so clear the UIF flag */
  if (HAL_IS_BIT_SET(TIMx->SR, TIM_FLAG_UPDATE))
 80065ce:	687b      	ldr	r3, [r7, #4]
 80065d0:	691b      	ldr	r3, [r3, #16]
 80065d2:	f003 0301 	and.w	r3, r3, #1
 80065d6:	2b01      	cmp	r3, #1
 80065d8:	d105      	bne.n	80065e6 <TIM_Base_SetConfig+0xee>
  {
    /* Clear the update flag */
    CLEAR_BIT(TIMx->SR, TIM_FLAG_UPDATE);
 80065da:	687b      	ldr	r3, [r7, #4]
 80065dc:	691b      	ldr	r3, [r3, #16]
 80065de:	f023 0201 	bic.w	r2, r3, #1
 80065e2:	687b      	ldr	r3, [r7, #4]
 80065e4:	611a      	str	r2, [r3, #16]
  }
}
 80065e6:	bf00      	nop
 80065e8:	3714      	adds	r7, #20
 80065ea:	46bd      	mov	sp, r7
 80065ec:	f85d 7b04 	ldr.w	r7, [sp], #4
 80065f0:	4770      	bx	lr
 80065f2:	bf00      	nop
 80065f4:	40010000 	.word	0x40010000
 80065f8:	40000400 	.word	0x40000400
 80065fc:	40000800 	.word	0x40000800
 8006600:	40000c00 	.word	0x40000c00
 8006604:	40014000 	.word	0x40014000
 8006608:	40014400 	.word	0x40014400
 800660c:	40014800 	.word	0x40014800

08006610 <TIM_OC1_SetConfig>:
  * @param  TIMx to select the TIM peripheral
  * @param  OC_Config The output configuration structure
  * @retval None
  */
static void TIM_OC1_SetConfig(TIM_TypeDef *TIMx, const TIM_OC_InitTypeDef *OC_Config)
{
 8006610:	b480      	push	{r7}
 8006612:	b087      	sub	sp, #28
 8006614:	af00      	add	r7, sp, #0
 8006616:	6078      	str	r0, [r7, #4]
 8006618:	6039      	str	r1, [r7, #0]
  uint32_t tmpccmrx;
  uint32_t tmpccer;
  uint32_t tmpcr2;

  /* Get the TIMx CCER register value */
  tmpccer = TIMx->CCER;
 800661a:	687b      	ldr	r3, [r7, #4]
 800661c:	6a1b      	ldr	r3, [r3, #32]
 800661e:	617b      	str	r3, [r7, #20]

  /* Disable the Channel 1: Reset the CC1E Bit */
  TIMx->CCER &= ~TIM_CCER_CC1E;
 8006620:	687b      	ldr	r3, [r7, #4]
 8006622:	6a1b      	ldr	r3, [r3, #32]
 8006624:	f023 0201 	bic.w	r2, r3, #1
 8006628:	687b      	ldr	r3, [r7, #4]
 800662a:	621a      	str	r2, [r3, #32]

  /* Get the TIMx CR2 register value */
  tmpcr2 =  TIMx->CR2;
 800662c:	687b      	ldr	r3, [r7, #4]
 800662e:	685b      	ldr	r3, [r3, #4]
 8006630:	613b      	str	r3, [r7, #16]

  /* Get the TIMx CCMR1 register value */
  tmpccmrx = TIMx->CCMR1;
 8006632:	687b      	ldr	r3, [r7, #4]
 8006634:	699b      	ldr	r3, [r3, #24]
 8006636:	60fb      	str	r3, [r7, #12]

  /* Reset the Output Compare Mode Bits */
  tmpccmrx &= ~TIM_CCMR1_OC1M;
 8006638:	68fb      	ldr	r3, [r7, #12]
 800663a:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 800663e:	60fb      	str	r3, [r7, #12]
  tmpccmrx &= ~TIM_CCMR1_CC1S;
 8006640:	68fb      	ldr	r3, [r7, #12]
 8006642:	f023 0303 	bic.w	r3, r3, #3
 8006646:	60fb      	str	r3, [r7, #12]
  /* Select the Output Compare Mode */
  tmpccmrx |= OC_Config->OCMode;
 8006648:	683b      	ldr	r3, [r7, #0]
 800664a:	681b      	ldr	r3, [r3, #0]
 800664c:	68fa      	ldr	r2, [r7, #12]
 800664e:	4313      	orrs	r3, r2
 8006650:	60fb      	str	r3, [r7, #12]

  /* Reset the Output Polarity level */
  tmpccer &= ~TIM_CCER_CC1P;
 8006652:	697b      	ldr	r3, [r7, #20]
 8006654:	f023 0302 	bic.w	r3, r3, #2
 8006658:	617b      	str	r3, [r7, #20]
  /* Set the Output Compare Polarity */
  tmpccer |= OC_Config->OCPolarity;
 800665a:	683b      	ldr	r3, [r7, #0]
 800665c:	689b      	ldr	r3, [r3, #8]
 800665e:	697a      	ldr	r2, [r7, #20]
 8006660:	4313      	orrs	r3, r2
 8006662:	617b      	str	r3, [r7, #20]

  if (IS_TIM_CCXN_INSTANCE(TIMx, TIM_CHANNEL_1))
 8006664:	687b      	ldr	r3, [r7, #4]
 8006666:	4a1c      	ldr	r2, [pc, #112]	; (80066d8 <TIM_OC1_SetConfig+0xc8>)
 8006668:	4293      	cmp	r3, r2
 800666a:	d10c      	bne.n	8006686 <TIM_OC1_SetConfig+0x76>
  {
    /* Check parameters */
    assert_param(IS_TIM_OCN_POLARITY(OC_Config->OCNPolarity));

    /* Reset the Output N Polarity level */
    tmpccer &= ~TIM_CCER_CC1NP;
 800666c:	697b      	ldr	r3, [r7, #20]
 800666e:	f023 0308 	bic.w	r3, r3, #8
 8006672:	617b      	str	r3, [r7, #20]
    /* Set the Output N Polarity */
    tmpccer |= OC_Config->OCNPolarity;
 8006674:	683b      	ldr	r3, [r7, #0]
 8006676:	68db      	ldr	r3, [r3, #12]
 8006678:	697a      	ldr	r2, [r7, #20]
 800667a:	4313      	orrs	r3, r2
 800667c:	617b      	str	r3, [r7, #20]
    /* Reset the Output N State */
    tmpccer &= ~TIM_CCER_CC1NE;
 800667e:	697b      	ldr	r3, [r7, #20]
 8006680:	f023 0304 	bic.w	r3, r3, #4
 8006684:	617b      	str	r3, [r7, #20]
  }

  if (IS_TIM_BREAK_INSTANCE(TIMx))
 8006686:	687b      	ldr	r3, [r7, #4]
 8006688:	4a13      	ldr	r2, [pc, #76]	; (80066d8 <TIM_OC1_SetConfig+0xc8>)
 800668a:	4293      	cmp	r3, r2
 800668c:	d111      	bne.n	80066b2 <TIM_OC1_SetConfig+0xa2>
    /* Check parameters */
    assert_param(IS_TIM_OCNIDLE_STATE(OC_Config->OCNIdleState));
    assert_param(IS_TIM_OCIDLE_STATE(OC_Config->OCIdleState));

    /* Reset the Output Compare and Output Compare N IDLE State */
    tmpcr2 &= ~TIM_CR2_OIS1;
 800668e:	693b      	ldr	r3, [r7, #16]
 8006690:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 8006694:	613b      	str	r3, [r7, #16]
    tmpcr2 &= ~TIM_CR2_OIS1N;
 8006696:	693b      	ldr	r3, [r7, #16]
 8006698:	f423 7300 	bic.w	r3, r3, #512	; 0x200
 800669c:	613b      	str	r3, [r7, #16]
    /* Set the Output Idle state */
    tmpcr2 |= OC_Config->OCIdleState;
 800669e:	683b      	ldr	r3, [r7, #0]
 80066a0:	695b      	ldr	r3, [r3, #20]
 80066a2:	693a      	ldr	r2, [r7, #16]
 80066a4:	4313      	orrs	r3, r2
 80066a6:	613b      	str	r3, [r7, #16]
    /* Set the Output N Idle state */
    tmpcr2 |= OC_Config->OCNIdleState;
 80066a8:	683b      	ldr	r3, [r7, #0]
 80066aa:	699b      	ldr	r3, [r3, #24]
 80066ac:	693a      	ldr	r2, [r7, #16]
 80066ae:	4313      	orrs	r3, r2
 80066b0:	613b      	str	r3, [r7, #16]
  }

  /* Write to TIMx CR2 */
  TIMx->CR2 = tmpcr2;
 80066b2:	687b      	ldr	r3, [r7, #4]
 80066b4:	693a      	ldr	r2, [r7, #16]
 80066b6:	605a      	str	r2, [r3, #4]

  /* Write to TIMx CCMR1 */
  TIMx->CCMR1 = tmpccmrx;
 80066b8:	687b      	ldr	r3, [r7, #4]
 80066ba:	68fa      	ldr	r2, [r7, #12]
 80066bc:	619a      	str	r2, [r3, #24]

  /* Set the Capture Compare Register value */
  TIMx->CCR1 = OC_Config->Pulse;
 80066be:	683b      	ldr	r3, [r7, #0]
 80066c0:	685a      	ldr	r2, [r3, #4]
 80066c2:	687b      	ldr	r3, [r7, #4]
 80066c4:	635a      	str	r2, [r3, #52]	; 0x34

  /* Write to TIMx CCER */
  TIMx->CCER = tmpccer;
 80066c6:	687b      	ldr	r3, [r7, #4]
 80066c8:	697a      	ldr	r2, [r7, #20]
 80066ca:	621a      	str	r2, [r3, #32]
}
 80066cc:	bf00      	nop
 80066ce:	371c      	adds	r7, #28
 80066d0:	46bd      	mov	sp, r7
 80066d2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80066d6:	4770      	bx	lr
 80066d8:	40010000 	.word	0x40010000

080066dc <TIM_OC2_SetConfig>:
  * @param  TIMx to select the TIM peripheral
  * @param  OC_Config The output configuration structure
  * @retval None
  */
void TIM_OC2_SetConfig(TIM_TypeDef *TIMx, const TIM_OC_InitTypeDef *OC_Config)
{
 80066dc:	b480      	push	{r7}
 80066de:	b087      	sub	sp, #28
 80066e0:	af00      	add	r7, sp, #0
 80066e2:	6078      	str	r0, [r7, #4]
 80066e4:	6039      	str	r1, [r7, #0]
  uint32_t tmpccmrx;
  uint32_t tmpccer;
  uint32_t tmpcr2;

  /* Get the TIMx CCER register value */
  tmpccer = TIMx->CCER;
 80066e6:	687b      	ldr	r3, [r7, #4]
 80066e8:	6a1b      	ldr	r3, [r3, #32]
 80066ea:	617b      	str	r3, [r7, #20]

  /* Disable the Channel 2: Reset the CC2E Bit */
  TIMx->CCER &= ~TIM_CCER_CC2E;
 80066ec:	687b      	ldr	r3, [r7, #4]
 80066ee:	6a1b      	ldr	r3, [r3, #32]
 80066f0:	f023 0210 	bic.w	r2, r3, #16
 80066f4:	687b      	ldr	r3, [r7, #4]
 80066f6:	621a      	str	r2, [r3, #32]

  /* Get the TIMx CR2 register value */
  tmpcr2 =  TIMx->CR2;
 80066f8:	687b      	ldr	r3, [r7, #4]
 80066fa:	685b      	ldr	r3, [r3, #4]
 80066fc:	613b      	str	r3, [r7, #16]

  /* Get the TIMx CCMR1 register value */
  tmpccmrx = TIMx->CCMR1;
 80066fe:	687b      	ldr	r3, [r7, #4]
 8006700:	699b      	ldr	r3, [r3, #24]
 8006702:	60fb      	str	r3, [r7, #12]

  /* Reset the Output Compare mode and Capture/Compare selection Bits */
  tmpccmrx &= ~TIM_CCMR1_OC2M;
 8006704:	68fb      	ldr	r3, [r7, #12]
 8006706:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 800670a:	60fb      	str	r3, [r7, #12]
  tmpccmrx &= ~TIM_CCMR1_CC2S;
 800670c:	68fb      	ldr	r3, [r7, #12]
 800670e:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8006712:	60fb      	str	r3, [r7, #12]

  /* Select the Output Compare Mode */
  tmpccmrx |= (OC_Config->OCMode << 8U);
 8006714:	683b      	ldr	r3, [r7, #0]
 8006716:	681b      	ldr	r3, [r3, #0]
 8006718:	021b      	lsls	r3, r3, #8
 800671a:	68fa      	ldr	r2, [r7, #12]
 800671c:	4313      	orrs	r3, r2
 800671e:	60fb      	str	r3, [r7, #12]

  /* Reset the Output Polarity level */
  tmpccer &= ~TIM_CCER_CC2P;
 8006720:	697b      	ldr	r3, [r7, #20]
 8006722:	f023 0320 	bic.w	r3, r3, #32
 8006726:	617b      	str	r3, [r7, #20]
  /* Set the Output Compare Polarity */
  tmpccer |= (OC_Config->OCPolarity << 4U);
 8006728:	683b      	ldr	r3, [r7, #0]
 800672a:	689b      	ldr	r3, [r3, #8]
 800672c:	011b      	lsls	r3, r3, #4
 800672e:	697a      	ldr	r2, [r7, #20]
 8006730:	4313      	orrs	r3, r2
 8006732:	617b      	str	r3, [r7, #20]

  if (IS_TIM_CCXN_INSTANCE(TIMx, TIM_CHANNEL_2))
 8006734:	687b      	ldr	r3, [r7, #4]
 8006736:	4a1e      	ldr	r2, [pc, #120]	; (80067b0 <TIM_OC2_SetConfig+0xd4>)
 8006738:	4293      	cmp	r3, r2
 800673a:	d10d      	bne.n	8006758 <TIM_OC2_SetConfig+0x7c>
  {
    assert_param(IS_TIM_OCN_POLARITY(OC_Config->OCNPolarity));

    /* Reset the Output N Polarity level */
    tmpccer &= ~TIM_CCER_CC2NP;
 800673c:	697b      	ldr	r3, [r7, #20]
 800673e:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8006742:	617b      	str	r3, [r7, #20]
    /* Set the Output N Polarity */
    tmpccer |= (OC_Config->OCNPolarity << 4U);
 8006744:	683b      	ldr	r3, [r7, #0]
 8006746:	68db      	ldr	r3, [r3, #12]
 8006748:	011b      	lsls	r3, r3, #4
 800674a:	697a      	ldr	r2, [r7, #20]
 800674c:	4313      	orrs	r3, r2
 800674e:	617b      	str	r3, [r7, #20]
    /* Reset the Output N State */
    tmpccer &= ~TIM_CCER_CC2NE;
 8006750:	697b      	ldr	r3, [r7, #20]
 8006752:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 8006756:	617b      	str	r3, [r7, #20]
  }

  if (IS_TIM_BREAK_INSTANCE(TIMx))
 8006758:	687b      	ldr	r3, [r7, #4]
 800675a:	4a15      	ldr	r2, [pc, #84]	; (80067b0 <TIM_OC2_SetConfig+0xd4>)
 800675c:	4293      	cmp	r3, r2
 800675e:	d113      	bne.n	8006788 <TIM_OC2_SetConfig+0xac>
    /* Check parameters */
    assert_param(IS_TIM_OCNIDLE_STATE(OC_Config->OCNIdleState));
    assert_param(IS_TIM_OCIDLE_STATE(OC_Config->OCIdleState));

    /* Reset the Output Compare and Output Compare N IDLE State */
    tmpcr2 &= ~TIM_CR2_OIS2;
 8006760:	693b      	ldr	r3, [r7, #16]
 8006762:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 8006766:	613b      	str	r3, [r7, #16]
    tmpcr2 &= ~TIM_CR2_OIS2N;
 8006768:	693b      	ldr	r3, [r7, #16]
 800676a:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 800676e:	613b      	str	r3, [r7, #16]
    /* Set the Output Idle state */
    tmpcr2 |= (OC_Config->OCIdleState << 2U);
 8006770:	683b      	ldr	r3, [r7, #0]
 8006772:	695b      	ldr	r3, [r3, #20]
 8006774:	009b      	lsls	r3, r3, #2
 8006776:	693a      	ldr	r2, [r7, #16]
 8006778:	4313      	orrs	r3, r2
 800677a:	613b      	str	r3, [r7, #16]
    /* Set the Output N Idle state */
    tmpcr2 |= (OC_Config->OCNIdleState << 2U);
 800677c:	683b      	ldr	r3, [r7, #0]
 800677e:	699b      	ldr	r3, [r3, #24]
 8006780:	009b      	lsls	r3, r3, #2
 8006782:	693a      	ldr	r2, [r7, #16]
 8006784:	4313      	orrs	r3, r2
 8006786:	613b      	str	r3, [r7, #16]
  }

  /* Write to TIMx CR2 */
  TIMx->CR2 = tmpcr2;
 8006788:	687b      	ldr	r3, [r7, #4]
 800678a:	693a      	ldr	r2, [r7, #16]
 800678c:	605a      	str	r2, [r3, #4]

  /* Write to TIMx CCMR1 */
  TIMx->CCMR1 = tmpccmrx;
 800678e:	687b      	ldr	r3, [r7, #4]
 8006790:	68fa      	ldr	r2, [r7, #12]
 8006792:	619a      	str	r2, [r3, #24]

  /* Set the Capture Compare Register value */
  TIMx->CCR2 = OC_Config->Pulse;
 8006794:	683b      	ldr	r3, [r7, #0]
 8006796:	685a      	ldr	r2, [r3, #4]
 8006798:	687b      	ldr	r3, [r7, #4]
 800679a:	639a      	str	r2, [r3, #56]	; 0x38

  /* Write to TIMx CCER */
  TIMx->CCER = tmpccer;
 800679c:	687b      	ldr	r3, [r7, #4]
 800679e:	697a      	ldr	r2, [r7, #20]
 80067a0:	621a      	str	r2, [r3, #32]
}
 80067a2:	bf00      	nop
 80067a4:	371c      	adds	r7, #28
 80067a6:	46bd      	mov	sp, r7
 80067a8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80067ac:	4770      	bx	lr
 80067ae:	bf00      	nop
 80067b0:	40010000 	.word	0x40010000

080067b4 <TIM_OC3_SetConfig>:
  * @param  TIMx to select the TIM peripheral
  * @param  OC_Config The output configuration structure
  * @retval None
  */
static void TIM_OC3_SetConfig(TIM_TypeDef *TIMx, const TIM_OC_InitTypeDef *OC_Config)
{
 80067b4:	b480      	push	{r7}
 80067b6:	b087      	sub	sp, #28
 80067b8:	af00      	add	r7, sp, #0
 80067ba:	6078      	str	r0, [r7, #4]
 80067bc:	6039      	str	r1, [r7, #0]
  uint32_t tmpccmrx;
  uint32_t tmpccer;
  uint32_t tmpcr2;

  /* Get the TIMx CCER register value */
  tmpccer = TIMx->CCER;
 80067be:	687b      	ldr	r3, [r7, #4]
 80067c0:	6a1b      	ldr	r3, [r3, #32]
 80067c2:	617b      	str	r3, [r7, #20]

  /* Disable the Channel 3: Reset the CC2E Bit */
  TIMx->CCER &= ~TIM_CCER_CC3E;
 80067c4:	687b      	ldr	r3, [r7, #4]
 80067c6:	6a1b      	ldr	r3, [r3, #32]
 80067c8:	f423 7280 	bic.w	r2, r3, #256	; 0x100
 80067cc:	687b      	ldr	r3, [r7, #4]
 80067ce:	621a      	str	r2, [r3, #32]

  /* Get the TIMx CR2 register value */
  tmpcr2 =  TIMx->CR2;
 80067d0:	687b      	ldr	r3, [r7, #4]
 80067d2:	685b      	ldr	r3, [r3, #4]
 80067d4:	613b      	str	r3, [r7, #16]

  /* Get the TIMx CCMR2 register value */
  tmpccmrx = TIMx->CCMR2;
 80067d6:	687b      	ldr	r3, [r7, #4]
 80067d8:	69db      	ldr	r3, [r3, #28]
 80067da:	60fb      	str	r3, [r7, #12]

  /* Reset the Output Compare mode and Capture/Compare selection Bits */
  tmpccmrx &= ~TIM_CCMR2_OC3M;
 80067dc:	68fb      	ldr	r3, [r7, #12]
 80067de:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 80067e2:	60fb      	str	r3, [r7, #12]
  tmpccmrx &= ~TIM_CCMR2_CC3S;
 80067e4:	68fb      	ldr	r3, [r7, #12]
 80067e6:	f023 0303 	bic.w	r3, r3, #3
 80067ea:	60fb      	str	r3, [r7, #12]
  /* Select the Output Compare Mode */
  tmpccmrx |= OC_Config->OCMode;
 80067ec:	683b      	ldr	r3, [r7, #0]
 80067ee:	681b      	ldr	r3, [r3, #0]
 80067f0:	68fa      	ldr	r2, [r7, #12]
 80067f2:	4313      	orrs	r3, r2
 80067f4:	60fb      	str	r3, [r7, #12]

  /* Reset the Output Polarity level */
  tmpccer &= ~TIM_CCER_CC3P;
 80067f6:	697b      	ldr	r3, [r7, #20]
 80067f8:	f423 7300 	bic.w	r3, r3, #512	; 0x200
 80067fc:	617b      	str	r3, [r7, #20]
  /* Set the Output Compare Polarity */
  tmpccer |= (OC_Config->OCPolarity << 8U);
 80067fe:	683b      	ldr	r3, [r7, #0]
 8006800:	689b      	ldr	r3, [r3, #8]
 8006802:	021b      	lsls	r3, r3, #8
 8006804:	697a      	ldr	r2, [r7, #20]
 8006806:	4313      	orrs	r3, r2
 8006808:	617b      	str	r3, [r7, #20]

  if (IS_TIM_CCXN_INSTANCE(TIMx, TIM_CHANNEL_3))
 800680a:	687b      	ldr	r3, [r7, #4]
 800680c:	4a1d      	ldr	r2, [pc, #116]	; (8006884 <TIM_OC3_SetConfig+0xd0>)
 800680e:	4293      	cmp	r3, r2
 8006810:	d10d      	bne.n	800682e <TIM_OC3_SetConfig+0x7a>
  {
    assert_param(IS_TIM_OCN_POLARITY(OC_Config->OCNPolarity));

    /* Reset the Output N Polarity level */
    tmpccer &= ~TIM_CCER_CC3NP;
 8006812:	697b      	ldr	r3, [r7, #20]
 8006814:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 8006818:	617b      	str	r3, [r7, #20]
    /* Set the Output N Polarity */
    tmpccer |= (OC_Config->OCNPolarity << 8U);
 800681a:	683b      	ldr	r3, [r7, #0]
 800681c:	68db      	ldr	r3, [r3, #12]
 800681e:	021b      	lsls	r3, r3, #8
 8006820:	697a      	ldr	r2, [r7, #20]
 8006822:	4313      	orrs	r3, r2
 8006824:	617b      	str	r3, [r7, #20]
    /* Reset the Output N State */
    tmpccer &= ~TIM_CCER_CC3NE;
 8006826:	697b      	ldr	r3, [r7, #20]
 8006828:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 800682c:	617b      	str	r3, [r7, #20]
  }

  if (IS_TIM_BREAK_INSTANCE(TIMx))
 800682e:	687b      	ldr	r3, [r7, #4]
 8006830:	4a14      	ldr	r2, [pc, #80]	; (8006884 <TIM_OC3_SetConfig+0xd0>)
 8006832:	4293      	cmp	r3, r2
 8006834:	d113      	bne.n	800685e <TIM_OC3_SetConfig+0xaa>
    /* Check parameters */
    assert_param(IS_TIM_OCNIDLE_STATE(OC_Config->OCNIdleState));
    assert_param(IS_TIM_OCIDLE_STATE(OC_Config->OCIdleState));

    /* Reset the Output Compare and Output Compare N IDLE State */
    tmpcr2 &= ~TIM_CR2_OIS3;
 8006836:	693b      	ldr	r3, [r7, #16]
 8006838:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 800683c:	613b      	str	r3, [r7, #16]
    tmpcr2 &= ~TIM_CR2_OIS3N;
 800683e:	693b      	ldr	r3, [r7, #16]
 8006840:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 8006844:	613b      	str	r3, [r7, #16]
    /* Set the Output Idle state */
    tmpcr2 |= (OC_Config->OCIdleState << 4U);
 8006846:	683b      	ldr	r3, [r7, #0]
 8006848:	695b      	ldr	r3, [r3, #20]
 800684a:	011b      	lsls	r3, r3, #4
 800684c:	693a      	ldr	r2, [r7, #16]
 800684e:	4313      	orrs	r3, r2
 8006850:	613b      	str	r3, [r7, #16]
    /* Set the Output N Idle state */
    tmpcr2 |= (OC_Config->OCNIdleState << 4U);
 8006852:	683b      	ldr	r3, [r7, #0]
 8006854:	699b      	ldr	r3, [r3, #24]
 8006856:	011b      	lsls	r3, r3, #4
 8006858:	693a      	ldr	r2, [r7, #16]
 800685a:	4313      	orrs	r3, r2
 800685c:	613b      	str	r3, [r7, #16]
  }

  /* Write to TIMx CR2 */
  TIMx->CR2 = tmpcr2;
 800685e:	687b      	ldr	r3, [r7, #4]
 8006860:	693a      	ldr	r2, [r7, #16]
 8006862:	605a      	str	r2, [r3, #4]

  /* Write to TIMx CCMR2 */
  TIMx->CCMR2 = tmpccmrx;
 8006864:	687b      	ldr	r3, [r7, #4]
 8006866:	68fa      	ldr	r2, [r7, #12]
 8006868:	61da      	str	r2, [r3, #28]

  /* Set the Capture Compare Register value */
  TIMx->CCR3 = OC_Config->Pulse;
 800686a:	683b      	ldr	r3, [r7, #0]
 800686c:	685a      	ldr	r2, [r3, #4]
 800686e:	687b      	ldr	r3, [r7, #4]
 8006870:	63da      	str	r2, [r3, #60]	; 0x3c

  /* Write to TIMx CCER */
  TIMx->CCER = tmpccer;
 8006872:	687b      	ldr	r3, [r7, #4]
 8006874:	697a      	ldr	r2, [r7, #20]
 8006876:	621a      	str	r2, [r3, #32]
}
 8006878:	bf00      	nop
 800687a:	371c      	adds	r7, #28
 800687c:	46bd      	mov	sp, r7
 800687e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006882:	4770      	bx	lr
 8006884:	40010000 	.word	0x40010000

08006888 <TIM_OC4_SetConfig>:
  * @param  TIMx to select the TIM peripheral
  * @param  OC_Config The output configuration structure
  * @retval None
  */
static void TIM_OC4_SetConfig(TIM_TypeDef *TIMx, const TIM_OC_InitTypeDef *OC_Config)
{
 8006888:	b480      	push	{r7}
 800688a:	b087      	sub	sp, #28
 800688c:	af00      	add	r7, sp, #0
 800688e:	6078      	str	r0, [r7, #4]
 8006890:	6039      	str	r1, [r7, #0]
  uint32_t tmpccmrx;
  uint32_t tmpccer;
  uint32_t tmpcr2;

  /* Get the TIMx CCER register value */
  tmpccer = TIMx->CCER;
 8006892:	687b      	ldr	r3, [r7, #4]
 8006894:	6a1b      	ldr	r3, [r3, #32]
 8006896:	613b      	str	r3, [r7, #16]

  /* Disable the Channel 4: Reset the CC4E Bit */
  TIMx->CCER &= ~TIM_CCER_CC4E;
 8006898:	687b      	ldr	r3, [r7, #4]
 800689a:	6a1b      	ldr	r3, [r3, #32]
 800689c:	f423 5280 	bic.w	r2, r3, #4096	; 0x1000
 80068a0:	687b      	ldr	r3, [r7, #4]
 80068a2:	621a      	str	r2, [r3, #32]

  /* Get the TIMx CR2 register value */
  tmpcr2 =  TIMx->CR2;
 80068a4:	687b      	ldr	r3, [r7, #4]
 80068a6:	685b      	ldr	r3, [r3, #4]
 80068a8:	617b      	str	r3, [r7, #20]

  /* Get the TIMx CCMR2 register value */
  tmpccmrx = TIMx->CCMR2;
 80068aa:	687b      	ldr	r3, [r7, #4]
 80068ac:	69db      	ldr	r3, [r3, #28]
 80068ae:	60fb      	str	r3, [r7, #12]

  /* Reset the Output Compare mode and Capture/Compare selection Bits */
  tmpccmrx &= ~TIM_CCMR2_OC4M;
 80068b0:	68fb      	ldr	r3, [r7, #12]
 80068b2:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 80068b6:	60fb      	str	r3, [r7, #12]
  tmpccmrx &= ~TIM_CCMR2_CC4S;
 80068b8:	68fb      	ldr	r3, [r7, #12]
 80068ba:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 80068be:	60fb      	str	r3, [r7, #12]

  /* Select the Output Compare Mode */
  tmpccmrx |= (OC_Config->OCMode << 8U);
 80068c0:	683b      	ldr	r3, [r7, #0]
 80068c2:	681b      	ldr	r3, [r3, #0]
 80068c4:	021b      	lsls	r3, r3, #8
 80068c6:	68fa      	ldr	r2, [r7, #12]
 80068c8:	4313      	orrs	r3, r2
 80068ca:	60fb      	str	r3, [r7, #12]

  /* Reset the Output Polarity level */
  tmpccer &= ~TIM_CCER_CC4P;
 80068cc:	693b      	ldr	r3, [r7, #16]
 80068ce:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 80068d2:	613b      	str	r3, [r7, #16]
  /* Set the Output Compare Polarity */
  tmpccer |= (OC_Config->OCPolarity << 12U);
 80068d4:	683b      	ldr	r3, [r7, #0]
 80068d6:	689b      	ldr	r3, [r3, #8]
 80068d8:	031b      	lsls	r3, r3, #12
 80068da:	693a      	ldr	r2, [r7, #16]
 80068dc:	4313      	orrs	r3, r2
 80068de:	613b      	str	r3, [r7, #16]

  if (IS_TIM_BREAK_INSTANCE(TIMx))
 80068e0:	687b      	ldr	r3, [r7, #4]
 80068e2:	4a10      	ldr	r2, [pc, #64]	; (8006924 <TIM_OC4_SetConfig+0x9c>)
 80068e4:	4293      	cmp	r3, r2
 80068e6:	d109      	bne.n	80068fc <TIM_OC4_SetConfig+0x74>
  {
    /* Check parameters */
    assert_param(IS_TIM_OCIDLE_STATE(OC_Config->OCIdleState));

    /* Reset the Output Compare IDLE State */
    tmpcr2 &= ~TIM_CR2_OIS4;
 80068e8:	697b      	ldr	r3, [r7, #20]
 80068ea:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 80068ee:	617b      	str	r3, [r7, #20]

    /* Set the Output Idle state */
    tmpcr2 |= (OC_Config->OCIdleState << 6U);
 80068f0:	683b      	ldr	r3, [r7, #0]
 80068f2:	695b      	ldr	r3, [r3, #20]
 80068f4:	019b      	lsls	r3, r3, #6
 80068f6:	697a      	ldr	r2, [r7, #20]
 80068f8:	4313      	orrs	r3, r2
 80068fa:	617b      	str	r3, [r7, #20]
  }

  /* Write to TIMx CR2 */
  TIMx->CR2 = tmpcr2;
 80068fc:	687b      	ldr	r3, [r7, #4]
 80068fe:	697a      	ldr	r2, [r7, #20]
 8006900:	605a      	str	r2, [r3, #4]

  /* Write to TIMx CCMR2 */
  TIMx->CCMR2 = tmpccmrx;
 8006902:	687b      	ldr	r3, [r7, #4]
 8006904:	68fa      	ldr	r2, [r7, #12]
 8006906:	61da      	str	r2, [r3, #28]

  /* Set the Capture Compare Register value */
  TIMx->CCR4 = OC_Config->Pulse;
 8006908:	683b      	ldr	r3, [r7, #0]
 800690a:	685a      	ldr	r2, [r3, #4]
 800690c:	687b      	ldr	r3, [r7, #4]
 800690e:	641a      	str	r2, [r3, #64]	; 0x40

  /* Write to TIMx CCER */
  TIMx->CCER = tmpccer;
 8006910:	687b      	ldr	r3, [r7, #4]
 8006912:	693a      	ldr	r2, [r7, #16]
 8006914:	621a      	str	r2, [r3, #32]
}
 8006916:	bf00      	nop
 8006918:	371c      	adds	r7, #28
 800691a:	46bd      	mov	sp, r7
 800691c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006920:	4770      	bx	lr
 8006922:	bf00      	nop
 8006924:	40010000 	.word	0x40010000

08006928 <TIM_TI1_ConfigInputStage>:
  * @param  TIM_ICFilter Specifies the Input Capture Filter.
  *          This parameter must be a value between 0x00 and 0x0F.
  * @retval None
  */
static void TIM_TI1_ConfigInputStage(TIM_TypeDef *TIMx, uint32_t TIM_ICPolarity, uint32_t TIM_ICFilter)
{
 8006928:	b480      	push	{r7}
 800692a:	b087      	sub	sp, #28
 800692c:	af00      	add	r7, sp, #0
 800692e:	60f8      	str	r0, [r7, #12]
 8006930:	60b9      	str	r1, [r7, #8]
 8006932:	607a      	str	r2, [r7, #4]
  uint32_t tmpccmr1;
  uint32_t tmpccer;

  /* Disable the Channel 1: Reset the CC1E Bit */
  tmpccer = TIMx->CCER;
 8006934:	68fb      	ldr	r3, [r7, #12]
 8006936:	6a1b      	ldr	r3, [r3, #32]
 8006938:	617b      	str	r3, [r7, #20]
  TIMx->CCER &= ~TIM_CCER_CC1E;
 800693a:	68fb      	ldr	r3, [r7, #12]
 800693c:	6a1b      	ldr	r3, [r3, #32]
 800693e:	f023 0201 	bic.w	r2, r3, #1
 8006942:	68fb      	ldr	r3, [r7, #12]
 8006944:	621a      	str	r2, [r3, #32]
  tmpccmr1 = TIMx->CCMR1;
 8006946:	68fb      	ldr	r3, [r7, #12]
 8006948:	699b      	ldr	r3, [r3, #24]
 800694a:	613b      	str	r3, [r7, #16]

  /* Set the filter */
  tmpccmr1 &= ~TIM_CCMR1_IC1F;
 800694c:	693b      	ldr	r3, [r7, #16]
 800694e:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 8006952:	613b      	str	r3, [r7, #16]
  tmpccmr1 |= (TIM_ICFilter << 4U);
 8006954:	687b      	ldr	r3, [r7, #4]
 8006956:	011b      	lsls	r3, r3, #4
 8006958:	693a      	ldr	r2, [r7, #16]
 800695a:	4313      	orrs	r3, r2
 800695c:	613b      	str	r3, [r7, #16]

  /* Select the Polarity and set the CC1E Bit */
  tmpccer &= ~(TIM_CCER_CC1P | TIM_CCER_CC1NP);
 800695e:	697b      	ldr	r3, [r7, #20]
 8006960:	f023 030a 	bic.w	r3, r3, #10
 8006964:	617b      	str	r3, [r7, #20]
  tmpccer |= TIM_ICPolarity;
 8006966:	697a      	ldr	r2, [r7, #20]
 8006968:	68bb      	ldr	r3, [r7, #8]
 800696a:	4313      	orrs	r3, r2
 800696c:	617b      	str	r3, [r7, #20]

  /* Write to TIMx CCMR1 and CCER registers */
  TIMx->CCMR1 = tmpccmr1;
 800696e:	68fb      	ldr	r3, [r7, #12]
 8006970:	693a      	ldr	r2, [r7, #16]
 8006972:	619a      	str	r2, [r3, #24]
  TIMx->CCER = tmpccer;
 8006974:	68fb      	ldr	r3, [r7, #12]
 8006976:	697a      	ldr	r2, [r7, #20]
 8006978:	621a      	str	r2, [r3, #32]
}
 800697a:	bf00      	nop
 800697c:	371c      	adds	r7, #28
 800697e:	46bd      	mov	sp, r7
 8006980:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006984:	4770      	bx	lr

08006986 <TIM_TI2_ConfigInputStage>:
  * @param  TIM_ICFilter Specifies the Input Capture Filter.
  *          This parameter must be a value between 0x00 and 0x0F.
  * @retval None
  */
static void TIM_TI2_ConfigInputStage(TIM_TypeDef *TIMx, uint32_t TIM_ICPolarity, uint32_t TIM_ICFilter)
{
 8006986:	b480      	push	{r7}
 8006988:	b087      	sub	sp, #28
 800698a:	af00      	add	r7, sp, #0
 800698c:	60f8      	str	r0, [r7, #12]
 800698e:	60b9      	str	r1, [r7, #8]
 8006990:	607a      	str	r2, [r7, #4]
  uint32_t tmpccmr1;
  uint32_t tmpccer;

  /* Disable the Channel 2: Reset the CC2E Bit */
  tmpccer = TIMx->CCER;
 8006992:	68fb      	ldr	r3, [r7, #12]
 8006994:	6a1b      	ldr	r3, [r3, #32]
 8006996:	617b      	str	r3, [r7, #20]
  TIMx->CCER &= ~TIM_CCER_CC2E;
 8006998:	68fb      	ldr	r3, [r7, #12]
 800699a:	6a1b      	ldr	r3, [r3, #32]
 800699c:	f023 0210 	bic.w	r2, r3, #16
 80069a0:	68fb      	ldr	r3, [r7, #12]
 80069a2:	621a      	str	r2, [r3, #32]
  tmpccmr1 = TIMx->CCMR1;
 80069a4:	68fb      	ldr	r3, [r7, #12]
 80069a6:	699b      	ldr	r3, [r3, #24]
 80069a8:	613b      	str	r3, [r7, #16]

  /* Set the filter */
  tmpccmr1 &= ~TIM_CCMR1_IC2F;
 80069aa:	693b      	ldr	r3, [r7, #16]
 80069ac:	f423 4370 	bic.w	r3, r3, #61440	; 0xf000
 80069b0:	613b      	str	r3, [r7, #16]
  tmpccmr1 |= (TIM_ICFilter << 12U);
 80069b2:	687b      	ldr	r3, [r7, #4]
 80069b4:	031b      	lsls	r3, r3, #12
 80069b6:	693a      	ldr	r2, [r7, #16]
 80069b8:	4313      	orrs	r3, r2
 80069ba:	613b      	str	r3, [r7, #16]

  /* Select the Polarity and set the CC2E Bit */
  tmpccer &= ~(TIM_CCER_CC2P | TIM_CCER_CC2NP);
 80069bc:	697b      	ldr	r3, [r7, #20]
 80069be:	f023 03a0 	bic.w	r3, r3, #160	; 0xa0
 80069c2:	617b      	str	r3, [r7, #20]
  tmpccer |= (TIM_ICPolarity << 4U);
 80069c4:	68bb      	ldr	r3, [r7, #8]
 80069c6:	011b      	lsls	r3, r3, #4
 80069c8:	697a      	ldr	r2, [r7, #20]
 80069ca:	4313      	orrs	r3, r2
 80069cc:	617b      	str	r3, [r7, #20]

  /* Write to TIMx CCMR1 and CCER registers */
  TIMx->CCMR1 = tmpccmr1 ;
 80069ce:	68fb      	ldr	r3, [r7, #12]
 80069d0:	693a      	ldr	r2, [r7, #16]
 80069d2:	619a      	str	r2, [r3, #24]
  TIMx->CCER = tmpccer;
 80069d4:	68fb      	ldr	r3, [r7, #12]
 80069d6:	697a      	ldr	r2, [r7, #20]
 80069d8:	621a      	str	r2, [r3, #32]
}
 80069da:	bf00      	nop
 80069dc:	371c      	adds	r7, #28
 80069de:	46bd      	mov	sp, r7
 80069e0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80069e4:	4770      	bx	lr

080069e6 <TIM_ITRx_SetConfig>:
  *            @arg TIM_TS_TI2FP2: Filtered Timer Input 2
  *            @arg TIM_TS_ETRF: External Trigger input
  * @retval None
  */
static void TIM_ITRx_SetConfig(TIM_TypeDef *TIMx, uint32_t InputTriggerSource)
{
 80069e6:	b480      	push	{r7}
 80069e8:	b085      	sub	sp, #20
 80069ea:	af00      	add	r7, sp, #0
 80069ec:	6078      	str	r0, [r7, #4]
 80069ee:	6039      	str	r1, [r7, #0]
  uint32_t tmpsmcr;

  /* Get the TIMx SMCR register value */
  tmpsmcr = TIMx->SMCR;
 80069f0:	687b      	ldr	r3, [r7, #4]
 80069f2:	689b      	ldr	r3, [r3, #8]
 80069f4:	60fb      	str	r3, [r7, #12]
  /* Reset the TS Bits */
  tmpsmcr &= ~TIM_SMCR_TS;
 80069f6:	68fb      	ldr	r3, [r7, #12]
 80069f8:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 80069fc:	60fb      	str	r3, [r7, #12]
  /* Set the Input Trigger source and the slave mode*/
  tmpsmcr |= (InputTriggerSource | TIM_SLAVEMODE_EXTERNAL1);
 80069fe:	683a      	ldr	r2, [r7, #0]
 8006a00:	68fb      	ldr	r3, [r7, #12]
 8006a02:	4313      	orrs	r3, r2
 8006a04:	f043 0307 	orr.w	r3, r3, #7
 8006a08:	60fb      	str	r3, [r7, #12]
  /* Write to TIMx SMCR */
  TIMx->SMCR = tmpsmcr;
 8006a0a:	687b      	ldr	r3, [r7, #4]
 8006a0c:	68fa      	ldr	r2, [r7, #12]
 8006a0e:	609a      	str	r2, [r3, #8]
}
 8006a10:	bf00      	nop
 8006a12:	3714      	adds	r7, #20
 8006a14:	46bd      	mov	sp, r7
 8006a16:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006a1a:	4770      	bx	lr

08006a1c <TIM_ETR_SetConfig>:
  *          This parameter must be a value between 0x00 and 0x0F
  * @retval None
  */
void TIM_ETR_SetConfig(TIM_TypeDef *TIMx, uint32_t TIM_ExtTRGPrescaler,
                       uint32_t TIM_ExtTRGPolarity, uint32_t ExtTRGFilter)
{
 8006a1c:	b480      	push	{r7}
 8006a1e:	b087      	sub	sp, #28
 8006a20:	af00      	add	r7, sp, #0
 8006a22:	60f8      	str	r0, [r7, #12]
 8006a24:	60b9      	str	r1, [r7, #8]
 8006a26:	607a      	str	r2, [r7, #4]
 8006a28:	603b      	str	r3, [r7, #0]
  uint32_t tmpsmcr;

  tmpsmcr = TIMx->SMCR;
 8006a2a:	68fb      	ldr	r3, [r7, #12]
 8006a2c:	689b      	ldr	r3, [r3, #8]
 8006a2e:	617b      	str	r3, [r7, #20]

  /* Reset the ETR Bits */
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);
 8006a30:	697b      	ldr	r3, [r7, #20]
 8006a32:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 8006a36:	617b      	str	r3, [r7, #20]

  /* Set the Prescaler, the Filter value and the Polarity */
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 8006a38:	683b      	ldr	r3, [r7, #0]
 8006a3a:	021a      	lsls	r2, r3, #8
 8006a3c:	687b      	ldr	r3, [r7, #4]
 8006a3e:	431a      	orrs	r2, r3
 8006a40:	68bb      	ldr	r3, [r7, #8]
 8006a42:	4313      	orrs	r3, r2
 8006a44:	697a      	ldr	r2, [r7, #20]
 8006a46:	4313      	orrs	r3, r2
 8006a48:	617b      	str	r3, [r7, #20]

  /* Write to TIMx SMCR */
  TIMx->SMCR = tmpsmcr;
 8006a4a:	68fb      	ldr	r3, [r7, #12]
 8006a4c:	697a      	ldr	r2, [r7, #20]
 8006a4e:	609a      	str	r2, [r3, #8]
}
 8006a50:	bf00      	nop
 8006a52:	371c      	adds	r7, #28
 8006a54:	46bd      	mov	sp, r7
 8006a56:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006a5a:	4770      	bx	lr

08006a5c <TIM_CCxChannelCmd>:
  * @param  ChannelState specifies the TIM Channel CCxE bit new state.
  *          This parameter can be: TIM_CCx_ENABLE or TIM_CCx_DISABLE.
  * @retval None
  */
void TIM_CCxChannelCmd(TIM_TypeDef *TIMx, uint32_t Channel, uint32_t ChannelState)
{
 8006a5c:	b480      	push	{r7}
 8006a5e:	b087      	sub	sp, #28
 8006a60:	af00      	add	r7, sp, #0
 8006a62:	60f8      	str	r0, [r7, #12]
 8006a64:	60b9      	str	r1, [r7, #8]
 8006a66:	607a      	str	r2, [r7, #4]

  /* Check the parameters */
  assert_param(IS_TIM_CC1_INSTANCE(TIMx));
  assert_param(IS_TIM_CHANNELS(Channel));

  tmp = TIM_CCER_CC1E << (Channel & 0x1FU); /* 0x1FU = 31 bits max shift */
 8006a68:	68bb      	ldr	r3, [r7, #8]
 8006a6a:	f003 031f 	and.w	r3, r3, #31
 8006a6e:	2201      	movs	r2, #1
 8006a70:	fa02 f303 	lsl.w	r3, r2, r3
 8006a74:	617b      	str	r3, [r7, #20]

  /* Reset the CCxE Bit */
  TIMx->CCER &= ~tmp;
 8006a76:	68fb      	ldr	r3, [r7, #12]
 8006a78:	6a1a      	ldr	r2, [r3, #32]
 8006a7a:	697b      	ldr	r3, [r7, #20]
 8006a7c:	43db      	mvns	r3, r3
 8006a7e:	401a      	ands	r2, r3
 8006a80:	68fb      	ldr	r3, [r7, #12]
 8006a82:	621a      	str	r2, [r3, #32]

  /* Set or reset the CCxE Bit */
  TIMx->CCER |= (uint32_t)(ChannelState << (Channel & 0x1FU)); /* 0x1FU = 31 bits max shift */
 8006a84:	68fb      	ldr	r3, [r7, #12]
 8006a86:	6a1a      	ldr	r2, [r3, #32]
 8006a88:	68bb      	ldr	r3, [r7, #8]
 8006a8a:	f003 031f 	and.w	r3, r3, #31
 8006a8e:	6879      	ldr	r1, [r7, #4]
 8006a90:	fa01 f303 	lsl.w	r3, r1, r3
 8006a94:	431a      	orrs	r2, r3
 8006a96:	68fb      	ldr	r3, [r7, #12]
 8006a98:	621a      	str	r2, [r3, #32]
}
 8006a9a:	bf00      	nop
 8006a9c:	371c      	adds	r7, #28
 8006a9e:	46bd      	mov	sp, r7
 8006aa0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006aa4:	4770      	bx	lr
	...

08006aa8 <HAL_TIMEx_MasterConfigSynchronization>:
  *         mode.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIMEx_MasterConfigSynchronization(TIM_HandleTypeDef *htim,
                                                        const TIM_MasterConfigTypeDef *sMasterConfig)
{
 8006aa8:	b480      	push	{r7}
 8006aaa:	b085      	sub	sp, #20
 8006aac:	af00      	add	r7, sp, #0
 8006aae:	6078      	str	r0, [r7, #4]
 8006ab0:	6039      	str	r1, [r7, #0]
  assert_param(IS_TIM_MASTER_INSTANCE(htim->Instance));
  assert_param(IS_TIM_TRGO_SOURCE(sMasterConfig->MasterOutputTrigger));
  assert_param(IS_TIM_MSM_STATE(sMasterConfig->MasterSlaveMode));

  /* Check input state */
  __HAL_LOCK(htim);
 8006ab2:	687b      	ldr	r3, [r7, #4]
 8006ab4:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8006ab8:	2b01      	cmp	r3, #1
 8006aba:	d101      	bne.n	8006ac0 <HAL_TIMEx_MasterConfigSynchronization+0x18>
 8006abc:	2302      	movs	r3, #2
 8006abe:	e050      	b.n	8006b62 <HAL_TIMEx_MasterConfigSynchronization+0xba>
 8006ac0:	687b      	ldr	r3, [r7, #4]
 8006ac2:	2201      	movs	r2, #1
 8006ac4:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

  /* Change the handler state */
  htim->State = HAL_TIM_STATE_BUSY;
 8006ac8:	687b      	ldr	r3, [r7, #4]
 8006aca:	2202      	movs	r2, #2
 8006acc:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d

  /* Get the TIMx CR2 register value */
  tmpcr2 = htim->Instance->CR2;
 8006ad0:	687b      	ldr	r3, [r7, #4]
 8006ad2:	681b      	ldr	r3, [r3, #0]
 8006ad4:	685b      	ldr	r3, [r3, #4]
 8006ad6:	60fb      	str	r3, [r7, #12]

  /* Get the TIMx SMCR register value */
  tmpsmcr = htim->Instance->SMCR;
 8006ad8:	687b      	ldr	r3, [r7, #4]
 8006ada:	681b      	ldr	r3, [r3, #0]
 8006adc:	689b      	ldr	r3, [r3, #8]
 8006ade:	60bb      	str	r3, [r7, #8]

  /* Reset the MMS Bits */
  tmpcr2 &= ~TIM_CR2_MMS;
 8006ae0:	68fb      	ldr	r3, [r7, #12]
 8006ae2:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8006ae6:	60fb      	str	r3, [r7, #12]
  /* Select the TRGO source */
  tmpcr2 |=  sMasterConfig->MasterOutputTrigger;
 8006ae8:	683b      	ldr	r3, [r7, #0]
 8006aea:	681b      	ldr	r3, [r3, #0]
 8006aec:	68fa      	ldr	r2, [r7, #12]
 8006aee:	4313      	orrs	r3, r2
 8006af0:	60fb      	str	r3, [r7, #12]

  /* Update TIMx CR2 */
  htim->Instance->CR2 = tmpcr2;
 8006af2:	687b      	ldr	r3, [r7, #4]
 8006af4:	681b      	ldr	r3, [r3, #0]
 8006af6:	68fa      	ldr	r2, [r7, #12]
 8006af8:	605a      	str	r2, [r3, #4]

  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 8006afa:	687b      	ldr	r3, [r7, #4]
 8006afc:	681b      	ldr	r3, [r3, #0]
 8006afe:	4a1c      	ldr	r2, [pc, #112]	; (8006b70 <HAL_TIMEx_MasterConfigSynchronization+0xc8>)
 8006b00:	4293      	cmp	r3, r2
 8006b02:	d018      	beq.n	8006b36 <HAL_TIMEx_MasterConfigSynchronization+0x8e>
 8006b04:	687b      	ldr	r3, [r7, #4]
 8006b06:	681b      	ldr	r3, [r3, #0]
 8006b08:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8006b0c:	d013      	beq.n	8006b36 <HAL_TIMEx_MasterConfigSynchronization+0x8e>
 8006b0e:	687b      	ldr	r3, [r7, #4]
 8006b10:	681b      	ldr	r3, [r3, #0]
 8006b12:	4a18      	ldr	r2, [pc, #96]	; (8006b74 <HAL_TIMEx_MasterConfigSynchronization+0xcc>)
 8006b14:	4293      	cmp	r3, r2
 8006b16:	d00e      	beq.n	8006b36 <HAL_TIMEx_MasterConfigSynchronization+0x8e>
 8006b18:	687b      	ldr	r3, [r7, #4]
 8006b1a:	681b      	ldr	r3, [r3, #0]
 8006b1c:	4a16      	ldr	r2, [pc, #88]	; (8006b78 <HAL_TIMEx_MasterConfigSynchronization+0xd0>)
 8006b1e:	4293      	cmp	r3, r2
 8006b20:	d009      	beq.n	8006b36 <HAL_TIMEx_MasterConfigSynchronization+0x8e>
 8006b22:	687b      	ldr	r3, [r7, #4]
 8006b24:	681b      	ldr	r3, [r3, #0]
 8006b26:	4a15      	ldr	r2, [pc, #84]	; (8006b7c <HAL_TIMEx_MasterConfigSynchronization+0xd4>)
 8006b28:	4293      	cmp	r3, r2
 8006b2a:	d004      	beq.n	8006b36 <HAL_TIMEx_MasterConfigSynchronization+0x8e>
 8006b2c:	687b      	ldr	r3, [r7, #4]
 8006b2e:	681b      	ldr	r3, [r3, #0]
 8006b30:	4a13      	ldr	r2, [pc, #76]	; (8006b80 <HAL_TIMEx_MasterConfigSynchronization+0xd8>)
 8006b32:	4293      	cmp	r3, r2
 8006b34:	d10c      	bne.n	8006b50 <HAL_TIMEx_MasterConfigSynchronization+0xa8>
  {
    /* Reset the MSM Bit */
    tmpsmcr &= ~TIM_SMCR_MSM;
 8006b36:	68bb      	ldr	r3, [r7, #8]
 8006b38:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8006b3c:	60bb      	str	r3, [r7, #8]
    /* Set master mode */
    tmpsmcr |= sMasterConfig->MasterSlaveMode;
 8006b3e:	683b      	ldr	r3, [r7, #0]
 8006b40:	685b      	ldr	r3, [r3, #4]
 8006b42:	68ba      	ldr	r2, [r7, #8]
 8006b44:	4313      	orrs	r3, r2
 8006b46:	60bb      	str	r3, [r7, #8]

    /* Update TIMx SMCR */
    htim->Instance->SMCR = tmpsmcr;
 8006b48:	687b      	ldr	r3, [r7, #4]
 8006b4a:	681b      	ldr	r3, [r3, #0]
 8006b4c:	68ba      	ldr	r2, [r7, #8]
 8006b4e:	609a      	str	r2, [r3, #8]
  }

  /* Change the htim state */
  htim->State = HAL_TIM_STATE_READY;
 8006b50:	687b      	ldr	r3, [r7, #4]
 8006b52:	2201      	movs	r2, #1
 8006b54:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d

  __HAL_UNLOCK(htim);
 8006b58:	687b      	ldr	r3, [r7, #4]
 8006b5a:	2200      	movs	r2, #0
 8006b5c:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

  return HAL_OK;
 8006b60:	2300      	movs	r3, #0
}
 8006b62:	4618      	mov	r0, r3
 8006b64:	3714      	adds	r7, #20
 8006b66:	46bd      	mov	sp, r7
 8006b68:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006b6c:	4770      	bx	lr
 8006b6e:	bf00      	nop
 8006b70:	40010000 	.word	0x40010000
 8006b74:	40000400 	.word	0x40000400
 8006b78:	40000800 	.word	0x40000800
 8006b7c:	40000c00 	.word	0x40000c00
 8006b80:	40014000 	.word	0x40014000

08006b84 <HAL_TIMEx_CommutCallback>:
  * @brief  Commutation callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIMEx_CommutCallback(TIM_HandleTypeDef *htim)
{
 8006b84:	b480      	push	{r7}
 8006b86:	b083      	sub	sp, #12
 8006b88:	af00      	add	r7, sp, #0
 8006b8a:	6078      	str	r0, [r7, #4]
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIMEx_CommutCallback could be implemented in the user file
   */
}
 8006b8c:	bf00      	nop
 8006b8e:	370c      	adds	r7, #12
 8006b90:	46bd      	mov	sp, r7
 8006b92:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006b96:	4770      	bx	lr

08006b98 <HAL_TIMEx_BreakCallback>:
  * @brief  Break detection callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIMEx_BreakCallback(TIM_HandleTypeDef *htim)
{
 8006b98:	b480      	push	{r7}
 8006b9a:	b083      	sub	sp, #12
 8006b9c:	af00      	add	r7, sp, #0
 8006b9e:	6078      	str	r0, [r7, #4]
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIMEx_BreakCallback could be implemented in the user file
   */
}
 8006ba0:	bf00      	nop
 8006ba2:	370c      	adds	r7, #12
 8006ba4:	46bd      	mov	sp, r7
 8006ba6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006baa:	4770      	bx	lr

08006bac <USB_CoreInit>:
  * @param  cfg pointer to a USB_OTG_CfgTypeDef structure that contains
  *         the configuration information for the specified USBx peripheral.
  * @retval HAL status
  */
HAL_StatusTypeDef USB_CoreInit(USB_OTG_GlobalTypeDef *USBx, USB_OTG_CfgTypeDef cfg)
{
 8006bac:	b084      	sub	sp, #16
 8006bae:	b580      	push	{r7, lr}
 8006bb0:	b084      	sub	sp, #16
 8006bb2:	af00      	add	r7, sp, #0
 8006bb4:	6078      	str	r0, [r7, #4]
 8006bb6:	f107 001c 	add.w	r0, r7, #28
 8006bba:	e880 000e 	stmia.w	r0, {r1, r2, r3}
  HAL_StatusTypeDef ret;
  if (cfg.phy_itface == USB_OTG_ULPI_PHY)
 8006bbe:	f897 3021 	ldrb.w	r3, [r7, #33]	; 0x21
 8006bc2:	2b01      	cmp	r3, #1
 8006bc4:	d123      	bne.n	8006c0e <USB_CoreInit+0x62>
  {
    USBx->GCCFG &= ~(USB_OTG_GCCFG_PWRDWN);
 8006bc6:	687b      	ldr	r3, [r7, #4]
 8006bc8:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8006bca:	f423 3280 	bic.w	r2, r3, #65536	; 0x10000
 8006bce:	687b      	ldr	r3, [r7, #4]
 8006bd0:	639a      	str	r2, [r3, #56]	; 0x38

    /* Init The ULPI Interface */
    USBx->GUSBCFG &= ~(USB_OTG_GUSBCFG_TSDPS | USB_OTG_GUSBCFG_ULPIFSLS | USB_OTG_GUSBCFG_PHYSEL);
 8006bd2:	687b      	ldr	r3, [r7, #4]
 8006bd4:	68db      	ldr	r3, [r3, #12]
 8006bd6:	f423 0384 	bic.w	r3, r3, #4325376	; 0x420000
 8006bda:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 8006bde:	687a      	ldr	r2, [r7, #4]
 8006be0:	60d3      	str	r3, [r2, #12]

    /* Select vbus source */
    USBx->GUSBCFG &= ~(USB_OTG_GUSBCFG_ULPIEVBUSD | USB_OTG_GUSBCFG_ULPIEVBUSI);
 8006be2:	687b      	ldr	r3, [r7, #4]
 8006be4:	68db      	ldr	r3, [r3, #12]
 8006be6:	f423 1240 	bic.w	r2, r3, #3145728	; 0x300000
 8006bea:	687b      	ldr	r3, [r7, #4]
 8006bec:	60da      	str	r2, [r3, #12]
    if (cfg.use_external_vbus == 1U)
 8006bee:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
 8006bf2:	2b01      	cmp	r3, #1
 8006bf4:	d105      	bne.n	8006c02 <USB_CoreInit+0x56>
    {
      USBx->GUSBCFG |= USB_OTG_GUSBCFG_ULPIEVBUSD;
 8006bf6:	687b      	ldr	r3, [r7, #4]
 8006bf8:	68db      	ldr	r3, [r3, #12]
 8006bfa:	f443 1280 	orr.w	r2, r3, #1048576	; 0x100000
 8006bfe:	687b      	ldr	r3, [r7, #4]
 8006c00:	60da      	str	r2, [r3, #12]
    }

    /* Reset after a PHY select */
    ret = USB_CoreReset(USBx);
 8006c02:	6878      	ldr	r0, [r7, #4]
 8006c04:	f001 fae2 	bl	80081cc <USB_CoreReset>
 8006c08:	4603      	mov	r3, r0
 8006c0a:	73fb      	strb	r3, [r7, #15]
 8006c0c:	e01b      	b.n	8006c46 <USB_CoreInit+0x9a>
  }
  else /* FS interface (embedded Phy) */
  {
    /* Select FS Embedded PHY */
    USBx->GUSBCFG |= USB_OTG_GUSBCFG_PHYSEL;
 8006c0e:	687b      	ldr	r3, [r7, #4]
 8006c10:	68db      	ldr	r3, [r3, #12]
 8006c12:	f043 0240 	orr.w	r2, r3, #64	; 0x40
 8006c16:	687b      	ldr	r3, [r7, #4]
 8006c18:	60da      	str	r2, [r3, #12]

    /* Reset after a PHY select */
    ret = USB_CoreReset(USBx);
 8006c1a:	6878      	ldr	r0, [r7, #4]
 8006c1c:	f001 fad6 	bl	80081cc <USB_CoreReset>
 8006c20:	4603      	mov	r3, r0
 8006c22:	73fb      	strb	r3, [r7, #15]

    if (cfg.battery_charging_enable == 0U)
 8006c24:	f897 3025 	ldrb.w	r3, [r7, #37]	; 0x25
 8006c28:	2b00      	cmp	r3, #0
 8006c2a:	d106      	bne.n	8006c3a <USB_CoreInit+0x8e>
    {
      /* Activate the USB Transceiver */
      USBx->GCCFG |= USB_OTG_GCCFG_PWRDWN;
 8006c2c:	687b      	ldr	r3, [r7, #4]
 8006c2e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8006c30:	f443 3280 	orr.w	r2, r3, #65536	; 0x10000
 8006c34:	687b      	ldr	r3, [r7, #4]
 8006c36:	639a      	str	r2, [r3, #56]	; 0x38
 8006c38:	e005      	b.n	8006c46 <USB_CoreInit+0x9a>
    }
    else
    {
      /* Deactivate the USB Transceiver */
      USBx->GCCFG &= ~(USB_OTG_GCCFG_PWRDWN);
 8006c3a:	687b      	ldr	r3, [r7, #4]
 8006c3c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8006c3e:	f423 3280 	bic.w	r2, r3, #65536	; 0x10000
 8006c42:	687b      	ldr	r3, [r7, #4]
 8006c44:	639a      	str	r2, [r3, #56]	; 0x38
    }
  }

  if (cfg.dma_enable == 1U)
 8006c46:	7fbb      	ldrb	r3, [r7, #30]
 8006c48:	2b01      	cmp	r3, #1
 8006c4a:	d10b      	bne.n	8006c64 <USB_CoreInit+0xb8>
  {
    USBx->GAHBCFG |= USB_OTG_GAHBCFG_HBSTLEN_2;
 8006c4c:	687b      	ldr	r3, [r7, #4]
 8006c4e:	689b      	ldr	r3, [r3, #8]
 8006c50:	f043 0206 	orr.w	r2, r3, #6
 8006c54:	687b      	ldr	r3, [r7, #4]
 8006c56:	609a      	str	r2, [r3, #8]
    USBx->GAHBCFG |= USB_OTG_GAHBCFG_DMAEN;
 8006c58:	687b      	ldr	r3, [r7, #4]
 8006c5a:	689b      	ldr	r3, [r3, #8]
 8006c5c:	f043 0220 	orr.w	r2, r3, #32
 8006c60:	687b      	ldr	r3, [r7, #4]
 8006c62:	609a      	str	r2, [r3, #8]
  }

  return ret;
 8006c64:	7bfb      	ldrb	r3, [r7, #15]
}
 8006c66:	4618      	mov	r0, r3
 8006c68:	3710      	adds	r7, #16
 8006c6a:	46bd      	mov	sp, r7
 8006c6c:	e8bd 4080 	ldmia.w	sp!, {r7, lr}
 8006c70:	b004      	add	sp, #16
 8006c72:	4770      	bx	lr

08006c74 <USB_SetTurnaroundTime>:
  * @param  hclk: AHB clock frequency
  * @retval USB turnaround time In PHY Clocks number
  */
HAL_StatusTypeDef USB_SetTurnaroundTime(USB_OTG_GlobalTypeDef *USBx,
                                        uint32_t hclk, uint8_t speed)
{
 8006c74:	b480      	push	{r7}
 8006c76:	b087      	sub	sp, #28
 8006c78:	af00      	add	r7, sp, #0
 8006c7a:	60f8      	str	r0, [r7, #12]
 8006c7c:	60b9      	str	r1, [r7, #8]
 8006c7e:	4613      	mov	r3, r2
 8006c80:	71fb      	strb	r3, [r7, #7]

  /* The USBTRD is configured according to the tables below, depending on AHB frequency
  used by application. In the low AHB frequency range it is used to stretch enough the USB response
  time to IN tokens, the USB turnaround time, so to compensate for the longer AHB read access
  latency to the Data FIFO */
  if (speed == USBD_FS_SPEED)
 8006c82:	79fb      	ldrb	r3, [r7, #7]
 8006c84:	2b02      	cmp	r3, #2
 8006c86:	d165      	bne.n	8006d54 <USB_SetTurnaroundTime+0xe0>
  {
    if ((hclk >= 14200000U) && (hclk < 15000000U))
 8006c88:	68bb      	ldr	r3, [r7, #8]
 8006c8a:	4a41      	ldr	r2, [pc, #260]	; (8006d90 <USB_SetTurnaroundTime+0x11c>)
 8006c8c:	4293      	cmp	r3, r2
 8006c8e:	d906      	bls.n	8006c9e <USB_SetTurnaroundTime+0x2a>
 8006c90:	68bb      	ldr	r3, [r7, #8]
 8006c92:	4a40      	ldr	r2, [pc, #256]	; (8006d94 <USB_SetTurnaroundTime+0x120>)
 8006c94:	4293      	cmp	r3, r2
 8006c96:	d202      	bcs.n	8006c9e <USB_SetTurnaroundTime+0x2a>
    {
      /* hclk Clock Range between 14.2-15 MHz */
      UsbTrd = 0xFU;
 8006c98:	230f      	movs	r3, #15
 8006c9a:	617b      	str	r3, [r7, #20]
 8006c9c:	e062      	b.n	8006d64 <USB_SetTurnaroundTime+0xf0>
    }
    else if ((hclk >= 15000000U) && (hclk < 16000000U))
 8006c9e:	68bb      	ldr	r3, [r7, #8]
 8006ca0:	4a3c      	ldr	r2, [pc, #240]	; (8006d94 <USB_SetTurnaroundTime+0x120>)
 8006ca2:	4293      	cmp	r3, r2
 8006ca4:	d306      	bcc.n	8006cb4 <USB_SetTurnaroundTime+0x40>
 8006ca6:	68bb      	ldr	r3, [r7, #8]
 8006ca8:	4a3b      	ldr	r2, [pc, #236]	; (8006d98 <USB_SetTurnaroundTime+0x124>)
 8006caa:	4293      	cmp	r3, r2
 8006cac:	d202      	bcs.n	8006cb4 <USB_SetTurnaroundTime+0x40>
    {
      /* hclk Clock Range between 15-16 MHz */
      UsbTrd = 0xEU;
 8006cae:	230e      	movs	r3, #14
 8006cb0:	617b      	str	r3, [r7, #20]
 8006cb2:	e057      	b.n	8006d64 <USB_SetTurnaroundTime+0xf0>
    }
    else if ((hclk >= 16000000U) && (hclk < 17200000U))
 8006cb4:	68bb      	ldr	r3, [r7, #8]
 8006cb6:	4a38      	ldr	r2, [pc, #224]	; (8006d98 <USB_SetTurnaroundTime+0x124>)
 8006cb8:	4293      	cmp	r3, r2
 8006cba:	d306      	bcc.n	8006cca <USB_SetTurnaroundTime+0x56>
 8006cbc:	68bb      	ldr	r3, [r7, #8]
 8006cbe:	4a37      	ldr	r2, [pc, #220]	; (8006d9c <USB_SetTurnaroundTime+0x128>)
 8006cc0:	4293      	cmp	r3, r2
 8006cc2:	d202      	bcs.n	8006cca <USB_SetTurnaroundTime+0x56>
    {
      /* hclk Clock Range between 16-17.2 MHz */
      UsbTrd = 0xDU;
 8006cc4:	230d      	movs	r3, #13
 8006cc6:	617b      	str	r3, [r7, #20]
 8006cc8:	e04c      	b.n	8006d64 <USB_SetTurnaroundTime+0xf0>
    }
    else if ((hclk >= 17200000U) && (hclk < 18500000U))
 8006cca:	68bb      	ldr	r3, [r7, #8]
 8006ccc:	4a33      	ldr	r2, [pc, #204]	; (8006d9c <USB_SetTurnaroundTime+0x128>)
 8006cce:	4293      	cmp	r3, r2
 8006cd0:	d306      	bcc.n	8006ce0 <USB_SetTurnaroundTime+0x6c>
 8006cd2:	68bb      	ldr	r3, [r7, #8]
 8006cd4:	4a32      	ldr	r2, [pc, #200]	; (8006da0 <USB_SetTurnaroundTime+0x12c>)
 8006cd6:	4293      	cmp	r3, r2
 8006cd8:	d802      	bhi.n	8006ce0 <USB_SetTurnaroundTime+0x6c>
    {
      /* hclk Clock Range between 17.2-18.5 MHz */
      UsbTrd = 0xCU;
 8006cda:	230c      	movs	r3, #12
 8006cdc:	617b      	str	r3, [r7, #20]
 8006cde:	e041      	b.n	8006d64 <USB_SetTurnaroundTime+0xf0>
    }
    else if ((hclk >= 18500000U) && (hclk < 20000000U))
 8006ce0:	68bb      	ldr	r3, [r7, #8]
 8006ce2:	4a2f      	ldr	r2, [pc, #188]	; (8006da0 <USB_SetTurnaroundTime+0x12c>)
 8006ce4:	4293      	cmp	r3, r2
 8006ce6:	d906      	bls.n	8006cf6 <USB_SetTurnaroundTime+0x82>
 8006ce8:	68bb      	ldr	r3, [r7, #8]
 8006cea:	4a2e      	ldr	r2, [pc, #184]	; (8006da4 <USB_SetTurnaroundTime+0x130>)
 8006cec:	4293      	cmp	r3, r2
 8006cee:	d802      	bhi.n	8006cf6 <USB_SetTurnaroundTime+0x82>
    {
      /* hclk Clock Range between 18.5-20 MHz */
      UsbTrd = 0xBU;
 8006cf0:	230b      	movs	r3, #11
 8006cf2:	617b      	str	r3, [r7, #20]
 8006cf4:	e036      	b.n	8006d64 <USB_SetTurnaroundTime+0xf0>
    }
    else if ((hclk >= 20000000U) && (hclk < 21800000U))
 8006cf6:	68bb      	ldr	r3, [r7, #8]
 8006cf8:	4a2a      	ldr	r2, [pc, #168]	; (8006da4 <USB_SetTurnaroundTime+0x130>)
 8006cfa:	4293      	cmp	r3, r2
 8006cfc:	d906      	bls.n	8006d0c <USB_SetTurnaroundTime+0x98>
 8006cfe:	68bb      	ldr	r3, [r7, #8]
 8006d00:	4a29      	ldr	r2, [pc, #164]	; (8006da8 <USB_SetTurnaroundTime+0x134>)
 8006d02:	4293      	cmp	r3, r2
 8006d04:	d802      	bhi.n	8006d0c <USB_SetTurnaroundTime+0x98>
    {
      /* hclk Clock Range between 20-21.8 MHz */
      UsbTrd = 0xAU;
 8006d06:	230a      	movs	r3, #10
 8006d08:	617b      	str	r3, [r7, #20]
 8006d0a:	e02b      	b.n	8006d64 <USB_SetTurnaroundTime+0xf0>
    }
    else if ((hclk >= 21800000U) && (hclk < 24000000U))
 8006d0c:	68bb      	ldr	r3, [r7, #8]
 8006d0e:	4a26      	ldr	r2, [pc, #152]	; (8006da8 <USB_SetTurnaroundTime+0x134>)
 8006d10:	4293      	cmp	r3, r2
 8006d12:	d906      	bls.n	8006d22 <USB_SetTurnaroundTime+0xae>
 8006d14:	68bb      	ldr	r3, [r7, #8]
 8006d16:	4a25      	ldr	r2, [pc, #148]	; (8006dac <USB_SetTurnaroundTime+0x138>)
 8006d18:	4293      	cmp	r3, r2
 8006d1a:	d202      	bcs.n	8006d22 <USB_SetTurnaroundTime+0xae>
    {
      /* hclk Clock Range between 21.8-24 MHz */
      UsbTrd = 0x9U;
 8006d1c:	2309      	movs	r3, #9
 8006d1e:	617b      	str	r3, [r7, #20]
 8006d20:	e020      	b.n	8006d64 <USB_SetTurnaroundTime+0xf0>
    }
    else if ((hclk >= 24000000U) && (hclk < 27700000U))
 8006d22:	68bb      	ldr	r3, [r7, #8]
 8006d24:	4a21      	ldr	r2, [pc, #132]	; (8006dac <USB_SetTurnaroundTime+0x138>)
 8006d26:	4293      	cmp	r3, r2
 8006d28:	d306      	bcc.n	8006d38 <USB_SetTurnaroundTime+0xc4>
 8006d2a:	68bb      	ldr	r3, [r7, #8]
 8006d2c:	4a20      	ldr	r2, [pc, #128]	; (8006db0 <USB_SetTurnaroundTime+0x13c>)
 8006d2e:	4293      	cmp	r3, r2
 8006d30:	d802      	bhi.n	8006d38 <USB_SetTurnaroundTime+0xc4>
    {
      /* hclk Clock Range between 24-27.7 MHz */
      UsbTrd = 0x8U;
 8006d32:	2308      	movs	r3, #8
 8006d34:	617b      	str	r3, [r7, #20]
 8006d36:	e015      	b.n	8006d64 <USB_SetTurnaroundTime+0xf0>
    }
    else if ((hclk >= 27700000U) && (hclk < 32000000U))
 8006d38:	68bb      	ldr	r3, [r7, #8]
 8006d3a:	4a1d      	ldr	r2, [pc, #116]	; (8006db0 <USB_SetTurnaroundTime+0x13c>)
 8006d3c:	4293      	cmp	r3, r2
 8006d3e:	d906      	bls.n	8006d4e <USB_SetTurnaroundTime+0xda>
 8006d40:	68bb      	ldr	r3, [r7, #8]
 8006d42:	4a1c      	ldr	r2, [pc, #112]	; (8006db4 <USB_SetTurnaroundTime+0x140>)
 8006d44:	4293      	cmp	r3, r2
 8006d46:	d202      	bcs.n	8006d4e <USB_SetTurnaroundTime+0xda>
    {
      /* hclk Clock Range between 27.7-32 MHz */
      UsbTrd = 0x7U;
 8006d48:	2307      	movs	r3, #7
 8006d4a:	617b      	str	r3, [r7, #20]
 8006d4c:	e00a      	b.n	8006d64 <USB_SetTurnaroundTime+0xf0>
    }
    else /* if(hclk >= 32000000) */
    {
      /* hclk Clock Range between 32-200 MHz */
      UsbTrd = 0x6U;
 8006d4e:	2306      	movs	r3, #6
 8006d50:	617b      	str	r3, [r7, #20]
 8006d52:	e007      	b.n	8006d64 <USB_SetTurnaroundTime+0xf0>
    }
  }
  else if (speed == USBD_HS_SPEED)
 8006d54:	79fb      	ldrb	r3, [r7, #7]
 8006d56:	2b00      	cmp	r3, #0
 8006d58:	d102      	bne.n	8006d60 <USB_SetTurnaroundTime+0xec>
  {
    UsbTrd = USBD_HS_TRDT_VALUE;
 8006d5a:	2309      	movs	r3, #9
 8006d5c:	617b      	str	r3, [r7, #20]
 8006d5e:	e001      	b.n	8006d64 <USB_SetTurnaroundTime+0xf0>
  }
  else
  {
    UsbTrd = USBD_DEFAULT_TRDT_VALUE;
 8006d60:	2309      	movs	r3, #9
 8006d62:	617b      	str	r3, [r7, #20]
  }

  USBx->GUSBCFG &= ~USB_OTG_GUSBCFG_TRDT;
 8006d64:	68fb      	ldr	r3, [r7, #12]
 8006d66:	68db      	ldr	r3, [r3, #12]
 8006d68:	f423 5270 	bic.w	r2, r3, #15360	; 0x3c00
 8006d6c:	68fb      	ldr	r3, [r7, #12]
 8006d6e:	60da      	str	r2, [r3, #12]
  USBx->GUSBCFG |= (uint32_t)((UsbTrd << 10) & USB_OTG_GUSBCFG_TRDT);
 8006d70:	68fb      	ldr	r3, [r7, #12]
 8006d72:	68da      	ldr	r2, [r3, #12]
 8006d74:	697b      	ldr	r3, [r7, #20]
 8006d76:	029b      	lsls	r3, r3, #10
 8006d78:	f403 5370 	and.w	r3, r3, #15360	; 0x3c00
 8006d7c:	431a      	orrs	r2, r3
 8006d7e:	68fb      	ldr	r3, [r7, #12]
 8006d80:	60da      	str	r2, [r3, #12]

  return HAL_OK;
 8006d82:	2300      	movs	r3, #0
}
 8006d84:	4618      	mov	r0, r3
 8006d86:	371c      	adds	r7, #28
 8006d88:	46bd      	mov	sp, r7
 8006d8a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006d8e:	4770      	bx	lr
 8006d90:	00d8acbf 	.word	0x00d8acbf
 8006d94:	00e4e1c0 	.word	0x00e4e1c0
 8006d98:	00f42400 	.word	0x00f42400
 8006d9c:	01067380 	.word	0x01067380
 8006da0:	011a499f 	.word	0x011a499f
 8006da4:	01312cff 	.word	0x01312cff
 8006da8:	014ca43f 	.word	0x014ca43f
 8006dac:	016e3600 	.word	0x016e3600
 8006db0:	01a6ab1f 	.word	0x01a6ab1f
 8006db4:	01e84800 	.word	0x01e84800

08006db8 <USB_EnableGlobalInt>:
  *         Enables the controller's Global Int in the AHB Config reg
  * @param  USBx  Selected device
  * @retval HAL status
  */
HAL_StatusTypeDef USB_EnableGlobalInt(USB_OTG_GlobalTypeDef *USBx)
{
 8006db8:	b480      	push	{r7}
 8006dba:	b083      	sub	sp, #12
 8006dbc:	af00      	add	r7, sp, #0
 8006dbe:	6078      	str	r0, [r7, #4]
  USBx->GAHBCFG |= USB_OTG_GAHBCFG_GINT;
 8006dc0:	687b      	ldr	r3, [r7, #4]
 8006dc2:	689b      	ldr	r3, [r3, #8]
 8006dc4:	f043 0201 	orr.w	r2, r3, #1
 8006dc8:	687b      	ldr	r3, [r7, #4]
 8006dca:	609a      	str	r2, [r3, #8]
  return HAL_OK;
 8006dcc:	2300      	movs	r3, #0
}
 8006dce:	4618      	mov	r0, r3
 8006dd0:	370c      	adds	r7, #12
 8006dd2:	46bd      	mov	sp, r7
 8006dd4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006dd8:	4770      	bx	lr

08006dda <USB_DisableGlobalInt>:
  *         Disable the controller's Global Int in the AHB Config reg
  * @param  USBx  Selected device
  * @retval HAL status
  */
HAL_StatusTypeDef USB_DisableGlobalInt(USB_OTG_GlobalTypeDef *USBx)
{
 8006dda:	b480      	push	{r7}
 8006ddc:	b083      	sub	sp, #12
 8006dde:	af00      	add	r7, sp, #0
 8006de0:	6078      	str	r0, [r7, #4]
  USBx->GAHBCFG &= ~USB_OTG_GAHBCFG_GINT;
 8006de2:	687b      	ldr	r3, [r7, #4]
 8006de4:	689b      	ldr	r3, [r3, #8]
 8006de6:	f023 0201 	bic.w	r2, r3, #1
 8006dea:	687b      	ldr	r3, [r7, #4]
 8006dec:	609a      	str	r2, [r3, #8]
  return HAL_OK;
 8006dee:	2300      	movs	r3, #0
}
 8006df0:	4618      	mov	r0, r3
 8006df2:	370c      	adds	r7, #12
 8006df4:	46bd      	mov	sp, r7
 8006df6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006dfa:	4770      	bx	lr

08006dfc <USB_SetCurrentMode>:
  *            @arg USB_DEVICE_MODE Peripheral mode
  *            @arg USB_HOST_MODE Host mode
  * @retval HAL status
  */
HAL_StatusTypeDef USB_SetCurrentMode(USB_OTG_GlobalTypeDef *USBx, USB_OTG_ModeTypeDef mode)
{
 8006dfc:	b580      	push	{r7, lr}
 8006dfe:	b084      	sub	sp, #16
 8006e00:	af00      	add	r7, sp, #0
 8006e02:	6078      	str	r0, [r7, #4]
 8006e04:	460b      	mov	r3, r1
 8006e06:	70fb      	strb	r3, [r7, #3]
  uint32_t ms = 0U;
 8006e08:	2300      	movs	r3, #0
 8006e0a:	60fb      	str	r3, [r7, #12]

  USBx->GUSBCFG &= ~(USB_OTG_GUSBCFG_FHMOD | USB_OTG_GUSBCFG_FDMOD);
 8006e0c:	687b      	ldr	r3, [r7, #4]
 8006e0e:	68db      	ldr	r3, [r3, #12]
 8006e10:	f023 42c0 	bic.w	r2, r3, #1610612736	; 0x60000000
 8006e14:	687b      	ldr	r3, [r7, #4]
 8006e16:	60da      	str	r2, [r3, #12]

  if (mode == USB_HOST_MODE)
 8006e18:	78fb      	ldrb	r3, [r7, #3]
 8006e1a:	2b01      	cmp	r3, #1
 8006e1c:	d115      	bne.n	8006e4a <USB_SetCurrentMode+0x4e>
  {
    USBx->GUSBCFG |= USB_OTG_GUSBCFG_FHMOD;
 8006e1e:	687b      	ldr	r3, [r7, #4]
 8006e20:	68db      	ldr	r3, [r3, #12]
 8006e22:	f043 5200 	orr.w	r2, r3, #536870912	; 0x20000000
 8006e26:	687b      	ldr	r3, [r7, #4]
 8006e28:	60da      	str	r2, [r3, #12]

    do
    {
      HAL_Delay(10U);
 8006e2a:	200a      	movs	r0, #10
 8006e2c:	f7fb faee 	bl	800240c <HAL_Delay>
      ms += 10U;
 8006e30:	68fb      	ldr	r3, [r7, #12]
 8006e32:	330a      	adds	r3, #10
 8006e34:	60fb      	str	r3, [r7, #12]
    } while ((USB_GetMode(USBx) != (uint32_t)USB_HOST_MODE) && (ms < HAL_USB_CURRENT_MODE_MAX_DELAY_MS));
 8006e36:	6878      	ldr	r0, [r7, #4]
 8006e38:	f001 f939 	bl	80080ae <USB_GetMode>
 8006e3c:	4603      	mov	r3, r0
 8006e3e:	2b01      	cmp	r3, #1
 8006e40:	d01e      	beq.n	8006e80 <USB_SetCurrentMode+0x84>
 8006e42:	68fb      	ldr	r3, [r7, #12]
 8006e44:	2bc7      	cmp	r3, #199	; 0xc7
 8006e46:	d9f0      	bls.n	8006e2a <USB_SetCurrentMode+0x2e>
 8006e48:	e01a      	b.n	8006e80 <USB_SetCurrentMode+0x84>
  }
  else if (mode == USB_DEVICE_MODE)
 8006e4a:	78fb      	ldrb	r3, [r7, #3]
 8006e4c:	2b00      	cmp	r3, #0
 8006e4e:	d115      	bne.n	8006e7c <USB_SetCurrentMode+0x80>
  {
    USBx->GUSBCFG |= USB_OTG_GUSBCFG_FDMOD;
 8006e50:	687b      	ldr	r3, [r7, #4]
 8006e52:	68db      	ldr	r3, [r3, #12]
 8006e54:	f043 4280 	orr.w	r2, r3, #1073741824	; 0x40000000
 8006e58:	687b      	ldr	r3, [r7, #4]
 8006e5a:	60da      	str	r2, [r3, #12]

    do
    {
      HAL_Delay(10U);
 8006e5c:	200a      	movs	r0, #10
 8006e5e:	f7fb fad5 	bl	800240c <HAL_Delay>
      ms += 10U;
 8006e62:	68fb      	ldr	r3, [r7, #12]
 8006e64:	330a      	adds	r3, #10
 8006e66:	60fb      	str	r3, [r7, #12]
    } while ((USB_GetMode(USBx) != (uint32_t)USB_DEVICE_MODE) && (ms < HAL_USB_CURRENT_MODE_MAX_DELAY_MS));
 8006e68:	6878      	ldr	r0, [r7, #4]
 8006e6a:	f001 f920 	bl	80080ae <USB_GetMode>
 8006e6e:	4603      	mov	r3, r0
 8006e70:	2b00      	cmp	r3, #0
 8006e72:	d005      	beq.n	8006e80 <USB_SetCurrentMode+0x84>
 8006e74:	68fb      	ldr	r3, [r7, #12]
 8006e76:	2bc7      	cmp	r3, #199	; 0xc7
 8006e78:	d9f0      	bls.n	8006e5c <USB_SetCurrentMode+0x60>
 8006e7a:	e001      	b.n	8006e80 <USB_SetCurrentMode+0x84>
  }
  else
  {
    return HAL_ERROR;
 8006e7c:	2301      	movs	r3, #1
 8006e7e:	e005      	b.n	8006e8c <USB_SetCurrentMode+0x90>
  }

  if (ms == HAL_USB_CURRENT_MODE_MAX_DELAY_MS)
 8006e80:	68fb      	ldr	r3, [r7, #12]
 8006e82:	2bc8      	cmp	r3, #200	; 0xc8
 8006e84:	d101      	bne.n	8006e8a <USB_SetCurrentMode+0x8e>
  {
    return HAL_ERROR;
 8006e86:	2301      	movs	r3, #1
 8006e88:	e000      	b.n	8006e8c <USB_SetCurrentMode+0x90>
  }

  return HAL_OK;
 8006e8a:	2300      	movs	r3, #0
}
 8006e8c:	4618      	mov	r0, r3
 8006e8e:	3710      	adds	r7, #16
 8006e90:	46bd      	mov	sp, r7
 8006e92:	bd80      	pop	{r7, pc}

08006e94 <USB_DevInit>:
  * @param  cfg   pointer to a USB_OTG_CfgTypeDef structure that contains
  *         the configuration information for the specified USBx peripheral.
  * @retval HAL status
  */
HAL_StatusTypeDef USB_DevInit(USB_OTG_GlobalTypeDef *USBx, USB_OTG_CfgTypeDef cfg)
{
 8006e94:	b084      	sub	sp, #16
 8006e96:	b580      	push	{r7, lr}
 8006e98:	b086      	sub	sp, #24
 8006e9a:	af00      	add	r7, sp, #0
 8006e9c:	6078      	str	r0, [r7, #4]
 8006e9e:	f107 0024 	add.w	r0, r7, #36	; 0x24
 8006ea2:	e880 000e 	stmia.w	r0, {r1, r2, r3}
  HAL_StatusTypeDef ret = HAL_OK;
 8006ea6:	2300      	movs	r3, #0
 8006ea8:	75fb      	strb	r3, [r7, #23]
  uint32_t USBx_BASE = (uint32_t)USBx;
 8006eaa:	687b      	ldr	r3, [r7, #4]
 8006eac:	60fb      	str	r3, [r7, #12]
  uint32_t i;

  for (i = 0U; i < 15U; i++)
 8006eae:	2300      	movs	r3, #0
 8006eb0:	613b      	str	r3, [r7, #16]
 8006eb2:	e009      	b.n	8006ec8 <USB_DevInit+0x34>
  {
    USBx->DIEPTXF[i] = 0U;
 8006eb4:	687a      	ldr	r2, [r7, #4]
 8006eb6:	693b      	ldr	r3, [r7, #16]
 8006eb8:	3340      	adds	r3, #64	; 0x40
 8006eba:	009b      	lsls	r3, r3, #2
 8006ebc:	4413      	add	r3, r2
 8006ebe:	2200      	movs	r2, #0
 8006ec0:	605a      	str	r2, [r3, #4]
  for (i = 0U; i < 15U; i++)
 8006ec2:	693b      	ldr	r3, [r7, #16]
 8006ec4:	3301      	adds	r3, #1
 8006ec6:	613b      	str	r3, [r7, #16]
 8006ec8:	693b      	ldr	r3, [r7, #16]
 8006eca:	2b0e      	cmp	r3, #14
 8006ecc:	d9f2      	bls.n	8006eb4 <USB_DevInit+0x20>
    /* Enable HW VBUS sensing */
    USBx->GCCFG |= USB_OTG_GCCFG_VBDEN;
  }
#else
  /* VBUS Sensing setup */
  if (cfg.vbus_sensing_enable == 0U)
 8006ece:	f897 302e 	ldrb.w	r3, [r7, #46]	; 0x2e
 8006ed2:	2b00      	cmp	r3, #0
 8006ed4:	d11c      	bne.n	8006f10 <USB_DevInit+0x7c>
  {
    /*
     * Disable HW VBUS sensing. VBUS is internally considered to be always
     * at VBUS-Valid level (5V).
     */
    USBx_DEVICE->DCTL |= USB_OTG_DCTL_SDIS;
 8006ed6:	68fb      	ldr	r3, [r7, #12]
 8006ed8:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 8006edc:	685b      	ldr	r3, [r3, #4]
 8006ede:	68fa      	ldr	r2, [r7, #12]
 8006ee0:	f502 6200 	add.w	r2, r2, #2048	; 0x800
 8006ee4:	f043 0302 	orr.w	r3, r3, #2
 8006ee8:	6053      	str	r3, [r2, #4]
    USBx->GCCFG |= USB_OTG_GCCFG_NOVBUSSENS;
 8006eea:	687b      	ldr	r3, [r7, #4]
 8006eec:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8006eee:	f443 1200 	orr.w	r2, r3, #2097152	; 0x200000
 8006ef2:	687b      	ldr	r3, [r7, #4]
 8006ef4:	639a      	str	r2, [r3, #56]	; 0x38
    USBx->GCCFG &= ~USB_OTG_GCCFG_VBUSBSEN;
 8006ef6:	687b      	ldr	r3, [r7, #4]
 8006ef8:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8006efa:	f423 2200 	bic.w	r2, r3, #524288	; 0x80000
 8006efe:	687b      	ldr	r3, [r7, #4]
 8006f00:	639a      	str	r2, [r3, #56]	; 0x38
    USBx->GCCFG &= ~USB_OTG_GCCFG_VBUSASEN;
 8006f02:	687b      	ldr	r3, [r7, #4]
 8006f04:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8006f06:	f423 2280 	bic.w	r2, r3, #262144	; 0x40000
 8006f0a:	687b      	ldr	r3, [r7, #4]
 8006f0c:	639a      	str	r2, [r3, #56]	; 0x38
 8006f0e:	e00b      	b.n	8006f28 <USB_DevInit+0x94>
  }
  else
  {
    /* Enable HW VBUS sensing */
    USBx->GCCFG &= ~USB_OTG_GCCFG_NOVBUSSENS;
 8006f10:	687b      	ldr	r3, [r7, #4]
 8006f12:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8006f14:	f423 1200 	bic.w	r2, r3, #2097152	; 0x200000
 8006f18:	687b      	ldr	r3, [r7, #4]
 8006f1a:	639a      	str	r2, [r3, #56]	; 0x38
    USBx->GCCFG |= USB_OTG_GCCFG_VBUSBSEN;
 8006f1c:	687b      	ldr	r3, [r7, #4]
 8006f1e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8006f20:	f443 2200 	orr.w	r2, r3, #524288	; 0x80000
 8006f24:	687b      	ldr	r3, [r7, #4]
 8006f26:	639a      	str	r2, [r3, #56]	; 0x38
#endif /* defined(STM32F446xx) || defined(STM32F469xx) || defined(STM32F479xx) || defined(STM32F412Zx) ||
          defined(STM32F412Vx) || defined(STM32F412Rx) || defined(STM32F412Cx) || defined(STM32F413xx) ||
          defined(STM32F423xx) */

  /* Restart the Phy Clock */
  USBx_PCGCCTL = 0U;
 8006f28:	68fb      	ldr	r3, [r7, #12]
 8006f2a:	f503 6360 	add.w	r3, r3, #3584	; 0xe00
 8006f2e:	461a      	mov	r2, r3
 8006f30:	2300      	movs	r3, #0
 8006f32:	6013      	str	r3, [r2, #0]

  if (cfg.phy_itface == USB_OTG_ULPI_PHY)
 8006f34:	f897 3029 	ldrb.w	r3, [r7, #41]	; 0x29
 8006f38:	2b01      	cmp	r3, #1
 8006f3a:	d10d      	bne.n	8006f58 <USB_DevInit+0xc4>
  {
    if (cfg.speed == USBD_HS_SPEED)
 8006f3c:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
 8006f40:	2b00      	cmp	r3, #0
 8006f42:	d104      	bne.n	8006f4e <USB_DevInit+0xba>
    {
      /* Set Core speed to High speed mode */
      (void)USB_SetDevSpeed(USBx, USB_OTG_SPEED_HIGH);
 8006f44:	2100      	movs	r1, #0
 8006f46:	6878      	ldr	r0, [r7, #4]
 8006f48:	f000 f968 	bl	800721c <USB_SetDevSpeed>
 8006f4c:	e008      	b.n	8006f60 <USB_DevInit+0xcc>
    }
    else
    {
      /* Set Core speed to Full speed mode */
      (void)USB_SetDevSpeed(USBx, USB_OTG_SPEED_HIGH_IN_FULL);
 8006f4e:	2101      	movs	r1, #1
 8006f50:	6878      	ldr	r0, [r7, #4]
 8006f52:	f000 f963 	bl	800721c <USB_SetDevSpeed>
 8006f56:	e003      	b.n	8006f60 <USB_DevInit+0xcc>
    }
  }
  else
  {
    /* Set Core speed to Full speed mode */
    (void)USB_SetDevSpeed(USBx, USB_OTG_SPEED_FULL);
 8006f58:	2103      	movs	r1, #3
 8006f5a:	6878      	ldr	r0, [r7, #4]
 8006f5c:	f000 f95e 	bl	800721c <USB_SetDevSpeed>
  }

  /* Flush the FIFOs */
  if (USB_FlushTxFifo(USBx, 0x10U) != HAL_OK) /* all Tx FIFOs */
 8006f60:	2110      	movs	r1, #16
 8006f62:	6878      	ldr	r0, [r7, #4]
 8006f64:	f000 f8fa 	bl	800715c <USB_FlushTxFifo>
 8006f68:	4603      	mov	r3, r0
 8006f6a:	2b00      	cmp	r3, #0
 8006f6c:	d001      	beq.n	8006f72 <USB_DevInit+0xde>
  {
    ret = HAL_ERROR;
 8006f6e:	2301      	movs	r3, #1
 8006f70:	75fb      	strb	r3, [r7, #23]
  }

  if (USB_FlushRxFifo(USBx) != HAL_OK)
 8006f72:	6878      	ldr	r0, [r7, #4]
 8006f74:	f000 f924 	bl	80071c0 <USB_FlushRxFifo>
 8006f78:	4603      	mov	r3, r0
 8006f7a:	2b00      	cmp	r3, #0
 8006f7c:	d001      	beq.n	8006f82 <USB_DevInit+0xee>
  {
    ret = HAL_ERROR;
 8006f7e:	2301      	movs	r3, #1
 8006f80:	75fb      	strb	r3, [r7, #23]
  }

  /* Clear all pending Device Interrupts */
  USBx_DEVICE->DIEPMSK = 0U;
 8006f82:	68fb      	ldr	r3, [r7, #12]
 8006f84:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 8006f88:	461a      	mov	r2, r3
 8006f8a:	2300      	movs	r3, #0
 8006f8c:	6113      	str	r3, [r2, #16]
  USBx_DEVICE->DOEPMSK = 0U;
 8006f8e:	68fb      	ldr	r3, [r7, #12]
 8006f90:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 8006f94:	461a      	mov	r2, r3
 8006f96:	2300      	movs	r3, #0
 8006f98:	6153      	str	r3, [r2, #20]
  USBx_DEVICE->DAINTMSK = 0U;
 8006f9a:	68fb      	ldr	r3, [r7, #12]
 8006f9c:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 8006fa0:	461a      	mov	r2, r3
 8006fa2:	2300      	movs	r3, #0
 8006fa4:	61d3      	str	r3, [r2, #28]

  for (i = 0U; i < cfg.dev_endpoints; i++)
 8006fa6:	2300      	movs	r3, #0
 8006fa8:	613b      	str	r3, [r7, #16]
 8006faa:	e043      	b.n	8007034 <USB_DevInit+0x1a0>
  {
    if ((USBx_INEP(i)->DIEPCTL & USB_OTG_DIEPCTL_EPENA) == USB_OTG_DIEPCTL_EPENA)
 8006fac:	693b      	ldr	r3, [r7, #16]
 8006fae:	015a      	lsls	r2, r3, #5
 8006fb0:	68fb      	ldr	r3, [r7, #12]
 8006fb2:	4413      	add	r3, r2
 8006fb4:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 8006fb8:	681b      	ldr	r3, [r3, #0]
 8006fba:	f003 4300 	and.w	r3, r3, #2147483648	; 0x80000000
 8006fbe:	f1b3 4f00 	cmp.w	r3, #2147483648	; 0x80000000
 8006fc2:	d118      	bne.n	8006ff6 <USB_DevInit+0x162>
    {
      if (i == 0U)
 8006fc4:	693b      	ldr	r3, [r7, #16]
 8006fc6:	2b00      	cmp	r3, #0
 8006fc8:	d10a      	bne.n	8006fe0 <USB_DevInit+0x14c>
      {
        USBx_INEP(i)->DIEPCTL = USB_OTG_DIEPCTL_SNAK;
 8006fca:	693b      	ldr	r3, [r7, #16]
 8006fcc:	015a      	lsls	r2, r3, #5
 8006fce:	68fb      	ldr	r3, [r7, #12]
 8006fd0:	4413      	add	r3, r2
 8006fd2:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 8006fd6:	461a      	mov	r2, r3
 8006fd8:	f04f 6300 	mov.w	r3, #134217728	; 0x8000000
 8006fdc:	6013      	str	r3, [r2, #0]
 8006fde:	e013      	b.n	8007008 <USB_DevInit+0x174>
      }
      else
      {
        USBx_INEP(i)->DIEPCTL = USB_OTG_DIEPCTL_EPDIS | USB_OTG_DIEPCTL_SNAK;
 8006fe0:	693b      	ldr	r3, [r7, #16]
 8006fe2:	015a      	lsls	r2, r3, #5
 8006fe4:	68fb      	ldr	r3, [r7, #12]
 8006fe6:	4413      	add	r3, r2
 8006fe8:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 8006fec:	461a      	mov	r2, r3
 8006fee:	f04f 4390 	mov.w	r3, #1207959552	; 0x48000000
 8006ff2:	6013      	str	r3, [r2, #0]
 8006ff4:	e008      	b.n	8007008 <USB_DevInit+0x174>
      }
    }
    else
    {
      USBx_INEP(i)->DIEPCTL = 0U;
 8006ff6:	693b      	ldr	r3, [r7, #16]
 8006ff8:	015a      	lsls	r2, r3, #5
 8006ffa:	68fb      	ldr	r3, [r7, #12]
 8006ffc:	4413      	add	r3, r2
 8006ffe:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 8007002:	461a      	mov	r2, r3
 8007004:	2300      	movs	r3, #0
 8007006:	6013      	str	r3, [r2, #0]
    }

    USBx_INEP(i)->DIEPTSIZ = 0U;
 8007008:	693b      	ldr	r3, [r7, #16]
 800700a:	015a      	lsls	r2, r3, #5
 800700c:	68fb      	ldr	r3, [r7, #12]
 800700e:	4413      	add	r3, r2
 8007010:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 8007014:	461a      	mov	r2, r3
 8007016:	2300      	movs	r3, #0
 8007018:	6113      	str	r3, [r2, #16]
    USBx_INEP(i)->DIEPINT  = 0xFB7FU;
 800701a:	693b      	ldr	r3, [r7, #16]
 800701c:	015a      	lsls	r2, r3, #5
 800701e:	68fb      	ldr	r3, [r7, #12]
 8007020:	4413      	add	r3, r2
 8007022:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 8007026:	461a      	mov	r2, r3
 8007028:	f64f 337f 	movw	r3, #64383	; 0xfb7f
 800702c:	6093      	str	r3, [r2, #8]
  for (i = 0U; i < cfg.dev_endpoints; i++)
 800702e:	693b      	ldr	r3, [r7, #16]
 8007030:	3301      	adds	r3, #1
 8007032:	613b      	str	r3, [r7, #16]
 8007034:	f897 3024 	ldrb.w	r3, [r7, #36]	; 0x24
 8007038:	461a      	mov	r2, r3
 800703a:	693b      	ldr	r3, [r7, #16]
 800703c:	4293      	cmp	r3, r2
 800703e:	d3b5      	bcc.n	8006fac <USB_DevInit+0x118>
  }

  for (i = 0U; i < cfg.dev_endpoints; i++)
 8007040:	2300      	movs	r3, #0
 8007042:	613b      	str	r3, [r7, #16]
 8007044:	e043      	b.n	80070ce <USB_DevInit+0x23a>
  {
    if ((USBx_OUTEP(i)->DOEPCTL & USB_OTG_DOEPCTL_EPENA) == USB_OTG_DOEPCTL_EPENA)
 8007046:	693b      	ldr	r3, [r7, #16]
 8007048:	015a      	lsls	r2, r3, #5
 800704a:	68fb      	ldr	r3, [r7, #12]
 800704c:	4413      	add	r3, r2
 800704e:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 8007052:	681b      	ldr	r3, [r3, #0]
 8007054:	f003 4300 	and.w	r3, r3, #2147483648	; 0x80000000
 8007058:	f1b3 4f00 	cmp.w	r3, #2147483648	; 0x80000000
 800705c:	d118      	bne.n	8007090 <USB_DevInit+0x1fc>
    {
      if (i == 0U)
 800705e:	693b      	ldr	r3, [r7, #16]
 8007060:	2b00      	cmp	r3, #0
 8007062:	d10a      	bne.n	800707a <USB_DevInit+0x1e6>
      {
        USBx_OUTEP(i)->DOEPCTL = USB_OTG_DOEPCTL_SNAK;
 8007064:	693b      	ldr	r3, [r7, #16]
 8007066:	015a      	lsls	r2, r3, #5
 8007068:	68fb      	ldr	r3, [r7, #12]
 800706a:	4413      	add	r3, r2
 800706c:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 8007070:	461a      	mov	r2, r3
 8007072:	f04f 6300 	mov.w	r3, #134217728	; 0x8000000
 8007076:	6013      	str	r3, [r2, #0]
 8007078:	e013      	b.n	80070a2 <USB_DevInit+0x20e>
      }
      else
      {
        USBx_OUTEP(i)->DOEPCTL = USB_OTG_DOEPCTL_EPDIS | USB_OTG_DOEPCTL_SNAK;
 800707a:	693b      	ldr	r3, [r7, #16]
 800707c:	015a      	lsls	r2, r3, #5
 800707e:	68fb      	ldr	r3, [r7, #12]
 8007080:	4413      	add	r3, r2
 8007082:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 8007086:	461a      	mov	r2, r3
 8007088:	f04f 4390 	mov.w	r3, #1207959552	; 0x48000000
 800708c:	6013      	str	r3, [r2, #0]
 800708e:	e008      	b.n	80070a2 <USB_DevInit+0x20e>
      }
    }
    else
    {
      USBx_OUTEP(i)->DOEPCTL = 0U;
 8007090:	693b      	ldr	r3, [r7, #16]
 8007092:	015a      	lsls	r2, r3, #5
 8007094:	68fb      	ldr	r3, [r7, #12]
 8007096:	4413      	add	r3, r2
 8007098:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 800709c:	461a      	mov	r2, r3
 800709e:	2300      	movs	r3, #0
 80070a0:	6013      	str	r3, [r2, #0]
    }

    USBx_OUTEP(i)->DOEPTSIZ = 0U;
 80070a2:	693b      	ldr	r3, [r7, #16]
 80070a4:	015a      	lsls	r2, r3, #5
 80070a6:	68fb      	ldr	r3, [r7, #12]
 80070a8:	4413      	add	r3, r2
 80070aa:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 80070ae:	461a      	mov	r2, r3
 80070b0:	2300      	movs	r3, #0
 80070b2:	6113      	str	r3, [r2, #16]
    USBx_OUTEP(i)->DOEPINT  = 0xFB7FU;
 80070b4:	693b      	ldr	r3, [r7, #16]
 80070b6:	015a      	lsls	r2, r3, #5
 80070b8:	68fb      	ldr	r3, [r7, #12]
 80070ba:	4413      	add	r3, r2
 80070bc:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 80070c0:	461a      	mov	r2, r3
 80070c2:	f64f 337f 	movw	r3, #64383	; 0xfb7f
 80070c6:	6093      	str	r3, [r2, #8]
  for (i = 0U; i < cfg.dev_endpoints; i++)
 80070c8:	693b      	ldr	r3, [r7, #16]
 80070ca:	3301      	adds	r3, #1
 80070cc:	613b      	str	r3, [r7, #16]
 80070ce:	f897 3024 	ldrb.w	r3, [r7, #36]	; 0x24
 80070d2:	461a      	mov	r2, r3
 80070d4:	693b      	ldr	r3, [r7, #16]
 80070d6:	4293      	cmp	r3, r2
 80070d8:	d3b5      	bcc.n	8007046 <USB_DevInit+0x1b2>
  }

  USBx_DEVICE->DIEPMSK &= ~(USB_OTG_DIEPMSK_TXFURM);
 80070da:	68fb      	ldr	r3, [r7, #12]
 80070dc:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 80070e0:	691b      	ldr	r3, [r3, #16]
 80070e2:	68fa      	ldr	r2, [r7, #12]
 80070e4:	f502 6200 	add.w	r2, r2, #2048	; 0x800
 80070e8:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 80070ec:	6113      	str	r3, [r2, #16]

  /* Disable all interrupts. */
  USBx->GINTMSK = 0U;
 80070ee:	687b      	ldr	r3, [r7, #4]
 80070f0:	2200      	movs	r2, #0
 80070f2:	619a      	str	r2, [r3, #24]

  /* Clear any pending interrupts */
  USBx->GINTSTS = 0xBFFFFFFFU;
 80070f4:	687b      	ldr	r3, [r7, #4]
 80070f6:	f06f 4280 	mvn.w	r2, #1073741824	; 0x40000000
 80070fa:	615a      	str	r2, [r3, #20]

  /* Enable the common interrupts */
  if (cfg.dma_enable == 0U)
 80070fc:	f897 3026 	ldrb.w	r3, [r7, #38]	; 0x26
 8007100:	2b00      	cmp	r3, #0
 8007102:	d105      	bne.n	8007110 <USB_DevInit+0x27c>
  {
    USBx->GINTMSK |= USB_OTG_GINTMSK_RXFLVLM;
 8007104:	687b      	ldr	r3, [r7, #4]
 8007106:	699b      	ldr	r3, [r3, #24]
 8007108:	f043 0210 	orr.w	r2, r3, #16
 800710c:	687b      	ldr	r3, [r7, #4]
 800710e:	619a      	str	r2, [r3, #24]
  }

  /* Enable interrupts matching to the Device mode ONLY */
  USBx->GINTMSK |= USB_OTG_GINTMSK_USBSUSPM | USB_OTG_GINTMSK_USBRST |
 8007110:	687b      	ldr	r3, [r7, #4]
 8007112:	699a      	ldr	r2, [r3, #24]
 8007114:	4b10      	ldr	r3, [pc, #64]	; (8007158 <USB_DevInit+0x2c4>)
 8007116:	4313      	orrs	r3, r2
 8007118:	687a      	ldr	r2, [r7, #4]
 800711a:	6193      	str	r3, [r2, #24]
                   USB_OTG_GINTMSK_ENUMDNEM | USB_OTG_GINTMSK_IEPINT |
                   USB_OTG_GINTMSK_OEPINT   | USB_OTG_GINTMSK_IISOIXFRM |
                   USB_OTG_GINTMSK_PXFRM_IISOOXFRM | USB_OTG_GINTMSK_WUIM;

  if (cfg.Sof_enable != 0U)
 800711c:	f897 302a 	ldrb.w	r3, [r7, #42]	; 0x2a
 8007120:	2b00      	cmp	r3, #0
 8007122:	d005      	beq.n	8007130 <USB_DevInit+0x29c>
  {
    USBx->GINTMSK |= USB_OTG_GINTMSK_SOFM;
 8007124:	687b      	ldr	r3, [r7, #4]
 8007126:	699b      	ldr	r3, [r3, #24]
 8007128:	f043 0208 	orr.w	r2, r3, #8
 800712c:	687b      	ldr	r3, [r7, #4]
 800712e:	619a      	str	r2, [r3, #24]
  }

  if (cfg.vbus_sensing_enable == 1U)
 8007130:	f897 302e 	ldrb.w	r3, [r7, #46]	; 0x2e
 8007134:	2b01      	cmp	r3, #1
 8007136:	d107      	bne.n	8007148 <USB_DevInit+0x2b4>
  {
    USBx->GINTMSK |= (USB_OTG_GINTMSK_SRQIM | USB_OTG_GINTMSK_OTGINT);
 8007138:	687b      	ldr	r3, [r7, #4]
 800713a:	699b      	ldr	r3, [r3, #24]
 800713c:	f043 4380 	orr.w	r3, r3, #1073741824	; 0x40000000
 8007140:	f043 0304 	orr.w	r3, r3, #4
 8007144:	687a      	ldr	r2, [r7, #4]
 8007146:	6193      	str	r3, [r2, #24]
  }

  return ret;
 8007148:	7dfb      	ldrb	r3, [r7, #23]
}
 800714a:	4618      	mov	r0, r3
 800714c:	3718      	adds	r7, #24
 800714e:	46bd      	mov	sp, r7
 8007150:	e8bd 4080 	ldmia.w	sp!, {r7, lr}
 8007154:	b004      	add	sp, #16
 8007156:	4770      	bx	lr
 8007158:	803c3800 	.word	0x803c3800

0800715c <USB_FlushTxFifo>:
  *         This parameter can be a value from 1 to 15
            15 means Flush all Tx FIFOs
  * @retval HAL status
  */
HAL_StatusTypeDef USB_FlushTxFifo(USB_OTG_GlobalTypeDef *USBx, uint32_t num)
{
 800715c:	b480      	push	{r7}
 800715e:	b085      	sub	sp, #20
 8007160:	af00      	add	r7, sp, #0
 8007162:	6078      	str	r0, [r7, #4]
 8007164:	6039      	str	r1, [r7, #0]
  __IO uint32_t count = 0U;
 8007166:	2300      	movs	r3, #0
 8007168:	60fb      	str	r3, [r7, #12]

  /* Wait for AHB master IDLE state. */
  do
  {
    count++;
 800716a:	68fb      	ldr	r3, [r7, #12]
 800716c:	3301      	adds	r3, #1
 800716e:	60fb      	str	r3, [r7, #12]

    if (count > HAL_USB_TIMEOUT)
 8007170:	68fb      	ldr	r3, [r7, #12]
 8007172:	f1b3 6f70 	cmp.w	r3, #251658240	; 0xf000000
 8007176:	d901      	bls.n	800717c <USB_FlushTxFifo+0x20>
    {
      return HAL_TIMEOUT;
 8007178:	2303      	movs	r3, #3
 800717a:	e01b      	b.n	80071b4 <USB_FlushTxFifo+0x58>
    }
  } while ((USBx->GRSTCTL & USB_OTG_GRSTCTL_AHBIDL) == 0U);
 800717c:	687b      	ldr	r3, [r7, #4]
 800717e:	691b      	ldr	r3, [r3, #16]
 8007180:	2b00      	cmp	r3, #0
 8007182:	daf2      	bge.n	800716a <USB_FlushTxFifo+0xe>

  /* Flush TX Fifo */
  count = 0U;
 8007184:	2300      	movs	r3, #0
 8007186:	60fb      	str	r3, [r7, #12]
  USBx->GRSTCTL = (USB_OTG_GRSTCTL_TXFFLSH | (num << 6));
 8007188:	683b      	ldr	r3, [r7, #0]
 800718a:	019b      	lsls	r3, r3, #6
 800718c:	f043 0220 	orr.w	r2, r3, #32
 8007190:	687b      	ldr	r3, [r7, #4]
 8007192:	611a      	str	r2, [r3, #16]

  do
  {
    count++;
 8007194:	68fb      	ldr	r3, [r7, #12]
 8007196:	3301      	adds	r3, #1
 8007198:	60fb      	str	r3, [r7, #12]

    if (count > HAL_USB_TIMEOUT)
 800719a:	68fb      	ldr	r3, [r7, #12]
 800719c:	f1b3 6f70 	cmp.w	r3, #251658240	; 0xf000000
 80071a0:	d901      	bls.n	80071a6 <USB_FlushTxFifo+0x4a>
    {
      return HAL_TIMEOUT;
 80071a2:	2303      	movs	r3, #3
 80071a4:	e006      	b.n	80071b4 <USB_FlushTxFifo+0x58>
    }
  } while ((USBx->GRSTCTL & USB_OTG_GRSTCTL_TXFFLSH) == USB_OTG_GRSTCTL_TXFFLSH);
 80071a6:	687b      	ldr	r3, [r7, #4]
 80071a8:	691b      	ldr	r3, [r3, #16]
 80071aa:	f003 0320 	and.w	r3, r3, #32
 80071ae:	2b20      	cmp	r3, #32
 80071b0:	d0f0      	beq.n	8007194 <USB_FlushTxFifo+0x38>

  return HAL_OK;
 80071b2:	2300      	movs	r3, #0
}
 80071b4:	4618      	mov	r0, r3
 80071b6:	3714      	adds	r7, #20
 80071b8:	46bd      	mov	sp, r7
 80071ba:	f85d 7b04 	ldr.w	r7, [sp], #4
 80071be:	4770      	bx	lr

080071c0 <USB_FlushRxFifo>:
  * @brief  USB_FlushRxFifo  Flush Rx FIFO
  * @param  USBx  Selected device
  * @retval HAL status
  */
HAL_StatusTypeDef USB_FlushRxFifo(USB_OTG_GlobalTypeDef *USBx)
{
 80071c0:	b480      	push	{r7}
 80071c2:	b085      	sub	sp, #20
 80071c4:	af00      	add	r7, sp, #0
 80071c6:	6078      	str	r0, [r7, #4]
  __IO uint32_t count = 0U;
 80071c8:	2300      	movs	r3, #0
 80071ca:	60fb      	str	r3, [r7, #12]

  /* Wait for AHB master IDLE state. */
  do
  {
    count++;
 80071cc:	68fb      	ldr	r3, [r7, #12]
 80071ce:	3301      	adds	r3, #1
 80071d0:	60fb      	str	r3, [r7, #12]

    if (count > HAL_USB_TIMEOUT)
 80071d2:	68fb      	ldr	r3, [r7, #12]
 80071d4:	f1b3 6f70 	cmp.w	r3, #251658240	; 0xf000000
 80071d8:	d901      	bls.n	80071de <USB_FlushRxFifo+0x1e>
    {
      return HAL_TIMEOUT;
 80071da:	2303      	movs	r3, #3
 80071dc:	e018      	b.n	8007210 <USB_FlushRxFifo+0x50>
    }
  } while ((USBx->GRSTCTL & USB_OTG_GRSTCTL_AHBIDL) == 0U);
 80071de:	687b      	ldr	r3, [r7, #4]
 80071e0:	691b      	ldr	r3, [r3, #16]
 80071e2:	2b00      	cmp	r3, #0
 80071e4:	daf2      	bge.n	80071cc <USB_FlushRxFifo+0xc>

  /* Flush RX Fifo */
  count = 0U;
 80071e6:	2300      	movs	r3, #0
 80071e8:	60fb      	str	r3, [r7, #12]
  USBx->GRSTCTL = USB_OTG_GRSTCTL_RXFFLSH;
 80071ea:	687b      	ldr	r3, [r7, #4]
 80071ec:	2210      	movs	r2, #16
 80071ee:	611a      	str	r2, [r3, #16]

  do
  {
    count++;
 80071f0:	68fb      	ldr	r3, [r7, #12]
 80071f2:	3301      	adds	r3, #1
 80071f4:	60fb      	str	r3, [r7, #12]

    if (count > HAL_USB_TIMEOUT)
 80071f6:	68fb      	ldr	r3, [r7, #12]
 80071f8:	f1b3 6f70 	cmp.w	r3, #251658240	; 0xf000000
 80071fc:	d901      	bls.n	8007202 <USB_FlushRxFifo+0x42>
    {
      return HAL_TIMEOUT;
 80071fe:	2303      	movs	r3, #3
 8007200:	e006      	b.n	8007210 <USB_FlushRxFifo+0x50>
    }
  } while ((USBx->GRSTCTL & USB_OTG_GRSTCTL_RXFFLSH) == USB_OTG_GRSTCTL_RXFFLSH);
 8007202:	687b      	ldr	r3, [r7, #4]
 8007204:	691b      	ldr	r3, [r3, #16]
 8007206:	f003 0310 	and.w	r3, r3, #16
 800720a:	2b10      	cmp	r3, #16
 800720c:	d0f0      	beq.n	80071f0 <USB_FlushRxFifo+0x30>

  return HAL_OK;
 800720e:	2300      	movs	r3, #0
}
 8007210:	4618      	mov	r0, r3
 8007212:	3714      	adds	r7, #20
 8007214:	46bd      	mov	sp, r7
 8007216:	f85d 7b04 	ldr.w	r7, [sp], #4
 800721a:	4770      	bx	lr

0800721c <USB_SetDevSpeed>:
  *            @arg USB_OTG_SPEED_HIGH_IN_FULL: High speed core in Full Speed mode
  *            @arg USB_OTG_SPEED_FULL: Full speed mode
  * @retval  Hal status
  */
HAL_StatusTypeDef USB_SetDevSpeed(const USB_OTG_GlobalTypeDef *USBx, uint8_t speed)
{
 800721c:	b480      	push	{r7}
 800721e:	b085      	sub	sp, #20
 8007220:	af00      	add	r7, sp, #0
 8007222:	6078      	str	r0, [r7, #4]
 8007224:	460b      	mov	r3, r1
 8007226:	70fb      	strb	r3, [r7, #3]
  uint32_t USBx_BASE = (uint32_t)USBx;
 8007228:	687b      	ldr	r3, [r7, #4]
 800722a:	60fb      	str	r3, [r7, #12]

  USBx_DEVICE->DCFG |= speed;
 800722c:	68fb      	ldr	r3, [r7, #12]
 800722e:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 8007232:	681a      	ldr	r2, [r3, #0]
 8007234:	78fb      	ldrb	r3, [r7, #3]
 8007236:	68f9      	ldr	r1, [r7, #12]
 8007238:	f501 6100 	add.w	r1, r1, #2048	; 0x800
 800723c:	4313      	orrs	r3, r2
 800723e:	600b      	str	r3, [r1, #0]
  return HAL_OK;
 8007240:	2300      	movs	r3, #0
}
 8007242:	4618      	mov	r0, r3
 8007244:	3714      	adds	r7, #20
 8007246:	46bd      	mov	sp, r7
 8007248:	f85d 7b04 	ldr.w	r7, [sp], #4
 800724c:	4770      	bx	lr

0800724e <USB_GetDevSpeed>:
  *          This parameter can be one of these values:
  *            @arg USBD_HS_SPEED: High speed mode
  *            @arg USBD_FS_SPEED: Full speed mode
  */
uint8_t USB_GetDevSpeed(const USB_OTG_GlobalTypeDef *USBx)
{
 800724e:	b480      	push	{r7}
 8007250:	b087      	sub	sp, #28
 8007252:	af00      	add	r7, sp, #0
 8007254:	6078      	str	r0, [r7, #4]
  uint32_t USBx_BASE = (uint32_t)USBx;
 8007256:	687b      	ldr	r3, [r7, #4]
 8007258:	613b      	str	r3, [r7, #16]
  uint8_t speed;
  uint32_t DevEnumSpeed = USBx_DEVICE->DSTS & USB_OTG_DSTS_ENUMSPD;
 800725a:	693b      	ldr	r3, [r7, #16]
 800725c:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 8007260:	689b      	ldr	r3, [r3, #8]
 8007262:	f003 0306 	and.w	r3, r3, #6
 8007266:	60fb      	str	r3, [r7, #12]

  if (DevEnumSpeed == DSTS_ENUMSPD_HS_PHY_30MHZ_OR_60MHZ)
 8007268:	68fb      	ldr	r3, [r7, #12]
 800726a:	2b00      	cmp	r3, #0
 800726c:	d102      	bne.n	8007274 <USB_GetDevSpeed+0x26>
  {
    speed = USBD_HS_SPEED;
 800726e:	2300      	movs	r3, #0
 8007270:	75fb      	strb	r3, [r7, #23]
 8007272:	e00a      	b.n	800728a <USB_GetDevSpeed+0x3c>
  }
  else if ((DevEnumSpeed == DSTS_ENUMSPD_FS_PHY_30MHZ_OR_60MHZ) ||
 8007274:	68fb      	ldr	r3, [r7, #12]
 8007276:	2b02      	cmp	r3, #2
 8007278:	d002      	beq.n	8007280 <USB_GetDevSpeed+0x32>
 800727a:	68fb      	ldr	r3, [r7, #12]
 800727c:	2b06      	cmp	r3, #6
 800727e:	d102      	bne.n	8007286 <USB_GetDevSpeed+0x38>
           (DevEnumSpeed == DSTS_ENUMSPD_FS_PHY_48MHZ))
  {
    speed = USBD_FS_SPEED;
 8007280:	2302      	movs	r3, #2
 8007282:	75fb      	strb	r3, [r7, #23]
 8007284:	e001      	b.n	800728a <USB_GetDevSpeed+0x3c>
  }
  else
  {
    speed = 0xFU;
 8007286:	230f      	movs	r3, #15
 8007288:	75fb      	strb	r3, [r7, #23]
  }

  return speed;
 800728a:	7dfb      	ldrb	r3, [r7, #23]
}
 800728c:	4618      	mov	r0, r3
 800728e:	371c      	adds	r7, #28
 8007290:	46bd      	mov	sp, r7
 8007292:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007296:	4770      	bx	lr

08007298 <USB_ActivateEndpoint>:
  * @param  USBx  Selected device
  * @param  ep pointer to endpoint structure
  * @retval HAL status
  */
HAL_StatusTypeDef USB_ActivateEndpoint(const USB_OTG_GlobalTypeDef *USBx, const USB_OTG_EPTypeDef *ep)
{
 8007298:	b480      	push	{r7}
 800729a:	b085      	sub	sp, #20
 800729c:	af00      	add	r7, sp, #0
 800729e:	6078      	str	r0, [r7, #4]
 80072a0:	6039      	str	r1, [r7, #0]
  uint32_t USBx_BASE = (uint32_t)USBx;
 80072a2:	687b      	ldr	r3, [r7, #4]
 80072a4:	60fb      	str	r3, [r7, #12]
  uint32_t epnum = (uint32_t)ep->num;
 80072a6:	683b      	ldr	r3, [r7, #0]
 80072a8:	781b      	ldrb	r3, [r3, #0]
 80072aa:	60bb      	str	r3, [r7, #8]

  if (ep->is_in == 1U)
 80072ac:	683b      	ldr	r3, [r7, #0]
 80072ae:	785b      	ldrb	r3, [r3, #1]
 80072b0:	2b01      	cmp	r3, #1
 80072b2:	d13a      	bne.n	800732a <USB_ActivateEndpoint+0x92>
  {
    USBx_DEVICE->DAINTMSK |= USB_OTG_DAINTMSK_IEPM & (uint32_t)(1UL << (ep->num & EP_ADDR_MSK));
 80072b4:	68fb      	ldr	r3, [r7, #12]
 80072b6:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 80072ba:	69da      	ldr	r2, [r3, #28]
 80072bc:	683b      	ldr	r3, [r7, #0]
 80072be:	781b      	ldrb	r3, [r3, #0]
 80072c0:	f003 030f 	and.w	r3, r3, #15
 80072c4:	2101      	movs	r1, #1
 80072c6:	fa01 f303 	lsl.w	r3, r1, r3
 80072ca:	b29b      	uxth	r3, r3
 80072cc:	68f9      	ldr	r1, [r7, #12]
 80072ce:	f501 6100 	add.w	r1, r1, #2048	; 0x800
 80072d2:	4313      	orrs	r3, r2
 80072d4:	61cb      	str	r3, [r1, #28]

    if ((USBx_INEP(epnum)->DIEPCTL & USB_OTG_DIEPCTL_USBAEP) == 0U)
 80072d6:	68bb      	ldr	r3, [r7, #8]
 80072d8:	015a      	lsls	r2, r3, #5
 80072da:	68fb      	ldr	r3, [r7, #12]
 80072dc:	4413      	add	r3, r2
 80072de:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 80072e2:	681b      	ldr	r3, [r3, #0]
 80072e4:	f403 4300 	and.w	r3, r3, #32768	; 0x8000
 80072e8:	2b00      	cmp	r3, #0
 80072ea:	d155      	bne.n	8007398 <USB_ActivateEndpoint+0x100>
    {
      USBx_INEP(epnum)->DIEPCTL |= (ep->maxpacket & USB_OTG_DIEPCTL_MPSIZ) |
 80072ec:	68bb      	ldr	r3, [r7, #8]
 80072ee:	015a      	lsls	r2, r3, #5
 80072f0:	68fb      	ldr	r3, [r7, #12]
 80072f2:	4413      	add	r3, r2
 80072f4:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 80072f8:	681a      	ldr	r2, [r3, #0]
 80072fa:	683b      	ldr	r3, [r7, #0]
 80072fc:	689b      	ldr	r3, [r3, #8]
 80072fe:	f3c3 010a 	ubfx	r1, r3, #0, #11
                                   ((uint32_t)ep->type << 18) | (epnum << 22) |
 8007302:	683b      	ldr	r3, [r7, #0]
 8007304:	791b      	ldrb	r3, [r3, #4]
 8007306:	049b      	lsls	r3, r3, #18
      USBx_INEP(epnum)->DIEPCTL |= (ep->maxpacket & USB_OTG_DIEPCTL_MPSIZ) |
 8007308:	4319      	orrs	r1, r3
                                   ((uint32_t)ep->type << 18) | (epnum << 22) |
 800730a:	68bb      	ldr	r3, [r7, #8]
 800730c:	059b      	lsls	r3, r3, #22
 800730e:	430b      	orrs	r3, r1
      USBx_INEP(epnum)->DIEPCTL |= (ep->maxpacket & USB_OTG_DIEPCTL_MPSIZ) |
 8007310:	4313      	orrs	r3, r2
 8007312:	68ba      	ldr	r2, [r7, #8]
 8007314:	0151      	lsls	r1, r2, #5
 8007316:	68fa      	ldr	r2, [r7, #12]
 8007318:	440a      	add	r2, r1
 800731a:	f502 6210 	add.w	r2, r2, #2304	; 0x900
 800731e:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8007322:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8007326:	6013      	str	r3, [r2, #0]
 8007328:	e036      	b.n	8007398 <USB_ActivateEndpoint+0x100>
                                   USB_OTG_DIEPCTL_USBAEP;
    }
  }
  else
  {
    USBx_DEVICE->DAINTMSK |= USB_OTG_DAINTMSK_OEPM & ((uint32_t)(1UL << (ep->num & EP_ADDR_MSK)) << 16);
 800732a:	68fb      	ldr	r3, [r7, #12]
 800732c:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 8007330:	69da      	ldr	r2, [r3, #28]
 8007332:	683b      	ldr	r3, [r7, #0]
 8007334:	781b      	ldrb	r3, [r3, #0]
 8007336:	f003 030f 	and.w	r3, r3, #15
 800733a:	2101      	movs	r1, #1
 800733c:	fa01 f303 	lsl.w	r3, r1, r3
 8007340:	041b      	lsls	r3, r3, #16
 8007342:	68f9      	ldr	r1, [r7, #12]
 8007344:	f501 6100 	add.w	r1, r1, #2048	; 0x800
 8007348:	4313      	orrs	r3, r2
 800734a:	61cb      	str	r3, [r1, #28]

    if (((USBx_OUTEP(epnum)->DOEPCTL) & USB_OTG_DOEPCTL_USBAEP) == 0U)
 800734c:	68bb      	ldr	r3, [r7, #8]
 800734e:	015a      	lsls	r2, r3, #5
 8007350:	68fb      	ldr	r3, [r7, #12]
 8007352:	4413      	add	r3, r2
 8007354:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 8007358:	681b      	ldr	r3, [r3, #0]
 800735a:	f403 4300 	and.w	r3, r3, #32768	; 0x8000
 800735e:	2b00      	cmp	r3, #0
 8007360:	d11a      	bne.n	8007398 <USB_ActivateEndpoint+0x100>
    {
      USBx_OUTEP(epnum)->DOEPCTL |= (ep->maxpacket & USB_OTG_DOEPCTL_MPSIZ) |
 8007362:	68bb      	ldr	r3, [r7, #8]
 8007364:	015a      	lsls	r2, r3, #5
 8007366:	68fb      	ldr	r3, [r7, #12]
 8007368:	4413      	add	r3, r2
 800736a:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 800736e:	681a      	ldr	r2, [r3, #0]
 8007370:	683b      	ldr	r3, [r7, #0]
 8007372:	689b      	ldr	r3, [r3, #8]
 8007374:	f3c3 010a 	ubfx	r1, r3, #0, #11
                                    ((uint32_t)ep->type << 18) |
 8007378:	683b      	ldr	r3, [r7, #0]
 800737a:	791b      	ldrb	r3, [r3, #4]
 800737c:	049b      	lsls	r3, r3, #18
      USBx_OUTEP(epnum)->DOEPCTL |= (ep->maxpacket & USB_OTG_DOEPCTL_MPSIZ) |
 800737e:	430b      	orrs	r3, r1
 8007380:	4313      	orrs	r3, r2
 8007382:	68ba      	ldr	r2, [r7, #8]
 8007384:	0151      	lsls	r1, r2, #5
 8007386:	68fa      	ldr	r2, [r7, #12]
 8007388:	440a      	add	r2, r1
 800738a:	f502 6230 	add.w	r2, r2, #2816	; 0xb00
 800738e:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8007392:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8007396:	6013      	str	r3, [r2, #0]
                                    USB_OTG_DIEPCTL_SD0PID_SEVNFRM |
                                    USB_OTG_DOEPCTL_USBAEP;
    }
  }
  return HAL_OK;
 8007398:	2300      	movs	r3, #0
}
 800739a:	4618      	mov	r0, r3
 800739c:	3714      	adds	r7, #20
 800739e:	46bd      	mov	sp, r7
 80073a0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80073a4:	4770      	bx	lr
	...

080073a8 <USB_DeactivateEndpoint>:
  * @param  USBx  Selected device
  * @param  ep pointer to endpoint structure
  * @retval HAL status
  */
HAL_StatusTypeDef USB_DeactivateEndpoint(const USB_OTG_GlobalTypeDef *USBx, const USB_OTG_EPTypeDef *ep)
{
 80073a8:	b480      	push	{r7}
 80073aa:	b085      	sub	sp, #20
 80073ac:	af00      	add	r7, sp, #0
 80073ae:	6078      	str	r0, [r7, #4]
 80073b0:	6039      	str	r1, [r7, #0]
  uint32_t USBx_BASE = (uint32_t)USBx;
 80073b2:	687b      	ldr	r3, [r7, #4]
 80073b4:	60fb      	str	r3, [r7, #12]
  uint32_t epnum = (uint32_t)ep->num;
 80073b6:	683b      	ldr	r3, [r7, #0]
 80073b8:	781b      	ldrb	r3, [r3, #0]
 80073ba:	60bb      	str	r3, [r7, #8]

  /* Read DEPCTLn register */
  if (ep->is_in == 1U)
 80073bc:	683b      	ldr	r3, [r7, #0]
 80073be:	785b      	ldrb	r3, [r3, #1]
 80073c0:	2b01      	cmp	r3, #1
 80073c2:	d161      	bne.n	8007488 <USB_DeactivateEndpoint+0xe0>
  {
    if ((USBx_INEP(epnum)->DIEPCTL & USB_OTG_DIEPCTL_EPENA) == USB_OTG_DIEPCTL_EPENA)
 80073c4:	68bb      	ldr	r3, [r7, #8]
 80073c6:	015a      	lsls	r2, r3, #5
 80073c8:	68fb      	ldr	r3, [r7, #12]
 80073ca:	4413      	add	r3, r2
 80073cc:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 80073d0:	681b      	ldr	r3, [r3, #0]
 80073d2:	f003 4300 	and.w	r3, r3, #2147483648	; 0x80000000
 80073d6:	f1b3 4f00 	cmp.w	r3, #2147483648	; 0x80000000
 80073da:	d11f      	bne.n	800741c <USB_DeactivateEndpoint+0x74>
    {
      USBx_INEP(epnum)->DIEPCTL |= USB_OTG_DIEPCTL_SNAK;
 80073dc:	68bb      	ldr	r3, [r7, #8]
 80073de:	015a      	lsls	r2, r3, #5
 80073e0:	68fb      	ldr	r3, [r7, #12]
 80073e2:	4413      	add	r3, r2
 80073e4:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 80073e8:	681b      	ldr	r3, [r3, #0]
 80073ea:	68ba      	ldr	r2, [r7, #8]
 80073ec:	0151      	lsls	r1, r2, #5
 80073ee:	68fa      	ldr	r2, [r7, #12]
 80073f0:	440a      	add	r2, r1
 80073f2:	f502 6210 	add.w	r2, r2, #2304	; 0x900
 80073f6:	f043 6300 	orr.w	r3, r3, #134217728	; 0x8000000
 80073fa:	6013      	str	r3, [r2, #0]
      USBx_INEP(epnum)->DIEPCTL |= USB_OTG_DIEPCTL_EPDIS;
 80073fc:	68bb      	ldr	r3, [r7, #8]
 80073fe:	015a      	lsls	r2, r3, #5
 8007400:	68fb      	ldr	r3, [r7, #12]
 8007402:	4413      	add	r3, r2
 8007404:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 8007408:	681b      	ldr	r3, [r3, #0]
 800740a:	68ba      	ldr	r2, [r7, #8]
 800740c:	0151      	lsls	r1, r2, #5
 800740e:	68fa      	ldr	r2, [r7, #12]
 8007410:	440a      	add	r2, r1
 8007412:	f502 6210 	add.w	r2, r2, #2304	; 0x900
 8007416:	f043 4380 	orr.w	r3, r3, #1073741824	; 0x40000000
 800741a:	6013      	str	r3, [r2, #0]
    }

    USBx_DEVICE->DEACHMSK &= ~(USB_OTG_DAINTMSK_IEPM & (uint32_t)(1UL << (ep->num & EP_ADDR_MSK)));
 800741c:	68fb      	ldr	r3, [r7, #12]
 800741e:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 8007422:	6bda      	ldr	r2, [r3, #60]	; 0x3c
 8007424:	683b      	ldr	r3, [r7, #0]
 8007426:	781b      	ldrb	r3, [r3, #0]
 8007428:	f003 030f 	and.w	r3, r3, #15
 800742c:	2101      	movs	r1, #1
 800742e:	fa01 f303 	lsl.w	r3, r1, r3
 8007432:	b29b      	uxth	r3, r3
 8007434:	43db      	mvns	r3, r3
 8007436:	68f9      	ldr	r1, [r7, #12]
 8007438:	f501 6100 	add.w	r1, r1, #2048	; 0x800
 800743c:	4013      	ands	r3, r2
 800743e:	63cb      	str	r3, [r1, #60]	; 0x3c
    USBx_DEVICE->DAINTMSK &= ~(USB_OTG_DAINTMSK_IEPM & (uint32_t)(1UL << (ep->num & EP_ADDR_MSK)));
 8007440:	68fb      	ldr	r3, [r7, #12]
 8007442:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 8007446:	69da      	ldr	r2, [r3, #28]
 8007448:	683b      	ldr	r3, [r7, #0]
 800744a:	781b      	ldrb	r3, [r3, #0]
 800744c:	f003 030f 	and.w	r3, r3, #15
 8007450:	2101      	movs	r1, #1
 8007452:	fa01 f303 	lsl.w	r3, r1, r3
 8007456:	b29b      	uxth	r3, r3
 8007458:	43db      	mvns	r3, r3
 800745a:	68f9      	ldr	r1, [r7, #12]
 800745c:	f501 6100 	add.w	r1, r1, #2048	; 0x800
 8007460:	4013      	ands	r3, r2
 8007462:	61cb      	str	r3, [r1, #28]
    USBx_INEP(epnum)->DIEPCTL &= ~(USB_OTG_DIEPCTL_USBAEP |
 8007464:	68bb      	ldr	r3, [r7, #8]
 8007466:	015a      	lsls	r2, r3, #5
 8007468:	68fb      	ldr	r3, [r7, #12]
 800746a:	4413      	add	r3, r2
 800746c:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 8007470:	681a      	ldr	r2, [r3, #0]
 8007472:	68bb      	ldr	r3, [r7, #8]
 8007474:	0159      	lsls	r1, r3, #5
 8007476:	68fb      	ldr	r3, [r7, #12]
 8007478:	440b      	add	r3, r1
 800747a:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 800747e:	4619      	mov	r1, r3
 8007480:	4b35      	ldr	r3, [pc, #212]	; (8007558 <USB_DeactivateEndpoint+0x1b0>)
 8007482:	4013      	ands	r3, r2
 8007484:	600b      	str	r3, [r1, #0]
 8007486:	e060      	b.n	800754a <USB_DeactivateEndpoint+0x1a2>
                                   USB_OTG_DIEPCTL_SD0PID_SEVNFRM |
                                   USB_OTG_DIEPCTL_EPTYP);
  }
  else
  {
    if ((USBx_OUTEP(epnum)->DOEPCTL & USB_OTG_DOEPCTL_EPENA) == USB_OTG_DOEPCTL_EPENA)
 8007488:	68bb      	ldr	r3, [r7, #8]
 800748a:	015a      	lsls	r2, r3, #5
 800748c:	68fb      	ldr	r3, [r7, #12]
 800748e:	4413      	add	r3, r2
 8007490:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 8007494:	681b      	ldr	r3, [r3, #0]
 8007496:	f003 4300 	and.w	r3, r3, #2147483648	; 0x80000000
 800749a:	f1b3 4f00 	cmp.w	r3, #2147483648	; 0x80000000
 800749e:	d11f      	bne.n	80074e0 <USB_DeactivateEndpoint+0x138>
    {
      USBx_OUTEP(epnum)->DOEPCTL |= USB_OTG_DOEPCTL_SNAK;
 80074a0:	68bb      	ldr	r3, [r7, #8]
 80074a2:	015a      	lsls	r2, r3, #5
 80074a4:	68fb      	ldr	r3, [r7, #12]
 80074a6:	4413      	add	r3, r2
 80074a8:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 80074ac:	681b      	ldr	r3, [r3, #0]
 80074ae:	68ba      	ldr	r2, [r7, #8]
 80074b0:	0151      	lsls	r1, r2, #5
 80074b2:	68fa      	ldr	r2, [r7, #12]
 80074b4:	440a      	add	r2, r1
 80074b6:	f502 6230 	add.w	r2, r2, #2816	; 0xb00
 80074ba:	f043 6300 	orr.w	r3, r3, #134217728	; 0x8000000
 80074be:	6013      	str	r3, [r2, #0]
      USBx_OUTEP(epnum)->DOEPCTL |= USB_OTG_DOEPCTL_EPDIS;
 80074c0:	68bb      	ldr	r3, [r7, #8]
 80074c2:	015a      	lsls	r2, r3, #5
 80074c4:	68fb      	ldr	r3, [r7, #12]
 80074c6:	4413      	add	r3, r2
 80074c8:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 80074cc:	681b      	ldr	r3, [r3, #0]
 80074ce:	68ba      	ldr	r2, [r7, #8]
 80074d0:	0151      	lsls	r1, r2, #5
 80074d2:	68fa      	ldr	r2, [r7, #12]
 80074d4:	440a      	add	r2, r1
 80074d6:	f502 6230 	add.w	r2, r2, #2816	; 0xb00
 80074da:	f043 4380 	orr.w	r3, r3, #1073741824	; 0x40000000
 80074de:	6013      	str	r3, [r2, #0]
    }

    USBx_DEVICE->DEACHMSK &= ~(USB_OTG_DAINTMSK_OEPM & ((uint32_t)(1UL << (ep->num & EP_ADDR_MSK)) << 16));
 80074e0:	68fb      	ldr	r3, [r7, #12]
 80074e2:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 80074e6:	6bda      	ldr	r2, [r3, #60]	; 0x3c
 80074e8:	683b      	ldr	r3, [r7, #0]
 80074ea:	781b      	ldrb	r3, [r3, #0]
 80074ec:	f003 030f 	and.w	r3, r3, #15
 80074f0:	2101      	movs	r1, #1
 80074f2:	fa01 f303 	lsl.w	r3, r1, r3
 80074f6:	041b      	lsls	r3, r3, #16
 80074f8:	43db      	mvns	r3, r3
 80074fa:	68f9      	ldr	r1, [r7, #12]
 80074fc:	f501 6100 	add.w	r1, r1, #2048	; 0x800
 8007500:	4013      	ands	r3, r2
 8007502:	63cb      	str	r3, [r1, #60]	; 0x3c
    USBx_DEVICE->DAINTMSK &= ~(USB_OTG_DAINTMSK_OEPM & ((uint32_t)(1UL << (ep->num & EP_ADDR_MSK)) << 16));
 8007504:	68fb      	ldr	r3, [r7, #12]
 8007506:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 800750a:	69da      	ldr	r2, [r3, #28]
 800750c:	683b      	ldr	r3, [r7, #0]
 800750e:	781b      	ldrb	r3, [r3, #0]
 8007510:	f003 030f 	and.w	r3, r3, #15
 8007514:	2101      	movs	r1, #1
 8007516:	fa01 f303 	lsl.w	r3, r1, r3
 800751a:	041b      	lsls	r3, r3, #16
 800751c:	43db      	mvns	r3, r3
 800751e:	68f9      	ldr	r1, [r7, #12]
 8007520:	f501 6100 	add.w	r1, r1, #2048	; 0x800
 8007524:	4013      	ands	r3, r2
 8007526:	61cb      	str	r3, [r1, #28]
    USBx_OUTEP(epnum)->DOEPCTL &= ~(USB_OTG_DOEPCTL_USBAEP |
 8007528:	68bb      	ldr	r3, [r7, #8]
 800752a:	015a      	lsls	r2, r3, #5
 800752c:	68fb      	ldr	r3, [r7, #12]
 800752e:	4413      	add	r3, r2
 8007530:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 8007534:	681a      	ldr	r2, [r3, #0]
 8007536:	68bb      	ldr	r3, [r7, #8]
 8007538:	0159      	lsls	r1, r3, #5
 800753a:	68fb      	ldr	r3, [r7, #12]
 800753c:	440b      	add	r3, r1
 800753e:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 8007542:	4619      	mov	r1, r3
 8007544:	4b05      	ldr	r3, [pc, #20]	; (800755c <USB_DeactivateEndpoint+0x1b4>)
 8007546:	4013      	ands	r3, r2
 8007548:	600b      	str	r3, [r1, #0]
                                    USB_OTG_DOEPCTL_MPSIZ |
                                    USB_OTG_DOEPCTL_SD0PID_SEVNFRM |
                                    USB_OTG_DOEPCTL_EPTYP);
  }

  return HAL_OK;
 800754a:	2300      	movs	r3, #0
}
 800754c:	4618      	mov	r0, r3
 800754e:	3714      	adds	r7, #20
 8007550:	46bd      	mov	sp, r7
 8007552:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007556:	4770      	bx	lr
 8007558:	ec337800 	.word	0xec337800
 800755c:	eff37800 	.word	0xeff37800

08007560 <USB_EPStartXfer>:
  *           0 : DMA feature not used
  *           1 : DMA feature used
  * @retval HAL status
  */
HAL_StatusTypeDef USB_EPStartXfer(USB_OTG_GlobalTypeDef *USBx, USB_OTG_EPTypeDef *ep, uint8_t dma)
{
 8007560:	b580      	push	{r7, lr}
 8007562:	b08a      	sub	sp, #40	; 0x28
 8007564:	af02      	add	r7, sp, #8
 8007566:	60f8      	str	r0, [r7, #12]
 8007568:	60b9      	str	r1, [r7, #8]
 800756a:	4613      	mov	r3, r2
 800756c:	71fb      	strb	r3, [r7, #7]
  uint32_t USBx_BASE = (uint32_t)USBx;
 800756e:	68fb      	ldr	r3, [r7, #12]
 8007570:	61fb      	str	r3, [r7, #28]
  uint32_t epnum = (uint32_t)ep->num;
 8007572:	68bb      	ldr	r3, [r7, #8]
 8007574:	781b      	ldrb	r3, [r3, #0]
 8007576:	61bb      	str	r3, [r7, #24]
  uint16_t pktcnt;

  /* IN endpoint */
  if (ep->is_in == 1U)
 8007578:	68bb      	ldr	r3, [r7, #8]
 800757a:	785b      	ldrb	r3, [r3, #1]
 800757c:	2b01      	cmp	r3, #1
 800757e:	f040 817a 	bne.w	8007876 <USB_EPStartXfer+0x316>
  {
    /* Zero Length Packet? */
    if (ep->xfer_len == 0U)
 8007582:	68bb      	ldr	r3, [r7, #8]
 8007584:	691b      	ldr	r3, [r3, #16]
 8007586:	2b00      	cmp	r3, #0
 8007588:	d132      	bne.n	80075f0 <USB_EPStartXfer+0x90>
    {
      USBx_INEP(epnum)->DIEPTSIZ &= ~(USB_OTG_DIEPTSIZ_PKTCNT);
 800758a:	69bb      	ldr	r3, [r7, #24]
 800758c:	015a      	lsls	r2, r3, #5
 800758e:	69fb      	ldr	r3, [r7, #28]
 8007590:	4413      	add	r3, r2
 8007592:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 8007596:	691b      	ldr	r3, [r3, #16]
 8007598:	69ba      	ldr	r2, [r7, #24]
 800759a:	0151      	lsls	r1, r2, #5
 800759c:	69fa      	ldr	r2, [r7, #28]
 800759e:	440a      	add	r2, r1
 80075a0:	f502 6210 	add.w	r2, r2, #2304	; 0x900
 80075a4:	f023 53ff 	bic.w	r3, r3, #534773760	; 0x1fe00000
 80075a8:	f423 13c0 	bic.w	r3, r3, #1572864	; 0x180000
 80075ac:	6113      	str	r3, [r2, #16]
      USBx_INEP(epnum)->DIEPTSIZ |= (USB_OTG_DIEPTSIZ_PKTCNT & (1U << 19));
 80075ae:	69bb      	ldr	r3, [r7, #24]
 80075b0:	015a      	lsls	r2, r3, #5
 80075b2:	69fb      	ldr	r3, [r7, #28]
 80075b4:	4413      	add	r3, r2
 80075b6:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 80075ba:	691b      	ldr	r3, [r3, #16]
 80075bc:	69ba      	ldr	r2, [r7, #24]
 80075be:	0151      	lsls	r1, r2, #5
 80075c0:	69fa      	ldr	r2, [r7, #28]
 80075c2:	440a      	add	r2, r1
 80075c4:	f502 6210 	add.w	r2, r2, #2304	; 0x900
 80075c8:	f443 2300 	orr.w	r3, r3, #524288	; 0x80000
 80075cc:	6113      	str	r3, [r2, #16]
      USBx_INEP(epnum)->DIEPTSIZ &= ~(USB_OTG_DIEPTSIZ_XFRSIZ);
 80075ce:	69bb      	ldr	r3, [r7, #24]
 80075d0:	015a      	lsls	r2, r3, #5
 80075d2:	69fb      	ldr	r3, [r7, #28]
 80075d4:	4413      	add	r3, r2
 80075d6:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 80075da:	691b      	ldr	r3, [r3, #16]
 80075dc:	69ba      	ldr	r2, [r7, #24]
 80075de:	0151      	lsls	r1, r2, #5
 80075e0:	69fa      	ldr	r2, [r7, #28]
 80075e2:	440a      	add	r2, r1
 80075e4:	f502 6210 	add.w	r2, r2, #2304	; 0x900
 80075e8:	0cdb      	lsrs	r3, r3, #19
 80075ea:	04db      	lsls	r3, r3, #19
 80075ec:	6113      	str	r3, [r2, #16]
 80075ee:	e092      	b.n	8007716 <USB_EPStartXfer+0x1b6>
      /* Program the transfer size and packet count
      * as follows: xfersize = N * maxpacket +
      * short_packet pktcnt = N + (short_packet
      * exist ? 1 : 0)
      */
      USBx_INEP(epnum)->DIEPTSIZ &= ~(USB_OTG_DIEPTSIZ_XFRSIZ);
 80075f0:	69bb      	ldr	r3, [r7, #24]
 80075f2:	015a      	lsls	r2, r3, #5
 80075f4:	69fb      	ldr	r3, [r7, #28]
 80075f6:	4413      	add	r3, r2
 80075f8:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 80075fc:	691b      	ldr	r3, [r3, #16]
 80075fe:	69ba      	ldr	r2, [r7, #24]
 8007600:	0151      	lsls	r1, r2, #5
 8007602:	69fa      	ldr	r2, [r7, #28]
 8007604:	440a      	add	r2, r1
 8007606:	f502 6210 	add.w	r2, r2, #2304	; 0x900
 800760a:	0cdb      	lsrs	r3, r3, #19
 800760c:	04db      	lsls	r3, r3, #19
 800760e:	6113      	str	r3, [r2, #16]
      USBx_INEP(epnum)->DIEPTSIZ &= ~(USB_OTG_DIEPTSIZ_PKTCNT);
 8007610:	69bb      	ldr	r3, [r7, #24]
 8007612:	015a      	lsls	r2, r3, #5
 8007614:	69fb      	ldr	r3, [r7, #28]
 8007616:	4413      	add	r3, r2
 8007618:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 800761c:	691b      	ldr	r3, [r3, #16]
 800761e:	69ba      	ldr	r2, [r7, #24]
 8007620:	0151      	lsls	r1, r2, #5
 8007622:	69fa      	ldr	r2, [r7, #28]
 8007624:	440a      	add	r2, r1
 8007626:	f502 6210 	add.w	r2, r2, #2304	; 0x900
 800762a:	f023 53ff 	bic.w	r3, r3, #534773760	; 0x1fe00000
 800762e:	f423 13c0 	bic.w	r3, r3, #1572864	; 0x180000
 8007632:	6113      	str	r3, [r2, #16]

      if (epnum == 0U)
 8007634:	69bb      	ldr	r3, [r7, #24]
 8007636:	2b00      	cmp	r3, #0
 8007638:	d11a      	bne.n	8007670 <USB_EPStartXfer+0x110>
      {
        if (ep->xfer_len > ep->maxpacket)
 800763a:	68bb      	ldr	r3, [r7, #8]
 800763c:	691a      	ldr	r2, [r3, #16]
 800763e:	68bb      	ldr	r3, [r7, #8]
 8007640:	689b      	ldr	r3, [r3, #8]
 8007642:	429a      	cmp	r2, r3
 8007644:	d903      	bls.n	800764e <USB_EPStartXfer+0xee>
        {
          ep->xfer_len = ep->maxpacket;
 8007646:	68bb      	ldr	r3, [r7, #8]
 8007648:	689a      	ldr	r2, [r3, #8]
 800764a:	68bb      	ldr	r3, [r7, #8]
 800764c:	611a      	str	r2, [r3, #16]
        }

        USBx_INEP(epnum)->DIEPTSIZ |= (USB_OTG_DIEPTSIZ_PKTCNT & (1U << 19));
 800764e:	69bb      	ldr	r3, [r7, #24]
 8007650:	015a      	lsls	r2, r3, #5
 8007652:	69fb      	ldr	r3, [r7, #28]
 8007654:	4413      	add	r3, r2
 8007656:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 800765a:	691b      	ldr	r3, [r3, #16]
 800765c:	69ba      	ldr	r2, [r7, #24]
 800765e:	0151      	lsls	r1, r2, #5
 8007660:	69fa      	ldr	r2, [r7, #28]
 8007662:	440a      	add	r2, r1
 8007664:	f502 6210 	add.w	r2, r2, #2304	; 0x900
 8007668:	f443 2300 	orr.w	r3, r3, #524288	; 0x80000
 800766c:	6113      	str	r3, [r2, #16]
 800766e:	e01b      	b.n	80076a8 <USB_EPStartXfer+0x148>
      }
      else
      {
        USBx_INEP(epnum)->DIEPTSIZ |= (USB_OTG_DIEPTSIZ_PKTCNT &
 8007670:	69bb      	ldr	r3, [r7, #24]
 8007672:	015a      	lsls	r2, r3, #5
 8007674:	69fb      	ldr	r3, [r7, #28]
 8007676:	4413      	add	r3, r2
 8007678:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 800767c:	691a      	ldr	r2, [r3, #16]
                                       (((ep->xfer_len + ep->maxpacket - 1U) / ep->maxpacket) << 19));
 800767e:	68bb      	ldr	r3, [r7, #8]
 8007680:	6919      	ldr	r1, [r3, #16]
 8007682:	68bb      	ldr	r3, [r7, #8]
 8007684:	689b      	ldr	r3, [r3, #8]
 8007686:	440b      	add	r3, r1
 8007688:	1e59      	subs	r1, r3, #1
 800768a:	68bb      	ldr	r3, [r7, #8]
 800768c:	689b      	ldr	r3, [r3, #8]
 800768e:	fbb1 f3f3 	udiv	r3, r1, r3
 8007692:	04d9      	lsls	r1, r3, #19
        USBx_INEP(epnum)->DIEPTSIZ |= (USB_OTG_DIEPTSIZ_PKTCNT &
 8007694:	4ba2      	ldr	r3, [pc, #648]	; (8007920 <USB_EPStartXfer+0x3c0>)
 8007696:	400b      	ands	r3, r1
 8007698:	69b9      	ldr	r1, [r7, #24]
 800769a:	0148      	lsls	r0, r1, #5
 800769c:	69f9      	ldr	r1, [r7, #28]
 800769e:	4401      	add	r1, r0
 80076a0:	f501 6110 	add.w	r1, r1, #2304	; 0x900
 80076a4:	4313      	orrs	r3, r2
 80076a6:	610b      	str	r3, [r1, #16]
      }

      USBx_INEP(epnum)->DIEPTSIZ |= (USB_OTG_DIEPTSIZ_XFRSIZ & ep->xfer_len);
 80076a8:	69bb      	ldr	r3, [r7, #24]
 80076aa:	015a      	lsls	r2, r3, #5
 80076ac:	69fb      	ldr	r3, [r7, #28]
 80076ae:	4413      	add	r3, r2
 80076b0:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 80076b4:	691a      	ldr	r2, [r3, #16]
 80076b6:	68bb      	ldr	r3, [r7, #8]
 80076b8:	691b      	ldr	r3, [r3, #16]
 80076ba:	f3c3 0312 	ubfx	r3, r3, #0, #19
 80076be:	69b9      	ldr	r1, [r7, #24]
 80076c0:	0148      	lsls	r0, r1, #5
 80076c2:	69f9      	ldr	r1, [r7, #28]
 80076c4:	4401      	add	r1, r0
 80076c6:	f501 6110 	add.w	r1, r1, #2304	; 0x900
 80076ca:	4313      	orrs	r3, r2
 80076cc:	610b      	str	r3, [r1, #16]

      if (ep->type == EP_TYPE_ISOC)
 80076ce:	68bb      	ldr	r3, [r7, #8]
 80076d0:	791b      	ldrb	r3, [r3, #4]
 80076d2:	2b01      	cmp	r3, #1
 80076d4:	d11f      	bne.n	8007716 <USB_EPStartXfer+0x1b6>
      {
        USBx_INEP(epnum)->DIEPTSIZ &= ~(USB_OTG_DIEPTSIZ_MULCNT);
 80076d6:	69bb      	ldr	r3, [r7, #24]
 80076d8:	015a      	lsls	r2, r3, #5
 80076da:	69fb      	ldr	r3, [r7, #28]
 80076dc:	4413      	add	r3, r2
 80076de:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 80076e2:	691b      	ldr	r3, [r3, #16]
 80076e4:	69ba      	ldr	r2, [r7, #24]
 80076e6:	0151      	lsls	r1, r2, #5
 80076e8:	69fa      	ldr	r2, [r7, #28]
 80076ea:	440a      	add	r2, r1
 80076ec:	f502 6210 	add.w	r2, r2, #2304	; 0x900
 80076f0:	f023 43c0 	bic.w	r3, r3, #1610612736	; 0x60000000
 80076f4:	6113      	str	r3, [r2, #16]
        USBx_INEP(epnum)->DIEPTSIZ |= (USB_OTG_DIEPTSIZ_MULCNT & (1U << 29));
 80076f6:	69bb      	ldr	r3, [r7, #24]
 80076f8:	015a      	lsls	r2, r3, #5
 80076fa:	69fb      	ldr	r3, [r7, #28]
 80076fc:	4413      	add	r3, r2
 80076fe:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 8007702:	691b      	ldr	r3, [r3, #16]
 8007704:	69ba      	ldr	r2, [r7, #24]
 8007706:	0151      	lsls	r1, r2, #5
 8007708:	69fa      	ldr	r2, [r7, #28]
 800770a:	440a      	add	r2, r1
 800770c:	f502 6210 	add.w	r2, r2, #2304	; 0x900
 8007710:	f043 5300 	orr.w	r3, r3, #536870912	; 0x20000000
 8007714:	6113      	str	r3, [r2, #16]
      }
    }

    if (dma == 1U)
 8007716:	79fb      	ldrb	r3, [r7, #7]
 8007718:	2b01      	cmp	r3, #1
 800771a:	d14b      	bne.n	80077b4 <USB_EPStartXfer+0x254>
    {
      if ((uint32_t)ep->dma_addr != 0U)
 800771c:	68bb      	ldr	r3, [r7, #8]
 800771e:	69db      	ldr	r3, [r3, #28]
 8007720:	2b00      	cmp	r3, #0
 8007722:	d009      	beq.n	8007738 <USB_EPStartXfer+0x1d8>
      {
        USBx_INEP(epnum)->DIEPDMA = (uint32_t)(ep->dma_addr);
 8007724:	69bb      	ldr	r3, [r7, #24]
 8007726:	015a      	lsls	r2, r3, #5
 8007728:	69fb      	ldr	r3, [r7, #28]
 800772a:	4413      	add	r3, r2
 800772c:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 8007730:	461a      	mov	r2, r3
 8007732:	68bb      	ldr	r3, [r7, #8]
 8007734:	69db      	ldr	r3, [r3, #28]
 8007736:	6153      	str	r3, [r2, #20]
      }

      if (ep->type == EP_TYPE_ISOC)
 8007738:	68bb      	ldr	r3, [r7, #8]
 800773a:	791b      	ldrb	r3, [r3, #4]
 800773c:	2b01      	cmp	r3, #1
 800773e:	d128      	bne.n	8007792 <USB_EPStartXfer+0x232>
      {
        if ((USBx_DEVICE->DSTS & (1U << 8)) == 0U)
 8007740:	69fb      	ldr	r3, [r7, #28]
 8007742:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 8007746:	689b      	ldr	r3, [r3, #8]
 8007748:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800774c:	2b00      	cmp	r3, #0
 800774e:	d110      	bne.n	8007772 <USB_EPStartXfer+0x212>
        {
          USBx_INEP(epnum)->DIEPCTL |= USB_OTG_DIEPCTL_SODDFRM;
 8007750:	69bb      	ldr	r3, [r7, #24]
 8007752:	015a      	lsls	r2, r3, #5
 8007754:	69fb      	ldr	r3, [r7, #28]
 8007756:	4413      	add	r3, r2
 8007758:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 800775c:	681b      	ldr	r3, [r3, #0]
 800775e:	69ba      	ldr	r2, [r7, #24]
 8007760:	0151      	lsls	r1, r2, #5
 8007762:	69fa      	ldr	r2, [r7, #28]
 8007764:	440a      	add	r2, r1
 8007766:	f502 6210 	add.w	r2, r2, #2304	; 0x900
 800776a:	f043 5300 	orr.w	r3, r3, #536870912	; 0x20000000
 800776e:	6013      	str	r3, [r2, #0]
 8007770:	e00f      	b.n	8007792 <USB_EPStartXfer+0x232>
        }
        else
        {
          USBx_INEP(epnum)->DIEPCTL |= USB_OTG_DIEPCTL_SD0PID_SEVNFRM;
 8007772:	69bb      	ldr	r3, [r7, #24]
 8007774:	015a      	lsls	r2, r3, #5
 8007776:	69fb      	ldr	r3, [r7, #28]
 8007778:	4413      	add	r3, r2
 800777a:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 800777e:	681b      	ldr	r3, [r3, #0]
 8007780:	69ba      	ldr	r2, [r7, #24]
 8007782:	0151      	lsls	r1, r2, #5
 8007784:	69fa      	ldr	r2, [r7, #28]
 8007786:	440a      	add	r2, r1
 8007788:	f502 6210 	add.w	r2, r2, #2304	; 0x900
 800778c:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8007790:	6013      	str	r3, [r2, #0]
        }
      }

      /* EP enable, IN data in FIFO */
      USBx_INEP(epnum)->DIEPCTL |= (USB_OTG_DIEPCTL_CNAK | USB_OTG_DIEPCTL_EPENA);
 8007792:	69bb      	ldr	r3, [r7, #24]
 8007794:	015a      	lsls	r2, r3, #5
 8007796:	69fb      	ldr	r3, [r7, #28]
 8007798:	4413      	add	r3, r2
 800779a:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 800779e:	681b      	ldr	r3, [r3, #0]
 80077a0:	69ba      	ldr	r2, [r7, #24]
 80077a2:	0151      	lsls	r1, r2, #5
 80077a4:	69fa      	ldr	r2, [r7, #28]
 80077a6:	440a      	add	r2, r1
 80077a8:	f502 6210 	add.w	r2, r2, #2304	; 0x900
 80077ac:	f043 4304 	orr.w	r3, r3, #2214592512	; 0x84000000
 80077b0:	6013      	str	r3, [r2, #0]
 80077b2:	e165      	b.n	8007a80 <USB_EPStartXfer+0x520>
    }
    else
    {
      /* EP enable, IN data in FIFO */
      USBx_INEP(epnum)->DIEPCTL |= (USB_OTG_DIEPCTL_CNAK | USB_OTG_DIEPCTL_EPENA);
 80077b4:	69bb      	ldr	r3, [r7, #24]
 80077b6:	015a      	lsls	r2, r3, #5
 80077b8:	69fb      	ldr	r3, [r7, #28]
 80077ba:	4413      	add	r3, r2
 80077bc:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 80077c0:	681b      	ldr	r3, [r3, #0]
 80077c2:	69ba      	ldr	r2, [r7, #24]
 80077c4:	0151      	lsls	r1, r2, #5
 80077c6:	69fa      	ldr	r2, [r7, #28]
 80077c8:	440a      	add	r2, r1
 80077ca:	f502 6210 	add.w	r2, r2, #2304	; 0x900
 80077ce:	f043 4304 	orr.w	r3, r3, #2214592512	; 0x84000000
 80077d2:	6013      	str	r3, [r2, #0]

      if (ep->type != EP_TYPE_ISOC)
 80077d4:	68bb      	ldr	r3, [r7, #8]
 80077d6:	791b      	ldrb	r3, [r3, #4]
 80077d8:	2b01      	cmp	r3, #1
 80077da:	d015      	beq.n	8007808 <USB_EPStartXfer+0x2a8>
      {
        /* Enable the Tx FIFO Empty Interrupt for this EP */
        if (ep->xfer_len > 0U)
 80077dc:	68bb      	ldr	r3, [r7, #8]
 80077de:	691b      	ldr	r3, [r3, #16]
 80077e0:	2b00      	cmp	r3, #0
 80077e2:	f000 814d 	beq.w	8007a80 <USB_EPStartXfer+0x520>
        {
          USBx_DEVICE->DIEPEMPMSK |= 1UL << (ep->num & EP_ADDR_MSK);
 80077e6:	69fb      	ldr	r3, [r7, #28]
 80077e8:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 80077ec:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 80077ee:	68bb      	ldr	r3, [r7, #8]
 80077f0:	781b      	ldrb	r3, [r3, #0]
 80077f2:	f003 030f 	and.w	r3, r3, #15
 80077f6:	2101      	movs	r1, #1
 80077f8:	fa01 f303 	lsl.w	r3, r1, r3
 80077fc:	69f9      	ldr	r1, [r7, #28]
 80077fe:	f501 6100 	add.w	r1, r1, #2048	; 0x800
 8007802:	4313      	orrs	r3, r2
 8007804:	634b      	str	r3, [r1, #52]	; 0x34
 8007806:	e13b      	b.n	8007a80 <USB_EPStartXfer+0x520>
        }
      }
      else
      {
        if ((USBx_DEVICE->DSTS & (1U << 8)) == 0U)
 8007808:	69fb      	ldr	r3, [r7, #28]
 800780a:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 800780e:	689b      	ldr	r3, [r3, #8]
 8007810:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8007814:	2b00      	cmp	r3, #0
 8007816:	d110      	bne.n	800783a <USB_EPStartXfer+0x2da>
        {
          USBx_INEP(epnum)->DIEPCTL |= USB_OTG_DIEPCTL_SODDFRM;
 8007818:	69bb      	ldr	r3, [r7, #24]
 800781a:	015a      	lsls	r2, r3, #5
 800781c:	69fb      	ldr	r3, [r7, #28]
 800781e:	4413      	add	r3, r2
 8007820:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 8007824:	681b      	ldr	r3, [r3, #0]
 8007826:	69ba      	ldr	r2, [r7, #24]
 8007828:	0151      	lsls	r1, r2, #5
 800782a:	69fa      	ldr	r2, [r7, #28]
 800782c:	440a      	add	r2, r1
 800782e:	f502 6210 	add.w	r2, r2, #2304	; 0x900
 8007832:	f043 5300 	orr.w	r3, r3, #536870912	; 0x20000000
 8007836:	6013      	str	r3, [r2, #0]
 8007838:	e00f      	b.n	800785a <USB_EPStartXfer+0x2fa>
        }
        else
        {
          USBx_INEP(epnum)->DIEPCTL |= USB_OTG_DIEPCTL_SD0PID_SEVNFRM;
 800783a:	69bb      	ldr	r3, [r7, #24]
 800783c:	015a      	lsls	r2, r3, #5
 800783e:	69fb      	ldr	r3, [r7, #28]
 8007840:	4413      	add	r3, r2
 8007842:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 8007846:	681b      	ldr	r3, [r3, #0]
 8007848:	69ba      	ldr	r2, [r7, #24]
 800784a:	0151      	lsls	r1, r2, #5
 800784c:	69fa      	ldr	r2, [r7, #28]
 800784e:	440a      	add	r2, r1
 8007850:	f502 6210 	add.w	r2, r2, #2304	; 0x900
 8007854:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8007858:	6013      	str	r3, [r2, #0]
        }

        (void)USB_WritePacket(USBx, ep->xfer_buff, ep->num, (uint16_t)ep->xfer_len, dma);
 800785a:	68bb      	ldr	r3, [r7, #8]
 800785c:	68d9      	ldr	r1, [r3, #12]
 800785e:	68bb      	ldr	r3, [r7, #8]
 8007860:	781a      	ldrb	r2, [r3, #0]
 8007862:	68bb      	ldr	r3, [r7, #8]
 8007864:	691b      	ldr	r3, [r3, #16]
 8007866:	b298      	uxth	r0, r3
 8007868:	79fb      	ldrb	r3, [r7, #7]
 800786a:	9300      	str	r3, [sp, #0]
 800786c:	4603      	mov	r3, r0
 800786e:	68f8      	ldr	r0, [r7, #12]
 8007870:	f000 f9b8 	bl	8007be4 <USB_WritePacket>
 8007874:	e104      	b.n	8007a80 <USB_EPStartXfer+0x520>
  {
    /* Program the transfer size and packet count as follows:
    * pktcnt = N
    * xfersize = N * maxpacket
    */
    USBx_OUTEP(epnum)->DOEPTSIZ &= ~(USB_OTG_DOEPTSIZ_XFRSIZ);
 8007876:	69bb      	ldr	r3, [r7, #24]
 8007878:	015a      	lsls	r2, r3, #5
 800787a:	69fb      	ldr	r3, [r7, #28]
 800787c:	4413      	add	r3, r2
 800787e:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 8007882:	691b      	ldr	r3, [r3, #16]
 8007884:	69ba      	ldr	r2, [r7, #24]
 8007886:	0151      	lsls	r1, r2, #5
 8007888:	69fa      	ldr	r2, [r7, #28]
 800788a:	440a      	add	r2, r1
 800788c:	f502 6230 	add.w	r2, r2, #2816	; 0xb00
 8007890:	0cdb      	lsrs	r3, r3, #19
 8007892:	04db      	lsls	r3, r3, #19
 8007894:	6113      	str	r3, [r2, #16]
    USBx_OUTEP(epnum)->DOEPTSIZ &= ~(USB_OTG_DOEPTSIZ_PKTCNT);
 8007896:	69bb      	ldr	r3, [r7, #24]
 8007898:	015a      	lsls	r2, r3, #5
 800789a:	69fb      	ldr	r3, [r7, #28]
 800789c:	4413      	add	r3, r2
 800789e:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 80078a2:	691b      	ldr	r3, [r3, #16]
 80078a4:	69ba      	ldr	r2, [r7, #24]
 80078a6:	0151      	lsls	r1, r2, #5
 80078a8:	69fa      	ldr	r2, [r7, #28]
 80078aa:	440a      	add	r2, r1
 80078ac:	f502 6230 	add.w	r2, r2, #2816	; 0xb00
 80078b0:	f023 53ff 	bic.w	r3, r3, #534773760	; 0x1fe00000
 80078b4:	f423 13c0 	bic.w	r3, r3, #1572864	; 0x180000
 80078b8:	6113      	str	r3, [r2, #16]

    if (epnum == 0U)
 80078ba:	69bb      	ldr	r3, [r7, #24]
 80078bc:	2b00      	cmp	r3, #0
 80078be:	d131      	bne.n	8007924 <USB_EPStartXfer+0x3c4>
    {
      if (ep->xfer_len > 0U)
 80078c0:	68bb      	ldr	r3, [r7, #8]
 80078c2:	691b      	ldr	r3, [r3, #16]
 80078c4:	2b00      	cmp	r3, #0
 80078c6:	d003      	beq.n	80078d0 <USB_EPStartXfer+0x370>
      {
        ep->xfer_len = ep->maxpacket;
 80078c8:	68bb      	ldr	r3, [r7, #8]
 80078ca:	689a      	ldr	r2, [r3, #8]
 80078cc:	68bb      	ldr	r3, [r7, #8]
 80078ce:	611a      	str	r2, [r3, #16]
      }

      /* Store transfer size, for EP0 this is equal to endpoint max packet size */
      ep->xfer_size = ep->maxpacket;
 80078d0:	68bb      	ldr	r3, [r7, #8]
 80078d2:	689a      	ldr	r2, [r3, #8]
 80078d4:	68bb      	ldr	r3, [r7, #8]
 80078d6:	621a      	str	r2, [r3, #32]

      USBx_OUTEP(epnum)->DOEPTSIZ |= (USB_OTG_DOEPTSIZ_XFRSIZ & ep->xfer_size);
 80078d8:	69bb      	ldr	r3, [r7, #24]
 80078da:	015a      	lsls	r2, r3, #5
 80078dc:	69fb      	ldr	r3, [r7, #28]
 80078de:	4413      	add	r3, r2
 80078e0:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 80078e4:	691a      	ldr	r2, [r3, #16]
 80078e6:	68bb      	ldr	r3, [r7, #8]
 80078e8:	6a1b      	ldr	r3, [r3, #32]
 80078ea:	f3c3 0312 	ubfx	r3, r3, #0, #19
 80078ee:	69b9      	ldr	r1, [r7, #24]
 80078f0:	0148      	lsls	r0, r1, #5
 80078f2:	69f9      	ldr	r1, [r7, #28]
 80078f4:	4401      	add	r1, r0
 80078f6:	f501 6130 	add.w	r1, r1, #2816	; 0xb00
 80078fa:	4313      	orrs	r3, r2
 80078fc:	610b      	str	r3, [r1, #16]
      USBx_OUTEP(epnum)->DOEPTSIZ |= (USB_OTG_DOEPTSIZ_PKTCNT & (1U << 19));
 80078fe:	69bb      	ldr	r3, [r7, #24]
 8007900:	015a      	lsls	r2, r3, #5
 8007902:	69fb      	ldr	r3, [r7, #28]
 8007904:	4413      	add	r3, r2
 8007906:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 800790a:	691b      	ldr	r3, [r3, #16]
 800790c:	69ba      	ldr	r2, [r7, #24]
 800790e:	0151      	lsls	r1, r2, #5
 8007910:	69fa      	ldr	r2, [r7, #28]
 8007912:	440a      	add	r2, r1
 8007914:	f502 6230 	add.w	r2, r2, #2816	; 0xb00
 8007918:	f443 2300 	orr.w	r3, r3, #524288	; 0x80000
 800791c:	6113      	str	r3, [r2, #16]
 800791e:	e061      	b.n	80079e4 <USB_EPStartXfer+0x484>
 8007920:	1ff80000 	.word	0x1ff80000
    }
    else
    {
      if (ep->xfer_len == 0U)
 8007924:	68bb      	ldr	r3, [r7, #8]
 8007926:	691b      	ldr	r3, [r3, #16]
 8007928:	2b00      	cmp	r3, #0
 800792a:	d123      	bne.n	8007974 <USB_EPStartXfer+0x414>
      {
        USBx_OUTEP(epnum)->DOEPTSIZ |= (USB_OTG_DOEPTSIZ_XFRSIZ & ep->maxpacket);
 800792c:	69bb      	ldr	r3, [r7, #24]
 800792e:	015a      	lsls	r2, r3, #5
 8007930:	69fb      	ldr	r3, [r7, #28]
 8007932:	4413      	add	r3, r2
 8007934:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 8007938:	691a      	ldr	r2, [r3, #16]
 800793a:	68bb      	ldr	r3, [r7, #8]
 800793c:	689b      	ldr	r3, [r3, #8]
 800793e:	f3c3 0312 	ubfx	r3, r3, #0, #19
 8007942:	69b9      	ldr	r1, [r7, #24]
 8007944:	0148      	lsls	r0, r1, #5
 8007946:	69f9      	ldr	r1, [r7, #28]
 8007948:	4401      	add	r1, r0
 800794a:	f501 6130 	add.w	r1, r1, #2816	; 0xb00
 800794e:	4313      	orrs	r3, r2
 8007950:	610b      	str	r3, [r1, #16]
        USBx_OUTEP(epnum)->DOEPTSIZ |= (USB_OTG_DOEPTSIZ_PKTCNT & (1U << 19));
 8007952:	69bb      	ldr	r3, [r7, #24]
 8007954:	015a      	lsls	r2, r3, #5
 8007956:	69fb      	ldr	r3, [r7, #28]
 8007958:	4413      	add	r3, r2
 800795a:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 800795e:	691b      	ldr	r3, [r3, #16]
 8007960:	69ba      	ldr	r2, [r7, #24]
 8007962:	0151      	lsls	r1, r2, #5
 8007964:	69fa      	ldr	r2, [r7, #28]
 8007966:	440a      	add	r2, r1
 8007968:	f502 6230 	add.w	r2, r2, #2816	; 0xb00
 800796c:	f443 2300 	orr.w	r3, r3, #524288	; 0x80000
 8007970:	6113      	str	r3, [r2, #16]
 8007972:	e037      	b.n	80079e4 <USB_EPStartXfer+0x484>
      }
      else
      {
        pktcnt = (uint16_t)((ep->xfer_len + ep->maxpacket - 1U) / ep->maxpacket);
 8007974:	68bb      	ldr	r3, [r7, #8]
 8007976:	691a      	ldr	r2, [r3, #16]
 8007978:	68bb      	ldr	r3, [r7, #8]
 800797a:	689b      	ldr	r3, [r3, #8]
 800797c:	4413      	add	r3, r2
 800797e:	1e5a      	subs	r2, r3, #1
 8007980:	68bb      	ldr	r3, [r7, #8]
 8007982:	689b      	ldr	r3, [r3, #8]
 8007984:	fbb2 f3f3 	udiv	r3, r2, r3
 8007988:	82fb      	strh	r3, [r7, #22]
        ep->xfer_size = ep->maxpacket * pktcnt;
 800798a:	68bb      	ldr	r3, [r7, #8]
 800798c:	689b      	ldr	r3, [r3, #8]
 800798e:	8afa      	ldrh	r2, [r7, #22]
 8007990:	fb03 f202 	mul.w	r2, r3, r2
 8007994:	68bb      	ldr	r3, [r7, #8]
 8007996:	621a      	str	r2, [r3, #32]

        USBx_OUTEP(epnum)->DOEPTSIZ |= USB_OTG_DOEPTSIZ_PKTCNT & ((uint32_t)pktcnt << 19);
 8007998:	69bb      	ldr	r3, [r7, #24]
 800799a:	015a      	lsls	r2, r3, #5
 800799c:	69fb      	ldr	r3, [r7, #28]
 800799e:	4413      	add	r3, r2
 80079a0:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 80079a4:	691a      	ldr	r2, [r3, #16]
 80079a6:	8afb      	ldrh	r3, [r7, #22]
 80079a8:	04d9      	lsls	r1, r3, #19
 80079aa:	4b38      	ldr	r3, [pc, #224]	; (8007a8c <USB_EPStartXfer+0x52c>)
 80079ac:	400b      	ands	r3, r1
 80079ae:	69b9      	ldr	r1, [r7, #24]
 80079b0:	0148      	lsls	r0, r1, #5
 80079b2:	69f9      	ldr	r1, [r7, #28]
 80079b4:	4401      	add	r1, r0
 80079b6:	f501 6130 	add.w	r1, r1, #2816	; 0xb00
 80079ba:	4313      	orrs	r3, r2
 80079bc:	610b      	str	r3, [r1, #16]
        USBx_OUTEP(epnum)->DOEPTSIZ |= USB_OTG_DOEPTSIZ_XFRSIZ & ep->xfer_size;
 80079be:	69bb      	ldr	r3, [r7, #24]
 80079c0:	015a      	lsls	r2, r3, #5
 80079c2:	69fb      	ldr	r3, [r7, #28]
 80079c4:	4413      	add	r3, r2
 80079c6:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 80079ca:	691a      	ldr	r2, [r3, #16]
 80079cc:	68bb      	ldr	r3, [r7, #8]
 80079ce:	6a1b      	ldr	r3, [r3, #32]
 80079d0:	f3c3 0312 	ubfx	r3, r3, #0, #19
 80079d4:	69b9      	ldr	r1, [r7, #24]
 80079d6:	0148      	lsls	r0, r1, #5
 80079d8:	69f9      	ldr	r1, [r7, #28]
 80079da:	4401      	add	r1, r0
 80079dc:	f501 6130 	add.w	r1, r1, #2816	; 0xb00
 80079e0:	4313      	orrs	r3, r2
 80079e2:	610b      	str	r3, [r1, #16]
      }
    }

    if (dma == 1U)
 80079e4:	79fb      	ldrb	r3, [r7, #7]
 80079e6:	2b01      	cmp	r3, #1
 80079e8:	d10d      	bne.n	8007a06 <USB_EPStartXfer+0x4a6>
    {
      if ((uint32_t)ep->xfer_buff != 0U)
 80079ea:	68bb      	ldr	r3, [r7, #8]
 80079ec:	68db      	ldr	r3, [r3, #12]
 80079ee:	2b00      	cmp	r3, #0
 80079f0:	d009      	beq.n	8007a06 <USB_EPStartXfer+0x4a6>
      {
        USBx_OUTEP(epnum)->DOEPDMA = (uint32_t)(ep->xfer_buff);
 80079f2:	68bb      	ldr	r3, [r7, #8]
 80079f4:	68d9      	ldr	r1, [r3, #12]
 80079f6:	69bb      	ldr	r3, [r7, #24]
 80079f8:	015a      	lsls	r2, r3, #5
 80079fa:	69fb      	ldr	r3, [r7, #28]
 80079fc:	4413      	add	r3, r2
 80079fe:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 8007a02:	460a      	mov	r2, r1
 8007a04:	615a      	str	r2, [r3, #20]
      }
    }

    if (ep->type == EP_TYPE_ISOC)
 8007a06:	68bb      	ldr	r3, [r7, #8]
 8007a08:	791b      	ldrb	r3, [r3, #4]
 8007a0a:	2b01      	cmp	r3, #1
 8007a0c:	d128      	bne.n	8007a60 <USB_EPStartXfer+0x500>
    {
      if ((USBx_DEVICE->DSTS & (1U << 8)) == 0U)
 8007a0e:	69fb      	ldr	r3, [r7, #28]
 8007a10:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 8007a14:	689b      	ldr	r3, [r3, #8]
 8007a16:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8007a1a:	2b00      	cmp	r3, #0
 8007a1c:	d110      	bne.n	8007a40 <USB_EPStartXfer+0x4e0>
      {
        USBx_OUTEP(epnum)->DOEPCTL |= USB_OTG_DOEPCTL_SODDFRM;
 8007a1e:	69bb      	ldr	r3, [r7, #24]
 8007a20:	015a      	lsls	r2, r3, #5
 8007a22:	69fb      	ldr	r3, [r7, #28]
 8007a24:	4413      	add	r3, r2
 8007a26:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 8007a2a:	681b      	ldr	r3, [r3, #0]
 8007a2c:	69ba      	ldr	r2, [r7, #24]
 8007a2e:	0151      	lsls	r1, r2, #5
 8007a30:	69fa      	ldr	r2, [r7, #28]
 8007a32:	440a      	add	r2, r1
 8007a34:	f502 6230 	add.w	r2, r2, #2816	; 0xb00
 8007a38:	f043 5300 	orr.w	r3, r3, #536870912	; 0x20000000
 8007a3c:	6013      	str	r3, [r2, #0]
 8007a3e:	e00f      	b.n	8007a60 <USB_EPStartXfer+0x500>
      }
      else
      {
        USBx_OUTEP(epnum)->DOEPCTL |= USB_OTG_DOEPCTL_SD0PID_SEVNFRM;
 8007a40:	69bb      	ldr	r3, [r7, #24]
 8007a42:	015a      	lsls	r2, r3, #5
 8007a44:	69fb      	ldr	r3, [r7, #28]
 8007a46:	4413      	add	r3, r2
 8007a48:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 8007a4c:	681b      	ldr	r3, [r3, #0]
 8007a4e:	69ba      	ldr	r2, [r7, #24]
 8007a50:	0151      	lsls	r1, r2, #5
 8007a52:	69fa      	ldr	r2, [r7, #28]
 8007a54:	440a      	add	r2, r1
 8007a56:	f502 6230 	add.w	r2, r2, #2816	; 0xb00
 8007a5a:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8007a5e:	6013      	str	r3, [r2, #0]
      }
    }
    /* EP enable */
    USBx_OUTEP(epnum)->DOEPCTL |= (USB_OTG_DOEPCTL_CNAK | USB_OTG_DOEPCTL_EPENA);
 8007a60:	69bb      	ldr	r3, [r7, #24]
 8007a62:	015a      	lsls	r2, r3, #5
 8007a64:	69fb      	ldr	r3, [r7, #28]
 8007a66:	4413      	add	r3, r2
 8007a68:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 8007a6c:	681b      	ldr	r3, [r3, #0]
 8007a6e:	69ba      	ldr	r2, [r7, #24]
 8007a70:	0151      	lsls	r1, r2, #5
 8007a72:	69fa      	ldr	r2, [r7, #28]
 8007a74:	440a      	add	r2, r1
 8007a76:	f502 6230 	add.w	r2, r2, #2816	; 0xb00
 8007a7a:	f043 4304 	orr.w	r3, r3, #2214592512	; 0x84000000
 8007a7e:	6013      	str	r3, [r2, #0]
  }

  return HAL_OK;
 8007a80:	2300      	movs	r3, #0
}
 8007a82:	4618      	mov	r0, r3
 8007a84:	3720      	adds	r7, #32
 8007a86:	46bd      	mov	sp, r7
 8007a88:	bd80      	pop	{r7, pc}
 8007a8a:	bf00      	nop
 8007a8c:	1ff80000 	.word	0x1ff80000

08007a90 <USB_EPStopXfer>:
   * @param  USBx  usb device instance
   * @param  ep pointer to endpoint structure
   * @retval HAL status
   */
HAL_StatusTypeDef USB_EPStopXfer(const USB_OTG_GlobalTypeDef *USBx, USB_OTG_EPTypeDef *ep)
{
 8007a90:	b480      	push	{r7}
 8007a92:	b087      	sub	sp, #28
 8007a94:	af00      	add	r7, sp, #0
 8007a96:	6078      	str	r0, [r7, #4]
 8007a98:	6039      	str	r1, [r7, #0]
  __IO uint32_t count = 0U;
 8007a9a:	2300      	movs	r3, #0
 8007a9c:	60fb      	str	r3, [r7, #12]
  HAL_StatusTypeDef ret = HAL_OK;
 8007a9e:	2300      	movs	r3, #0
 8007aa0:	75fb      	strb	r3, [r7, #23]
  uint32_t USBx_BASE = (uint32_t)USBx;
 8007aa2:	687b      	ldr	r3, [r7, #4]
 8007aa4:	613b      	str	r3, [r7, #16]

  /* IN endpoint */
  if (ep->is_in == 1U)
 8007aa6:	683b      	ldr	r3, [r7, #0]
 8007aa8:	785b      	ldrb	r3, [r3, #1]
 8007aaa:	2b01      	cmp	r3, #1
 8007aac:	d14a      	bne.n	8007b44 <USB_EPStopXfer+0xb4>
  {
    /* EP enable, IN data in FIFO */
    if (((USBx_INEP(ep->num)->DIEPCTL) & USB_OTG_DIEPCTL_EPENA) == USB_OTG_DIEPCTL_EPENA)
 8007aae:	683b      	ldr	r3, [r7, #0]
 8007ab0:	781b      	ldrb	r3, [r3, #0]
 8007ab2:	015a      	lsls	r2, r3, #5
 8007ab4:	693b      	ldr	r3, [r7, #16]
 8007ab6:	4413      	add	r3, r2
 8007ab8:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 8007abc:	681b      	ldr	r3, [r3, #0]
 8007abe:	f003 4300 	and.w	r3, r3, #2147483648	; 0x80000000
 8007ac2:	f1b3 4f00 	cmp.w	r3, #2147483648	; 0x80000000
 8007ac6:	f040 8086 	bne.w	8007bd6 <USB_EPStopXfer+0x146>
    {
      USBx_INEP(ep->num)->DIEPCTL |= (USB_OTG_DIEPCTL_SNAK);
 8007aca:	683b      	ldr	r3, [r7, #0]
 8007acc:	781b      	ldrb	r3, [r3, #0]
 8007ace:	015a      	lsls	r2, r3, #5
 8007ad0:	693b      	ldr	r3, [r7, #16]
 8007ad2:	4413      	add	r3, r2
 8007ad4:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 8007ad8:	681b      	ldr	r3, [r3, #0]
 8007ada:	683a      	ldr	r2, [r7, #0]
 8007adc:	7812      	ldrb	r2, [r2, #0]
 8007ade:	0151      	lsls	r1, r2, #5
 8007ae0:	693a      	ldr	r2, [r7, #16]
 8007ae2:	440a      	add	r2, r1
 8007ae4:	f502 6210 	add.w	r2, r2, #2304	; 0x900
 8007ae8:	f043 6300 	orr.w	r3, r3, #134217728	; 0x8000000
 8007aec:	6013      	str	r3, [r2, #0]
      USBx_INEP(ep->num)->DIEPCTL |= (USB_OTG_DIEPCTL_EPDIS);
 8007aee:	683b      	ldr	r3, [r7, #0]
 8007af0:	781b      	ldrb	r3, [r3, #0]
 8007af2:	015a      	lsls	r2, r3, #5
 8007af4:	693b      	ldr	r3, [r7, #16]
 8007af6:	4413      	add	r3, r2
 8007af8:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 8007afc:	681b      	ldr	r3, [r3, #0]
 8007afe:	683a      	ldr	r2, [r7, #0]
 8007b00:	7812      	ldrb	r2, [r2, #0]
 8007b02:	0151      	lsls	r1, r2, #5
 8007b04:	693a      	ldr	r2, [r7, #16]
 8007b06:	440a      	add	r2, r1
 8007b08:	f502 6210 	add.w	r2, r2, #2304	; 0x900
 8007b0c:	f043 4380 	orr.w	r3, r3, #1073741824	; 0x40000000
 8007b10:	6013      	str	r3, [r2, #0]

      do
      {
        count++;
 8007b12:	68fb      	ldr	r3, [r7, #12]
 8007b14:	3301      	adds	r3, #1
 8007b16:	60fb      	str	r3, [r7, #12]

        if (count > 10000U)
 8007b18:	68fb      	ldr	r3, [r7, #12]
 8007b1a:	f242 7210 	movw	r2, #10000	; 0x2710
 8007b1e:	4293      	cmp	r3, r2
 8007b20:	d902      	bls.n	8007b28 <USB_EPStopXfer+0x98>
        {
          ret = HAL_ERROR;
 8007b22:	2301      	movs	r3, #1
 8007b24:	75fb      	strb	r3, [r7, #23]
          break;
 8007b26:	e056      	b.n	8007bd6 <USB_EPStopXfer+0x146>
        }
      } while (((USBx_INEP(ep->num)->DIEPCTL) & USB_OTG_DIEPCTL_EPENA) ==  USB_OTG_DIEPCTL_EPENA);
 8007b28:	683b      	ldr	r3, [r7, #0]
 8007b2a:	781b      	ldrb	r3, [r3, #0]
 8007b2c:	015a      	lsls	r2, r3, #5
 8007b2e:	693b      	ldr	r3, [r7, #16]
 8007b30:	4413      	add	r3, r2
 8007b32:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 8007b36:	681b      	ldr	r3, [r3, #0]
 8007b38:	f003 4300 	and.w	r3, r3, #2147483648	; 0x80000000
 8007b3c:	f1b3 4f00 	cmp.w	r3, #2147483648	; 0x80000000
 8007b40:	d0e7      	beq.n	8007b12 <USB_EPStopXfer+0x82>
 8007b42:	e048      	b.n	8007bd6 <USB_EPStopXfer+0x146>
    }
  }
  else /* OUT endpoint */
  {
    if (((USBx_OUTEP(ep->num)->DOEPCTL) & USB_OTG_DOEPCTL_EPENA) == USB_OTG_DOEPCTL_EPENA)
 8007b44:	683b      	ldr	r3, [r7, #0]
 8007b46:	781b      	ldrb	r3, [r3, #0]
 8007b48:	015a      	lsls	r2, r3, #5
 8007b4a:	693b      	ldr	r3, [r7, #16]
 8007b4c:	4413      	add	r3, r2
 8007b4e:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 8007b52:	681b      	ldr	r3, [r3, #0]
 8007b54:	f003 4300 	and.w	r3, r3, #2147483648	; 0x80000000
 8007b58:	f1b3 4f00 	cmp.w	r3, #2147483648	; 0x80000000
 8007b5c:	d13b      	bne.n	8007bd6 <USB_EPStopXfer+0x146>
    {
      USBx_OUTEP(ep->num)->DOEPCTL |= (USB_OTG_DOEPCTL_SNAK);
 8007b5e:	683b      	ldr	r3, [r7, #0]
 8007b60:	781b      	ldrb	r3, [r3, #0]
 8007b62:	015a      	lsls	r2, r3, #5
 8007b64:	693b      	ldr	r3, [r7, #16]
 8007b66:	4413      	add	r3, r2
 8007b68:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 8007b6c:	681b      	ldr	r3, [r3, #0]
 8007b6e:	683a      	ldr	r2, [r7, #0]
 8007b70:	7812      	ldrb	r2, [r2, #0]
 8007b72:	0151      	lsls	r1, r2, #5
 8007b74:	693a      	ldr	r2, [r7, #16]
 8007b76:	440a      	add	r2, r1
 8007b78:	f502 6230 	add.w	r2, r2, #2816	; 0xb00
 8007b7c:	f043 6300 	orr.w	r3, r3, #134217728	; 0x8000000
 8007b80:	6013      	str	r3, [r2, #0]
      USBx_OUTEP(ep->num)->DOEPCTL |= (USB_OTG_DOEPCTL_EPDIS);
 8007b82:	683b      	ldr	r3, [r7, #0]
 8007b84:	781b      	ldrb	r3, [r3, #0]
 8007b86:	015a      	lsls	r2, r3, #5
 8007b88:	693b      	ldr	r3, [r7, #16]
 8007b8a:	4413      	add	r3, r2
 8007b8c:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 8007b90:	681b      	ldr	r3, [r3, #0]
 8007b92:	683a      	ldr	r2, [r7, #0]
 8007b94:	7812      	ldrb	r2, [r2, #0]
 8007b96:	0151      	lsls	r1, r2, #5
 8007b98:	693a      	ldr	r2, [r7, #16]
 8007b9a:	440a      	add	r2, r1
 8007b9c:	f502 6230 	add.w	r2, r2, #2816	; 0xb00
 8007ba0:	f043 4380 	orr.w	r3, r3, #1073741824	; 0x40000000
 8007ba4:	6013      	str	r3, [r2, #0]

      do
      {
        count++;
 8007ba6:	68fb      	ldr	r3, [r7, #12]
 8007ba8:	3301      	adds	r3, #1
 8007baa:	60fb      	str	r3, [r7, #12]

        if (count > 10000U)
 8007bac:	68fb      	ldr	r3, [r7, #12]
 8007bae:	f242 7210 	movw	r2, #10000	; 0x2710
 8007bb2:	4293      	cmp	r3, r2
 8007bb4:	d902      	bls.n	8007bbc <USB_EPStopXfer+0x12c>
        {
          ret = HAL_ERROR;
 8007bb6:	2301      	movs	r3, #1
 8007bb8:	75fb      	strb	r3, [r7, #23]
          break;
 8007bba:	e00c      	b.n	8007bd6 <USB_EPStopXfer+0x146>
        }
      } while (((USBx_OUTEP(ep->num)->DOEPCTL) & USB_OTG_DOEPCTL_EPENA) ==  USB_OTG_DOEPCTL_EPENA);
 8007bbc:	683b      	ldr	r3, [r7, #0]
 8007bbe:	781b      	ldrb	r3, [r3, #0]
 8007bc0:	015a      	lsls	r2, r3, #5
 8007bc2:	693b      	ldr	r3, [r7, #16]
 8007bc4:	4413      	add	r3, r2
 8007bc6:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 8007bca:	681b      	ldr	r3, [r3, #0]
 8007bcc:	f003 4300 	and.w	r3, r3, #2147483648	; 0x80000000
 8007bd0:	f1b3 4f00 	cmp.w	r3, #2147483648	; 0x80000000
 8007bd4:	d0e7      	beq.n	8007ba6 <USB_EPStopXfer+0x116>
    }
  }

  return ret;
 8007bd6:	7dfb      	ldrb	r3, [r7, #23]
}
 8007bd8:	4618      	mov	r0, r3
 8007bda:	371c      	adds	r7, #28
 8007bdc:	46bd      	mov	sp, r7
 8007bde:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007be2:	4770      	bx	lr

08007be4 <USB_WritePacket>:
  *           1 : DMA feature used
  * @retval HAL status
  */
HAL_StatusTypeDef USB_WritePacket(const USB_OTG_GlobalTypeDef *USBx, uint8_t *src,
                                  uint8_t ch_ep_num, uint16_t len, uint8_t dma)
{
 8007be4:	b480      	push	{r7}
 8007be6:	b089      	sub	sp, #36	; 0x24
 8007be8:	af00      	add	r7, sp, #0
 8007bea:	60f8      	str	r0, [r7, #12]
 8007bec:	60b9      	str	r1, [r7, #8]
 8007bee:	4611      	mov	r1, r2
 8007bf0:	461a      	mov	r2, r3
 8007bf2:	460b      	mov	r3, r1
 8007bf4:	71fb      	strb	r3, [r7, #7]
 8007bf6:	4613      	mov	r3, r2
 8007bf8:	80bb      	strh	r3, [r7, #4]
  uint32_t USBx_BASE = (uint32_t)USBx;
 8007bfa:	68fb      	ldr	r3, [r7, #12]
 8007bfc:	617b      	str	r3, [r7, #20]
  uint8_t *pSrc = src;
 8007bfe:	68bb      	ldr	r3, [r7, #8]
 8007c00:	61fb      	str	r3, [r7, #28]
  uint32_t count32b;
  uint32_t i;

  if (dma == 0U)
 8007c02:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
 8007c06:	2b00      	cmp	r3, #0
 8007c08:	d123      	bne.n	8007c52 <USB_WritePacket+0x6e>
  {
    count32b = ((uint32_t)len + 3U) / 4U;
 8007c0a:	88bb      	ldrh	r3, [r7, #4]
 8007c0c:	3303      	adds	r3, #3
 8007c0e:	089b      	lsrs	r3, r3, #2
 8007c10:	613b      	str	r3, [r7, #16]
    for (i = 0U; i < count32b; i++)
 8007c12:	2300      	movs	r3, #0
 8007c14:	61bb      	str	r3, [r7, #24]
 8007c16:	e018      	b.n	8007c4a <USB_WritePacket+0x66>
    {
      USBx_DFIFO((uint32_t)ch_ep_num) = __UNALIGNED_UINT32_READ(pSrc);
 8007c18:	79fb      	ldrb	r3, [r7, #7]
 8007c1a:	031a      	lsls	r2, r3, #12
 8007c1c:	697b      	ldr	r3, [r7, #20]
 8007c1e:	4413      	add	r3, r2
 8007c20:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 8007c24:	461a      	mov	r2, r3
 8007c26:	69fb      	ldr	r3, [r7, #28]
 8007c28:	681b      	ldr	r3, [r3, #0]
 8007c2a:	6013      	str	r3, [r2, #0]
      pSrc++;
 8007c2c:	69fb      	ldr	r3, [r7, #28]
 8007c2e:	3301      	adds	r3, #1
 8007c30:	61fb      	str	r3, [r7, #28]
      pSrc++;
 8007c32:	69fb      	ldr	r3, [r7, #28]
 8007c34:	3301      	adds	r3, #1
 8007c36:	61fb      	str	r3, [r7, #28]
      pSrc++;
 8007c38:	69fb      	ldr	r3, [r7, #28]
 8007c3a:	3301      	adds	r3, #1
 8007c3c:	61fb      	str	r3, [r7, #28]
      pSrc++;
 8007c3e:	69fb      	ldr	r3, [r7, #28]
 8007c40:	3301      	adds	r3, #1
 8007c42:	61fb      	str	r3, [r7, #28]
    for (i = 0U; i < count32b; i++)
 8007c44:	69bb      	ldr	r3, [r7, #24]
 8007c46:	3301      	adds	r3, #1
 8007c48:	61bb      	str	r3, [r7, #24]
 8007c4a:	69ba      	ldr	r2, [r7, #24]
 8007c4c:	693b      	ldr	r3, [r7, #16]
 8007c4e:	429a      	cmp	r2, r3
 8007c50:	d3e2      	bcc.n	8007c18 <USB_WritePacket+0x34>
    }
  }

  return HAL_OK;
 8007c52:	2300      	movs	r3, #0
}
 8007c54:	4618      	mov	r0, r3
 8007c56:	3724      	adds	r7, #36	; 0x24
 8007c58:	46bd      	mov	sp, r7
 8007c5a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007c5e:	4770      	bx	lr

08007c60 <USB_ReadPacket>:
  * @param  dest  source pointer
  * @param  len  Number of bytes to read
  * @retval pointer to destination buffer
  */
void *USB_ReadPacket(const USB_OTG_GlobalTypeDef *USBx, uint8_t *dest, uint16_t len)
{
 8007c60:	b480      	push	{r7}
 8007c62:	b08b      	sub	sp, #44	; 0x2c
 8007c64:	af00      	add	r7, sp, #0
 8007c66:	60f8      	str	r0, [r7, #12]
 8007c68:	60b9      	str	r1, [r7, #8]
 8007c6a:	4613      	mov	r3, r2
 8007c6c:	80fb      	strh	r3, [r7, #6]
  uint32_t USBx_BASE = (uint32_t)USBx;
 8007c6e:	68fb      	ldr	r3, [r7, #12]
 8007c70:	61bb      	str	r3, [r7, #24]
  uint8_t *pDest = dest;
 8007c72:	68bb      	ldr	r3, [r7, #8]
 8007c74:	627b      	str	r3, [r7, #36]	; 0x24
  uint32_t pData;
  uint32_t i;
  uint32_t count32b = (uint32_t)len >> 2U;
 8007c76:	88fb      	ldrh	r3, [r7, #6]
 8007c78:	089b      	lsrs	r3, r3, #2
 8007c7a:	b29b      	uxth	r3, r3
 8007c7c:	617b      	str	r3, [r7, #20]
  uint16_t remaining_bytes = len % 4U;
 8007c7e:	88fb      	ldrh	r3, [r7, #6]
 8007c80:	f003 0303 	and.w	r3, r3, #3
 8007c84:	83fb      	strh	r3, [r7, #30]

  for (i = 0U; i < count32b; i++)
 8007c86:	2300      	movs	r3, #0
 8007c88:	623b      	str	r3, [r7, #32]
 8007c8a:	e014      	b.n	8007cb6 <USB_ReadPacket+0x56>
  {
    __UNALIGNED_UINT32_WRITE(pDest, USBx_DFIFO(0U));
 8007c8c:	69bb      	ldr	r3, [r7, #24]
 8007c8e:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 8007c92:	681a      	ldr	r2, [r3, #0]
 8007c94:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8007c96:	601a      	str	r2, [r3, #0]
    pDest++;
 8007c98:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8007c9a:	3301      	adds	r3, #1
 8007c9c:	627b      	str	r3, [r7, #36]	; 0x24
    pDest++;
 8007c9e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8007ca0:	3301      	adds	r3, #1
 8007ca2:	627b      	str	r3, [r7, #36]	; 0x24
    pDest++;
 8007ca4:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8007ca6:	3301      	adds	r3, #1
 8007ca8:	627b      	str	r3, [r7, #36]	; 0x24
    pDest++;
 8007caa:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8007cac:	3301      	adds	r3, #1
 8007cae:	627b      	str	r3, [r7, #36]	; 0x24
  for (i = 0U; i < count32b; i++)
 8007cb0:	6a3b      	ldr	r3, [r7, #32]
 8007cb2:	3301      	adds	r3, #1
 8007cb4:	623b      	str	r3, [r7, #32]
 8007cb6:	6a3a      	ldr	r2, [r7, #32]
 8007cb8:	697b      	ldr	r3, [r7, #20]
 8007cba:	429a      	cmp	r2, r3
 8007cbc:	d3e6      	bcc.n	8007c8c <USB_ReadPacket+0x2c>
  }

  /* When Number of data is not word aligned, read the remaining byte */
  if (remaining_bytes != 0U)
 8007cbe:	8bfb      	ldrh	r3, [r7, #30]
 8007cc0:	2b00      	cmp	r3, #0
 8007cc2:	d01e      	beq.n	8007d02 <USB_ReadPacket+0xa2>
  {
    i = 0U;
 8007cc4:	2300      	movs	r3, #0
 8007cc6:	623b      	str	r3, [r7, #32]
    __UNALIGNED_UINT32_WRITE(&pData, USBx_DFIFO(0U));
 8007cc8:	69bb      	ldr	r3, [r7, #24]
 8007cca:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 8007cce:	461a      	mov	r2, r3
 8007cd0:	f107 0310 	add.w	r3, r7, #16
 8007cd4:	6812      	ldr	r2, [r2, #0]
 8007cd6:	601a      	str	r2, [r3, #0]

    do
    {
      *(uint8_t *)pDest = (uint8_t)(pData >> (8U * (uint8_t)(i)));
 8007cd8:	693a      	ldr	r2, [r7, #16]
 8007cda:	6a3b      	ldr	r3, [r7, #32]
 8007cdc:	b2db      	uxtb	r3, r3
 8007cde:	00db      	lsls	r3, r3, #3
 8007ce0:	fa22 f303 	lsr.w	r3, r2, r3
 8007ce4:	b2da      	uxtb	r2, r3
 8007ce6:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8007ce8:	701a      	strb	r2, [r3, #0]
      i++;
 8007cea:	6a3b      	ldr	r3, [r7, #32]
 8007cec:	3301      	adds	r3, #1
 8007cee:	623b      	str	r3, [r7, #32]
      pDest++;
 8007cf0:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8007cf2:	3301      	adds	r3, #1
 8007cf4:	627b      	str	r3, [r7, #36]	; 0x24
      remaining_bytes--;
 8007cf6:	8bfb      	ldrh	r3, [r7, #30]
 8007cf8:	3b01      	subs	r3, #1
 8007cfa:	83fb      	strh	r3, [r7, #30]
    } while (remaining_bytes != 0U);
 8007cfc:	8bfb      	ldrh	r3, [r7, #30]
 8007cfe:	2b00      	cmp	r3, #0
 8007d00:	d1ea      	bne.n	8007cd8 <USB_ReadPacket+0x78>
  }

  return ((void *)pDest);
 8007d02:	6a7b      	ldr	r3, [r7, #36]	; 0x24
}
 8007d04:	4618      	mov	r0, r3
 8007d06:	372c      	adds	r7, #44	; 0x2c
 8007d08:	46bd      	mov	sp, r7
 8007d0a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007d0e:	4770      	bx	lr

08007d10 <USB_EPSetStall>:
  * @param  USBx  Selected device
  * @param  ep pointer to endpoint structure
  * @retval HAL status
  */
HAL_StatusTypeDef USB_EPSetStall(const USB_OTG_GlobalTypeDef *USBx, const USB_OTG_EPTypeDef *ep)
{
 8007d10:	b480      	push	{r7}
 8007d12:	b085      	sub	sp, #20
 8007d14:	af00      	add	r7, sp, #0
 8007d16:	6078      	str	r0, [r7, #4]
 8007d18:	6039      	str	r1, [r7, #0]
  uint32_t USBx_BASE = (uint32_t)USBx;
 8007d1a:	687b      	ldr	r3, [r7, #4]
 8007d1c:	60fb      	str	r3, [r7, #12]
  uint32_t epnum = (uint32_t)ep->num;
 8007d1e:	683b      	ldr	r3, [r7, #0]
 8007d20:	781b      	ldrb	r3, [r3, #0]
 8007d22:	60bb      	str	r3, [r7, #8]

  if (ep->is_in == 1U)
 8007d24:	683b      	ldr	r3, [r7, #0]
 8007d26:	785b      	ldrb	r3, [r3, #1]
 8007d28:	2b01      	cmp	r3, #1
 8007d2a:	d12c      	bne.n	8007d86 <USB_EPSetStall+0x76>
  {
    if (((USBx_INEP(epnum)->DIEPCTL & USB_OTG_DIEPCTL_EPENA) == 0U) && (epnum != 0U))
 8007d2c:	68bb      	ldr	r3, [r7, #8]
 8007d2e:	015a      	lsls	r2, r3, #5
 8007d30:	68fb      	ldr	r3, [r7, #12]
 8007d32:	4413      	add	r3, r2
 8007d34:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 8007d38:	681b      	ldr	r3, [r3, #0]
 8007d3a:	2b00      	cmp	r3, #0
 8007d3c:	db12      	blt.n	8007d64 <USB_EPSetStall+0x54>
 8007d3e:	68bb      	ldr	r3, [r7, #8]
 8007d40:	2b00      	cmp	r3, #0
 8007d42:	d00f      	beq.n	8007d64 <USB_EPSetStall+0x54>
    {
      USBx_INEP(epnum)->DIEPCTL &= ~(USB_OTG_DIEPCTL_EPDIS);
 8007d44:	68bb      	ldr	r3, [r7, #8]
 8007d46:	015a      	lsls	r2, r3, #5
 8007d48:	68fb      	ldr	r3, [r7, #12]
 8007d4a:	4413      	add	r3, r2
 8007d4c:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 8007d50:	681b      	ldr	r3, [r3, #0]
 8007d52:	68ba      	ldr	r2, [r7, #8]
 8007d54:	0151      	lsls	r1, r2, #5
 8007d56:	68fa      	ldr	r2, [r7, #12]
 8007d58:	440a      	add	r2, r1
 8007d5a:	f502 6210 	add.w	r2, r2, #2304	; 0x900
 8007d5e:	f023 4380 	bic.w	r3, r3, #1073741824	; 0x40000000
 8007d62:	6013      	str	r3, [r2, #0]
    }
    USBx_INEP(epnum)->DIEPCTL |= USB_OTG_DIEPCTL_STALL;
 8007d64:	68bb      	ldr	r3, [r7, #8]
 8007d66:	015a      	lsls	r2, r3, #5
 8007d68:	68fb      	ldr	r3, [r7, #12]
 8007d6a:	4413      	add	r3, r2
 8007d6c:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 8007d70:	681b      	ldr	r3, [r3, #0]
 8007d72:	68ba      	ldr	r2, [r7, #8]
 8007d74:	0151      	lsls	r1, r2, #5
 8007d76:	68fa      	ldr	r2, [r7, #12]
 8007d78:	440a      	add	r2, r1
 8007d7a:	f502 6210 	add.w	r2, r2, #2304	; 0x900
 8007d7e:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 8007d82:	6013      	str	r3, [r2, #0]
 8007d84:	e02b      	b.n	8007dde <USB_EPSetStall+0xce>
  }
  else
  {
    if (((USBx_OUTEP(epnum)->DOEPCTL & USB_OTG_DOEPCTL_EPENA) == 0U) && (epnum != 0U))
 8007d86:	68bb      	ldr	r3, [r7, #8]
 8007d88:	015a      	lsls	r2, r3, #5
 8007d8a:	68fb      	ldr	r3, [r7, #12]
 8007d8c:	4413      	add	r3, r2
 8007d8e:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 8007d92:	681b      	ldr	r3, [r3, #0]
 8007d94:	2b00      	cmp	r3, #0
 8007d96:	db12      	blt.n	8007dbe <USB_EPSetStall+0xae>
 8007d98:	68bb      	ldr	r3, [r7, #8]
 8007d9a:	2b00      	cmp	r3, #0
 8007d9c:	d00f      	beq.n	8007dbe <USB_EPSetStall+0xae>
    {
      USBx_OUTEP(epnum)->DOEPCTL &= ~(USB_OTG_DOEPCTL_EPDIS);
 8007d9e:	68bb      	ldr	r3, [r7, #8]
 8007da0:	015a      	lsls	r2, r3, #5
 8007da2:	68fb      	ldr	r3, [r7, #12]
 8007da4:	4413      	add	r3, r2
 8007da6:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 8007daa:	681b      	ldr	r3, [r3, #0]
 8007dac:	68ba      	ldr	r2, [r7, #8]
 8007dae:	0151      	lsls	r1, r2, #5
 8007db0:	68fa      	ldr	r2, [r7, #12]
 8007db2:	440a      	add	r2, r1
 8007db4:	f502 6230 	add.w	r2, r2, #2816	; 0xb00
 8007db8:	f023 4380 	bic.w	r3, r3, #1073741824	; 0x40000000
 8007dbc:	6013      	str	r3, [r2, #0]
    }
    USBx_OUTEP(epnum)->DOEPCTL |= USB_OTG_DOEPCTL_STALL;
 8007dbe:	68bb      	ldr	r3, [r7, #8]
 8007dc0:	015a      	lsls	r2, r3, #5
 8007dc2:	68fb      	ldr	r3, [r7, #12]
 8007dc4:	4413      	add	r3, r2
 8007dc6:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 8007dca:	681b      	ldr	r3, [r3, #0]
 8007dcc:	68ba      	ldr	r2, [r7, #8]
 8007dce:	0151      	lsls	r1, r2, #5
 8007dd0:	68fa      	ldr	r2, [r7, #12]
 8007dd2:	440a      	add	r2, r1
 8007dd4:	f502 6230 	add.w	r2, r2, #2816	; 0xb00
 8007dd8:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 8007ddc:	6013      	str	r3, [r2, #0]
  }

  return HAL_OK;
 8007dde:	2300      	movs	r3, #0
}
 8007de0:	4618      	mov	r0, r3
 8007de2:	3714      	adds	r7, #20
 8007de4:	46bd      	mov	sp, r7
 8007de6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007dea:	4770      	bx	lr

08007dec <USB_EPClearStall>:
  * @param  USBx  Selected device
  * @param  ep pointer to endpoint structure
  * @retval HAL status
  */
HAL_StatusTypeDef USB_EPClearStall(const USB_OTG_GlobalTypeDef *USBx, const USB_OTG_EPTypeDef *ep)
{
 8007dec:	b480      	push	{r7}
 8007dee:	b085      	sub	sp, #20
 8007df0:	af00      	add	r7, sp, #0
 8007df2:	6078      	str	r0, [r7, #4]
 8007df4:	6039      	str	r1, [r7, #0]
  uint32_t USBx_BASE = (uint32_t)USBx;
 8007df6:	687b      	ldr	r3, [r7, #4]
 8007df8:	60fb      	str	r3, [r7, #12]
  uint32_t epnum = (uint32_t)ep->num;
 8007dfa:	683b      	ldr	r3, [r7, #0]
 8007dfc:	781b      	ldrb	r3, [r3, #0]
 8007dfe:	60bb      	str	r3, [r7, #8]

  if (ep->is_in == 1U)
 8007e00:	683b      	ldr	r3, [r7, #0]
 8007e02:	785b      	ldrb	r3, [r3, #1]
 8007e04:	2b01      	cmp	r3, #1
 8007e06:	d128      	bne.n	8007e5a <USB_EPClearStall+0x6e>
  {
    USBx_INEP(epnum)->DIEPCTL &= ~USB_OTG_DIEPCTL_STALL;
 8007e08:	68bb      	ldr	r3, [r7, #8]
 8007e0a:	015a      	lsls	r2, r3, #5
 8007e0c:	68fb      	ldr	r3, [r7, #12]
 8007e0e:	4413      	add	r3, r2
 8007e10:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 8007e14:	681b      	ldr	r3, [r3, #0]
 8007e16:	68ba      	ldr	r2, [r7, #8]
 8007e18:	0151      	lsls	r1, r2, #5
 8007e1a:	68fa      	ldr	r2, [r7, #12]
 8007e1c:	440a      	add	r2, r1
 8007e1e:	f502 6210 	add.w	r2, r2, #2304	; 0x900
 8007e22:	f423 1300 	bic.w	r3, r3, #2097152	; 0x200000
 8007e26:	6013      	str	r3, [r2, #0]
    if ((ep->type == EP_TYPE_INTR) || (ep->type == EP_TYPE_BULK))
 8007e28:	683b      	ldr	r3, [r7, #0]
 8007e2a:	791b      	ldrb	r3, [r3, #4]
 8007e2c:	2b03      	cmp	r3, #3
 8007e2e:	d003      	beq.n	8007e38 <USB_EPClearStall+0x4c>
 8007e30:	683b      	ldr	r3, [r7, #0]
 8007e32:	791b      	ldrb	r3, [r3, #4]
 8007e34:	2b02      	cmp	r3, #2
 8007e36:	d138      	bne.n	8007eaa <USB_EPClearStall+0xbe>
    {
      USBx_INEP(epnum)->DIEPCTL |= USB_OTG_DIEPCTL_SD0PID_SEVNFRM; /* DATA0 */
 8007e38:	68bb      	ldr	r3, [r7, #8]
 8007e3a:	015a      	lsls	r2, r3, #5
 8007e3c:	68fb      	ldr	r3, [r7, #12]
 8007e3e:	4413      	add	r3, r2
 8007e40:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 8007e44:	681b      	ldr	r3, [r3, #0]
 8007e46:	68ba      	ldr	r2, [r7, #8]
 8007e48:	0151      	lsls	r1, r2, #5
 8007e4a:	68fa      	ldr	r2, [r7, #12]
 8007e4c:	440a      	add	r2, r1
 8007e4e:	f502 6210 	add.w	r2, r2, #2304	; 0x900
 8007e52:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8007e56:	6013      	str	r3, [r2, #0]
 8007e58:	e027      	b.n	8007eaa <USB_EPClearStall+0xbe>
    }
  }
  else
  {
    USBx_OUTEP(epnum)->DOEPCTL &= ~USB_OTG_DOEPCTL_STALL;
 8007e5a:	68bb      	ldr	r3, [r7, #8]
 8007e5c:	015a      	lsls	r2, r3, #5
 8007e5e:	68fb      	ldr	r3, [r7, #12]
 8007e60:	4413      	add	r3, r2
 8007e62:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 8007e66:	681b      	ldr	r3, [r3, #0]
 8007e68:	68ba      	ldr	r2, [r7, #8]
 8007e6a:	0151      	lsls	r1, r2, #5
 8007e6c:	68fa      	ldr	r2, [r7, #12]
 8007e6e:	440a      	add	r2, r1
 8007e70:	f502 6230 	add.w	r2, r2, #2816	; 0xb00
 8007e74:	f423 1300 	bic.w	r3, r3, #2097152	; 0x200000
 8007e78:	6013      	str	r3, [r2, #0]
    if ((ep->type == EP_TYPE_INTR) || (ep->type == EP_TYPE_BULK))
 8007e7a:	683b      	ldr	r3, [r7, #0]
 8007e7c:	791b      	ldrb	r3, [r3, #4]
 8007e7e:	2b03      	cmp	r3, #3
 8007e80:	d003      	beq.n	8007e8a <USB_EPClearStall+0x9e>
 8007e82:	683b      	ldr	r3, [r7, #0]
 8007e84:	791b      	ldrb	r3, [r3, #4]
 8007e86:	2b02      	cmp	r3, #2
 8007e88:	d10f      	bne.n	8007eaa <USB_EPClearStall+0xbe>
    {
      USBx_OUTEP(epnum)->DOEPCTL |= USB_OTG_DOEPCTL_SD0PID_SEVNFRM; /* DATA0 */
 8007e8a:	68bb      	ldr	r3, [r7, #8]
 8007e8c:	015a      	lsls	r2, r3, #5
 8007e8e:	68fb      	ldr	r3, [r7, #12]
 8007e90:	4413      	add	r3, r2
 8007e92:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 8007e96:	681b      	ldr	r3, [r3, #0]
 8007e98:	68ba      	ldr	r2, [r7, #8]
 8007e9a:	0151      	lsls	r1, r2, #5
 8007e9c:	68fa      	ldr	r2, [r7, #12]
 8007e9e:	440a      	add	r2, r1
 8007ea0:	f502 6230 	add.w	r2, r2, #2816	; 0xb00
 8007ea4:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8007ea8:	6013      	str	r3, [r2, #0]
    }
  }
  return HAL_OK;
 8007eaa:	2300      	movs	r3, #0
}
 8007eac:	4618      	mov	r0, r3
 8007eae:	3714      	adds	r7, #20
 8007eb0:	46bd      	mov	sp, r7
 8007eb2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007eb6:	4770      	bx	lr

08007eb8 <USB_SetDevAddress>:
  * @param  address  new device address to be assigned
  *          This parameter can be a value from 0 to 255
  * @retval HAL status
  */
HAL_StatusTypeDef USB_SetDevAddress(const USB_OTG_GlobalTypeDef *USBx, uint8_t address)
{
 8007eb8:	b480      	push	{r7}
 8007eba:	b085      	sub	sp, #20
 8007ebc:	af00      	add	r7, sp, #0
 8007ebe:	6078      	str	r0, [r7, #4]
 8007ec0:	460b      	mov	r3, r1
 8007ec2:	70fb      	strb	r3, [r7, #3]
  uint32_t USBx_BASE = (uint32_t)USBx;
 8007ec4:	687b      	ldr	r3, [r7, #4]
 8007ec6:	60fb      	str	r3, [r7, #12]

  USBx_DEVICE->DCFG &= ~(USB_OTG_DCFG_DAD);
 8007ec8:	68fb      	ldr	r3, [r7, #12]
 8007eca:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 8007ece:	681b      	ldr	r3, [r3, #0]
 8007ed0:	68fa      	ldr	r2, [r7, #12]
 8007ed2:	f502 6200 	add.w	r2, r2, #2048	; 0x800
 8007ed6:	f423 63fe 	bic.w	r3, r3, #2032	; 0x7f0
 8007eda:	6013      	str	r3, [r2, #0]
  USBx_DEVICE->DCFG |= ((uint32_t)address << 4) & USB_OTG_DCFG_DAD;
 8007edc:	68fb      	ldr	r3, [r7, #12]
 8007ede:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 8007ee2:	681a      	ldr	r2, [r3, #0]
 8007ee4:	78fb      	ldrb	r3, [r7, #3]
 8007ee6:	011b      	lsls	r3, r3, #4
 8007ee8:	f403 63fe 	and.w	r3, r3, #2032	; 0x7f0
 8007eec:	68f9      	ldr	r1, [r7, #12]
 8007eee:	f501 6100 	add.w	r1, r1, #2048	; 0x800
 8007ef2:	4313      	orrs	r3, r2
 8007ef4:	600b      	str	r3, [r1, #0]

  return HAL_OK;
 8007ef6:	2300      	movs	r3, #0
}
 8007ef8:	4618      	mov	r0, r3
 8007efa:	3714      	adds	r7, #20
 8007efc:	46bd      	mov	sp, r7
 8007efe:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007f02:	4770      	bx	lr

08007f04 <USB_DevConnect>:
  * @brief  USB_DevConnect : Connect the USB device by enabling Rpu
  * @param  USBx  Selected device
  * @retval HAL status
  */
HAL_StatusTypeDef USB_DevConnect(const USB_OTG_GlobalTypeDef *USBx)
{
 8007f04:	b480      	push	{r7}
 8007f06:	b085      	sub	sp, #20
 8007f08:	af00      	add	r7, sp, #0
 8007f0a:	6078      	str	r0, [r7, #4]
  uint32_t USBx_BASE = (uint32_t)USBx;
 8007f0c:	687b      	ldr	r3, [r7, #4]
 8007f0e:	60fb      	str	r3, [r7, #12]

  /* In case phy is stopped, ensure to ungate and restore the phy CLK */
  USBx_PCGCCTL &= ~(USB_OTG_PCGCCTL_STOPCLK | USB_OTG_PCGCCTL_GATECLK);
 8007f10:	68fb      	ldr	r3, [r7, #12]
 8007f12:	f503 6360 	add.w	r3, r3, #3584	; 0xe00
 8007f16:	681b      	ldr	r3, [r3, #0]
 8007f18:	68fa      	ldr	r2, [r7, #12]
 8007f1a:	f502 6260 	add.w	r2, r2, #3584	; 0xe00
 8007f1e:	f023 0303 	bic.w	r3, r3, #3
 8007f22:	6013      	str	r3, [r2, #0]

  USBx_DEVICE->DCTL &= ~USB_OTG_DCTL_SDIS;
 8007f24:	68fb      	ldr	r3, [r7, #12]
 8007f26:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 8007f2a:	685b      	ldr	r3, [r3, #4]
 8007f2c:	68fa      	ldr	r2, [r7, #12]
 8007f2e:	f502 6200 	add.w	r2, r2, #2048	; 0x800
 8007f32:	f023 0302 	bic.w	r3, r3, #2
 8007f36:	6053      	str	r3, [r2, #4]

  return HAL_OK;
 8007f38:	2300      	movs	r3, #0
}
 8007f3a:	4618      	mov	r0, r3
 8007f3c:	3714      	adds	r7, #20
 8007f3e:	46bd      	mov	sp, r7
 8007f40:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007f44:	4770      	bx	lr

08007f46 <USB_DevDisconnect>:
  * @brief  USB_DevDisconnect : Disconnect the USB device by disabling Rpu
  * @param  USBx  Selected device
  * @retval HAL status
  */
HAL_StatusTypeDef USB_DevDisconnect(const USB_OTG_GlobalTypeDef *USBx)
{
 8007f46:	b480      	push	{r7}
 8007f48:	b085      	sub	sp, #20
 8007f4a:	af00      	add	r7, sp, #0
 8007f4c:	6078      	str	r0, [r7, #4]
  uint32_t USBx_BASE = (uint32_t)USBx;
 8007f4e:	687b      	ldr	r3, [r7, #4]
 8007f50:	60fb      	str	r3, [r7, #12]

  /* In case phy is stopped, ensure to ungate and restore the phy CLK */
  USBx_PCGCCTL &= ~(USB_OTG_PCGCCTL_STOPCLK | USB_OTG_PCGCCTL_GATECLK);
 8007f52:	68fb      	ldr	r3, [r7, #12]
 8007f54:	f503 6360 	add.w	r3, r3, #3584	; 0xe00
 8007f58:	681b      	ldr	r3, [r3, #0]
 8007f5a:	68fa      	ldr	r2, [r7, #12]
 8007f5c:	f502 6260 	add.w	r2, r2, #3584	; 0xe00
 8007f60:	f023 0303 	bic.w	r3, r3, #3
 8007f64:	6013      	str	r3, [r2, #0]

  USBx_DEVICE->DCTL |= USB_OTG_DCTL_SDIS;
 8007f66:	68fb      	ldr	r3, [r7, #12]
 8007f68:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 8007f6c:	685b      	ldr	r3, [r3, #4]
 8007f6e:	68fa      	ldr	r2, [r7, #12]
 8007f70:	f502 6200 	add.w	r2, r2, #2048	; 0x800
 8007f74:	f043 0302 	orr.w	r3, r3, #2
 8007f78:	6053      	str	r3, [r2, #4]

  return HAL_OK;
 8007f7a:	2300      	movs	r3, #0
}
 8007f7c:	4618      	mov	r0, r3
 8007f7e:	3714      	adds	r7, #20
 8007f80:	46bd      	mov	sp, r7
 8007f82:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007f86:	4770      	bx	lr

08007f88 <USB_ReadInterrupts>:
  * @brief  USB_ReadInterrupts: return the global USB interrupt status
  * @param  USBx  Selected device
  * @retval USB Global Interrupt status
  */
uint32_t USB_ReadInterrupts(USB_OTG_GlobalTypeDef const *USBx)
{
 8007f88:	b480      	push	{r7}
 8007f8a:	b085      	sub	sp, #20
 8007f8c:	af00      	add	r7, sp, #0
 8007f8e:	6078      	str	r0, [r7, #4]
  uint32_t tmpreg;

  tmpreg = USBx->GINTSTS;
 8007f90:	687b      	ldr	r3, [r7, #4]
 8007f92:	695b      	ldr	r3, [r3, #20]
 8007f94:	60fb      	str	r3, [r7, #12]
  tmpreg &= USBx->GINTMSK;
 8007f96:	687b      	ldr	r3, [r7, #4]
 8007f98:	699b      	ldr	r3, [r3, #24]
 8007f9a:	68fa      	ldr	r2, [r7, #12]
 8007f9c:	4013      	ands	r3, r2
 8007f9e:	60fb      	str	r3, [r7, #12]

  return tmpreg;
 8007fa0:	68fb      	ldr	r3, [r7, #12]
}
 8007fa2:	4618      	mov	r0, r3
 8007fa4:	3714      	adds	r7, #20
 8007fa6:	46bd      	mov	sp, r7
 8007fa8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007fac:	4770      	bx	lr

08007fae <USB_ReadDevAllOutEpInterrupt>:
  * @brief  USB_ReadDevAllOutEpInterrupt: return the USB device OUT endpoints interrupt status
  * @param  USBx  Selected device
  * @retval USB Device OUT EP interrupt status
  */
uint32_t USB_ReadDevAllOutEpInterrupt(const USB_OTG_GlobalTypeDef *USBx)
{
 8007fae:	b480      	push	{r7}
 8007fb0:	b085      	sub	sp, #20
 8007fb2:	af00      	add	r7, sp, #0
 8007fb4:	6078      	str	r0, [r7, #4]
  uint32_t USBx_BASE = (uint32_t)USBx;
 8007fb6:	687b      	ldr	r3, [r7, #4]
 8007fb8:	60fb      	str	r3, [r7, #12]
  uint32_t tmpreg;

  tmpreg  = USBx_DEVICE->DAINT;
 8007fba:	68fb      	ldr	r3, [r7, #12]
 8007fbc:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 8007fc0:	699b      	ldr	r3, [r3, #24]
 8007fc2:	60bb      	str	r3, [r7, #8]
  tmpreg &= USBx_DEVICE->DAINTMSK;
 8007fc4:	68fb      	ldr	r3, [r7, #12]
 8007fc6:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 8007fca:	69db      	ldr	r3, [r3, #28]
 8007fcc:	68ba      	ldr	r2, [r7, #8]
 8007fce:	4013      	ands	r3, r2
 8007fd0:	60bb      	str	r3, [r7, #8]

  return ((tmpreg & 0xffff0000U) >> 16);
 8007fd2:	68bb      	ldr	r3, [r7, #8]
 8007fd4:	0c1b      	lsrs	r3, r3, #16
}
 8007fd6:	4618      	mov	r0, r3
 8007fd8:	3714      	adds	r7, #20
 8007fda:	46bd      	mov	sp, r7
 8007fdc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007fe0:	4770      	bx	lr

08007fe2 <USB_ReadDevAllInEpInterrupt>:
  * @brief  USB_ReadDevAllInEpInterrupt: return the USB device IN endpoints interrupt status
  * @param  USBx  Selected device
  * @retval USB Device IN EP interrupt status
  */
uint32_t USB_ReadDevAllInEpInterrupt(const USB_OTG_GlobalTypeDef *USBx)
{
 8007fe2:	b480      	push	{r7}
 8007fe4:	b085      	sub	sp, #20
 8007fe6:	af00      	add	r7, sp, #0
 8007fe8:	6078      	str	r0, [r7, #4]
  uint32_t USBx_BASE = (uint32_t)USBx;
 8007fea:	687b      	ldr	r3, [r7, #4]
 8007fec:	60fb      	str	r3, [r7, #12]
  uint32_t tmpreg;

  tmpreg  = USBx_DEVICE->DAINT;
 8007fee:	68fb      	ldr	r3, [r7, #12]
 8007ff0:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 8007ff4:	699b      	ldr	r3, [r3, #24]
 8007ff6:	60bb      	str	r3, [r7, #8]
  tmpreg &= USBx_DEVICE->DAINTMSK;
 8007ff8:	68fb      	ldr	r3, [r7, #12]
 8007ffa:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 8007ffe:	69db      	ldr	r3, [r3, #28]
 8008000:	68ba      	ldr	r2, [r7, #8]
 8008002:	4013      	ands	r3, r2
 8008004:	60bb      	str	r3, [r7, #8]

  return ((tmpreg & 0xFFFFU));
 8008006:	68bb      	ldr	r3, [r7, #8]
 8008008:	b29b      	uxth	r3, r3
}
 800800a:	4618      	mov	r0, r3
 800800c:	3714      	adds	r7, #20
 800800e:	46bd      	mov	sp, r7
 8008010:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008014:	4770      	bx	lr

08008016 <USB_ReadDevOutEPInterrupt>:
  * @param  epnum  endpoint number
  *          This parameter can be a value from 0 to 15
  * @retval Device OUT EP Interrupt register
  */
uint32_t USB_ReadDevOutEPInterrupt(const USB_OTG_GlobalTypeDef *USBx, uint8_t epnum)
{
 8008016:	b480      	push	{r7}
 8008018:	b085      	sub	sp, #20
 800801a:	af00      	add	r7, sp, #0
 800801c:	6078      	str	r0, [r7, #4]
 800801e:	460b      	mov	r3, r1
 8008020:	70fb      	strb	r3, [r7, #3]
  uint32_t USBx_BASE = (uint32_t)USBx;
 8008022:	687b      	ldr	r3, [r7, #4]
 8008024:	60fb      	str	r3, [r7, #12]
  uint32_t tmpreg;

  tmpreg  = USBx_OUTEP((uint32_t)epnum)->DOEPINT;
 8008026:	78fb      	ldrb	r3, [r7, #3]
 8008028:	015a      	lsls	r2, r3, #5
 800802a:	68fb      	ldr	r3, [r7, #12]
 800802c:	4413      	add	r3, r2
 800802e:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 8008032:	689b      	ldr	r3, [r3, #8]
 8008034:	60bb      	str	r3, [r7, #8]
  tmpreg &= USBx_DEVICE->DOEPMSK;
 8008036:	68fb      	ldr	r3, [r7, #12]
 8008038:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 800803c:	695b      	ldr	r3, [r3, #20]
 800803e:	68ba      	ldr	r2, [r7, #8]
 8008040:	4013      	ands	r3, r2
 8008042:	60bb      	str	r3, [r7, #8]

  return tmpreg;
 8008044:	68bb      	ldr	r3, [r7, #8]
}
 8008046:	4618      	mov	r0, r3
 8008048:	3714      	adds	r7, #20
 800804a:	46bd      	mov	sp, r7
 800804c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008050:	4770      	bx	lr

08008052 <USB_ReadDevInEPInterrupt>:
  * @param  epnum  endpoint number
  *          This parameter can be a value from 0 to 15
  * @retval Device IN EP Interrupt register
  */
uint32_t USB_ReadDevInEPInterrupt(const USB_OTG_GlobalTypeDef *USBx, uint8_t epnum)
{
 8008052:	b480      	push	{r7}
 8008054:	b087      	sub	sp, #28
 8008056:	af00      	add	r7, sp, #0
 8008058:	6078      	str	r0, [r7, #4]
 800805a:	460b      	mov	r3, r1
 800805c:	70fb      	strb	r3, [r7, #3]
  uint32_t USBx_BASE = (uint32_t)USBx;
 800805e:	687b      	ldr	r3, [r7, #4]
 8008060:	617b      	str	r3, [r7, #20]
  uint32_t tmpreg;
  uint32_t msk;
  uint32_t emp;

  msk = USBx_DEVICE->DIEPMSK;
 8008062:	697b      	ldr	r3, [r7, #20]
 8008064:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 8008068:	691b      	ldr	r3, [r3, #16]
 800806a:	613b      	str	r3, [r7, #16]
  emp = USBx_DEVICE->DIEPEMPMSK;
 800806c:	697b      	ldr	r3, [r7, #20]
 800806e:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 8008072:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8008074:	60fb      	str	r3, [r7, #12]
  msk |= ((emp >> (epnum & EP_ADDR_MSK)) & 0x1U) << 7;
 8008076:	78fb      	ldrb	r3, [r7, #3]
 8008078:	f003 030f 	and.w	r3, r3, #15
 800807c:	68fa      	ldr	r2, [r7, #12]
 800807e:	fa22 f303 	lsr.w	r3, r2, r3
 8008082:	01db      	lsls	r3, r3, #7
 8008084:	b2db      	uxtb	r3, r3
 8008086:	693a      	ldr	r2, [r7, #16]
 8008088:	4313      	orrs	r3, r2
 800808a:	613b      	str	r3, [r7, #16]
  tmpreg = USBx_INEP((uint32_t)epnum)->DIEPINT & msk;
 800808c:	78fb      	ldrb	r3, [r7, #3]
 800808e:	015a      	lsls	r2, r3, #5
 8008090:	697b      	ldr	r3, [r7, #20]
 8008092:	4413      	add	r3, r2
 8008094:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 8008098:	689b      	ldr	r3, [r3, #8]
 800809a:	693a      	ldr	r2, [r7, #16]
 800809c:	4013      	ands	r3, r2
 800809e:	60bb      	str	r3, [r7, #8]

  return tmpreg;
 80080a0:	68bb      	ldr	r3, [r7, #8]
}
 80080a2:	4618      	mov	r0, r3
 80080a4:	371c      	adds	r7, #28
 80080a6:	46bd      	mov	sp, r7
 80080a8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80080ac:	4770      	bx	lr

080080ae <USB_GetMode>:
  *          This parameter can be one of these values:
  *           0 : Host
  *           1 : Device
  */
uint32_t USB_GetMode(const USB_OTG_GlobalTypeDef *USBx)
{
 80080ae:	b480      	push	{r7}
 80080b0:	b083      	sub	sp, #12
 80080b2:	af00      	add	r7, sp, #0
 80080b4:	6078      	str	r0, [r7, #4]
  return ((USBx->GINTSTS) & 0x1U);
 80080b6:	687b      	ldr	r3, [r7, #4]
 80080b8:	695b      	ldr	r3, [r3, #20]
 80080ba:	f003 0301 	and.w	r3, r3, #1
}
 80080be:	4618      	mov	r0, r3
 80080c0:	370c      	adds	r7, #12
 80080c2:	46bd      	mov	sp, r7
 80080c4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80080c8:	4770      	bx	lr

080080ca <USB_ActivateSetup>:
  * @brief  Activate EP0 for Setup transactions
  * @param  USBx  Selected device
  * @retval HAL status
  */
HAL_StatusTypeDef USB_ActivateSetup(const USB_OTG_GlobalTypeDef *USBx)
{
 80080ca:	b480      	push	{r7}
 80080cc:	b085      	sub	sp, #20
 80080ce:	af00      	add	r7, sp, #0
 80080d0:	6078      	str	r0, [r7, #4]
  uint32_t USBx_BASE = (uint32_t)USBx;
 80080d2:	687b      	ldr	r3, [r7, #4]
 80080d4:	60fb      	str	r3, [r7, #12]

  /* Set the MPS of the IN EP0 to 64 bytes */
  USBx_INEP(0U)->DIEPCTL &= ~USB_OTG_DIEPCTL_MPSIZ;
 80080d6:	68fb      	ldr	r3, [r7, #12]
 80080d8:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 80080dc:	681b      	ldr	r3, [r3, #0]
 80080de:	68fa      	ldr	r2, [r7, #12]
 80080e0:	f502 6210 	add.w	r2, r2, #2304	; 0x900
 80080e4:	f423 63ff 	bic.w	r3, r3, #2040	; 0x7f8
 80080e8:	f023 0307 	bic.w	r3, r3, #7
 80080ec:	6013      	str	r3, [r2, #0]

  USBx_DEVICE->DCTL |= USB_OTG_DCTL_CGINAK;
 80080ee:	68fb      	ldr	r3, [r7, #12]
 80080f0:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 80080f4:	685b      	ldr	r3, [r3, #4]
 80080f6:	68fa      	ldr	r2, [r7, #12]
 80080f8:	f502 6200 	add.w	r2, r2, #2048	; 0x800
 80080fc:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8008100:	6053      	str	r3, [r2, #4]

  return HAL_OK;
 8008102:	2300      	movs	r3, #0
}
 8008104:	4618      	mov	r0, r3
 8008106:	3714      	adds	r7, #20
 8008108:	46bd      	mov	sp, r7
 800810a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800810e:	4770      	bx	lr

08008110 <USB_EP0_OutStart>:
  *           1 : DMA feature used
  * @param  psetup  pointer to setup packet
  * @retval HAL status
  */
HAL_StatusTypeDef USB_EP0_OutStart(const USB_OTG_GlobalTypeDef *USBx, uint8_t dma, const uint8_t *psetup)
{
 8008110:	b480      	push	{r7}
 8008112:	b087      	sub	sp, #28
 8008114:	af00      	add	r7, sp, #0
 8008116:	60f8      	str	r0, [r7, #12]
 8008118:	460b      	mov	r3, r1
 800811a:	607a      	str	r2, [r7, #4]
 800811c:	72fb      	strb	r3, [r7, #11]
  uint32_t USBx_BASE = (uint32_t)USBx;
 800811e:	68fb      	ldr	r3, [r7, #12]
 8008120:	617b      	str	r3, [r7, #20]
  uint32_t gSNPSiD = *(__IO const uint32_t *)(&USBx->CID + 0x1U);
 8008122:	68fb      	ldr	r3, [r7, #12]
 8008124:	333c      	adds	r3, #60	; 0x3c
 8008126:	3304      	adds	r3, #4
 8008128:	681b      	ldr	r3, [r3, #0]
 800812a:	613b      	str	r3, [r7, #16]

  if (gSNPSiD > USB_OTG_CORE_ID_300A)
 800812c:	693b      	ldr	r3, [r7, #16]
 800812e:	4a26      	ldr	r2, [pc, #152]	; (80081c8 <USB_EP0_OutStart+0xb8>)
 8008130:	4293      	cmp	r3, r2
 8008132:	d90a      	bls.n	800814a <USB_EP0_OutStart+0x3a>
  {
    if ((USBx_OUTEP(0U)->DOEPCTL & USB_OTG_DOEPCTL_EPENA) == USB_OTG_DOEPCTL_EPENA)
 8008134:	697b      	ldr	r3, [r7, #20]
 8008136:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 800813a:	681b      	ldr	r3, [r3, #0]
 800813c:	f003 4300 	and.w	r3, r3, #2147483648	; 0x80000000
 8008140:	f1b3 4f00 	cmp.w	r3, #2147483648	; 0x80000000
 8008144:	d101      	bne.n	800814a <USB_EP0_OutStart+0x3a>
    {
      return HAL_OK;
 8008146:	2300      	movs	r3, #0
 8008148:	e037      	b.n	80081ba <USB_EP0_OutStart+0xaa>
    }
  }

  USBx_OUTEP(0U)->DOEPTSIZ = 0U;
 800814a:	697b      	ldr	r3, [r7, #20]
 800814c:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 8008150:	461a      	mov	r2, r3
 8008152:	2300      	movs	r3, #0
 8008154:	6113      	str	r3, [r2, #16]
  USBx_OUTEP(0U)->DOEPTSIZ |= (USB_OTG_DOEPTSIZ_PKTCNT & (1U << 19));
 8008156:	697b      	ldr	r3, [r7, #20]
 8008158:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 800815c:	691b      	ldr	r3, [r3, #16]
 800815e:	697a      	ldr	r2, [r7, #20]
 8008160:	f502 6230 	add.w	r2, r2, #2816	; 0xb00
 8008164:	f443 2300 	orr.w	r3, r3, #524288	; 0x80000
 8008168:	6113      	str	r3, [r2, #16]
  USBx_OUTEP(0U)->DOEPTSIZ |= (3U * 8U);
 800816a:	697b      	ldr	r3, [r7, #20]
 800816c:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 8008170:	691b      	ldr	r3, [r3, #16]
 8008172:	697a      	ldr	r2, [r7, #20]
 8008174:	f502 6230 	add.w	r2, r2, #2816	; 0xb00
 8008178:	f043 0318 	orr.w	r3, r3, #24
 800817c:	6113      	str	r3, [r2, #16]
  USBx_OUTEP(0U)->DOEPTSIZ |=  USB_OTG_DOEPTSIZ_STUPCNT;
 800817e:	697b      	ldr	r3, [r7, #20]
 8008180:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 8008184:	691b      	ldr	r3, [r3, #16]
 8008186:	697a      	ldr	r2, [r7, #20]
 8008188:	f502 6230 	add.w	r2, r2, #2816	; 0xb00
 800818c:	f043 43c0 	orr.w	r3, r3, #1610612736	; 0x60000000
 8008190:	6113      	str	r3, [r2, #16]

  if (dma == 1U)
 8008192:	7afb      	ldrb	r3, [r7, #11]
 8008194:	2b01      	cmp	r3, #1
 8008196:	d10f      	bne.n	80081b8 <USB_EP0_OutStart+0xa8>
  {
    USBx_OUTEP(0U)->DOEPDMA = (uint32_t)psetup;
 8008198:	697b      	ldr	r3, [r7, #20]
 800819a:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 800819e:	461a      	mov	r2, r3
 80081a0:	687b      	ldr	r3, [r7, #4]
 80081a2:	6153      	str	r3, [r2, #20]
    /* EP enable */
    USBx_OUTEP(0U)->DOEPCTL |= USB_OTG_DOEPCTL_EPENA | USB_OTG_DOEPCTL_USBAEP;
 80081a4:	697b      	ldr	r3, [r7, #20]
 80081a6:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 80081aa:	681b      	ldr	r3, [r3, #0]
 80081ac:	697a      	ldr	r2, [r7, #20]
 80081ae:	f502 6230 	add.w	r2, r2, #2816	; 0xb00
 80081b2:	f043 2380 	orr.w	r3, r3, #2147516416	; 0x80008000
 80081b6:	6013      	str	r3, [r2, #0]
  }

  return HAL_OK;
 80081b8:	2300      	movs	r3, #0
}
 80081ba:	4618      	mov	r0, r3
 80081bc:	371c      	adds	r7, #28
 80081be:	46bd      	mov	sp, r7
 80081c0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80081c4:	4770      	bx	lr
 80081c6:	bf00      	nop
 80081c8:	4f54300a 	.word	0x4f54300a

080081cc <USB_CoreReset>:
  * @brief  Reset the USB Core (needed after USB clock settings change)
  * @param  USBx  Selected device
  * @retval HAL status
  */
static HAL_StatusTypeDef USB_CoreReset(USB_OTG_GlobalTypeDef *USBx)
{
 80081cc:	b480      	push	{r7}
 80081ce:	b085      	sub	sp, #20
 80081d0:	af00      	add	r7, sp, #0
 80081d2:	6078      	str	r0, [r7, #4]
  __IO uint32_t count = 0U;
 80081d4:	2300      	movs	r3, #0
 80081d6:	60fb      	str	r3, [r7, #12]

  /* Wait for AHB master IDLE state. */
  do
  {
    count++;
 80081d8:	68fb      	ldr	r3, [r7, #12]
 80081da:	3301      	adds	r3, #1
 80081dc:	60fb      	str	r3, [r7, #12]

    if (count > HAL_USB_TIMEOUT)
 80081de:	68fb      	ldr	r3, [r7, #12]
 80081e0:	f1b3 6f70 	cmp.w	r3, #251658240	; 0xf000000
 80081e4:	d901      	bls.n	80081ea <USB_CoreReset+0x1e>
    {
      return HAL_TIMEOUT;
 80081e6:	2303      	movs	r3, #3
 80081e8:	e01b      	b.n	8008222 <USB_CoreReset+0x56>
    }
  } while ((USBx->GRSTCTL & USB_OTG_GRSTCTL_AHBIDL) == 0U);
 80081ea:	687b      	ldr	r3, [r7, #4]
 80081ec:	691b      	ldr	r3, [r3, #16]
 80081ee:	2b00      	cmp	r3, #0
 80081f0:	daf2      	bge.n	80081d8 <USB_CoreReset+0xc>

  /* Core Soft Reset */
  count = 0U;
 80081f2:	2300      	movs	r3, #0
 80081f4:	60fb      	str	r3, [r7, #12]
  USBx->GRSTCTL |= USB_OTG_GRSTCTL_CSRST;
 80081f6:	687b      	ldr	r3, [r7, #4]
 80081f8:	691b      	ldr	r3, [r3, #16]
 80081fa:	f043 0201 	orr.w	r2, r3, #1
 80081fe:	687b      	ldr	r3, [r7, #4]
 8008200:	611a      	str	r2, [r3, #16]

  do
  {
    count++;
 8008202:	68fb      	ldr	r3, [r7, #12]
 8008204:	3301      	adds	r3, #1
 8008206:	60fb      	str	r3, [r7, #12]

    if (count > HAL_USB_TIMEOUT)
 8008208:	68fb      	ldr	r3, [r7, #12]
 800820a:	f1b3 6f70 	cmp.w	r3, #251658240	; 0xf000000
 800820e:	d901      	bls.n	8008214 <USB_CoreReset+0x48>
    {
      return HAL_TIMEOUT;
 8008210:	2303      	movs	r3, #3
 8008212:	e006      	b.n	8008222 <USB_CoreReset+0x56>
    }
  } while ((USBx->GRSTCTL & USB_OTG_GRSTCTL_CSRST) == USB_OTG_GRSTCTL_CSRST);
 8008214:	687b      	ldr	r3, [r7, #4]
 8008216:	691b      	ldr	r3, [r3, #16]
 8008218:	f003 0301 	and.w	r3, r3, #1
 800821c:	2b01      	cmp	r3, #1
 800821e:	d0f0      	beq.n	8008202 <USB_CoreReset+0x36>

  return HAL_OK;
 8008220:	2300      	movs	r3, #0
}
 8008222:	4618      	mov	r0, r3
 8008224:	3714      	adds	r7, #20
 8008226:	46bd      	mov	sp, r7
 8008228:	f85d 7b04 	ldr.w	r7, [sp], #4
 800822c:	4770      	bx	lr
	...

08008230 <XPT2046_SetCS>:
extern SPI_HandleTypeDef hspi2;
extern void Error_Handler(void);
static uint8_t XPT2046_initilazed = 0;

static void XPT2046_SetCS(void)
{
 8008230:	b580      	push	{r7, lr}
 8008232:	af00      	add	r7, sp, #0
	HAL_GPIO_WritePin(T_CS_GPIO_Port, T_CS_Pin, GPIO_PIN_SET);
 8008234:	2201      	movs	r2, #1
 8008236:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 800823a:	4802      	ldr	r0, [pc, #8]	; (8008244 <XPT2046_SetCS+0x14>)
 800823c:	f7fa ff2c 	bl	8003098 <HAL_GPIO_WritePin>
}
 8008240:	bf00      	nop
 8008242:	bd80      	pop	{r7, pc}
 8008244:	40020400 	.word	0x40020400

08008248 <XPT2046_ResetCS>:

static void XPT2046_ResetCS(void)
{
 8008248:	b580      	push	{r7, lr}
 800824a:	af00      	add	r7, sp, #0
	HAL_GPIO_WritePin(T_CS_GPIO_Port, T_CS_Pin, GPIO_PIN_RESET);
 800824c:	2200      	movs	r2, #0
 800824e:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 8008252:	4802      	ldr	r0, [pc, #8]	; (800825c <XPT2046_ResetCS+0x14>)
 8008254:	f7fa ff20 	bl	8003098 <HAL_GPIO_WritePin>
}
 8008258:	bf00      	nop
 800825a:	bd80      	pop	{r7, pc}
 800825c:	40020400 	.word	0x40020400

08008260 <XPT2046_Write_Byte>:

static void XPT2046_Write_Byte(uint8_t num)
{
 8008260:	b580      	push	{r7, lr}
 8008262:	b082      	sub	sp, #8
 8008264:	af00      	add	r7, sp, #0
 8008266:	4603      	mov	r3, r0
 8008268:	71fb      	strb	r3, [r7, #7]
	hspi2.Instance->CR2 &= ~(SPI_DATASIZE_16BIT); // Set 8 bit mode
 800826a:	4b14      	ldr	r3, [pc, #80]	; (80082bc <XPT2046_Write_Byte+0x5c>)
 800826c:	681b      	ldr	r3, [r3, #0]
 800826e:	685a      	ldr	r2, [r3, #4]
 8008270:	4b12      	ldr	r3, [pc, #72]	; (80082bc <XPT2046_Write_Byte+0x5c>)
 8008272:	681b      	ldr	r3, [r3, #0]
 8008274:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 8008278:	605a      	str	r2, [r3, #4]
	__HAL_SPI_ENABLE(&hspi2);
 800827a:	4b10      	ldr	r3, [pc, #64]	; (80082bc <XPT2046_Write_Byte+0x5c>)
 800827c:	681b      	ldr	r3, [r3, #0]
 800827e:	681a      	ldr	r2, [r3, #0]
 8008280:	4b0e      	ldr	r3, [pc, #56]	; (80082bc <XPT2046_Write_Byte+0x5c>)
 8008282:	681b      	ldr	r3, [r3, #0]
 8008284:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 8008288:	601a      	str	r2, [r3, #0]
	if (HAL_SPI_Transmit(&hspi2, &num, 1, 1000) != HAL_OK) {
 800828a:	1df9      	adds	r1, r7, #7
 800828c:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8008290:	2201      	movs	r2, #1
 8008292:	480a      	ldr	r0, [pc, #40]	; (80082bc <XPT2046_Write_Byte+0x5c>)
 8008294:	f7fc fe47 	bl	8004f26 <HAL_SPI_Transmit>
 8008298:	4603      	mov	r3, r0
 800829a:	2b00      	cmp	r3, #0
 800829c:	d001      	beq.n	80082a2 <XPT2046_Write_Byte+0x42>
		Error_Handler();
 800829e:	f7f9 f951 	bl	8001544 <Error_Handler>
	}
	__HAL_SPI_DISABLE(&hspi2);
 80082a2:	4b06      	ldr	r3, [pc, #24]	; (80082bc <XPT2046_Write_Byte+0x5c>)
 80082a4:	681b      	ldr	r3, [r3, #0]
 80082a6:	681a      	ldr	r2, [r3, #0]
 80082a8:	4b04      	ldr	r3, [pc, #16]	; (80082bc <XPT2046_Write_Byte+0x5c>)
 80082aa:	681b      	ldr	r3, [r3, #0]
 80082ac:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 80082b0:	601a      	str	r2, [r3, #0]
}
 80082b2:	bf00      	nop
 80082b4:	3708      	adds	r7, #8
 80082b6:	46bd      	mov	sp, r7
 80082b8:	bd80      	pop	{r7, pc}
 80082ba:	bf00      	nop
 80082bc:	20000428 	.word	0x20000428

080082c0 <XPT2046_Read_AD>:

static uint16_t XPT2046_Read_AD(uint8_t CMD)
{
 80082c0:	b580      	push	{r7, lr}
 80082c2:	b084      	sub	sp, #16
 80082c4:	af00      	add	r7, sp, #0
 80082c6:	4603      	mov	r3, r0
 80082c8:	71fb      	strb	r3, [r7, #7]
	uint8_t num[2];
	uint16_t ret;

	T_CS_OFF;
 80082ca:	f7ff ffbd 	bl	8008248 <XPT2046_ResetCS>
	XPT2046_Write_Byte(CMD);
 80082ce:	79fb      	ldrb	r3, [r7, #7]
 80082d0:	4618      	mov	r0, r3
 80082d2:	f7ff ffc5 	bl	8008260 <XPT2046_Write_Byte>
	HAL_Delay(6);
 80082d6:	2006      	movs	r0, #6
 80082d8:	f7fa f898 	bl	800240c <HAL_Delay>

	hspi2.Instance->CR2 |= SPI_DATASIZE_16BIT; // Set 16 bit mode
 80082dc:	4b1d      	ldr	r3, [pc, #116]	; (8008354 <XPT2046_Read_AD+0x94>)
 80082de:	681b      	ldr	r3, [r3, #0]
 80082e0:	685a      	ldr	r2, [r3, #4]
 80082e2:	4b1c      	ldr	r3, [pc, #112]	; (8008354 <XPT2046_Read_AD+0x94>)
 80082e4:	681b      	ldr	r3, [r3, #0]
 80082e6:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 80082ea:	605a      	str	r2, [r3, #4]
	__HAL_SPI_ENABLE(&hspi2);
 80082ec:	4b19      	ldr	r3, [pc, #100]	; (8008354 <XPT2046_Read_AD+0x94>)
 80082ee:	681b      	ldr	r3, [r3, #0]
 80082f0:	681a      	ldr	r2, [r3, #0]
 80082f2:	4b18      	ldr	r3, [pc, #96]	; (8008354 <XPT2046_Read_AD+0x94>)
 80082f4:	681b      	ldr	r3, [r3, #0]
 80082f6:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 80082fa:	601a      	str	r2, [r3, #0]
	if (HAL_SPI_Receive(&hspi2, num, 1, 1000) != HAL_OK) {
 80082fc:	f107 010c 	add.w	r1, r7, #12
 8008300:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8008304:	2201      	movs	r2, #1
 8008306:	4813      	ldr	r0, [pc, #76]	; (8008354 <XPT2046_Read_AD+0x94>)
 8008308:	f7fc ff50 	bl	80051ac <HAL_SPI_Receive>
 800830c:	4603      	mov	r3, r0
 800830e:	2b00      	cmp	r3, #0
 8008310:	d001      	beq.n	8008316 <XPT2046_Read_AD+0x56>
		Error_Handler();
 8008312:	f7f9 f917 	bl	8001544 <Error_Handler>
	}
	__HAL_SPI_DISABLE(&hspi2);
 8008316:	4b0f      	ldr	r3, [pc, #60]	; (8008354 <XPT2046_Read_AD+0x94>)
 8008318:	681b      	ldr	r3, [r3, #0]
 800831a:	681a      	ldr	r2, [r3, #0]
 800831c:	4b0d      	ldr	r3, [pc, #52]	; (8008354 <XPT2046_Read_AD+0x94>)
 800831e:	681b      	ldr	r3, [r3, #0]
 8008320:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 8008324:	601a      	str	r2, [r3, #0]
	T_CS_ON;
 8008326:	f7ff ff83 	bl	8008230 <XPT2046_SetCS>

	ret = num[0] << 8 | num[1];
 800832a:	7b3b      	ldrb	r3, [r7, #12]
 800832c:	021b      	lsls	r3, r3, #8
 800832e:	b21a      	sxth	r2, r3
 8008330:	7b7b      	ldrb	r3, [r7, #13]
 8008332:	b21b      	sxth	r3, r3
 8008334:	4313      	orrs	r3, r2
 8008336:	b21b      	sxth	r3, r3
 8008338:	81fb      	strh	r3, [r7, #14]
	ret >>= 3;
 800833a:	89fb      	ldrh	r3, [r7, #14]
 800833c:	08db      	lsrs	r3, r3, #3
 800833e:	81fb      	strh	r3, [r7, #14]
	ret &= (1<<12)-1;
 8008340:	89fb      	ldrh	r3, [r7, #14]
 8008342:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8008346:	81fb      	strh	r3, [r7, #14]

	return ret;
 8008348:	89fb      	ldrh	r3, [r7, #14]
}
 800834a:	4618      	mov	r0, r3
 800834c:	3710      	adds	r7, #16
 800834e:	46bd      	mov	sp, r7
 8008350:	bd80      	pop	{r7, pc}
 8008352:	bf00      	nop
 8008354:	20000428 	.word	0x20000428

08008358 <besttwoavg>:

static int16_t besttwoavg( int16_t x , int16_t y , int16_t z ) {
 8008358:	b480      	push	{r7}
 800835a:	b085      	sub	sp, #20
 800835c:	af00      	add	r7, sp, #0
 800835e:	4603      	mov	r3, r0
 8008360:	80fb      	strh	r3, [r7, #6]
 8008362:	460b      	mov	r3, r1
 8008364:	80bb      	strh	r3, [r7, #4]
 8008366:	4613      	mov	r3, r2
 8008368:	807b      	strh	r3, [r7, #2]
  int16_t da, db, dc;
  int16_t reta = 0;
 800836a:	2300      	movs	r3, #0
 800836c:	813b      	strh	r3, [r7, #8]
  if ( x > y ) da = x - y; else da = y - x;
 800836e:	f9b7 2006 	ldrsh.w	r2, [r7, #6]
 8008372:	f9b7 3004 	ldrsh.w	r3, [r7, #4]
 8008376:	429a      	cmp	r2, r3
 8008378:	dd05      	ble.n	8008386 <besttwoavg+0x2e>
 800837a:	88fa      	ldrh	r2, [r7, #6]
 800837c:	88bb      	ldrh	r3, [r7, #4]
 800837e:	1ad3      	subs	r3, r2, r3
 8008380:	b29b      	uxth	r3, r3
 8008382:	81fb      	strh	r3, [r7, #14]
 8008384:	e004      	b.n	8008390 <besttwoavg+0x38>
 8008386:	88ba      	ldrh	r2, [r7, #4]
 8008388:	88fb      	ldrh	r3, [r7, #6]
 800838a:	1ad3      	subs	r3, r2, r3
 800838c:	b29b      	uxth	r3, r3
 800838e:	81fb      	strh	r3, [r7, #14]
  if ( x > z ) db = x - z; else db = z - x;
 8008390:	f9b7 2006 	ldrsh.w	r2, [r7, #6]
 8008394:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
 8008398:	429a      	cmp	r2, r3
 800839a:	dd05      	ble.n	80083a8 <besttwoavg+0x50>
 800839c:	88fa      	ldrh	r2, [r7, #6]
 800839e:	887b      	ldrh	r3, [r7, #2]
 80083a0:	1ad3      	subs	r3, r2, r3
 80083a2:	b29b      	uxth	r3, r3
 80083a4:	81bb      	strh	r3, [r7, #12]
 80083a6:	e004      	b.n	80083b2 <besttwoavg+0x5a>
 80083a8:	887a      	ldrh	r2, [r7, #2]
 80083aa:	88fb      	ldrh	r3, [r7, #6]
 80083ac:	1ad3      	subs	r3, r2, r3
 80083ae:	b29b      	uxth	r3, r3
 80083b0:	81bb      	strh	r3, [r7, #12]
  if ( z > y ) dc = z - y; else dc = y - z;
 80083b2:	f9b7 2002 	ldrsh.w	r2, [r7, #2]
 80083b6:	f9b7 3004 	ldrsh.w	r3, [r7, #4]
 80083ba:	429a      	cmp	r2, r3
 80083bc:	dd05      	ble.n	80083ca <besttwoavg+0x72>
 80083be:	887a      	ldrh	r2, [r7, #2]
 80083c0:	88bb      	ldrh	r3, [r7, #4]
 80083c2:	1ad3      	subs	r3, r2, r3
 80083c4:	b29b      	uxth	r3, r3
 80083c6:	817b      	strh	r3, [r7, #10]
 80083c8:	e004      	b.n	80083d4 <besttwoavg+0x7c>
 80083ca:	88ba      	ldrh	r2, [r7, #4]
 80083cc:	887b      	ldrh	r3, [r7, #2]
 80083ce:	1ad3      	subs	r3, r2, r3
 80083d0:	b29b      	uxth	r3, r3
 80083d2:	817b      	strh	r3, [r7, #10]

  if ( da <= db && da <= dc ) reta = (x + y) >> 1;
 80083d4:	f9b7 200e 	ldrsh.w	r2, [r7, #14]
 80083d8:	f9b7 300c 	ldrsh.w	r3, [r7, #12]
 80083dc:	429a      	cmp	r2, r3
 80083de:	dc0d      	bgt.n	80083fc <besttwoavg+0xa4>
 80083e0:	f9b7 200e 	ldrsh.w	r2, [r7, #14]
 80083e4:	f9b7 300a 	ldrsh.w	r3, [r7, #10]
 80083e8:	429a      	cmp	r2, r3
 80083ea:	dc07      	bgt.n	80083fc <besttwoavg+0xa4>
 80083ec:	f9b7 2006 	ldrsh.w	r2, [r7, #6]
 80083f0:	f9b7 3004 	ldrsh.w	r3, [r7, #4]
 80083f4:	4413      	add	r3, r2
 80083f6:	105b      	asrs	r3, r3, #1
 80083f8:	813b      	strh	r3, [r7, #8]
 80083fa:	e01a      	b.n	8008432 <besttwoavg+0xda>
  else if ( db <= da && db <= dc ) reta = (x + z) >> 1;
 80083fc:	f9b7 200c 	ldrsh.w	r2, [r7, #12]
 8008400:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 8008404:	429a      	cmp	r2, r3
 8008406:	dc0d      	bgt.n	8008424 <besttwoavg+0xcc>
 8008408:	f9b7 200c 	ldrsh.w	r2, [r7, #12]
 800840c:	f9b7 300a 	ldrsh.w	r3, [r7, #10]
 8008410:	429a      	cmp	r2, r3
 8008412:	dc07      	bgt.n	8008424 <besttwoavg+0xcc>
 8008414:	f9b7 2006 	ldrsh.w	r2, [r7, #6]
 8008418:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
 800841c:	4413      	add	r3, r2
 800841e:	105b      	asrs	r3, r3, #1
 8008420:	813b      	strh	r3, [r7, #8]
 8008422:	e006      	b.n	8008432 <besttwoavg+0xda>
  else reta = (y + z) >> 1;   //    else if ( dc <= da && dc <= db ) reta = (x + y) >> 1;
 8008424:	f9b7 2004 	ldrsh.w	r2, [r7, #4]
 8008428:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
 800842c:	4413      	add	r3, r2
 800842e:	105b      	asrs	r3, r3, #1
 8008430:	813b      	strh	r3, [r7, #8]

  return (reta);
 8008432:	f9b7 3008 	ldrsh.w	r3, [r7, #8]
}
 8008436:	4618      	mov	r0, r3
 8008438:	3714      	adds	r7, #20
 800843a:	46bd      	mov	sp, r7
 800843c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008440:	4770      	bx	lr
	...

08008444 <XPT2046_Init>:

void XPT2046_Init(void)
{
 8008444:	b480      	push	{r7}
 8008446:	af00      	add	r7, sp, #0
	XPT2046_initilazed = 1;
 8008448:	4b03      	ldr	r3, [pc, #12]	; (8008458 <XPT2046_Init+0x14>)
 800844a:	2201      	movs	r2, #1
 800844c:	701a      	strb	r2, [r3, #0]
}
 800844e:	bf00      	nop
 8008450:	46bd      	mov	sp, r7
 8008452:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008456:	4770      	bx	lr
 8008458:	20000620 	.word	0x20000620

0800845c <XPT2046_Update>:

void XPT2046_Update(uint16_t *x, uint16_t *y)
{
 800845c:	b580      	push	{r7, lr}
 800845e:	b088      	sub	sp, #32
 8008460:	af00      	add	r7, sp, #0
 8008462:	6078      	str	r0, [r7, #4]
 8008464:	6039      	str	r1, [r7, #0]
	int16_t data[6];
	static uint32_t ptime = 0;

	if (XPT2046_initilazed == 0) {
 8008466:	4b44      	ldr	r3, [pc, #272]	; (8008578 <XPT2046_Update+0x11c>)
 8008468:	781b      	ldrb	r3, [r3, #0]
 800846a:	2b00      	cmp	r3, #0
 800846c:	d07d      	beq.n	800856a <XPT2046_Update+0x10e>
		return;
	}

	if (HAL_GetTick() - ptime < MSEC_THRESHOLD) {
 800846e:	f7f9 ffc1 	bl	80023f4 <HAL_GetTick>
 8008472:	4602      	mov	r2, r0
 8008474:	4b41      	ldr	r3, [pc, #260]	; (800857c <XPT2046_Update+0x120>)
 8008476:	681b      	ldr	r3, [r3, #0]
 8008478:	1ad3      	subs	r3, r2, r3
 800847a:	2b02      	cmp	r3, #2
 800847c:	d977      	bls.n	800856e <XPT2046_Update+0x112>
		return;
	}

	int16_t z1 = XPT2046_Read_AD(0xb1); // z1
 800847e:	20b1      	movs	r0, #177	; 0xb1
 8008480:	f7ff ff1e 	bl	80082c0 <XPT2046_Read_AD>
 8008484:	4603      	mov	r3, r0
 8008486:	837b      	strh	r3, [r7, #26]
	int32_t z = z1 + 4095;
 8008488:	f9b7 301a 	ldrsh.w	r3, [r7, #26]
 800848c:	f603 73ff 	addw	r3, r3, #4095	; 0xfff
 8008490:	61fb      	str	r3, [r7, #28]
	int16_t z2 = XPT2046_Read_AD(0xc1); // z2
 8008492:	20c1      	movs	r0, #193	; 0xc1
 8008494:	f7ff ff14 	bl	80082c0 <XPT2046_Read_AD>
 8008498:	4603      	mov	r3, r0
 800849a:	833b      	strh	r3, [r7, #24]
	z -= z2;
 800849c:	f9b7 3018 	ldrsh.w	r3, [r7, #24]
 80084a0:	69fa      	ldr	r2, [r7, #28]
 80084a2:	1ad3      	subs	r3, r2, r3
 80084a4:	61fb      	str	r3, [r7, #28]
	if (z >= Z_THRESHOLD) {
 80084a6:	69fb      	ldr	r3, [r7, #28]
 80084a8:	f5b3 7fc8 	cmp.w	r3, #400	; 0x190
 80084ac:	db1b      	blt.n	80084e6 <XPT2046_Update+0x8a>
		XPT2046_Read_AD(0x91);  // dummy 1st X measure
 80084ae:	2091      	movs	r0, #145	; 0x91
 80084b0:	f7ff ff06 	bl	80082c0 <XPT2046_Read_AD>
		data[0] = XPT2046_Read_AD(0x91);
 80084b4:	2091      	movs	r0, #145	; 0x91
 80084b6:	f7ff ff03 	bl	80082c0 <XPT2046_Read_AD>
 80084ba:	4603      	mov	r3, r0
 80084bc:	b21b      	sxth	r3, r3
 80084be:	813b      	strh	r3, [r7, #8]
		data[1] = XPT2046_Read_AD(0xd1);
 80084c0:	20d1      	movs	r0, #209	; 0xd1
 80084c2:	f7ff fefd 	bl	80082c0 <XPT2046_Read_AD>
 80084c6:	4603      	mov	r3, r0
 80084c8:	b21b      	sxth	r3, r3
 80084ca:	817b      	strh	r3, [r7, #10]
		data[2] = XPT2046_Read_AD(0x91);
 80084cc:	2091      	movs	r0, #145	; 0x91
 80084ce:	f7ff fef7 	bl	80082c0 <XPT2046_Read_AD>
 80084d2:	4603      	mov	r3, r0
 80084d4:	b21b      	sxth	r3, r3
 80084d6:	81bb      	strh	r3, [r7, #12]
		data[3] = XPT2046_Read_AD(0xd1);
 80084d8:	20d1      	movs	r0, #209	; 0xd1
 80084da:	f7ff fef1 	bl	80082c0 <XPT2046_Read_AD>
 80084de:	4603      	mov	r3, r0
 80084e0:	b21b      	sxth	r3, r3
 80084e2:	81fb      	strh	r3, [r7, #14]
 80084e4:	e00a      	b.n	80084fc <XPT2046_Update+0xa0>
	} else {
		data[0] = data[1] = data[2] = data[3] = 0;
 80084e6:	2300      	movs	r3, #0
 80084e8:	81fb      	strh	r3, [r7, #14]
 80084ea:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 80084ee:	81bb      	strh	r3, [r7, #12]
 80084f0:	f9b7 300c 	ldrsh.w	r3, [r7, #12]
 80084f4:	817b      	strh	r3, [r7, #10]
 80084f6:	f9b7 300a 	ldrsh.w	r3, [r7, #10]
 80084fa:	813b      	strh	r3, [r7, #8]
	}
	data[4] = XPT2046_Read_AD(0x91);
 80084fc:	2091      	movs	r0, #145	; 0x91
 80084fe:	f7ff fedf 	bl	80082c0 <XPT2046_Read_AD>
 8008502:	4603      	mov	r3, r0
 8008504:	b21b      	sxth	r3, r3
 8008506:	823b      	strh	r3, [r7, #16]
	data[5] = XPT2046_Read_AD(0xd0);
 8008508:	20d0      	movs	r0, #208	; 0xd0
 800850a:	f7ff fed9 	bl	80082c0 <XPT2046_Read_AD>
 800850e:	4603      	mov	r3, r0
 8008510:	b21b      	sxth	r3, r3
 8008512:	827b      	strh	r3, [r7, #18]
	ptime = HAL_GetTick();
 8008514:	f7f9 ff6e 	bl	80023f4 <HAL_GetTick>
 8008518:	4603      	mov	r3, r0
 800851a:	4a18      	ldr	r2, [pc, #96]	; (800857c <XPT2046_Update+0x120>)
 800851c:	6013      	str	r3, [r2, #0]
	if (z < 0) z = 0;
 800851e:	69fb      	ldr	r3, [r7, #28]
 8008520:	2b00      	cmp	r3, #0
 8008522:	da01      	bge.n	8008528 <XPT2046_Update+0xcc>
 8008524:	2300      	movs	r3, #0
 8008526:	61fb      	str	r3, [r7, #28]
	int16_t intx = besttwoavg( data[0], data[2], data[4] );
 8008528:	f9b7 3008 	ldrsh.w	r3, [r7, #8]
 800852c:	f9b7 100c 	ldrsh.w	r1, [r7, #12]
 8008530:	f9b7 2010 	ldrsh.w	r2, [r7, #16]
 8008534:	4618      	mov	r0, r3
 8008536:	f7ff ff0f 	bl	8008358 <besttwoavg>
 800853a:	4603      	mov	r3, r0
 800853c:	82fb      	strh	r3, [r7, #22]
	int16_t inty = besttwoavg( data[1], data[3], data[5] );
 800853e:	f9b7 300a 	ldrsh.w	r3, [r7, #10]
 8008542:	f9b7 100e 	ldrsh.w	r1, [r7, #14]
 8008546:	f9b7 2012 	ldrsh.w	r2, [r7, #18]
 800854a:	4618      	mov	r0, r3
 800854c:	f7ff ff04 	bl	8008358 <besttwoavg>
 8008550:	4603      	mov	r3, r0
 8008552:	82bb      	strh	r3, [r7, #20]
	if (z >= Z_THRESHOLD) {
 8008554:	69fb      	ldr	r3, [r7, #28]
 8008556:	f5b3 7fc8 	cmp.w	r3, #400	; 0x190
 800855a:	db09      	blt.n	8008570 <XPT2046_Update+0x114>
		*x = intx;
 800855c:	8afa      	ldrh	r2, [r7, #22]
 800855e:	687b      	ldr	r3, [r7, #4]
 8008560:	801a      	strh	r2, [r3, #0]
		*y = inty;
 8008562:	8aba      	ldrh	r2, [r7, #20]
 8008564:	683b      	ldr	r3, [r7, #0]
 8008566:	801a      	strh	r2, [r3, #0]
 8008568:	e002      	b.n	8008570 <XPT2046_Update+0x114>
		return;
 800856a:	bf00      	nop
 800856c:	e000      	b.n	8008570 <XPT2046_Update+0x114>
		return;
 800856e:	bf00      	nop
	}
}
 8008570:	3720      	adds	r7, #32
 8008572:	46bd      	mov	sp, r7
 8008574:	bd80      	pop	{r7, pc}
 8008576:	bf00      	nop
 8008578:	20000620 	.word	0x20000620
 800857c:	20000624 	.word	0x20000624

08008580 <XPT2046_IsReasonable>:

uint8_t XPT2046_IsReasonable(uint16_t x, uint16_t y)
{
 8008580:	b480      	push	{r7}
 8008582:	b083      	sub	sp, #12
 8008584:	af00      	add	r7, sp, #0
 8008586:	4603      	mov	r3, r0
 8008588:	460a      	mov	r2, r1
 800858a:	80fb      	strh	r3, [r7, #6]
 800858c:	4613      	mov	r3, r2
 800858e:	80bb      	strh	r3, [r7, #4]
	if (x >= XPT_XMIN && x <= XPT_XMAX && y >= XPT_YMIN && y <= XPT_YMAX) {
 8008590:	88fb      	ldrh	r3, [r7, #6]
 8008592:	f5b3 7faf 	cmp.w	r3, #350	; 0x15e
 8008596:	d30e      	bcc.n	80085b6 <XPT2046_IsReasonable+0x36>
 8008598:	88fb      	ldrh	r3, [r7, #6]
 800859a:	f640 62d8 	movw	r2, #3800	; 0xed8
 800859e:	4293      	cmp	r3, r2
 80085a0:	d809      	bhi.n	80085b6 <XPT2046_IsReasonable+0x36>
 80085a2:	88bb      	ldrh	r3, [r7, #4]
 80085a4:	f5b3 7faf 	cmp.w	r3, #350	; 0x15e
 80085a8:	d305      	bcc.n	80085b6 <XPT2046_IsReasonable+0x36>
 80085aa:	88bb      	ldrh	r3, [r7, #4]
 80085ac:	f5b3 6f61 	cmp.w	r3, #3600	; 0xe10
 80085b0:	d801      	bhi.n	80085b6 <XPT2046_IsReasonable+0x36>
		return 1;
 80085b2:	2301      	movs	r3, #1
 80085b4:	e000      	b.n	80085b8 <XPT2046_IsReasonable+0x38>
	}
	return 0;
 80085b6:	2300      	movs	r3, #0
}
 80085b8:	4618      	mov	r0, r3
 80085ba:	370c      	adds	r7, #12
 80085bc:	46bd      	mov	sp, r7
 80085be:	f85d 7b04 	ldr.w	r7, [sp], #4
 80085c2:	4770      	bx	lr

080085c4 <USBD_CDC_Init>:
  * @param  pdev: device instance
  * @param  cfgidx: Configuration index
  * @retval status
  */
static uint8_t USBD_CDC_Init(USBD_HandleTypeDef *pdev, uint8_t cfgidx)
{
 80085c4:	b580      	push	{r7, lr}
 80085c6:	b084      	sub	sp, #16
 80085c8:	af00      	add	r7, sp, #0
 80085ca:	6078      	str	r0, [r7, #4]
 80085cc:	460b      	mov	r3, r1
 80085ce:	70fb      	strb	r3, [r7, #3]
  UNUSED(cfgidx);
  USBD_CDC_HandleTypeDef *hcdc;

  hcdc = (USBD_CDC_HandleTypeDef *)USBD_malloc(sizeof(USBD_CDC_HandleTypeDef));
 80085d0:	f44f 7007 	mov.w	r0, #540	; 0x21c
 80085d4:	f009 fc3a 	bl	8011e4c <USBD_static_malloc>
 80085d8:	60f8      	str	r0, [r7, #12]

  if (hcdc == NULL)
 80085da:	68fb      	ldr	r3, [r7, #12]
 80085dc:	2b00      	cmp	r3, #0
 80085de:	d109      	bne.n	80085f4 <USBD_CDC_Init+0x30>
  {
    pdev->pClassDataCmsit[pdev->classId] = NULL;
 80085e0:	687b      	ldr	r3, [r7, #4]
 80085e2:	f8d3 22d4 	ldr.w	r2, [r3, #724]	; 0x2d4
 80085e6:	687b      	ldr	r3, [r7, #4]
 80085e8:	32b0      	adds	r2, #176	; 0xb0
 80085ea:	2100      	movs	r1, #0
 80085ec:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
    return (uint8_t)USBD_EMEM;
 80085f0:	2302      	movs	r3, #2
 80085f2:	e0d4      	b.n	800879e <USBD_CDC_Init+0x1da>
  }

  (void)USBD_memset(hcdc, 0, sizeof(USBD_CDC_HandleTypeDef));
 80085f4:	f44f 7207 	mov.w	r2, #540	; 0x21c
 80085f8:	2100      	movs	r1, #0
 80085fa:	68f8      	ldr	r0, [r7, #12]
 80085fc:	f022 fd67 	bl	802b0ce <memset>

  pdev->pClassDataCmsit[pdev->classId] = (void *)hcdc;
 8008600:	687b      	ldr	r3, [r7, #4]
 8008602:	f8d3 22d4 	ldr.w	r2, [r3, #724]	; 0x2d4
 8008606:	687b      	ldr	r3, [r7, #4]
 8008608:	32b0      	adds	r2, #176	; 0xb0
 800860a:	68f9      	ldr	r1, [r7, #12]
 800860c:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
  pdev->pClassData = pdev->pClassDataCmsit[pdev->classId];
 8008610:	687b      	ldr	r3, [r7, #4]
 8008612:	f8d3 22d4 	ldr.w	r2, [r3, #724]	; 0x2d4
 8008616:	687b      	ldr	r3, [r7, #4]
 8008618:	32b0      	adds	r2, #176	; 0xb0
 800861a:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 800861e:	687b      	ldr	r3, [r7, #4]
 8008620:	f8c3 22bc 	str.w	r2, [r3, #700]	; 0x2bc
  CDCInEpAdd  = USBD_CoreGetEPAdd(pdev, USBD_EP_IN, USBD_EP_TYPE_BULK, (uint8_t)pdev->classId);
  CDCOutEpAdd = USBD_CoreGetEPAdd(pdev, USBD_EP_OUT, USBD_EP_TYPE_BULK, (uint8_t)pdev->classId);
  CDCCmdEpAdd = USBD_CoreGetEPAdd(pdev, USBD_EP_IN, USBD_EP_TYPE_INTR, (uint8_t)pdev->classId);
#endif /* USE_USBD_COMPOSITE */

  if (pdev->dev_speed == USBD_SPEED_HIGH)
 8008624:	687b      	ldr	r3, [r7, #4]
 8008626:	7c1b      	ldrb	r3, [r3, #16]
 8008628:	2b00      	cmp	r3, #0
 800862a:	d138      	bne.n	800869e <USBD_CDC_Init+0xda>
  {
    /* Open EP IN */
    (void)USBD_LL_OpenEP(pdev, CDCInEpAdd, USBD_EP_TYPE_BULK,
 800862c:	4b5e      	ldr	r3, [pc, #376]	; (80087a8 <USBD_CDC_Init+0x1e4>)
 800862e:	7819      	ldrb	r1, [r3, #0]
 8008630:	f44f 7300 	mov.w	r3, #512	; 0x200
 8008634:	2202      	movs	r2, #2
 8008636:	6878      	ldr	r0, [r7, #4]
 8008638:	f009 fae5 	bl	8011c06 <USBD_LL_OpenEP>
                         CDC_DATA_HS_IN_PACKET_SIZE);

    pdev->ep_in[CDCInEpAdd & 0xFU].is_used = 1U;
 800863c:	4b5a      	ldr	r3, [pc, #360]	; (80087a8 <USBD_CDC_Init+0x1e4>)
 800863e:	781b      	ldrb	r3, [r3, #0]
 8008640:	f003 020f 	and.w	r2, r3, #15
 8008644:	6879      	ldr	r1, [r7, #4]
 8008646:	4613      	mov	r3, r2
 8008648:	009b      	lsls	r3, r3, #2
 800864a:	4413      	add	r3, r2
 800864c:	009b      	lsls	r3, r3, #2
 800864e:	440b      	add	r3, r1
 8008650:	3324      	adds	r3, #36	; 0x24
 8008652:	2201      	movs	r2, #1
 8008654:	801a      	strh	r2, [r3, #0]

    /* Open EP OUT */
    (void)USBD_LL_OpenEP(pdev, CDCOutEpAdd, USBD_EP_TYPE_BULK,
 8008656:	4b55      	ldr	r3, [pc, #340]	; (80087ac <USBD_CDC_Init+0x1e8>)
 8008658:	7819      	ldrb	r1, [r3, #0]
 800865a:	f44f 7300 	mov.w	r3, #512	; 0x200
 800865e:	2202      	movs	r2, #2
 8008660:	6878      	ldr	r0, [r7, #4]
 8008662:	f009 fad0 	bl	8011c06 <USBD_LL_OpenEP>
                         CDC_DATA_HS_OUT_PACKET_SIZE);

    pdev->ep_out[CDCOutEpAdd & 0xFU].is_used = 1U;
 8008666:	4b51      	ldr	r3, [pc, #324]	; (80087ac <USBD_CDC_Init+0x1e8>)
 8008668:	781b      	ldrb	r3, [r3, #0]
 800866a:	f003 020f 	and.w	r2, r3, #15
 800866e:	6879      	ldr	r1, [r7, #4]
 8008670:	4613      	mov	r3, r2
 8008672:	009b      	lsls	r3, r3, #2
 8008674:	4413      	add	r3, r2
 8008676:	009b      	lsls	r3, r3, #2
 8008678:	440b      	add	r3, r1
 800867a:	f503 73b2 	add.w	r3, r3, #356	; 0x164
 800867e:	2201      	movs	r2, #1
 8008680:	801a      	strh	r2, [r3, #0]

    /* Set bInterval for CDC CMD Endpoint */
    pdev->ep_in[CDCCmdEpAdd & 0xFU].bInterval = CDC_HS_BINTERVAL;
 8008682:	4b4b      	ldr	r3, [pc, #300]	; (80087b0 <USBD_CDC_Init+0x1ec>)
 8008684:	781b      	ldrb	r3, [r3, #0]
 8008686:	f003 020f 	and.w	r2, r3, #15
 800868a:	6879      	ldr	r1, [r7, #4]
 800868c:	4613      	mov	r3, r2
 800868e:	009b      	lsls	r3, r3, #2
 8008690:	4413      	add	r3, r2
 8008692:	009b      	lsls	r3, r3, #2
 8008694:	440b      	add	r3, r1
 8008696:	3326      	adds	r3, #38	; 0x26
 8008698:	2210      	movs	r2, #16
 800869a:	801a      	strh	r2, [r3, #0]
 800869c:	e035      	b.n	800870a <USBD_CDC_Init+0x146>
  }
  else
  {
    /* Open EP IN */
    (void)USBD_LL_OpenEP(pdev, CDCInEpAdd, USBD_EP_TYPE_BULK,
 800869e:	4b42      	ldr	r3, [pc, #264]	; (80087a8 <USBD_CDC_Init+0x1e4>)
 80086a0:	7819      	ldrb	r1, [r3, #0]
 80086a2:	2340      	movs	r3, #64	; 0x40
 80086a4:	2202      	movs	r2, #2
 80086a6:	6878      	ldr	r0, [r7, #4]
 80086a8:	f009 faad 	bl	8011c06 <USBD_LL_OpenEP>
                         CDC_DATA_FS_IN_PACKET_SIZE);

    pdev->ep_in[CDCInEpAdd & 0xFU].is_used = 1U;
 80086ac:	4b3e      	ldr	r3, [pc, #248]	; (80087a8 <USBD_CDC_Init+0x1e4>)
 80086ae:	781b      	ldrb	r3, [r3, #0]
 80086b0:	f003 020f 	and.w	r2, r3, #15
 80086b4:	6879      	ldr	r1, [r7, #4]
 80086b6:	4613      	mov	r3, r2
 80086b8:	009b      	lsls	r3, r3, #2
 80086ba:	4413      	add	r3, r2
 80086bc:	009b      	lsls	r3, r3, #2
 80086be:	440b      	add	r3, r1
 80086c0:	3324      	adds	r3, #36	; 0x24
 80086c2:	2201      	movs	r2, #1
 80086c4:	801a      	strh	r2, [r3, #0]

    /* Open EP OUT */
    (void)USBD_LL_OpenEP(pdev, CDCOutEpAdd, USBD_EP_TYPE_BULK,
 80086c6:	4b39      	ldr	r3, [pc, #228]	; (80087ac <USBD_CDC_Init+0x1e8>)
 80086c8:	7819      	ldrb	r1, [r3, #0]
 80086ca:	2340      	movs	r3, #64	; 0x40
 80086cc:	2202      	movs	r2, #2
 80086ce:	6878      	ldr	r0, [r7, #4]
 80086d0:	f009 fa99 	bl	8011c06 <USBD_LL_OpenEP>
                         CDC_DATA_FS_OUT_PACKET_SIZE);

    pdev->ep_out[CDCOutEpAdd & 0xFU].is_used = 1U;
 80086d4:	4b35      	ldr	r3, [pc, #212]	; (80087ac <USBD_CDC_Init+0x1e8>)
 80086d6:	781b      	ldrb	r3, [r3, #0]
 80086d8:	f003 020f 	and.w	r2, r3, #15
 80086dc:	6879      	ldr	r1, [r7, #4]
 80086de:	4613      	mov	r3, r2
 80086e0:	009b      	lsls	r3, r3, #2
 80086e2:	4413      	add	r3, r2
 80086e4:	009b      	lsls	r3, r3, #2
 80086e6:	440b      	add	r3, r1
 80086e8:	f503 73b2 	add.w	r3, r3, #356	; 0x164
 80086ec:	2201      	movs	r2, #1
 80086ee:	801a      	strh	r2, [r3, #0]

    /* Set bInterval for CMD Endpoint */
    pdev->ep_in[CDCCmdEpAdd & 0xFU].bInterval = CDC_FS_BINTERVAL;
 80086f0:	4b2f      	ldr	r3, [pc, #188]	; (80087b0 <USBD_CDC_Init+0x1ec>)
 80086f2:	781b      	ldrb	r3, [r3, #0]
 80086f4:	f003 020f 	and.w	r2, r3, #15
 80086f8:	6879      	ldr	r1, [r7, #4]
 80086fa:	4613      	mov	r3, r2
 80086fc:	009b      	lsls	r3, r3, #2
 80086fe:	4413      	add	r3, r2
 8008700:	009b      	lsls	r3, r3, #2
 8008702:	440b      	add	r3, r1
 8008704:	3326      	adds	r3, #38	; 0x26
 8008706:	2210      	movs	r2, #16
 8008708:	801a      	strh	r2, [r3, #0]
  }

  /* Open Command IN EP */
  (void)USBD_LL_OpenEP(pdev, CDCCmdEpAdd, USBD_EP_TYPE_INTR, CDC_CMD_PACKET_SIZE);
 800870a:	4b29      	ldr	r3, [pc, #164]	; (80087b0 <USBD_CDC_Init+0x1ec>)
 800870c:	7819      	ldrb	r1, [r3, #0]
 800870e:	2308      	movs	r3, #8
 8008710:	2203      	movs	r2, #3
 8008712:	6878      	ldr	r0, [r7, #4]
 8008714:	f009 fa77 	bl	8011c06 <USBD_LL_OpenEP>
  pdev->ep_in[CDCCmdEpAdd & 0xFU].is_used = 1U;
 8008718:	4b25      	ldr	r3, [pc, #148]	; (80087b0 <USBD_CDC_Init+0x1ec>)
 800871a:	781b      	ldrb	r3, [r3, #0]
 800871c:	f003 020f 	and.w	r2, r3, #15
 8008720:	6879      	ldr	r1, [r7, #4]
 8008722:	4613      	mov	r3, r2
 8008724:	009b      	lsls	r3, r3, #2
 8008726:	4413      	add	r3, r2
 8008728:	009b      	lsls	r3, r3, #2
 800872a:	440b      	add	r3, r1
 800872c:	3324      	adds	r3, #36	; 0x24
 800872e:	2201      	movs	r2, #1
 8008730:	801a      	strh	r2, [r3, #0]

  hcdc->RxBuffer = NULL;
 8008732:	68fb      	ldr	r3, [r7, #12]
 8008734:	2200      	movs	r2, #0
 8008736:	f8c3 2204 	str.w	r2, [r3, #516]	; 0x204

  /* Init  physical Interface components */
  ((USBD_CDC_ItfTypeDef *)pdev->pUserData[pdev->classId])->Init();
 800873a:	687b      	ldr	r3, [r7, #4]
 800873c:	f8d3 32d4 	ldr.w	r3, [r3, #724]	; 0x2d4
 8008740:	687a      	ldr	r2, [r7, #4]
 8008742:	33b0      	adds	r3, #176	; 0xb0
 8008744:	009b      	lsls	r3, r3, #2
 8008746:	4413      	add	r3, r2
 8008748:	685b      	ldr	r3, [r3, #4]
 800874a:	681b      	ldr	r3, [r3, #0]
 800874c:	4798      	blx	r3

  /* Init Xfer states */
  hcdc->TxState = 0U;
 800874e:	68fb      	ldr	r3, [r7, #12]
 8008750:	2200      	movs	r2, #0
 8008752:	f8c3 2214 	str.w	r2, [r3, #532]	; 0x214
  hcdc->RxState = 0U;
 8008756:	68fb      	ldr	r3, [r7, #12]
 8008758:	2200      	movs	r2, #0
 800875a:	f8c3 2218 	str.w	r2, [r3, #536]	; 0x218

  if (hcdc->RxBuffer == NULL)
 800875e:	68fb      	ldr	r3, [r7, #12]
 8008760:	f8d3 3204 	ldr.w	r3, [r3, #516]	; 0x204
 8008764:	2b00      	cmp	r3, #0
 8008766:	d101      	bne.n	800876c <USBD_CDC_Init+0x1a8>
  {
    return (uint8_t)USBD_EMEM;
 8008768:	2302      	movs	r3, #2
 800876a:	e018      	b.n	800879e <USBD_CDC_Init+0x1da>
  }

  if (pdev->dev_speed == USBD_SPEED_HIGH)
 800876c:	687b      	ldr	r3, [r7, #4]
 800876e:	7c1b      	ldrb	r3, [r3, #16]
 8008770:	2b00      	cmp	r3, #0
 8008772:	d10a      	bne.n	800878a <USBD_CDC_Init+0x1c6>
  {
    /* Prepare Out endpoint to receive next packet */
    (void)USBD_LL_PrepareReceive(pdev, CDCOutEpAdd, hcdc->RxBuffer,
 8008774:	4b0d      	ldr	r3, [pc, #52]	; (80087ac <USBD_CDC_Init+0x1e8>)
 8008776:	7819      	ldrb	r1, [r3, #0]
 8008778:	68fb      	ldr	r3, [r7, #12]
 800877a:	f8d3 2204 	ldr.w	r2, [r3, #516]	; 0x204
 800877e:	f44f 7300 	mov.w	r3, #512	; 0x200
 8008782:	6878      	ldr	r0, [r7, #4]
 8008784:	f009 fb2e 	bl	8011de4 <USBD_LL_PrepareReceive>
 8008788:	e008      	b.n	800879c <USBD_CDC_Init+0x1d8>
                                 CDC_DATA_HS_OUT_PACKET_SIZE);
  }
  else
  {
    /* Prepare Out endpoint to receive next packet */
    (void)USBD_LL_PrepareReceive(pdev, CDCOutEpAdd, hcdc->RxBuffer,
 800878a:	4b08      	ldr	r3, [pc, #32]	; (80087ac <USBD_CDC_Init+0x1e8>)
 800878c:	7819      	ldrb	r1, [r3, #0]
 800878e:	68fb      	ldr	r3, [r7, #12]
 8008790:	f8d3 2204 	ldr.w	r2, [r3, #516]	; 0x204
 8008794:	2340      	movs	r3, #64	; 0x40
 8008796:	6878      	ldr	r0, [r7, #4]
 8008798:	f009 fb24 	bl	8011de4 <USBD_LL_PrepareReceive>
                                 CDC_DATA_FS_OUT_PACKET_SIZE);
  }

  return (uint8_t)USBD_OK;
 800879c:	2300      	movs	r3, #0
}
 800879e:	4618      	mov	r0, r3
 80087a0:	3710      	adds	r7, #16
 80087a2:	46bd      	mov	sp, r7
 80087a4:	bd80      	pop	{r7, pc}
 80087a6:	bf00      	nop
 80087a8:	2000009f 	.word	0x2000009f
 80087ac:	200000a0 	.word	0x200000a0
 80087b0:	200000a1 	.word	0x200000a1

080087b4 <USBD_CDC_DeInit>:
  * @param  pdev: device instance
  * @param  cfgidx: Configuration index
  * @retval status
  */
static uint8_t USBD_CDC_DeInit(USBD_HandleTypeDef *pdev, uint8_t cfgidx)
{
 80087b4:	b580      	push	{r7, lr}
 80087b6:	b082      	sub	sp, #8
 80087b8:	af00      	add	r7, sp, #0
 80087ba:	6078      	str	r0, [r7, #4]
 80087bc:	460b      	mov	r3, r1
 80087be:	70fb      	strb	r3, [r7, #3]
  CDCOutEpAdd = USBD_CoreGetEPAdd(pdev, USBD_EP_OUT, USBD_EP_TYPE_BULK, (uint8_t)pdev->classId);
  CDCCmdEpAdd = USBD_CoreGetEPAdd(pdev, USBD_EP_IN, USBD_EP_TYPE_INTR, (uint8_t)pdev->classId);
#endif /* USE_USBD_COMPOSITE */

  /* Close EP IN */
  (void)USBD_LL_CloseEP(pdev, CDCInEpAdd);
 80087c0:	4b3a      	ldr	r3, [pc, #232]	; (80088ac <USBD_CDC_DeInit+0xf8>)
 80087c2:	781b      	ldrb	r3, [r3, #0]
 80087c4:	4619      	mov	r1, r3
 80087c6:	6878      	ldr	r0, [r7, #4]
 80087c8:	f009 fa43 	bl	8011c52 <USBD_LL_CloseEP>
  pdev->ep_in[CDCInEpAdd & 0xFU].is_used = 0U;
 80087cc:	4b37      	ldr	r3, [pc, #220]	; (80088ac <USBD_CDC_DeInit+0xf8>)
 80087ce:	781b      	ldrb	r3, [r3, #0]
 80087d0:	f003 020f 	and.w	r2, r3, #15
 80087d4:	6879      	ldr	r1, [r7, #4]
 80087d6:	4613      	mov	r3, r2
 80087d8:	009b      	lsls	r3, r3, #2
 80087da:	4413      	add	r3, r2
 80087dc:	009b      	lsls	r3, r3, #2
 80087de:	440b      	add	r3, r1
 80087e0:	3324      	adds	r3, #36	; 0x24
 80087e2:	2200      	movs	r2, #0
 80087e4:	801a      	strh	r2, [r3, #0]

  /* Close EP OUT */
  (void)USBD_LL_CloseEP(pdev, CDCOutEpAdd);
 80087e6:	4b32      	ldr	r3, [pc, #200]	; (80088b0 <USBD_CDC_DeInit+0xfc>)
 80087e8:	781b      	ldrb	r3, [r3, #0]
 80087ea:	4619      	mov	r1, r3
 80087ec:	6878      	ldr	r0, [r7, #4]
 80087ee:	f009 fa30 	bl	8011c52 <USBD_LL_CloseEP>
  pdev->ep_out[CDCOutEpAdd & 0xFU].is_used = 0U;
 80087f2:	4b2f      	ldr	r3, [pc, #188]	; (80088b0 <USBD_CDC_DeInit+0xfc>)
 80087f4:	781b      	ldrb	r3, [r3, #0]
 80087f6:	f003 020f 	and.w	r2, r3, #15
 80087fa:	6879      	ldr	r1, [r7, #4]
 80087fc:	4613      	mov	r3, r2
 80087fe:	009b      	lsls	r3, r3, #2
 8008800:	4413      	add	r3, r2
 8008802:	009b      	lsls	r3, r3, #2
 8008804:	440b      	add	r3, r1
 8008806:	f503 73b2 	add.w	r3, r3, #356	; 0x164
 800880a:	2200      	movs	r2, #0
 800880c:	801a      	strh	r2, [r3, #0]

  /* Close Command IN EP */
  (void)USBD_LL_CloseEP(pdev, CDCCmdEpAdd);
 800880e:	4b29      	ldr	r3, [pc, #164]	; (80088b4 <USBD_CDC_DeInit+0x100>)
 8008810:	781b      	ldrb	r3, [r3, #0]
 8008812:	4619      	mov	r1, r3
 8008814:	6878      	ldr	r0, [r7, #4]
 8008816:	f009 fa1c 	bl	8011c52 <USBD_LL_CloseEP>
  pdev->ep_in[CDCCmdEpAdd & 0xFU].is_used = 0U;
 800881a:	4b26      	ldr	r3, [pc, #152]	; (80088b4 <USBD_CDC_DeInit+0x100>)
 800881c:	781b      	ldrb	r3, [r3, #0]
 800881e:	f003 020f 	and.w	r2, r3, #15
 8008822:	6879      	ldr	r1, [r7, #4]
 8008824:	4613      	mov	r3, r2
 8008826:	009b      	lsls	r3, r3, #2
 8008828:	4413      	add	r3, r2
 800882a:	009b      	lsls	r3, r3, #2
 800882c:	440b      	add	r3, r1
 800882e:	3324      	adds	r3, #36	; 0x24
 8008830:	2200      	movs	r2, #0
 8008832:	801a      	strh	r2, [r3, #0]
  pdev->ep_in[CDCCmdEpAdd & 0xFU].bInterval = 0U;
 8008834:	4b1f      	ldr	r3, [pc, #124]	; (80088b4 <USBD_CDC_DeInit+0x100>)
 8008836:	781b      	ldrb	r3, [r3, #0]
 8008838:	f003 020f 	and.w	r2, r3, #15
 800883c:	6879      	ldr	r1, [r7, #4]
 800883e:	4613      	mov	r3, r2
 8008840:	009b      	lsls	r3, r3, #2
 8008842:	4413      	add	r3, r2
 8008844:	009b      	lsls	r3, r3, #2
 8008846:	440b      	add	r3, r1
 8008848:	3326      	adds	r3, #38	; 0x26
 800884a:	2200      	movs	r2, #0
 800884c:	801a      	strh	r2, [r3, #0]

  /* DeInit  physical Interface components */
  if (pdev->pClassDataCmsit[pdev->classId] != NULL)
 800884e:	687b      	ldr	r3, [r7, #4]
 8008850:	f8d3 22d4 	ldr.w	r2, [r3, #724]	; 0x2d4
 8008854:	687b      	ldr	r3, [r7, #4]
 8008856:	32b0      	adds	r2, #176	; 0xb0
 8008858:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 800885c:	2b00      	cmp	r3, #0
 800885e:	d01f      	beq.n	80088a0 <USBD_CDC_DeInit+0xec>
  {
    ((USBD_CDC_ItfTypeDef *)pdev->pUserData[pdev->classId])->DeInit();
 8008860:	687b      	ldr	r3, [r7, #4]
 8008862:	f8d3 32d4 	ldr.w	r3, [r3, #724]	; 0x2d4
 8008866:	687a      	ldr	r2, [r7, #4]
 8008868:	33b0      	adds	r3, #176	; 0xb0
 800886a:	009b      	lsls	r3, r3, #2
 800886c:	4413      	add	r3, r2
 800886e:	685b      	ldr	r3, [r3, #4]
 8008870:	685b      	ldr	r3, [r3, #4]
 8008872:	4798      	blx	r3
    (void)USBD_free(pdev->pClassDataCmsit[pdev->classId]);
 8008874:	687b      	ldr	r3, [r7, #4]
 8008876:	f8d3 22d4 	ldr.w	r2, [r3, #724]	; 0x2d4
 800887a:	687b      	ldr	r3, [r7, #4]
 800887c:	32b0      	adds	r2, #176	; 0xb0
 800887e:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8008882:	4618      	mov	r0, r3
 8008884:	f009 faf0 	bl	8011e68 <USBD_static_free>
    pdev->pClassDataCmsit[pdev->classId] = NULL;
 8008888:	687b      	ldr	r3, [r7, #4]
 800888a:	f8d3 22d4 	ldr.w	r2, [r3, #724]	; 0x2d4
 800888e:	687b      	ldr	r3, [r7, #4]
 8008890:	32b0      	adds	r2, #176	; 0xb0
 8008892:	2100      	movs	r1, #0
 8008894:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
    pdev->pClassData = NULL;
 8008898:	687b      	ldr	r3, [r7, #4]
 800889a:	2200      	movs	r2, #0
 800889c:	f8c3 22bc 	str.w	r2, [r3, #700]	; 0x2bc
  }

  return (uint8_t)USBD_OK;
 80088a0:	2300      	movs	r3, #0
}
 80088a2:	4618      	mov	r0, r3
 80088a4:	3708      	adds	r7, #8
 80088a6:	46bd      	mov	sp, r7
 80088a8:	bd80      	pop	{r7, pc}
 80088aa:	bf00      	nop
 80088ac:	2000009f 	.word	0x2000009f
 80088b0:	200000a0 	.word	0x200000a0
 80088b4:	200000a1 	.word	0x200000a1

080088b8 <USBD_CDC_Setup>:
  * @param  req: usb requests
  * @retval status
  */
static uint8_t USBD_CDC_Setup(USBD_HandleTypeDef *pdev,
                              USBD_SetupReqTypedef *req)
{
 80088b8:	b580      	push	{r7, lr}
 80088ba:	b086      	sub	sp, #24
 80088bc:	af00      	add	r7, sp, #0
 80088be:	6078      	str	r0, [r7, #4]
 80088c0:	6039      	str	r1, [r7, #0]
  USBD_CDC_HandleTypeDef *hcdc = (USBD_CDC_HandleTypeDef *)pdev->pClassDataCmsit[pdev->classId];
 80088c2:	687b      	ldr	r3, [r7, #4]
 80088c4:	f8d3 22d4 	ldr.w	r2, [r3, #724]	; 0x2d4
 80088c8:	687b      	ldr	r3, [r7, #4]
 80088ca:	32b0      	adds	r2, #176	; 0xb0
 80088cc:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 80088d0:	613b      	str	r3, [r7, #16]
  uint16_t len;
  uint8_t ifalt = 0U;
 80088d2:	2300      	movs	r3, #0
 80088d4:	737b      	strb	r3, [r7, #13]
  uint16_t status_info = 0U;
 80088d6:	2300      	movs	r3, #0
 80088d8:	817b      	strh	r3, [r7, #10]
  USBD_StatusTypeDef ret = USBD_OK;
 80088da:	2300      	movs	r3, #0
 80088dc:	75fb      	strb	r3, [r7, #23]

  if (hcdc == NULL)
 80088de:	693b      	ldr	r3, [r7, #16]
 80088e0:	2b00      	cmp	r3, #0
 80088e2:	d101      	bne.n	80088e8 <USBD_CDC_Setup+0x30>
  {
    return (uint8_t)USBD_FAIL;
 80088e4:	2303      	movs	r3, #3
 80088e6:	e0bf      	b.n	8008a68 <USBD_CDC_Setup+0x1b0>
  }

  switch (req->bmRequest & USB_REQ_TYPE_MASK)
 80088e8:	683b      	ldr	r3, [r7, #0]
 80088ea:	781b      	ldrb	r3, [r3, #0]
 80088ec:	f003 0360 	and.w	r3, r3, #96	; 0x60
 80088f0:	2b00      	cmp	r3, #0
 80088f2:	d050      	beq.n	8008996 <USBD_CDC_Setup+0xde>
 80088f4:	2b20      	cmp	r3, #32
 80088f6:	f040 80af 	bne.w	8008a58 <USBD_CDC_Setup+0x1a0>
  {
    case USB_REQ_TYPE_CLASS:
      if (req->wLength != 0U)
 80088fa:	683b      	ldr	r3, [r7, #0]
 80088fc:	88db      	ldrh	r3, [r3, #6]
 80088fe:	2b00      	cmp	r3, #0
 8008900:	d03a      	beq.n	8008978 <USBD_CDC_Setup+0xc0>
      {
        if ((req->bmRequest & 0x80U) != 0U)
 8008902:	683b      	ldr	r3, [r7, #0]
 8008904:	781b      	ldrb	r3, [r3, #0]
 8008906:	b25b      	sxtb	r3, r3
 8008908:	2b00      	cmp	r3, #0
 800890a:	da1b      	bge.n	8008944 <USBD_CDC_Setup+0x8c>
        {
          ((USBD_CDC_ItfTypeDef *)pdev->pUserData[pdev->classId])->Control(req->bRequest,
 800890c:	687b      	ldr	r3, [r7, #4]
 800890e:	f8d3 32d4 	ldr.w	r3, [r3, #724]	; 0x2d4
 8008912:	687a      	ldr	r2, [r7, #4]
 8008914:	33b0      	adds	r3, #176	; 0xb0
 8008916:	009b      	lsls	r3, r3, #2
 8008918:	4413      	add	r3, r2
 800891a:	685b      	ldr	r3, [r3, #4]
 800891c:	689b      	ldr	r3, [r3, #8]
 800891e:	683a      	ldr	r2, [r7, #0]
 8008920:	7850      	ldrb	r0, [r2, #1]
                                                                           (uint8_t *)hcdc->data,
 8008922:	6939      	ldr	r1, [r7, #16]
          ((USBD_CDC_ItfTypeDef *)pdev->pUserData[pdev->classId])->Control(req->bRequest,
 8008924:	683a      	ldr	r2, [r7, #0]
 8008926:	88d2      	ldrh	r2, [r2, #6]
 8008928:	4798      	blx	r3
                                                                           req->wLength);

          len = MIN(CDC_REQ_MAX_DATA_SIZE, req->wLength);
 800892a:	683b      	ldr	r3, [r7, #0]
 800892c:	88db      	ldrh	r3, [r3, #6]
 800892e:	2b07      	cmp	r3, #7
 8008930:	bf28      	it	cs
 8008932:	2307      	movcs	r3, #7
 8008934:	81fb      	strh	r3, [r7, #14]
          (void)USBD_CtlSendData(pdev, (uint8_t *)hcdc->data, len);
 8008936:	693b      	ldr	r3, [r7, #16]
 8008938:	89fa      	ldrh	r2, [r7, #14]
 800893a:	4619      	mov	r1, r3
 800893c:	6878      	ldr	r0, [r7, #4]
 800893e:	f001 fd89 	bl	800a454 <USBD_CtlSendData>
      else
      {
        ((USBD_CDC_ItfTypeDef *)pdev->pUserData[pdev->classId])->Control(req->bRequest,
                                                                         (uint8_t *)req, 0U);
      }
      break;
 8008942:	e090      	b.n	8008a66 <USBD_CDC_Setup+0x1ae>
          hcdc->CmdOpCode = req->bRequest;
 8008944:	683b      	ldr	r3, [r7, #0]
 8008946:	785a      	ldrb	r2, [r3, #1]
 8008948:	693b      	ldr	r3, [r7, #16]
 800894a:	f883 2200 	strb.w	r2, [r3, #512]	; 0x200
          hcdc->CmdLength = (uint8_t)MIN(req->wLength, USB_MAX_EP0_SIZE);
 800894e:	683b      	ldr	r3, [r7, #0]
 8008950:	88db      	ldrh	r3, [r3, #6]
 8008952:	2b3f      	cmp	r3, #63	; 0x3f
 8008954:	d803      	bhi.n	800895e <USBD_CDC_Setup+0xa6>
 8008956:	683b      	ldr	r3, [r7, #0]
 8008958:	88db      	ldrh	r3, [r3, #6]
 800895a:	b2da      	uxtb	r2, r3
 800895c:	e000      	b.n	8008960 <USBD_CDC_Setup+0xa8>
 800895e:	2240      	movs	r2, #64	; 0x40
 8008960:	693b      	ldr	r3, [r7, #16]
 8008962:	f883 2201 	strb.w	r2, [r3, #513]	; 0x201
          (void)USBD_CtlPrepareRx(pdev, (uint8_t *)hcdc->data, hcdc->CmdLength);
 8008966:	6939      	ldr	r1, [r7, #16]
 8008968:	693b      	ldr	r3, [r7, #16]
 800896a:	f893 3201 	ldrb.w	r3, [r3, #513]	; 0x201
 800896e:	461a      	mov	r2, r3
 8008970:	6878      	ldr	r0, [r7, #4]
 8008972:	f001 fd9b 	bl	800a4ac <USBD_CtlPrepareRx>
      break;
 8008976:	e076      	b.n	8008a66 <USBD_CDC_Setup+0x1ae>
        ((USBD_CDC_ItfTypeDef *)pdev->pUserData[pdev->classId])->Control(req->bRequest,
 8008978:	687b      	ldr	r3, [r7, #4]
 800897a:	f8d3 32d4 	ldr.w	r3, [r3, #724]	; 0x2d4
 800897e:	687a      	ldr	r2, [r7, #4]
 8008980:	33b0      	adds	r3, #176	; 0xb0
 8008982:	009b      	lsls	r3, r3, #2
 8008984:	4413      	add	r3, r2
 8008986:	685b      	ldr	r3, [r3, #4]
 8008988:	689b      	ldr	r3, [r3, #8]
 800898a:	683a      	ldr	r2, [r7, #0]
 800898c:	7850      	ldrb	r0, [r2, #1]
 800898e:	2200      	movs	r2, #0
 8008990:	6839      	ldr	r1, [r7, #0]
 8008992:	4798      	blx	r3
      break;
 8008994:	e067      	b.n	8008a66 <USBD_CDC_Setup+0x1ae>

    case USB_REQ_TYPE_STANDARD:
      switch (req->bRequest)
 8008996:	683b      	ldr	r3, [r7, #0]
 8008998:	785b      	ldrb	r3, [r3, #1]
 800899a:	2b0b      	cmp	r3, #11
 800899c:	d851      	bhi.n	8008a42 <USBD_CDC_Setup+0x18a>
 800899e:	a201      	add	r2, pc, #4	; (adr r2, 80089a4 <USBD_CDC_Setup+0xec>)
 80089a0:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80089a4:	080089d5 	.word	0x080089d5
 80089a8:	08008a51 	.word	0x08008a51
 80089ac:	08008a43 	.word	0x08008a43
 80089b0:	08008a43 	.word	0x08008a43
 80089b4:	08008a43 	.word	0x08008a43
 80089b8:	08008a43 	.word	0x08008a43
 80089bc:	08008a43 	.word	0x08008a43
 80089c0:	08008a43 	.word	0x08008a43
 80089c4:	08008a43 	.word	0x08008a43
 80089c8:	08008a43 	.word	0x08008a43
 80089cc:	080089ff 	.word	0x080089ff
 80089d0:	08008a29 	.word	0x08008a29
      {
        case USB_REQ_GET_STATUS:
          if (pdev->dev_state == USBD_STATE_CONFIGURED)
 80089d4:	687b      	ldr	r3, [r7, #4]
 80089d6:	f893 329c 	ldrb.w	r3, [r3, #668]	; 0x29c
 80089da:	b2db      	uxtb	r3, r3
 80089dc:	2b03      	cmp	r3, #3
 80089de:	d107      	bne.n	80089f0 <USBD_CDC_Setup+0x138>
          {
            (void)USBD_CtlSendData(pdev, (uint8_t *)&status_info, 2U);
 80089e0:	f107 030a 	add.w	r3, r7, #10
 80089e4:	2202      	movs	r2, #2
 80089e6:	4619      	mov	r1, r3
 80089e8:	6878      	ldr	r0, [r7, #4]
 80089ea:	f001 fd33 	bl	800a454 <USBD_CtlSendData>
          else
          {
            USBD_CtlError(pdev, req);
            ret = USBD_FAIL;
          }
          break;
 80089ee:	e032      	b.n	8008a56 <USBD_CDC_Setup+0x19e>
            USBD_CtlError(pdev, req);
 80089f0:	6839      	ldr	r1, [r7, #0]
 80089f2:	6878      	ldr	r0, [r7, #4]
 80089f4:	f001 fcbd 	bl	800a372 <USBD_CtlError>
            ret = USBD_FAIL;
 80089f8:	2303      	movs	r3, #3
 80089fa:	75fb      	strb	r3, [r7, #23]
          break;
 80089fc:	e02b      	b.n	8008a56 <USBD_CDC_Setup+0x19e>

        case USB_REQ_GET_INTERFACE:
          if (pdev->dev_state == USBD_STATE_CONFIGURED)
 80089fe:	687b      	ldr	r3, [r7, #4]
 8008a00:	f893 329c 	ldrb.w	r3, [r3, #668]	; 0x29c
 8008a04:	b2db      	uxtb	r3, r3
 8008a06:	2b03      	cmp	r3, #3
 8008a08:	d107      	bne.n	8008a1a <USBD_CDC_Setup+0x162>
          {
            (void)USBD_CtlSendData(pdev, &ifalt, 1U);
 8008a0a:	f107 030d 	add.w	r3, r7, #13
 8008a0e:	2201      	movs	r2, #1
 8008a10:	4619      	mov	r1, r3
 8008a12:	6878      	ldr	r0, [r7, #4]
 8008a14:	f001 fd1e 	bl	800a454 <USBD_CtlSendData>
          else
          {
            USBD_CtlError(pdev, req);
            ret = USBD_FAIL;
          }
          break;
 8008a18:	e01d      	b.n	8008a56 <USBD_CDC_Setup+0x19e>
            USBD_CtlError(pdev, req);
 8008a1a:	6839      	ldr	r1, [r7, #0]
 8008a1c:	6878      	ldr	r0, [r7, #4]
 8008a1e:	f001 fca8 	bl	800a372 <USBD_CtlError>
            ret = USBD_FAIL;
 8008a22:	2303      	movs	r3, #3
 8008a24:	75fb      	strb	r3, [r7, #23]
          break;
 8008a26:	e016      	b.n	8008a56 <USBD_CDC_Setup+0x19e>

        case USB_REQ_SET_INTERFACE:
          if (pdev->dev_state != USBD_STATE_CONFIGURED)
 8008a28:	687b      	ldr	r3, [r7, #4]
 8008a2a:	f893 329c 	ldrb.w	r3, [r3, #668]	; 0x29c
 8008a2e:	b2db      	uxtb	r3, r3
 8008a30:	2b03      	cmp	r3, #3
 8008a32:	d00f      	beq.n	8008a54 <USBD_CDC_Setup+0x19c>
          {
            USBD_CtlError(pdev, req);
 8008a34:	6839      	ldr	r1, [r7, #0]
 8008a36:	6878      	ldr	r0, [r7, #4]
 8008a38:	f001 fc9b 	bl	800a372 <USBD_CtlError>
            ret = USBD_FAIL;
 8008a3c:	2303      	movs	r3, #3
 8008a3e:	75fb      	strb	r3, [r7, #23]
          }
          break;
 8008a40:	e008      	b.n	8008a54 <USBD_CDC_Setup+0x19c>

        case USB_REQ_CLEAR_FEATURE:
          break;

        default:
          USBD_CtlError(pdev, req);
 8008a42:	6839      	ldr	r1, [r7, #0]
 8008a44:	6878      	ldr	r0, [r7, #4]
 8008a46:	f001 fc94 	bl	800a372 <USBD_CtlError>
          ret = USBD_FAIL;
 8008a4a:	2303      	movs	r3, #3
 8008a4c:	75fb      	strb	r3, [r7, #23]
          break;
 8008a4e:	e002      	b.n	8008a56 <USBD_CDC_Setup+0x19e>
          break;
 8008a50:	bf00      	nop
 8008a52:	e008      	b.n	8008a66 <USBD_CDC_Setup+0x1ae>
          break;
 8008a54:	bf00      	nop
      }
      break;
 8008a56:	e006      	b.n	8008a66 <USBD_CDC_Setup+0x1ae>

    default:
      USBD_CtlError(pdev, req);
 8008a58:	6839      	ldr	r1, [r7, #0]
 8008a5a:	6878      	ldr	r0, [r7, #4]
 8008a5c:	f001 fc89 	bl	800a372 <USBD_CtlError>
      ret = USBD_FAIL;
 8008a60:	2303      	movs	r3, #3
 8008a62:	75fb      	strb	r3, [r7, #23]
      break;
 8008a64:	bf00      	nop
  }

  return (uint8_t)ret;
 8008a66:	7dfb      	ldrb	r3, [r7, #23]
}
 8008a68:	4618      	mov	r0, r3
 8008a6a:	3718      	adds	r7, #24
 8008a6c:	46bd      	mov	sp, r7
 8008a6e:	bd80      	pop	{r7, pc}

08008a70 <USBD_CDC_DataIn>:
  * @param  pdev: device instance
  * @param  epnum: endpoint number
  * @retval status
  */
static uint8_t USBD_CDC_DataIn(USBD_HandleTypeDef *pdev, uint8_t epnum)
{
 8008a70:	b580      	push	{r7, lr}
 8008a72:	b084      	sub	sp, #16
 8008a74:	af00      	add	r7, sp, #0
 8008a76:	6078      	str	r0, [r7, #4]
 8008a78:	460b      	mov	r3, r1
 8008a7a:	70fb      	strb	r3, [r7, #3]
  USBD_CDC_HandleTypeDef *hcdc;
  PCD_HandleTypeDef *hpcd = (PCD_HandleTypeDef *)pdev->pData;
 8008a7c:	687b      	ldr	r3, [r7, #4]
 8008a7e:	f8d3 32c8 	ldr.w	r3, [r3, #712]	; 0x2c8
 8008a82:	60fb      	str	r3, [r7, #12]

  if (pdev->pClassDataCmsit[pdev->classId] == NULL)
 8008a84:	687b      	ldr	r3, [r7, #4]
 8008a86:	f8d3 22d4 	ldr.w	r2, [r3, #724]	; 0x2d4
 8008a8a:	687b      	ldr	r3, [r7, #4]
 8008a8c:	32b0      	adds	r2, #176	; 0xb0
 8008a8e:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8008a92:	2b00      	cmp	r3, #0
 8008a94:	d101      	bne.n	8008a9a <USBD_CDC_DataIn+0x2a>
  {
    return (uint8_t)USBD_FAIL;
 8008a96:	2303      	movs	r3, #3
 8008a98:	e065      	b.n	8008b66 <USBD_CDC_DataIn+0xf6>
  }

  hcdc = (USBD_CDC_HandleTypeDef *)pdev->pClassDataCmsit[pdev->classId];
 8008a9a:	687b      	ldr	r3, [r7, #4]
 8008a9c:	f8d3 22d4 	ldr.w	r2, [r3, #724]	; 0x2d4
 8008aa0:	687b      	ldr	r3, [r7, #4]
 8008aa2:	32b0      	adds	r2, #176	; 0xb0
 8008aa4:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8008aa8:	60bb      	str	r3, [r7, #8]

  if ((pdev->ep_in[epnum & 0xFU].total_length > 0U) &&
 8008aaa:	78fb      	ldrb	r3, [r7, #3]
 8008aac:	f003 020f 	and.w	r2, r3, #15
 8008ab0:	6879      	ldr	r1, [r7, #4]
 8008ab2:	4613      	mov	r3, r2
 8008ab4:	009b      	lsls	r3, r3, #2
 8008ab6:	4413      	add	r3, r2
 8008ab8:	009b      	lsls	r3, r3, #2
 8008aba:	440b      	add	r3, r1
 8008abc:	3318      	adds	r3, #24
 8008abe:	681b      	ldr	r3, [r3, #0]
 8008ac0:	2b00      	cmp	r3, #0
 8008ac2:	d02f      	beq.n	8008b24 <USBD_CDC_DataIn+0xb4>
      ((pdev->ep_in[epnum & 0xFU].total_length % hpcd->IN_ep[epnum & 0xFU].maxpacket) == 0U))
 8008ac4:	78fb      	ldrb	r3, [r7, #3]
 8008ac6:	f003 020f 	and.w	r2, r3, #15
 8008aca:	6879      	ldr	r1, [r7, #4]
 8008acc:	4613      	mov	r3, r2
 8008ace:	009b      	lsls	r3, r3, #2
 8008ad0:	4413      	add	r3, r2
 8008ad2:	009b      	lsls	r3, r3, #2
 8008ad4:	440b      	add	r3, r1
 8008ad6:	3318      	adds	r3, #24
 8008ad8:	681a      	ldr	r2, [r3, #0]
 8008ada:	78fb      	ldrb	r3, [r7, #3]
 8008adc:	f003 010f 	and.w	r1, r3, #15
 8008ae0:	68f8      	ldr	r0, [r7, #12]
 8008ae2:	460b      	mov	r3, r1
 8008ae4:	00db      	lsls	r3, r3, #3
 8008ae6:	440b      	add	r3, r1
 8008ae8:	009b      	lsls	r3, r3, #2
 8008aea:	4403      	add	r3, r0
 8008aec:	331c      	adds	r3, #28
 8008aee:	681b      	ldr	r3, [r3, #0]
 8008af0:	fbb2 f1f3 	udiv	r1, r2, r3
 8008af4:	fb01 f303 	mul.w	r3, r1, r3
 8008af8:	1ad3      	subs	r3, r2, r3
  if ((pdev->ep_in[epnum & 0xFU].total_length > 0U) &&
 8008afa:	2b00      	cmp	r3, #0
 8008afc:	d112      	bne.n	8008b24 <USBD_CDC_DataIn+0xb4>
  {
    /* Update the packet total length */
    pdev->ep_in[epnum & 0xFU].total_length = 0U;
 8008afe:	78fb      	ldrb	r3, [r7, #3]
 8008b00:	f003 020f 	and.w	r2, r3, #15
 8008b04:	6879      	ldr	r1, [r7, #4]
 8008b06:	4613      	mov	r3, r2
 8008b08:	009b      	lsls	r3, r3, #2
 8008b0a:	4413      	add	r3, r2
 8008b0c:	009b      	lsls	r3, r3, #2
 8008b0e:	440b      	add	r3, r1
 8008b10:	3318      	adds	r3, #24
 8008b12:	2200      	movs	r2, #0
 8008b14:	601a      	str	r2, [r3, #0]

    /* Send ZLP */
    (void)USBD_LL_Transmit(pdev, epnum, NULL, 0U);
 8008b16:	78f9      	ldrb	r1, [r7, #3]
 8008b18:	2300      	movs	r3, #0
 8008b1a:	2200      	movs	r2, #0
 8008b1c:	6878      	ldr	r0, [r7, #4]
 8008b1e:	f009 f940 	bl	8011da2 <USBD_LL_Transmit>
 8008b22:	e01f      	b.n	8008b64 <USBD_CDC_DataIn+0xf4>
  }
  else
  {
    hcdc->TxState = 0U;
 8008b24:	68bb      	ldr	r3, [r7, #8]
 8008b26:	2200      	movs	r2, #0
 8008b28:	f8c3 2214 	str.w	r2, [r3, #532]	; 0x214

    if (((USBD_CDC_ItfTypeDef *)pdev->pUserData[pdev->classId])->TransmitCplt != NULL)
 8008b2c:	687b      	ldr	r3, [r7, #4]
 8008b2e:	f8d3 32d4 	ldr.w	r3, [r3, #724]	; 0x2d4
 8008b32:	687a      	ldr	r2, [r7, #4]
 8008b34:	33b0      	adds	r3, #176	; 0xb0
 8008b36:	009b      	lsls	r3, r3, #2
 8008b38:	4413      	add	r3, r2
 8008b3a:	685b      	ldr	r3, [r3, #4]
 8008b3c:	691b      	ldr	r3, [r3, #16]
 8008b3e:	2b00      	cmp	r3, #0
 8008b40:	d010      	beq.n	8008b64 <USBD_CDC_DataIn+0xf4>
    {
      ((USBD_CDC_ItfTypeDef *)pdev->pUserData[pdev->classId])->TransmitCplt(hcdc->TxBuffer, &hcdc->TxLength, epnum);
 8008b42:	687b      	ldr	r3, [r7, #4]
 8008b44:	f8d3 32d4 	ldr.w	r3, [r3, #724]	; 0x2d4
 8008b48:	687a      	ldr	r2, [r7, #4]
 8008b4a:	33b0      	adds	r3, #176	; 0xb0
 8008b4c:	009b      	lsls	r3, r3, #2
 8008b4e:	4413      	add	r3, r2
 8008b50:	685b      	ldr	r3, [r3, #4]
 8008b52:	691b      	ldr	r3, [r3, #16]
 8008b54:	68ba      	ldr	r2, [r7, #8]
 8008b56:	f8d2 0208 	ldr.w	r0, [r2, #520]	; 0x208
 8008b5a:	68ba      	ldr	r2, [r7, #8]
 8008b5c:	f502 7104 	add.w	r1, r2, #528	; 0x210
 8008b60:	78fa      	ldrb	r2, [r7, #3]
 8008b62:	4798      	blx	r3
    }
  }

  return (uint8_t)USBD_OK;
 8008b64:	2300      	movs	r3, #0
}
 8008b66:	4618      	mov	r0, r3
 8008b68:	3710      	adds	r7, #16
 8008b6a:	46bd      	mov	sp, r7
 8008b6c:	bd80      	pop	{r7, pc}

08008b6e <USBD_CDC_DataOut>:
  * @param  pdev: device instance
  * @param  epnum: endpoint number
  * @retval status
  */
static uint8_t USBD_CDC_DataOut(USBD_HandleTypeDef *pdev, uint8_t epnum)
{
 8008b6e:	b580      	push	{r7, lr}
 8008b70:	b084      	sub	sp, #16
 8008b72:	af00      	add	r7, sp, #0
 8008b74:	6078      	str	r0, [r7, #4]
 8008b76:	460b      	mov	r3, r1
 8008b78:	70fb      	strb	r3, [r7, #3]
  USBD_CDC_HandleTypeDef *hcdc = (USBD_CDC_HandleTypeDef *)pdev->pClassDataCmsit[pdev->classId];
 8008b7a:	687b      	ldr	r3, [r7, #4]
 8008b7c:	f8d3 22d4 	ldr.w	r2, [r3, #724]	; 0x2d4
 8008b80:	687b      	ldr	r3, [r7, #4]
 8008b82:	32b0      	adds	r2, #176	; 0xb0
 8008b84:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8008b88:	60fb      	str	r3, [r7, #12]

  if (pdev->pClassDataCmsit[pdev->classId] == NULL)
 8008b8a:	687b      	ldr	r3, [r7, #4]
 8008b8c:	f8d3 22d4 	ldr.w	r2, [r3, #724]	; 0x2d4
 8008b90:	687b      	ldr	r3, [r7, #4]
 8008b92:	32b0      	adds	r2, #176	; 0xb0
 8008b94:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8008b98:	2b00      	cmp	r3, #0
 8008b9a:	d101      	bne.n	8008ba0 <USBD_CDC_DataOut+0x32>
  {
    return (uint8_t)USBD_FAIL;
 8008b9c:	2303      	movs	r3, #3
 8008b9e:	e01a      	b.n	8008bd6 <USBD_CDC_DataOut+0x68>
  }

  /* Get the received data length */
  hcdc->RxLength = USBD_LL_GetRxDataSize(pdev, epnum);
 8008ba0:	78fb      	ldrb	r3, [r7, #3]
 8008ba2:	4619      	mov	r1, r3
 8008ba4:	6878      	ldr	r0, [r7, #4]
 8008ba6:	f009 f93e 	bl	8011e26 <USBD_LL_GetRxDataSize>
 8008baa:	4602      	mov	r2, r0
 8008bac:	68fb      	ldr	r3, [r7, #12]
 8008bae:	f8c3 220c 	str.w	r2, [r3, #524]	; 0x20c

  /* USB data will be immediately processed, this allow next USB traffic being
  NAKed till the end of the application Xfer */

  ((USBD_CDC_ItfTypeDef *)pdev->pUserData[pdev->classId])->Receive(hcdc->RxBuffer, &hcdc->RxLength);
 8008bb2:	687b      	ldr	r3, [r7, #4]
 8008bb4:	f8d3 32d4 	ldr.w	r3, [r3, #724]	; 0x2d4
 8008bb8:	687a      	ldr	r2, [r7, #4]
 8008bba:	33b0      	adds	r3, #176	; 0xb0
 8008bbc:	009b      	lsls	r3, r3, #2
 8008bbe:	4413      	add	r3, r2
 8008bc0:	685b      	ldr	r3, [r3, #4]
 8008bc2:	68db      	ldr	r3, [r3, #12]
 8008bc4:	68fa      	ldr	r2, [r7, #12]
 8008bc6:	f8d2 0204 	ldr.w	r0, [r2, #516]	; 0x204
 8008bca:	68fa      	ldr	r2, [r7, #12]
 8008bcc:	f502 7203 	add.w	r2, r2, #524	; 0x20c
 8008bd0:	4611      	mov	r1, r2
 8008bd2:	4798      	blx	r3

  return (uint8_t)USBD_OK;
 8008bd4:	2300      	movs	r3, #0
}
 8008bd6:	4618      	mov	r0, r3
 8008bd8:	3710      	adds	r7, #16
 8008bda:	46bd      	mov	sp, r7
 8008bdc:	bd80      	pop	{r7, pc}

08008bde <USBD_CDC_EP0_RxReady>:
  *         Handle EP0 Rx Ready event
  * @param  pdev: device instance
  * @retval status
  */
static uint8_t USBD_CDC_EP0_RxReady(USBD_HandleTypeDef *pdev)
{
 8008bde:	b580      	push	{r7, lr}
 8008be0:	b084      	sub	sp, #16
 8008be2:	af00      	add	r7, sp, #0
 8008be4:	6078      	str	r0, [r7, #4]
  USBD_CDC_HandleTypeDef *hcdc = (USBD_CDC_HandleTypeDef *)pdev->pClassDataCmsit[pdev->classId];
 8008be6:	687b      	ldr	r3, [r7, #4]
 8008be8:	f8d3 22d4 	ldr.w	r2, [r3, #724]	; 0x2d4
 8008bec:	687b      	ldr	r3, [r7, #4]
 8008bee:	32b0      	adds	r2, #176	; 0xb0
 8008bf0:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8008bf4:	60fb      	str	r3, [r7, #12]

  if (hcdc == NULL)
 8008bf6:	68fb      	ldr	r3, [r7, #12]
 8008bf8:	2b00      	cmp	r3, #0
 8008bfa:	d101      	bne.n	8008c00 <USBD_CDC_EP0_RxReady+0x22>
  {
    return (uint8_t)USBD_FAIL;
 8008bfc:	2303      	movs	r3, #3
 8008bfe:	e025      	b.n	8008c4c <USBD_CDC_EP0_RxReady+0x6e>
  }

  if ((pdev->pUserData[pdev->classId] != NULL) && (hcdc->CmdOpCode != 0xFFU))
 8008c00:	687b      	ldr	r3, [r7, #4]
 8008c02:	f8d3 32d4 	ldr.w	r3, [r3, #724]	; 0x2d4
 8008c06:	687a      	ldr	r2, [r7, #4]
 8008c08:	33b0      	adds	r3, #176	; 0xb0
 8008c0a:	009b      	lsls	r3, r3, #2
 8008c0c:	4413      	add	r3, r2
 8008c0e:	685b      	ldr	r3, [r3, #4]
 8008c10:	2b00      	cmp	r3, #0
 8008c12:	d01a      	beq.n	8008c4a <USBD_CDC_EP0_RxReady+0x6c>
 8008c14:	68fb      	ldr	r3, [r7, #12]
 8008c16:	f893 3200 	ldrb.w	r3, [r3, #512]	; 0x200
 8008c1a:	2bff      	cmp	r3, #255	; 0xff
 8008c1c:	d015      	beq.n	8008c4a <USBD_CDC_EP0_RxReady+0x6c>
  {
    ((USBD_CDC_ItfTypeDef *)pdev->pUserData[pdev->classId])->Control(hcdc->CmdOpCode,
 8008c1e:	687b      	ldr	r3, [r7, #4]
 8008c20:	f8d3 32d4 	ldr.w	r3, [r3, #724]	; 0x2d4
 8008c24:	687a      	ldr	r2, [r7, #4]
 8008c26:	33b0      	adds	r3, #176	; 0xb0
 8008c28:	009b      	lsls	r3, r3, #2
 8008c2a:	4413      	add	r3, r2
 8008c2c:	685b      	ldr	r3, [r3, #4]
 8008c2e:	689b      	ldr	r3, [r3, #8]
 8008c30:	68fa      	ldr	r2, [r7, #12]
 8008c32:	f892 0200 	ldrb.w	r0, [r2, #512]	; 0x200
                                                                     (uint8_t *)hcdc->data,
 8008c36:	68f9      	ldr	r1, [r7, #12]
                                                                     (uint16_t)hcdc->CmdLength);
 8008c38:	68fa      	ldr	r2, [r7, #12]
 8008c3a:	f892 2201 	ldrb.w	r2, [r2, #513]	; 0x201
    ((USBD_CDC_ItfTypeDef *)pdev->pUserData[pdev->classId])->Control(hcdc->CmdOpCode,
 8008c3e:	b292      	uxth	r2, r2
 8008c40:	4798      	blx	r3
    hcdc->CmdOpCode = 0xFFU;
 8008c42:	68fb      	ldr	r3, [r7, #12]
 8008c44:	22ff      	movs	r2, #255	; 0xff
 8008c46:	f883 2200 	strb.w	r2, [r3, #512]	; 0x200
  }

  return (uint8_t)USBD_OK;
 8008c4a:	2300      	movs	r3, #0
}
 8008c4c:	4618      	mov	r0, r3
 8008c4e:	3710      	adds	r7, #16
 8008c50:	46bd      	mov	sp, r7
 8008c52:	bd80      	pop	{r7, pc}

08008c54 <USBD_CDC_GetFSCfgDesc>:
  *         Return configuration descriptor
  * @param  length : pointer data length
  * @retval pointer to descriptor buffer
  */
static uint8_t *USBD_CDC_GetFSCfgDesc(uint16_t *length)
{
 8008c54:	b580      	push	{r7, lr}
 8008c56:	b086      	sub	sp, #24
 8008c58:	af00      	add	r7, sp, #0
 8008c5a:	6078      	str	r0, [r7, #4]
  USBD_EpDescTypeDef *pEpCmdDesc = USBD_GetEpDesc(USBD_CDC_CfgDesc, CDC_CMD_EP);
 8008c5c:	2182      	movs	r1, #130	; 0x82
 8008c5e:	4818      	ldr	r0, [pc, #96]	; (8008cc0 <USBD_CDC_GetFSCfgDesc+0x6c>)
 8008c60:	f000 fd4f 	bl	8009702 <USBD_GetEpDesc>
 8008c64:	6178      	str	r0, [r7, #20]
  USBD_EpDescTypeDef *pEpOutDesc = USBD_GetEpDesc(USBD_CDC_CfgDesc, CDC_OUT_EP);
 8008c66:	2101      	movs	r1, #1
 8008c68:	4815      	ldr	r0, [pc, #84]	; (8008cc0 <USBD_CDC_GetFSCfgDesc+0x6c>)
 8008c6a:	f000 fd4a 	bl	8009702 <USBD_GetEpDesc>
 8008c6e:	6138      	str	r0, [r7, #16]
  USBD_EpDescTypeDef *pEpInDesc = USBD_GetEpDesc(USBD_CDC_CfgDesc, CDC_IN_EP);
 8008c70:	2181      	movs	r1, #129	; 0x81
 8008c72:	4813      	ldr	r0, [pc, #76]	; (8008cc0 <USBD_CDC_GetFSCfgDesc+0x6c>)
 8008c74:	f000 fd45 	bl	8009702 <USBD_GetEpDesc>
 8008c78:	60f8      	str	r0, [r7, #12]

  if (pEpCmdDesc != NULL)
 8008c7a:	697b      	ldr	r3, [r7, #20]
 8008c7c:	2b00      	cmp	r3, #0
 8008c7e:	d002      	beq.n	8008c86 <USBD_CDC_GetFSCfgDesc+0x32>
  {
    pEpCmdDesc->bInterval = CDC_FS_BINTERVAL;
 8008c80:	697b      	ldr	r3, [r7, #20]
 8008c82:	2210      	movs	r2, #16
 8008c84:	719a      	strb	r2, [r3, #6]
  }

  if (pEpOutDesc != NULL)
 8008c86:	693b      	ldr	r3, [r7, #16]
 8008c88:	2b00      	cmp	r3, #0
 8008c8a:	d006      	beq.n	8008c9a <USBD_CDC_GetFSCfgDesc+0x46>
  {
    pEpOutDesc->wMaxPacketSize = CDC_DATA_FS_MAX_PACKET_SIZE;
 8008c8c:	693b      	ldr	r3, [r7, #16]
 8008c8e:	2200      	movs	r2, #0
 8008c90:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 8008c94:	711a      	strb	r2, [r3, #4]
 8008c96:	2200      	movs	r2, #0
 8008c98:	715a      	strb	r2, [r3, #5]
  }

  if (pEpInDesc != NULL)
 8008c9a:	68fb      	ldr	r3, [r7, #12]
 8008c9c:	2b00      	cmp	r3, #0
 8008c9e:	d006      	beq.n	8008cae <USBD_CDC_GetFSCfgDesc+0x5a>
  {
    pEpInDesc->wMaxPacketSize = CDC_DATA_FS_MAX_PACKET_SIZE;
 8008ca0:	68fb      	ldr	r3, [r7, #12]
 8008ca2:	2200      	movs	r2, #0
 8008ca4:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 8008ca8:	711a      	strb	r2, [r3, #4]
 8008caa:	2200      	movs	r2, #0
 8008cac:	715a      	strb	r2, [r3, #5]
  }

  *length = (uint16_t)sizeof(USBD_CDC_CfgDesc);
 8008cae:	687b      	ldr	r3, [r7, #4]
 8008cb0:	2243      	movs	r2, #67	; 0x43
 8008cb2:	801a      	strh	r2, [r3, #0]
  return USBD_CDC_CfgDesc;
 8008cb4:	4b02      	ldr	r3, [pc, #8]	; (8008cc0 <USBD_CDC_GetFSCfgDesc+0x6c>)
}
 8008cb6:	4618      	mov	r0, r3
 8008cb8:	3718      	adds	r7, #24
 8008cba:	46bd      	mov	sp, r7
 8008cbc:	bd80      	pop	{r7, pc}
 8008cbe:	bf00      	nop
 8008cc0:	2000005c 	.word	0x2000005c

08008cc4 <USBD_CDC_GetHSCfgDesc>:
  *         Return configuration descriptor
  * @param  length : pointer data length
  * @retval pointer to descriptor buffer
  */
static uint8_t *USBD_CDC_GetHSCfgDesc(uint16_t *length)
{
 8008cc4:	b580      	push	{r7, lr}
 8008cc6:	b086      	sub	sp, #24
 8008cc8:	af00      	add	r7, sp, #0
 8008cca:	6078      	str	r0, [r7, #4]
  USBD_EpDescTypeDef *pEpCmdDesc = USBD_GetEpDesc(USBD_CDC_CfgDesc, CDC_CMD_EP);
 8008ccc:	2182      	movs	r1, #130	; 0x82
 8008cce:	4818      	ldr	r0, [pc, #96]	; (8008d30 <USBD_CDC_GetHSCfgDesc+0x6c>)
 8008cd0:	f000 fd17 	bl	8009702 <USBD_GetEpDesc>
 8008cd4:	6178      	str	r0, [r7, #20]
  USBD_EpDescTypeDef *pEpOutDesc = USBD_GetEpDesc(USBD_CDC_CfgDesc, CDC_OUT_EP);
 8008cd6:	2101      	movs	r1, #1
 8008cd8:	4815      	ldr	r0, [pc, #84]	; (8008d30 <USBD_CDC_GetHSCfgDesc+0x6c>)
 8008cda:	f000 fd12 	bl	8009702 <USBD_GetEpDesc>
 8008cde:	6138      	str	r0, [r7, #16]
  USBD_EpDescTypeDef *pEpInDesc = USBD_GetEpDesc(USBD_CDC_CfgDesc, CDC_IN_EP);
 8008ce0:	2181      	movs	r1, #129	; 0x81
 8008ce2:	4813      	ldr	r0, [pc, #76]	; (8008d30 <USBD_CDC_GetHSCfgDesc+0x6c>)
 8008ce4:	f000 fd0d 	bl	8009702 <USBD_GetEpDesc>
 8008ce8:	60f8      	str	r0, [r7, #12]

  if (pEpCmdDesc != NULL)
 8008cea:	697b      	ldr	r3, [r7, #20]
 8008cec:	2b00      	cmp	r3, #0
 8008cee:	d002      	beq.n	8008cf6 <USBD_CDC_GetHSCfgDesc+0x32>
  {
    pEpCmdDesc->bInterval = CDC_HS_BINTERVAL;
 8008cf0:	697b      	ldr	r3, [r7, #20]
 8008cf2:	2210      	movs	r2, #16
 8008cf4:	719a      	strb	r2, [r3, #6]
  }

  if (pEpOutDesc != NULL)
 8008cf6:	693b      	ldr	r3, [r7, #16]
 8008cf8:	2b00      	cmp	r3, #0
 8008cfa:	d006      	beq.n	8008d0a <USBD_CDC_GetHSCfgDesc+0x46>
  {
    pEpOutDesc->wMaxPacketSize = CDC_DATA_HS_MAX_PACKET_SIZE;
 8008cfc:	693b      	ldr	r3, [r7, #16]
 8008cfe:	2200      	movs	r2, #0
 8008d00:	711a      	strb	r2, [r3, #4]
 8008d02:	2200      	movs	r2, #0
 8008d04:	f042 0202 	orr.w	r2, r2, #2
 8008d08:	715a      	strb	r2, [r3, #5]
  }

  if (pEpInDesc != NULL)
 8008d0a:	68fb      	ldr	r3, [r7, #12]
 8008d0c:	2b00      	cmp	r3, #0
 8008d0e:	d006      	beq.n	8008d1e <USBD_CDC_GetHSCfgDesc+0x5a>
  {
    pEpInDesc->wMaxPacketSize = CDC_DATA_HS_MAX_PACKET_SIZE;
 8008d10:	68fb      	ldr	r3, [r7, #12]
 8008d12:	2200      	movs	r2, #0
 8008d14:	711a      	strb	r2, [r3, #4]
 8008d16:	2200      	movs	r2, #0
 8008d18:	f042 0202 	orr.w	r2, r2, #2
 8008d1c:	715a      	strb	r2, [r3, #5]
  }

  *length = (uint16_t)sizeof(USBD_CDC_CfgDesc);
 8008d1e:	687b      	ldr	r3, [r7, #4]
 8008d20:	2243      	movs	r2, #67	; 0x43
 8008d22:	801a      	strh	r2, [r3, #0]
  return USBD_CDC_CfgDesc;
 8008d24:	4b02      	ldr	r3, [pc, #8]	; (8008d30 <USBD_CDC_GetHSCfgDesc+0x6c>)
}
 8008d26:	4618      	mov	r0, r3
 8008d28:	3718      	adds	r7, #24
 8008d2a:	46bd      	mov	sp, r7
 8008d2c:	bd80      	pop	{r7, pc}
 8008d2e:	bf00      	nop
 8008d30:	2000005c 	.word	0x2000005c

08008d34 <USBD_CDC_GetOtherSpeedCfgDesc>:
  *         Return configuration descriptor
  * @param  length : pointer data length
  * @retval pointer to descriptor buffer
  */
static uint8_t *USBD_CDC_GetOtherSpeedCfgDesc(uint16_t *length)
{
 8008d34:	b580      	push	{r7, lr}
 8008d36:	b086      	sub	sp, #24
 8008d38:	af00      	add	r7, sp, #0
 8008d3a:	6078      	str	r0, [r7, #4]
  USBD_EpDescTypeDef *pEpCmdDesc = USBD_GetEpDesc(USBD_CDC_CfgDesc, CDC_CMD_EP);
 8008d3c:	2182      	movs	r1, #130	; 0x82
 8008d3e:	4818      	ldr	r0, [pc, #96]	; (8008da0 <USBD_CDC_GetOtherSpeedCfgDesc+0x6c>)
 8008d40:	f000 fcdf 	bl	8009702 <USBD_GetEpDesc>
 8008d44:	6178      	str	r0, [r7, #20]
  USBD_EpDescTypeDef *pEpOutDesc = USBD_GetEpDesc(USBD_CDC_CfgDesc, CDC_OUT_EP);
 8008d46:	2101      	movs	r1, #1
 8008d48:	4815      	ldr	r0, [pc, #84]	; (8008da0 <USBD_CDC_GetOtherSpeedCfgDesc+0x6c>)
 8008d4a:	f000 fcda 	bl	8009702 <USBD_GetEpDesc>
 8008d4e:	6138      	str	r0, [r7, #16]
  USBD_EpDescTypeDef *pEpInDesc = USBD_GetEpDesc(USBD_CDC_CfgDesc, CDC_IN_EP);
 8008d50:	2181      	movs	r1, #129	; 0x81
 8008d52:	4813      	ldr	r0, [pc, #76]	; (8008da0 <USBD_CDC_GetOtherSpeedCfgDesc+0x6c>)
 8008d54:	f000 fcd5 	bl	8009702 <USBD_GetEpDesc>
 8008d58:	60f8      	str	r0, [r7, #12]

  if (pEpCmdDesc != NULL)
 8008d5a:	697b      	ldr	r3, [r7, #20]
 8008d5c:	2b00      	cmp	r3, #0
 8008d5e:	d002      	beq.n	8008d66 <USBD_CDC_GetOtherSpeedCfgDesc+0x32>
  {
    pEpCmdDesc->bInterval = CDC_FS_BINTERVAL;
 8008d60:	697b      	ldr	r3, [r7, #20]
 8008d62:	2210      	movs	r2, #16
 8008d64:	719a      	strb	r2, [r3, #6]
  }

  if (pEpOutDesc != NULL)
 8008d66:	693b      	ldr	r3, [r7, #16]
 8008d68:	2b00      	cmp	r3, #0
 8008d6a:	d006      	beq.n	8008d7a <USBD_CDC_GetOtherSpeedCfgDesc+0x46>
  {
    pEpOutDesc->wMaxPacketSize = CDC_DATA_FS_MAX_PACKET_SIZE;
 8008d6c:	693b      	ldr	r3, [r7, #16]
 8008d6e:	2200      	movs	r2, #0
 8008d70:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 8008d74:	711a      	strb	r2, [r3, #4]
 8008d76:	2200      	movs	r2, #0
 8008d78:	715a      	strb	r2, [r3, #5]
  }

  if (pEpInDesc != NULL)
 8008d7a:	68fb      	ldr	r3, [r7, #12]
 8008d7c:	2b00      	cmp	r3, #0
 8008d7e:	d006      	beq.n	8008d8e <USBD_CDC_GetOtherSpeedCfgDesc+0x5a>
  {
    pEpInDesc->wMaxPacketSize = CDC_DATA_FS_MAX_PACKET_SIZE;
 8008d80:	68fb      	ldr	r3, [r7, #12]
 8008d82:	2200      	movs	r2, #0
 8008d84:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 8008d88:	711a      	strb	r2, [r3, #4]
 8008d8a:	2200      	movs	r2, #0
 8008d8c:	715a      	strb	r2, [r3, #5]
  }

  *length = (uint16_t)sizeof(USBD_CDC_CfgDesc);
 8008d8e:	687b      	ldr	r3, [r7, #4]
 8008d90:	2243      	movs	r2, #67	; 0x43
 8008d92:	801a      	strh	r2, [r3, #0]
  return USBD_CDC_CfgDesc;
 8008d94:	4b02      	ldr	r3, [pc, #8]	; (8008da0 <USBD_CDC_GetOtherSpeedCfgDesc+0x6c>)
}
 8008d96:	4618      	mov	r0, r3
 8008d98:	3718      	adds	r7, #24
 8008d9a:	46bd      	mov	sp, r7
 8008d9c:	bd80      	pop	{r7, pc}
 8008d9e:	bf00      	nop
 8008da0:	2000005c 	.word	0x2000005c

08008da4 <USBD_CDC_GetDeviceQualifierDescriptor>:
  *         return Device Qualifier descriptor
  * @param  length : pointer data length
  * @retval pointer to descriptor buffer
  */
uint8_t *USBD_CDC_GetDeviceQualifierDescriptor(uint16_t *length)
{
 8008da4:	b480      	push	{r7}
 8008da6:	b083      	sub	sp, #12
 8008da8:	af00      	add	r7, sp, #0
 8008daa:	6078      	str	r0, [r7, #4]
  *length = (uint16_t)sizeof(USBD_CDC_DeviceQualifierDesc);
 8008dac:	687b      	ldr	r3, [r7, #4]
 8008dae:	220a      	movs	r2, #10
 8008db0:	801a      	strh	r2, [r3, #0]

  return USBD_CDC_DeviceQualifierDesc;
 8008db2:	4b03      	ldr	r3, [pc, #12]	; (8008dc0 <USBD_CDC_GetDeviceQualifierDescriptor+0x1c>)
}
 8008db4:	4618      	mov	r0, r3
 8008db6:	370c      	adds	r7, #12
 8008db8:	46bd      	mov	sp, r7
 8008dba:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008dbe:	4770      	bx	lr
 8008dc0:	20000018 	.word	0x20000018

08008dc4 <USBD_CDC_RegisterInterface>:
  * @param  fops: CD  Interface callback
  * @retval status
  */
uint8_t USBD_CDC_RegisterInterface(USBD_HandleTypeDef *pdev,
                                   USBD_CDC_ItfTypeDef *fops)
{
 8008dc4:	b480      	push	{r7}
 8008dc6:	b083      	sub	sp, #12
 8008dc8:	af00      	add	r7, sp, #0
 8008dca:	6078      	str	r0, [r7, #4]
 8008dcc:	6039      	str	r1, [r7, #0]
  if (fops == NULL)
 8008dce:	683b      	ldr	r3, [r7, #0]
 8008dd0:	2b00      	cmp	r3, #0
 8008dd2:	d101      	bne.n	8008dd8 <USBD_CDC_RegisterInterface+0x14>
  {
    return (uint8_t)USBD_FAIL;
 8008dd4:	2303      	movs	r3, #3
 8008dd6:	e009      	b.n	8008dec <USBD_CDC_RegisterInterface+0x28>
  }

  pdev->pUserData[pdev->classId] = fops;
 8008dd8:	687b      	ldr	r3, [r7, #4]
 8008dda:	f8d3 32d4 	ldr.w	r3, [r3, #724]	; 0x2d4
 8008dde:	687a      	ldr	r2, [r7, #4]
 8008de0:	33b0      	adds	r3, #176	; 0xb0
 8008de2:	009b      	lsls	r3, r3, #2
 8008de4:	4413      	add	r3, r2
 8008de6:	683a      	ldr	r2, [r7, #0]
 8008de8:	605a      	str	r2, [r3, #4]

  return (uint8_t)USBD_OK;
 8008dea:	2300      	movs	r3, #0
}
 8008dec:	4618      	mov	r0, r3
 8008dee:	370c      	adds	r7, #12
 8008df0:	46bd      	mov	sp, r7
 8008df2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008df6:	4770      	bx	lr

08008df8 <USBD_CDC_SetTxBuffer>:
{
  USBD_CDC_HandleTypeDef *hcdc = (USBD_CDC_HandleTypeDef *)pdev->pClassDataCmsit[ClassId];
#else
uint8_t USBD_CDC_SetTxBuffer(USBD_HandleTypeDef *pdev,
                             uint8_t *pbuff, uint32_t length)
{
 8008df8:	b480      	push	{r7}
 8008dfa:	b087      	sub	sp, #28
 8008dfc:	af00      	add	r7, sp, #0
 8008dfe:	60f8      	str	r0, [r7, #12]
 8008e00:	60b9      	str	r1, [r7, #8]
 8008e02:	607a      	str	r2, [r7, #4]
  USBD_CDC_HandleTypeDef *hcdc = (USBD_CDC_HandleTypeDef *)pdev->pClassDataCmsit[pdev->classId];
 8008e04:	68fb      	ldr	r3, [r7, #12]
 8008e06:	f8d3 22d4 	ldr.w	r2, [r3, #724]	; 0x2d4
 8008e0a:	68fb      	ldr	r3, [r7, #12]
 8008e0c:	32b0      	adds	r2, #176	; 0xb0
 8008e0e:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8008e12:	617b      	str	r3, [r7, #20]
#endif /* USE_USBD_COMPOSITE */

  if (hcdc == NULL)
 8008e14:	697b      	ldr	r3, [r7, #20]
 8008e16:	2b00      	cmp	r3, #0
 8008e18:	d101      	bne.n	8008e1e <USBD_CDC_SetTxBuffer+0x26>
  {
    return (uint8_t)USBD_FAIL;
 8008e1a:	2303      	movs	r3, #3
 8008e1c:	e008      	b.n	8008e30 <USBD_CDC_SetTxBuffer+0x38>
  }

  hcdc->TxBuffer = pbuff;
 8008e1e:	697b      	ldr	r3, [r7, #20]
 8008e20:	68ba      	ldr	r2, [r7, #8]
 8008e22:	f8c3 2208 	str.w	r2, [r3, #520]	; 0x208
  hcdc->TxLength = length;
 8008e26:	697b      	ldr	r3, [r7, #20]
 8008e28:	687a      	ldr	r2, [r7, #4]
 8008e2a:	f8c3 2210 	str.w	r2, [r3, #528]	; 0x210

  return (uint8_t)USBD_OK;
 8008e2e:	2300      	movs	r3, #0
}
 8008e30:	4618      	mov	r0, r3
 8008e32:	371c      	adds	r7, #28
 8008e34:	46bd      	mov	sp, r7
 8008e36:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008e3a:	4770      	bx	lr

08008e3c <USBD_CDC_SetRxBuffer>:
  * @param  pdev: device instance
  * @param  pbuff: Rx Buffer
  * @retval status
  */
uint8_t USBD_CDC_SetRxBuffer(USBD_HandleTypeDef *pdev, uint8_t *pbuff)
{
 8008e3c:	b480      	push	{r7}
 8008e3e:	b085      	sub	sp, #20
 8008e40:	af00      	add	r7, sp, #0
 8008e42:	6078      	str	r0, [r7, #4]
 8008e44:	6039      	str	r1, [r7, #0]
  USBD_CDC_HandleTypeDef *hcdc = (USBD_CDC_HandleTypeDef *)pdev->pClassDataCmsit[pdev->classId];
 8008e46:	687b      	ldr	r3, [r7, #4]
 8008e48:	f8d3 22d4 	ldr.w	r2, [r3, #724]	; 0x2d4
 8008e4c:	687b      	ldr	r3, [r7, #4]
 8008e4e:	32b0      	adds	r2, #176	; 0xb0
 8008e50:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8008e54:	60fb      	str	r3, [r7, #12]

  if (hcdc == NULL)
 8008e56:	68fb      	ldr	r3, [r7, #12]
 8008e58:	2b00      	cmp	r3, #0
 8008e5a:	d101      	bne.n	8008e60 <USBD_CDC_SetRxBuffer+0x24>
  {
    return (uint8_t)USBD_FAIL;
 8008e5c:	2303      	movs	r3, #3
 8008e5e:	e004      	b.n	8008e6a <USBD_CDC_SetRxBuffer+0x2e>
  }

  hcdc->RxBuffer = pbuff;
 8008e60:	68fb      	ldr	r3, [r7, #12]
 8008e62:	683a      	ldr	r2, [r7, #0]
 8008e64:	f8c3 2204 	str.w	r2, [r3, #516]	; 0x204

  return (uint8_t)USBD_OK;
 8008e68:	2300      	movs	r3, #0
}
 8008e6a:	4618      	mov	r0, r3
 8008e6c:	3714      	adds	r7, #20
 8008e6e:	46bd      	mov	sp, r7
 8008e70:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008e74:	4770      	bx	lr
	...

08008e78 <USBD_CDC_TransmitPacket>:
uint8_t USBD_CDC_TransmitPacket(USBD_HandleTypeDef *pdev, uint8_t ClassId)
{
  USBD_CDC_HandleTypeDef *hcdc = (USBD_CDC_HandleTypeDef *)pdev->pClassDataCmsit[ClassId];
#else
uint8_t USBD_CDC_TransmitPacket(USBD_HandleTypeDef *pdev)
{
 8008e78:	b580      	push	{r7, lr}
 8008e7a:	b084      	sub	sp, #16
 8008e7c:	af00      	add	r7, sp, #0
 8008e7e:	6078      	str	r0, [r7, #4]
  USBD_CDC_HandleTypeDef *hcdc = (USBD_CDC_HandleTypeDef *)pdev->pClassDataCmsit[pdev->classId];
 8008e80:	687b      	ldr	r3, [r7, #4]
 8008e82:	f8d3 22d4 	ldr.w	r2, [r3, #724]	; 0x2d4
 8008e86:	687b      	ldr	r3, [r7, #4]
 8008e88:	32b0      	adds	r2, #176	; 0xb0
 8008e8a:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8008e8e:	60bb      	str	r3, [r7, #8]
#endif  /* USE_USBD_COMPOSITE */

  USBD_StatusTypeDef ret = USBD_BUSY;
 8008e90:	2301      	movs	r3, #1
 8008e92:	73fb      	strb	r3, [r7, #15]
#ifdef USE_USBD_COMPOSITE
  /* Get the Endpoints addresses allocated for this class instance */
  CDCInEpAdd  = USBD_CoreGetEPAdd(pdev, USBD_EP_IN, USBD_EP_TYPE_BULK, ClassId);
#endif  /* USE_USBD_COMPOSITE */

  if (hcdc == NULL)
 8008e94:	68bb      	ldr	r3, [r7, #8]
 8008e96:	2b00      	cmp	r3, #0
 8008e98:	d101      	bne.n	8008e9e <USBD_CDC_TransmitPacket+0x26>
  {
    return (uint8_t)USBD_FAIL;
 8008e9a:	2303      	movs	r3, #3
 8008e9c:	e025      	b.n	8008eea <USBD_CDC_TransmitPacket+0x72>
  }

  if (hcdc->TxState == 0U)
 8008e9e:	68bb      	ldr	r3, [r7, #8]
 8008ea0:	f8d3 3214 	ldr.w	r3, [r3, #532]	; 0x214
 8008ea4:	2b00      	cmp	r3, #0
 8008ea6:	d11f      	bne.n	8008ee8 <USBD_CDC_TransmitPacket+0x70>
  {
    /* Tx Transfer in progress */
    hcdc->TxState = 1U;
 8008ea8:	68bb      	ldr	r3, [r7, #8]
 8008eaa:	2201      	movs	r2, #1
 8008eac:	f8c3 2214 	str.w	r2, [r3, #532]	; 0x214

    /* Update the packet total length */
    pdev->ep_in[CDCInEpAdd & 0xFU].total_length = hcdc->TxLength;
 8008eb0:	4b10      	ldr	r3, [pc, #64]	; (8008ef4 <USBD_CDC_TransmitPacket+0x7c>)
 8008eb2:	781b      	ldrb	r3, [r3, #0]
 8008eb4:	f003 020f 	and.w	r2, r3, #15
 8008eb8:	68bb      	ldr	r3, [r7, #8]
 8008eba:	f8d3 1210 	ldr.w	r1, [r3, #528]	; 0x210
 8008ebe:	6878      	ldr	r0, [r7, #4]
 8008ec0:	4613      	mov	r3, r2
 8008ec2:	009b      	lsls	r3, r3, #2
 8008ec4:	4413      	add	r3, r2
 8008ec6:	009b      	lsls	r3, r3, #2
 8008ec8:	4403      	add	r3, r0
 8008eca:	3318      	adds	r3, #24
 8008ecc:	6019      	str	r1, [r3, #0]

    /* Transmit next packet */
    (void)USBD_LL_Transmit(pdev, CDCInEpAdd, hcdc->TxBuffer, hcdc->TxLength);
 8008ece:	4b09      	ldr	r3, [pc, #36]	; (8008ef4 <USBD_CDC_TransmitPacket+0x7c>)
 8008ed0:	7819      	ldrb	r1, [r3, #0]
 8008ed2:	68bb      	ldr	r3, [r7, #8]
 8008ed4:	f8d3 2208 	ldr.w	r2, [r3, #520]	; 0x208
 8008ed8:	68bb      	ldr	r3, [r7, #8]
 8008eda:	f8d3 3210 	ldr.w	r3, [r3, #528]	; 0x210
 8008ede:	6878      	ldr	r0, [r7, #4]
 8008ee0:	f008 ff5f 	bl	8011da2 <USBD_LL_Transmit>

    ret = USBD_OK;
 8008ee4:	2300      	movs	r3, #0
 8008ee6:	73fb      	strb	r3, [r7, #15]
  }

  return (uint8_t)ret;
 8008ee8:	7bfb      	ldrb	r3, [r7, #15]
}
 8008eea:	4618      	mov	r0, r3
 8008eec:	3710      	adds	r7, #16
 8008eee:	46bd      	mov	sp, r7
 8008ef0:	bd80      	pop	{r7, pc}
 8008ef2:	bf00      	nop
 8008ef4:	2000009f 	.word	0x2000009f

08008ef8 <USBD_CDC_ReceivePacket>:
  *         prepare OUT Endpoint for reception
  * @param  pdev: device instance
  * @retval status
  */
uint8_t USBD_CDC_ReceivePacket(USBD_HandleTypeDef *pdev)
{
 8008ef8:	b580      	push	{r7, lr}
 8008efa:	b084      	sub	sp, #16
 8008efc:	af00      	add	r7, sp, #0
 8008efe:	6078      	str	r0, [r7, #4]
  USBD_CDC_HandleTypeDef *hcdc = (USBD_CDC_HandleTypeDef *)pdev->pClassDataCmsit[pdev->classId];
 8008f00:	687b      	ldr	r3, [r7, #4]
 8008f02:	f8d3 22d4 	ldr.w	r2, [r3, #724]	; 0x2d4
 8008f06:	687b      	ldr	r3, [r7, #4]
 8008f08:	32b0      	adds	r2, #176	; 0xb0
 8008f0a:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8008f0e:	60fb      	str	r3, [r7, #12]
#ifdef USE_USBD_COMPOSITE
  /* Get the Endpoints addresses allocated for this class instance */
  CDCOutEpAdd = USBD_CoreGetEPAdd(pdev, USBD_EP_OUT, USBD_EP_TYPE_BULK, (uint8_t)pdev->classId);
#endif /* USE_USBD_COMPOSITE */

  if (pdev->pClassDataCmsit[pdev->classId] == NULL)
 8008f10:	687b      	ldr	r3, [r7, #4]
 8008f12:	f8d3 22d4 	ldr.w	r2, [r3, #724]	; 0x2d4
 8008f16:	687b      	ldr	r3, [r7, #4]
 8008f18:	32b0      	adds	r2, #176	; 0xb0
 8008f1a:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8008f1e:	2b00      	cmp	r3, #0
 8008f20:	d101      	bne.n	8008f26 <USBD_CDC_ReceivePacket+0x2e>
  {
    return (uint8_t)USBD_FAIL;
 8008f22:	2303      	movs	r3, #3
 8008f24:	e018      	b.n	8008f58 <USBD_CDC_ReceivePacket+0x60>
  }

  if (pdev->dev_speed == USBD_SPEED_HIGH)
 8008f26:	687b      	ldr	r3, [r7, #4]
 8008f28:	7c1b      	ldrb	r3, [r3, #16]
 8008f2a:	2b00      	cmp	r3, #0
 8008f2c:	d10a      	bne.n	8008f44 <USBD_CDC_ReceivePacket+0x4c>
  {
    /* Prepare Out endpoint to receive next packet */
    (void)USBD_LL_PrepareReceive(pdev, CDCOutEpAdd, hcdc->RxBuffer,
 8008f2e:	4b0c      	ldr	r3, [pc, #48]	; (8008f60 <USBD_CDC_ReceivePacket+0x68>)
 8008f30:	7819      	ldrb	r1, [r3, #0]
 8008f32:	68fb      	ldr	r3, [r7, #12]
 8008f34:	f8d3 2204 	ldr.w	r2, [r3, #516]	; 0x204
 8008f38:	f44f 7300 	mov.w	r3, #512	; 0x200
 8008f3c:	6878      	ldr	r0, [r7, #4]
 8008f3e:	f008 ff51 	bl	8011de4 <USBD_LL_PrepareReceive>
 8008f42:	e008      	b.n	8008f56 <USBD_CDC_ReceivePacket+0x5e>
                                 CDC_DATA_HS_OUT_PACKET_SIZE);
  }
  else
  {
    /* Prepare Out endpoint to receive next packet */
    (void)USBD_LL_PrepareReceive(pdev, CDCOutEpAdd, hcdc->RxBuffer,
 8008f44:	4b06      	ldr	r3, [pc, #24]	; (8008f60 <USBD_CDC_ReceivePacket+0x68>)
 8008f46:	7819      	ldrb	r1, [r3, #0]
 8008f48:	68fb      	ldr	r3, [r7, #12]
 8008f4a:	f8d3 2204 	ldr.w	r2, [r3, #516]	; 0x204
 8008f4e:	2340      	movs	r3, #64	; 0x40
 8008f50:	6878      	ldr	r0, [r7, #4]
 8008f52:	f008 ff47 	bl	8011de4 <USBD_LL_PrepareReceive>
                                 CDC_DATA_FS_OUT_PACKET_SIZE);
  }

  return (uint8_t)USBD_OK;
 8008f56:	2300      	movs	r3, #0
}
 8008f58:	4618      	mov	r0, r3
 8008f5a:	3710      	adds	r7, #16
 8008f5c:	46bd      	mov	sp, r7
 8008f5e:	bd80      	pop	{r7, pc}
 8008f60:	200000a0 	.word	0x200000a0

08008f64 <USBD_Init>:
  * @param  id: Low level core index
  * @retval None
  */
USBD_StatusTypeDef USBD_Init(USBD_HandleTypeDef *pdev,
                             USBD_DescriptorsTypeDef *pdesc, uint8_t id)
{
 8008f64:	b580      	push	{r7, lr}
 8008f66:	b086      	sub	sp, #24
 8008f68:	af00      	add	r7, sp, #0
 8008f6a:	60f8      	str	r0, [r7, #12]
 8008f6c:	60b9      	str	r1, [r7, #8]
 8008f6e:	4613      	mov	r3, r2
 8008f70:	71fb      	strb	r3, [r7, #7]
  USBD_StatusTypeDef ret;

  /* Check whether the USB Host handle is valid */
  if (pdev == NULL)
 8008f72:	68fb      	ldr	r3, [r7, #12]
 8008f74:	2b00      	cmp	r3, #0
 8008f76:	d101      	bne.n	8008f7c <USBD_Init+0x18>
  {
#if (USBD_DEBUG_LEVEL > 1U)
    USBD_ErrLog("Invalid Device handle");
#endif /* (USBD_DEBUG_LEVEL > 1U) */
    return USBD_FAIL;
 8008f78:	2303      	movs	r3, #3
 8008f7a:	e01f      	b.n	8008fbc <USBD_Init+0x58>
    pdev->NumClasses = 0;
    pdev->classId = 0;
  }
#else
  /* Unlink previous class*/
  pdev->pClass[0] = NULL;
 8008f7c:	68fb      	ldr	r3, [r7, #12]
 8008f7e:	2200      	movs	r2, #0
 8008f80:	f8c3 22b8 	str.w	r2, [r3, #696]	; 0x2b8
  pdev->pUserData[0] = NULL;
 8008f84:	68fb      	ldr	r3, [r7, #12]
 8008f86:	2200      	movs	r2, #0
 8008f88:	f8c3 22c4 	str.w	r2, [r3, #708]	; 0x2c4
#endif /* USE_USBD_COMPOSITE */

  pdev->pConfDesc = NULL;
 8008f8c:	68fb      	ldr	r3, [r7, #12]
 8008f8e:	2200      	movs	r2, #0
 8008f90:	f8c3 22d0 	str.w	r2, [r3, #720]	; 0x2d0

  /* Assign USBD Descriptors */
  if (pdesc != NULL)
 8008f94:	68bb      	ldr	r3, [r7, #8]
 8008f96:	2b00      	cmp	r3, #0
 8008f98:	d003      	beq.n	8008fa2 <USBD_Init+0x3e>
  {
    pdev->pDesc = pdesc;
 8008f9a:	68fb      	ldr	r3, [r7, #12]
 8008f9c:	68ba      	ldr	r2, [r7, #8]
 8008f9e:	f8c3 22b4 	str.w	r2, [r3, #692]	; 0x2b4
  }

  /* Set Device initial State */
  pdev->dev_state = USBD_STATE_DEFAULT;
 8008fa2:	68fb      	ldr	r3, [r7, #12]
 8008fa4:	2201      	movs	r2, #1
 8008fa6:	f883 229c 	strb.w	r2, [r3, #668]	; 0x29c
  pdev->id = id;
 8008faa:	68fb      	ldr	r3, [r7, #12]
 8008fac:	79fa      	ldrb	r2, [r7, #7]
 8008fae:	701a      	strb	r2, [r3, #0]

  /* Initialize low level driver */
  ret = USBD_LL_Init(pdev);
 8008fb0:	68f8      	ldr	r0, [r7, #12]
 8008fb2:	f008 fdc1 	bl	8011b38 <USBD_LL_Init>
 8008fb6:	4603      	mov	r3, r0
 8008fb8:	75fb      	strb	r3, [r7, #23]

  return ret;
 8008fba:	7dfb      	ldrb	r3, [r7, #23]
}
 8008fbc:	4618      	mov	r0, r3
 8008fbe:	3718      	adds	r7, #24
 8008fc0:	46bd      	mov	sp, r7
 8008fc2:	bd80      	pop	{r7, pc}

08008fc4 <USBD_RegisterClass>:
  * @param  pDevice : Device Handle
  * @param  pclass: Class handle
  * @retval USBD Status
  */
USBD_StatusTypeDef USBD_RegisterClass(USBD_HandleTypeDef *pdev, USBD_ClassTypeDef *pclass)
{
 8008fc4:	b580      	push	{r7, lr}
 8008fc6:	b084      	sub	sp, #16
 8008fc8:	af00      	add	r7, sp, #0
 8008fca:	6078      	str	r0, [r7, #4]
 8008fcc:	6039      	str	r1, [r7, #0]
  uint16_t len = 0U;
 8008fce:	2300      	movs	r3, #0
 8008fd0:	81fb      	strh	r3, [r7, #14]

  if (pclass == NULL)
 8008fd2:	683b      	ldr	r3, [r7, #0]
 8008fd4:	2b00      	cmp	r3, #0
 8008fd6:	d101      	bne.n	8008fdc <USBD_RegisterClass+0x18>
  {
#if (USBD_DEBUG_LEVEL > 1U)
    USBD_ErrLog("Invalid Class handle");
#endif /* (USBD_DEBUG_LEVEL > 1U) */
    return USBD_FAIL;
 8008fd8:	2303      	movs	r3, #3
 8008fda:	e025      	b.n	8009028 <USBD_RegisterClass+0x64>
  }

  /* link the class to the USB Device handle */
  pdev->pClass[0] = pclass;
 8008fdc:	687b      	ldr	r3, [r7, #4]
 8008fde:	683a      	ldr	r2, [r7, #0]
 8008fe0:	f8c3 22b8 	str.w	r2, [r3, #696]	; 0x2b8
  if (pdev->pClass[pdev->classId]->GetHSConfigDescriptor != NULL)
  {
    pdev->pConfDesc = (void *)pdev->pClass[pdev->classId]->GetHSConfigDescriptor(&len);
  }
#else /* Default USE_USB_FS */
  if (pdev->pClass[pdev->classId]->GetFSConfigDescriptor != NULL)
 8008fe4:	687b      	ldr	r3, [r7, #4]
 8008fe6:	f8d3 22d4 	ldr.w	r2, [r3, #724]	; 0x2d4
 8008fea:	687b      	ldr	r3, [r7, #4]
 8008fec:	32ae      	adds	r2, #174	; 0xae
 8008fee:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8008ff2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8008ff4:	2b00      	cmp	r3, #0
 8008ff6:	d00f      	beq.n	8009018 <USBD_RegisterClass+0x54>
  {
    pdev->pConfDesc = (void *)pdev->pClass[pdev->classId]->GetFSConfigDescriptor(&len);
 8008ff8:	687b      	ldr	r3, [r7, #4]
 8008ffa:	f8d3 22d4 	ldr.w	r2, [r3, #724]	; 0x2d4
 8008ffe:	687b      	ldr	r3, [r7, #4]
 8009000:	32ae      	adds	r2, #174	; 0xae
 8009002:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8009006:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8009008:	f107 020e 	add.w	r2, r7, #14
 800900c:	4610      	mov	r0, r2
 800900e:	4798      	blx	r3
 8009010:	4602      	mov	r2, r0
 8009012:	687b      	ldr	r3, [r7, #4]
 8009014:	f8c3 22d0 	str.w	r2, [r3, #720]	; 0x2d0
  }
#endif /* USE_USB_FS */

  /* Increment the NumClasses */
  pdev->NumClasses ++;
 8009018:	687b      	ldr	r3, [r7, #4]
 800901a:	f8d3 32d8 	ldr.w	r3, [r3, #728]	; 0x2d8
 800901e:	1c5a      	adds	r2, r3, #1
 8009020:	687b      	ldr	r3, [r7, #4]
 8009022:	f8c3 22d8 	str.w	r2, [r3, #728]	; 0x2d8

  return USBD_OK;
 8009026:	2300      	movs	r3, #0
}
 8009028:	4618      	mov	r0, r3
 800902a:	3710      	adds	r7, #16
 800902c:	46bd      	mov	sp, r7
 800902e:	bd80      	pop	{r7, pc}

08009030 <USBD_Start>:
  *         Start the USB Device Core.
  * @param  pdev: Device Handle
  * @retval USBD Status
  */
USBD_StatusTypeDef USBD_Start(USBD_HandleTypeDef *pdev)
{
 8009030:	b580      	push	{r7, lr}
 8009032:	b082      	sub	sp, #8
 8009034:	af00      	add	r7, sp, #0
 8009036:	6078      	str	r0, [r7, #4]
#ifdef USE_USBD_COMPOSITE
  pdev->classId = 0U;
#endif /* USE_USBD_COMPOSITE */

  /* Start the low level driver  */
  return USBD_LL_Start(pdev);
 8009038:	6878      	ldr	r0, [r7, #4]
 800903a:	f008 fdc9 	bl	8011bd0 <USBD_LL_Start>
 800903e:	4603      	mov	r3, r0
}
 8009040:	4618      	mov	r0, r3
 8009042:	3708      	adds	r7, #8
 8009044:	46bd      	mov	sp, r7
 8009046:	bd80      	pop	{r7, pc}

08009048 <USBD_RunTestMode>:
  *         Launch test mode process
  * @param  pdev: device instance
  * @retval status
  */
USBD_StatusTypeDef USBD_RunTestMode(USBD_HandleTypeDef *pdev)
{
 8009048:	b480      	push	{r7}
 800904a:	b083      	sub	sp, #12
 800904c:	af00      	add	r7, sp, #0
 800904e:	6078      	str	r0, [r7, #4]
  return ret;
#else
  /* Prevent unused argument compilation warning */
  UNUSED(pdev);

  return USBD_OK;
 8009050:	2300      	movs	r3, #0
#endif /* USBD_HS_TESTMODE_ENABLE */
}
 8009052:	4618      	mov	r0, r3
 8009054:	370c      	adds	r7, #12
 8009056:	46bd      	mov	sp, r7
 8009058:	f85d 7b04 	ldr.w	r7, [sp], #4
 800905c:	4770      	bx	lr

0800905e <USBD_SetClassConfig>:
  * @param  cfgidx: configuration index
  * @retval status
  */

USBD_StatusTypeDef USBD_SetClassConfig(USBD_HandleTypeDef *pdev, uint8_t cfgidx)
{
 800905e:	b580      	push	{r7, lr}
 8009060:	b084      	sub	sp, #16
 8009062:	af00      	add	r7, sp, #0
 8009064:	6078      	str	r0, [r7, #4]
 8009066:	460b      	mov	r3, r1
 8009068:	70fb      	strb	r3, [r7, #3]
  USBD_StatusTypeDef ret = USBD_OK;
 800906a:	2300      	movs	r3, #0
 800906c:	73fb      	strb	r3, [r7, #15]
        }
      }
    }
  }
#else
  if (pdev->pClass[0] != NULL)
 800906e:	687b      	ldr	r3, [r7, #4]
 8009070:	f8d3 32b8 	ldr.w	r3, [r3, #696]	; 0x2b8
 8009074:	2b00      	cmp	r3, #0
 8009076:	d009      	beq.n	800908c <USBD_SetClassConfig+0x2e>
  {
    /* Set configuration and Start the Class */
    ret = (USBD_StatusTypeDef)pdev->pClass[0]->Init(pdev, cfgidx);
 8009078:	687b      	ldr	r3, [r7, #4]
 800907a:	f8d3 32b8 	ldr.w	r3, [r3, #696]	; 0x2b8
 800907e:	681b      	ldr	r3, [r3, #0]
 8009080:	78fa      	ldrb	r2, [r7, #3]
 8009082:	4611      	mov	r1, r2
 8009084:	6878      	ldr	r0, [r7, #4]
 8009086:	4798      	blx	r3
 8009088:	4603      	mov	r3, r0
 800908a:	73fb      	strb	r3, [r7, #15]
  }
#endif /* USE_USBD_COMPOSITE */

  return ret;
 800908c:	7bfb      	ldrb	r3, [r7, #15]
}
 800908e:	4618      	mov	r0, r3
 8009090:	3710      	adds	r7, #16
 8009092:	46bd      	mov	sp, r7
 8009094:	bd80      	pop	{r7, pc}

08009096 <USBD_ClrClassConfig>:
  * @param  pdev: device instance
  * @param  cfgidx: configuration index
  * @retval status: USBD_StatusTypeDef
  */
USBD_StatusTypeDef USBD_ClrClassConfig(USBD_HandleTypeDef *pdev, uint8_t cfgidx)
{
 8009096:	b580      	push	{r7, lr}
 8009098:	b084      	sub	sp, #16
 800909a:	af00      	add	r7, sp, #0
 800909c:	6078      	str	r0, [r7, #4]
 800909e:	460b      	mov	r3, r1
 80090a0:	70fb      	strb	r3, [r7, #3]
  USBD_StatusTypeDef ret = USBD_OK;
 80090a2:	2300      	movs	r3, #0
 80090a4:	73fb      	strb	r3, [r7, #15]
      }
    }
  }
#else
  /* Clear configuration  and De-initialize the Class process */
  if (pdev->pClass[0]->DeInit(pdev, cfgidx) != 0U)
 80090a6:	687b      	ldr	r3, [r7, #4]
 80090a8:	f8d3 32b8 	ldr.w	r3, [r3, #696]	; 0x2b8
 80090ac:	685b      	ldr	r3, [r3, #4]
 80090ae:	78fa      	ldrb	r2, [r7, #3]
 80090b0:	4611      	mov	r1, r2
 80090b2:	6878      	ldr	r0, [r7, #4]
 80090b4:	4798      	blx	r3
 80090b6:	4603      	mov	r3, r0
 80090b8:	2b00      	cmp	r3, #0
 80090ba:	d001      	beq.n	80090c0 <USBD_ClrClassConfig+0x2a>
  {
    ret = USBD_FAIL;
 80090bc:	2303      	movs	r3, #3
 80090be:	73fb      	strb	r3, [r7, #15]
  }
#endif /* USE_USBD_COMPOSITE */

  return ret;
 80090c0:	7bfb      	ldrb	r3, [r7, #15]
}
 80090c2:	4618      	mov	r0, r3
 80090c4:	3710      	adds	r7, #16
 80090c6:	46bd      	mov	sp, r7
 80090c8:	bd80      	pop	{r7, pc}

080090ca <USBD_LL_SetupStage>:
  *         Handle the setup stage
  * @param  pdev: device instance
  * @retval status
  */
USBD_StatusTypeDef USBD_LL_SetupStage(USBD_HandleTypeDef *pdev, uint8_t *psetup)
{
 80090ca:	b580      	push	{r7, lr}
 80090cc:	b084      	sub	sp, #16
 80090ce:	af00      	add	r7, sp, #0
 80090d0:	6078      	str	r0, [r7, #4]
 80090d2:	6039      	str	r1, [r7, #0]
  USBD_StatusTypeDef ret;

  USBD_ParseSetupRequest(&pdev->request, psetup);
 80090d4:	687b      	ldr	r3, [r7, #4]
 80090d6:	f203 23aa 	addw	r3, r3, #682	; 0x2aa
 80090da:	6839      	ldr	r1, [r7, #0]
 80090dc:	4618      	mov	r0, r3
 80090de:	f001 f90e 	bl	800a2fe <USBD_ParseSetupRequest>

  pdev->ep0_state = USBD_EP0_SETUP;
 80090e2:	687b      	ldr	r3, [r7, #4]
 80090e4:	2201      	movs	r2, #1
 80090e6:	f8c3 2294 	str.w	r2, [r3, #660]	; 0x294

  pdev->ep0_data_len = pdev->request.wLength;
 80090ea:	687b      	ldr	r3, [r7, #4]
 80090ec:	f8b3 32b0 	ldrh.w	r3, [r3, #688]	; 0x2b0
 80090f0:	461a      	mov	r2, r3
 80090f2:	687b      	ldr	r3, [r7, #4]
 80090f4:	f8c3 2298 	str.w	r2, [r3, #664]	; 0x298

  switch (pdev->request.bmRequest & 0x1FU)
 80090f8:	687b      	ldr	r3, [r7, #4]
 80090fa:	f893 32aa 	ldrb.w	r3, [r3, #682]	; 0x2aa
 80090fe:	f003 031f 	and.w	r3, r3, #31
 8009102:	2b02      	cmp	r3, #2
 8009104:	d01a      	beq.n	800913c <USBD_LL_SetupStage+0x72>
 8009106:	2b02      	cmp	r3, #2
 8009108:	d822      	bhi.n	8009150 <USBD_LL_SetupStage+0x86>
 800910a:	2b00      	cmp	r3, #0
 800910c:	d002      	beq.n	8009114 <USBD_LL_SetupStage+0x4a>
 800910e:	2b01      	cmp	r3, #1
 8009110:	d00a      	beq.n	8009128 <USBD_LL_SetupStage+0x5e>
 8009112:	e01d      	b.n	8009150 <USBD_LL_SetupStage+0x86>
  {
    case USB_REQ_RECIPIENT_DEVICE:
      ret = USBD_StdDevReq(pdev, &pdev->request);
 8009114:	687b      	ldr	r3, [r7, #4]
 8009116:	f203 23aa 	addw	r3, r3, #682	; 0x2aa
 800911a:	4619      	mov	r1, r3
 800911c:	6878      	ldr	r0, [r7, #4]
 800911e:	f000 fb65 	bl	80097ec <USBD_StdDevReq>
 8009122:	4603      	mov	r3, r0
 8009124:	73fb      	strb	r3, [r7, #15]
      break;
 8009126:	e020      	b.n	800916a <USBD_LL_SetupStage+0xa0>

    case USB_REQ_RECIPIENT_INTERFACE:
      ret = USBD_StdItfReq(pdev, &pdev->request);
 8009128:	687b      	ldr	r3, [r7, #4]
 800912a:	f203 23aa 	addw	r3, r3, #682	; 0x2aa
 800912e:	4619      	mov	r1, r3
 8009130:	6878      	ldr	r0, [r7, #4]
 8009132:	f000 fbcd 	bl	80098d0 <USBD_StdItfReq>
 8009136:	4603      	mov	r3, r0
 8009138:	73fb      	strb	r3, [r7, #15]
      break;
 800913a:	e016      	b.n	800916a <USBD_LL_SetupStage+0xa0>

    case USB_REQ_RECIPIENT_ENDPOINT:
      ret = USBD_StdEPReq(pdev, &pdev->request);
 800913c:	687b      	ldr	r3, [r7, #4]
 800913e:	f203 23aa 	addw	r3, r3, #682	; 0x2aa
 8009142:	4619      	mov	r1, r3
 8009144:	6878      	ldr	r0, [r7, #4]
 8009146:	f000 fc2f 	bl	80099a8 <USBD_StdEPReq>
 800914a:	4603      	mov	r3, r0
 800914c:	73fb      	strb	r3, [r7, #15]
      break;
 800914e:	e00c      	b.n	800916a <USBD_LL_SetupStage+0xa0>

    default:
      ret = USBD_LL_StallEP(pdev, (pdev->request.bmRequest & 0x80U));
 8009150:	687b      	ldr	r3, [r7, #4]
 8009152:	f893 32aa 	ldrb.w	r3, [r3, #682]	; 0x2aa
 8009156:	f023 037f 	bic.w	r3, r3, #127	; 0x7f
 800915a:	b2db      	uxtb	r3, r3
 800915c:	4619      	mov	r1, r3
 800915e:	6878      	ldr	r0, [r7, #4]
 8009160:	f008 fd96 	bl	8011c90 <USBD_LL_StallEP>
 8009164:	4603      	mov	r3, r0
 8009166:	73fb      	strb	r3, [r7, #15]
      break;
 8009168:	bf00      	nop
  }

  return ret;
 800916a:	7bfb      	ldrb	r3, [r7, #15]
}
 800916c:	4618      	mov	r0, r3
 800916e:	3710      	adds	r7, #16
 8009170:	46bd      	mov	sp, r7
 8009172:	bd80      	pop	{r7, pc}

08009174 <USBD_LL_DataOutStage>:
  * @param  pdata: data pointer
  * @retval status
  */
USBD_StatusTypeDef USBD_LL_DataOutStage(USBD_HandleTypeDef *pdev,
                                        uint8_t epnum, uint8_t *pdata)
{
 8009174:	b580      	push	{r7, lr}
 8009176:	b086      	sub	sp, #24
 8009178:	af00      	add	r7, sp, #0
 800917a:	60f8      	str	r0, [r7, #12]
 800917c:	460b      	mov	r3, r1
 800917e:	607a      	str	r2, [r7, #4]
 8009180:	72fb      	strb	r3, [r7, #11]
  USBD_EndpointTypeDef *pep;
  USBD_StatusTypeDef ret = USBD_OK;
 8009182:	2300      	movs	r3, #0
 8009184:	75fb      	strb	r3, [r7, #23]
  uint8_t idx;

  if (epnum == 0U)
 8009186:	7afb      	ldrb	r3, [r7, #11]
 8009188:	2b00      	cmp	r3, #0
 800918a:	d16e      	bne.n	800926a <USBD_LL_DataOutStage+0xf6>
  {
    pep = &pdev->ep_out[0];
 800918c:	68fb      	ldr	r3, [r7, #12]
 800918e:	f503 73aa 	add.w	r3, r3, #340	; 0x154
 8009192:	613b      	str	r3, [r7, #16]

    if (pdev->ep0_state == USBD_EP0_DATA_OUT)
 8009194:	68fb      	ldr	r3, [r7, #12]
 8009196:	f8d3 3294 	ldr.w	r3, [r3, #660]	; 0x294
 800919a:	2b03      	cmp	r3, #3
 800919c:	f040 8098 	bne.w	80092d0 <USBD_LL_DataOutStage+0x15c>
    {
      if (pep->rem_length > pep->maxpacket)
 80091a0:	693b      	ldr	r3, [r7, #16]
 80091a2:	689a      	ldr	r2, [r3, #8]
 80091a4:	693b      	ldr	r3, [r7, #16]
 80091a6:	68db      	ldr	r3, [r3, #12]
 80091a8:	429a      	cmp	r2, r3
 80091aa:	d913      	bls.n	80091d4 <USBD_LL_DataOutStage+0x60>
      {
        pep->rem_length -= pep->maxpacket;
 80091ac:	693b      	ldr	r3, [r7, #16]
 80091ae:	689a      	ldr	r2, [r3, #8]
 80091b0:	693b      	ldr	r3, [r7, #16]
 80091b2:	68db      	ldr	r3, [r3, #12]
 80091b4:	1ad2      	subs	r2, r2, r3
 80091b6:	693b      	ldr	r3, [r7, #16]
 80091b8:	609a      	str	r2, [r3, #8]

        (void)USBD_CtlContinueRx(pdev, pdata, MIN(pep->rem_length, pep->maxpacket));
 80091ba:	693b      	ldr	r3, [r7, #16]
 80091bc:	68da      	ldr	r2, [r3, #12]
 80091be:	693b      	ldr	r3, [r7, #16]
 80091c0:	689b      	ldr	r3, [r3, #8]
 80091c2:	4293      	cmp	r3, r2
 80091c4:	bf28      	it	cs
 80091c6:	4613      	movcs	r3, r2
 80091c8:	461a      	mov	r2, r3
 80091ca:	6879      	ldr	r1, [r7, #4]
 80091cc:	68f8      	ldr	r0, [r7, #12]
 80091ce:	f001 f98a 	bl	800a4e6 <USBD_CtlContinueRx>
 80091d2:	e07d      	b.n	80092d0 <USBD_LL_DataOutStage+0x15c>
      }
      else
      {
        /* Find the class ID relative to the current request */
        switch (pdev->request.bmRequest & 0x1FU)
 80091d4:	68fb      	ldr	r3, [r7, #12]
 80091d6:	f893 32aa 	ldrb.w	r3, [r3, #682]	; 0x2aa
 80091da:	f003 031f 	and.w	r3, r3, #31
 80091de:	2b02      	cmp	r3, #2
 80091e0:	d014      	beq.n	800920c <USBD_LL_DataOutStage+0x98>
 80091e2:	2b02      	cmp	r3, #2
 80091e4:	d81d      	bhi.n	8009222 <USBD_LL_DataOutStage+0xae>
 80091e6:	2b00      	cmp	r3, #0
 80091e8:	d002      	beq.n	80091f0 <USBD_LL_DataOutStage+0x7c>
 80091ea:	2b01      	cmp	r3, #1
 80091ec:	d003      	beq.n	80091f6 <USBD_LL_DataOutStage+0x82>
 80091ee:	e018      	b.n	8009222 <USBD_LL_DataOutStage+0xae>
        {
          case USB_REQ_RECIPIENT_DEVICE:
            /* Device requests must be managed by the first instantiated class
               (or duplicated by all classes for simplicity) */
            idx = 0U;
 80091f0:	2300      	movs	r3, #0
 80091f2:	75bb      	strb	r3, [r7, #22]
            break;
 80091f4:	e018      	b.n	8009228 <USBD_LL_DataOutStage+0xb4>

          case USB_REQ_RECIPIENT_INTERFACE:
            idx = USBD_CoreFindIF(pdev, LOBYTE(pdev->request.wIndex));
 80091f6:	68fb      	ldr	r3, [r7, #12]
 80091f8:	f8b3 32ae 	ldrh.w	r3, [r3, #686]	; 0x2ae
 80091fc:	b2db      	uxtb	r3, r3
 80091fe:	4619      	mov	r1, r3
 8009200:	68f8      	ldr	r0, [r7, #12]
 8009202:	f000 fa64 	bl	80096ce <USBD_CoreFindIF>
 8009206:	4603      	mov	r3, r0
 8009208:	75bb      	strb	r3, [r7, #22]
            break;
 800920a:	e00d      	b.n	8009228 <USBD_LL_DataOutStage+0xb4>

          case USB_REQ_RECIPIENT_ENDPOINT:
            idx = USBD_CoreFindEP(pdev, LOBYTE(pdev->request.wIndex));
 800920c:	68fb      	ldr	r3, [r7, #12]
 800920e:	f8b3 32ae 	ldrh.w	r3, [r3, #686]	; 0x2ae
 8009212:	b2db      	uxtb	r3, r3
 8009214:	4619      	mov	r1, r3
 8009216:	68f8      	ldr	r0, [r7, #12]
 8009218:	f000 fa66 	bl	80096e8 <USBD_CoreFindEP>
 800921c:	4603      	mov	r3, r0
 800921e:	75bb      	strb	r3, [r7, #22]
            break;
 8009220:	e002      	b.n	8009228 <USBD_LL_DataOutStage+0xb4>

          default:
            /* Back to the first class in case of doubt */
            idx = 0U;
 8009222:	2300      	movs	r3, #0
 8009224:	75bb      	strb	r3, [r7, #22]
            break;
 8009226:	bf00      	nop
        }

        if (idx < USBD_MAX_SUPPORTED_CLASS)
 8009228:	7dbb      	ldrb	r3, [r7, #22]
 800922a:	2b00      	cmp	r3, #0
 800922c:	d119      	bne.n	8009262 <USBD_LL_DataOutStage+0xee>
        {
          /* Setup the class ID and route the request to the relative class function */
          if (pdev->dev_state == USBD_STATE_CONFIGURED)
 800922e:	68fb      	ldr	r3, [r7, #12]
 8009230:	f893 329c 	ldrb.w	r3, [r3, #668]	; 0x29c
 8009234:	b2db      	uxtb	r3, r3
 8009236:	2b03      	cmp	r3, #3
 8009238:	d113      	bne.n	8009262 <USBD_LL_DataOutStage+0xee>
          {
            if (pdev->pClass[idx]->EP0_RxReady != NULL)
 800923a:	7dba      	ldrb	r2, [r7, #22]
 800923c:	68fb      	ldr	r3, [r7, #12]
 800923e:	32ae      	adds	r2, #174	; 0xae
 8009240:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8009244:	691b      	ldr	r3, [r3, #16]
 8009246:	2b00      	cmp	r3, #0
 8009248:	d00b      	beq.n	8009262 <USBD_LL_DataOutStage+0xee>
            {
              pdev->classId = idx;
 800924a:	7dba      	ldrb	r2, [r7, #22]
 800924c:	68fb      	ldr	r3, [r7, #12]
 800924e:	f8c3 22d4 	str.w	r2, [r3, #724]	; 0x2d4
              pdev->pClass[idx]->EP0_RxReady(pdev);
 8009252:	7dba      	ldrb	r2, [r7, #22]
 8009254:	68fb      	ldr	r3, [r7, #12]
 8009256:	32ae      	adds	r2, #174	; 0xae
 8009258:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 800925c:	691b      	ldr	r3, [r3, #16]
 800925e:	68f8      	ldr	r0, [r7, #12]
 8009260:	4798      	blx	r3
            }
          }
        }

        (void)USBD_CtlSendStatus(pdev);
 8009262:	68f8      	ldr	r0, [r7, #12]
 8009264:	f001 f950 	bl	800a508 <USBD_CtlSendStatus>
 8009268:	e032      	b.n	80092d0 <USBD_LL_DataOutStage+0x15c>
    }
  }
  else
  {
    /* Get the class index relative to this interface */
    idx = USBD_CoreFindEP(pdev, (epnum & 0x7FU));
 800926a:	7afb      	ldrb	r3, [r7, #11]
 800926c:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 8009270:	b2db      	uxtb	r3, r3
 8009272:	4619      	mov	r1, r3
 8009274:	68f8      	ldr	r0, [r7, #12]
 8009276:	f000 fa37 	bl	80096e8 <USBD_CoreFindEP>
 800927a:	4603      	mov	r3, r0
 800927c:	75bb      	strb	r3, [r7, #22]

    if (((uint16_t)idx != 0xFFU) && (idx < USBD_MAX_SUPPORTED_CLASS))
 800927e:	7dbb      	ldrb	r3, [r7, #22]
 8009280:	2bff      	cmp	r3, #255	; 0xff
 8009282:	d025      	beq.n	80092d0 <USBD_LL_DataOutStage+0x15c>
 8009284:	7dbb      	ldrb	r3, [r7, #22]
 8009286:	2b00      	cmp	r3, #0
 8009288:	d122      	bne.n	80092d0 <USBD_LL_DataOutStage+0x15c>
    {
      /* Call the class data out function to manage the request */
      if (pdev->dev_state == USBD_STATE_CONFIGURED)
 800928a:	68fb      	ldr	r3, [r7, #12]
 800928c:	f893 329c 	ldrb.w	r3, [r3, #668]	; 0x29c
 8009290:	b2db      	uxtb	r3, r3
 8009292:	2b03      	cmp	r3, #3
 8009294:	d117      	bne.n	80092c6 <USBD_LL_DataOutStage+0x152>
      {
        if (pdev->pClass[idx]->DataOut != NULL)
 8009296:	7dba      	ldrb	r2, [r7, #22]
 8009298:	68fb      	ldr	r3, [r7, #12]
 800929a:	32ae      	adds	r2, #174	; 0xae
 800929c:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 80092a0:	699b      	ldr	r3, [r3, #24]
 80092a2:	2b00      	cmp	r3, #0
 80092a4:	d00f      	beq.n	80092c6 <USBD_LL_DataOutStage+0x152>
        {
          pdev->classId = idx;
 80092a6:	7dba      	ldrb	r2, [r7, #22]
 80092a8:	68fb      	ldr	r3, [r7, #12]
 80092aa:	f8c3 22d4 	str.w	r2, [r3, #724]	; 0x2d4
          ret = (USBD_StatusTypeDef)pdev->pClass[idx]->DataOut(pdev, epnum);
 80092ae:	7dba      	ldrb	r2, [r7, #22]
 80092b0:	68fb      	ldr	r3, [r7, #12]
 80092b2:	32ae      	adds	r2, #174	; 0xae
 80092b4:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 80092b8:	699b      	ldr	r3, [r3, #24]
 80092ba:	7afa      	ldrb	r2, [r7, #11]
 80092bc:	4611      	mov	r1, r2
 80092be:	68f8      	ldr	r0, [r7, #12]
 80092c0:	4798      	blx	r3
 80092c2:	4603      	mov	r3, r0
 80092c4:	75fb      	strb	r3, [r7, #23]
        }
      }
      if (ret != USBD_OK)
 80092c6:	7dfb      	ldrb	r3, [r7, #23]
 80092c8:	2b00      	cmp	r3, #0
 80092ca:	d001      	beq.n	80092d0 <USBD_LL_DataOutStage+0x15c>
      {
        return ret;
 80092cc:	7dfb      	ldrb	r3, [r7, #23]
 80092ce:	e000      	b.n	80092d2 <USBD_LL_DataOutStage+0x15e>
      }
    }
  }

  return USBD_OK;
 80092d0:	2300      	movs	r3, #0
}
 80092d2:	4618      	mov	r0, r3
 80092d4:	3718      	adds	r7, #24
 80092d6:	46bd      	mov	sp, r7
 80092d8:	bd80      	pop	{r7, pc}

080092da <USBD_LL_DataInStage>:
  * @param  epnum: endpoint index
  * @retval status
  */
USBD_StatusTypeDef USBD_LL_DataInStage(USBD_HandleTypeDef *pdev,
                                       uint8_t epnum, uint8_t *pdata)
{
 80092da:	b580      	push	{r7, lr}
 80092dc:	b086      	sub	sp, #24
 80092de:	af00      	add	r7, sp, #0
 80092e0:	60f8      	str	r0, [r7, #12]
 80092e2:	460b      	mov	r3, r1
 80092e4:	607a      	str	r2, [r7, #4]
 80092e6:	72fb      	strb	r3, [r7, #11]
  USBD_EndpointTypeDef *pep;
  USBD_StatusTypeDef ret;
  uint8_t idx;

  if (epnum == 0U)
 80092e8:	7afb      	ldrb	r3, [r7, #11]
 80092ea:	2b00      	cmp	r3, #0
 80092ec:	d16f      	bne.n	80093ce <USBD_LL_DataInStage+0xf4>
  {
    pep = &pdev->ep_in[0];
 80092ee:	68fb      	ldr	r3, [r7, #12]
 80092f0:	3314      	adds	r3, #20
 80092f2:	613b      	str	r3, [r7, #16]

    if (pdev->ep0_state == USBD_EP0_DATA_IN)
 80092f4:	68fb      	ldr	r3, [r7, #12]
 80092f6:	f8d3 3294 	ldr.w	r3, [r3, #660]	; 0x294
 80092fa:	2b02      	cmp	r3, #2
 80092fc:	d15a      	bne.n	80093b4 <USBD_LL_DataInStage+0xda>
    {
      if (pep->rem_length > pep->maxpacket)
 80092fe:	693b      	ldr	r3, [r7, #16]
 8009300:	689a      	ldr	r2, [r3, #8]
 8009302:	693b      	ldr	r3, [r7, #16]
 8009304:	68db      	ldr	r3, [r3, #12]
 8009306:	429a      	cmp	r2, r3
 8009308:	d914      	bls.n	8009334 <USBD_LL_DataInStage+0x5a>
      {
        pep->rem_length -= pep->maxpacket;
 800930a:	693b      	ldr	r3, [r7, #16]
 800930c:	689a      	ldr	r2, [r3, #8]
 800930e:	693b      	ldr	r3, [r7, #16]
 8009310:	68db      	ldr	r3, [r3, #12]
 8009312:	1ad2      	subs	r2, r2, r3
 8009314:	693b      	ldr	r3, [r7, #16]
 8009316:	609a      	str	r2, [r3, #8]

        (void)USBD_CtlContinueSendData(pdev, pdata, pep->rem_length);
 8009318:	693b      	ldr	r3, [r7, #16]
 800931a:	689b      	ldr	r3, [r3, #8]
 800931c:	461a      	mov	r2, r3
 800931e:	6879      	ldr	r1, [r7, #4]
 8009320:	68f8      	ldr	r0, [r7, #12]
 8009322:	f001 f8b2 	bl	800a48a <USBD_CtlContinueSendData>

        /* Prepare endpoint for premature end of transfer */
        (void)USBD_LL_PrepareReceive(pdev, 0U, NULL, 0U);
 8009326:	2300      	movs	r3, #0
 8009328:	2200      	movs	r2, #0
 800932a:	2100      	movs	r1, #0
 800932c:	68f8      	ldr	r0, [r7, #12]
 800932e:	f008 fd59 	bl	8011de4 <USBD_LL_PrepareReceive>
 8009332:	e03f      	b.n	80093b4 <USBD_LL_DataInStage+0xda>
      }
      else
      {
        /* last packet is MPS multiple, so send ZLP packet */
        if ((pep->maxpacket == pep->rem_length) &&
 8009334:	693b      	ldr	r3, [r7, #16]
 8009336:	68da      	ldr	r2, [r3, #12]
 8009338:	693b      	ldr	r3, [r7, #16]
 800933a:	689b      	ldr	r3, [r3, #8]
 800933c:	429a      	cmp	r2, r3
 800933e:	d11c      	bne.n	800937a <USBD_LL_DataInStage+0xa0>
            (pep->total_length >= pep->maxpacket) &&
 8009340:	693b      	ldr	r3, [r7, #16]
 8009342:	685a      	ldr	r2, [r3, #4]
 8009344:	693b      	ldr	r3, [r7, #16]
 8009346:	68db      	ldr	r3, [r3, #12]
        if ((pep->maxpacket == pep->rem_length) &&
 8009348:	429a      	cmp	r2, r3
 800934a:	d316      	bcc.n	800937a <USBD_LL_DataInStage+0xa0>
            (pep->total_length < pdev->ep0_data_len))
 800934c:	693b      	ldr	r3, [r7, #16]
 800934e:	685a      	ldr	r2, [r3, #4]
 8009350:	68fb      	ldr	r3, [r7, #12]
 8009352:	f8d3 3298 	ldr.w	r3, [r3, #664]	; 0x298
            (pep->total_length >= pep->maxpacket) &&
 8009356:	429a      	cmp	r2, r3
 8009358:	d20f      	bcs.n	800937a <USBD_LL_DataInStage+0xa0>
        {
          (void)USBD_CtlContinueSendData(pdev, NULL, 0U);
 800935a:	2200      	movs	r2, #0
 800935c:	2100      	movs	r1, #0
 800935e:	68f8      	ldr	r0, [r7, #12]
 8009360:	f001 f893 	bl	800a48a <USBD_CtlContinueSendData>
          pdev->ep0_data_len = 0U;
 8009364:	68fb      	ldr	r3, [r7, #12]
 8009366:	2200      	movs	r2, #0
 8009368:	f8c3 2298 	str.w	r2, [r3, #664]	; 0x298

          /* Prepare endpoint for premature end of transfer */
          (void)USBD_LL_PrepareReceive(pdev, 0U, NULL, 0U);
 800936c:	2300      	movs	r3, #0
 800936e:	2200      	movs	r2, #0
 8009370:	2100      	movs	r1, #0
 8009372:	68f8      	ldr	r0, [r7, #12]
 8009374:	f008 fd36 	bl	8011de4 <USBD_LL_PrepareReceive>
 8009378:	e01c      	b.n	80093b4 <USBD_LL_DataInStage+0xda>
        }
        else
        {
          if (pdev->dev_state == USBD_STATE_CONFIGURED)
 800937a:	68fb      	ldr	r3, [r7, #12]
 800937c:	f893 329c 	ldrb.w	r3, [r3, #668]	; 0x29c
 8009380:	b2db      	uxtb	r3, r3
 8009382:	2b03      	cmp	r3, #3
 8009384:	d10f      	bne.n	80093a6 <USBD_LL_DataInStage+0xcc>
          {
            if (pdev->pClass[0]->EP0_TxSent != NULL)
 8009386:	68fb      	ldr	r3, [r7, #12]
 8009388:	f8d3 32b8 	ldr.w	r3, [r3, #696]	; 0x2b8
 800938c:	68db      	ldr	r3, [r3, #12]
 800938e:	2b00      	cmp	r3, #0
 8009390:	d009      	beq.n	80093a6 <USBD_LL_DataInStage+0xcc>
            {
              pdev->classId = 0U;
 8009392:	68fb      	ldr	r3, [r7, #12]
 8009394:	2200      	movs	r2, #0
 8009396:	f8c3 22d4 	str.w	r2, [r3, #724]	; 0x2d4
              pdev->pClass[0]->EP0_TxSent(pdev);
 800939a:	68fb      	ldr	r3, [r7, #12]
 800939c:	f8d3 32b8 	ldr.w	r3, [r3, #696]	; 0x2b8
 80093a0:	68db      	ldr	r3, [r3, #12]
 80093a2:	68f8      	ldr	r0, [r7, #12]
 80093a4:	4798      	blx	r3
            }
          }
          (void)USBD_LL_StallEP(pdev, 0x80U);
 80093a6:	2180      	movs	r1, #128	; 0x80
 80093a8:	68f8      	ldr	r0, [r7, #12]
 80093aa:	f008 fc71 	bl	8011c90 <USBD_LL_StallEP>
          (void)USBD_CtlReceiveStatus(pdev);
 80093ae:	68f8      	ldr	r0, [r7, #12]
 80093b0:	f001 f8bd 	bl	800a52e <USBD_CtlReceiveStatus>
        }
      }
    }

    if (pdev->dev_test_mode != 0U)
 80093b4:	68fb      	ldr	r3, [r7, #12]
 80093b6:	f893 32a0 	ldrb.w	r3, [r3, #672]	; 0x2a0
 80093ba:	2b00      	cmp	r3, #0
 80093bc:	d03a      	beq.n	8009434 <USBD_LL_DataInStage+0x15a>
    {
      (void)USBD_RunTestMode(pdev);
 80093be:	68f8      	ldr	r0, [r7, #12]
 80093c0:	f7ff fe42 	bl	8009048 <USBD_RunTestMode>
      pdev->dev_test_mode = 0U;
 80093c4:	68fb      	ldr	r3, [r7, #12]
 80093c6:	2200      	movs	r2, #0
 80093c8:	f883 22a0 	strb.w	r2, [r3, #672]	; 0x2a0
 80093cc:	e032      	b.n	8009434 <USBD_LL_DataInStage+0x15a>
    }
  }
  else
  {
    /* Get the class index relative to this interface */
    idx = USBD_CoreFindEP(pdev, ((uint8_t)epnum | 0x80U));
 80093ce:	7afb      	ldrb	r3, [r7, #11]
 80093d0:	f063 037f 	orn	r3, r3, #127	; 0x7f
 80093d4:	b2db      	uxtb	r3, r3
 80093d6:	4619      	mov	r1, r3
 80093d8:	68f8      	ldr	r0, [r7, #12]
 80093da:	f000 f985 	bl	80096e8 <USBD_CoreFindEP>
 80093de:	4603      	mov	r3, r0
 80093e0:	75fb      	strb	r3, [r7, #23]

    if (((uint16_t)idx != 0xFFU) && (idx < USBD_MAX_SUPPORTED_CLASS))
 80093e2:	7dfb      	ldrb	r3, [r7, #23]
 80093e4:	2bff      	cmp	r3, #255	; 0xff
 80093e6:	d025      	beq.n	8009434 <USBD_LL_DataInStage+0x15a>
 80093e8:	7dfb      	ldrb	r3, [r7, #23]
 80093ea:	2b00      	cmp	r3, #0
 80093ec:	d122      	bne.n	8009434 <USBD_LL_DataInStage+0x15a>
    {
      /* Call the class data out function to manage the request */
      if (pdev->dev_state == USBD_STATE_CONFIGURED)
 80093ee:	68fb      	ldr	r3, [r7, #12]
 80093f0:	f893 329c 	ldrb.w	r3, [r3, #668]	; 0x29c
 80093f4:	b2db      	uxtb	r3, r3
 80093f6:	2b03      	cmp	r3, #3
 80093f8:	d11c      	bne.n	8009434 <USBD_LL_DataInStage+0x15a>
      {
        if (pdev->pClass[idx]->DataIn != NULL)
 80093fa:	7dfa      	ldrb	r2, [r7, #23]
 80093fc:	68fb      	ldr	r3, [r7, #12]
 80093fe:	32ae      	adds	r2, #174	; 0xae
 8009400:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8009404:	695b      	ldr	r3, [r3, #20]
 8009406:	2b00      	cmp	r3, #0
 8009408:	d014      	beq.n	8009434 <USBD_LL_DataInStage+0x15a>
        {
          pdev->classId = idx;
 800940a:	7dfa      	ldrb	r2, [r7, #23]
 800940c:	68fb      	ldr	r3, [r7, #12]
 800940e:	f8c3 22d4 	str.w	r2, [r3, #724]	; 0x2d4
          ret = (USBD_StatusTypeDef)pdev->pClass[idx]->DataIn(pdev, epnum);
 8009412:	7dfa      	ldrb	r2, [r7, #23]
 8009414:	68fb      	ldr	r3, [r7, #12]
 8009416:	32ae      	adds	r2, #174	; 0xae
 8009418:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 800941c:	695b      	ldr	r3, [r3, #20]
 800941e:	7afa      	ldrb	r2, [r7, #11]
 8009420:	4611      	mov	r1, r2
 8009422:	68f8      	ldr	r0, [r7, #12]
 8009424:	4798      	blx	r3
 8009426:	4603      	mov	r3, r0
 8009428:	75bb      	strb	r3, [r7, #22]

          if (ret != USBD_OK)
 800942a:	7dbb      	ldrb	r3, [r7, #22]
 800942c:	2b00      	cmp	r3, #0
 800942e:	d001      	beq.n	8009434 <USBD_LL_DataInStage+0x15a>
          {
            return ret;
 8009430:	7dbb      	ldrb	r3, [r7, #22]
 8009432:	e000      	b.n	8009436 <USBD_LL_DataInStage+0x15c>
        }
      }
    }
  }

  return USBD_OK;
 8009434:	2300      	movs	r3, #0
}
 8009436:	4618      	mov	r0, r3
 8009438:	3718      	adds	r7, #24
 800943a:	46bd      	mov	sp, r7
 800943c:	bd80      	pop	{r7, pc}

0800943e <USBD_LL_Reset>:
  * @param  pdev: device instance
  * @retval status
  */

USBD_StatusTypeDef USBD_LL_Reset(USBD_HandleTypeDef *pdev)
{
 800943e:	b580      	push	{r7, lr}
 8009440:	b084      	sub	sp, #16
 8009442:	af00      	add	r7, sp, #0
 8009444:	6078      	str	r0, [r7, #4]
  USBD_StatusTypeDef ret = USBD_OK;
 8009446:	2300      	movs	r3, #0
 8009448:	73fb      	strb	r3, [r7, #15]

  /* Upon Reset call user call back */
  pdev->dev_state = USBD_STATE_DEFAULT;
 800944a:	687b      	ldr	r3, [r7, #4]
 800944c:	2201      	movs	r2, #1
 800944e:	f883 229c 	strb.w	r2, [r3, #668]	; 0x29c
  pdev->ep0_state = USBD_EP0_IDLE;
 8009452:	687b      	ldr	r3, [r7, #4]
 8009454:	2200      	movs	r2, #0
 8009456:	f8c3 2294 	str.w	r2, [r3, #660]	; 0x294
  pdev->dev_config = 0U;
 800945a:	687b      	ldr	r3, [r7, #4]
 800945c:	2200      	movs	r2, #0
 800945e:	605a      	str	r2, [r3, #4]
  pdev->dev_remote_wakeup = 0U;
 8009460:	687b      	ldr	r3, [r7, #4]
 8009462:	2200      	movs	r2, #0
 8009464:	f8c3 22a4 	str.w	r2, [r3, #676]	; 0x2a4
  pdev->dev_test_mode = 0U;
 8009468:	687b      	ldr	r3, [r7, #4]
 800946a:	2200      	movs	r2, #0
 800946c:	f883 22a0 	strb.w	r2, [r3, #672]	; 0x2a0
      }
    }
  }
#else

  if (pdev->pClass[0] != NULL)
 8009470:	687b      	ldr	r3, [r7, #4]
 8009472:	f8d3 32b8 	ldr.w	r3, [r3, #696]	; 0x2b8
 8009476:	2b00      	cmp	r3, #0
 8009478:	d014      	beq.n	80094a4 <USBD_LL_Reset+0x66>
  {
    if (pdev->pClass[0]->DeInit != NULL)
 800947a:	687b      	ldr	r3, [r7, #4]
 800947c:	f8d3 32b8 	ldr.w	r3, [r3, #696]	; 0x2b8
 8009480:	685b      	ldr	r3, [r3, #4]
 8009482:	2b00      	cmp	r3, #0
 8009484:	d00e      	beq.n	80094a4 <USBD_LL_Reset+0x66>
    {
      if (pdev->pClass[0]->DeInit(pdev, (uint8_t)pdev->dev_config) != USBD_OK)
 8009486:	687b      	ldr	r3, [r7, #4]
 8009488:	f8d3 32b8 	ldr.w	r3, [r3, #696]	; 0x2b8
 800948c:	685b      	ldr	r3, [r3, #4]
 800948e:	687a      	ldr	r2, [r7, #4]
 8009490:	6852      	ldr	r2, [r2, #4]
 8009492:	b2d2      	uxtb	r2, r2
 8009494:	4611      	mov	r1, r2
 8009496:	6878      	ldr	r0, [r7, #4]
 8009498:	4798      	blx	r3
 800949a:	4603      	mov	r3, r0
 800949c:	2b00      	cmp	r3, #0
 800949e:	d001      	beq.n	80094a4 <USBD_LL_Reset+0x66>
      {
        ret = USBD_FAIL;
 80094a0:	2303      	movs	r3, #3
 80094a2:	73fb      	strb	r3, [r7, #15]
    }
  }
#endif /* USE_USBD_COMPOSITE */

  /* Open EP0 OUT */
  (void)USBD_LL_OpenEP(pdev, 0x00U, USBD_EP_TYPE_CTRL, USB_MAX_EP0_SIZE);
 80094a4:	2340      	movs	r3, #64	; 0x40
 80094a6:	2200      	movs	r2, #0
 80094a8:	2100      	movs	r1, #0
 80094aa:	6878      	ldr	r0, [r7, #4]
 80094ac:	f008 fbab 	bl	8011c06 <USBD_LL_OpenEP>
  pdev->ep_out[0x00U & 0xFU].is_used = 1U;
 80094b0:	687b      	ldr	r3, [r7, #4]
 80094b2:	2201      	movs	r2, #1
 80094b4:	f8a3 2164 	strh.w	r2, [r3, #356]	; 0x164

  pdev->ep_out[0].maxpacket = USB_MAX_EP0_SIZE;
 80094b8:	687b      	ldr	r3, [r7, #4]
 80094ba:	2240      	movs	r2, #64	; 0x40
 80094bc:	f8c3 2160 	str.w	r2, [r3, #352]	; 0x160

  /* Open EP0 IN */
  (void)USBD_LL_OpenEP(pdev, 0x80U, USBD_EP_TYPE_CTRL, USB_MAX_EP0_SIZE);
 80094c0:	2340      	movs	r3, #64	; 0x40
 80094c2:	2200      	movs	r2, #0
 80094c4:	2180      	movs	r1, #128	; 0x80
 80094c6:	6878      	ldr	r0, [r7, #4]
 80094c8:	f008 fb9d 	bl	8011c06 <USBD_LL_OpenEP>
  pdev->ep_in[0x80U & 0xFU].is_used = 1U;
 80094cc:	687b      	ldr	r3, [r7, #4]
 80094ce:	2201      	movs	r2, #1
 80094d0:	849a      	strh	r2, [r3, #36]	; 0x24

  pdev->ep_in[0].maxpacket = USB_MAX_EP0_SIZE;
 80094d2:	687b      	ldr	r3, [r7, #4]
 80094d4:	2240      	movs	r2, #64	; 0x40
 80094d6:	621a      	str	r2, [r3, #32]

  return ret;
 80094d8:	7bfb      	ldrb	r3, [r7, #15]
}
 80094da:	4618      	mov	r0, r3
 80094dc:	3710      	adds	r7, #16
 80094de:	46bd      	mov	sp, r7
 80094e0:	bd80      	pop	{r7, pc}

080094e2 <USBD_LL_SetSpeed>:
  * @param  pdev: device instance
  * @retval status
  */
USBD_StatusTypeDef USBD_LL_SetSpeed(USBD_HandleTypeDef *pdev,
                                    USBD_SpeedTypeDef speed)
{
 80094e2:	b480      	push	{r7}
 80094e4:	b083      	sub	sp, #12
 80094e6:	af00      	add	r7, sp, #0
 80094e8:	6078      	str	r0, [r7, #4]
 80094ea:	460b      	mov	r3, r1
 80094ec:	70fb      	strb	r3, [r7, #3]
  pdev->dev_speed = speed;
 80094ee:	687b      	ldr	r3, [r7, #4]
 80094f0:	78fa      	ldrb	r2, [r7, #3]
 80094f2:	741a      	strb	r2, [r3, #16]

  return USBD_OK;
 80094f4:	2300      	movs	r3, #0
}
 80094f6:	4618      	mov	r0, r3
 80094f8:	370c      	adds	r7, #12
 80094fa:	46bd      	mov	sp, r7
 80094fc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009500:	4770      	bx	lr

08009502 <USBD_LL_Suspend>:
  * @param  pdev: device instance
  * @retval status
  */

USBD_StatusTypeDef USBD_LL_Suspend(USBD_HandleTypeDef *pdev)
{
 8009502:	b480      	push	{r7}
 8009504:	b083      	sub	sp, #12
 8009506:	af00      	add	r7, sp, #0
 8009508:	6078      	str	r0, [r7, #4]
  if (pdev->dev_state != USBD_STATE_SUSPENDED)
 800950a:	687b      	ldr	r3, [r7, #4]
 800950c:	f893 329c 	ldrb.w	r3, [r3, #668]	; 0x29c
 8009510:	b2db      	uxtb	r3, r3
 8009512:	2b04      	cmp	r3, #4
 8009514:	d006      	beq.n	8009524 <USBD_LL_Suspend+0x22>
  {
    pdev->dev_old_state = pdev->dev_state;
 8009516:	687b      	ldr	r3, [r7, #4]
 8009518:	f893 329c 	ldrb.w	r3, [r3, #668]	; 0x29c
 800951c:	b2da      	uxtb	r2, r3
 800951e:	687b      	ldr	r3, [r7, #4]
 8009520:	f883 229d 	strb.w	r2, [r3, #669]	; 0x29d
  }

  pdev->dev_state = USBD_STATE_SUSPENDED;
 8009524:	687b      	ldr	r3, [r7, #4]
 8009526:	2204      	movs	r2, #4
 8009528:	f883 229c 	strb.w	r2, [r3, #668]	; 0x29c

  return USBD_OK;
 800952c:	2300      	movs	r3, #0
}
 800952e:	4618      	mov	r0, r3
 8009530:	370c      	adds	r7, #12
 8009532:	46bd      	mov	sp, r7
 8009534:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009538:	4770      	bx	lr

0800953a <USBD_LL_Resume>:
  * @param  pdev: device instance
  * @retval status
  */

USBD_StatusTypeDef USBD_LL_Resume(USBD_HandleTypeDef *pdev)
{
 800953a:	b480      	push	{r7}
 800953c:	b083      	sub	sp, #12
 800953e:	af00      	add	r7, sp, #0
 8009540:	6078      	str	r0, [r7, #4]
  if (pdev->dev_state == USBD_STATE_SUSPENDED)
 8009542:	687b      	ldr	r3, [r7, #4]
 8009544:	f893 329c 	ldrb.w	r3, [r3, #668]	; 0x29c
 8009548:	b2db      	uxtb	r3, r3
 800954a:	2b04      	cmp	r3, #4
 800954c:	d106      	bne.n	800955c <USBD_LL_Resume+0x22>
  {
    pdev->dev_state = pdev->dev_old_state;
 800954e:	687b      	ldr	r3, [r7, #4]
 8009550:	f893 329d 	ldrb.w	r3, [r3, #669]	; 0x29d
 8009554:	b2da      	uxtb	r2, r3
 8009556:	687b      	ldr	r3, [r7, #4]
 8009558:	f883 229c 	strb.w	r2, [r3, #668]	; 0x29c
  }

  return USBD_OK;
 800955c:	2300      	movs	r3, #0
}
 800955e:	4618      	mov	r0, r3
 8009560:	370c      	adds	r7, #12
 8009562:	46bd      	mov	sp, r7
 8009564:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009568:	4770      	bx	lr

0800956a <USBD_LL_SOF>:
  * @param  pdev: device instance
  * @retval status
  */

USBD_StatusTypeDef USBD_LL_SOF(USBD_HandleTypeDef *pdev)
{
 800956a:	b580      	push	{r7, lr}
 800956c:	b082      	sub	sp, #8
 800956e:	af00      	add	r7, sp, #0
 8009570:	6078      	str	r0, [r7, #4]
  /* The SOF event can be distributed for all classes that support it */
  if (pdev->dev_state == USBD_STATE_CONFIGURED)
 8009572:	687b      	ldr	r3, [r7, #4]
 8009574:	f893 329c 	ldrb.w	r3, [r3, #668]	; 0x29c
 8009578:	b2db      	uxtb	r3, r3
 800957a:	2b03      	cmp	r3, #3
 800957c:	d110      	bne.n	80095a0 <USBD_LL_SOF+0x36>
          }
        }
      }
    }
#else
    if (pdev->pClass[0] != NULL)
 800957e:	687b      	ldr	r3, [r7, #4]
 8009580:	f8d3 32b8 	ldr.w	r3, [r3, #696]	; 0x2b8
 8009584:	2b00      	cmp	r3, #0
 8009586:	d00b      	beq.n	80095a0 <USBD_LL_SOF+0x36>
    {
      if (pdev->pClass[0]->SOF != NULL)
 8009588:	687b      	ldr	r3, [r7, #4]
 800958a:	f8d3 32b8 	ldr.w	r3, [r3, #696]	; 0x2b8
 800958e:	69db      	ldr	r3, [r3, #28]
 8009590:	2b00      	cmp	r3, #0
 8009592:	d005      	beq.n	80095a0 <USBD_LL_SOF+0x36>
      {
        (void)pdev->pClass[0]->SOF(pdev);
 8009594:	687b      	ldr	r3, [r7, #4]
 8009596:	f8d3 32b8 	ldr.w	r3, [r3, #696]	; 0x2b8
 800959a:	69db      	ldr	r3, [r3, #28]
 800959c:	6878      	ldr	r0, [r7, #4]
 800959e:	4798      	blx	r3
      }
    }
#endif /* USE_USBD_COMPOSITE */
  }

  return USBD_OK;
 80095a0:	2300      	movs	r3, #0
}
 80095a2:	4618      	mov	r0, r3
 80095a4:	3708      	adds	r7, #8
 80095a6:	46bd      	mov	sp, r7
 80095a8:	bd80      	pop	{r7, pc}

080095aa <USBD_LL_IsoINIncomplete>:
  * @param  pdev: device instance
  * @retval status
  */
USBD_StatusTypeDef USBD_LL_IsoINIncomplete(USBD_HandleTypeDef *pdev,
                                           uint8_t epnum)
{
 80095aa:	b580      	push	{r7, lr}
 80095ac:	b082      	sub	sp, #8
 80095ae:	af00      	add	r7, sp, #0
 80095b0:	6078      	str	r0, [r7, #4]
 80095b2:	460b      	mov	r3, r1
 80095b4:	70fb      	strb	r3, [r7, #3]
  if (pdev->pClass[pdev->classId] == NULL)
 80095b6:	687b      	ldr	r3, [r7, #4]
 80095b8:	f8d3 22d4 	ldr.w	r2, [r3, #724]	; 0x2d4
 80095bc:	687b      	ldr	r3, [r7, #4]
 80095be:	32ae      	adds	r2, #174	; 0xae
 80095c0:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 80095c4:	2b00      	cmp	r3, #0
 80095c6:	d101      	bne.n	80095cc <USBD_LL_IsoINIncomplete+0x22>
  {
    return USBD_FAIL;
 80095c8:	2303      	movs	r3, #3
 80095ca:	e01c      	b.n	8009606 <USBD_LL_IsoINIncomplete+0x5c>
  }

  if (pdev->dev_state == USBD_STATE_CONFIGURED)
 80095cc:	687b      	ldr	r3, [r7, #4]
 80095ce:	f893 329c 	ldrb.w	r3, [r3, #668]	; 0x29c
 80095d2:	b2db      	uxtb	r3, r3
 80095d4:	2b03      	cmp	r3, #3
 80095d6:	d115      	bne.n	8009604 <USBD_LL_IsoINIncomplete+0x5a>
  {
    if (pdev->pClass[pdev->classId]->IsoINIncomplete != NULL)
 80095d8:	687b      	ldr	r3, [r7, #4]
 80095da:	f8d3 22d4 	ldr.w	r2, [r3, #724]	; 0x2d4
 80095de:	687b      	ldr	r3, [r7, #4]
 80095e0:	32ae      	adds	r2, #174	; 0xae
 80095e2:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 80095e6:	6a1b      	ldr	r3, [r3, #32]
 80095e8:	2b00      	cmp	r3, #0
 80095ea:	d00b      	beq.n	8009604 <USBD_LL_IsoINIncomplete+0x5a>
    {
      (void)pdev->pClass[pdev->classId]->IsoINIncomplete(pdev, epnum);
 80095ec:	687b      	ldr	r3, [r7, #4]
 80095ee:	f8d3 22d4 	ldr.w	r2, [r3, #724]	; 0x2d4
 80095f2:	687b      	ldr	r3, [r7, #4]
 80095f4:	32ae      	adds	r2, #174	; 0xae
 80095f6:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 80095fa:	6a1b      	ldr	r3, [r3, #32]
 80095fc:	78fa      	ldrb	r2, [r7, #3]
 80095fe:	4611      	mov	r1, r2
 8009600:	6878      	ldr	r0, [r7, #4]
 8009602:	4798      	blx	r3
    }
  }

  return USBD_OK;
 8009604:	2300      	movs	r3, #0
}
 8009606:	4618      	mov	r0, r3
 8009608:	3708      	adds	r7, #8
 800960a:	46bd      	mov	sp, r7
 800960c:	bd80      	pop	{r7, pc}

0800960e <USBD_LL_IsoOUTIncomplete>:
  * @param  pdev: device instance
  * @retval status
  */
USBD_StatusTypeDef USBD_LL_IsoOUTIncomplete(USBD_HandleTypeDef *pdev,
                                            uint8_t epnum)
{
 800960e:	b580      	push	{r7, lr}
 8009610:	b082      	sub	sp, #8
 8009612:	af00      	add	r7, sp, #0
 8009614:	6078      	str	r0, [r7, #4]
 8009616:	460b      	mov	r3, r1
 8009618:	70fb      	strb	r3, [r7, #3]
  if (pdev->pClass[pdev->classId] == NULL)
 800961a:	687b      	ldr	r3, [r7, #4]
 800961c:	f8d3 22d4 	ldr.w	r2, [r3, #724]	; 0x2d4
 8009620:	687b      	ldr	r3, [r7, #4]
 8009622:	32ae      	adds	r2, #174	; 0xae
 8009624:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8009628:	2b00      	cmp	r3, #0
 800962a:	d101      	bne.n	8009630 <USBD_LL_IsoOUTIncomplete+0x22>
  {
    return USBD_FAIL;
 800962c:	2303      	movs	r3, #3
 800962e:	e01c      	b.n	800966a <USBD_LL_IsoOUTIncomplete+0x5c>
  }

  if (pdev->dev_state == USBD_STATE_CONFIGURED)
 8009630:	687b      	ldr	r3, [r7, #4]
 8009632:	f893 329c 	ldrb.w	r3, [r3, #668]	; 0x29c
 8009636:	b2db      	uxtb	r3, r3
 8009638:	2b03      	cmp	r3, #3
 800963a:	d115      	bne.n	8009668 <USBD_LL_IsoOUTIncomplete+0x5a>
  {
    if (pdev->pClass[pdev->classId]->IsoOUTIncomplete != NULL)
 800963c:	687b      	ldr	r3, [r7, #4]
 800963e:	f8d3 22d4 	ldr.w	r2, [r3, #724]	; 0x2d4
 8009642:	687b      	ldr	r3, [r7, #4]
 8009644:	32ae      	adds	r2, #174	; 0xae
 8009646:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 800964a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800964c:	2b00      	cmp	r3, #0
 800964e:	d00b      	beq.n	8009668 <USBD_LL_IsoOUTIncomplete+0x5a>
    {
      (void)pdev->pClass[pdev->classId]->IsoOUTIncomplete(pdev, epnum);
 8009650:	687b      	ldr	r3, [r7, #4]
 8009652:	f8d3 22d4 	ldr.w	r2, [r3, #724]	; 0x2d4
 8009656:	687b      	ldr	r3, [r7, #4]
 8009658:	32ae      	adds	r2, #174	; 0xae
 800965a:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 800965e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8009660:	78fa      	ldrb	r2, [r7, #3]
 8009662:	4611      	mov	r1, r2
 8009664:	6878      	ldr	r0, [r7, #4]
 8009666:	4798      	blx	r3
    }
  }

  return USBD_OK;
 8009668:	2300      	movs	r3, #0
}
 800966a:	4618      	mov	r0, r3
 800966c:	3708      	adds	r7, #8
 800966e:	46bd      	mov	sp, r7
 8009670:	bd80      	pop	{r7, pc}

08009672 <USBD_LL_DevConnected>:
  *         Handle device connection event
  * @param  pdev: device instance
  * @retval status
  */
USBD_StatusTypeDef USBD_LL_DevConnected(USBD_HandleTypeDef *pdev)
{
 8009672:	b480      	push	{r7}
 8009674:	b083      	sub	sp, #12
 8009676:	af00      	add	r7, sp, #0
 8009678:	6078      	str	r0, [r7, #4]
  /* Prevent unused argument compilation warning */
  UNUSED(pdev);

  return USBD_OK;
 800967a:	2300      	movs	r3, #0
}
 800967c:	4618      	mov	r0, r3
 800967e:	370c      	adds	r7, #12
 8009680:	46bd      	mov	sp, r7
 8009682:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009686:	4770      	bx	lr

08009688 <USBD_LL_DevDisconnected>:
  *         Handle device disconnection event
  * @param  pdev: device instance
  * @retval status
  */
USBD_StatusTypeDef USBD_LL_DevDisconnected(USBD_HandleTypeDef *pdev)
{
 8009688:	b580      	push	{r7, lr}
 800968a:	b084      	sub	sp, #16
 800968c:	af00      	add	r7, sp, #0
 800968e:	6078      	str	r0, [r7, #4]
  USBD_StatusTypeDef   ret = USBD_OK;
 8009690:	2300      	movs	r3, #0
 8009692:	73fb      	strb	r3, [r7, #15]

  /* Free Class Resources */
  pdev->dev_state = USBD_STATE_DEFAULT;
 8009694:	687b      	ldr	r3, [r7, #4]
 8009696:	2201      	movs	r2, #1
 8009698:	f883 229c 	strb.w	r2, [r3, #668]	; 0x29c
        }
      }
    }
  }
#else
  if (pdev->pClass[0] != NULL)
 800969c:	687b      	ldr	r3, [r7, #4]
 800969e:	f8d3 32b8 	ldr.w	r3, [r3, #696]	; 0x2b8
 80096a2:	2b00      	cmp	r3, #0
 80096a4:	d00e      	beq.n	80096c4 <USBD_LL_DevDisconnected+0x3c>
  {
    if (pdev->pClass[0]->DeInit(pdev, (uint8_t)pdev->dev_config) != 0U)
 80096a6:	687b      	ldr	r3, [r7, #4]
 80096a8:	f8d3 32b8 	ldr.w	r3, [r3, #696]	; 0x2b8
 80096ac:	685b      	ldr	r3, [r3, #4]
 80096ae:	687a      	ldr	r2, [r7, #4]
 80096b0:	6852      	ldr	r2, [r2, #4]
 80096b2:	b2d2      	uxtb	r2, r2
 80096b4:	4611      	mov	r1, r2
 80096b6:	6878      	ldr	r0, [r7, #4]
 80096b8:	4798      	blx	r3
 80096ba:	4603      	mov	r3, r0
 80096bc:	2b00      	cmp	r3, #0
 80096be:	d001      	beq.n	80096c4 <USBD_LL_DevDisconnected+0x3c>
    {
      ret = USBD_FAIL;
 80096c0:	2303      	movs	r3, #3
 80096c2:	73fb      	strb	r3, [r7, #15]
    }
  }
#endif /* USE_USBD_COMPOSITE */

  return ret;
 80096c4:	7bfb      	ldrb	r3, [r7, #15]
}
 80096c6:	4618      	mov	r0, r3
 80096c8:	3710      	adds	r7, #16
 80096ca:	46bd      	mov	sp, r7
 80096cc:	bd80      	pop	{r7, pc}

080096ce <USBD_CoreFindIF>:
  * @param  pdev: device instance
  * @param  index : selected interface number
  * @retval index of the class using the selected interface number. OxFF if no class found.
  */
uint8_t USBD_CoreFindIF(USBD_HandleTypeDef *pdev, uint8_t index)
{
 80096ce:	b480      	push	{r7}
 80096d0:	b083      	sub	sp, #12
 80096d2:	af00      	add	r7, sp, #0
 80096d4:	6078      	str	r0, [r7, #4]
 80096d6:	460b      	mov	r3, r1
 80096d8:	70fb      	strb	r3, [r7, #3]
  return 0xFFU;
#else
  UNUSED(pdev);
  UNUSED(index);

  return 0x00U;
 80096da:	2300      	movs	r3, #0
#endif /* USE_USBD_COMPOSITE */
}
 80096dc:	4618      	mov	r0, r3
 80096de:	370c      	adds	r7, #12
 80096e0:	46bd      	mov	sp, r7
 80096e2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80096e6:	4770      	bx	lr

080096e8 <USBD_CoreFindEP>:
  * @param  pdev: device instance
  * @param  index : selected endpoint number
  * @retval index of the class using the selected endpoint number. 0xFF if no class found.
  */
uint8_t USBD_CoreFindEP(USBD_HandleTypeDef *pdev, uint8_t index)
{
 80096e8:	b480      	push	{r7}
 80096ea:	b083      	sub	sp, #12
 80096ec:	af00      	add	r7, sp, #0
 80096ee:	6078      	str	r0, [r7, #4]
 80096f0:	460b      	mov	r3, r1
 80096f2:	70fb      	strb	r3, [r7, #3]
  return 0xFFU;
#else
  UNUSED(pdev);
  UNUSED(index);

  return 0x00U;
 80096f4:	2300      	movs	r3, #0
#endif /* USE_USBD_COMPOSITE */
}
 80096f6:	4618      	mov	r0, r3
 80096f8:	370c      	adds	r7, #12
 80096fa:	46bd      	mov	sp, r7
 80096fc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009700:	4770      	bx	lr

08009702 <USBD_GetEpDesc>:
  * @param  pConfDesc:  pointer to Bos descriptor
  * @param  EpAddr:  endpoint address
  * @retval pointer to video endpoint descriptor
  */
void *USBD_GetEpDesc(uint8_t *pConfDesc, uint8_t EpAddr)
{
 8009702:	b580      	push	{r7, lr}
 8009704:	b086      	sub	sp, #24
 8009706:	af00      	add	r7, sp, #0
 8009708:	6078      	str	r0, [r7, #4]
 800970a:	460b      	mov	r3, r1
 800970c:	70fb      	strb	r3, [r7, #3]
  USBD_DescHeaderTypeDef *pdesc = (USBD_DescHeaderTypeDef *)(void *)pConfDesc;
 800970e:	687b      	ldr	r3, [r7, #4]
 8009710:	617b      	str	r3, [r7, #20]
  USBD_ConfigDescTypeDef *desc = (USBD_ConfigDescTypeDef *)(void *)pConfDesc;
 8009712:	687b      	ldr	r3, [r7, #4]
 8009714:	60fb      	str	r3, [r7, #12]
  USBD_EpDescTypeDef *pEpDesc = NULL;
 8009716:	2300      	movs	r3, #0
 8009718:	613b      	str	r3, [r7, #16]
  uint16_t ptr;

  if (desc->wTotalLength > desc->bLength)
 800971a:	68fb      	ldr	r3, [r7, #12]
 800971c:	885b      	ldrh	r3, [r3, #2]
 800971e:	b29a      	uxth	r2, r3
 8009720:	68fb      	ldr	r3, [r7, #12]
 8009722:	781b      	ldrb	r3, [r3, #0]
 8009724:	b29b      	uxth	r3, r3
 8009726:	429a      	cmp	r2, r3
 8009728:	d920      	bls.n	800976c <USBD_GetEpDesc+0x6a>
  {
    ptr = desc->bLength;
 800972a:	68fb      	ldr	r3, [r7, #12]
 800972c:	781b      	ldrb	r3, [r3, #0]
 800972e:	b29b      	uxth	r3, r3
 8009730:	817b      	strh	r3, [r7, #10]

    while (ptr < desc->wTotalLength)
 8009732:	e013      	b.n	800975c <USBD_GetEpDesc+0x5a>
    {
      pdesc = USBD_GetNextDesc((uint8_t *)pdesc, &ptr);
 8009734:	f107 030a 	add.w	r3, r7, #10
 8009738:	4619      	mov	r1, r3
 800973a:	6978      	ldr	r0, [r7, #20]
 800973c:	f000 f81b 	bl	8009776 <USBD_GetNextDesc>
 8009740:	6178      	str	r0, [r7, #20]

      if (pdesc->bDescriptorType == USB_DESC_TYPE_ENDPOINT)
 8009742:	697b      	ldr	r3, [r7, #20]
 8009744:	785b      	ldrb	r3, [r3, #1]
 8009746:	2b05      	cmp	r3, #5
 8009748:	d108      	bne.n	800975c <USBD_GetEpDesc+0x5a>
      {
        pEpDesc = (USBD_EpDescTypeDef *)(void *)pdesc;
 800974a:	697b      	ldr	r3, [r7, #20]
 800974c:	613b      	str	r3, [r7, #16]

        if (pEpDesc->bEndpointAddress == EpAddr)
 800974e:	693b      	ldr	r3, [r7, #16]
 8009750:	789b      	ldrb	r3, [r3, #2]
 8009752:	78fa      	ldrb	r2, [r7, #3]
 8009754:	429a      	cmp	r2, r3
 8009756:	d008      	beq.n	800976a <USBD_GetEpDesc+0x68>
        {
          break;
        }
        else
        {
          pEpDesc = NULL;
 8009758:	2300      	movs	r3, #0
 800975a:	613b      	str	r3, [r7, #16]
    while (ptr < desc->wTotalLength)
 800975c:	68fb      	ldr	r3, [r7, #12]
 800975e:	885b      	ldrh	r3, [r3, #2]
 8009760:	b29a      	uxth	r2, r3
 8009762:	897b      	ldrh	r3, [r7, #10]
 8009764:	429a      	cmp	r2, r3
 8009766:	d8e5      	bhi.n	8009734 <USBD_GetEpDesc+0x32>
 8009768:	e000      	b.n	800976c <USBD_GetEpDesc+0x6a>
          break;
 800976a:	bf00      	nop
        }
      }
    }
  }

  return (void *)pEpDesc;
 800976c:	693b      	ldr	r3, [r7, #16]
}
 800976e:	4618      	mov	r0, r3
 8009770:	3718      	adds	r7, #24
 8009772:	46bd      	mov	sp, r7
 8009774:	bd80      	pop	{r7, pc}

08009776 <USBD_GetNextDesc>:
  * @param  buf: Buffer where the descriptor is available
  * @param  ptr: data pointer inside the descriptor
  * @retval next header
  */
USBD_DescHeaderTypeDef *USBD_GetNextDesc(uint8_t *pbuf, uint16_t *ptr)
{
 8009776:	b480      	push	{r7}
 8009778:	b085      	sub	sp, #20
 800977a:	af00      	add	r7, sp, #0
 800977c:	6078      	str	r0, [r7, #4]
 800977e:	6039      	str	r1, [r7, #0]
  USBD_DescHeaderTypeDef *pnext = (USBD_DescHeaderTypeDef *)(void *)pbuf;
 8009780:	687b      	ldr	r3, [r7, #4]
 8009782:	60fb      	str	r3, [r7, #12]

  *ptr += pnext->bLength;
 8009784:	683b      	ldr	r3, [r7, #0]
 8009786:	881a      	ldrh	r2, [r3, #0]
 8009788:	68fb      	ldr	r3, [r7, #12]
 800978a:	781b      	ldrb	r3, [r3, #0]
 800978c:	b29b      	uxth	r3, r3
 800978e:	4413      	add	r3, r2
 8009790:	b29a      	uxth	r2, r3
 8009792:	683b      	ldr	r3, [r7, #0]
 8009794:	801a      	strh	r2, [r3, #0]
  pnext = (USBD_DescHeaderTypeDef *)(void *)(pbuf + pnext->bLength);
 8009796:	68fb      	ldr	r3, [r7, #12]
 8009798:	781b      	ldrb	r3, [r3, #0]
 800979a:	461a      	mov	r2, r3
 800979c:	687b      	ldr	r3, [r7, #4]
 800979e:	4413      	add	r3, r2
 80097a0:	60fb      	str	r3, [r7, #12]

  return (pnext);
 80097a2:	68fb      	ldr	r3, [r7, #12]
}
 80097a4:	4618      	mov	r0, r3
 80097a6:	3714      	adds	r7, #20
 80097a8:	46bd      	mov	sp, r7
 80097aa:	f85d 7b04 	ldr.w	r7, [sp], #4
 80097ae:	4770      	bx	lr

080097b0 <SWAPBYTE>:

/** @defgroup USBD_DEF_Exported_Macros
  * @{
  */
__STATIC_INLINE uint16_t SWAPBYTE(uint8_t *addr)
{
 80097b0:	b480      	push	{r7}
 80097b2:	b087      	sub	sp, #28
 80097b4:	af00      	add	r7, sp, #0
 80097b6:	6078      	str	r0, [r7, #4]
  uint16_t _SwapVal;
  uint16_t _Byte1;
  uint16_t _Byte2;
  uint8_t *_pbuff = addr;
 80097b8:	687b      	ldr	r3, [r7, #4]
 80097ba:	617b      	str	r3, [r7, #20]

  _Byte1 = *(uint8_t *)_pbuff;
 80097bc:	697b      	ldr	r3, [r7, #20]
 80097be:	781b      	ldrb	r3, [r3, #0]
 80097c0:	827b      	strh	r3, [r7, #18]
  _pbuff++;
 80097c2:	697b      	ldr	r3, [r7, #20]
 80097c4:	3301      	adds	r3, #1
 80097c6:	617b      	str	r3, [r7, #20]
  _Byte2 = *(uint8_t *)_pbuff;
 80097c8:	697b      	ldr	r3, [r7, #20]
 80097ca:	781b      	ldrb	r3, [r3, #0]
 80097cc:	823b      	strh	r3, [r7, #16]

  _SwapVal = (_Byte2 << 8) | _Byte1;
 80097ce:	8a3b      	ldrh	r3, [r7, #16]
 80097d0:	021b      	lsls	r3, r3, #8
 80097d2:	b21a      	sxth	r2, r3
 80097d4:	f9b7 3012 	ldrsh.w	r3, [r7, #18]
 80097d8:	4313      	orrs	r3, r2
 80097da:	b21b      	sxth	r3, r3
 80097dc:	81fb      	strh	r3, [r7, #14]

  return _SwapVal;
 80097de:	89fb      	ldrh	r3, [r7, #14]
}
 80097e0:	4618      	mov	r0, r3
 80097e2:	371c      	adds	r7, #28
 80097e4:	46bd      	mov	sp, r7
 80097e6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80097ea:	4770      	bx	lr

080097ec <USBD_StdDevReq>:
  * @param  pdev: device instance
  * @param  req: usb request
  * @retval status
  */
USBD_StatusTypeDef USBD_StdDevReq(USBD_HandleTypeDef *pdev, USBD_SetupReqTypedef *req)
{
 80097ec:	b580      	push	{r7, lr}
 80097ee:	b084      	sub	sp, #16
 80097f0:	af00      	add	r7, sp, #0
 80097f2:	6078      	str	r0, [r7, #4]
 80097f4:	6039      	str	r1, [r7, #0]
  USBD_StatusTypeDef ret = USBD_OK;
 80097f6:	2300      	movs	r3, #0
 80097f8:	73fb      	strb	r3, [r7, #15]

  switch (req->bmRequest & USB_REQ_TYPE_MASK)
 80097fa:	683b      	ldr	r3, [r7, #0]
 80097fc:	781b      	ldrb	r3, [r3, #0]
 80097fe:	f003 0360 	and.w	r3, r3, #96	; 0x60
 8009802:	2b40      	cmp	r3, #64	; 0x40
 8009804:	d005      	beq.n	8009812 <USBD_StdDevReq+0x26>
 8009806:	2b40      	cmp	r3, #64	; 0x40
 8009808:	d857      	bhi.n	80098ba <USBD_StdDevReq+0xce>
 800980a:	2b00      	cmp	r3, #0
 800980c:	d00f      	beq.n	800982e <USBD_StdDevReq+0x42>
 800980e:	2b20      	cmp	r3, #32
 8009810:	d153      	bne.n	80098ba <USBD_StdDevReq+0xce>
  {
    case USB_REQ_TYPE_CLASS:
    case USB_REQ_TYPE_VENDOR:
      ret = (USBD_StatusTypeDef)pdev->pClass[pdev->classId]->Setup(pdev, req);
 8009812:	687b      	ldr	r3, [r7, #4]
 8009814:	f8d3 22d4 	ldr.w	r2, [r3, #724]	; 0x2d4
 8009818:	687b      	ldr	r3, [r7, #4]
 800981a:	32ae      	adds	r2, #174	; 0xae
 800981c:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8009820:	689b      	ldr	r3, [r3, #8]
 8009822:	6839      	ldr	r1, [r7, #0]
 8009824:	6878      	ldr	r0, [r7, #4]
 8009826:	4798      	blx	r3
 8009828:	4603      	mov	r3, r0
 800982a:	73fb      	strb	r3, [r7, #15]
      break;
 800982c:	e04a      	b.n	80098c4 <USBD_StdDevReq+0xd8>

    case USB_REQ_TYPE_STANDARD:
      switch (req->bRequest)
 800982e:	683b      	ldr	r3, [r7, #0]
 8009830:	785b      	ldrb	r3, [r3, #1]
 8009832:	2b09      	cmp	r3, #9
 8009834:	d83b      	bhi.n	80098ae <USBD_StdDevReq+0xc2>
 8009836:	a201      	add	r2, pc, #4	; (adr r2, 800983c <USBD_StdDevReq+0x50>)
 8009838:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800983c:	08009891 	.word	0x08009891
 8009840:	080098a5 	.word	0x080098a5
 8009844:	080098af 	.word	0x080098af
 8009848:	0800989b 	.word	0x0800989b
 800984c:	080098af 	.word	0x080098af
 8009850:	0800986f 	.word	0x0800986f
 8009854:	08009865 	.word	0x08009865
 8009858:	080098af 	.word	0x080098af
 800985c:	08009887 	.word	0x08009887
 8009860:	08009879 	.word	0x08009879
      {
        case USB_REQ_GET_DESCRIPTOR:
          USBD_GetDescriptor(pdev, req);
 8009864:	6839      	ldr	r1, [r7, #0]
 8009866:	6878      	ldr	r0, [r7, #4]
 8009868:	f000 fa3c 	bl	8009ce4 <USBD_GetDescriptor>
          break;
 800986c:	e024      	b.n	80098b8 <USBD_StdDevReq+0xcc>

        case USB_REQ_SET_ADDRESS:
          USBD_SetAddress(pdev, req);
 800986e:	6839      	ldr	r1, [r7, #0]
 8009870:	6878      	ldr	r0, [r7, #4]
 8009872:	f000 fba1 	bl	8009fb8 <USBD_SetAddress>
          break;
 8009876:	e01f      	b.n	80098b8 <USBD_StdDevReq+0xcc>

        case USB_REQ_SET_CONFIGURATION:
          ret = USBD_SetConfig(pdev, req);
 8009878:	6839      	ldr	r1, [r7, #0]
 800987a:	6878      	ldr	r0, [r7, #4]
 800987c:	f000 fbe0 	bl	800a040 <USBD_SetConfig>
 8009880:	4603      	mov	r3, r0
 8009882:	73fb      	strb	r3, [r7, #15]
          break;
 8009884:	e018      	b.n	80098b8 <USBD_StdDevReq+0xcc>

        case USB_REQ_GET_CONFIGURATION:
          USBD_GetConfig(pdev, req);
 8009886:	6839      	ldr	r1, [r7, #0]
 8009888:	6878      	ldr	r0, [r7, #4]
 800988a:	f000 fc83 	bl	800a194 <USBD_GetConfig>
          break;
 800988e:	e013      	b.n	80098b8 <USBD_StdDevReq+0xcc>

        case USB_REQ_GET_STATUS:
          USBD_GetStatus(pdev, req);
 8009890:	6839      	ldr	r1, [r7, #0]
 8009892:	6878      	ldr	r0, [r7, #4]
 8009894:	f000 fcb4 	bl	800a200 <USBD_GetStatus>
          break;
 8009898:	e00e      	b.n	80098b8 <USBD_StdDevReq+0xcc>

        case USB_REQ_SET_FEATURE:
          USBD_SetFeature(pdev, req);
 800989a:	6839      	ldr	r1, [r7, #0]
 800989c:	6878      	ldr	r0, [r7, #4]
 800989e:	f000 fce3 	bl	800a268 <USBD_SetFeature>
          break;
 80098a2:	e009      	b.n	80098b8 <USBD_StdDevReq+0xcc>

        case USB_REQ_CLEAR_FEATURE:
          USBD_ClrFeature(pdev, req);
 80098a4:	6839      	ldr	r1, [r7, #0]
 80098a6:	6878      	ldr	r0, [r7, #4]
 80098a8:	f000 fd07 	bl	800a2ba <USBD_ClrFeature>
          break;
 80098ac:	e004      	b.n	80098b8 <USBD_StdDevReq+0xcc>

        default:
          USBD_CtlError(pdev, req);
 80098ae:	6839      	ldr	r1, [r7, #0]
 80098b0:	6878      	ldr	r0, [r7, #4]
 80098b2:	f000 fd5e 	bl	800a372 <USBD_CtlError>
          break;
 80098b6:	bf00      	nop
      }
      break;
 80098b8:	e004      	b.n	80098c4 <USBD_StdDevReq+0xd8>

    default:
      USBD_CtlError(pdev, req);
 80098ba:	6839      	ldr	r1, [r7, #0]
 80098bc:	6878      	ldr	r0, [r7, #4]
 80098be:	f000 fd58 	bl	800a372 <USBD_CtlError>
      break;
 80098c2:	bf00      	nop
  }

  return ret;
 80098c4:	7bfb      	ldrb	r3, [r7, #15]
}
 80098c6:	4618      	mov	r0, r3
 80098c8:	3710      	adds	r7, #16
 80098ca:	46bd      	mov	sp, r7
 80098cc:	bd80      	pop	{r7, pc}
 80098ce:	bf00      	nop

080098d0 <USBD_StdItfReq>:
  * @param  pdev: device instance
  * @param  req: usb request
  * @retval status
  */
USBD_StatusTypeDef USBD_StdItfReq(USBD_HandleTypeDef *pdev, USBD_SetupReqTypedef *req)
{
 80098d0:	b580      	push	{r7, lr}
 80098d2:	b084      	sub	sp, #16
 80098d4:	af00      	add	r7, sp, #0
 80098d6:	6078      	str	r0, [r7, #4]
 80098d8:	6039      	str	r1, [r7, #0]
  USBD_StatusTypeDef ret = USBD_OK;
 80098da:	2300      	movs	r3, #0
 80098dc:	73fb      	strb	r3, [r7, #15]
  uint8_t idx;

  switch (req->bmRequest & USB_REQ_TYPE_MASK)
 80098de:	683b      	ldr	r3, [r7, #0]
 80098e0:	781b      	ldrb	r3, [r3, #0]
 80098e2:	f003 0360 	and.w	r3, r3, #96	; 0x60
 80098e6:	2b40      	cmp	r3, #64	; 0x40
 80098e8:	d005      	beq.n	80098f6 <USBD_StdItfReq+0x26>
 80098ea:	2b40      	cmp	r3, #64	; 0x40
 80098ec:	d852      	bhi.n	8009994 <USBD_StdItfReq+0xc4>
 80098ee:	2b00      	cmp	r3, #0
 80098f0:	d001      	beq.n	80098f6 <USBD_StdItfReq+0x26>
 80098f2:	2b20      	cmp	r3, #32
 80098f4:	d14e      	bne.n	8009994 <USBD_StdItfReq+0xc4>
  {
    case USB_REQ_TYPE_CLASS:
    case USB_REQ_TYPE_VENDOR:
    case USB_REQ_TYPE_STANDARD:
      switch (pdev->dev_state)
 80098f6:	687b      	ldr	r3, [r7, #4]
 80098f8:	f893 329c 	ldrb.w	r3, [r3, #668]	; 0x29c
 80098fc:	b2db      	uxtb	r3, r3
 80098fe:	3b01      	subs	r3, #1
 8009900:	2b02      	cmp	r3, #2
 8009902:	d840      	bhi.n	8009986 <USBD_StdItfReq+0xb6>
      {
        case USBD_STATE_DEFAULT:
        case USBD_STATE_ADDRESSED:
        case USBD_STATE_CONFIGURED:

          if (LOBYTE(req->wIndex) <= USBD_MAX_NUM_INTERFACES)
 8009904:	683b      	ldr	r3, [r7, #0]
 8009906:	889b      	ldrh	r3, [r3, #4]
 8009908:	b2db      	uxtb	r3, r3
 800990a:	2b01      	cmp	r3, #1
 800990c:	d836      	bhi.n	800997c <USBD_StdItfReq+0xac>
          {
            /* Get the class index relative to this interface */
            idx = USBD_CoreFindIF(pdev, LOBYTE(req->wIndex));
 800990e:	683b      	ldr	r3, [r7, #0]
 8009910:	889b      	ldrh	r3, [r3, #4]
 8009912:	b2db      	uxtb	r3, r3
 8009914:	4619      	mov	r1, r3
 8009916:	6878      	ldr	r0, [r7, #4]
 8009918:	f7ff fed9 	bl	80096ce <USBD_CoreFindIF>
 800991c:	4603      	mov	r3, r0
 800991e:	73bb      	strb	r3, [r7, #14]
            if (((uint8_t)idx != 0xFFU) && (idx < USBD_MAX_SUPPORTED_CLASS))
 8009920:	7bbb      	ldrb	r3, [r7, #14]
 8009922:	2bff      	cmp	r3, #255	; 0xff
 8009924:	d01d      	beq.n	8009962 <USBD_StdItfReq+0x92>
 8009926:	7bbb      	ldrb	r3, [r7, #14]
 8009928:	2b00      	cmp	r3, #0
 800992a:	d11a      	bne.n	8009962 <USBD_StdItfReq+0x92>
            {
              /* Call the class data out function to manage the request */
              if (pdev->pClass[idx]->Setup != NULL)
 800992c:	7bba      	ldrb	r2, [r7, #14]
 800992e:	687b      	ldr	r3, [r7, #4]
 8009930:	32ae      	adds	r2, #174	; 0xae
 8009932:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8009936:	689b      	ldr	r3, [r3, #8]
 8009938:	2b00      	cmp	r3, #0
 800993a:	d00f      	beq.n	800995c <USBD_StdItfReq+0x8c>
              {
                pdev->classId = idx;
 800993c:	7bba      	ldrb	r2, [r7, #14]
 800993e:	687b      	ldr	r3, [r7, #4]
 8009940:	f8c3 22d4 	str.w	r2, [r3, #724]	; 0x2d4
                ret = (USBD_StatusTypeDef)(pdev->pClass[idx]->Setup(pdev, req));
 8009944:	7bba      	ldrb	r2, [r7, #14]
 8009946:	687b      	ldr	r3, [r7, #4]
 8009948:	32ae      	adds	r2, #174	; 0xae
 800994a:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 800994e:	689b      	ldr	r3, [r3, #8]
 8009950:	6839      	ldr	r1, [r7, #0]
 8009952:	6878      	ldr	r0, [r7, #4]
 8009954:	4798      	blx	r3
 8009956:	4603      	mov	r3, r0
 8009958:	73fb      	strb	r3, [r7, #15]
              if (pdev->pClass[idx]->Setup != NULL)
 800995a:	e004      	b.n	8009966 <USBD_StdItfReq+0x96>
              }
              else
              {
                /* should never reach this condition */
                ret = USBD_FAIL;
 800995c:	2303      	movs	r3, #3
 800995e:	73fb      	strb	r3, [r7, #15]
              if (pdev->pClass[idx]->Setup != NULL)
 8009960:	e001      	b.n	8009966 <USBD_StdItfReq+0x96>
              }
            }
            else
            {
              /* No relative interface found */
              ret = USBD_FAIL;
 8009962:	2303      	movs	r3, #3
 8009964:	73fb      	strb	r3, [r7, #15]
            }

            if ((req->wLength == 0U) && (ret == USBD_OK))
 8009966:	683b      	ldr	r3, [r7, #0]
 8009968:	88db      	ldrh	r3, [r3, #6]
 800996a:	2b00      	cmp	r3, #0
 800996c:	d110      	bne.n	8009990 <USBD_StdItfReq+0xc0>
 800996e:	7bfb      	ldrb	r3, [r7, #15]
 8009970:	2b00      	cmp	r3, #0
 8009972:	d10d      	bne.n	8009990 <USBD_StdItfReq+0xc0>
            {
              (void)USBD_CtlSendStatus(pdev);
 8009974:	6878      	ldr	r0, [r7, #4]
 8009976:	f000 fdc7 	bl	800a508 <USBD_CtlSendStatus>
          }
          else
          {
            USBD_CtlError(pdev, req);
          }
          break;
 800997a:	e009      	b.n	8009990 <USBD_StdItfReq+0xc0>
            USBD_CtlError(pdev, req);
 800997c:	6839      	ldr	r1, [r7, #0]
 800997e:	6878      	ldr	r0, [r7, #4]
 8009980:	f000 fcf7 	bl	800a372 <USBD_CtlError>
          break;
 8009984:	e004      	b.n	8009990 <USBD_StdItfReq+0xc0>

        default:
          USBD_CtlError(pdev, req);
 8009986:	6839      	ldr	r1, [r7, #0]
 8009988:	6878      	ldr	r0, [r7, #4]
 800998a:	f000 fcf2 	bl	800a372 <USBD_CtlError>
          break;
 800998e:	e000      	b.n	8009992 <USBD_StdItfReq+0xc2>
          break;
 8009990:	bf00      	nop
      }
      break;
 8009992:	e004      	b.n	800999e <USBD_StdItfReq+0xce>

    default:
      USBD_CtlError(pdev, req);
 8009994:	6839      	ldr	r1, [r7, #0]
 8009996:	6878      	ldr	r0, [r7, #4]
 8009998:	f000 fceb 	bl	800a372 <USBD_CtlError>
      break;
 800999c:	bf00      	nop
  }

  return ret;
 800999e:	7bfb      	ldrb	r3, [r7, #15]
}
 80099a0:	4618      	mov	r0, r3
 80099a2:	3710      	adds	r7, #16
 80099a4:	46bd      	mov	sp, r7
 80099a6:	bd80      	pop	{r7, pc}

080099a8 <USBD_StdEPReq>:
  * @param  pdev: device instance
  * @param  req: usb request
  * @retval status
  */
USBD_StatusTypeDef USBD_StdEPReq(USBD_HandleTypeDef *pdev, USBD_SetupReqTypedef *req)
{
 80099a8:	b580      	push	{r7, lr}
 80099aa:	b084      	sub	sp, #16
 80099ac:	af00      	add	r7, sp, #0
 80099ae:	6078      	str	r0, [r7, #4]
 80099b0:	6039      	str	r1, [r7, #0]
  USBD_EndpointTypeDef *pep;
  uint8_t ep_addr;
  uint8_t idx;
  USBD_StatusTypeDef ret = USBD_OK;
 80099b2:	2300      	movs	r3, #0
 80099b4:	73fb      	strb	r3, [r7, #15]

  ep_addr = LOBYTE(req->wIndex);
 80099b6:	683b      	ldr	r3, [r7, #0]
 80099b8:	889b      	ldrh	r3, [r3, #4]
 80099ba:	73bb      	strb	r3, [r7, #14]

  switch (req->bmRequest & USB_REQ_TYPE_MASK)
 80099bc:	683b      	ldr	r3, [r7, #0]
 80099be:	781b      	ldrb	r3, [r3, #0]
 80099c0:	f003 0360 	and.w	r3, r3, #96	; 0x60
 80099c4:	2b40      	cmp	r3, #64	; 0x40
 80099c6:	d007      	beq.n	80099d8 <USBD_StdEPReq+0x30>
 80099c8:	2b40      	cmp	r3, #64	; 0x40
 80099ca:	f200 817f 	bhi.w	8009ccc <USBD_StdEPReq+0x324>
 80099ce:	2b00      	cmp	r3, #0
 80099d0:	d02a      	beq.n	8009a28 <USBD_StdEPReq+0x80>
 80099d2:	2b20      	cmp	r3, #32
 80099d4:	f040 817a 	bne.w	8009ccc <USBD_StdEPReq+0x324>
  {
    case USB_REQ_TYPE_CLASS:
    case USB_REQ_TYPE_VENDOR:
      /* Get the class index relative to this endpoint */
      idx = USBD_CoreFindEP(pdev, ep_addr);
 80099d8:	7bbb      	ldrb	r3, [r7, #14]
 80099da:	4619      	mov	r1, r3
 80099dc:	6878      	ldr	r0, [r7, #4]
 80099de:	f7ff fe83 	bl	80096e8 <USBD_CoreFindEP>
 80099e2:	4603      	mov	r3, r0
 80099e4:	737b      	strb	r3, [r7, #13]
      if (((uint8_t)idx != 0xFFU) && (idx < USBD_MAX_SUPPORTED_CLASS))
 80099e6:	7b7b      	ldrb	r3, [r7, #13]
 80099e8:	2bff      	cmp	r3, #255	; 0xff
 80099ea:	f000 8174 	beq.w	8009cd6 <USBD_StdEPReq+0x32e>
 80099ee:	7b7b      	ldrb	r3, [r7, #13]
 80099f0:	2b00      	cmp	r3, #0
 80099f2:	f040 8170 	bne.w	8009cd6 <USBD_StdEPReq+0x32e>
      {
        pdev->classId = idx;
 80099f6:	7b7a      	ldrb	r2, [r7, #13]
 80099f8:	687b      	ldr	r3, [r7, #4]
 80099fa:	f8c3 22d4 	str.w	r2, [r3, #724]	; 0x2d4
        /* Call the class data out function to manage the request */
        if (pdev->pClass[idx]->Setup != NULL)
 80099fe:	7b7a      	ldrb	r2, [r7, #13]
 8009a00:	687b      	ldr	r3, [r7, #4]
 8009a02:	32ae      	adds	r2, #174	; 0xae
 8009a04:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8009a08:	689b      	ldr	r3, [r3, #8]
 8009a0a:	2b00      	cmp	r3, #0
 8009a0c:	f000 8163 	beq.w	8009cd6 <USBD_StdEPReq+0x32e>
        {
          ret = (USBD_StatusTypeDef)pdev->pClass[idx]->Setup(pdev, req);
 8009a10:	7b7a      	ldrb	r2, [r7, #13]
 8009a12:	687b      	ldr	r3, [r7, #4]
 8009a14:	32ae      	adds	r2, #174	; 0xae
 8009a16:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8009a1a:	689b      	ldr	r3, [r3, #8]
 8009a1c:	6839      	ldr	r1, [r7, #0]
 8009a1e:	6878      	ldr	r0, [r7, #4]
 8009a20:	4798      	blx	r3
 8009a22:	4603      	mov	r3, r0
 8009a24:	73fb      	strb	r3, [r7, #15]
        }
      }
      break;
 8009a26:	e156      	b.n	8009cd6 <USBD_StdEPReq+0x32e>

    case USB_REQ_TYPE_STANDARD:
      switch (req->bRequest)
 8009a28:	683b      	ldr	r3, [r7, #0]
 8009a2a:	785b      	ldrb	r3, [r3, #1]
 8009a2c:	2b03      	cmp	r3, #3
 8009a2e:	d008      	beq.n	8009a42 <USBD_StdEPReq+0x9a>
 8009a30:	2b03      	cmp	r3, #3
 8009a32:	f300 8145 	bgt.w	8009cc0 <USBD_StdEPReq+0x318>
 8009a36:	2b00      	cmp	r3, #0
 8009a38:	f000 809b 	beq.w	8009b72 <USBD_StdEPReq+0x1ca>
 8009a3c:	2b01      	cmp	r3, #1
 8009a3e:	d03c      	beq.n	8009aba <USBD_StdEPReq+0x112>
 8009a40:	e13e      	b.n	8009cc0 <USBD_StdEPReq+0x318>
      {
        case USB_REQ_SET_FEATURE:
          switch (pdev->dev_state)
 8009a42:	687b      	ldr	r3, [r7, #4]
 8009a44:	f893 329c 	ldrb.w	r3, [r3, #668]	; 0x29c
 8009a48:	b2db      	uxtb	r3, r3
 8009a4a:	2b02      	cmp	r3, #2
 8009a4c:	d002      	beq.n	8009a54 <USBD_StdEPReq+0xac>
 8009a4e:	2b03      	cmp	r3, #3
 8009a50:	d016      	beq.n	8009a80 <USBD_StdEPReq+0xd8>
 8009a52:	e02c      	b.n	8009aae <USBD_StdEPReq+0x106>
          {
            case USBD_STATE_ADDRESSED:
              if ((ep_addr != 0x00U) && (ep_addr != 0x80U))
 8009a54:	7bbb      	ldrb	r3, [r7, #14]
 8009a56:	2b00      	cmp	r3, #0
 8009a58:	d00d      	beq.n	8009a76 <USBD_StdEPReq+0xce>
 8009a5a:	7bbb      	ldrb	r3, [r7, #14]
 8009a5c:	2b80      	cmp	r3, #128	; 0x80
 8009a5e:	d00a      	beq.n	8009a76 <USBD_StdEPReq+0xce>
              {
                (void)USBD_LL_StallEP(pdev, ep_addr);
 8009a60:	7bbb      	ldrb	r3, [r7, #14]
 8009a62:	4619      	mov	r1, r3
 8009a64:	6878      	ldr	r0, [r7, #4]
 8009a66:	f008 f913 	bl	8011c90 <USBD_LL_StallEP>
                (void)USBD_LL_StallEP(pdev, 0x80U);
 8009a6a:	2180      	movs	r1, #128	; 0x80
 8009a6c:	6878      	ldr	r0, [r7, #4]
 8009a6e:	f008 f90f 	bl	8011c90 <USBD_LL_StallEP>
 8009a72:	bf00      	nop
              }
              else
              {
                USBD_CtlError(pdev, req);
              }
              break;
 8009a74:	e020      	b.n	8009ab8 <USBD_StdEPReq+0x110>
                USBD_CtlError(pdev, req);
 8009a76:	6839      	ldr	r1, [r7, #0]
 8009a78:	6878      	ldr	r0, [r7, #4]
 8009a7a:	f000 fc7a 	bl	800a372 <USBD_CtlError>
              break;
 8009a7e:	e01b      	b.n	8009ab8 <USBD_StdEPReq+0x110>

            case USBD_STATE_CONFIGURED:
              if (req->wValue == USB_FEATURE_EP_HALT)
 8009a80:	683b      	ldr	r3, [r7, #0]
 8009a82:	885b      	ldrh	r3, [r3, #2]
 8009a84:	2b00      	cmp	r3, #0
 8009a86:	d10e      	bne.n	8009aa6 <USBD_StdEPReq+0xfe>
              {
                if ((ep_addr != 0x00U) && (ep_addr != 0x80U) && (req->wLength == 0x00U))
 8009a88:	7bbb      	ldrb	r3, [r7, #14]
 8009a8a:	2b00      	cmp	r3, #0
 8009a8c:	d00b      	beq.n	8009aa6 <USBD_StdEPReq+0xfe>
 8009a8e:	7bbb      	ldrb	r3, [r7, #14]
 8009a90:	2b80      	cmp	r3, #128	; 0x80
 8009a92:	d008      	beq.n	8009aa6 <USBD_StdEPReq+0xfe>
 8009a94:	683b      	ldr	r3, [r7, #0]
 8009a96:	88db      	ldrh	r3, [r3, #6]
 8009a98:	2b00      	cmp	r3, #0
 8009a9a:	d104      	bne.n	8009aa6 <USBD_StdEPReq+0xfe>
                {
                  (void)USBD_LL_StallEP(pdev, ep_addr);
 8009a9c:	7bbb      	ldrb	r3, [r7, #14]
 8009a9e:	4619      	mov	r1, r3
 8009aa0:	6878      	ldr	r0, [r7, #4]
 8009aa2:	f008 f8f5 	bl	8011c90 <USBD_LL_StallEP>
                }
              }
              (void)USBD_CtlSendStatus(pdev);
 8009aa6:	6878      	ldr	r0, [r7, #4]
 8009aa8:	f000 fd2e 	bl	800a508 <USBD_CtlSendStatus>

              break;
 8009aac:	e004      	b.n	8009ab8 <USBD_StdEPReq+0x110>

            default:
              USBD_CtlError(pdev, req);
 8009aae:	6839      	ldr	r1, [r7, #0]
 8009ab0:	6878      	ldr	r0, [r7, #4]
 8009ab2:	f000 fc5e 	bl	800a372 <USBD_CtlError>
              break;
 8009ab6:	bf00      	nop
          }
          break;
 8009ab8:	e107      	b.n	8009cca <USBD_StdEPReq+0x322>

        case USB_REQ_CLEAR_FEATURE:

          switch (pdev->dev_state)
 8009aba:	687b      	ldr	r3, [r7, #4]
 8009abc:	f893 329c 	ldrb.w	r3, [r3, #668]	; 0x29c
 8009ac0:	b2db      	uxtb	r3, r3
 8009ac2:	2b02      	cmp	r3, #2
 8009ac4:	d002      	beq.n	8009acc <USBD_StdEPReq+0x124>
 8009ac6:	2b03      	cmp	r3, #3
 8009ac8:	d016      	beq.n	8009af8 <USBD_StdEPReq+0x150>
 8009aca:	e04b      	b.n	8009b64 <USBD_StdEPReq+0x1bc>
          {
            case USBD_STATE_ADDRESSED:
              if ((ep_addr != 0x00U) && (ep_addr != 0x80U))
 8009acc:	7bbb      	ldrb	r3, [r7, #14]
 8009ace:	2b00      	cmp	r3, #0
 8009ad0:	d00d      	beq.n	8009aee <USBD_StdEPReq+0x146>
 8009ad2:	7bbb      	ldrb	r3, [r7, #14]
 8009ad4:	2b80      	cmp	r3, #128	; 0x80
 8009ad6:	d00a      	beq.n	8009aee <USBD_StdEPReq+0x146>
              {
                (void)USBD_LL_StallEP(pdev, ep_addr);
 8009ad8:	7bbb      	ldrb	r3, [r7, #14]
 8009ada:	4619      	mov	r1, r3
 8009adc:	6878      	ldr	r0, [r7, #4]
 8009ade:	f008 f8d7 	bl	8011c90 <USBD_LL_StallEP>
                (void)USBD_LL_StallEP(pdev, 0x80U);
 8009ae2:	2180      	movs	r1, #128	; 0x80
 8009ae4:	6878      	ldr	r0, [r7, #4]
 8009ae6:	f008 f8d3 	bl	8011c90 <USBD_LL_StallEP>
 8009aea:	bf00      	nop
              }
              else
              {
                USBD_CtlError(pdev, req);
              }
              break;
 8009aec:	e040      	b.n	8009b70 <USBD_StdEPReq+0x1c8>
                USBD_CtlError(pdev, req);
 8009aee:	6839      	ldr	r1, [r7, #0]
 8009af0:	6878      	ldr	r0, [r7, #4]
 8009af2:	f000 fc3e 	bl	800a372 <USBD_CtlError>
              break;
 8009af6:	e03b      	b.n	8009b70 <USBD_StdEPReq+0x1c8>

            case USBD_STATE_CONFIGURED:
              if (req->wValue == USB_FEATURE_EP_HALT)
 8009af8:	683b      	ldr	r3, [r7, #0]
 8009afa:	885b      	ldrh	r3, [r3, #2]
 8009afc:	2b00      	cmp	r3, #0
 8009afe:	d136      	bne.n	8009b6e <USBD_StdEPReq+0x1c6>
              {
                if ((ep_addr & 0x7FU) != 0x00U)
 8009b00:	7bbb      	ldrb	r3, [r7, #14]
 8009b02:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 8009b06:	2b00      	cmp	r3, #0
 8009b08:	d004      	beq.n	8009b14 <USBD_StdEPReq+0x16c>
                {
                  (void)USBD_LL_ClearStallEP(pdev, ep_addr);
 8009b0a:	7bbb      	ldrb	r3, [r7, #14]
 8009b0c:	4619      	mov	r1, r3
 8009b0e:	6878      	ldr	r0, [r7, #4]
 8009b10:	f008 f8dd 	bl	8011cce <USBD_LL_ClearStallEP>
                }
                (void)USBD_CtlSendStatus(pdev);
 8009b14:	6878      	ldr	r0, [r7, #4]
 8009b16:	f000 fcf7 	bl	800a508 <USBD_CtlSendStatus>

                /* Get the class index relative to this interface */
                idx = USBD_CoreFindEP(pdev, ep_addr);
 8009b1a:	7bbb      	ldrb	r3, [r7, #14]
 8009b1c:	4619      	mov	r1, r3
 8009b1e:	6878      	ldr	r0, [r7, #4]
 8009b20:	f7ff fde2 	bl	80096e8 <USBD_CoreFindEP>
 8009b24:	4603      	mov	r3, r0
 8009b26:	737b      	strb	r3, [r7, #13]
                if (((uint8_t)idx != 0xFFU) && (idx < USBD_MAX_SUPPORTED_CLASS))
 8009b28:	7b7b      	ldrb	r3, [r7, #13]
 8009b2a:	2bff      	cmp	r3, #255	; 0xff
 8009b2c:	d01f      	beq.n	8009b6e <USBD_StdEPReq+0x1c6>
 8009b2e:	7b7b      	ldrb	r3, [r7, #13]
 8009b30:	2b00      	cmp	r3, #0
 8009b32:	d11c      	bne.n	8009b6e <USBD_StdEPReq+0x1c6>
                {
                  pdev->classId = idx;
 8009b34:	7b7a      	ldrb	r2, [r7, #13]
 8009b36:	687b      	ldr	r3, [r7, #4]
 8009b38:	f8c3 22d4 	str.w	r2, [r3, #724]	; 0x2d4
                  /* Call the class data out function to manage the request */
                  if (pdev->pClass[idx]->Setup != NULL)
 8009b3c:	7b7a      	ldrb	r2, [r7, #13]
 8009b3e:	687b      	ldr	r3, [r7, #4]
 8009b40:	32ae      	adds	r2, #174	; 0xae
 8009b42:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8009b46:	689b      	ldr	r3, [r3, #8]
 8009b48:	2b00      	cmp	r3, #0
 8009b4a:	d010      	beq.n	8009b6e <USBD_StdEPReq+0x1c6>
                  {
                    ret = (USBD_StatusTypeDef)(pdev->pClass[idx]->Setup(pdev, req));
 8009b4c:	7b7a      	ldrb	r2, [r7, #13]
 8009b4e:	687b      	ldr	r3, [r7, #4]
 8009b50:	32ae      	adds	r2, #174	; 0xae
 8009b52:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8009b56:	689b      	ldr	r3, [r3, #8]
 8009b58:	6839      	ldr	r1, [r7, #0]
 8009b5a:	6878      	ldr	r0, [r7, #4]
 8009b5c:	4798      	blx	r3
 8009b5e:	4603      	mov	r3, r0
 8009b60:	73fb      	strb	r3, [r7, #15]
                  }
                }
              }
              break;
 8009b62:	e004      	b.n	8009b6e <USBD_StdEPReq+0x1c6>

            default:
              USBD_CtlError(pdev, req);
 8009b64:	6839      	ldr	r1, [r7, #0]
 8009b66:	6878      	ldr	r0, [r7, #4]
 8009b68:	f000 fc03 	bl	800a372 <USBD_CtlError>
              break;
 8009b6c:	e000      	b.n	8009b70 <USBD_StdEPReq+0x1c8>
              break;
 8009b6e:	bf00      	nop
          }
          break;
 8009b70:	e0ab      	b.n	8009cca <USBD_StdEPReq+0x322>

        case USB_REQ_GET_STATUS:
          switch (pdev->dev_state)
 8009b72:	687b      	ldr	r3, [r7, #4]
 8009b74:	f893 329c 	ldrb.w	r3, [r3, #668]	; 0x29c
 8009b78:	b2db      	uxtb	r3, r3
 8009b7a:	2b02      	cmp	r3, #2
 8009b7c:	d002      	beq.n	8009b84 <USBD_StdEPReq+0x1dc>
 8009b7e:	2b03      	cmp	r3, #3
 8009b80:	d032      	beq.n	8009be8 <USBD_StdEPReq+0x240>
 8009b82:	e097      	b.n	8009cb4 <USBD_StdEPReq+0x30c>
          {
            case USBD_STATE_ADDRESSED:
              if ((ep_addr != 0x00U) && (ep_addr != 0x80U))
 8009b84:	7bbb      	ldrb	r3, [r7, #14]
 8009b86:	2b00      	cmp	r3, #0
 8009b88:	d007      	beq.n	8009b9a <USBD_StdEPReq+0x1f2>
 8009b8a:	7bbb      	ldrb	r3, [r7, #14]
 8009b8c:	2b80      	cmp	r3, #128	; 0x80
 8009b8e:	d004      	beq.n	8009b9a <USBD_StdEPReq+0x1f2>
              {
                USBD_CtlError(pdev, req);
 8009b90:	6839      	ldr	r1, [r7, #0]
 8009b92:	6878      	ldr	r0, [r7, #4]
 8009b94:	f000 fbed 	bl	800a372 <USBD_CtlError>
                break;
 8009b98:	e091      	b.n	8009cbe <USBD_StdEPReq+0x316>
              }
              pep = ((ep_addr & 0x80U) == 0x80U) ? &pdev->ep_in[ep_addr & 0x7FU] : \
 8009b9a:	f997 300e 	ldrsb.w	r3, [r7, #14]
 8009b9e:	2b00      	cmp	r3, #0
 8009ba0:	da0b      	bge.n	8009bba <USBD_StdEPReq+0x212>
 8009ba2:	7bbb      	ldrb	r3, [r7, #14]
 8009ba4:	f003 027f 	and.w	r2, r3, #127	; 0x7f
 8009ba8:	4613      	mov	r3, r2
 8009baa:	009b      	lsls	r3, r3, #2
 8009bac:	4413      	add	r3, r2
 8009bae:	009b      	lsls	r3, r3, #2
 8009bb0:	3310      	adds	r3, #16
 8009bb2:	687a      	ldr	r2, [r7, #4]
 8009bb4:	4413      	add	r3, r2
 8009bb6:	3304      	adds	r3, #4
 8009bb8:	e00b      	b.n	8009bd2 <USBD_StdEPReq+0x22a>
                    &pdev->ep_out[ep_addr & 0x7FU];
 8009bba:	7bbb      	ldrb	r3, [r7, #14]
 8009bbc:	f003 027f 	and.w	r2, r3, #127	; 0x7f
              pep = ((ep_addr & 0x80U) == 0x80U) ? &pdev->ep_in[ep_addr & 0x7FU] : \
 8009bc0:	4613      	mov	r3, r2
 8009bc2:	009b      	lsls	r3, r3, #2
 8009bc4:	4413      	add	r3, r2
 8009bc6:	009b      	lsls	r3, r3, #2
 8009bc8:	f503 73a8 	add.w	r3, r3, #336	; 0x150
 8009bcc:	687a      	ldr	r2, [r7, #4]
 8009bce:	4413      	add	r3, r2
 8009bd0:	3304      	adds	r3, #4
 8009bd2:	60bb      	str	r3, [r7, #8]

              pep->status = 0x0000U;
 8009bd4:	68bb      	ldr	r3, [r7, #8]
 8009bd6:	2200      	movs	r2, #0
 8009bd8:	601a      	str	r2, [r3, #0]

              (void)USBD_CtlSendData(pdev, (uint8_t *)&pep->status, 2U);
 8009bda:	68bb      	ldr	r3, [r7, #8]
 8009bdc:	2202      	movs	r2, #2
 8009bde:	4619      	mov	r1, r3
 8009be0:	6878      	ldr	r0, [r7, #4]
 8009be2:	f000 fc37 	bl	800a454 <USBD_CtlSendData>
              break;
 8009be6:	e06a      	b.n	8009cbe <USBD_StdEPReq+0x316>

            case USBD_STATE_CONFIGURED:
              if ((ep_addr & 0x80U) == 0x80U)
 8009be8:	f997 300e 	ldrsb.w	r3, [r7, #14]
 8009bec:	2b00      	cmp	r3, #0
 8009bee:	da11      	bge.n	8009c14 <USBD_StdEPReq+0x26c>
              {
                if (pdev->ep_in[ep_addr & 0xFU].is_used == 0U)
 8009bf0:	7bbb      	ldrb	r3, [r7, #14]
 8009bf2:	f003 020f 	and.w	r2, r3, #15
 8009bf6:	6879      	ldr	r1, [r7, #4]
 8009bf8:	4613      	mov	r3, r2
 8009bfa:	009b      	lsls	r3, r3, #2
 8009bfc:	4413      	add	r3, r2
 8009bfe:	009b      	lsls	r3, r3, #2
 8009c00:	440b      	add	r3, r1
 8009c02:	3324      	adds	r3, #36	; 0x24
 8009c04:	881b      	ldrh	r3, [r3, #0]
 8009c06:	2b00      	cmp	r3, #0
 8009c08:	d117      	bne.n	8009c3a <USBD_StdEPReq+0x292>
                {
                  USBD_CtlError(pdev, req);
 8009c0a:	6839      	ldr	r1, [r7, #0]
 8009c0c:	6878      	ldr	r0, [r7, #4]
 8009c0e:	f000 fbb0 	bl	800a372 <USBD_CtlError>
                  break;
 8009c12:	e054      	b.n	8009cbe <USBD_StdEPReq+0x316>
                }
              }
              else
              {
                if (pdev->ep_out[ep_addr & 0xFU].is_used == 0U)
 8009c14:	7bbb      	ldrb	r3, [r7, #14]
 8009c16:	f003 020f 	and.w	r2, r3, #15
 8009c1a:	6879      	ldr	r1, [r7, #4]
 8009c1c:	4613      	mov	r3, r2
 8009c1e:	009b      	lsls	r3, r3, #2
 8009c20:	4413      	add	r3, r2
 8009c22:	009b      	lsls	r3, r3, #2
 8009c24:	440b      	add	r3, r1
 8009c26:	f503 73b2 	add.w	r3, r3, #356	; 0x164
 8009c2a:	881b      	ldrh	r3, [r3, #0]
 8009c2c:	2b00      	cmp	r3, #0
 8009c2e:	d104      	bne.n	8009c3a <USBD_StdEPReq+0x292>
                {
                  USBD_CtlError(pdev, req);
 8009c30:	6839      	ldr	r1, [r7, #0]
 8009c32:	6878      	ldr	r0, [r7, #4]
 8009c34:	f000 fb9d 	bl	800a372 <USBD_CtlError>
                  break;
 8009c38:	e041      	b.n	8009cbe <USBD_StdEPReq+0x316>
                }
              }

              pep = ((ep_addr & 0x80U) == 0x80U) ? &pdev->ep_in[ep_addr & 0x7FU] : \
 8009c3a:	f997 300e 	ldrsb.w	r3, [r7, #14]
 8009c3e:	2b00      	cmp	r3, #0
 8009c40:	da0b      	bge.n	8009c5a <USBD_StdEPReq+0x2b2>
 8009c42:	7bbb      	ldrb	r3, [r7, #14]
 8009c44:	f003 027f 	and.w	r2, r3, #127	; 0x7f
 8009c48:	4613      	mov	r3, r2
 8009c4a:	009b      	lsls	r3, r3, #2
 8009c4c:	4413      	add	r3, r2
 8009c4e:	009b      	lsls	r3, r3, #2
 8009c50:	3310      	adds	r3, #16
 8009c52:	687a      	ldr	r2, [r7, #4]
 8009c54:	4413      	add	r3, r2
 8009c56:	3304      	adds	r3, #4
 8009c58:	e00b      	b.n	8009c72 <USBD_StdEPReq+0x2ca>
                    &pdev->ep_out[ep_addr & 0x7FU];
 8009c5a:	7bbb      	ldrb	r3, [r7, #14]
 8009c5c:	f003 027f 	and.w	r2, r3, #127	; 0x7f
              pep = ((ep_addr & 0x80U) == 0x80U) ? &pdev->ep_in[ep_addr & 0x7FU] : \
 8009c60:	4613      	mov	r3, r2
 8009c62:	009b      	lsls	r3, r3, #2
 8009c64:	4413      	add	r3, r2
 8009c66:	009b      	lsls	r3, r3, #2
 8009c68:	f503 73a8 	add.w	r3, r3, #336	; 0x150
 8009c6c:	687a      	ldr	r2, [r7, #4]
 8009c6e:	4413      	add	r3, r2
 8009c70:	3304      	adds	r3, #4
 8009c72:	60bb      	str	r3, [r7, #8]

              if ((ep_addr == 0x00U) || (ep_addr == 0x80U))
 8009c74:	7bbb      	ldrb	r3, [r7, #14]
 8009c76:	2b00      	cmp	r3, #0
 8009c78:	d002      	beq.n	8009c80 <USBD_StdEPReq+0x2d8>
 8009c7a:	7bbb      	ldrb	r3, [r7, #14]
 8009c7c:	2b80      	cmp	r3, #128	; 0x80
 8009c7e:	d103      	bne.n	8009c88 <USBD_StdEPReq+0x2e0>
              {
                pep->status = 0x0000U;
 8009c80:	68bb      	ldr	r3, [r7, #8]
 8009c82:	2200      	movs	r2, #0
 8009c84:	601a      	str	r2, [r3, #0]
 8009c86:	e00e      	b.n	8009ca6 <USBD_StdEPReq+0x2fe>
              }
              else if (USBD_LL_IsStallEP(pdev, ep_addr) != 0U)
 8009c88:	7bbb      	ldrb	r3, [r7, #14]
 8009c8a:	4619      	mov	r1, r3
 8009c8c:	6878      	ldr	r0, [r7, #4]
 8009c8e:	f008 f83d 	bl	8011d0c <USBD_LL_IsStallEP>
 8009c92:	4603      	mov	r3, r0
 8009c94:	2b00      	cmp	r3, #0
 8009c96:	d003      	beq.n	8009ca0 <USBD_StdEPReq+0x2f8>
              {
                pep->status = 0x0001U;
 8009c98:	68bb      	ldr	r3, [r7, #8]
 8009c9a:	2201      	movs	r2, #1
 8009c9c:	601a      	str	r2, [r3, #0]
 8009c9e:	e002      	b.n	8009ca6 <USBD_StdEPReq+0x2fe>
              }
              else
              {
                pep->status = 0x0000U;
 8009ca0:	68bb      	ldr	r3, [r7, #8]
 8009ca2:	2200      	movs	r2, #0
 8009ca4:	601a      	str	r2, [r3, #0]
              }

              (void)USBD_CtlSendData(pdev, (uint8_t *)&pep->status, 2U);
 8009ca6:	68bb      	ldr	r3, [r7, #8]
 8009ca8:	2202      	movs	r2, #2
 8009caa:	4619      	mov	r1, r3
 8009cac:	6878      	ldr	r0, [r7, #4]
 8009cae:	f000 fbd1 	bl	800a454 <USBD_CtlSendData>
              break;
 8009cb2:	e004      	b.n	8009cbe <USBD_StdEPReq+0x316>

            default:
              USBD_CtlError(pdev, req);
 8009cb4:	6839      	ldr	r1, [r7, #0]
 8009cb6:	6878      	ldr	r0, [r7, #4]
 8009cb8:	f000 fb5b 	bl	800a372 <USBD_CtlError>
              break;
 8009cbc:	bf00      	nop
          }
          break;
 8009cbe:	e004      	b.n	8009cca <USBD_StdEPReq+0x322>

        default:
          USBD_CtlError(pdev, req);
 8009cc0:	6839      	ldr	r1, [r7, #0]
 8009cc2:	6878      	ldr	r0, [r7, #4]
 8009cc4:	f000 fb55 	bl	800a372 <USBD_CtlError>
          break;
 8009cc8:	bf00      	nop
      }
      break;
 8009cca:	e005      	b.n	8009cd8 <USBD_StdEPReq+0x330>

    default:
      USBD_CtlError(pdev, req);
 8009ccc:	6839      	ldr	r1, [r7, #0]
 8009cce:	6878      	ldr	r0, [r7, #4]
 8009cd0:	f000 fb4f 	bl	800a372 <USBD_CtlError>
      break;
 8009cd4:	e000      	b.n	8009cd8 <USBD_StdEPReq+0x330>
      break;
 8009cd6:	bf00      	nop
  }

  return ret;
 8009cd8:	7bfb      	ldrb	r3, [r7, #15]
}
 8009cda:	4618      	mov	r0, r3
 8009cdc:	3710      	adds	r7, #16
 8009cde:	46bd      	mov	sp, r7
 8009ce0:	bd80      	pop	{r7, pc}
	...

08009ce4 <USBD_GetDescriptor>:
  * @param  pdev: device instance
  * @param  req: usb request
  * @retval status
  */
static void USBD_GetDescriptor(USBD_HandleTypeDef *pdev, USBD_SetupReqTypedef *req)
{
 8009ce4:	b580      	push	{r7, lr}
 8009ce6:	b084      	sub	sp, #16
 8009ce8:	af00      	add	r7, sp, #0
 8009cea:	6078      	str	r0, [r7, #4]
 8009cec:	6039      	str	r1, [r7, #0]
  uint16_t len = 0U;
 8009cee:	2300      	movs	r3, #0
 8009cf0:	813b      	strh	r3, [r7, #8]
  uint8_t *pbuf = NULL;
 8009cf2:	2300      	movs	r3, #0
 8009cf4:	60fb      	str	r3, [r7, #12]
  uint8_t err = 0U;
 8009cf6:	2300      	movs	r3, #0
 8009cf8:	72fb      	strb	r3, [r7, #11]

  switch (req->wValue >> 8)
 8009cfa:	683b      	ldr	r3, [r7, #0]
 8009cfc:	885b      	ldrh	r3, [r3, #2]
 8009cfe:	0a1b      	lsrs	r3, r3, #8
 8009d00:	b29b      	uxth	r3, r3
 8009d02:	3b01      	subs	r3, #1
 8009d04:	2b06      	cmp	r3, #6
 8009d06:	f200 8128 	bhi.w	8009f5a <USBD_GetDescriptor+0x276>
 8009d0a:	a201      	add	r2, pc, #4	; (adr r2, 8009d10 <USBD_GetDescriptor+0x2c>)
 8009d0c:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8009d10:	08009d2d 	.word	0x08009d2d
 8009d14:	08009d45 	.word	0x08009d45
 8009d18:	08009d85 	.word	0x08009d85
 8009d1c:	08009f5b 	.word	0x08009f5b
 8009d20:	08009f5b 	.word	0x08009f5b
 8009d24:	08009efb 	.word	0x08009efb
 8009d28:	08009f27 	.word	0x08009f27
        err++;
      }
      break;
#endif /* (USBD_LPM_ENABLED == 1U) || (USBD_CLASS_BOS_ENABLED == 1U) */
    case USB_DESC_TYPE_DEVICE:
      pbuf = pdev->pDesc->GetDeviceDescriptor(pdev->dev_speed, &len);
 8009d2c:	687b      	ldr	r3, [r7, #4]
 8009d2e:	f8d3 32b4 	ldr.w	r3, [r3, #692]	; 0x2b4
 8009d32:	681b      	ldr	r3, [r3, #0]
 8009d34:	687a      	ldr	r2, [r7, #4]
 8009d36:	7c12      	ldrb	r2, [r2, #16]
 8009d38:	f107 0108 	add.w	r1, r7, #8
 8009d3c:	4610      	mov	r0, r2
 8009d3e:	4798      	blx	r3
 8009d40:	60f8      	str	r0, [r7, #12]
      break;
 8009d42:	e112      	b.n	8009f6a <USBD_GetDescriptor+0x286>

    case USB_DESC_TYPE_CONFIGURATION:
      if (pdev->dev_speed == USBD_SPEED_HIGH)
 8009d44:	687b      	ldr	r3, [r7, #4]
 8009d46:	7c1b      	ldrb	r3, [r3, #16]
 8009d48:	2b00      	cmp	r3, #0
 8009d4a:	d10d      	bne.n	8009d68 <USBD_GetDescriptor+0x84>
          pbuf = (uint8_t *)USBD_CMPSIT.GetHSConfigDescriptor(&len);
        }
        else
#endif /* USE_USBD_COMPOSITE */
        {
          pbuf = (uint8_t *)pdev->pClass[0]->GetHSConfigDescriptor(&len);
 8009d4c:	687b      	ldr	r3, [r7, #4]
 8009d4e:	f8d3 32b8 	ldr.w	r3, [r3, #696]	; 0x2b8
 8009d52:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8009d54:	f107 0208 	add.w	r2, r7, #8
 8009d58:	4610      	mov	r0, r2
 8009d5a:	4798      	blx	r3
 8009d5c:	60f8      	str	r0, [r7, #12]
        }
        pbuf[1] = USB_DESC_TYPE_CONFIGURATION;
 8009d5e:	68fb      	ldr	r3, [r7, #12]
 8009d60:	3301      	adds	r3, #1
 8009d62:	2202      	movs	r2, #2
 8009d64:	701a      	strb	r2, [r3, #0]
        {
          pbuf = (uint8_t *)pdev->pClass[0]->GetFSConfigDescriptor(&len);
        }
        pbuf[1] = USB_DESC_TYPE_CONFIGURATION;
      }
      break;
 8009d66:	e100      	b.n	8009f6a <USBD_GetDescriptor+0x286>
          pbuf = (uint8_t *)pdev->pClass[0]->GetFSConfigDescriptor(&len);
 8009d68:	687b      	ldr	r3, [r7, #4]
 8009d6a:	f8d3 32b8 	ldr.w	r3, [r3, #696]	; 0x2b8
 8009d6e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8009d70:	f107 0208 	add.w	r2, r7, #8
 8009d74:	4610      	mov	r0, r2
 8009d76:	4798      	blx	r3
 8009d78:	60f8      	str	r0, [r7, #12]
        pbuf[1] = USB_DESC_TYPE_CONFIGURATION;
 8009d7a:	68fb      	ldr	r3, [r7, #12]
 8009d7c:	3301      	adds	r3, #1
 8009d7e:	2202      	movs	r2, #2
 8009d80:	701a      	strb	r2, [r3, #0]
      break;
 8009d82:	e0f2      	b.n	8009f6a <USBD_GetDescriptor+0x286>

    case USB_DESC_TYPE_STRING:
      switch ((uint8_t)(req->wValue))
 8009d84:	683b      	ldr	r3, [r7, #0]
 8009d86:	885b      	ldrh	r3, [r3, #2]
 8009d88:	b2db      	uxtb	r3, r3
 8009d8a:	2b05      	cmp	r3, #5
 8009d8c:	f200 80ac 	bhi.w	8009ee8 <USBD_GetDescriptor+0x204>
 8009d90:	a201      	add	r2, pc, #4	; (adr r2, 8009d98 <USBD_GetDescriptor+0xb4>)
 8009d92:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8009d96:	bf00      	nop
 8009d98:	08009db1 	.word	0x08009db1
 8009d9c:	08009de5 	.word	0x08009de5
 8009da0:	08009e19 	.word	0x08009e19
 8009da4:	08009e4d 	.word	0x08009e4d
 8009da8:	08009e81 	.word	0x08009e81
 8009dac:	08009eb5 	.word	0x08009eb5
      {
        case USBD_IDX_LANGID_STR:
          if (pdev->pDesc->GetLangIDStrDescriptor != NULL)
 8009db0:	687b      	ldr	r3, [r7, #4]
 8009db2:	f8d3 32b4 	ldr.w	r3, [r3, #692]	; 0x2b4
 8009db6:	685b      	ldr	r3, [r3, #4]
 8009db8:	2b00      	cmp	r3, #0
 8009dba:	d00b      	beq.n	8009dd4 <USBD_GetDescriptor+0xf0>
          {
            pbuf = pdev->pDesc->GetLangIDStrDescriptor(pdev->dev_speed, &len);
 8009dbc:	687b      	ldr	r3, [r7, #4]
 8009dbe:	f8d3 32b4 	ldr.w	r3, [r3, #692]	; 0x2b4
 8009dc2:	685b      	ldr	r3, [r3, #4]
 8009dc4:	687a      	ldr	r2, [r7, #4]
 8009dc6:	7c12      	ldrb	r2, [r2, #16]
 8009dc8:	f107 0108 	add.w	r1, r7, #8
 8009dcc:	4610      	mov	r0, r2
 8009dce:	4798      	blx	r3
 8009dd0:	60f8      	str	r0, [r7, #12]
          else
          {
            USBD_CtlError(pdev, req);
            err++;
          }
          break;
 8009dd2:	e091      	b.n	8009ef8 <USBD_GetDescriptor+0x214>
            USBD_CtlError(pdev, req);
 8009dd4:	6839      	ldr	r1, [r7, #0]
 8009dd6:	6878      	ldr	r0, [r7, #4]
 8009dd8:	f000 facb 	bl	800a372 <USBD_CtlError>
            err++;
 8009ddc:	7afb      	ldrb	r3, [r7, #11]
 8009dde:	3301      	adds	r3, #1
 8009de0:	72fb      	strb	r3, [r7, #11]
          break;
 8009de2:	e089      	b.n	8009ef8 <USBD_GetDescriptor+0x214>

        case USBD_IDX_MFC_STR:
          if (pdev->pDesc->GetManufacturerStrDescriptor != NULL)
 8009de4:	687b      	ldr	r3, [r7, #4]
 8009de6:	f8d3 32b4 	ldr.w	r3, [r3, #692]	; 0x2b4
 8009dea:	689b      	ldr	r3, [r3, #8]
 8009dec:	2b00      	cmp	r3, #0
 8009dee:	d00b      	beq.n	8009e08 <USBD_GetDescriptor+0x124>
          {
            pbuf = pdev->pDesc->GetManufacturerStrDescriptor(pdev->dev_speed, &len);
 8009df0:	687b      	ldr	r3, [r7, #4]
 8009df2:	f8d3 32b4 	ldr.w	r3, [r3, #692]	; 0x2b4
 8009df6:	689b      	ldr	r3, [r3, #8]
 8009df8:	687a      	ldr	r2, [r7, #4]
 8009dfa:	7c12      	ldrb	r2, [r2, #16]
 8009dfc:	f107 0108 	add.w	r1, r7, #8
 8009e00:	4610      	mov	r0, r2
 8009e02:	4798      	blx	r3
 8009e04:	60f8      	str	r0, [r7, #12]
          else
          {
            USBD_CtlError(pdev, req);
            err++;
          }
          break;
 8009e06:	e077      	b.n	8009ef8 <USBD_GetDescriptor+0x214>
            USBD_CtlError(pdev, req);
 8009e08:	6839      	ldr	r1, [r7, #0]
 8009e0a:	6878      	ldr	r0, [r7, #4]
 8009e0c:	f000 fab1 	bl	800a372 <USBD_CtlError>
            err++;
 8009e10:	7afb      	ldrb	r3, [r7, #11]
 8009e12:	3301      	adds	r3, #1
 8009e14:	72fb      	strb	r3, [r7, #11]
          break;
 8009e16:	e06f      	b.n	8009ef8 <USBD_GetDescriptor+0x214>

        case USBD_IDX_PRODUCT_STR:
          if (pdev->pDesc->GetProductStrDescriptor != NULL)
 8009e18:	687b      	ldr	r3, [r7, #4]
 8009e1a:	f8d3 32b4 	ldr.w	r3, [r3, #692]	; 0x2b4
 8009e1e:	68db      	ldr	r3, [r3, #12]
 8009e20:	2b00      	cmp	r3, #0
 8009e22:	d00b      	beq.n	8009e3c <USBD_GetDescriptor+0x158>
          {
            pbuf = pdev->pDesc->GetProductStrDescriptor(pdev->dev_speed, &len);
 8009e24:	687b      	ldr	r3, [r7, #4]
 8009e26:	f8d3 32b4 	ldr.w	r3, [r3, #692]	; 0x2b4
 8009e2a:	68db      	ldr	r3, [r3, #12]
 8009e2c:	687a      	ldr	r2, [r7, #4]
 8009e2e:	7c12      	ldrb	r2, [r2, #16]
 8009e30:	f107 0108 	add.w	r1, r7, #8
 8009e34:	4610      	mov	r0, r2
 8009e36:	4798      	blx	r3
 8009e38:	60f8      	str	r0, [r7, #12]
          else
          {
            USBD_CtlError(pdev, req);
            err++;
          }
          break;
 8009e3a:	e05d      	b.n	8009ef8 <USBD_GetDescriptor+0x214>
            USBD_CtlError(pdev, req);
 8009e3c:	6839      	ldr	r1, [r7, #0]
 8009e3e:	6878      	ldr	r0, [r7, #4]
 8009e40:	f000 fa97 	bl	800a372 <USBD_CtlError>
            err++;
 8009e44:	7afb      	ldrb	r3, [r7, #11]
 8009e46:	3301      	adds	r3, #1
 8009e48:	72fb      	strb	r3, [r7, #11]
          break;
 8009e4a:	e055      	b.n	8009ef8 <USBD_GetDescriptor+0x214>

        case USBD_IDX_SERIAL_STR:
          if (pdev->pDesc->GetSerialStrDescriptor != NULL)
 8009e4c:	687b      	ldr	r3, [r7, #4]
 8009e4e:	f8d3 32b4 	ldr.w	r3, [r3, #692]	; 0x2b4
 8009e52:	691b      	ldr	r3, [r3, #16]
 8009e54:	2b00      	cmp	r3, #0
 8009e56:	d00b      	beq.n	8009e70 <USBD_GetDescriptor+0x18c>
          {
            pbuf = pdev->pDesc->GetSerialStrDescriptor(pdev->dev_speed, &len);
 8009e58:	687b      	ldr	r3, [r7, #4]
 8009e5a:	f8d3 32b4 	ldr.w	r3, [r3, #692]	; 0x2b4
 8009e5e:	691b      	ldr	r3, [r3, #16]
 8009e60:	687a      	ldr	r2, [r7, #4]
 8009e62:	7c12      	ldrb	r2, [r2, #16]
 8009e64:	f107 0108 	add.w	r1, r7, #8
 8009e68:	4610      	mov	r0, r2
 8009e6a:	4798      	blx	r3
 8009e6c:	60f8      	str	r0, [r7, #12]
          else
          {
            USBD_CtlError(pdev, req);
            err++;
          }
          break;
 8009e6e:	e043      	b.n	8009ef8 <USBD_GetDescriptor+0x214>
            USBD_CtlError(pdev, req);
 8009e70:	6839      	ldr	r1, [r7, #0]
 8009e72:	6878      	ldr	r0, [r7, #4]
 8009e74:	f000 fa7d 	bl	800a372 <USBD_CtlError>
            err++;
 8009e78:	7afb      	ldrb	r3, [r7, #11]
 8009e7a:	3301      	adds	r3, #1
 8009e7c:	72fb      	strb	r3, [r7, #11]
          break;
 8009e7e:	e03b      	b.n	8009ef8 <USBD_GetDescriptor+0x214>

        case USBD_IDX_CONFIG_STR:
          if (pdev->pDesc->GetConfigurationStrDescriptor != NULL)
 8009e80:	687b      	ldr	r3, [r7, #4]
 8009e82:	f8d3 32b4 	ldr.w	r3, [r3, #692]	; 0x2b4
 8009e86:	695b      	ldr	r3, [r3, #20]
 8009e88:	2b00      	cmp	r3, #0
 8009e8a:	d00b      	beq.n	8009ea4 <USBD_GetDescriptor+0x1c0>
          {
            pbuf = pdev->pDesc->GetConfigurationStrDescriptor(pdev->dev_speed, &len);
 8009e8c:	687b      	ldr	r3, [r7, #4]
 8009e8e:	f8d3 32b4 	ldr.w	r3, [r3, #692]	; 0x2b4
 8009e92:	695b      	ldr	r3, [r3, #20]
 8009e94:	687a      	ldr	r2, [r7, #4]
 8009e96:	7c12      	ldrb	r2, [r2, #16]
 8009e98:	f107 0108 	add.w	r1, r7, #8
 8009e9c:	4610      	mov	r0, r2
 8009e9e:	4798      	blx	r3
 8009ea0:	60f8      	str	r0, [r7, #12]
          else
          {
            USBD_CtlError(pdev, req);
            err++;
          }
          break;
 8009ea2:	e029      	b.n	8009ef8 <USBD_GetDescriptor+0x214>
            USBD_CtlError(pdev, req);
 8009ea4:	6839      	ldr	r1, [r7, #0]
 8009ea6:	6878      	ldr	r0, [r7, #4]
 8009ea8:	f000 fa63 	bl	800a372 <USBD_CtlError>
            err++;
 8009eac:	7afb      	ldrb	r3, [r7, #11]
 8009eae:	3301      	adds	r3, #1
 8009eb0:	72fb      	strb	r3, [r7, #11]
          break;
 8009eb2:	e021      	b.n	8009ef8 <USBD_GetDescriptor+0x214>

        case USBD_IDX_INTERFACE_STR:
          if (pdev->pDesc->GetInterfaceStrDescriptor != NULL)
 8009eb4:	687b      	ldr	r3, [r7, #4]
 8009eb6:	f8d3 32b4 	ldr.w	r3, [r3, #692]	; 0x2b4
 8009eba:	699b      	ldr	r3, [r3, #24]
 8009ebc:	2b00      	cmp	r3, #0
 8009ebe:	d00b      	beq.n	8009ed8 <USBD_GetDescriptor+0x1f4>
          {
            pbuf = pdev->pDesc->GetInterfaceStrDescriptor(pdev->dev_speed, &len);
 8009ec0:	687b      	ldr	r3, [r7, #4]
 8009ec2:	f8d3 32b4 	ldr.w	r3, [r3, #692]	; 0x2b4
 8009ec6:	699b      	ldr	r3, [r3, #24]
 8009ec8:	687a      	ldr	r2, [r7, #4]
 8009eca:	7c12      	ldrb	r2, [r2, #16]
 8009ecc:	f107 0108 	add.w	r1, r7, #8
 8009ed0:	4610      	mov	r0, r2
 8009ed2:	4798      	blx	r3
 8009ed4:	60f8      	str	r0, [r7, #12]
          else
          {
            USBD_CtlError(pdev, req);
            err++;
          }
          break;
 8009ed6:	e00f      	b.n	8009ef8 <USBD_GetDescriptor+0x214>
            USBD_CtlError(pdev, req);
 8009ed8:	6839      	ldr	r1, [r7, #0]
 8009eda:	6878      	ldr	r0, [r7, #4]
 8009edc:	f000 fa49 	bl	800a372 <USBD_CtlError>
            err++;
 8009ee0:	7afb      	ldrb	r3, [r7, #11]
 8009ee2:	3301      	adds	r3, #1
 8009ee4:	72fb      	strb	r3, [r7, #11]
          break;
 8009ee6:	e007      	b.n	8009ef8 <USBD_GetDescriptor+0x214>
            err++;
          }
#endif /* USBD_SUPPORT_USER_STRING_DESC  */

#if ((USBD_CLASS_USER_STRING_DESC == 0U) && (USBD_SUPPORT_USER_STRING_DESC == 0U))
          USBD_CtlError(pdev, req);
 8009ee8:	6839      	ldr	r1, [r7, #0]
 8009eea:	6878      	ldr	r0, [r7, #4]
 8009eec:	f000 fa41 	bl	800a372 <USBD_CtlError>
          err++;
 8009ef0:	7afb      	ldrb	r3, [r7, #11]
 8009ef2:	3301      	adds	r3, #1
 8009ef4:	72fb      	strb	r3, [r7, #11]
#endif /* (USBD_CLASS_USER_STRING_DESC == 0U) && (USBD_SUPPORT_USER_STRING_DESC == 0U) */
          break;
 8009ef6:	bf00      	nop
      }
      break;
 8009ef8:	e037      	b.n	8009f6a <USBD_GetDescriptor+0x286>

    case USB_DESC_TYPE_DEVICE_QUALIFIER:
      if (pdev->dev_speed == USBD_SPEED_HIGH)
 8009efa:	687b      	ldr	r3, [r7, #4]
 8009efc:	7c1b      	ldrb	r3, [r3, #16]
 8009efe:	2b00      	cmp	r3, #0
 8009f00:	d109      	bne.n	8009f16 <USBD_GetDescriptor+0x232>
          pbuf = (uint8_t *)USBD_CMPSIT.GetDeviceQualifierDescriptor(&len);
        }
        else
#endif /* USE_USBD_COMPOSITE */
        {
          pbuf = (uint8_t *)pdev->pClass[0]->GetDeviceQualifierDescriptor(&len);
 8009f02:	687b      	ldr	r3, [r7, #4]
 8009f04:	f8d3 32b8 	ldr.w	r3, [r3, #696]	; 0x2b8
 8009f08:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8009f0a:	f107 0208 	add.w	r2, r7, #8
 8009f0e:	4610      	mov	r0, r2
 8009f10:	4798      	blx	r3
 8009f12:	60f8      	str	r0, [r7, #12]
      else
      {
        USBD_CtlError(pdev, req);
        err++;
      }
      break;
 8009f14:	e029      	b.n	8009f6a <USBD_GetDescriptor+0x286>
        USBD_CtlError(pdev, req);
 8009f16:	6839      	ldr	r1, [r7, #0]
 8009f18:	6878      	ldr	r0, [r7, #4]
 8009f1a:	f000 fa2a 	bl	800a372 <USBD_CtlError>
        err++;
 8009f1e:	7afb      	ldrb	r3, [r7, #11]
 8009f20:	3301      	adds	r3, #1
 8009f22:	72fb      	strb	r3, [r7, #11]
      break;
 8009f24:	e021      	b.n	8009f6a <USBD_GetDescriptor+0x286>

    case USB_DESC_TYPE_OTHER_SPEED_CONFIGURATION:
      if (pdev->dev_speed == USBD_SPEED_HIGH)
 8009f26:	687b      	ldr	r3, [r7, #4]
 8009f28:	7c1b      	ldrb	r3, [r3, #16]
 8009f2a:	2b00      	cmp	r3, #0
 8009f2c:	d10d      	bne.n	8009f4a <USBD_GetDescriptor+0x266>
          pbuf = (uint8_t *)USBD_CMPSIT.GetOtherSpeedConfigDescriptor(&len);
        }
        else
#endif /* USE_USBD_COMPOSITE */
        {
          pbuf = (uint8_t *)pdev->pClass[0]->GetOtherSpeedConfigDescriptor(&len);
 8009f2e:	687b      	ldr	r3, [r7, #4]
 8009f30:	f8d3 32b8 	ldr.w	r3, [r3, #696]	; 0x2b8
 8009f34:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8009f36:	f107 0208 	add.w	r2, r7, #8
 8009f3a:	4610      	mov	r0, r2
 8009f3c:	4798      	blx	r3
 8009f3e:	60f8      	str	r0, [r7, #12]
        }
        pbuf[1] = USB_DESC_TYPE_OTHER_SPEED_CONFIGURATION;
 8009f40:	68fb      	ldr	r3, [r7, #12]
 8009f42:	3301      	adds	r3, #1
 8009f44:	2207      	movs	r2, #7
 8009f46:	701a      	strb	r2, [r3, #0]
      else
      {
        USBD_CtlError(pdev, req);
        err++;
      }
      break;
 8009f48:	e00f      	b.n	8009f6a <USBD_GetDescriptor+0x286>
        USBD_CtlError(pdev, req);
 8009f4a:	6839      	ldr	r1, [r7, #0]
 8009f4c:	6878      	ldr	r0, [r7, #4]
 8009f4e:	f000 fa10 	bl	800a372 <USBD_CtlError>
        err++;
 8009f52:	7afb      	ldrb	r3, [r7, #11]
 8009f54:	3301      	adds	r3, #1
 8009f56:	72fb      	strb	r3, [r7, #11]
      break;
 8009f58:	e007      	b.n	8009f6a <USBD_GetDescriptor+0x286>

    default:
      USBD_CtlError(pdev, req);
 8009f5a:	6839      	ldr	r1, [r7, #0]
 8009f5c:	6878      	ldr	r0, [r7, #4]
 8009f5e:	f000 fa08 	bl	800a372 <USBD_CtlError>
      err++;
 8009f62:	7afb      	ldrb	r3, [r7, #11]
 8009f64:	3301      	adds	r3, #1
 8009f66:	72fb      	strb	r3, [r7, #11]
      break;
 8009f68:	bf00      	nop
  }

  if (err != 0U)
 8009f6a:	7afb      	ldrb	r3, [r7, #11]
 8009f6c:	2b00      	cmp	r3, #0
 8009f6e:	d11e      	bne.n	8009fae <USBD_GetDescriptor+0x2ca>
  {
    return;
  }

  if (req->wLength != 0U)
 8009f70:	683b      	ldr	r3, [r7, #0]
 8009f72:	88db      	ldrh	r3, [r3, #6]
 8009f74:	2b00      	cmp	r3, #0
 8009f76:	d016      	beq.n	8009fa6 <USBD_GetDescriptor+0x2c2>
  {
    if (len != 0U)
 8009f78:	893b      	ldrh	r3, [r7, #8]
 8009f7a:	2b00      	cmp	r3, #0
 8009f7c:	d00e      	beq.n	8009f9c <USBD_GetDescriptor+0x2b8>
    {
      len = MIN(len, req->wLength);
 8009f7e:	683b      	ldr	r3, [r7, #0]
 8009f80:	88da      	ldrh	r2, [r3, #6]
 8009f82:	893b      	ldrh	r3, [r7, #8]
 8009f84:	4293      	cmp	r3, r2
 8009f86:	bf28      	it	cs
 8009f88:	4613      	movcs	r3, r2
 8009f8a:	b29b      	uxth	r3, r3
 8009f8c:	813b      	strh	r3, [r7, #8]
      (void)USBD_CtlSendData(pdev, pbuf, len);
 8009f8e:	893b      	ldrh	r3, [r7, #8]
 8009f90:	461a      	mov	r2, r3
 8009f92:	68f9      	ldr	r1, [r7, #12]
 8009f94:	6878      	ldr	r0, [r7, #4]
 8009f96:	f000 fa5d 	bl	800a454 <USBD_CtlSendData>
 8009f9a:	e009      	b.n	8009fb0 <USBD_GetDescriptor+0x2cc>
    }
    else
    {
      USBD_CtlError(pdev, req);
 8009f9c:	6839      	ldr	r1, [r7, #0]
 8009f9e:	6878      	ldr	r0, [r7, #4]
 8009fa0:	f000 f9e7 	bl	800a372 <USBD_CtlError>
 8009fa4:	e004      	b.n	8009fb0 <USBD_GetDescriptor+0x2cc>
    }
  }
  else
  {
    (void)USBD_CtlSendStatus(pdev);
 8009fa6:	6878      	ldr	r0, [r7, #4]
 8009fa8:	f000 faae 	bl	800a508 <USBD_CtlSendStatus>
 8009fac:	e000      	b.n	8009fb0 <USBD_GetDescriptor+0x2cc>
    return;
 8009fae:	bf00      	nop
  }
}
 8009fb0:	3710      	adds	r7, #16
 8009fb2:	46bd      	mov	sp, r7
 8009fb4:	bd80      	pop	{r7, pc}
 8009fb6:	bf00      	nop

08009fb8 <USBD_SetAddress>:
  * @param  pdev: device instance
  * @param  req: usb request
  * @retval status
  */
static void USBD_SetAddress(USBD_HandleTypeDef *pdev, USBD_SetupReqTypedef *req)
{
 8009fb8:	b580      	push	{r7, lr}
 8009fba:	b084      	sub	sp, #16
 8009fbc:	af00      	add	r7, sp, #0
 8009fbe:	6078      	str	r0, [r7, #4]
 8009fc0:	6039      	str	r1, [r7, #0]
  uint8_t  dev_addr;

  if ((req->wIndex == 0U) && (req->wLength == 0U) && (req->wValue < 128U))
 8009fc2:	683b      	ldr	r3, [r7, #0]
 8009fc4:	889b      	ldrh	r3, [r3, #4]
 8009fc6:	2b00      	cmp	r3, #0
 8009fc8:	d131      	bne.n	800a02e <USBD_SetAddress+0x76>
 8009fca:	683b      	ldr	r3, [r7, #0]
 8009fcc:	88db      	ldrh	r3, [r3, #6]
 8009fce:	2b00      	cmp	r3, #0
 8009fd0:	d12d      	bne.n	800a02e <USBD_SetAddress+0x76>
 8009fd2:	683b      	ldr	r3, [r7, #0]
 8009fd4:	885b      	ldrh	r3, [r3, #2]
 8009fd6:	2b7f      	cmp	r3, #127	; 0x7f
 8009fd8:	d829      	bhi.n	800a02e <USBD_SetAddress+0x76>
  {
    dev_addr = (uint8_t)(req->wValue) & 0x7FU;
 8009fda:	683b      	ldr	r3, [r7, #0]
 8009fdc:	885b      	ldrh	r3, [r3, #2]
 8009fde:	b2db      	uxtb	r3, r3
 8009fe0:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 8009fe4:	73fb      	strb	r3, [r7, #15]

    if (pdev->dev_state == USBD_STATE_CONFIGURED)
 8009fe6:	687b      	ldr	r3, [r7, #4]
 8009fe8:	f893 329c 	ldrb.w	r3, [r3, #668]	; 0x29c
 8009fec:	b2db      	uxtb	r3, r3
 8009fee:	2b03      	cmp	r3, #3
 8009ff0:	d104      	bne.n	8009ffc <USBD_SetAddress+0x44>
    {
      USBD_CtlError(pdev, req);
 8009ff2:	6839      	ldr	r1, [r7, #0]
 8009ff4:	6878      	ldr	r0, [r7, #4]
 8009ff6:	f000 f9bc 	bl	800a372 <USBD_CtlError>
    if (pdev->dev_state == USBD_STATE_CONFIGURED)
 8009ffa:	e01d      	b.n	800a038 <USBD_SetAddress+0x80>
    }
    else
    {
      pdev->dev_address = dev_addr;
 8009ffc:	687b      	ldr	r3, [r7, #4]
 8009ffe:	7bfa      	ldrb	r2, [r7, #15]
 800a000:	f883 229e 	strb.w	r2, [r3, #670]	; 0x29e
      (void)USBD_LL_SetUSBAddress(pdev, dev_addr);
 800a004:	7bfb      	ldrb	r3, [r7, #15]
 800a006:	4619      	mov	r1, r3
 800a008:	6878      	ldr	r0, [r7, #4]
 800a00a:	f007 feab 	bl	8011d64 <USBD_LL_SetUSBAddress>
      (void)USBD_CtlSendStatus(pdev);
 800a00e:	6878      	ldr	r0, [r7, #4]
 800a010:	f000 fa7a 	bl	800a508 <USBD_CtlSendStatus>

      if (dev_addr != 0U)
 800a014:	7bfb      	ldrb	r3, [r7, #15]
 800a016:	2b00      	cmp	r3, #0
 800a018:	d004      	beq.n	800a024 <USBD_SetAddress+0x6c>
      {
        pdev->dev_state = USBD_STATE_ADDRESSED;
 800a01a:	687b      	ldr	r3, [r7, #4]
 800a01c:	2202      	movs	r2, #2
 800a01e:	f883 229c 	strb.w	r2, [r3, #668]	; 0x29c
    if (pdev->dev_state == USBD_STATE_CONFIGURED)
 800a022:	e009      	b.n	800a038 <USBD_SetAddress+0x80>
      }
      else
      {
        pdev->dev_state = USBD_STATE_DEFAULT;
 800a024:	687b      	ldr	r3, [r7, #4]
 800a026:	2201      	movs	r2, #1
 800a028:	f883 229c 	strb.w	r2, [r3, #668]	; 0x29c
    if (pdev->dev_state == USBD_STATE_CONFIGURED)
 800a02c:	e004      	b.n	800a038 <USBD_SetAddress+0x80>
      }
    }
  }
  else
  {
    USBD_CtlError(pdev, req);
 800a02e:	6839      	ldr	r1, [r7, #0]
 800a030:	6878      	ldr	r0, [r7, #4]
 800a032:	f000 f99e 	bl	800a372 <USBD_CtlError>
  }
}
 800a036:	bf00      	nop
 800a038:	bf00      	nop
 800a03a:	3710      	adds	r7, #16
 800a03c:	46bd      	mov	sp, r7
 800a03e:	bd80      	pop	{r7, pc}

0800a040 <USBD_SetConfig>:
  * @param  pdev: device instance
  * @param  req: usb request
  * @retval status
  */
static USBD_StatusTypeDef USBD_SetConfig(USBD_HandleTypeDef *pdev, USBD_SetupReqTypedef *req)
{
 800a040:	b580      	push	{r7, lr}
 800a042:	b084      	sub	sp, #16
 800a044:	af00      	add	r7, sp, #0
 800a046:	6078      	str	r0, [r7, #4]
 800a048:	6039      	str	r1, [r7, #0]
  USBD_StatusTypeDef ret = USBD_OK;
 800a04a:	2300      	movs	r3, #0
 800a04c:	73fb      	strb	r3, [r7, #15]
  static uint8_t cfgidx;

  cfgidx = (uint8_t)(req->wValue);
 800a04e:	683b      	ldr	r3, [r7, #0]
 800a050:	885b      	ldrh	r3, [r3, #2]
 800a052:	b2da      	uxtb	r2, r3
 800a054:	4b4e      	ldr	r3, [pc, #312]	; (800a190 <USBD_SetConfig+0x150>)
 800a056:	701a      	strb	r2, [r3, #0]

  if (cfgidx > USBD_MAX_NUM_CONFIGURATION)
 800a058:	4b4d      	ldr	r3, [pc, #308]	; (800a190 <USBD_SetConfig+0x150>)
 800a05a:	781b      	ldrb	r3, [r3, #0]
 800a05c:	2b01      	cmp	r3, #1
 800a05e:	d905      	bls.n	800a06c <USBD_SetConfig+0x2c>
  {
    USBD_CtlError(pdev, req);
 800a060:	6839      	ldr	r1, [r7, #0]
 800a062:	6878      	ldr	r0, [r7, #4]
 800a064:	f000 f985 	bl	800a372 <USBD_CtlError>
    return USBD_FAIL;
 800a068:	2303      	movs	r3, #3
 800a06a:	e08c      	b.n	800a186 <USBD_SetConfig+0x146>
  }

  switch (pdev->dev_state)
 800a06c:	687b      	ldr	r3, [r7, #4]
 800a06e:	f893 329c 	ldrb.w	r3, [r3, #668]	; 0x29c
 800a072:	b2db      	uxtb	r3, r3
 800a074:	2b02      	cmp	r3, #2
 800a076:	d002      	beq.n	800a07e <USBD_SetConfig+0x3e>
 800a078:	2b03      	cmp	r3, #3
 800a07a:	d029      	beq.n	800a0d0 <USBD_SetConfig+0x90>
 800a07c:	e075      	b.n	800a16a <USBD_SetConfig+0x12a>
  {
    case USBD_STATE_ADDRESSED:
      if (cfgidx != 0U)
 800a07e:	4b44      	ldr	r3, [pc, #272]	; (800a190 <USBD_SetConfig+0x150>)
 800a080:	781b      	ldrb	r3, [r3, #0]
 800a082:	2b00      	cmp	r3, #0
 800a084:	d020      	beq.n	800a0c8 <USBD_SetConfig+0x88>
      {
        pdev->dev_config = cfgidx;
 800a086:	4b42      	ldr	r3, [pc, #264]	; (800a190 <USBD_SetConfig+0x150>)
 800a088:	781b      	ldrb	r3, [r3, #0]
 800a08a:	461a      	mov	r2, r3
 800a08c:	687b      	ldr	r3, [r7, #4]
 800a08e:	605a      	str	r2, [r3, #4]

        ret = USBD_SetClassConfig(pdev, cfgidx);
 800a090:	4b3f      	ldr	r3, [pc, #252]	; (800a190 <USBD_SetConfig+0x150>)
 800a092:	781b      	ldrb	r3, [r3, #0]
 800a094:	4619      	mov	r1, r3
 800a096:	6878      	ldr	r0, [r7, #4]
 800a098:	f7fe ffe1 	bl	800905e <USBD_SetClassConfig>
 800a09c:	4603      	mov	r3, r0
 800a09e:	73fb      	strb	r3, [r7, #15]

        if (ret != USBD_OK)
 800a0a0:	7bfb      	ldrb	r3, [r7, #15]
 800a0a2:	2b00      	cmp	r3, #0
 800a0a4:	d008      	beq.n	800a0b8 <USBD_SetConfig+0x78>
        {
          USBD_CtlError(pdev, req);
 800a0a6:	6839      	ldr	r1, [r7, #0]
 800a0a8:	6878      	ldr	r0, [r7, #4]
 800a0aa:	f000 f962 	bl	800a372 <USBD_CtlError>
          pdev->dev_state = USBD_STATE_ADDRESSED;
 800a0ae:	687b      	ldr	r3, [r7, #4]
 800a0b0:	2202      	movs	r2, #2
 800a0b2:	f883 229c 	strb.w	r2, [r3, #668]	; 0x29c
      }
      else
      {
        (void)USBD_CtlSendStatus(pdev);
      }
      break;
 800a0b6:	e065      	b.n	800a184 <USBD_SetConfig+0x144>
          (void)USBD_CtlSendStatus(pdev);
 800a0b8:	6878      	ldr	r0, [r7, #4]
 800a0ba:	f000 fa25 	bl	800a508 <USBD_CtlSendStatus>
          pdev->dev_state = USBD_STATE_CONFIGURED;
 800a0be:	687b      	ldr	r3, [r7, #4]
 800a0c0:	2203      	movs	r2, #3
 800a0c2:	f883 229c 	strb.w	r2, [r3, #668]	; 0x29c
      break;
 800a0c6:	e05d      	b.n	800a184 <USBD_SetConfig+0x144>
        (void)USBD_CtlSendStatus(pdev);
 800a0c8:	6878      	ldr	r0, [r7, #4]
 800a0ca:	f000 fa1d 	bl	800a508 <USBD_CtlSendStatus>
      break;
 800a0ce:	e059      	b.n	800a184 <USBD_SetConfig+0x144>

    case USBD_STATE_CONFIGURED:
      if (cfgidx == 0U)
 800a0d0:	4b2f      	ldr	r3, [pc, #188]	; (800a190 <USBD_SetConfig+0x150>)
 800a0d2:	781b      	ldrb	r3, [r3, #0]
 800a0d4:	2b00      	cmp	r3, #0
 800a0d6:	d112      	bne.n	800a0fe <USBD_SetConfig+0xbe>
      {
        pdev->dev_state = USBD_STATE_ADDRESSED;
 800a0d8:	687b      	ldr	r3, [r7, #4]
 800a0da:	2202      	movs	r2, #2
 800a0dc:	f883 229c 	strb.w	r2, [r3, #668]	; 0x29c
        pdev->dev_config = cfgidx;
 800a0e0:	4b2b      	ldr	r3, [pc, #172]	; (800a190 <USBD_SetConfig+0x150>)
 800a0e2:	781b      	ldrb	r3, [r3, #0]
 800a0e4:	461a      	mov	r2, r3
 800a0e6:	687b      	ldr	r3, [r7, #4]
 800a0e8:	605a      	str	r2, [r3, #4]
        (void)USBD_ClrClassConfig(pdev, cfgidx);
 800a0ea:	4b29      	ldr	r3, [pc, #164]	; (800a190 <USBD_SetConfig+0x150>)
 800a0ec:	781b      	ldrb	r3, [r3, #0]
 800a0ee:	4619      	mov	r1, r3
 800a0f0:	6878      	ldr	r0, [r7, #4]
 800a0f2:	f7fe ffd0 	bl	8009096 <USBD_ClrClassConfig>
        (void)USBD_CtlSendStatus(pdev);
 800a0f6:	6878      	ldr	r0, [r7, #4]
 800a0f8:	f000 fa06 	bl	800a508 <USBD_CtlSendStatus>
      }
      else
      {
        (void)USBD_CtlSendStatus(pdev);
      }
      break;
 800a0fc:	e042      	b.n	800a184 <USBD_SetConfig+0x144>
      else if (cfgidx != pdev->dev_config)
 800a0fe:	4b24      	ldr	r3, [pc, #144]	; (800a190 <USBD_SetConfig+0x150>)
 800a100:	781b      	ldrb	r3, [r3, #0]
 800a102:	461a      	mov	r2, r3
 800a104:	687b      	ldr	r3, [r7, #4]
 800a106:	685b      	ldr	r3, [r3, #4]
 800a108:	429a      	cmp	r2, r3
 800a10a:	d02a      	beq.n	800a162 <USBD_SetConfig+0x122>
        (void)USBD_ClrClassConfig(pdev, (uint8_t)pdev->dev_config);
 800a10c:	687b      	ldr	r3, [r7, #4]
 800a10e:	685b      	ldr	r3, [r3, #4]
 800a110:	b2db      	uxtb	r3, r3
 800a112:	4619      	mov	r1, r3
 800a114:	6878      	ldr	r0, [r7, #4]
 800a116:	f7fe ffbe 	bl	8009096 <USBD_ClrClassConfig>
        pdev->dev_config = cfgidx;
 800a11a:	4b1d      	ldr	r3, [pc, #116]	; (800a190 <USBD_SetConfig+0x150>)
 800a11c:	781b      	ldrb	r3, [r3, #0]
 800a11e:	461a      	mov	r2, r3
 800a120:	687b      	ldr	r3, [r7, #4]
 800a122:	605a      	str	r2, [r3, #4]
        ret = USBD_SetClassConfig(pdev, cfgidx);
 800a124:	4b1a      	ldr	r3, [pc, #104]	; (800a190 <USBD_SetConfig+0x150>)
 800a126:	781b      	ldrb	r3, [r3, #0]
 800a128:	4619      	mov	r1, r3
 800a12a:	6878      	ldr	r0, [r7, #4]
 800a12c:	f7fe ff97 	bl	800905e <USBD_SetClassConfig>
 800a130:	4603      	mov	r3, r0
 800a132:	73fb      	strb	r3, [r7, #15]
        if (ret != USBD_OK)
 800a134:	7bfb      	ldrb	r3, [r7, #15]
 800a136:	2b00      	cmp	r3, #0
 800a138:	d00f      	beq.n	800a15a <USBD_SetConfig+0x11a>
          USBD_CtlError(pdev, req);
 800a13a:	6839      	ldr	r1, [r7, #0]
 800a13c:	6878      	ldr	r0, [r7, #4]
 800a13e:	f000 f918 	bl	800a372 <USBD_CtlError>
          (void)USBD_ClrClassConfig(pdev, (uint8_t)pdev->dev_config);
 800a142:	687b      	ldr	r3, [r7, #4]
 800a144:	685b      	ldr	r3, [r3, #4]
 800a146:	b2db      	uxtb	r3, r3
 800a148:	4619      	mov	r1, r3
 800a14a:	6878      	ldr	r0, [r7, #4]
 800a14c:	f7fe ffa3 	bl	8009096 <USBD_ClrClassConfig>
          pdev->dev_state = USBD_STATE_ADDRESSED;
 800a150:	687b      	ldr	r3, [r7, #4]
 800a152:	2202      	movs	r2, #2
 800a154:	f883 229c 	strb.w	r2, [r3, #668]	; 0x29c
      break;
 800a158:	e014      	b.n	800a184 <USBD_SetConfig+0x144>
          (void)USBD_CtlSendStatus(pdev);
 800a15a:	6878      	ldr	r0, [r7, #4]
 800a15c:	f000 f9d4 	bl	800a508 <USBD_CtlSendStatus>
      break;
 800a160:	e010      	b.n	800a184 <USBD_SetConfig+0x144>
        (void)USBD_CtlSendStatus(pdev);
 800a162:	6878      	ldr	r0, [r7, #4]
 800a164:	f000 f9d0 	bl	800a508 <USBD_CtlSendStatus>
      break;
 800a168:	e00c      	b.n	800a184 <USBD_SetConfig+0x144>

    default:
      USBD_CtlError(pdev, req);
 800a16a:	6839      	ldr	r1, [r7, #0]
 800a16c:	6878      	ldr	r0, [r7, #4]
 800a16e:	f000 f900 	bl	800a372 <USBD_CtlError>
      (void)USBD_ClrClassConfig(pdev, cfgidx);
 800a172:	4b07      	ldr	r3, [pc, #28]	; (800a190 <USBD_SetConfig+0x150>)
 800a174:	781b      	ldrb	r3, [r3, #0]
 800a176:	4619      	mov	r1, r3
 800a178:	6878      	ldr	r0, [r7, #4]
 800a17a:	f7fe ff8c 	bl	8009096 <USBD_ClrClassConfig>
      ret = USBD_FAIL;
 800a17e:	2303      	movs	r3, #3
 800a180:	73fb      	strb	r3, [r7, #15]
      break;
 800a182:	bf00      	nop
  }

  return ret;
 800a184:	7bfb      	ldrb	r3, [r7, #15]
}
 800a186:	4618      	mov	r0, r3
 800a188:	3710      	adds	r7, #16
 800a18a:	46bd      	mov	sp, r7
 800a18c:	bd80      	pop	{r7, pc}
 800a18e:	bf00      	nop
 800a190:	20000628 	.word	0x20000628

0800a194 <USBD_GetConfig>:
  * @param  pdev: device instance
  * @param  req: usb request
  * @retval status
  */
static void USBD_GetConfig(USBD_HandleTypeDef *pdev, USBD_SetupReqTypedef *req)
{
 800a194:	b580      	push	{r7, lr}
 800a196:	b082      	sub	sp, #8
 800a198:	af00      	add	r7, sp, #0
 800a19a:	6078      	str	r0, [r7, #4]
 800a19c:	6039      	str	r1, [r7, #0]
  if (req->wLength != 1U)
 800a19e:	683b      	ldr	r3, [r7, #0]
 800a1a0:	88db      	ldrh	r3, [r3, #6]
 800a1a2:	2b01      	cmp	r3, #1
 800a1a4:	d004      	beq.n	800a1b0 <USBD_GetConfig+0x1c>
  {
    USBD_CtlError(pdev, req);
 800a1a6:	6839      	ldr	r1, [r7, #0]
 800a1a8:	6878      	ldr	r0, [r7, #4]
 800a1aa:	f000 f8e2 	bl	800a372 <USBD_CtlError>
      default:
        USBD_CtlError(pdev, req);
        break;
    }
  }
}
 800a1ae:	e023      	b.n	800a1f8 <USBD_GetConfig+0x64>
    switch (pdev->dev_state)
 800a1b0:	687b      	ldr	r3, [r7, #4]
 800a1b2:	f893 329c 	ldrb.w	r3, [r3, #668]	; 0x29c
 800a1b6:	b2db      	uxtb	r3, r3
 800a1b8:	2b02      	cmp	r3, #2
 800a1ba:	dc02      	bgt.n	800a1c2 <USBD_GetConfig+0x2e>
 800a1bc:	2b00      	cmp	r3, #0
 800a1be:	dc03      	bgt.n	800a1c8 <USBD_GetConfig+0x34>
 800a1c0:	e015      	b.n	800a1ee <USBD_GetConfig+0x5a>
 800a1c2:	2b03      	cmp	r3, #3
 800a1c4:	d00b      	beq.n	800a1de <USBD_GetConfig+0x4a>
 800a1c6:	e012      	b.n	800a1ee <USBD_GetConfig+0x5a>
        pdev->dev_default_config = 0U;
 800a1c8:	687b      	ldr	r3, [r7, #4]
 800a1ca:	2200      	movs	r2, #0
 800a1cc:	609a      	str	r2, [r3, #8]
        (void)USBD_CtlSendData(pdev, (uint8_t *)&pdev->dev_default_config, 1U);
 800a1ce:	687b      	ldr	r3, [r7, #4]
 800a1d0:	3308      	adds	r3, #8
 800a1d2:	2201      	movs	r2, #1
 800a1d4:	4619      	mov	r1, r3
 800a1d6:	6878      	ldr	r0, [r7, #4]
 800a1d8:	f000 f93c 	bl	800a454 <USBD_CtlSendData>
        break;
 800a1dc:	e00c      	b.n	800a1f8 <USBD_GetConfig+0x64>
        (void)USBD_CtlSendData(pdev, (uint8_t *)&pdev->dev_config, 1U);
 800a1de:	687b      	ldr	r3, [r7, #4]
 800a1e0:	3304      	adds	r3, #4
 800a1e2:	2201      	movs	r2, #1
 800a1e4:	4619      	mov	r1, r3
 800a1e6:	6878      	ldr	r0, [r7, #4]
 800a1e8:	f000 f934 	bl	800a454 <USBD_CtlSendData>
        break;
 800a1ec:	e004      	b.n	800a1f8 <USBD_GetConfig+0x64>
        USBD_CtlError(pdev, req);
 800a1ee:	6839      	ldr	r1, [r7, #0]
 800a1f0:	6878      	ldr	r0, [r7, #4]
 800a1f2:	f000 f8be 	bl	800a372 <USBD_CtlError>
        break;
 800a1f6:	bf00      	nop
}
 800a1f8:	bf00      	nop
 800a1fa:	3708      	adds	r7, #8
 800a1fc:	46bd      	mov	sp, r7
 800a1fe:	bd80      	pop	{r7, pc}

0800a200 <USBD_GetStatus>:
  * @param  pdev: device instance
  * @param  req: usb request
  * @retval status
  */
static void USBD_GetStatus(USBD_HandleTypeDef *pdev, USBD_SetupReqTypedef *req)
{
 800a200:	b580      	push	{r7, lr}
 800a202:	b082      	sub	sp, #8
 800a204:	af00      	add	r7, sp, #0
 800a206:	6078      	str	r0, [r7, #4]
 800a208:	6039      	str	r1, [r7, #0]
  switch (pdev->dev_state)
 800a20a:	687b      	ldr	r3, [r7, #4]
 800a20c:	f893 329c 	ldrb.w	r3, [r3, #668]	; 0x29c
 800a210:	b2db      	uxtb	r3, r3
 800a212:	3b01      	subs	r3, #1
 800a214:	2b02      	cmp	r3, #2
 800a216:	d81e      	bhi.n	800a256 <USBD_GetStatus+0x56>
  {
    case USBD_STATE_DEFAULT:
    case USBD_STATE_ADDRESSED:
    case USBD_STATE_CONFIGURED:
      if (req->wLength != 0x2U)
 800a218:	683b      	ldr	r3, [r7, #0]
 800a21a:	88db      	ldrh	r3, [r3, #6]
 800a21c:	2b02      	cmp	r3, #2
 800a21e:	d004      	beq.n	800a22a <USBD_GetStatus+0x2a>
      {
        USBD_CtlError(pdev, req);
 800a220:	6839      	ldr	r1, [r7, #0]
 800a222:	6878      	ldr	r0, [r7, #4]
 800a224:	f000 f8a5 	bl	800a372 <USBD_CtlError>
        break;
 800a228:	e01a      	b.n	800a260 <USBD_GetStatus+0x60>
      }

#if (USBD_SELF_POWERED == 1U)
      pdev->dev_config_status = USB_CONFIG_SELF_POWERED;
 800a22a:	687b      	ldr	r3, [r7, #4]
 800a22c:	2201      	movs	r2, #1
 800a22e:	60da      	str	r2, [r3, #12]
#else
      pdev->dev_config_status = 0U;
#endif /* USBD_SELF_POWERED */

      if (pdev->dev_remote_wakeup != 0U)
 800a230:	687b      	ldr	r3, [r7, #4]
 800a232:	f8d3 32a4 	ldr.w	r3, [r3, #676]	; 0x2a4
 800a236:	2b00      	cmp	r3, #0
 800a238:	d005      	beq.n	800a246 <USBD_GetStatus+0x46>
      {
        pdev->dev_config_status |= USB_CONFIG_REMOTE_WAKEUP;
 800a23a:	687b      	ldr	r3, [r7, #4]
 800a23c:	68db      	ldr	r3, [r3, #12]
 800a23e:	f043 0202 	orr.w	r2, r3, #2
 800a242:	687b      	ldr	r3, [r7, #4]
 800a244:	60da      	str	r2, [r3, #12]
      }

      (void)USBD_CtlSendData(pdev, (uint8_t *)&pdev->dev_config_status, 2U);
 800a246:	687b      	ldr	r3, [r7, #4]
 800a248:	330c      	adds	r3, #12
 800a24a:	2202      	movs	r2, #2
 800a24c:	4619      	mov	r1, r3
 800a24e:	6878      	ldr	r0, [r7, #4]
 800a250:	f000 f900 	bl	800a454 <USBD_CtlSendData>
      break;
 800a254:	e004      	b.n	800a260 <USBD_GetStatus+0x60>

    default:
      USBD_CtlError(pdev, req);
 800a256:	6839      	ldr	r1, [r7, #0]
 800a258:	6878      	ldr	r0, [r7, #4]
 800a25a:	f000 f88a 	bl	800a372 <USBD_CtlError>
      break;
 800a25e:	bf00      	nop
  }
}
 800a260:	bf00      	nop
 800a262:	3708      	adds	r7, #8
 800a264:	46bd      	mov	sp, r7
 800a266:	bd80      	pop	{r7, pc}

0800a268 <USBD_SetFeature>:
  * @param  pdev: device instance
  * @param  req: usb request
  * @retval status
  */
static void USBD_SetFeature(USBD_HandleTypeDef *pdev, USBD_SetupReqTypedef *req)
{
 800a268:	b580      	push	{r7, lr}
 800a26a:	b082      	sub	sp, #8
 800a26c:	af00      	add	r7, sp, #0
 800a26e:	6078      	str	r0, [r7, #4]
 800a270:	6039      	str	r1, [r7, #0]
  if (req->wValue == USB_FEATURE_REMOTE_WAKEUP)
 800a272:	683b      	ldr	r3, [r7, #0]
 800a274:	885b      	ldrh	r3, [r3, #2]
 800a276:	2b01      	cmp	r3, #1
 800a278:	d107      	bne.n	800a28a <USBD_SetFeature+0x22>
  {
    pdev->dev_remote_wakeup = 1U;
 800a27a:	687b      	ldr	r3, [r7, #4]
 800a27c:	2201      	movs	r2, #1
 800a27e:	f8c3 22a4 	str.w	r2, [r3, #676]	; 0x2a4
    (void)USBD_CtlSendStatus(pdev);
 800a282:	6878      	ldr	r0, [r7, #4]
 800a284:	f000 f940 	bl	800a508 <USBD_CtlSendStatus>
  }
  else
  {
    USBD_CtlError(pdev, req);
  }
}
 800a288:	e013      	b.n	800a2b2 <USBD_SetFeature+0x4a>
  else if (req->wValue == USB_FEATURE_TEST_MODE)
 800a28a:	683b      	ldr	r3, [r7, #0]
 800a28c:	885b      	ldrh	r3, [r3, #2]
 800a28e:	2b02      	cmp	r3, #2
 800a290:	d10b      	bne.n	800a2aa <USBD_SetFeature+0x42>
    pdev->dev_test_mode = (uint8_t)(req->wIndex >> 8);
 800a292:	683b      	ldr	r3, [r7, #0]
 800a294:	889b      	ldrh	r3, [r3, #4]
 800a296:	0a1b      	lsrs	r3, r3, #8
 800a298:	b29b      	uxth	r3, r3
 800a29a:	b2da      	uxtb	r2, r3
 800a29c:	687b      	ldr	r3, [r7, #4]
 800a29e:	f883 22a0 	strb.w	r2, [r3, #672]	; 0x2a0
    (void)USBD_CtlSendStatus(pdev);
 800a2a2:	6878      	ldr	r0, [r7, #4]
 800a2a4:	f000 f930 	bl	800a508 <USBD_CtlSendStatus>
}
 800a2a8:	e003      	b.n	800a2b2 <USBD_SetFeature+0x4a>
    USBD_CtlError(pdev, req);
 800a2aa:	6839      	ldr	r1, [r7, #0]
 800a2ac:	6878      	ldr	r0, [r7, #4]
 800a2ae:	f000 f860 	bl	800a372 <USBD_CtlError>
}
 800a2b2:	bf00      	nop
 800a2b4:	3708      	adds	r7, #8
 800a2b6:	46bd      	mov	sp, r7
 800a2b8:	bd80      	pop	{r7, pc}

0800a2ba <USBD_ClrFeature>:
  * @param  pdev: device instance
  * @param  req: usb request
  * @retval status
  */
static void USBD_ClrFeature(USBD_HandleTypeDef *pdev, USBD_SetupReqTypedef *req)
{
 800a2ba:	b580      	push	{r7, lr}
 800a2bc:	b082      	sub	sp, #8
 800a2be:	af00      	add	r7, sp, #0
 800a2c0:	6078      	str	r0, [r7, #4]
 800a2c2:	6039      	str	r1, [r7, #0]
  switch (pdev->dev_state)
 800a2c4:	687b      	ldr	r3, [r7, #4]
 800a2c6:	f893 329c 	ldrb.w	r3, [r3, #668]	; 0x29c
 800a2ca:	b2db      	uxtb	r3, r3
 800a2cc:	3b01      	subs	r3, #1
 800a2ce:	2b02      	cmp	r3, #2
 800a2d0:	d80b      	bhi.n	800a2ea <USBD_ClrFeature+0x30>
  {
    case USBD_STATE_DEFAULT:
    case USBD_STATE_ADDRESSED:
    case USBD_STATE_CONFIGURED:
      if (req->wValue == USB_FEATURE_REMOTE_WAKEUP)
 800a2d2:	683b      	ldr	r3, [r7, #0]
 800a2d4:	885b      	ldrh	r3, [r3, #2]
 800a2d6:	2b01      	cmp	r3, #1
 800a2d8:	d10c      	bne.n	800a2f4 <USBD_ClrFeature+0x3a>
      {
        pdev->dev_remote_wakeup = 0U;
 800a2da:	687b      	ldr	r3, [r7, #4]
 800a2dc:	2200      	movs	r2, #0
 800a2de:	f8c3 22a4 	str.w	r2, [r3, #676]	; 0x2a4
        (void)USBD_CtlSendStatus(pdev);
 800a2e2:	6878      	ldr	r0, [r7, #4]
 800a2e4:	f000 f910 	bl	800a508 <USBD_CtlSendStatus>
      }
      break;
 800a2e8:	e004      	b.n	800a2f4 <USBD_ClrFeature+0x3a>

    default:
      USBD_CtlError(pdev, req);
 800a2ea:	6839      	ldr	r1, [r7, #0]
 800a2ec:	6878      	ldr	r0, [r7, #4]
 800a2ee:	f000 f840 	bl	800a372 <USBD_CtlError>
      break;
 800a2f2:	e000      	b.n	800a2f6 <USBD_ClrFeature+0x3c>
      break;
 800a2f4:	bf00      	nop
  }
}
 800a2f6:	bf00      	nop
 800a2f8:	3708      	adds	r7, #8
 800a2fa:	46bd      	mov	sp, r7
 800a2fc:	bd80      	pop	{r7, pc}

0800a2fe <USBD_ParseSetupRequest>:
  * @param  pdev: device instance
  * @param  req: usb request
  * @retval None
  */
void USBD_ParseSetupRequest(USBD_SetupReqTypedef *req, uint8_t *pdata)
{
 800a2fe:	b580      	push	{r7, lr}
 800a300:	b084      	sub	sp, #16
 800a302:	af00      	add	r7, sp, #0
 800a304:	6078      	str	r0, [r7, #4]
 800a306:	6039      	str	r1, [r7, #0]
  uint8_t *pbuff = pdata;
 800a308:	683b      	ldr	r3, [r7, #0]
 800a30a:	60fb      	str	r3, [r7, #12]

  req->bmRequest = *(uint8_t *)(pbuff);
 800a30c:	68fb      	ldr	r3, [r7, #12]
 800a30e:	781a      	ldrb	r2, [r3, #0]
 800a310:	687b      	ldr	r3, [r7, #4]
 800a312:	701a      	strb	r2, [r3, #0]

  pbuff++;
 800a314:	68fb      	ldr	r3, [r7, #12]
 800a316:	3301      	adds	r3, #1
 800a318:	60fb      	str	r3, [r7, #12]
  req->bRequest = *(uint8_t *)(pbuff);
 800a31a:	68fb      	ldr	r3, [r7, #12]
 800a31c:	781a      	ldrb	r2, [r3, #0]
 800a31e:	687b      	ldr	r3, [r7, #4]
 800a320:	705a      	strb	r2, [r3, #1]

  pbuff++;
 800a322:	68fb      	ldr	r3, [r7, #12]
 800a324:	3301      	adds	r3, #1
 800a326:	60fb      	str	r3, [r7, #12]
  req->wValue = SWAPBYTE(pbuff);
 800a328:	68f8      	ldr	r0, [r7, #12]
 800a32a:	f7ff fa41 	bl	80097b0 <SWAPBYTE>
 800a32e:	4603      	mov	r3, r0
 800a330:	461a      	mov	r2, r3
 800a332:	687b      	ldr	r3, [r7, #4]
 800a334:	805a      	strh	r2, [r3, #2]

  pbuff++;
 800a336:	68fb      	ldr	r3, [r7, #12]
 800a338:	3301      	adds	r3, #1
 800a33a:	60fb      	str	r3, [r7, #12]
  pbuff++;
 800a33c:	68fb      	ldr	r3, [r7, #12]
 800a33e:	3301      	adds	r3, #1
 800a340:	60fb      	str	r3, [r7, #12]
  req->wIndex = SWAPBYTE(pbuff);
 800a342:	68f8      	ldr	r0, [r7, #12]
 800a344:	f7ff fa34 	bl	80097b0 <SWAPBYTE>
 800a348:	4603      	mov	r3, r0
 800a34a:	461a      	mov	r2, r3
 800a34c:	687b      	ldr	r3, [r7, #4]
 800a34e:	809a      	strh	r2, [r3, #4]

  pbuff++;
 800a350:	68fb      	ldr	r3, [r7, #12]
 800a352:	3301      	adds	r3, #1
 800a354:	60fb      	str	r3, [r7, #12]
  pbuff++;
 800a356:	68fb      	ldr	r3, [r7, #12]
 800a358:	3301      	adds	r3, #1
 800a35a:	60fb      	str	r3, [r7, #12]
  req->wLength = SWAPBYTE(pbuff);
 800a35c:	68f8      	ldr	r0, [r7, #12]
 800a35e:	f7ff fa27 	bl	80097b0 <SWAPBYTE>
 800a362:	4603      	mov	r3, r0
 800a364:	461a      	mov	r2, r3
 800a366:	687b      	ldr	r3, [r7, #4]
 800a368:	80da      	strh	r2, [r3, #6]
}
 800a36a:	bf00      	nop
 800a36c:	3710      	adds	r7, #16
 800a36e:	46bd      	mov	sp, r7
 800a370:	bd80      	pop	{r7, pc}

0800a372 <USBD_CtlError>:
  * @param  pdev: device instance
  * @param  req: usb request
  * @retval None
  */
void USBD_CtlError(USBD_HandleTypeDef *pdev, USBD_SetupReqTypedef *req)
{
 800a372:	b580      	push	{r7, lr}
 800a374:	b082      	sub	sp, #8
 800a376:	af00      	add	r7, sp, #0
 800a378:	6078      	str	r0, [r7, #4]
 800a37a:	6039      	str	r1, [r7, #0]
  UNUSED(req);

  (void)USBD_LL_StallEP(pdev, 0x80U);
 800a37c:	2180      	movs	r1, #128	; 0x80
 800a37e:	6878      	ldr	r0, [r7, #4]
 800a380:	f007 fc86 	bl	8011c90 <USBD_LL_StallEP>
  (void)USBD_LL_StallEP(pdev, 0U);
 800a384:	2100      	movs	r1, #0
 800a386:	6878      	ldr	r0, [r7, #4]
 800a388:	f007 fc82 	bl	8011c90 <USBD_LL_StallEP>
}
 800a38c:	bf00      	nop
 800a38e:	3708      	adds	r7, #8
 800a390:	46bd      	mov	sp, r7
 800a392:	bd80      	pop	{r7, pc}

0800a394 <USBD_GetString>:
  * @param  unicode : Formatted string buffer (unicode)
  * @param  len : descriptor length
  * @retval None
  */
void USBD_GetString(uint8_t *desc, uint8_t *unicode, uint16_t *len)
{
 800a394:	b580      	push	{r7, lr}
 800a396:	b086      	sub	sp, #24
 800a398:	af00      	add	r7, sp, #0
 800a39a:	60f8      	str	r0, [r7, #12]
 800a39c:	60b9      	str	r1, [r7, #8]
 800a39e:	607a      	str	r2, [r7, #4]
  uint8_t idx = 0U;
 800a3a0:	2300      	movs	r3, #0
 800a3a2:	75fb      	strb	r3, [r7, #23]
  uint8_t *pdesc;

  if (desc == NULL)
 800a3a4:	68fb      	ldr	r3, [r7, #12]
 800a3a6:	2b00      	cmp	r3, #0
 800a3a8:	d036      	beq.n	800a418 <USBD_GetString+0x84>
  {
    return;
  }

  pdesc = desc;
 800a3aa:	68fb      	ldr	r3, [r7, #12]
 800a3ac:	613b      	str	r3, [r7, #16]
  *len = ((uint16_t)USBD_GetLen(pdesc) * 2U) + 2U;
 800a3ae:	6938      	ldr	r0, [r7, #16]
 800a3b0:	f000 f836 	bl	800a420 <USBD_GetLen>
 800a3b4:	4603      	mov	r3, r0
 800a3b6:	3301      	adds	r3, #1
 800a3b8:	b29b      	uxth	r3, r3
 800a3ba:	005b      	lsls	r3, r3, #1
 800a3bc:	b29a      	uxth	r2, r3
 800a3be:	687b      	ldr	r3, [r7, #4]
 800a3c0:	801a      	strh	r2, [r3, #0]

  unicode[idx] = *(uint8_t *)len;
 800a3c2:	7dfb      	ldrb	r3, [r7, #23]
 800a3c4:	68ba      	ldr	r2, [r7, #8]
 800a3c6:	4413      	add	r3, r2
 800a3c8:	687a      	ldr	r2, [r7, #4]
 800a3ca:	7812      	ldrb	r2, [r2, #0]
 800a3cc:	701a      	strb	r2, [r3, #0]
  idx++;
 800a3ce:	7dfb      	ldrb	r3, [r7, #23]
 800a3d0:	3301      	adds	r3, #1
 800a3d2:	75fb      	strb	r3, [r7, #23]
  unicode[idx] = USB_DESC_TYPE_STRING;
 800a3d4:	7dfb      	ldrb	r3, [r7, #23]
 800a3d6:	68ba      	ldr	r2, [r7, #8]
 800a3d8:	4413      	add	r3, r2
 800a3da:	2203      	movs	r2, #3
 800a3dc:	701a      	strb	r2, [r3, #0]
  idx++;
 800a3de:	7dfb      	ldrb	r3, [r7, #23]
 800a3e0:	3301      	adds	r3, #1
 800a3e2:	75fb      	strb	r3, [r7, #23]

  while (*pdesc != (uint8_t)'\0')
 800a3e4:	e013      	b.n	800a40e <USBD_GetString+0x7a>
  {
    unicode[idx] = *pdesc;
 800a3e6:	7dfb      	ldrb	r3, [r7, #23]
 800a3e8:	68ba      	ldr	r2, [r7, #8]
 800a3ea:	4413      	add	r3, r2
 800a3ec:	693a      	ldr	r2, [r7, #16]
 800a3ee:	7812      	ldrb	r2, [r2, #0]
 800a3f0:	701a      	strb	r2, [r3, #0]
    pdesc++;
 800a3f2:	693b      	ldr	r3, [r7, #16]
 800a3f4:	3301      	adds	r3, #1
 800a3f6:	613b      	str	r3, [r7, #16]
    idx++;
 800a3f8:	7dfb      	ldrb	r3, [r7, #23]
 800a3fa:	3301      	adds	r3, #1
 800a3fc:	75fb      	strb	r3, [r7, #23]

    unicode[idx] = 0U;
 800a3fe:	7dfb      	ldrb	r3, [r7, #23]
 800a400:	68ba      	ldr	r2, [r7, #8]
 800a402:	4413      	add	r3, r2
 800a404:	2200      	movs	r2, #0
 800a406:	701a      	strb	r2, [r3, #0]
    idx++;
 800a408:	7dfb      	ldrb	r3, [r7, #23]
 800a40a:	3301      	adds	r3, #1
 800a40c:	75fb      	strb	r3, [r7, #23]
  while (*pdesc != (uint8_t)'\0')
 800a40e:	693b      	ldr	r3, [r7, #16]
 800a410:	781b      	ldrb	r3, [r3, #0]
 800a412:	2b00      	cmp	r3, #0
 800a414:	d1e7      	bne.n	800a3e6 <USBD_GetString+0x52>
 800a416:	e000      	b.n	800a41a <USBD_GetString+0x86>
    return;
 800a418:	bf00      	nop
  }
}
 800a41a:	3718      	adds	r7, #24
 800a41c:	46bd      	mov	sp, r7
 800a41e:	bd80      	pop	{r7, pc}

0800a420 <USBD_GetLen>:
  *         return the string length
   * @param  buf : pointer to the ascii string buffer
  * @retval string length
  */
static uint8_t USBD_GetLen(uint8_t *buf)
{
 800a420:	b480      	push	{r7}
 800a422:	b085      	sub	sp, #20
 800a424:	af00      	add	r7, sp, #0
 800a426:	6078      	str	r0, [r7, #4]
  uint8_t  len = 0U;
 800a428:	2300      	movs	r3, #0
 800a42a:	73fb      	strb	r3, [r7, #15]
  uint8_t *pbuff = buf;
 800a42c:	687b      	ldr	r3, [r7, #4]
 800a42e:	60bb      	str	r3, [r7, #8]

  while (*pbuff != (uint8_t)'\0')
 800a430:	e005      	b.n	800a43e <USBD_GetLen+0x1e>
  {
    len++;
 800a432:	7bfb      	ldrb	r3, [r7, #15]
 800a434:	3301      	adds	r3, #1
 800a436:	73fb      	strb	r3, [r7, #15]
    pbuff++;
 800a438:	68bb      	ldr	r3, [r7, #8]
 800a43a:	3301      	adds	r3, #1
 800a43c:	60bb      	str	r3, [r7, #8]
  while (*pbuff != (uint8_t)'\0')
 800a43e:	68bb      	ldr	r3, [r7, #8]
 800a440:	781b      	ldrb	r3, [r3, #0]
 800a442:	2b00      	cmp	r3, #0
 800a444:	d1f5      	bne.n	800a432 <USBD_GetLen+0x12>
  }

  return len;
 800a446:	7bfb      	ldrb	r3, [r7, #15]
}
 800a448:	4618      	mov	r0, r3
 800a44a:	3714      	adds	r7, #20
 800a44c:	46bd      	mov	sp, r7
 800a44e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a452:	4770      	bx	lr

0800a454 <USBD_CtlSendData>:
  * @param  len: length of data to be sent
  * @retval status
  */
USBD_StatusTypeDef USBD_CtlSendData(USBD_HandleTypeDef *pdev,
                                    uint8_t *pbuf, uint32_t len)
{
 800a454:	b580      	push	{r7, lr}
 800a456:	b084      	sub	sp, #16
 800a458:	af00      	add	r7, sp, #0
 800a45a:	60f8      	str	r0, [r7, #12]
 800a45c:	60b9      	str	r1, [r7, #8]
 800a45e:	607a      	str	r2, [r7, #4]
  /* Set EP0 State */
  pdev->ep0_state = USBD_EP0_DATA_IN;
 800a460:	68fb      	ldr	r3, [r7, #12]
 800a462:	2202      	movs	r2, #2
 800a464:	f8c3 2294 	str.w	r2, [r3, #660]	; 0x294
  pdev->ep_in[0].total_length = len;
 800a468:	68fb      	ldr	r3, [r7, #12]
 800a46a:	687a      	ldr	r2, [r7, #4]
 800a46c:	619a      	str	r2, [r3, #24]

#ifdef USBD_AVOID_PACKET_SPLIT_MPS
  pdev->ep_in[0].rem_length = 0U;
#else
  pdev->ep_in[0].rem_length = len;
 800a46e:	68fb      	ldr	r3, [r7, #12]
 800a470:	687a      	ldr	r2, [r7, #4]
 800a472:	61da      	str	r2, [r3, #28]
#endif /* USBD_AVOID_PACKET_SPLIT_MPS */

  /* Start the transfer */
  (void)USBD_LL_Transmit(pdev, 0x00U, pbuf, len);
 800a474:	687b      	ldr	r3, [r7, #4]
 800a476:	68ba      	ldr	r2, [r7, #8]
 800a478:	2100      	movs	r1, #0
 800a47a:	68f8      	ldr	r0, [r7, #12]
 800a47c:	f007 fc91 	bl	8011da2 <USBD_LL_Transmit>

  return USBD_OK;
 800a480:	2300      	movs	r3, #0
}
 800a482:	4618      	mov	r0, r3
 800a484:	3710      	adds	r7, #16
 800a486:	46bd      	mov	sp, r7
 800a488:	bd80      	pop	{r7, pc}

0800a48a <USBD_CtlContinueSendData>:
  * @param  len: length of data to be sent
  * @retval status
  */
USBD_StatusTypeDef USBD_CtlContinueSendData(USBD_HandleTypeDef *pdev,
                                            uint8_t *pbuf, uint32_t len)
{
 800a48a:	b580      	push	{r7, lr}
 800a48c:	b084      	sub	sp, #16
 800a48e:	af00      	add	r7, sp, #0
 800a490:	60f8      	str	r0, [r7, #12]
 800a492:	60b9      	str	r1, [r7, #8]
 800a494:	607a      	str	r2, [r7, #4]
  /* Start the next transfer */
  (void)USBD_LL_Transmit(pdev, 0x00U, pbuf, len);
 800a496:	687b      	ldr	r3, [r7, #4]
 800a498:	68ba      	ldr	r2, [r7, #8]
 800a49a:	2100      	movs	r1, #0
 800a49c:	68f8      	ldr	r0, [r7, #12]
 800a49e:	f007 fc80 	bl	8011da2 <USBD_LL_Transmit>

  return USBD_OK;
 800a4a2:	2300      	movs	r3, #0
}
 800a4a4:	4618      	mov	r0, r3
 800a4a6:	3710      	adds	r7, #16
 800a4a8:	46bd      	mov	sp, r7
 800a4aa:	bd80      	pop	{r7, pc}

0800a4ac <USBD_CtlPrepareRx>:
  * @param  len: length of data to be received
  * @retval status
  */
USBD_StatusTypeDef USBD_CtlPrepareRx(USBD_HandleTypeDef *pdev,
                                     uint8_t *pbuf, uint32_t len)
{
 800a4ac:	b580      	push	{r7, lr}
 800a4ae:	b084      	sub	sp, #16
 800a4b0:	af00      	add	r7, sp, #0
 800a4b2:	60f8      	str	r0, [r7, #12]
 800a4b4:	60b9      	str	r1, [r7, #8]
 800a4b6:	607a      	str	r2, [r7, #4]
  /* Set EP0 State */
  pdev->ep0_state = USBD_EP0_DATA_OUT;
 800a4b8:	68fb      	ldr	r3, [r7, #12]
 800a4ba:	2203      	movs	r2, #3
 800a4bc:	f8c3 2294 	str.w	r2, [r3, #660]	; 0x294
  pdev->ep_out[0].total_length = len;
 800a4c0:	68fb      	ldr	r3, [r7, #12]
 800a4c2:	687a      	ldr	r2, [r7, #4]
 800a4c4:	f8c3 2158 	str.w	r2, [r3, #344]	; 0x158

#ifdef USBD_AVOID_PACKET_SPLIT_MPS
  pdev->ep_out[0].rem_length = 0U;
#else
  pdev->ep_out[0].rem_length = len;
 800a4c8:	68fb      	ldr	r3, [r7, #12]
 800a4ca:	687a      	ldr	r2, [r7, #4]
 800a4cc:	f8c3 215c 	str.w	r2, [r3, #348]	; 0x15c
#endif /* USBD_AVOID_PACKET_SPLIT_MPS */

  /* Start the transfer */
  (void)USBD_LL_PrepareReceive(pdev, 0U, pbuf, len);
 800a4d0:	687b      	ldr	r3, [r7, #4]
 800a4d2:	68ba      	ldr	r2, [r7, #8]
 800a4d4:	2100      	movs	r1, #0
 800a4d6:	68f8      	ldr	r0, [r7, #12]
 800a4d8:	f007 fc84 	bl	8011de4 <USBD_LL_PrepareReceive>

  return USBD_OK;
 800a4dc:	2300      	movs	r3, #0
}
 800a4de:	4618      	mov	r0, r3
 800a4e0:	3710      	adds	r7, #16
 800a4e2:	46bd      	mov	sp, r7
 800a4e4:	bd80      	pop	{r7, pc}

0800a4e6 <USBD_CtlContinueRx>:
  * @param  len: length of data to be received
  * @retval status
  */
USBD_StatusTypeDef USBD_CtlContinueRx(USBD_HandleTypeDef *pdev,
                                      uint8_t *pbuf, uint32_t len)
{
 800a4e6:	b580      	push	{r7, lr}
 800a4e8:	b084      	sub	sp, #16
 800a4ea:	af00      	add	r7, sp, #0
 800a4ec:	60f8      	str	r0, [r7, #12]
 800a4ee:	60b9      	str	r1, [r7, #8]
 800a4f0:	607a      	str	r2, [r7, #4]
  (void)USBD_LL_PrepareReceive(pdev, 0U, pbuf, len);
 800a4f2:	687b      	ldr	r3, [r7, #4]
 800a4f4:	68ba      	ldr	r2, [r7, #8]
 800a4f6:	2100      	movs	r1, #0
 800a4f8:	68f8      	ldr	r0, [r7, #12]
 800a4fa:	f007 fc73 	bl	8011de4 <USBD_LL_PrepareReceive>

  return USBD_OK;
 800a4fe:	2300      	movs	r3, #0
}
 800a500:	4618      	mov	r0, r3
 800a502:	3710      	adds	r7, #16
 800a504:	46bd      	mov	sp, r7
 800a506:	bd80      	pop	{r7, pc}

0800a508 <USBD_CtlSendStatus>:
  *         send zero lzngth packet on the ctl pipe
  * @param  pdev: device instance
  * @retval status
  */
USBD_StatusTypeDef USBD_CtlSendStatus(USBD_HandleTypeDef *pdev)
{
 800a508:	b580      	push	{r7, lr}
 800a50a:	b082      	sub	sp, #8
 800a50c:	af00      	add	r7, sp, #0
 800a50e:	6078      	str	r0, [r7, #4]
  /* Set EP0 State */
  pdev->ep0_state = USBD_EP0_STATUS_IN;
 800a510:	687b      	ldr	r3, [r7, #4]
 800a512:	2204      	movs	r2, #4
 800a514:	f8c3 2294 	str.w	r2, [r3, #660]	; 0x294

  /* Start the transfer */
  (void)USBD_LL_Transmit(pdev, 0x00U, NULL, 0U);
 800a518:	2300      	movs	r3, #0
 800a51a:	2200      	movs	r2, #0
 800a51c:	2100      	movs	r1, #0
 800a51e:	6878      	ldr	r0, [r7, #4]
 800a520:	f007 fc3f 	bl	8011da2 <USBD_LL_Transmit>

  return USBD_OK;
 800a524:	2300      	movs	r3, #0
}
 800a526:	4618      	mov	r0, r3
 800a528:	3708      	adds	r7, #8
 800a52a:	46bd      	mov	sp, r7
 800a52c:	bd80      	pop	{r7, pc}

0800a52e <USBD_CtlReceiveStatus>:
  *         receive zero lzngth packet on the ctl pipe
  * @param  pdev: device instance
  * @retval status
  */
USBD_StatusTypeDef USBD_CtlReceiveStatus(USBD_HandleTypeDef *pdev)
{
 800a52e:	b580      	push	{r7, lr}
 800a530:	b082      	sub	sp, #8
 800a532:	af00      	add	r7, sp, #0
 800a534:	6078      	str	r0, [r7, #4]
  /* Set EP0 State */
  pdev->ep0_state = USBD_EP0_STATUS_OUT;
 800a536:	687b      	ldr	r3, [r7, #4]
 800a538:	2205      	movs	r2, #5
 800a53a:	f8c3 2294 	str.w	r2, [r3, #660]	; 0x294

  /* Start the transfer */
  (void)USBD_LL_PrepareReceive(pdev, 0U, NULL, 0U);
 800a53e:	2300      	movs	r3, #0
 800a540:	2200      	movs	r2, #0
 800a542:	2100      	movs	r1, #0
 800a544:	6878      	ldr	r0, [r7, #4]
 800a546:	f007 fc4d 	bl	8011de4 <USBD_LL_PrepareReceive>

  return USBD_OK;
 800a54a:	2300      	movs	r3, #0
}
 800a54c:	4618      	mov	r0, r3
 800a54e:	3708      	adds	r7, #8
 800a550:	46bd      	mov	sp, r7
 800a552:	bd80      	pop	{r7, pc}

0800a554 <MX_TouchGFX_Init>:

/**
 * Initialize TouchGFX application
 */
void MX_TouchGFX_Init(void)
{
 800a554:	b580      	push	{r7, lr}
 800a556:	af00      	add	r7, sp, #0
    // Calling forward to touchgfx_init in C++ domain
    touchgfx_components_init();
 800a558:	f006 f8c4 	bl	80106e4 <touchgfx_components_init>
    touchgfx_init();
 800a55c:	f006 f898 	bl	8010690 <touchgfx_init>
}
 800a560:	bf00      	nop
 800a562:	bd80      	pop	{r7, pc}

0800a564 <MX_TouchGFX_Process>:

/**
 * TouchGFX application entry function
 */
void MX_TouchGFX_Process(void)
{
 800a564:	b580      	push	{r7, lr}
 800a566:	af00      	add	r7, sp, #0
    // Calling forward to touchgfx_taskEntry in C++ domain
    touchgfx_taskEntry();
 800a568:	f006 f8c4 	bl	80106f4 <touchgfx_taskEntry>
}
 800a56c:	bf00      	nop
 800a56e:	bd80      	pop	{r7, pc}

0800a570 <_ZN8touchgfx12FontProviderD1Ev>:
     * @return The font with a font id of fontId.
     */
    virtual Font* getFont(FontId fontId) = 0;

    /** Finalizes an instance of the FontProvider class. */
    virtual ~FontProvider()
 800a570:	b480      	push	{r7}
 800a572:	b083      	sub	sp, #12
 800a574:	af00      	add	r7, sp, #0
 800a576:	6078      	str	r0, [r7, #4]
    {
 800a578:	4a04      	ldr	r2, [pc, #16]	; (800a58c <_ZN8touchgfx12FontProviderD1Ev+0x1c>)
 800a57a:	687b      	ldr	r3, [r7, #4]
 800a57c:	601a      	str	r2, [r3, #0]
    }
 800a57e:	687b      	ldr	r3, [r7, #4]
 800a580:	4618      	mov	r0, r3
 800a582:	370c      	adds	r7, #12
 800a584:	46bd      	mov	sp, r7
 800a586:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a58a:	4770      	bx	lr
 800a58c:	0802e4cc 	.word	0x0802e4cc

0800a590 <_ZN8touchgfx12FontProviderD0Ev>:
    virtual ~FontProvider()
 800a590:	b580      	push	{r7, lr}
 800a592:	b082      	sub	sp, #8
 800a594:	af00      	add	r7, sp, #0
 800a596:	6078      	str	r0, [r7, #4]
    }
 800a598:	6878      	ldr	r0, [r7, #4]
 800a59a:	f7ff ffe9 	bl	800a570 <_ZN8touchgfx12FontProviderD1Ev>
 800a59e:	2104      	movs	r1, #4
 800a5a0:	6878      	ldr	r0, [r7, #4]
 800a5a2:	f01f feda 	bl	802a35a <_ZdlPvj>
 800a5a6:	687b      	ldr	r3, [r7, #4]
 800a5a8:	4618      	mov	r0, r3
 800a5aa:	3708      	adds	r7, #8
 800a5ac:	46bd      	mov	sp, r7
 800a5ae:	bd80      	pop	{r7, pc}

0800a5b0 <_ZN23ApplicationFontProvider7getFontEt>:
#include <fonts/ApplicationFontProvider.hpp>
#include <fonts/GeneratedFont.hpp>
#include <texts/TypedTextDatabase.hpp>

touchgfx::Font* ApplicationFontProvider::getFont(touchgfx::FontId typography)
{
 800a5b0:	b580      	push	{r7, lr}
 800a5b2:	b082      	sub	sp, #8
 800a5b4:	af00      	add	r7, sp, #0
 800a5b6:	6078      	str	r0, [r7, #4]
 800a5b8:	460b      	mov	r3, r1
 800a5ba:	807b      	strh	r3, [r7, #2]
    switch (typography)
 800a5bc:	887b      	ldrh	r3, [r7, #2]
 800a5be:	2b04      	cmp	r3, #4
 800a5c0:	d825      	bhi.n	800a60e <_ZN23ApplicationFontProvider7getFontEt+0x5e>
 800a5c2:	a201      	add	r2, pc, #4	; (adr r2, 800a5c8 <_ZN23ApplicationFontProvider7getFontEt+0x18>)
 800a5c4:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800a5c8:	0800a5dd 	.word	0x0800a5dd
 800a5cc:	0800a5e7 	.word	0x0800a5e7
 800a5d0:	0800a5f1 	.word	0x0800a5f1
 800a5d4:	0800a5fb 	.word	0x0800a5fb
 800a5d8:	0800a605 	.word	0x0800a605
    {
    case Typography::DEFAULT:
        // verdana_18_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[0]);
 800a5dc:	f004 fd3e 	bl	800f05c <_ZN17TypedTextDatabase8getFontsEv>
 800a5e0:	4603      	mov	r3, r0
 800a5e2:	681b      	ldr	r3, [r3, #0]
 800a5e4:	e014      	b.n	800a610 <_ZN23ApplicationFontProvider7getFontEt+0x60>
    case Typography::LARGE:
        // verdanab_16_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[1]);
 800a5e6:	f004 fd39 	bl	800f05c <_ZN17TypedTextDatabase8getFontsEv>
 800a5ea:	4603      	mov	r3, r0
 800a5ec:	685b      	ldr	r3, [r3, #4]
 800a5ee:	e00f      	b.n	800a610 <_ZN23ApplicationFontProvider7getFontEt+0x60>
    case Typography::SMALL:
        // verdana_10_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[2]);
 800a5f0:	f004 fd34 	bl	800f05c <_ZN17TypedTextDatabase8getFontsEv>
 800a5f4:	4603      	mov	r3, r0
 800a5f6:	689b      	ldr	r3, [r3, #8]
 800a5f8:	e00a      	b.n	800a610 <_ZN23ApplicationFontProvider7getFontEt+0x60>
    case Typography::NUMBER:
        // verdanab_27_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[3]);
 800a5fa:	f004 fd2f 	bl	800f05c <_ZN17TypedTextDatabase8getFontsEv>
 800a5fe:	4603      	mov	r3, r0
 800a600:	68db      	ldr	r3, [r3, #12]
 800a602:	e005      	b.n	800a610 <_ZN23ApplicationFontProvider7getFontEt+0x60>
    case Typography::NUMBER2:
        // verdanab_23_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[4]);
 800a604:	f004 fd2a 	bl	800f05c <_ZN17TypedTextDatabase8getFontsEv>
 800a608:	4603      	mov	r3, r0
 800a60a:	691b      	ldr	r3, [r3, #16]
 800a60c:	e000      	b.n	800a610 <_ZN23ApplicationFontProvider7getFontEt+0x60>
    default:
        return 0;
 800a60e:	2300      	movs	r3, #0
    }
}
 800a610:	4618      	mov	r0, r3
 800a612:	3708      	adds	r7, #8
 800a614:	46bd      	mov	sp, r7
 800a616:	bd80      	pop	{r7, pc}

0800a618 <_ZN23ApplicationFontProviderD1Ev>:
    static const touchgfx::FontId NUMBER = 3;  // verdanab_27_4bpp
    static const touchgfx::FontId NUMBER2 = 4; // verdanab_23_4bpp
    static const uint16_t NUMBER_OF_FONTS = 5;
};

class ApplicationFontProvider : public touchgfx::FontProvider
 800a618:	b580      	push	{r7, lr}
 800a61a:	b082      	sub	sp, #8
 800a61c:	af00      	add	r7, sp, #0
 800a61e:	6078      	str	r0, [r7, #4]
 800a620:	4a05      	ldr	r2, [pc, #20]	; (800a638 <_ZN23ApplicationFontProviderD1Ev+0x20>)
 800a622:	687b      	ldr	r3, [r7, #4]
 800a624:	601a      	str	r2, [r3, #0]
 800a626:	687b      	ldr	r3, [r7, #4]
 800a628:	4618      	mov	r0, r3
 800a62a:	f7ff ffa1 	bl	800a570 <_ZN8touchgfx12FontProviderD1Ev>
 800a62e:	687b      	ldr	r3, [r7, #4]
 800a630:	4618      	mov	r0, r3
 800a632:	3708      	adds	r7, #8
 800a634:	46bd      	mov	sp, r7
 800a636:	bd80      	pop	{r7, pc}
 800a638:	0802e4b8 	.word	0x0802e4b8

0800a63c <_ZN23ApplicationFontProviderD0Ev>:
 800a63c:	b580      	push	{r7, lr}
 800a63e:	b082      	sub	sp, #8
 800a640:	af00      	add	r7, sp, #0
 800a642:	6078      	str	r0, [r7, #4]
 800a644:	6878      	ldr	r0, [r7, #4]
 800a646:	f7ff ffe7 	bl	800a618 <_ZN23ApplicationFontProviderD1Ev>
 800a64a:	2104      	movs	r1, #4
 800a64c:	6878      	ldr	r0, [r7, #4]
 800a64e:	f01f fe84 	bl	802a35a <_ZdlPvj>
 800a652:	687b      	ldr	r3, [r7, #4]
 800a654:	4618      	mov	r0, r3
 800a656:	3708      	adds	r7, #8
 800a658:	46bd      	mov	sp, r7
 800a65a:	bd80      	pop	{r7, pc}

0800a65c <_ZN8touchgfx4FontD1Ev>:
 */
class Font
{
public:
    /** Finalizes an instance of the Font class. */
    virtual ~Font()
 800a65c:	b480      	push	{r7}
 800a65e:	b083      	sub	sp, #12
 800a660:	af00      	add	r7, sp, #0
 800a662:	6078      	str	r0, [r7, #4]
    {
 800a664:	4a04      	ldr	r2, [pc, #16]	; (800a678 <_ZN8touchgfx4FontD1Ev+0x1c>)
 800a666:	687b      	ldr	r3, [r7, #4]
 800a668:	601a      	str	r2, [r3, #0]
    }
 800a66a:	687b      	ldr	r3, [r7, #4]
 800a66c:	4618      	mov	r0, r3
 800a66e:	370c      	adds	r7, #12
 800a670:	46bd      	mov	sp, r7
 800a672:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a676:	4770      	bx	lr
 800a678:	0802ed74 	.word	0x0802ed74

0800a67c <_ZN8touchgfx4FontD0Ev>:
    virtual ~Font()
 800a67c:	b580      	push	{r7, lr}
 800a67e:	b082      	sub	sp, #8
 800a680:	af00      	add	r7, sp, #0
 800a682:	6078      	str	r0, [r7, #4]
    }
 800a684:	6878      	ldr	r0, [r7, #4]
 800a686:	f7ff ffe9 	bl	800a65c <_ZN8touchgfx4FontD1Ev>
 800a68a:	2114      	movs	r1, #20
 800a68c:	6878      	ldr	r0, [r7, #4]
 800a68e:	f01f fe64 	bl	802a35a <_ZdlPvj>
 800a692:	687b      	ldr	r3, [r7, #4]
 800a694:	4618      	mov	r0, r3
 800a696:	3708      	adds	r7, #8
 800a698:	46bd      	mov	sp, r7
 800a69a:	bd80      	pop	{r7, pc}

0800a69c <_ZNK8touchgfx4Font8getGlyphEt>:
     *
     * @return A pointer to the glyph node or null if the glyph was not found.
     *
     * @see TextProvider::getNextLigature
     */
    virtual const GlyphNode* getGlyph(Unicode::UnicodeChar unicode) const
 800a69c:	b590      	push	{r4, r7, lr}
 800a69e:	b087      	sub	sp, #28
 800a6a0:	af00      	add	r7, sp, #0
 800a6a2:	6078      	str	r0, [r7, #4]
 800a6a4:	460b      	mov	r3, r1
 800a6a6:	807b      	strh	r3, [r7, #2]
    {
        if (unicode == 0)
 800a6a8:	887b      	ldrh	r3, [r7, #2]
 800a6aa:	2b00      	cmp	r3, #0
 800a6ac:	d101      	bne.n	800a6b2 <_ZNK8touchgfx4Font8getGlyphEt+0x16>
        {
            return 0;
 800a6ae:	2300      	movs	r3, #0
 800a6b0:	e010      	b.n	800a6d4 <_ZNK8touchgfx4Font8getGlyphEt+0x38>
        }
        const uint8_t* dummyPixelDataPointer = 0;
 800a6b2:	2300      	movs	r3, #0
 800a6b4:	613b      	str	r3, [r7, #16]
        uint8_t bitsPerPixelDummy = 0;
 800a6b6:	2300      	movs	r3, #0
 800a6b8:	73fb      	strb	r3, [r7, #15]
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 800a6ba:	687b      	ldr	r3, [r7, #4]
 800a6bc:	681b      	ldr	r3, [r3, #0]
 800a6be:	3308      	adds	r3, #8
 800a6c0:	681c      	ldr	r4, [r3, #0]
 800a6c2:	f107 030f 	add.w	r3, r7, #15
 800a6c6:	f107 0210 	add.w	r2, r7, #16
 800a6ca:	8879      	ldrh	r1, [r7, #2]
 800a6cc:	6878      	ldr	r0, [r7, #4]
 800a6ce:	47a0      	blx	r4
 800a6d0:	6178      	str	r0, [r7, #20]
        return glyph;
 800a6d2:	697b      	ldr	r3, [r7, #20]
    }
 800a6d4:	4618      	mov	r0, r3
 800a6d6:	371c      	adds	r7, #28
 800a6d8:	46bd      	mov	sp, r7
 800a6da:	bd90      	pop	{r4, r7, pc}

0800a6dc <_ZNK8touchgfx4Font15getFallbackCharEv>:
     * used when no glyph is available for some character. If 0 (zero) is returned, there is
     * no default character.
     *
     * @return The default character for the typography in case no glyph is available.
     */
    virtual Unicode::UnicodeChar getFallbackChar() const
 800a6dc:	b480      	push	{r7}
 800a6de:	b083      	sub	sp, #12
 800a6e0:	af00      	add	r7, sp, #0
 800a6e2:	6078      	str	r0, [r7, #4]
    {
        return fallbackCharacter;
 800a6e4:	687b      	ldr	r3, [r7, #4]
 800a6e6:	89db      	ldrh	r3, [r3, #14]
    }
 800a6e8:	4618      	mov	r0, r3
 800a6ea:	370c      	adds	r7, #12
 800a6ec:	46bd      	mov	sp, r7
 800a6ee:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a6f2:	4770      	bx	lr

0800a6f4 <_ZNK8touchgfx4Font15getEllipsisCharEv>:
     *
     * @return The ellipsis character for the typography.
     *
     * @see TextArea::setWideTextAction
     */
    virtual Unicode::UnicodeChar getEllipsisChar() const
 800a6f4:	b480      	push	{r7}
 800a6f6:	b083      	sub	sp, #12
 800a6f8:	af00      	add	r7, sp, #0
 800a6fa:	6078      	str	r0, [r7, #4]
    {
        return ellipsisCharacter;
 800a6fc:	687b      	ldr	r3, [r7, #4]
 800a6fe:	8a1b      	ldrh	r3, [r3, #16]
    }
 800a700:	4618      	mov	r0, r3
 800a702:	370c      	adds	r7, #12
 800a704:	46bd      	mov	sp, r7
 800a706:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a70a:	4770      	bx	lr

0800a70c <_ZNK8touchgfx4Font11getBaselineEv>:
     * @return The baseline position.
     *
     * @note It is not sufficient to allocate text areas with this height. Use
     *       getHeight for this.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getBaseline() const
 800a70c:	b480      	push	{r7}
 800a70e:	b083      	sub	sp, #12
 800a710:	af00      	add	r7, sp, #0
 800a712:	6078      	str	r0, [r7, #4]
    {
        return baselineHeight;
 800a714:	687b      	ldr	r3, [r7, #4]
 800a716:	88db      	ldrh	r3, [r3, #6]
    }
 800a718:	4618      	mov	r0, r3
 800a71a:	370c      	adds	r7, #12
 800a71c:	46bd      	mov	sp, r7
 800a71e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a722:	4770      	bx	lr

0800a724 <_ZNK8touchgfx4Font9getHeightEv>:
     * Returns the height of a font. The font may exceed the top by getPixelsAboveTop() or the
     * bottom by getPixelsBelowBottom.
     *
     * @return The font height.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getHeight() const
 800a724:	b480      	push	{r7}
 800a726:	b083      	sub	sp, #12
 800a728:	af00      	add	r7, sp, #0
 800a72a:	6078      	str	r0, [r7, #4]
    {
        return fontHeight;
 800a72c:	687b      	ldr	r3, [r7, #4]
 800a72e:	889b      	ldrh	r3, [r3, #4]
    }
 800a730:	4618      	mov	r0, r3
 800a732:	370c      	adds	r7, #12
 800a734:	46bd      	mov	sp, r7
 800a736:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a73a:	4770      	bx	lr

0800a73c <_ZNK8touchgfx4Font15getBitsPerPixelEv>:
    /**
     * Gets bits per pixel for this font.
     *
     * @return The number of bits used per pixel in this font.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getBitsPerPixel() const
 800a73c:	b480      	push	{r7}
 800a73e:	b083      	sub	sp, #12
 800a740:	af00      	add	r7, sp, #0
 800a742:	6078      	str	r0, [r7, #4]
    {
        return bPerPixel;
 800a744:	687b      	ldr	r3, [r7, #4]
 800a746:	7a9b      	ldrb	r3, [r3, #10]
 800a748:	f3c3 0306 	ubfx	r3, r3, #0, #7
 800a74c:	b2db      	uxtb	r3, r3
    }
 800a74e:	4618      	mov	r0, r3
 800a750:	370c      	adds	r7, #12
 800a752:	46bd      	mov	sp, r7
 800a754:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a758:	4770      	bx	lr

0800a75a <_ZNK8touchgfx4Font15getByteAlignRowEv>:
    /**
     * Are the glyphs saved with each glyph row byte aligned?
     *
     * @return True if each glyph row is stored byte aligned, false otherwise.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getByteAlignRow() const
 800a75a:	b480      	push	{r7}
 800a75c:	b083      	sub	sp, #12
 800a75e:	af00      	add	r7, sp, #0
 800a760:	6078      	str	r0, [r7, #4]
    {
        return bAlignRow;
 800a762:	687b      	ldr	r3, [r7, #4]
 800a764:	7a9b      	ldrb	r3, [r3, #10]
 800a766:	f3c3 13c0 	ubfx	r3, r3, #7, #1
 800a76a:	b2db      	uxtb	r3, r3
    }
 800a76c:	4618      	mov	r0, r3
 800a76e:	370c      	adds	r7, #12
 800a770:	46bd      	mov	sp, r7
 800a772:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a776:	4770      	bx	lr

0800a778 <_ZNK8touchgfx4Font17isVectorBasedFontEv>:
    /**
     * Returns true if this Font is vector based. Default is false.
     *
     * @return True if this Font is vector based.
     */
    virtual bool isVectorBasedFont() const
 800a778:	b480      	push	{r7}
 800a77a:	b083      	sub	sp, #12
 800a77c:	af00      	add	r7, sp, #0
 800a77e:	6078      	str	r0, [r7, #4]
    {
        return false;
 800a780:	2300      	movs	r3, #0
    }
 800a782:	4618      	mov	r0, r3
 800a784:	370c      	adds	r7, #12
 800a786:	46bd      	mov	sp, r7
 800a788:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a78c:	4770      	bx	lr

0800a78e <_ZNK8touchgfx4Font14getScaleFactorEv>:
    /**
     * Returns the scale factor
     *
     * @return The scale factor
     */
    virtual float getScaleFactor() const
 800a78e:	b480      	push	{r7}
 800a790:	b083      	sub	sp, #12
 800a792:	af00      	add	r7, sp, #0
 800a794:	6078      	str	r0, [r7, #4]
    {
        return 0;
 800a796:	f04f 0300 	mov.w	r3, #0
 800a79a:	ee07 3a90 	vmov	s15, r3
    }
 800a79e:	eeb0 0a67 	vmov.f32	s0, s15
 800a7a2:	370c      	adds	r7, #12
 800a7a4:	46bd      	mov	sp, r7
 800a7a6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a7aa:	4770      	bx	lr

0800a7ac <_ZN8touchgfx9ConstFontD1Ev>:
 *
 * @see Font
 *
 * @note Pure virtual class. Create an application-specific implementation of getPixelData().
 */
class ConstFont : public Font
 800a7ac:	b580      	push	{r7, lr}
 800a7ae:	b082      	sub	sp, #8
 800a7b0:	af00      	add	r7, sp, #0
 800a7b2:	6078      	str	r0, [r7, #4]
 800a7b4:	4a05      	ldr	r2, [pc, #20]	; (800a7cc <_ZN8touchgfx9ConstFontD1Ev+0x20>)
 800a7b6:	687b      	ldr	r3, [r7, #4]
 800a7b8:	601a      	str	r2, [r3, #0]
 800a7ba:	687b      	ldr	r3, [r7, #4]
 800a7bc:	4618      	mov	r0, r3
 800a7be:	f7ff ff4d 	bl	800a65c <_ZN8touchgfx4FontD1Ev>
 800a7c2:	687b      	ldr	r3, [r7, #4]
 800a7c4:	4618      	mov	r0, r3
 800a7c6:	3708      	adds	r7, #8
 800a7c8:	46bd      	mov	sp, r7
 800a7ca:	bd80      	pop	{r7, pc}
 800a7cc:	0802fdf0 	.word	0x0802fdf0

0800a7d0 <_ZN8touchgfx9ConstFontD0Ev>:
 800a7d0:	b580      	push	{r7, lr}
 800a7d2:	b082      	sub	sp, #8
 800a7d4:	af00      	add	r7, sp, #0
 800a7d6:	6078      	str	r0, [r7, #4]
 800a7d8:	6878      	ldr	r0, [r7, #4]
 800a7da:	f7ff ffe7 	bl	800a7ac <_ZN8touchgfx9ConstFontD1Ev>
 800a7de:	211c      	movs	r1, #28
 800a7e0:	6878      	ldr	r0, [r7, #4]
 800a7e2:	f01f fdba 	bl	802a35a <_ZdlPvj>
 800a7e6:	687b      	ldr	r3, [r7, #4]
 800a7e8:	4618      	mov	r0, r3
 800a7ea:	3708      	adds	r7, #8
 800a7ec:	46bd      	mov	sp, r7
 800a7ee:	bd80      	pop	{r7, pc}

0800a7f0 <_ZN8touchgfx13GeneratedFontD1Ev>:

#include <touchgfx/ConstFont.hpp>

namespace touchgfx
{
class GeneratedFont : public ConstFont
 800a7f0:	b580      	push	{r7, lr}
 800a7f2:	b082      	sub	sp, #8
 800a7f4:	af00      	add	r7, sp, #0
 800a7f6:	6078      	str	r0, [r7, #4]
 800a7f8:	4a05      	ldr	r2, [pc, #20]	; (800a810 <_ZN8touchgfx13GeneratedFontD1Ev+0x20>)
 800a7fa:	687b      	ldr	r3, [r7, #4]
 800a7fc:	601a      	str	r2, [r3, #0]
 800a7fe:	687b      	ldr	r3, [r7, #4]
 800a800:	4618      	mov	r0, r3
 800a802:	f7ff ffd3 	bl	800a7ac <_ZN8touchgfx9ConstFontD1Ev>
 800a806:	687b      	ldr	r3, [r7, #4]
 800a808:	4618      	mov	r0, r3
 800a80a:	3708      	adds	r7, #8
 800a80c:	46bd      	mov	sp, r7
 800a80e:	bd80      	pop	{r7, pc}
 800a810:	0802e4f0 	.word	0x0802e4f0

0800a814 <_ZN8touchgfx13GeneratedFontD0Ev>:
 800a814:	b580      	push	{r7, lr}
 800a816:	b082      	sub	sp, #8
 800a818:	af00      	add	r7, sp, #0
 800a81a:	6078      	str	r0, [r7, #4]
 800a81c:	6878      	ldr	r0, [r7, #4]
 800a81e:	f7ff ffe7 	bl	800a7f0 <_ZN8touchgfx13GeneratedFontD1Ev>
 800a822:	212c      	movs	r1, #44	; 0x2c
 800a824:	6878      	ldr	r0, [r7, #4]
 800a826:	f01f fd98 	bl	802a35a <_ZdlPvj>
 800a82a:	687b      	ldr	r3, [r7, #4]
 800a82c:	4618      	mov	r0, r3
 800a82e:	3708      	adds	r7, #8
 800a830:	46bd      	mov	sp, r7
 800a832:	bd80      	pop	{r7, pc}

0800a834 <_ZN8touchgfx9TypedTextD1Ev>:
        : typedTextId(id)
    {
    }

    /** Finalizes an instance of the TypedText class. */
    virtual ~TypedText()
 800a834:	b480      	push	{r7}
 800a836:	b083      	sub	sp, #12
 800a838:	af00      	add	r7, sp, #0
 800a83a:	6078      	str	r0, [r7, #4]
    {
 800a83c:	4a04      	ldr	r2, [pc, #16]	; (800a850 <_ZN8touchgfx9TypedTextD1Ev+0x1c>)
 800a83e:	687b      	ldr	r3, [r7, #4]
 800a840:	601a      	str	r2, [r3, #0]
    }
 800a842:	687b      	ldr	r3, [r7, #4]
 800a844:	4618      	mov	r0, r3
 800a846:	370c      	adds	r7, #12
 800a848:	46bd      	mov	sp, r7
 800a84a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a84e:	4770      	bx	lr
 800a850:	0802e4e0 	.word	0x0802e4e0

0800a854 <_ZN8touchgfx9TypedTextD0Ev>:
    virtual ~TypedText()
 800a854:	b580      	push	{r7, lr}
 800a856:	b082      	sub	sp, #8
 800a858:	af00      	add	r7, sp, #0
 800a85a:	6078      	str	r0, [r7, #4]
    }
 800a85c:	6878      	ldr	r0, [r7, #4]
 800a85e:	f7ff ffe9 	bl	800a834 <_ZN8touchgfx9TypedTextD1Ev>
 800a862:	2108      	movs	r1, #8
 800a864:	6878      	ldr	r0, [r7, #4]
 800a866:	f01f fd78 	bl	802a35a <_ZdlPvj>
 800a86a:	687b      	ldr	r3, [r7, #4]
 800a86c:	4618      	mov	r0, r3
 800a86e:	3708      	adds	r7, #8
 800a870:	46bd      	mov	sp, r7
 800a872:	bd80      	pop	{r7, pc}

0800a874 <_ZNK8touchgfx13GeneratedFont12getGSUBTableEv>:

    virtual const uint8_t* getPixelData(const GlyphNode* glyph) const;

    virtual int8_t getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const;

    virtual const uint16_t* getGSUBTable() const
 800a874:	b480      	push	{r7}
 800a876:	b083      	sub	sp, #12
 800a878:	af00      	add	r7, sp, #0
 800a87a:	6078      	str	r0, [r7, #4]
    {
        return gsubTable;
 800a87c:	687b      	ldr	r3, [r7, #4]
 800a87e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
    }
 800a880:	4618      	mov	r0, r3
 800a882:	370c      	adds	r7, #12
 800a884:	46bd      	mov	sp, r7
 800a886:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a88a:	4770      	bx	lr

0800a88c <_ZNK8touchgfx13GeneratedFont23getContextualFormsTableEv>:

    virtual const FontContextualFormsTable* getContextualFormsTable() const
 800a88c:	b480      	push	{r7}
 800a88e:	b083      	sub	sp, #12
 800a890:	af00      	add	r7, sp, #0
 800a892:	6078      	str	r0, [r7, #4]
    {
        return arabicTable;
 800a894:	687b      	ldr	r3, [r7, #4]
 800a896:	6a9b      	ldr	r3, [r3, #40]	; 0x28
    }
 800a898:	4618      	mov	r0, r3
 800a89a:	370c      	adds	r7, #12
 800a89c:	46bd      	mov	sp, r7
 800a89e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a8a2:	4770      	bx	lr

0800a8a4 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>:
#include <fonts/GeneratedFont.hpp>
#include <math.h>

namespace touchgfx
{
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
 800a8a4:	b580      	push	{r7, lr}
 800a8a6:	b08e      	sub	sp, #56	; 0x38
 800a8a8:	af0a      	add	r7, sp, #40	; 0x28
 800a8aa:	60f8      	str	r0, [r7, #12]
 800a8ac:	60b9      	str	r1, [r7, #8]
 800a8ae:	4611      	mov	r1, r2
 800a8b0:	461a      	mov	r2, r3
 800a8b2:	460b      	mov	r3, r1
 800a8b4:	80fb      	strh	r3, [r7, #6]
 800a8b6:	4613      	mov	r3, r2
 800a8b8:	80bb      	strh	r3, [r7, #4]
    : ConstFont(glyphs, numGlyphs, height, baseline, pixAboveTop, pixBelowBottom, bitsPerPixel, byteAlignRow, maxLeft, maxRight, fallbackChar, ellipsisChar),
      glyphData(glyphDataInternalFlash),
      kerningData(kerningList),
      gsubTable(gsubData),
      arabicTable(formsTable)
 800a8ba:	68f8      	ldr	r0, [r7, #12]
 800a8bc:	88b9      	ldrh	r1, [r7, #4]
 800a8be:	88fa      	ldrh	r2, [r7, #6]
 800a8c0:	f8b7 3040 	ldrh.w	r3, [r7, #64]	; 0x40
 800a8c4:	9308      	str	r3, [sp, #32]
 800a8c6:	8fbb      	ldrh	r3, [r7, #60]	; 0x3c
 800a8c8:	9307      	str	r3, [sp, #28]
 800a8ca:	f897 3030 	ldrb.w	r3, [r7, #48]	; 0x30
 800a8ce:	9306      	str	r3, [sp, #24]
 800a8d0:	f897 302c 	ldrb.w	r3, [r7, #44]	; 0x2c
 800a8d4:	9305      	str	r3, [sp, #20]
 800a8d6:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
 800a8da:	9304      	str	r3, [sp, #16]
 800a8dc:	f897 3024 	ldrb.w	r3, [r7, #36]	; 0x24
 800a8e0:	9303      	str	r3, [sp, #12]
 800a8e2:	f897 3020 	ldrb.w	r3, [r7, #32]
 800a8e6:	9302      	str	r3, [sp, #8]
 800a8e8:	7f3b      	ldrb	r3, [r7, #28]
 800a8ea:	9301      	str	r3, [sp, #4]
 800a8ec:	8b3b      	ldrh	r3, [r7, #24]
 800a8ee:	9300      	str	r3, [sp, #0]
 800a8f0:	460b      	mov	r3, r1
 800a8f2:	68b9      	ldr	r1, [r7, #8]
 800a8f4:	f00e ff7c 	bl	80197f0 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt>
 800a8f8:	4a09      	ldr	r2, [pc, #36]	; (800a920 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE+0x7c>)
 800a8fa:	68fb      	ldr	r3, [r7, #12]
 800a8fc:	601a      	str	r2, [r3, #0]
      glyphData(glyphDataInternalFlash),
 800a8fe:	68fb      	ldr	r3, [r7, #12]
 800a900:	6b7a      	ldr	r2, [r7, #52]	; 0x34
 800a902:	61da      	str	r2, [r3, #28]
      kerningData(kerningList),
 800a904:	68fb      	ldr	r3, [r7, #12]
 800a906:	6bba      	ldr	r2, [r7, #56]	; 0x38
 800a908:	621a      	str	r2, [r3, #32]
      gsubTable(gsubData),
 800a90a:	68fb      	ldr	r3, [r7, #12]
 800a90c:	6c7a      	ldr	r2, [r7, #68]	; 0x44
 800a90e:	625a      	str	r2, [r3, #36]	; 0x24
      arabicTable(formsTable)
 800a910:	68fb      	ldr	r3, [r7, #12]
 800a912:	6cba      	ldr	r2, [r7, #72]	; 0x48
 800a914:	629a      	str	r2, [r3, #40]	; 0x28
{
}
 800a916:	68fb      	ldr	r3, [r7, #12]
 800a918:	4618      	mov	r0, r3
 800a91a:	3710      	adds	r7, #16
 800a91c:	46bd      	mov	sp, r7
 800a91e:	bd80      	pop	{r7, pc}
 800a920:	0802e4f0 	.word	0x0802e4f0

0800a924 <_ZNK8touchgfx13GeneratedFont12getPixelDataEPKNS_9GlyphNodeE>:

const uint8_t* GeneratedFont::getPixelData(const GlyphNode* glyph) const
{
 800a924:	b480      	push	{r7}
 800a926:	b085      	sub	sp, #20
 800a928:	af00      	add	r7, sp, #0
 800a92a:	6078      	str	r0, [r7, #4]
 800a92c:	6039      	str	r1, [r7, #0]
    const uint8_t* const* table = (const uint8_t* const*)glyphData;
 800a92e:	687b      	ldr	r3, [r7, #4]
 800a930:	69db      	ldr	r3, [r3, #28]
 800a932:	60fb      	str	r3, [r7, #12]
    return &(table[glyph->unicode / 2048][glyph->dataOffset]);
 800a934:	683b      	ldr	r3, [r7, #0]
 800a936:	889b      	ldrh	r3, [r3, #4]
 800a938:	0adb      	lsrs	r3, r3, #11
 800a93a:	b29b      	uxth	r3, r3
 800a93c:	009b      	lsls	r3, r3, #2
 800a93e:	68fa      	ldr	r2, [r7, #12]
 800a940:	4413      	add	r3, r2
 800a942:	681a      	ldr	r2, [r3, #0]
 800a944:	683b      	ldr	r3, [r7, #0]
 800a946:	681b      	ldr	r3, [r3, #0]
 800a948:	4413      	add	r3, r2
}
 800a94a:	4618      	mov	r0, r3
 800a94c:	3714      	adds	r7, #20
 800a94e:	46bd      	mov	sp, r7
 800a950:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a954:	4770      	bx	lr

0800a956 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE>:

int8_t GeneratedFont::getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const
{
 800a956:	b480      	push	{r7}
 800a958:	b089      	sub	sp, #36	; 0x24
 800a95a:	af00      	add	r7, sp, #0
 800a95c:	60f8      	str	r0, [r7, #12]
 800a95e:	460b      	mov	r3, r1
 800a960:	607a      	str	r2, [r7, #4]
 800a962:	817b      	strh	r3, [r7, #10]
    if (!glyph || glyph->kerningTableSize == 0)
 800a964:	687b      	ldr	r3, [r7, #4]
 800a966:	2b00      	cmp	r3, #0
 800a968:	d003      	beq.n	800a972 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x1c>
 800a96a:	687b      	ldr	r3, [r7, #4]
 800a96c:	7b1b      	ldrb	r3, [r3, #12]
 800a96e:	2b00      	cmp	r3, #0
 800a970:	d101      	bne.n	800a976 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x20>
    {
        return 0;
 800a972:	2300      	movs	r3, #0
 800a974:	e031      	b.n	800a9da <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x84>
    }

    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
 800a976:	68fb      	ldr	r3, [r7, #12]
 800a978:	6a1a      	ldr	r2, [r3, #32]
 800a97a:	687b      	ldr	r3, [r7, #4]
 800a97c:	617b      	str	r3, [r7, #20]
        return ((flags & GLYPH_DATA_KERNINGTABLEPOS_BIT8_10) << 8) | _kerningTablePos;
 800a97e:	697b      	ldr	r3, [r7, #20]
 800a980:	7b5b      	ldrb	r3, [r3, #13]
 800a982:	021b      	lsls	r3, r3, #8
 800a984:	b21b      	sxth	r3, r3
 800a986:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
 800a98a:	b219      	sxth	r1, r3
 800a98c:	697b      	ldr	r3, [r7, #20]
 800a98e:	7adb      	ldrb	r3, [r3, #11]
 800a990:	b21b      	sxth	r3, r3
 800a992:	430b      	orrs	r3, r1
 800a994:	b21b      	sxth	r3, r3
 800a996:	b29b      	uxth	r3, r3
 800a998:	009b      	lsls	r3, r3, #2
 800a99a:	4413      	add	r3, r2
 800a99c:	61fb      	str	r3, [r7, #28]
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 800a99e:	687b      	ldr	r3, [r7, #4]
 800a9a0:	7b1b      	ldrb	r3, [r3, #12]
 800a9a2:	837b      	strh	r3, [r7, #26]
 800a9a4:	e013      	b.n	800a9ce <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x78>
    {
        if (prevChar == kerndata->unicodePrevChar)
 800a9a6:	69fb      	ldr	r3, [r7, #28]
 800a9a8:	881b      	ldrh	r3, [r3, #0]
 800a9aa:	897a      	ldrh	r2, [r7, #10]
 800a9ac:	429a      	cmp	r2, r3
 800a9ae:	d103      	bne.n	800a9b8 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x62>
        {
            return kerndata->distance;
 800a9b0:	69fb      	ldr	r3, [r7, #28]
 800a9b2:	f993 3002 	ldrsb.w	r3, [r3, #2]
 800a9b6:	e010      	b.n	800a9da <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x84>
        }
        if (prevChar < kerndata->unicodePrevChar)
 800a9b8:	69fb      	ldr	r3, [r7, #28]
 800a9ba:	881b      	ldrh	r3, [r3, #0]
 800a9bc:	897a      	ldrh	r2, [r7, #10]
 800a9be:	429a      	cmp	r2, r3
 800a9c0:	d309      	bcc.n	800a9d6 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x80>
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 800a9c2:	8b7b      	ldrh	r3, [r7, #26]
 800a9c4:	3b01      	subs	r3, #1
 800a9c6:	837b      	strh	r3, [r7, #26]
 800a9c8:	69fb      	ldr	r3, [r7, #28]
 800a9ca:	3304      	adds	r3, #4
 800a9cc:	61fb      	str	r3, [r7, #28]
 800a9ce:	8b7b      	ldrh	r3, [r7, #26]
 800a9d0:	2b00      	cmp	r3, #0
 800a9d2:	d1e8      	bne.n	800a9a6 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x50>
 800a9d4:	e000      	b.n	800a9d8 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x82>
        {
            break;
 800a9d6:	bf00      	nop
        }
    }
    return 0;
 800a9d8:	2300      	movs	r3, #0
}
 800a9da:	4618      	mov	r0, r3
 800a9dc:	3724      	adds	r7, #36	; 0x24
 800a9de:	46bd      	mov	sp, r7
 800a9e0:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a9e4:	4770      	bx	lr
	...

0800a9e8 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_10_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_10_4bpp();

touchgfx::GeneratedFont& getFont_verdana_10_4bpp()
{
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 10, 0, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 800a9e8:	b580      	push	{r7, lr}
 800a9ea:	af00      	add	r7, sp, #0
 800a9ec:	4801      	ldr	r0, [pc, #4]	; (800a9f4 <__tcf_0+0xc>)
 800a9ee:	f7ff feff 	bl	800a7f0 <_ZN8touchgfx13GeneratedFontD1Ev>
 800a9f2:	bd80      	pop	{r7, pc}
 800a9f4:	2000062c 	.word	0x2000062c

0800a9f8 <_Z23getFont_verdana_10_4bppv>:
{
 800a9f8:	b580      	push	{r7, lr}
 800a9fa:	b08e      	sub	sp, #56	; 0x38
 800a9fc:	af0e      	add	r7, sp, #56	; 0x38
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 10, 0, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 800a9fe:	4b21      	ldr	r3, [pc, #132]	; (800aa84 <_Z23getFont_verdana_10_4bppv+0x8c>)
 800aa00:	681b      	ldr	r3, [r3, #0]
 800aa02:	f3bf 8f5b 	dmb	ish
 800aa06:	f003 0301 	and.w	r3, r3, #1
 800aa0a:	2b00      	cmp	r3, #0
 800aa0c:	bf0c      	ite	eq
 800aa0e:	2301      	moveq	r3, #1
 800aa10:	2300      	movne	r3, #0
 800aa12:	b2db      	uxtb	r3, r3
 800aa14:	2b00      	cmp	r3, #0
 800aa16:	d030      	beq.n	800aa7a <_Z23getFont_verdana_10_4bppv+0x82>
 800aa18:	481a      	ldr	r0, [pc, #104]	; (800aa84 <_Z23getFont_verdana_10_4bppv+0x8c>)
 800aa1a:	f01f fca0 	bl	802a35e <__cxa_guard_acquire>
 800aa1e:	4603      	mov	r3, r0
 800aa20:	2b00      	cmp	r3, #0
 800aa22:	bf14      	ite	ne
 800aa24:	2301      	movne	r3, #1
 800aa26:	2300      	moveq	r3, #0
 800aa28:	b2db      	uxtb	r3, r3
 800aa2a:	2b00      	cmp	r3, #0
 800aa2c:	d025      	beq.n	800aa7a <_Z23getFont_verdana_10_4bppv+0x82>
 800aa2e:	2300      	movs	r3, #0
 800aa30:	930c      	str	r3, [sp, #48]	; 0x30
 800aa32:	2300      	movs	r3, #0
 800aa34:	930b      	str	r3, [sp, #44]	; 0x2c
 800aa36:	2300      	movs	r3, #0
 800aa38:	930a      	str	r3, [sp, #40]	; 0x28
 800aa3a:	233f      	movs	r3, #63	; 0x3f
 800aa3c:	9309      	str	r3, [sp, #36]	; 0x24
 800aa3e:	4b12      	ldr	r3, [pc, #72]	; (800aa88 <_Z23getFont_verdana_10_4bppv+0x90>)
 800aa40:	9308      	str	r3, [sp, #32]
 800aa42:	4b12      	ldr	r3, [pc, #72]	; (800aa8c <_Z23getFont_verdana_10_4bppv+0x94>)
 800aa44:	9307      	str	r3, [sp, #28]
 800aa46:	2300      	movs	r3, #0
 800aa48:	9306      	str	r3, [sp, #24]
 800aa4a:	2300      	movs	r3, #0
 800aa4c:	9305      	str	r3, [sp, #20]
 800aa4e:	2301      	movs	r3, #1
 800aa50:	9304      	str	r3, [sp, #16]
 800aa52:	2304      	movs	r3, #4
 800aa54:	9303      	str	r3, [sp, #12]
 800aa56:	2300      	movs	r3, #0
 800aa58:	9302      	str	r3, [sp, #8]
 800aa5a:	2300      	movs	r3, #0
 800aa5c:	9301      	str	r3, [sp, #4]
 800aa5e:	230a      	movs	r3, #10
 800aa60:	9300      	str	r3, [sp, #0]
 800aa62:	230a      	movs	r3, #10
 800aa64:	2201      	movs	r2, #1
 800aa66:	490a      	ldr	r1, [pc, #40]	; (800aa90 <_Z23getFont_verdana_10_4bppv+0x98>)
 800aa68:	480a      	ldr	r0, [pc, #40]	; (800aa94 <_Z23getFont_verdana_10_4bppv+0x9c>)
 800aa6a:	f7ff ff1b 	bl	800a8a4 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 800aa6e:	480a      	ldr	r0, [pc, #40]	; (800aa98 <_Z23getFont_verdana_10_4bppv+0xa0>)
 800aa70:	f01f fcc0 	bl	802a3f4 <atexit>
 800aa74:	4803      	ldr	r0, [pc, #12]	; (800aa84 <_Z23getFont_verdana_10_4bppv+0x8c>)
 800aa76:	f01f fc7e 	bl	802a376 <__cxa_guard_release>
    return verdana_10_4bpp;
 800aa7a:	4b06      	ldr	r3, [pc, #24]	; (800aa94 <_Z23getFont_verdana_10_4bppv+0x9c>)
}
 800aa7c:	4618      	mov	r0, r3
 800aa7e:	46bd      	mov	sp, r7
 800aa80:	bd80      	pop	{r7, pc}
 800aa82:	bf00      	nop
 800aa84:	20000658 	.word	0x20000658
 800aa88:	08033be0 	.word	0x08033be0
 800aa8c:	08033bfc 	.word	0x08033bfc
 800aa90:	08033590 	.word	0x08033590
 800aa94:	2000062c 	.word	0x2000062c
 800aa98:	0800a9e9 	.word	0x0800a9e9

0800aa9c <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_18_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_18_4bpp();

touchgfx::GeneratedFont& getFont_verdana_18_4bpp()
{
    static touchgfx::GeneratedFont verdana_18_4bpp(glyphs_verdana_18_4bpp, 8, 18, 18, 0, 0, 4, 1, 0, 1, unicodes_verdana_18_4bpp, kerning_verdana_18_4bpp, 63, 0, 0, 0);
 800aa9c:	b580      	push	{r7, lr}
 800aa9e:	af00      	add	r7, sp, #0
 800aaa0:	4801      	ldr	r0, [pc, #4]	; (800aaa8 <__tcf_0+0xc>)
 800aaa2:	f7ff fea5 	bl	800a7f0 <_ZN8touchgfx13GeneratedFontD1Ev>
 800aaa6:	bd80      	pop	{r7, pc}
 800aaa8:	2000065c 	.word	0x2000065c

0800aaac <_Z23getFont_verdana_18_4bppv>:
{
 800aaac:	b580      	push	{r7, lr}
 800aaae:	b08e      	sub	sp, #56	; 0x38
 800aab0:	af0e      	add	r7, sp, #56	; 0x38
    static touchgfx::GeneratedFont verdana_18_4bpp(glyphs_verdana_18_4bpp, 8, 18, 18, 0, 0, 4, 1, 0, 1, unicodes_verdana_18_4bpp, kerning_verdana_18_4bpp, 63, 0, 0, 0);
 800aab2:	4b21      	ldr	r3, [pc, #132]	; (800ab38 <_Z23getFont_verdana_18_4bppv+0x8c>)
 800aab4:	681b      	ldr	r3, [r3, #0]
 800aab6:	f3bf 8f5b 	dmb	ish
 800aaba:	f003 0301 	and.w	r3, r3, #1
 800aabe:	2b00      	cmp	r3, #0
 800aac0:	bf0c      	ite	eq
 800aac2:	2301      	moveq	r3, #1
 800aac4:	2300      	movne	r3, #0
 800aac6:	b2db      	uxtb	r3, r3
 800aac8:	2b00      	cmp	r3, #0
 800aaca:	d030      	beq.n	800ab2e <_Z23getFont_verdana_18_4bppv+0x82>
 800aacc:	481a      	ldr	r0, [pc, #104]	; (800ab38 <_Z23getFont_verdana_18_4bppv+0x8c>)
 800aace:	f01f fc46 	bl	802a35e <__cxa_guard_acquire>
 800aad2:	4603      	mov	r3, r0
 800aad4:	2b00      	cmp	r3, #0
 800aad6:	bf14      	ite	ne
 800aad8:	2301      	movne	r3, #1
 800aada:	2300      	moveq	r3, #0
 800aadc:	b2db      	uxtb	r3, r3
 800aade:	2b00      	cmp	r3, #0
 800aae0:	d025      	beq.n	800ab2e <_Z23getFont_verdana_18_4bppv+0x82>
 800aae2:	2300      	movs	r3, #0
 800aae4:	930c      	str	r3, [sp, #48]	; 0x30
 800aae6:	2300      	movs	r3, #0
 800aae8:	930b      	str	r3, [sp, #44]	; 0x2c
 800aaea:	2300      	movs	r3, #0
 800aaec:	930a      	str	r3, [sp, #40]	; 0x28
 800aaee:	233f      	movs	r3, #63	; 0x3f
 800aaf0:	9309      	str	r3, [sp, #36]	; 0x24
 800aaf2:	4b12      	ldr	r3, [pc, #72]	; (800ab3c <_Z23getFont_verdana_18_4bppv+0x90>)
 800aaf4:	9308      	str	r3, [sp, #32]
 800aaf6:	4b12      	ldr	r3, [pc, #72]	; (800ab40 <_Z23getFont_verdana_18_4bppv+0x94>)
 800aaf8:	9307      	str	r3, [sp, #28]
 800aafa:	2301      	movs	r3, #1
 800aafc:	9306      	str	r3, [sp, #24]
 800aafe:	2300      	movs	r3, #0
 800ab00:	9305      	str	r3, [sp, #20]
 800ab02:	2301      	movs	r3, #1
 800ab04:	9304      	str	r3, [sp, #16]
 800ab06:	2304      	movs	r3, #4
 800ab08:	9303      	str	r3, [sp, #12]
 800ab0a:	2300      	movs	r3, #0
 800ab0c:	9302      	str	r3, [sp, #8]
 800ab0e:	2300      	movs	r3, #0
 800ab10:	9301      	str	r3, [sp, #4]
 800ab12:	2312      	movs	r3, #18
 800ab14:	9300      	str	r3, [sp, #0]
 800ab16:	2312      	movs	r3, #18
 800ab18:	2208      	movs	r2, #8
 800ab1a:	490a      	ldr	r1, [pc, #40]	; (800ab44 <_Z23getFont_verdana_18_4bppv+0x98>)
 800ab1c:	480a      	ldr	r0, [pc, #40]	; (800ab48 <_Z23getFont_verdana_18_4bppv+0x9c>)
 800ab1e:	f7ff fec1 	bl	800a8a4 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 800ab22:	480a      	ldr	r0, [pc, #40]	; (800ab4c <_Z23getFont_verdana_18_4bppv+0xa0>)
 800ab24:	f01f fc66 	bl	802a3f4 <atexit>
 800ab28:	4803      	ldr	r0, [pc, #12]	; (800ab38 <_Z23getFont_verdana_18_4bppv+0x8c>)
 800ab2a:	f01f fc24 	bl	802a376 <__cxa_guard_release>
    return verdana_18_4bpp;
 800ab2e:	4b06      	ldr	r3, [pc, #24]	; (800ab48 <_Z23getFont_verdana_18_4bppv+0x9c>)
}
 800ab30:	4618      	mov	r0, r3
 800ab32:	46bd      	mov	sp, r7
 800ab34:	bd80      	pop	{r7, pc}
 800ab36:	bf00      	nop
 800ab38:	20000688 	.word	0x20000688
 800ab3c:	08033be4 	.word	0x08033be4
 800ab40:	08033c00 	.word	0x08033c00
 800ab44:	080335a0 	.word	0x080335a0
 800ab48:	2000065c 	.word	0x2000065c
 800ab4c:	0800aa9d 	.word	0x0800aa9d

0800ab50 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdanab_16_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdanab_16_4bpp();

touchgfx::GeneratedFont& getFont_verdanab_16_4bpp()
{
    static touchgfx::GeneratedFont verdanab_16_4bpp(glyphs_verdanab_16_4bpp, 9, 16, 16, 0, 0, 4, 1, 0, 1, unicodes_verdanab_16_4bpp, kerning_verdanab_16_4bpp, 63, 0, 0, 0);
 800ab50:	b580      	push	{r7, lr}
 800ab52:	af00      	add	r7, sp, #0
 800ab54:	4801      	ldr	r0, [pc, #4]	; (800ab5c <__tcf_0+0xc>)
 800ab56:	f7ff fe4b 	bl	800a7f0 <_ZN8touchgfx13GeneratedFontD1Ev>
 800ab5a:	bd80      	pop	{r7, pc}
 800ab5c:	2000068c 	.word	0x2000068c

0800ab60 <_Z24getFont_verdanab_16_4bppv>:
{
 800ab60:	b580      	push	{r7, lr}
 800ab62:	b08e      	sub	sp, #56	; 0x38
 800ab64:	af0e      	add	r7, sp, #56	; 0x38
    static touchgfx::GeneratedFont verdanab_16_4bpp(glyphs_verdanab_16_4bpp, 9, 16, 16, 0, 0, 4, 1, 0, 1, unicodes_verdanab_16_4bpp, kerning_verdanab_16_4bpp, 63, 0, 0, 0);
 800ab66:	4b21      	ldr	r3, [pc, #132]	; (800abec <_Z24getFont_verdanab_16_4bppv+0x8c>)
 800ab68:	681b      	ldr	r3, [r3, #0]
 800ab6a:	f3bf 8f5b 	dmb	ish
 800ab6e:	f003 0301 	and.w	r3, r3, #1
 800ab72:	2b00      	cmp	r3, #0
 800ab74:	bf0c      	ite	eq
 800ab76:	2301      	moveq	r3, #1
 800ab78:	2300      	movne	r3, #0
 800ab7a:	b2db      	uxtb	r3, r3
 800ab7c:	2b00      	cmp	r3, #0
 800ab7e:	d030      	beq.n	800abe2 <_Z24getFont_verdanab_16_4bppv+0x82>
 800ab80:	481a      	ldr	r0, [pc, #104]	; (800abec <_Z24getFont_verdanab_16_4bppv+0x8c>)
 800ab82:	f01f fbec 	bl	802a35e <__cxa_guard_acquire>
 800ab86:	4603      	mov	r3, r0
 800ab88:	2b00      	cmp	r3, #0
 800ab8a:	bf14      	ite	ne
 800ab8c:	2301      	movne	r3, #1
 800ab8e:	2300      	moveq	r3, #0
 800ab90:	b2db      	uxtb	r3, r3
 800ab92:	2b00      	cmp	r3, #0
 800ab94:	d025      	beq.n	800abe2 <_Z24getFont_verdanab_16_4bppv+0x82>
 800ab96:	2300      	movs	r3, #0
 800ab98:	930c      	str	r3, [sp, #48]	; 0x30
 800ab9a:	2300      	movs	r3, #0
 800ab9c:	930b      	str	r3, [sp, #44]	; 0x2c
 800ab9e:	2300      	movs	r3, #0
 800aba0:	930a      	str	r3, [sp, #40]	; 0x28
 800aba2:	233f      	movs	r3, #63	; 0x3f
 800aba4:	9309      	str	r3, [sp, #36]	; 0x24
 800aba6:	4b12      	ldr	r3, [pc, #72]	; (800abf0 <_Z24getFont_verdanab_16_4bppv+0x90>)
 800aba8:	9308      	str	r3, [sp, #32]
 800abaa:	4b12      	ldr	r3, [pc, #72]	; (800abf4 <_Z24getFont_verdanab_16_4bppv+0x94>)
 800abac:	9307      	str	r3, [sp, #28]
 800abae:	2301      	movs	r3, #1
 800abb0:	9306      	str	r3, [sp, #24]
 800abb2:	2300      	movs	r3, #0
 800abb4:	9305      	str	r3, [sp, #20]
 800abb6:	2301      	movs	r3, #1
 800abb8:	9304      	str	r3, [sp, #16]
 800abba:	2304      	movs	r3, #4
 800abbc:	9303      	str	r3, [sp, #12]
 800abbe:	2300      	movs	r3, #0
 800abc0:	9302      	str	r3, [sp, #8]
 800abc2:	2300      	movs	r3, #0
 800abc4:	9301      	str	r3, [sp, #4]
 800abc6:	2310      	movs	r3, #16
 800abc8:	9300      	str	r3, [sp, #0]
 800abca:	2310      	movs	r3, #16
 800abcc:	2209      	movs	r2, #9
 800abce:	490a      	ldr	r1, [pc, #40]	; (800abf8 <_Z24getFont_verdanab_16_4bppv+0x98>)
 800abd0:	480a      	ldr	r0, [pc, #40]	; (800abfc <_Z24getFont_verdanab_16_4bppv+0x9c>)
 800abd2:	f7ff fe67 	bl	800a8a4 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 800abd6:	480a      	ldr	r0, [pc, #40]	; (800ac00 <_Z24getFont_verdanab_16_4bppv+0xa0>)
 800abd8:	f01f fc0c 	bl	802a3f4 <atexit>
 800abdc:	4803      	ldr	r0, [pc, #12]	; (800abec <_Z24getFont_verdanab_16_4bppv+0x8c>)
 800abde:	f01f fbca 	bl	802a376 <__cxa_guard_release>
    return verdanab_16_4bpp;
 800abe2:	4b06      	ldr	r3, [pc, #24]	; (800abfc <_Z24getFont_verdanab_16_4bppv+0x9c>)
}
 800abe4:	4618      	mov	r0, r3
 800abe6:	46bd      	mov	sp, r7
 800abe8:	bd80      	pop	{r7, pc}
 800abea:	bf00      	nop
 800abec:	200006b8 	.word	0x200006b8
 800abf0:	08033bf0 	.word	0x08033bf0
 800abf4:	08033c04 	.word	0x08033c04
 800abf8:	08033610 	.word	0x08033610
 800abfc:	2000068c 	.word	0x2000068c
 800ac00:	0800ab51 	.word	0x0800ab51

0800ac04 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdanab_23_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdanab_23_4bpp();

touchgfx::GeneratedFont& getFont_verdanab_23_4bpp()
{
    static touchgfx::GeneratedFont verdanab_23_4bpp(glyphs_verdanab_23_4bpp, 84, 28, 23, 0, 0, 4, 1, 1, 1, unicodes_verdanab_23_4bpp, kerning_verdanab_23_4bpp, 63, 0, 0, 0);
 800ac04:	b580      	push	{r7, lr}
 800ac06:	af00      	add	r7, sp, #0
 800ac08:	4801      	ldr	r0, [pc, #4]	; (800ac10 <__tcf_0+0xc>)
 800ac0a:	f7ff fdf1 	bl	800a7f0 <_ZN8touchgfx13GeneratedFontD1Ev>
 800ac0e:	bd80      	pop	{r7, pc}
 800ac10:	200006bc 	.word	0x200006bc

0800ac14 <_Z24getFont_verdanab_23_4bppv>:
{
 800ac14:	b580      	push	{r7, lr}
 800ac16:	b08e      	sub	sp, #56	; 0x38
 800ac18:	af0e      	add	r7, sp, #56	; 0x38
    static touchgfx::GeneratedFont verdanab_23_4bpp(glyphs_verdanab_23_4bpp, 84, 28, 23, 0, 0, 4, 1, 1, 1, unicodes_verdanab_23_4bpp, kerning_verdanab_23_4bpp, 63, 0, 0, 0);
 800ac1a:	4b21      	ldr	r3, [pc, #132]	; (800aca0 <_Z24getFont_verdanab_23_4bppv+0x8c>)
 800ac1c:	681b      	ldr	r3, [r3, #0]
 800ac1e:	f3bf 8f5b 	dmb	ish
 800ac22:	f003 0301 	and.w	r3, r3, #1
 800ac26:	2b00      	cmp	r3, #0
 800ac28:	bf0c      	ite	eq
 800ac2a:	2301      	moveq	r3, #1
 800ac2c:	2300      	movne	r3, #0
 800ac2e:	b2db      	uxtb	r3, r3
 800ac30:	2b00      	cmp	r3, #0
 800ac32:	d030      	beq.n	800ac96 <_Z24getFont_verdanab_23_4bppv+0x82>
 800ac34:	481a      	ldr	r0, [pc, #104]	; (800aca0 <_Z24getFont_verdanab_23_4bppv+0x8c>)
 800ac36:	f01f fb92 	bl	802a35e <__cxa_guard_acquire>
 800ac3a:	4603      	mov	r3, r0
 800ac3c:	2b00      	cmp	r3, #0
 800ac3e:	bf14      	ite	ne
 800ac40:	2301      	movne	r3, #1
 800ac42:	2300      	moveq	r3, #0
 800ac44:	b2db      	uxtb	r3, r3
 800ac46:	2b00      	cmp	r3, #0
 800ac48:	d025      	beq.n	800ac96 <_Z24getFont_verdanab_23_4bppv+0x82>
 800ac4a:	2300      	movs	r3, #0
 800ac4c:	930c      	str	r3, [sp, #48]	; 0x30
 800ac4e:	2300      	movs	r3, #0
 800ac50:	930b      	str	r3, [sp, #44]	; 0x2c
 800ac52:	2300      	movs	r3, #0
 800ac54:	930a      	str	r3, [sp, #40]	; 0x28
 800ac56:	233f      	movs	r3, #63	; 0x3f
 800ac58:	9309      	str	r3, [sp, #36]	; 0x24
 800ac5a:	4b12      	ldr	r3, [pc, #72]	; (800aca4 <_Z24getFont_verdanab_23_4bppv+0x90>)
 800ac5c:	9308      	str	r3, [sp, #32]
 800ac5e:	4b12      	ldr	r3, [pc, #72]	; (800aca8 <_Z24getFont_verdanab_23_4bppv+0x94>)
 800ac60:	9307      	str	r3, [sp, #28]
 800ac62:	2301      	movs	r3, #1
 800ac64:	9306      	str	r3, [sp, #24]
 800ac66:	2301      	movs	r3, #1
 800ac68:	9305      	str	r3, [sp, #20]
 800ac6a:	2301      	movs	r3, #1
 800ac6c:	9304      	str	r3, [sp, #16]
 800ac6e:	2304      	movs	r3, #4
 800ac70:	9303      	str	r3, [sp, #12]
 800ac72:	2300      	movs	r3, #0
 800ac74:	9302      	str	r3, [sp, #8]
 800ac76:	2300      	movs	r3, #0
 800ac78:	9301      	str	r3, [sp, #4]
 800ac7a:	2317      	movs	r3, #23
 800ac7c:	9300      	str	r3, [sp, #0]
 800ac7e:	231c      	movs	r3, #28
 800ac80:	2254      	movs	r2, #84	; 0x54
 800ac82:	490a      	ldr	r1, [pc, #40]	; (800acac <_Z24getFont_verdanab_23_4bppv+0x98>)
 800ac84:	480a      	ldr	r0, [pc, #40]	; (800acb0 <_Z24getFont_verdanab_23_4bppv+0x9c>)
 800ac86:	f7ff fe0d 	bl	800a8a4 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 800ac8a:	480a      	ldr	r0, [pc, #40]	; (800acb4 <_Z24getFont_verdanab_23_4bppv+0xa0>)
 800ac8c:	f01f fbb2 	bl	802a3f4 <atexit>
 800ac90:	4803      	ldr	r0, [pc, #12]	; (800aca0 <_Z24getFont_verdanab_23_4bppv+0x8c>)
 800ac92:	f01f fb70 	bl	802a376 <__cxa_guard_release>
    return verdanab_23_4bpp;
 800ac96:	4b06      	ldr	r3, [pc, #24]	; (800acb0 <_Z24getFont_verdanab_23_4bppv+0x9c>)
}
 800ac98:	4618      	mov	r0, r3
 800ac9a:	46bd      	mov	sp, r7
 800ac9c:	bd80      	pop	{r7, pc}
 800ac9e:	bf00      	nop
 800aca0:	200006e8 	.word	0x200006e8
 800aca4:	08033bf4 	.word	0x08033bf4
 800aca8:	08033c08 	.word	0x08033c08
 800acac:	08033690 	.word	0x08033690
 800acb0:	200006bc 	.word	0x200006bc
 800acb4:	0800ac05 	.word	0x0800ac05

0800acb8 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdanab_27_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdanab_27_4bpp();

touchgfx::GeneratedFont& getFont_verdanab_27_4bpp()
{
    static touchgfx::GeneratedFont verdanab_27_4bpp(glyphs_verdanab_27_4bpp, 13, 27, 27, 0, 0, 4, 1, 0, 0, unicodes_verdanab_27_4bpp, kerning_verdanab_27_4bpp, 63, 0, 0, 0);
 800acb8:	b580      	push	{r7, lr}
 800acba:	af00      	add	r7, sp, #0
 800acbc:	4801      	ldr	r0, [pc, #4]	; (800acc4 <__tcf_0+0xc>)
 800acbe:	f7ff fd97 	bl	800a7f0 <_ZN8touchgfx13GeneratedFontD1Ev>
 800acc2:	bd80      	pop	{r7, pc}
 800acc4:	200006ec 	.word	0x200006ec

0800acc8 <_Z24getFont_verdanab_27_4bppv>:
{
 800acc8:	b580      	push	{r7, lr}
 800acca:	b08e      	sub	sp, #56	; 0x38
 800accc:	af0e      	add	r7, sp, #56	; 0x38
    static touchgfx::GeneratedFont verdanab_27_4bpp(glyphs_verdanab_27_4bpp, 13, 27, 27, 0, 0, 4, 1, 0, 0, unicodes_verdanab_27_4bpp, kerning_verdanab_27_4bpp, 63, 0, 0, 0);
 800acce:	4b21      	ldr	r3, [pc, #132]	; (800ad54 <_Z24getFont_verdanab_27_4bppv+0x8c>)
 800acd0:	681b      	ldr	r3, [r3, #0]
 800acd2:	f3bf 8f5b 	dmb	ish
 800acd6:	f003 0301 	and.w	r3, r3, #1
 800acda:	2b00      	cmp	r3, #0
 800acdc:	bf0c      	ite	eq
 800acde:	2301      	moveq	r3, #1
 800ace0:	2300      	movne	r3, #0
 800ace2:	b2db      	uxtb	r3, r3
 800ace4:	2b00      	cmp	r3, #0
 800ace6:	d030      	beq.n	800ad4a <_Z24getFont_verdanab_27_4bppv+0x82>
 800ace8:	481a      	ldr	r0, [pc, #104]	; (800ad54 <_Z24getFont_verdanab_27_4bppv+0x8c>)
 800acea:	f01f fb38 	bl	802a35e <__cxa_guard_acquire>
 800acee:	4603      	mov	r3, r0
 800acf0:	2b00      	cmp	r3, #0
 800acf2:	bf14      	ite	ne
 800acf4:	2301      	movne	r3, #1
 800acf6:	2300      	moveq	r3, #0
 800acf8:	b2db      	uxtb	r3, r3
 800acfa:	2b00      	cmp	r3, #0
 800acfc:	d025      	beq.n	800ad4a <_Z24getFont_verdanab_27_4bppv+0x82>
 800acfe:	2300      	movs	r3, #0
 800ad00:	930c      	str	r3, [sp, #48]	; 0x30
 800ad02:	2300      	movs	r3, #0
 800ad04:	930b      	str	r3, [sp, #44]	; 0x2c
 800ad06:	2300      	movs	r3, #0
 800ad08:	930a      	str	r3, [sp, #40]	; 0x28
 800ad0a:	233f      	movs	r3, #63	; 0x3f
 800ad0c:	9309      	str	r3, [sp, #36]	; 0x24
 800ad0e:	4b12      	ldr	r3, [pc, #72]	; (800ad58 <_Z24getFont_verdanab_27_4bppv+0x90>)
 800ad10:	9308      	str	r3, [sp, #32]
 800ad12:	4b12      	ldr	r3, [pc, #72]	; (800ad5c <_Z24getFont_verdanab_27_4bppv+0x94>)
 800ad14:	9307      	str	r3, [sp, #28]
 800ad16:	2300      	movs	r3, #0
 800ad18:	9306      	str	r3, [sp, #24]
 800ad1a:	2300      	movs	r3, #0
 800ad1c:	9305      	str	r3, [sp, #20]
 800ad1e:	2301      	movs	r3, #1
 800ad20:	9304      	str	r3, [sp, #16]
 800ad22:	2304      	movs	r3, #4
 800ad24:	9303      	str	r3, [sp, #12]
 800ad26:	2300      	movs	r3, #0
 800ad28:	9302      	str	r3, [sp, #8]
 800ad2a:	2300      	movs	r3, #0
 800ad2c:	9301      	str	r3, [sp, #4]
 800ad2e:	231b      	movs	r3, #27
 800ad30:	9300      	str	r3, [sp, #0]
 800ad32:	231b      	movs	r3, #27
 800ad34:	220d      	movs	r2, #13
 800ad36:	490a      	ldr	r1, [pc, #40]	; (800ad60 <_Z24getFont_verdanab_27_4bppv+0x98>)
 800ad38:	480a      	ldr	r0, [pc, #40]	; (800ad64 <_Z24getFont_verdanab_27_4bppv+0x9c>)
 800ad3a:	f7ff fdb3 	bl	800a8a4 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 800ad3e:	480a      	ldr	r0, [pc, #40]	; (800ad68 <_Z24getFont_verdanab_27_4bppv+0xa0>)
 800ad40:	f01f fb58 	bl	802a3f4 <atexit>
 800ad44:	4803      	ldr	r0, [pc, #12]	; (800ad54 <_Z24getFont_verdanab_27_4bppv+0x8c>)
 800ad46:	f01f fb16 	bl	802a376 <__cxa_guard_release>
    return verdanab_27_4bpp;
 800ad4a:	4b06      	ldr	r3, [pc, #24]	; (800ad64 <_Z24getFont_verdanab_27_4bppv+0x9c>)
}
 800ad4c:	4618      	mov	r0, r3
 800ad4e:	46bd      	mov	sp, r7
 800ad50:	bd80      	pop	{r7, pc}
 800ad52:	bf00      	nop
 800ad54:	20000718 	.word	0x20000718
 800ad58:	08033bf8 	.word	0x08033bf8
 800ad5c:	08033c0c 	.word	0x08033c0c
 800ad60:	08033b28 	.word	0x08033b28
 800ad64:	200006ec 	.word	0x200006ec
 800ad68:	0800acb9 	.word	0x0800acb9

0800ad6c <_ZnwjPv>:
#endif // __cpp_sized_deallocation
#endif // __cpp_aligned_new

// Default placement versions of operator new.
_GLIBCXX_NODISCARD inline void* operator new(std::size_t, void* __p) _GLIBCXX_USE_NOEXCEPT
{ return __p; }
 800ad6c:	b480      	push	{r7}
 800ad6e:	b083      	sub	sp, #12
 800ad70:	af00      	add	r7, sp, #0
 800ad72:	6078      	str	r0, [r7, #4]
 800ad74:	6039      	str	r1, [r7, #0]
 800ad76:	683b      	ldr	r3, [r7, #0]
 800ad78:	4618      	mov	r0, r3
 800ad7a:	370c      	adds	r7, #12
 800ad7c:	46bd      	mov	sp, r7
 800ad7e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ad82:	4770      	bx	lr

0800ad84 <_ZN8touchgfx15UIEventListener16handleClickEventERKNS_10ClickEventE>:
     * This handler is invoked when a mouse click or display touch event has been detected
     * by the system.
     *
     * @param  event The event data.
     */
    virtual void handleClickEvent(const ClickEvent& event)
 800ad84:	b480      	push	{r7}
 800ad86:	b083      	sub	sp, #12
 800ad88:	af00      	add	r7, sp, #0
 800ad8a:	6078      	str	r0, [r7, #4]
 800ad8c:	6039      	str	r1, [r7, #0]
    {
        (void)event; // Unused variable
    }
 800ad8e:	bf00      	nop
 800ad90:	370c      	adds	r7, #12
 800ad92:	46bd      	mov	sp, r7
 800ad94:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ad98:	4770      	bx	lr

0800ad9a <_ZN8touchgfx15UIEventListener15handleDragEventERKNS_9DragEventE>:
    /**
     * This handler is invoked when a drag event has been detected by the system.
     *
     * @param  event The event data.
     */
    virtual void handleDragEvent(const DragEvent& event)
 800ad9a:	b480      	push	{r7}
 800ad9c:	b083      	sub	sp, #12
 800ad9e:	af00      	add	r7, sp, #0
 800ada0:	6078      	str	r0, [r7, #4]
 800ada2:	6039      	str	r1, [r7, #0]
    {
        (void)event; // Unused variable
    }
 800ada4:	bf00      	nop
 800ada6:	370c      	adds	r7, #12
 800ada8:	46bd      	mov	sp, r7
 800adaa:	f85d 7b04 	ldr.w	r7, [sp], #4
 800adae:	4770      	bx	lr

0800adb0 <_ZN8touchgfx15UIEventListener18handleGestureEventERKNS_12GestureEventE>:
    /**
     * This handler is invoked when a gesture event has been detected by the system.
     *
     * @param  event The event data.
     */
    virtual void handleGestureEvent(const GestureEvent& event)
 800adb0:	b480      	push	{r7}
 800adb2:	b083      	sub	sp, #12
 800adb4:	af00      	add	r7, sp, #0
 800adb6:	6078      	str	r0, [r7, #4]
 800adb8:	6039      	str	r1, [r7, #0]
    {
        (void)event; // Unused variable
    }
 800adba:	bf00      	nop
 800adbc:	370c      	adds	r7, #12
 800adbe:	46bd      	mov	sp, r7
 800adc0:	f85d 7b04 	ldr.w	r7, [sp], #4
 800adc4:	4770      	bx	lr

0800adc6 <_ZN8touchgfx15UIEventListener14handleKeyEventEh>:
    /**
     * This handler is invoked when a key (or button) event has been detected by the system.
     *
     * @param  c The key or button pressed.
     */
    virtual void handleKeyEvent(uint8_t c)
 800adc6:	b480      	push	{r7}
 800adc8:	b083      	sub	sp, #12
 800adca:	af00      	add	r7, sp, #0
 800adcc:	6078      	str	r0, [r7, #4]
 800adce:	460b      	mov	r3, r1
 800add0:	70fb      	strb	r3, [r7, #3]
    {
        (void)c; // Unused variable
    }
 800add2:	bf00      	nop
 800add4:	370c      	adds	r7, #12
 800add6:	46bd      	mov	sp, r7
 800add8:	f85d 7b04 	ldr.w	r7, [sp], #4
 800addc:	4770      	bx	lr

0800adde <_ZN8touchgfx15UIEventListener15handleTickEventEv>:

    /**
     * This handler is invoked when a system tick event has been generated. The system tick
     * period is configured in the HAL.
     */
    virtual void handleTickEvent()
 800adde:	b480      	push	{r7}
 800ade0:	b083      	sub	sp, #12
 800ade2:	af00      	add	r7, sp, #0
 800ade4:	6078      	str	r0, [r7, #4]
    {
    }
 800ade6:	bf00      	nop
 800ade8:	370c      	adds	r7, #12
 800adea:	46bd      	mov	sp, r7
 800adec:	f85d 7b04 	ldr.w	r7, [sp], #4
 800adf0:	4770      	bx	lr

0800adf2 <_ZN8touchgfx15UIEventListener29handlePendingScreenTransitionEv>:

    /** This handler is invoked when a change screen event is pending. */
    virtual void handlePendingScreenTransition()
 800adf2:	b480      	push	{r7}
 800adf4:	b083      	sub	sp, #12
 800adf6:	af00      	add	r7, sp, #0
 800adf8:	6078      	str	r0, [r7, #4]
    {
    }
 800adfa:	bf00      	nop
 800adfc:	370c      	adds	r7, #12
 800adfe:	46bd      	mov	sp, r7
 800ae00:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ae04:	4770      	bx	lr
	...

0800ae08 <_ZN8touchgfx15UIEventListenerD1Ev>:

    /** Finalizes an instance of the UIEventListener class. */
    virtual ~UIEventListener()
 800ae08:	b480      	push	{r7}
 800ae0a:	b083      	sub	sp, #12
 800ae0c:	af00      	add	r7, sp, #0
 800ae0e:	6078      	str	r0, [r7, #4]
    {
 800ae10:	4a04      	ldr	r2, [pc, #16]	; (800ae24 <_ZN8touchgfx15UIEventListenerD1Ev+0x1c>)
 800ae12:	687b      	ldr	r3, [r7, #4]
 800ae14:	601a      	str	r2, [r3, #0]
    }
 800ae16:	687b      	ldr	r3, [r7, #4]
 800ae18:	4618      	mov	r0, r3
 800ae1a:	370c      	adds	r7, #12
 800ae1c:	46bd      	mov	sp, r7
 800ae1e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ae22:	4770      	bx	lr
 800ae24:	0802e678 	.word	0x0802e678

0800ae28 <_ZN8touchgfx15UIEventListenerD0Ev>:
    virtual ~UIEventListener()
 800ae28:	b580      	push	{r7, lr}
 800ae2a:	b082      	sub	sp, #8
 800ae2c:	af00      	add	r7, sp, #0
 800ae2e:	6078      	str	r0, [r7, #4]
    }
 800ae30:	6878      	ldr	r0, [r7, #4]
 800ae32:	f7ff ffe9 	bl	800ae08 <_ZN8touchgfx15UIEventListenerD1Ev>
 800ae36:	2104      	movs	r1, #4
 800ae38:	6878      	ldr	r0, [r7, #4]
 800ae3a:	f01f fa8e 	bl	802a35a <_ZdlPvj>
 800ae3e:	687b      	ldr	r3, [r7, #4]
 800ae40:	4618      	mov	r0, r3
 800ae42:	3708      	adds	r7, #8
 800ae44:	46bd      	mov	sp, r7
 800ae46:	bd80      	pop	{r7, pc}

0800ae48 <_ZN8touchgfx11Application19changeToStartScreenEv>:
     * @note The application will not make a complete restart - if
     *       your Model contains data, this will not be reset, unless
     *       this is explicitly done in your
     *       FrontendApplication::changeToStartScreen().
     */
    virtual void changeToStartScreen()
 800ae48:	b480      	push	{r7}
 800ae4a:	b083      	sub	sp, #12
 800ae4c:	af00      	add	r7, sp, #0
 800ae4e:	6078      	str	r0, [r7, #4]
    {
    }
 800ae50:	bf00      	nop
 800ae52:	370c      	adds	r7, #12
 800ae54:	46bd      	mov	sp, r7
 800ae56:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ae5a:	4770      	bx	lr

0800ae5c <_ZN8touchgfx11Application15appSwitchScreenEh>:
     * means to switch screen from places that does not have access to a pointer to the new
     * screen. Base implementation is empty.
     *
     * @param screenId An id that maps to the desired screen.
     */
    virtual void appSwitchScreen(uint8_t screenId)
 800ae5c:	b480      	push	{r7}
 800ae5e:	b083      	sub	sp, #12
 800ae60:	af00      	add	r7, sp, #0
 800ae62:	6078      	str	r0, [r7, #4]
 800ae64:	460b      	mov	r3, r1
 800ae66:	70fb      	strb	r3, [r7, #3]
    {
        (void)screenId; // Unused variable
    }
 800ae68:	bf00      	nop
 800ae6a:	370c      	adds	r7, #12
 800ae6c:	46bd      	mov	sp, r7
 800ae6e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ae72:	4770      	bx	lr

0800ae74 <_ZN8touchgfx11Application13requestRedrawERNS_4RectE>:
    /**
     * An application specific function for requesting redraw of given Rect.
     *
     * @param [in,out] rect The Rect that must be redrawn.
     */
    virtual void requestRedraw(Rect& rect)
 800ae74:	b480      	push	{r7}
 800ae76:	b083      	sub	sp, #12
 800ae78:	af00      	add	r7, sp, #0
 800ae7a:	6078      	str	r0, [r7, #4]
 800ae7c:	6039      	str	r1, [r7, #0]
    {
        redraw = rect;
 800ae7e:	687b      	ldr	r3, [r7, #4]
 800ae80:	683a      	ldr	r2, [r7, #0]
 800ae82:	f503 7398 	add.w	r3, r3, #304	; 0x130
 800ae86:	6810      	ldr	r0, [r2, #0]
 800ae88:	6851      	ldr	r1, [r2, #4]
 800ae8a:	c303      	stmia	r3!, {r0, r1}
    }
 800ae8c:	bf00      	nop
 800ae8e:	370c      	adds	r7, #12
 800ae90:	46bd      	mov	sp, r7
 800ae92:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ae96:	4770      	bx	lr

0800ae98 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>:
        timerWidgets.add(w);
    }

    /** Clears all currently registered timer widgets. */

    void clearAllTimerWidgets()
 800ae98:	b580      	push	{r7, lr}
 800ae9a:	b082      	sub	sp, #8
 800ae9c:	af00      	add	r7, sp, #0
 800ae9e:	6078      	str	r0, [r7, #4]
    {
        timerWidgets.clear();
 800aea0:	687b      	ldr	r3, [r7, #4]
 800aea2:	3304      	adds	r3, #4
 800aea4:	4618      	mov	r0, r3
 800aea6:	f00d fb97 	bl	80185d8 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
    }
 800aeaa:	bf00      	nop
 800aeac:	3708      	adds	r7, #8
 800aeae:	46bd      	mov	sp, r7
 800aeb0:	bd80      	pop	{r7, pc}
	...

0800aeb4 <_ZN8touchgfx15GenericCallbackIvvvED1Ev>:
template <>
class GenericCallback<void>
{
public:
    /** Finalizes an instance of the GenericCallback<void> class. */
    virtual ~GenericCallback()
 800aeb4:	b480      	push	{r7}
 800aeb6:	b083      	sub	sp, #12
 800aeb8:	af00      	add	r7, sp, #0
 800aeba:	6078      	str	r0, [r7, #4]
    {
 800aebc:	4a04      	ldr	r2, [pc, #16]	; (800aed0 <_ZN8touchgfx15GenericCallbackIvvvED1Ev+0x1c>)
 800aebe:	687b      	ldr	r3, [r7, #4]
 800aec0:	601a      	str	r2, [r3, #0]
    }
 800aec2:	687b      	ldr	r3, [r7, #4]
 800aec4:	4618      	mov	r0, r3
 800aec6:	370c      	adds	r7, #12
 800aec8:	46bd      	mov	sp, r7
 800aeca:	f85d 7b04 	ldr.w	r7, [sp], #4
 800aece:	4770      	bx	lr
 800aed0:	0802e660 	.word	0x0802e660

0800aed4 <_ZN8touchgfx15GenericCallbackIvvvED0Ev>:
    virtual ~GenericCallback()
 800aed4:	b580      	push	{r7, lr}
 800aed6:	b082      	sub	sp, #8
 800aed8:	af00      	add	r7, sp, #0
 800aeda:	6078      	str	r0, [r7, #4]
    }
 800aedc:	6878      	ldr	r0, [r7, #4]
 800aede:	f7ff ffe9 	bl	800aeb4 <_ZN8touchgfx15GenericCallbackIvvvED1Ev>
 800aee2:	2104      	movs	r1, #4
 800aee4:	6878      	ldr	r0, [r7, #4]
 800aee6:	f01f fa38 	bl	802a35a <_ZdlPvj>
 800aeea:	687b      	ldr	r3, [r7, #4]
 800aeec:	4618      	mov	r0, r3
 800aeee:	3708      	adds	r7, #8
 800aef0:	46bd      	mov	sp, r7
 800aef2:	bd80      	pop	{r7, pc}

0800aef4 <_ZN8touchgfx3HAL11getInstanceEv>:
    /**
     * Gets the HAL instance.
     *
     * @return The HAL instance.
     */
    static HAL* getInstance()
 800aef4:	b480      	push	{r7}
 800aef6:	af00      	add	r7, sp, #0
    {
        return instance;
 800aef8:	4b03      	ldr	r3, [pc, #12]	; (800af08 <_ZN8touchgfx3HAL11getInstanceEv+0x14>)
 800aefa:	681b      	ldr	r3, [r3, #0]
    }
 800aefc:	4618      	mov	r0, r3
 800aefe:	46bd      	mov	sp, r7
 800af00:	f85d 7b04 	ldr.w	r7, [sp], #4
 800af04:	4770      	bx	lr
 800af06:	bf00      	nop
 800af08:	20006c34 	.word	0x20006c34

0800af0c <_ZN8touchgfx3HAL3lcdEv>:
    /**
     * Gets a reference to the LCD.
     *
     * @return A reference to the LCD.
     */
    static LCD& lcd()
 800af0c:	b480      	push	{r7}
 800af0e:	af00      	add	r7, sp, #0
    {
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 800af10:	4b0b      	ldr	r3, [pc, #44]	; (800af40 <_ZN8touchgfx3HAL3lcdEv+0x34>)
 800af12:	681b      	ldr	r3, [r3, #0]
 800af14:	f893 3058 	ldrb.w	r3, [r3, #88]	; 0x58
 800af18:	2b00      	cmp	r3, #0
 800af1a:	d008      	beq.n	800af2e <_ZN8touchgfx3HAL3lcdEv+0x22>
 800af1c:	4b08      	ldr	r3, [pc, #32]	; (800af40 <_ZN8touchgfx3HAL3lcdEv+0x34>)
 800af1e:	681b      	ldr	r3, [r3, #0]
 800af20:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800af22:	2b00      	cmp	r3, #0
 800af24:	d003      	beq.n	800af2e <_ZN8touchgfx3HAL3lcdEv+0x22>
        {
            return *instance->auxiliaryLCD;
 800af26:	4b06      	ldr	r3, [pc, #24]	; (800af40 <_ZN8touchgfx3HAL3lcdEv+0x34>)
 800af28:	681b      	ldr	r3, [r3, #0]
 800af2a:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800af2c:	e002      	b.n	800af34 <_ZN8touchgfx3HAL3lcdEv+0x28>
        }
        return instance->lcdRef;
 800af2e:	4b04      	ldr	r3, [pc, #16]	; (800af40 <_ZN8touchgfx3HAL3lcdEv+0x34>)
 800af30:	681b      	ldr	r3, [r3, #0]
 800af32:	689b      	ldr	r3, [r3, #8]
    }
 800af34:	4618      	mov	r0, r3
 800af36:	46bd      	mov	sp, r7
 800af38:	f85d 7b04 	ldr.w	r7, [sp], #4
 800af3c:	4770      	bx	lr
 800af3e:	bf00      	nop
 800af40:	20006c34 	.word	0x20006c34

0800af44 <_ZN8touchgfx10TransitionC1Ev>:
 */
class Transition
{
public:
    /** Initializes a new instance of the Transition class. */
    Transition()
 800af44:	b480      	push	{r7}
 800af46:	b083      	sub	sp, #12
 800af48:	af00      	add	r7, sp, #0
 800af4a:	6078      	str	r0, [r7, #4]
        : screenContainer(0), done(false)
 800af4c:	4a07      	ldr	r2, [pc, #28]	; (800af6c <_ZN8touchgfx10TransitionC1Ev+0x28>)
 800af4e:	687b      	ldr	r3, [r7, #4]
 800af50:	601a      	str	r2, [r3, #0]
 800af52:	687b      	ldr	r3, [r7, #4]
 800af54:	2200      	movs	r2, #0
 800af56:	605a      	str	r2, [r3, #4]
 800af58:	687b      	ldr	r3, [r7, #4]
 800af5a:	2200      	movs	r2, #0
 800af5c:	721a      	strb	r2, [r3, #8]
    {
    }
 800af5e:	687b      	ldr	r3, [r7, #4]
 800af60:	4618      	mov	r0, r3
 800af62:	370c      	adds	r7, #12
 800af64:	46bd      	mov	sp, r7
 800af66:	f85d 7b04 	ldr.w	r7, [sp], #4
 800af6a:	4770      	bx	lr
 800af6c:	0802e63c 	.word	0x0802e63c

0800af70 <_ZN8touchgfx10TransitionD1Ev>:

    /** Finalizes an instance of the Transition class. */
    virtual ~Transition()
 800af70:	b480      	push	{r7}
 800af72:	b083      	sub	sp, #12
 800af74:	af00      	add	r7, sp, #0
 800af76:	6078      	str	r0, [r7, #4]
    {
 800af78:	4a04      	ldr	r2, [pc, #16]	; (800af8c <_ZN8touchgfx10TransitionD1Ev+0x1c>)
 800af7a:	687b      	ldr	r3, [r7, #4]
 800af7c:	601a      	str	r2, [r3, #0]
    }
 800af7e:	687b      	ldr	r3, [r7, #4]
 800af80:	4618      	mov	r0, r3
 800af82:	370c      	adds	r7, #12
 800af84:	46bd      	mov	sp, r7
 800af86:	f85d 7b04 	ldr.w	r7, [sp], #4
 800af8a:	4770      	bx	lr
 800af8c:	0802e63c 	.word	0x0802e63c

0800af90 <_ZN8touchgfx10TransitionD0Ev>:
    virtual ~Transition()
 800af90:	b580      	push	{r7, lr}
 800af92:	b082      	sub	sp, #8
 800af94:	af00      	add	r7, sp, #0
 800af96:	6078      	str	r0, [r7, #4]
    }
 800af98:	6878      	ldr	r0, [r7, #4]
 800af9a:	f7ff ffe9 	bl	800af70 <_ZN8touchgfx10TransitionD1Ev>
 800af9e:	210c      	movs	r1, #12
 800afa0:	6878      	ldr	r0, [r7, #4]
 800afa2:	f01f f9da 	bl	802a35a <_ZdlPvj>
 800afa6:	687b      	ldr	r3, [r7, #4]
 800afa8:	4618      	mov	r0, r3
 800afaa:	3708      	adds	r7, #8
 800afac:	46bd      	mov	sp, r7
 800afae:	bd80      	pop	{r7, pc}

0800afb0 <_ZN8touchgfx10Transition15handleTickEventEv>:

    /** Called for every tick when transitioning. */
    virtual void handleTickEvent()
 800afb0:	b480      	push	{r7}
 800afb2:	b083      	sub	sp, #12
 800afb4:	af00      	add	r7, sp, #0
 800afb6:	6078      	str	r0, [r7, #4]
    {
    }
 800afb8:	bf00      	nop
 800afba:	370c      	adds	r7, #12
 800afbc:	46bd      	mov	sp, r7
 800afbe:	f85d 7b04 	ldr.w	r7, [sp], #4
 800afc2:	4770      	bx	lr

0800afc4 <_ZN8touchgfx10Transition8tearDownEv>:

    /**
     * Tears down the Animation. Called before the destructor is called, when the
     * application changes the transition.
     */
    virtual void tearDown()
 800afc4:	b480      	push	{r7}
 800afc6:	b083      	sub	sp, #12
 800afc8:	af00      	add	r7, sp, #0
 800afca:	6078      	str	r0, [r7, #4]
    {
    }
 800afcc:	bf00      	nop
 800afce:	370c      	adds	r7, #12
 800afd0:	46bd      	mov	sp, r7
 800afd2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800afd6:	4770      	bx	lr

0800afd8 <_ZN8touchgfx10Transition4initEv>:

    /**
     * Initializes the transition. Called after the constructor is called, when the
     * application changes the transition.
     */
    virtual void init()
 800afd8:	b480      	push	{r7}
 800afda:	b083      	sub	sp, #12
 800afdc:	af00      	add	r7, sp, #0
 800afde:	6078      	str	r0, [r7, #4]
    {
    }
 800afe0:	bf00      	nop
 800afe2:	370c      	adds	r7, #12
 800afe4:	46bd      	mov	sp, r7
 800afe6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800afea:	4770      	bx	lr

0800afec <_ZN8touchgfx10Transition10invalidateEv>:
    /**
     * Invalidates the screen when starting the Transition. Default is
     * to invalidate the whole screen. Subclasses can do partial
     * invalidation.
     */
    virtual void invalidate()
 800afec:	b580      	push	{r7, lr}
 800afee:	b082      	sub	sp, #8
 800aff0:	af00      	add	r7, sp, #0
 800aff2:	6078      	str	r0, [r7, #4]
    {
        Application::getInstance()->invalidate();
 800aff4:	f00d fab2 	bl	801855c <_ZN8touchgfx11Application11getInstanceEv>
 800aff8:	4603      	mov	r3, r0
 800affa:	681a      	ldr	r2, [r3, #0]
 800affc:	323c      	adds	r2, #60	; 0x3c
 800affe:	6812      	ldr	r2, [r2, #0]
 800b000:	4618      	mov	r0, r3
 800b002:	4790      	blx	r2
    }
 800b004:	bf00      	nop
 800b006:	3708      	adds	r7, #8
 800b008:	46bd      	mov	sp, r7
 800b00a:	bd80      	pop	{r7, pc}

0800b00c <_ZN8touchgfx10Transition18setScreenContainerERNS_9ContainerE>:
     * Sets the Screen Container. Is used by Screen to enable the transition to access the
     * Container.
     *
     * @param [in] cont The Container the transition should have access to.
     */
    virtual void setScreenContainer(Container& cont)
 800b00c:	b480      	push	{r7}
 800b00e:	b083      	sub	sp, #12
 800b010:	af00      	add	r7, sp, #0
 800b012:	6078      	str	r0, [r7, #4]
 800b014:	6039      	str	r1, [r7, #0]
    {
        screenContainer = &cont;
 800b016:	687b      	ldr	r3, [r7, #4]
 800b018:	683a      	ldr	r2, [r7, #0]
 800b01a:	605a      	str	r2, [r3, #4]
    }
 800b01c:	bf00      	nop
 800b01e:	370c      	adds	r7, #12
 800b020:	46bd      	mov	sp, r7
 800b022:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b026:	4770      	bx	lr

0800b028 <_ZN8touchgfx11ApplicationD1Ev>:
class Application : public UIEventListener
 800b028:	b580      	push	{r7, lr}
 800b02a:	b082      	sub	sp, #8
 800b02c:	af00      	add	r7, sp, #0
 800b02e:	6078      	str	r0, [r7, #4]
 800b030:	4a05      	ldr	r2, [pc, #20]	; (800b048 <_ZN8touchgfx11ApplicationD1Ev+0x20>)
 800b032:	687b      	ldr	r3, [r7, #4]
 800b034:	601a      	str	r2, [r3, #0]
 800b036:	687b      	ldr	r3, [r7, #4]
 800b038:	4618      	mov	r0, r3
 800b03a:	f7ff fee5 	bl	800ae08 <_ZN8touchgfx15UIEventListenerD1Ev>
 800b03e:	687b      	ldr	r3, [r7, #4]
 800b040:	4618      	mov	r0, r3
 800b042:	3708      	adds	r7, #8
 800b044:	46bd      	mov	sp, r7
 800b046:	bd80      	pop	{r7, pc}
 800b048:	0802fd34 	.word	0x0802fd34

0800b04c <_ZN8touchgfx11ApplicationD0Ev>:
 800b04c:	b580      	push	{r7, lr}
 800b04e:	b082      	sub	sp, #8
 800b050:	af00      	add	r7, sp, #0
 800b052:	6078      	str	r0, [r7, #4]
 800b054:	6878      	ldr	r0, [r7, #4]
 800b056:	f7ff ffe7 	bl	800b028 <_ZN8touchgfx11ApplicationD1Ev>
 800b05a:	f44f 719e 	mov.w	r1, #316	; 0x13c
 800b05e:	6878      	ldr	r0, [r7, #4]
 800b060:	f01f f97b 	bl	802a35a <_ZdlPvj>
 800b064:	687b      	ldr	r3, [r7, #4]
 800b066:	4618      	mov	r0, r3
 800b068:	3708      	adds	r7, #8
 800b06a:	46bd      	mov	sp, r7
 800b06c:	bd80      	pop	{r7, pc}
	...

0800b070 <_ZN8touchgfx14MVPApplicationC1Ev>:
 */
class MVPApplication : public Application
{
public:
    /** Initializes a new instance of the MVPApplication class. */
    MVPApplication()
 800b070:	b580      	push	{r7, lr}
 800b072:	b082      	sub	sp, #8
 800b074:	af00      	add	r7, sp, #0
 800b076:	6078      	str	r0, [r7, #4]
        : currentPresenter(0),
          pendingScreenTransitionCallback(0)
 800b078:	687b      	ldr	r3, [r7, #4]
 800b07a:	4618      	mov	r0, r3
 800b07c:	f00d fb7a 	bl	8018774 <_ZN8touchgfx11ApplicationC1Ev>
 800b080:	4a09      	ldr	r2, [pc, #36]	; (800b0a8 <_ZN8touchgfx14MVPApplicationC1Ev+0x38>)
 800b082:	687b      	ldr	r3, [r7, #4]
 800b084:	601a      	str	r2, [r3, #0]
        : currentPresenter(0),
 800b086:	687b      	ldr	r3, [r7, #4]
 800b088:	2200      	movs	r2, #0
 800b08a:	f8c3 213c 	str.w	r2, [r3, #316]	; 0x13c
          pendingScreenTransitionCallback(0)
 800b08e:	687b      	ldr	r3, [r7, #4]
 800b090:	2200      	movs	r2, #0
 800b092:	f8c3 2140 	str.w	r2, [r3, #320]	; 0x140
    {
        instance = this;
 800b096:	687b      	ldr	r3, [r7, #4]
 800b098:	4a04      	ldr	r2, [pc, #16]	; (800b0ac <_ZN8touchgfx14MVPApplicationC1Ev+0x3c>)
 800b09a:	6013      	str	r3, [r2, #0]
    }
 800b09c:	687b      	ldr	r3, [r7, #4]
 800b09e:	4618      	mov	r0, r3
 800b0a0:	3708      	adds	r7, #8
 800b0a2:	46bd      	mov	sp, r7
 800b0a4:	bd80      	pop	{r7, pc}
 800b0a6:	bf00      	nop
 800b0a8:	0802e5e8 	.word	0x0802e5e8
 800b0ac:	20006c88 	.word	0x20006c88

0800b0b0 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv>:
    /**
     * Handles the pending screen transition.
     *
     * Delegates the work to evaluatePendingScreenTransition()
     */
    virtual void handlePendingScreenTransition()
 800b0b0:	b580      	push	{r7, lr}
 800b0b2:	b082      	sub	sp, #8
 800b0b4:	af00      	add	r7, sp, #0
 800b0b6:	6078      	str	r0, [r7, #4]
    {
        evaluatePendingScreenTransition();
 800b0b8:	6878      	ldr	r0, [r7, #4]
 800b0ba:	f000 f804 	bl	800b0c6 <_ZN8touchgfx14MVPApplication31evaluatePendingScreenTransitionEv>
    }
 800b0be:	bf00      	nop
 800b0c0:	3708      	adds	r7, #8
 800b0c2:	46bd      	mov	sp, r7
 800b0c4:	bd80      	pop	{r7, pc}

0800b0c6 <_ZN8touchgfx14MVPApplication31evaluatePendingScreenTransitionEv>:

    /**
     * Evaluates the pending Callback instances. If a callback is valid, it is executed and
     * a Screen transition is executed.
     */
    void evaluatePendingScreenTransition()
 800b0c6:	b580      	push	{r7, lr}
 800b0c8:	b082      	sub	sp, #8
 800b0ca:	af00      	add	r7, sp, #0
 800b0cc:	6078      	str	r0, [r7, #4]
    {
        if (pendingScreenTransitionCallback && pendingScreenTransitionCallback->isValid())
 800b0ce:	687b      	ldr	r3, [r7, #4]
 800b0d0:	f8d3 3140 	ldr.w	r3, [r3, #320]	; 0x140
 800b0d4:	2b00      	cmp	r3, #0
 800b0d6:	d00f      	beq.n	800b0f8 <_ZN8touchgfx14MVPApplication31evaluatePendingScreenTransitionEv+0x32>
 800b0d8:	687b      	ldr	r3, [r7, #4]
 800b0da:	f8d3 2140 	ldr.w	r2, [r3, #320]	; 0x140
 800b0de:	687b      	ldr	r3, [r7, #4]
 800b0e0:	f8d3 3140 	ldr.w	r3, [r3, #320]	; 0x140
 800b0e4:	681b      	ldr	r3, [r3, #0]
 800b0e6:	330c      	adds	r3, #12
 800b0e8:	681b      	ldr	r3, [r3, #0]
 800b0ea:	4610      	mov	r0, r2
 800b0ec:	4798      	blx	r3
 800b0ee:	4603      	mov	r3, r0
 800b0f0:	2b00      	cmp	r3, #0
 800b0f2:	d001      	beq.n	800b0f8 <_ZN8touchgfx14MVPApplication31evaluatePendingScreenTransitionEv+0x32>
 800b0f4:	2301      	movs	r3, #1
 800b0f6:	e000      	b.n	800b0fa <_ZN8touchgfx14MVPApplication31evaluatePendingScreenTransitionEv+0x34>
 800b0f8:	2300      	movs	r3, #0
 800b0fa:	2b00      	cmp	r3, #0
 800b0fc:	d00e      	beq.n	800b11c <_ZN8touchgfx14MVPApplication31evaluatePendingScreenTransitionEv+0x56>
        {
            pendingScreenTransitionCallback->execute();
 800b0fe:	687b      	ldr	r3, [r7, #4]
 800b100:	f8d3 2140 	ldr.w	r2, [r3, #320]	; 0x140
 800b104:	687b      	ldr	r3, [r7, #4]
 800b106:	f8d3 3140 	ldr.w	r3, [r3, #320]	; 0x140
 800b10a:	681b      	ldr	r3, [r3, #0]
 800b10c:	3308      	adds	r3, #8
 800b10e:	681b      	ldr	r3, [r3, #0]
 800b110:	4610      	mov	r0, r2
 800b112:	4798      	blx	r3
            pendingScreenTransitionCallback = 0;
 800b114:	687b      	ldr	r3, [r7, #4]
 800b116:	2200      	movs	r2, #0
 800b118:	f8c3 2140 	str.w	r2, [r3, #320]	; 0x140
        }
    }
 800b11c:	bf00      	nop
 800b11e:	3708      	adds	r7, #8
 800b120:	46bd      	mov	sp, r7
 800b122:	bd80      	pop	{r7, pc}

0800b124 <_ZN5Model4bindEP13ModelListener>:
class Model
{
public:
    Model();

    void bind(ModelListener* listener)
 800b124:	b480      	push	{r7}
 800b126:	b083      	sub	sp, #12
 800b128:	af00      	add	r7, sp, #0
 800b12a:	6078      	str	r0, [r7, #4]
 800b12c:	6039      	str	r1, [r7, #0]
    {
        modelListener = listener;
 800b12e:	687b      	ldr	r3, [r7, #4]
 800b130:	683a      	ldr	r2, [r7, #0]
 800b132:	601a      	str	r2, [r3, #0]
    }
 800b134:	bf00      	nop
 800b136:	370c      	adds	r7, #12
 800b138:	46bd      	mov	sp, r7
 800b13a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b13e:	4770      	bx	lr

0800b140 <_ZN8touchgfx14MVPApplicationD1Ev>:
class MVPApplication : public Application
 800b140:	b580      	push	{r7, lr}
 800b142:	b082      	sub	sp, #8
 800b144:	af00      	add	r7, sp, #0
 800b146:	6078      	str	r0, [r7, #4]
 800b148:	4a05      	ldr	r2, [pc, #20]	; (800b160 <_ZN8touchgfx14MVPApplicationD1Ev+0x20>)
 800b14a:	687b      	ldr	r3, [r7, #4]
 800b14c:	601a      	str	r2, [r3, #0]
 800b14e:	687b      	ldr	r3, [r7, #4]
 800b150:	4618      	mov	r0, r3
 800b152:	f7ff ff69 	bl	800b028 <_ZN8touchgfx11ApplicationD1Ev>
 800b156:	687b      	ldr	r3, [r7, #4]
 800b158:	4618      	mov	r0, r3
 800b15a:	3708      	adds	r7, #8
 800b15c:	46bd      	mov	sp, r7
 800b15e:	bd80      	pop	{r7, pc}
 800b160:	0802e5e8 	.word	0x0802e5e8

0800b164 <_ZN8touchgfx14MVPApplicationD0Ev>:
 800b164:	b580      	push	{r7, lr}
 800b166:	b082      	sub	sp, #8
 800b168:	af00      	add	r7, sp, #0
 800b16a:	6078      	str	r0, [r7, #4]
 800b16c:	6878      	ldr	r0, [r7, #4]
 800b16e:	f7ff ffe7 	bl	800b140 <_ZN8touchgfx14MVPApplicationD1Ev>
 800b172:	f44f 71a2 	mov.w	r1, #324	; 0x144
 800b176:	6878      	ldr	r0, [r7, #4]
 800b178:	f01f f8ef 	bl	802a35a <_ZdlPvj>
 800b17c:	687b      	ldr	r3, [r7, #4]
 800b17e:	4618      	mov	r0, r3
 800b180:	3708      	adds	r7, #8
 800b182:	46bd      	mov	sp, r7
 800b184:	bd80      	pop	{r7, pc}
	...

0800b188 <_ZN23FrontendApplicationBaseD1Ev>:

class FrontendApplicationBase : public touchgfx::MVPApplication
{
public:
    FrontendApplicationBase(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplicationBase() { }
 800b188:	b580      	push	{r7, lr}
 800b18a:	b082      	sub	sp, #8
 800b18c:	af00      	add	r7, sp, #0
 800b18e:	6078      	str	r0, [r7, #4]
 800b190:	4a08      	ldr	r2, [pc, #32]	; (800b1b4 <_ZN23FrontendApplicationBaseD1Ev+0x2c>)
 800b192:	687b      	ldr	r3, [r7, #4]
 800b194:	601a      	str	r2, [r3, #0]
 800b196:	687b      	ldr	r3, [r7, #4]
 800b198:	f503 73a2 	add.w	r3, r3, #324	; 0x144
 800b19c:	4618      	mov	r0, r3
 800b19e:	f000 facd 	bl	800b73c <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>
 800b1a2:	687b      	ldr	r3, [r7, #4]
 800b1a4:	4618      	mov	r0, r3
 800b1a6:	f7ff ffcb 	bl	800b140 <_ZN8touchgfx14MVPApplicationD1Ev>
 800b1aa:	687b      	ldr	r3, [r7, #4]
 800b1ac:	4618      	mov	r0, r3
 800b1ae:	3708      	adds	r7, #8
 800b1b0:	46bd      	mov	sp, r7
 800b1b2:	bd80      	pop	{r7, pc}
 800b1b4:	0802e57c 	.word	0x0802e57c

0800b1b8 <_ZN23FrontendApplicationBaseD0Ev>:
 800b1b8:	b580      	push	{r7, lr}
 800b1ba:	b082      	sub	sp, #8
 800b1bc:	af00      	add	r7, sp, #0
 800b1be:	6078      	str	r0, [r7, #4]
 800b1c0:	6878      	ldr	r0, [r7, #4]
 800b1c2:	f7ff ffe1 	bl	800b188 <_ZN23FrontendApplicationBaseD1Ev>
 800b1c6:	f44f 71ae 	mov.w	r1, #348	; 0x15c
 800b1ca:	6878      	ldr	r0, [r7, #4]
 800b1cc:	f01f f8c5 	bl	802a35a <_ZdlPvj>
 800b1d0:	687b      	ldr	r3, [r7, #4]
 800b1d2:	4618      	mov	r0, r3
 800b1d4:	3708      	adds	r7, #8
 800b1d6:	46bd      	mov	sp, r7
 800b1d8:	bd80      	pop	{r7, pc}

0800b1da <_ZN23FrontendApplicationBase19changeToStartScreenEv>:

    virtual void changeToStartScreen()
 800b1da:	b580      	push	{r7, lr}
 800b1dc:	b082      	sub	sp, #8
 800b1de:	af00      	add	r7, sp, #0
 800b1e0:	6078      	str	r0, [r7, #4]
    {
        gotoScreen1ScreenNoTransition();
 800b1e2:	6878      	ldr	r0, [r7, #4]
 800b1e4:	f000 f882 	bl	800b2ec <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv>
    }
 800b1e8:	bf00      	nop
 800b1ea:	3708      	adds	r7, #8
 800b1ec:	46bd      	mov	sp, r7
 800b1ee:	bd80      	pop	{r7, pc}

0800b1f0 <_ZN8touchgfx12NoTransition15handleTickEventEv>:
 */
class NoTransition : public Transition
{
public:
    /** Indicates that the transition is done after the first tick. */
    virtual void handleTickEvent()
 800b1f0:	b480      	push	{r7}
 800b1f2:	b083      	sub	sp, #12
 800b1f4:	af00      	add	r7, sp, #0
 800b1f6:	6078      	str	r0, [r7, #4]
    {
        done = true;
 800b1f8:	687b      	ldr	r3, [r7, #4]
 800b1fa:	2201      	movs	r2, #1
 800b1fc:	721a      	strb	r2, [r3, #8]
    }
 800b1fe:	bf00      	nop
 800b200:	370c      	adds	r7, #12
 800b202:	46bd      	mov	sp, r7
 800b204:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b208:	4770      	bx	lr

0800b20a <_ZN13ModelListener4bindEP5Model>:
public:
    ModelListener() : model(0) {}
    
    virtual ~ModelListener() {}

    void bind(Model* m)
 800b20a:	b480      	push	{r7}
 800b20c:	b083      	sub	sp, #12
 800b20e:	af00      	add	r7, sp, #0
 800b210:	6078      	str	r0, [r7, #4]
 800b212:	6039      	str	r1, [r7, #0]
    {
        model = m;
 800b214:	687b      	ldr	r3, [r7, #4]
 800b216:	683a      	ldr	r2, [r7, #0]
 800b218:	605a      	str	r2, [r3, #4]
    }
 800b21a:	bf00      	nop
 800b21c:	370c      	adds	r7, #12
 800b21e:	46bd      	mov	sp, r7
 800b220:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b224:	4770      	bx	lr
	...

0800b228 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>:
#include <gui/screen1_screen/Screen1View.hpp>
#include <gui/screen1_screen/Screen1Presenter.hpp>

using namespace touchgfx;

FrontendApplicationBase::FrontendApplicationBase(Model& m, FrontendHeap& heap)
 800b228:	b580      	push	{r7, lr}
 800b22a:	b084      	sub	sp, #16
 800b22c:	af00      	add	r7, sp, #0
 800b22e:	60f8      	str	r0, [r7, #12]
 800b230:	60b9      	str	r1, [r7, #8]
 800b232:	607a      	str	r2, [r7, #4]
    : touchgfx::MVPApplication(),
      transitionCallback(),
      frontendHeap(heap),
      model(m)
 800b234:	68fb      	ldr	r3, [r7, #12]
 800b236:	4618      	mov	r0, r3
 800b238:	f7ff ff1a 	bl	800b070 <_ZN8touchgfx14MVPApplicationC1Ev>
 800b23c:	4a16      	ldr	r2, [pc, #88]	; (800b298 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x70>)
 800b23e:	68fb      	ldr	r3, [r7, #12]
 800b240:	601a      	str	r2, [r3, #0]
      transitionCallback(),
 800b242:	68fb      	ldr	r3, [r7, #12]
 800b244:	f503 73a2 	add.w	r3, r3, #324	; 0x144
 800b248:	4618      	mov	r0, r3
 800b24a:	f000 f8a5 	bl	800b398 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEC1Ev>
      frontendHeap(heap),
 800b24e:	68fb      	ldr	r3, [r7, #12]
 800b250:	687a      	ldr	r2, [r7, #4]
 800b252:	f8c3 2154 	str.w	r2, [r3, #340]	; 0x154
      model(m)
 800b256:	68fb      	ldr	r3, [r7, #12]
 800b258:	68ba      	ldr	r2, [r7, #8]
 800b25a:	f8c3 2158 	str.w	r2, [r3, #344]	; 0x158
{
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_LANDSCAPE);
 800b25e:	f7ff fe49 	bl	800aef4 <_ZN8touchgfx3HAL11getInstanceEv>
 800b262:	4603      	mov	r3, r0
 800b264:	681a      	ldr	r2, [r3, #0]
 800b266:	3208      	adds	r2, #8
 800b268:	6812      	ldr	r2, [r2, #0]
 800b26a:	2100      	movs	r1, #0
 800b26c:	4618      	mov	r0, r3
 800b26e:	4790      	blx	r2
    touchgfx::Texts::setLanguage(GB);
 800b270:	2000      	movs	r0, #0
 800b272:	f003 fe7b 	bl	800ef6c <_ZN8touchgfx5Texts11setLanguageEt>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableTextureMapperAll();
 800b276:	f7ff fe49 	bl	800af0c <_ZN8touchgfx3HAL3lcdEv>
 800b27a:	4603      	mov	r3, r0
 800b27c:	4618      	mov	r0, r3
 800b27e:	f017 fa24 	bl	80226ca <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableDecompressorL8_All();
 800b282:	f7ff fe43 	bl	800af0c <_ZN8touchgfx3HAL3lcdEv>
 800b286:	4603      	mov	r3, r0
 800b288:	4618      	mov	r0, r3
 800b28a:	f017 fa99 	bl	80227c0 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_AllEv>
}
 800b28e:	68fb      	ldr	r3, [r7, #12]
 800b290:	4618      	mov	r0, r3
 800b292:	3710      	adds	r7, #16
 800b294:	46bd      	mov	sp, r7
 800b296:	bd80      	pop	{r7, pc}
 800b298:	0802e57c 	.word	0x0802e57c

0800b29c <_ZN8touchgfx15GenericCallbackIvvvEaSERKS1_>:
class GenericCallback<void>
 800b29c:	b480      	push	{r7}
 800b29e:	b083      	sub	sp, #12
 800b2a0:	af00      	add	r7, sp, #0
 800b2a2:	6078      	str	r0, [r7, #4]
 800b2a4:	6039      	str	r1, [r7, #0]
 800b2a6:	687b      	ldr	r3, [r7, #4]
 800b2a8:	4618      	mov	r0, r3
 800b2aa:	370c      	adds	r7, #12
 800b2ac:	46bd      	mov	sp, r7
 800b2ae:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b2b2:	4770      	bx	lr

0800b2b4 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEaSEOS2_>:
 *
 * @note The member function to call must return void. The function can have zero, one, two or
 *       three arguments of any type.
 */
template <class dest_type>
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 800b2b4:	b580      	push	{r7, lr}
 800b2b6:	b082      	sub	sp, #8
 800b2b8:	af00      	add	r7, sp, #0
 800b2ba:	6078      	str	r0, [r7, #4]
 800b2bc:	6039      	str	r1, [r7, #0]
 800b2be:	687b      	ldr	r3, [r7, #4]
 800b2c0:	683a      	ldr	r2, [r7, #0]
 800b2c2:	4611      	mov	r1, r2
 800b2c4:	4618      	mov	r0, r3
 800b2c6:	f7ff ffe9 	bl	800b29c <_ZN8touchgfx15GenericCallbackIvvvEaSERKS1_>
 800b2ca:	683b      	ldr	r3, [r7, #0]
 800b2cc:	685a      	ldr	r2, [r3, #4]
 800b2ce:	687b      	ldr	r3, [r7, #4]
 800b2d0:	605a      	str	r2, [r3, #4]
 800b2d2:	687b      	ldr	r3, [r7, #4]
 800b2d4:	683a      	ldr	r2, [r7, #0]
 800b2d6:	3308      	adds	r3, #8
 800b2d8:	3208      	adds	r2, #8
 800b2da:	e892 0003 	ldmia.w	r2, {r0, r1}
 800b2de:	e883 0003 	stmia.w	r3, {r0, r1}
 800b2e2:	687b      	ldr	r3, [r7, #4]
 800b2e4:	4618      	mov	r0, r3
 800b2e6:	3708      	adds	r7, #8
 800b2e8:	46bd      	mov	sp, r7
 800b2ea:	bd80      	pop	{r7, pc}

0800b2ec <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv>:
 */

// Screen1

void FrontendApplicationBase::gotoScreen1ScreenNoTransition()
{
 800b2ec:	b590      	push	{r4, r7, lr}
 800b2ee:	b089      	sub	sp, #36	; 0x24
 800b2f0:	af00      	add	r7, sp, #0
 800b2f2:	6078      	str	r0, [r7, #4]
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoScreen1ScreenNoTransitionImpl);
 800b2f4:	687b      	ldr	r3, [r7, #4]
 800b2f6:	f503 74a2 	add.w	r4, r3, #324	; 0x144
 800b2fa:	4b10      	ldr	r3, [pc, #64]	; (800b33c <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv+0x50>)
 800b2fc:	61bb      	str	r3, [r7, #24]
 800b2fe:	2300      	movs	r3, #0
 800b300:	61fb      	str	r3, [r7, #28]
 800b302:	f107 0008 	add.w	r0, r7, #8
 800b306:	f107 0318 	add.w	r3, r7, #24
 800b30a:	cb0c      	ldmia	r3, {r2, r3}
 800b30c:	6879      	ldr	r1, [r7, #4]
 800b30e:	f000 f85f 	bl	800b3d0 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEC1EPS1_MS1_FvvE>
 800b312:	f107 0308 	add.w	r3, r7, #8
 800b316:	4619      	mov	r1, r3
 800b318:	4620      	mov	r0, r4
 800b31a:	f7ff ffcb 	bl	800b2b4 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEaSEOS2_>
 800b31e:	f107 0308 	add.w	r3, r7, #8
 800b322:	4618      	mov	r0, r3
 800b324:	f000 fa0a 	bl	800b73c <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>
    pendingScreenTransitionCallback = &transitionCallback;
 800b328:	687b      	ldr	r3, [r7, #4]
 800b32a:	f503 72a2 	add.w	r2, r3, #324	; 0x144
 800b32e:	687b      	ldr	r3, [r7, #4]
 800b330:	f8c3 2140 	str.w	r2, [r3, #320]	; 0x140
}
 800b334:	bf00      	nop
 800b336:	3724      	adds	r7, #36	; 0x24
 800b338:	46bd      	mov	sp, r7
 800b33a:	bd90      	pop	{r4, r7, pc}
 800b33c:	0800b341 	.word	0x0800b341

0800b340 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv>:

void FrontendApplicationBase::gotoScreen1ScreenNoTransitionImpl()
{
 800b340:	b580      	push	{r7, lr}
 800b342:	b084      	sub	sp, #16
 800b344:	af02      	add	r7, sp, #8
 800b346:	6078      	str	r0, [r7, #4]
    touchgfx::makeTransition<Screen1View, Screen1Presenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 800b348:	687b      	ldr	r3, [r7, #4]
 800b34a:	f503 719e 	add.w	r1, r3, #316	; 0x13c
 800b34e:	687b      	ldr	r3, [r7, #4]
 800b350:	f8d3 3154 	ldr.w	r3, [r3, #340]	; 0x154
 800b354:	461a      	mov	r2, r3
 800b356:	687b      	ldr	r3, [r7, #4]
 800b358:	f8d3 3158 	ldr.w	r3, [r3, #344]	; 0x158
 800b35c:	9300      	str	r3, [sp, #0]
 800b35e:	4b04      	ldr	r3, [pc, #16]	; (800b370 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x30>)
 800b360:	4804      	ldr	r0, [pc, #16]	; (800b374 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x34>)
 800b362:	f000 f867 	bl	800b434 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_>
}
 800b366:	bf00      	nop
 800b368:	3708      	adds	r7, #8
 800b36a:	46bd      	mov	sp, r7
 800b36c:	bd80      	pop	{r7, pc}
 800b36e:	bf00      	nop
 800b370:	20006c7c 	.word	0x20006c7c
 800b374:	20006c78 	.word	0x20006c78

0800b378 <_ZN8touchgfx15GenericCallbackIvvvEC1Ev>:
class GenericCallback<void>
 800b378:	b480      	push	{r7}
 800b37a:	b083      	sub	sp, #12
 800b37c:	af00      	add	r7, sp, #0
 800b37e:	6078      	str	r0, [r7, #4]
 800b380:	4a04      	ldr	r2, [pc, #16]	; (800b394 <_ZN8touchgfx15GenericCallbackIvvvEC1Ev+0x1c>)
 800b382:	687b      	ldr	r3, [r7, #4]
 800b384:	601a      	str	r2, [r3, #0]
 800b386:	687b      	ldr	r3, [r7, #4]
 800b388:	4618      	mov	r0, r3
 800b38a:	370c      	adds	r7, #12
 800b38c:	46bd      	mov	sp, r7
 800b38e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b392:	4770      	bx	lr
 800b394:	0802e660 	.word	0x0802e660

0800b398 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEC1Ev>:
{
    /** Initializes a new instance of the Callback class. */
    Callback()
 800b398:	b580      	push	{r7, lr}
 800b39a:	b082      	sub	sp, #8
 800b39c:	af00      	add	r7, sp, #0
 800b39e:	6078      	str	r0, [r7, #4]
        : pobject(0), pmemfun(0)
 800b3a0:	687b      	ldr	r3, [r7, #4]
 800b3a2:	4618      	mov	r0, r3
 800b3a4:	f7ff ffe8 	bl	800b378 <_ZN8touchgfx15GenericCallbackIvvvEC1Ev>
 800b3a8:	4a08      	ldr	r2, [pc, #32]	; (800b3cc <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEC1Ev+0x34>)
 800b3aa:	687b      	ldr	r3, [r7, #4]
 800b3ac:	601a      	str	r2, [r3, #0]
 800b3ae:	687b      	ldr	r3, [r7, #4]
 800b3b0:	2200      	movs	r2, #0
 800b3b2:	605a      	str	r2, [r3, #4]
 800b3b4:	687b      	ldr	r3, [r7, #4]
 800b3b6:	2200      	movs	r2, #0
 800b3b8:	609a      	str	r2, [r3, #8]
 800b3ba:	687b      	ldr	r3, [r7, #4]
 800b3bc:	2200      	movs	r2, #0
 800b3be:	60da      	str	r2, [r3, #12]
    {
    }
 800b3c0:	687b      	ldr	r3, [r7, #4]
 800b3c2:	4618      	mov	r0, r3
 800b3c4:	3708      	adds	r7, #8
 800b3c6:	46bd      	mov	sp, r7
 800b3c8:	bd80      	pop	{r7, pc}
 800b3ca:	bf00      	nop
 800b3cc:	0802e5d0 	.word	0x0802e5d0

0800b3d0 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEC1EPS1_MS1_FvvE>:
     *
     * @param [in] pObject   Pointer to the object on which the function should be called.
     * @param [in] pmemfun_0 Address of member function. This is the version where function takes zero
     *                       arguments.
     */
    Callback(dest_type* pObject, void (dest_type::*pmemfun_0)())
 800b3d0:	b580      	push	{r7, lr}
 800b3d2:	b084      	sub	sp, #16
 800b3d4:	af00      	add	r7, sp, #0
 800b3d6:	60f8      	str	r0, [r7, #12]
 800b3d8:	60b9      	str	r1, [r7, #8]
 800b3da:	4639      	mov	r1, r7
 800b3dc:	e881 000c 	stmia.w	r1, {r2, r3}
        : pobject(pObject), pmemfun(pmemfun_0)
 800b3e0:	68fb      	ldr	r3, [r7, #12]
 800b3e2:	4618      	mov	r0, r3
 800b3e4:	f7ff ffc8 	bl	800b378 <_ZN8touchgfx15GenericCallbackIvvvEC1Ev>
 800b3e8:	4a08      	ldr	r2, [pc, #32]	; (800b40c <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEC1EPS1_MS1_FvvE+0x3c>)
 800b3ea:	68fb      	ldr	r3, [r7, #12]
 800b3ec:	601a      	str	r2, [r3, #0]
 800b3ee:	68fb      	ldr	r3, [r7, #12]
 800b3f0:	68ba      	ldr	r2, [r7, #8]
 800b3f2:	605a      	str	r2, [r3, #4]
 800b3f4:	68fb      	ldr	r3, [r7, #12]
 800b3f6:	3308      	adds	r3, #8
 800b3f8:	463a      	mov	r2, r7
 800b3fa:	e892 0003 	ldmia.w	r2, {r0, r1}
 800b3fe:	e883 0003 	stmia.w	r3, {r0, r1}
    {
    }
 800b402:	68fb      	ldr	r3, [r7, #12]
 800b404:	4618      	mov	r0, r3
 800b406:	3710      	adds	r7, #16
 800b408:	46bd      	mov	sp, r7
 800b40a:	bd80      	pop	{r7, pc}
 800b40c:	0802e5d0 	.word	0x0802e5d0

0800b410 <_ZN8touchgfx12NoTransitionC1Ev>:
class NoTransition : public Transition
 800b410:	b580      	push	{r7, lr}
 800b412:	b082      	sub	sp, #8
 800b414:	af00      	add	r7, sp, #0
 800b416:	6078      	str	r0, [r7, #4]
 800b418:	687b      	ldr	r3, [r7, #4]
 800b41a:	4618      	mov	r0, r3
 800b41c:	f7ff fd92 	bl	800af44 <_ZN8touchgfx10TransitionC1Ev>
 800b420:	4a03      	ldr	r2, [pc, #12]	; (800b430 <_ZN8touchgfx12NoTransitionC1Ev+0x20>)
 800b422:	687b      	ldr	r3, [r7, #4]
 800b424:	601a      	str	r2, [r3, #0]
 800b426:	687b      	ldr	r3, [r7, #4]
 800b428:	4618      	mov	r0, r3
 800b42a:	3708      	adds	r7, #8
 800b42c:	46bd      	mov	sp, r7
 800b42e:	bd80      	pop	{r7, pc}
 800b430:	0802e558 	.word	0x0802e558

0800b434 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_>:
 *
 * @return Pointer to the new Presenter of the requested type. Incidentally it will be the same
 *         value as the old presenter due to memory reuse.
 */
template <class ScreenType, class PresenterType, class TransType, class ModelType>
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
 800b434:	b590      	push	{r4, r7, lr}
 800b436:	b08f      	sub	sp, #60	; 0x3c
 800b438:	af00      	add	r7, sp, #0
 800b43a:	60f8      	str	r0, [r7, #12]
 800b43c:	60b9      	str	r1, [r7, #8]
 800b43e:	607a      	str	r2, [r7, #4]
 800b440:	603b      	str	r3, [r7, #0]
{
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 800b442:	687b      	ldr	r3, [r7, #4]
 800b444:	689a      	ldr	r2, [r3, #8]
 800b446:	687b      	ldr	r3, [r7, #4]
 800b448:	689b      	ldr	r3, [r3, #8]
 800b44a:	681b      	ldr	r3, [r3, #0]
 800b44c:	3320      	adds	r3, #32
 800b44e:	681b      	ldr	r3, [r3, #0]
 800b450:	4610      	mov	r0, r2
 800b452:	4798      	blx	r3
 800b454:	4603      	mov	r3, r0
 800b456:	f242 4217 	movw	r2, #9239	; 0x2417
 800b45a:	4293      	cmp	r3, r2
 800b45c:	d805      	bhi.n	800b46a <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x36>
 800b45e:	4b7d      	ldr	r3, [pc, #500]	; (800b654 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x220>)
 800b460:	4a7d      	ldr	r2, [pc, #500]	; (800b658 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x224>)
 800b462:	21a3      	movs	r1, #163	; 0xa3
 800b464:	487d      	ldr	r0, [pc, #500]	; (800b65c <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x228>)
 800b466:	f01e ffa7 	bl	802a3b8 <__assert_func>
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 800b46a:	687b      	ldr	r3, [r7, #4]
 800b46c:	685a      	ldr	r2, [r3, #4]
 800b46e:	687b      	ldr	r3, [r7, #4]
 800b470:	685b      	ldr	r3, [r3, #4]
 800b472:	681b      	ldr	r3, [r3, #0]
 800b474:	3320      	adds	r3, #32
 800b476:	681b      	ldr	r3, [r3, #0]
 800b478:	4610      	mov	r0, r2
 800b47a:	4798      	blx	r3
 800b47c:	4603      	mov	r3, r0
 800b47e:	2b0f      	cmp	r3, #15
 800b480:	d805      	bhi.n	800b48e <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x5a>
 800b482:	4b77      	ldr	r3, [pc, #476]	; (800b660 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x22c>)
 800b484:	4a74      	ldr	r2, [pc, #464]	; (800b658 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x224>)
 800b486:	21a4      	movs	r1, #164	; 0xa4
 800b488:	4874      	ldr	r0, [pc, #464]	; (800b65c <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x228>)
 800b48a:	f01e ff95 	bl	802a3b8 <__assert_func>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 800b48e:	687b      	ldr	r3, [r7, #4]
 800b490:	68da      	ldr	r2, [r3, #12]
 800b492:	687b      	ldr	r3, [r7, #4]
 800b494:	68db      	ldr	r3, [r3, #12]
 800b496:	681b      	ldr	r3, [r3, #0]
 800b498:	3320      	adds	r3, #32
 800b49a:	681b      	ldr	r3, [r3, #0]
 800b49c:	4610      	mov	r0, r2
 800b49e:	4798      	blx	r3
 800b4a0:	4603      	mov	r3, r0
 800b4a2:	2b0b      	cmp	r3, #11
 800b4a4:	d805      	bhi.n	800b4b2 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x7e>
 800b4a6:	4b6f      	ldr	r3, [pc, #444]	; (800b664 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x230>)
 800b4a8:	4a6b      	ldr	r2, [pc, #428]	; (800b658 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x224>)
 800b4aa:	21a5      	movs	r1, #165	; 0xa5
 800b4ac:	486b      	ldr	r0, [pc, #428]	; (800b65c <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x228>)
 800b4ae:	f01e ff83 	bl	802a3b8 <__assert_func>
 800b4b2:	68fb      	ldr	r3, [r7, #12]
 800b4b4:	62bb      	str	r3, [r7, #40]	; 0x28
 800b4b6:	68bb      	ldr	r3, [r7, #8]
 800b4b8:	627b      	str	r3, [r7, #36]	; 0x24
 800b4ba:	683b      	ldr	r3, [r7, #0]
 800b4bc:	623b      	str	r3, [r7, #32]
    Application::getInstance()->clearAllTimerWidgets();
 800b4be:	f00d f84d 	bl	801855c <_ZN8touchgfx11Application11getInstanceEv>
 800b4c2:	4603      	mov	r3, r0
 800b4c4:	4618      	mov	r0, r3
 800b4c6:	f7ff fce7 	bl	800ae98 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>
    if (*currentTrans)
 800b4ca:	6a3b      	ldr	r3, [r7, #32]
 800b4cc:	681b      	ldr	r3, [r3, #0]
 800b4ce:	2b00      	cmp	r3, #0
 800b4d0:	d008      	beq.n	800b4e4 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xb0>
        (*currentTrans)->tearDown();
 800b4d2:	6a3b      	ldr	r3, [r7, #32]
 800b4d4:	681a      	ldr	r2, [r3, #0]
 800b4d6:	6a3b      	ldr	r3, [r7, #32]
 800b4d8:	681b      	ldr	r3, [r3, #0]
 800b4da:	681b      	ldr	r3, [r3, #0]
 800b4dc:	330c      	adds	r3, #12
 800b4de:	681b      	ldr	r3, [r3, #0]
 800b4e0:	4610      	mov	r0, r2
 800b4e2:	4798      	blx	r3
    if (*currentTrans)
 800b4e4:	6a3b      	ldr	r3, [r7, #32]
 800b4e6:	681b      	ldr	r3, [r3, #0]
 800b4e8:	2b00      	cmp	r3, #0
 800b4ea:	d007      	beq.n	800b4fc <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xc8>
        (*currentTrans)->~Transition();
 800b4ec:	6a3b      	ldr	r3, [r7, #32]
 800b4ee:	681a      	ldr	r2, [r3, #0]
 800b4f0:	6a3b      	ldr	r3, [r7, #32]
 800b4f2:	681b      	ldr	r3, [r3, #0]
 800b4f4:	681b      	ldr	r3, [r3, #0]
 800b4f6:	681b      	ldr	r3, [r3, #0]
 800b4f8:	4610      	mov	r0, r2
 800b4fa:	4798      	blx	r3
    if (*currentScreen)
 800b4fc:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800b4fe:	681b      	ldr	r3, [r3, #0]
 800b500:	2b00      	cmp	r3, #0
 800b502:	d008      	beq.n	800b516 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xe2>
        (*currentScreen)->tearDownScreen();
 800b504:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800b506:	681a      	ldr	r2, [r3, #0]
 800b508:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800b50a:	681b      	ldr	r3, [r3, #0]
 800b50c:	681b      	ldr	r3, [r3, #0]
 800b50e:	3314      	adds	r3, #20
 800b510:	681b      	ldr	r3, [r3, #0]
 800b512:	4610      	mov	r0, r2
 800b514:	4798      	blx	r3
    if (*currentPresenter)
 800b516:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800b518:	681b      	ldr	r3, [r3, #0]
 800b51a:	2b00      	cmp	r3, #0
 800b51c:	d008      	beq.n	800b530 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xfc>
        (*currentPresenter)->deactivate();
 800b51e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800b520:	681a      	ldr	r2, [r3, #0]
 800b522:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800b524:	681b      	ldr	r3, [r3, #0]
 800b526:	681b      	ldr	r3, [r3, #0]
 800b528:	3304      	adds	r3, #4
 800b52a:	681b      	ldr	r3, [r3, #0]
 800b52c:	4610      	mov	r0, r2
 800b52e:	4798      	blx	r3
    if (*currentScreen)
 800b530:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800b532:	681b      	ldr	r3, [r3, #0]
 800b534:	2b00      	cmp	r3, #0
 800b536:	d007      	beq.n	800b548 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x114>
        (*currentScreen)->~Screen();
 800b538:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800b53a:	681a      	ldr	r2, [r3, #0]
 800b53c:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800b53e:	681b      	ldr	r3, [r3, #0]
 800b540:	681b      	ldr	r3, [r3, #0]
 800b542:	681b      	ldr	r3, [r3, #0]
 800b544:	4610      	mov	r0, r2
 800b546:	4798      	blx	r3
    if (*currentPresenter)
 800b548:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800b54a:	681b      	ldr	r3, [r3, #0]
 800b54c:	2b00      	cmp	r3, #0
 800b54e:	d008      	beq.n	800b562 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x12e>
        (*currentPresenter)->~Presenter();
 800b550:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800b552:	681a      	ldr	r2, [r3, #0]
 800b554:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800b556:	681b      	ldr	r3, [r3, #0]
 800b558:	681b      	ldr	r3, [r3, #0]
 800b55a:	3308      	adds	r3, #8
 800b55c:	681b      	ldr	r3, [r3, #0]
 800b55e:	4610      	mov	r0, r2
 800b560:	4798      	blx	r3
}
 800b562:	bf00      	nop

    prepareTransition(currentScreen, currentPresenter, currentTrans);

    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 800b564:	687b      	ldr	r3, [r7, #4]
 800b566:	68db      	ldr	r3, [r3, #12]
 800b568:	2100      	movs	r1, #0
 800b56a:	4618      	mov	r0, r3
 800b56c:	f000 f87c 	bl	800b668 <_ZN8touchgfx17AbstractPartition2atINS_12NoTransitionEEERT_t>
 800b570:	4603      	mov	r3, r0
 800b572:	4619      	mov	r1, r3
 800b574:	200c      	movs	r0, #12
 800b576:	f7ff fbf9 	bl	800ad6c <_ZnwjPv>
 800b57a:	4604      	mov	r4, r0
 800b57c:	4620      	mov	r0, r4
 800b57e:	f7ff ff47 	bl	800b410 <_ZN8touchgfx12NoTransitionC1Ev>
 800b582:	637c      	str	r4, [r7, #52]	; 0x34
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 800b584:	687b      	ldr	r3, [r7, #4]
 800b586:	689b      	ldr	r3, [r3, #8]
 800b588:	2100      	movs	r1, #0
 800b58a:	4618      	mov	r0, r3
 800b58c:	f000 f87f 	bl	800b68e <_ZN8touchgfx17AbstractPartition2atI11Screen1ViewEERT_t>
 800b590:	4603      	mov	r3, r0
 800b592:	4619      	mov	r1, r3
 800b594:	f242 4018 	movw	r0, #9240	; 0x2418
 800b598:	f7ff fbe8 	bl	800ad6c <_ZnwjPv>
 800b59c:	4604      	mov	r4, r0
 800b59e:	4620      	mov	r0, r4
 800b5a0:	f003 ff88 	bl	800f4b4 <_ZN11Screen1ViewC1Ev>
 800b5a4:	633c      	str	r4, [r7, #48]	; 0x30
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 800b5a6:	687b      	ldr	r3, [r7, #4]
 800b5a8:	685b      	ldr	r3, [r3, #4]
 800b5aa:	2100      	movs	r1, #0
 800b5ac:	4618      	mov	r0, r3
 800b5ae:	f000 f881 	bl	800b6b4 <_ZN8touchgfx17AbstractPartition2atI16Screen1PresenterEERT_t>
 800b5b2:	4603      	mov	r3, r0
 800b5b4:	4619      	mov	r1, r3
 800b5b6:	2010      	movs	r0, #16
 800b5b8:	f7ff fbd8 	bl	800ad6c <_ZnwjPv>
 800b5bc:	4604      	mov	r4, r0
 800b5be:	6b39      	ldr	r1, [r7, #48]	; 0x30
 800b5c0:	4620      	mov	r0, r4
 800b5c2:	f003 ff0b 	bl	800f3dc <_ZN16Screen1PresenterC1ER11Screen1View>
 800b5c6:	62fc      	str	r4, [r7, #44]	; 0x2c
    *currentTrans = newTransition;
 800b5c8:	683b      	ldr	r3, [r7, #0]
 800b5ca:	6b7a      	ldr	r2, [r7, #52]	; 0x34
 800b5cc:	601a      	str	r2, [r3, #0]
    *currentPresenter = newPresenter;
 800b5ce:	68bb      	ldr	r3, [r7, #8]
 800b5d0:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 800b5d2:	601a      	str	r2, [r3, #0]
    *currentScreen = newScreen;
 800b5d4:	68fb      	ldr	r3, [r7, #12]
 800b5d6:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 800b5d8:	601a      	str	r2, [r3, #0]
    model->bind(newPresenter);
 800b5da:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800b5dc:	2b00      	cmp	r3, #0
 800b5de:	d002      	beq.n	800b5e6 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x1b2>
 800b5e0:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800b5e2:	3304      	adds	r3, #4
 800b5e4:	e000      	b.n	800b5e8 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x1b4>
 800b5e6:	2300      	movs	r3, #0
 800b5e8:	4619      	mov	r1, r3
 800b5ea:	6cb8      	ldr	r0, [r7, #72]	; 0x48
 800b5ec:	f7ff fd9a 	bl	800b124 <_ZN5Model4bindEP13ModelListener>
    newPresenter->bind(model);
 800b5f0:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800b5f2:	3304      	adds	r3, #4
 800b5f4:	6cb9      	ldr	r1, [r7, #72]	; 0x48
 800b5f6:	4618      	mov	r0, r3
 800b5f8:	f7ff fe07 	bl	800b20a <_ZN13ModelListener4bindEP5Model>
    newScreen->bind(*newPresenter);
 800b5fc:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800b5fe:	6af9      	ldr	r1, [r7, #44]	; 0x2c
 800b600:	4618      	mov	r0, r3
 800b602:	f000 f86a 	bl	800b6da <_ZN8touchgfx4ViewI16Screen1PresenterE4bindERS1_>
 800b606:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800b608:	61fb      	str	r3, [r7, #28]
 800b60a:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800b60c:	61bb      	str	r3, [r7, #24]
 800b60e:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800b610:	617b      	str	r3, [r7, #20]
    newScreen->setupScreen();
 800b612:	69fb      	ldr	r3, [r7, #28]
 800b614:	681b      	ldr	r3, [r3, #0]
 800b616:	330c      	adds	r3, #12
 800b618:	681b      	ldr	r3, [r3, #0]
 800b61a:	69f8      	ldr	r0, [r7, #28]
 800b61c:	4798      	blx	r3
    newPresenter->activate();
 800b61e:	69bb      	ldr	r3, [r7, #24]
 800b620:	681b      	ldr	r3, [r3, #0]
 800b622:	681b      	ldr	r3, [r3, #0]
 800b624:	69b8      	ldr	r0, [r7, #24]
 800b626:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 800b628:	6979      	ldr	r1, [r7, #20]
 800b62a:	69f8      	ldr	r0, [r7, #28]
 800b62c:	f00e fd4c 	bl	801a0c8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 800b630:	697b      	ldr	r3, [r7, #20]
 800b632:	681b      	ldr	r3, [r3, #0]
 800b634:	3310      	adds	r3, #16
 800b636:	681b      	ldr	r3, [r3, #0]
 800b638:	6978      	ldr	r0, [r7, #20]
 800b63a:	4798      	blx	r3
    newTransition->invalidate();
 800b63c:	697b      	ldr	r3, [r7, #20]
 800b63e:	681b      	ldr	r3, [r3, #0]
 800b640:	3314      	adds	r3, #20
 800b642:	681b      	ldr	r3, [r3, #0]
 800b644:	6978      	ldr	r0, [r7, #20]
 800b646:	4798      	blx	r3
}
 800b648:	bf00      	nop

    finalizeTransition((Screen*)newScreen, (Presenter*)newPresenter, (Transition*)newTransition);

    return newPresenter;
 800b64a:	6afb      	ldr	r3, [r7, #44]	; 0x2c
}
 800b64c:	4618      	mov	r0, r3
 800b64e:	373c      	adds	r7, #60	; 0x3c
 800b650:	46bd      	mov	sp, r7
 800b652:	bd90      	pop	{r4, r7, pc}
 800b654:	0802d1cc 	.word	0x0802d1cc
 800b658:	0802d25c 	.word	0x0802d25c
 800b65c:	0802d360 	.word	0x0802d360
 800b660:	0802d3a4 	.word	0x0802d3a4
 800b664:	0802d448 	.word	0x0802d448

0800b668 <_ZN8touchgfx17AbstractPartition2atINS_12NoTransitionEEERT_t>:
     * @param  index The index into the Partition storage where the returned object is located.
     *
     * @return A typed reference to the object at the specified index.
     */
    template <typename T>
    T& at(const uint16_t index)
 800b668:	b580      	push	{r7, lr}
 800b66a:	b082      	sub	sp, #8
 800b66c:	af00      	add	r7, sp, #0
 800b66e:	6078      	str	r0, [r7, #4]
 800b670:	460b      	mov	r3, r1
 800b672:	807b      	strh	r3, [r7, #2]
    {
        return *static_cast<T*>(element(index));
 800b674:	687b      	ldr	r3, [r7, #4]
 800b676:	681b      	ldr	r3, [r3, #0]
 800b678:	3324      	adds	r3, #36	; 0x24
 800b67a:	681b      	ldr	r3, [r3, #0]
 800b67c:	887a      	ldrh	r2, [r7, #2]
 800b67e:	4611      	mov	r1, r2
 800b680:	6878      	ldr	r0, [r7, #4]
 800b682:	4798      	blx	r3
 800b684:	4603      	mov	r3, r0
    }
 800b686:	4618      	mov	r0, r3
 800b688:	3708      	adds	r7, #8
 800b68a:	46bd      	mov	sp, r7
 800b68c:	bd80      	pop	{r7, pc}

0800b68e <_ZN8touchgfx17AbstractPartition2atI11Screen1ViewEERT_t>:
    T& at(const uint16_t index)
 800b68e:	b580      	push	{r7, lr}
 800b690:	b082      	sub	sp, #8
 800b692:	af00      	add	r7, sp, #0
 800b694:	6078      	str	r0, [r7, #4]
 800b696:	460b      	mov	r3, r1
 800b698:	807b      	strh	r3, [r7, #2]
        return *static_cast<T*>(element(index));
 800b69a:	687b      	ldr	r3, [r7, #4]
 800b69c:	681b      	ldr	r3, [r3, #0]
 800b69e:	3324      	adds	r3, #36	; 0x24
 800b6a0:	681b      	ldr	r3, [r3, #0]
 800b6a2:	887a      	ldrh	r2, [r7, #2]
 800b6a4:	4611      	mov	r1, r2
 800b6a6:	6878      	ldr	r0, [r7, #4]
 800b6a8:	4798      	blx	r3
 800b6aa:	4603      	mov	r3, r0
    }
 800b6ac:	4618      	mov	r0, r3
 800b6ae:	3708      	adds	r7, #8
 800b6b0:	46bd      	mov	sp, r7
 800b6b2:	bd80      	pop	{r7, pc}

0800b6b4 <_ZN8touchgfx17AbstractPartition2atI16Screen1PresenterEERT_t>:
    T& at(const uint16_t index)
 800b6b4:	b580      	push	{r7, lr}
 800b6b6:	b082      	sub	sp, #8
 800b6b8:	af00      	add	r7, sp, #0
 800b6ba:	6078      	str	r0, [r7, #4]
 800b6bc:	460b      	mov	r3, r1
 800b6be:	807b      	strh	r3, [r7, #2]
        return *static_cast<T*>(element(index));
 800b6c0:	687b      	ldr	r3, [r7, #4]
 800b6c2:	681b      	ldr	r3, [r3, #0]
 800b6c4:	3324      	adds	r3, #36	; 0x24
 800b6c6:	681b      	ldr	r3, [r3, #0]
 800b6c8:	887a      	ldrh	r2, [r7, #2]
 800b6ca:	4611      	mov	r1, r2
 800b6cc:	6878      	ldr	r0, [r7, #4]
 800b6ce:	4798      	blx	r3
 800b6d0:	4603      	mov	r3, r0
    }
 800b6d2:	4618      	mov	r0, r3
 800b6d4:	3708      	adds	r7, #8
 800b6d6:	46bd      	mov	sp, r7
 800b6d8:	bd80      	pop	{r7, pc}

0800b6da <_ZN8touchgfx4ViewI16Screen1PresenterE4bindERS1_>:
     * Binds an instance of a specific Presenter type (subclass) to the View instance. This function
     * is called automatically when a new presenter/view pair is activated.
     *
     * @param [in] newPresenter The specific Presenter to be associated with the View.
     */
    void bind(T& newPresenter)
 800b6da:	b480      	push	{r7}
 800b6dc:	b083      	sub	sp, #12
 800b6de:	af00      	add	r7, sp, #0
 800b6e0:	6078      	str	r0, [r7, #4]
 800b6e2:	6039      	str	r1, [r7, #0]
    {
        presenter = &newPresenter;
 800b6e4:	687b      	ldr	r3, [r7, #4]
 800b6e6:	683a      	ldr	r2, [r7, #0]
 800b6e8:	63da      	str	r2, [r3, #60]	; 0x3c
    }
 800b6ea:	bf00      	nop
 800b6ec:	370c      	adds	r7, #12
 800b6ee:	46bd      	mov	sp, r7
 800b6f0:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b6f4:	4770      	bx	lr
	...

0800b6f8 <_ZN8touchgfx12NoTransitionD1Ev>:
 800b6f8:	b580      	push	{r7, lr}
 800b6fa:	b082      	sub	sp, #8
 800b6fc:	af00      	add	r7, sp, #0
 800b6fe:	6078      	str	r0, [r7, #4]
 800b700:	4a05      	ldr	r2, [pc, #20]	; (800b718 <_ZN8touchgfx12NoTransitionD1Ev+0x20>)
 800b702:	687b      	ldr	r3, [r7, #4]
 800b704:	601a      	str	r2, [r3, #0]
 800b706:	687b      	ldr	r3, [r7, #4]
 800b708:	4618      	mov	r0, r3
 800b70a:	f7ff fc31 	bl	800af70 <_ZN8touchgfx10TransitionD1Ev>
 800b70e:	687b      	ldr	r3, [r7, #4]
 800b710:	4618      	mov	r0, r3
 800b712:	3708      	adds	r7, #8
 800b714:	46bd      	mov	sp, r7
 800b716:	bd80      	pop	{r7, pc}
 800b718:	0802e558 	.word	0x0802e558

0800b71c <_ZN8touchgfx12NoTransitionD0Ev>:
 800b71c:	b580      	push	{r7, lr}
 800b71e:	b082      	sub	sp, #8
 800b720:	af00      	add	r7, sp, #0
 800b722:	6078      	str	r0, [r7, #4]
 800b724:	6878      	ldr	r0, [r7, #4]
 800b726:	f7ff ffe7 	bl	800b6f8 <_ZN8touchgfx12NoTransitionD1Ev>
 800b72a:	210c      	movs	r1, #12
 800b72c:	6878      	ldr	r0, [r7, #4]
 800b72e:	f01e fe14 	bl	802a35a <_ZdlPvj>
 800b732:	687b      	ldr	r3, [r7, #4]
 800b734:	4618      	mov	r0, r3
 800b736:	3708      	adds	r7, #8
 800b738:	46bd      	mov	sp, r7
 800b73a:	bd80      	pop	{r7, pc}

0800b73c <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 800b73c:	b580      	push	{r7, lr}
 800b73e:	b082      	sub	sp, #8
 800b740:	af00      	add	r7, sp, #0
 800b742:	6078      	str	r0, [r7, #4]
 800b744:	4a05      	ldr	r2, [pc, #20]	; (800b75c <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev+0x20>)
 800b746:	687b      	ldr	r3, [r7, #4]
 800b748:	601a      	str	r2, [r3, #0]
 800b74a:	687b      	ldr	r3, [r7, #4]
 800b74c:	4618      	mov	r0, r3
 800b74e:	f7ff fbb1 	bl	800aeb4 <_ZN8touchgfx15GenericCallbackIvvvED1Ev>
 800b752:	687b      	ldr	r3, [r7, #4]
 800b754:	4618      	mov	r0, r3
 800b756:	3708      	adds	r7, #8
 800b758:	46bd      	mov	sp, r7
 800b75a:	bd80      	pop	{r7, pc}
 800b75c:	0802e5d0 	.word	0x0802e5d0

0800b760 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED0Ev>:
 800b760:	b580      	push	{r7, lr}
 800b762:	b082      	sub	sp, #8
 800b764:	af00      	add	r7, sp, #0
 800b766:	6078      	str	r0, [r7, #4]
 800b768:	6878      	ldr	r0, [r7, #4]
 800b76a:	f7ff ffe7 	bl	800b73c <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>
 800b76e:	2110      	movs	r1, #16
 800b770:	6878      	ldr	r0, [r7, #4]
 800b772:	f01e fdf2 	bl	802a35a <_ZdlPvj>
 800b776:	687b      	ldr	r3, [r7, #4]
 800b778:	4618      	mov	r0, r3
 800b77a:	3708      	adds	r7, #8
 800b77c:	46bd      	mov	sp, r7
 800b77e:	bd80      	pop	{r7, pc}

0800b780 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv>:

    /**
     * Calls the member function. Do not call execute unless isValid() returns true (ie. a
     * pointer to the object and the function has been set).
     */
    virtual void execute()
 800b780:	b580      	push	{r7, lr}
 800b782:	b082      	sub	sp, #8
 800b784:	af00      	add	r7, sp, #0
 800b786:	6078      	str	r0, [r7, #4]
    {
        (pobject->*pmemfun)();
 800b788:	687b      	ldr	r3, [r7, #4]
 800b78a:	685b      	ldr	r3, [r3, #4]
 800b78c:	687a      	ldr	r2, [r7, #4]
 800b78e:	68d2      	ldr	r2, [r2, #12]
 800b790:	1052      	asrs	r2, r2, #1
 800b792:	1899      	adds	r1, r3, r2
 800b794:	687b      	ldr	r3, [r7, #4]
 800b796:	68db      	ldr	r3, [r3, #12]
 800b798:	f003 0301 	and.w	r3, r3, #1
 800b79c:	2b00      	cmp	r3, #0
 800b79e:	d102      	bne.n	800b7a6 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv+0x26>
 800b7a0:	687b      	ldr	r3, [r7, #4]
 800b7a2:	689b      	ldr	r3, [r3, #8]
 800b7a4:	e00a      	b.n	800b7bc <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv+0x3c>
 800b7a6:	687b      	ldr	r3, [r7, #4]
 800b7a8:	685b      	ldr	r3, [r3, #4]
 800b7aa:	687a      	ldr	r2, [r7, #4]
 800b7ac:	68d2      	ldr	r2, [r2, #12]
 800b7ae:	1052      	asrs	r2, r2, #1
 800b7b0:	4413      	add	r3, r2
 800b7b2:	681b      	ldr	r3, [r3, #0]
 800b7b4:	687a      	ldr	r2, [r7, #4]
 800b7b6:	6892      	ldr	r2, [r2, #8]
 800b7b8:	4413      	add	r3, r2
 800b7ba:	681b      	ldr	r3, [r3, #0]
 800b7bc:	4608      	mov	r0, r1
 800b7be:	4798      	blx	r3
    }
 800b7c0:	bf00      	nop
 800b7c2:	3708      	adds	r7, #8
 800b7c4:	46bd      	mov	sp, r7
 800b7c6:	bd80      	pop	{r7, pc}

0800b7c8 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv>:
    /**
     * Function to check whether the Callback has been initialized with values.
     *
     * @return true If the callback is valid (i.e. safe to call execute).
     */
    virtual bool isValid() const
 800b7c8:	b480      	push	{r7}
 800b7ca:	b083      	sub	sp, #12
 800b7cc:	af00      	add	r7, sp, #0
 800b7ce:	6078      	str	r0, [r7, #4]
    {
        return (pobject != 0) && (pmemfun != 0);
 800b7d0:	687b      	ldr	r3, [r7, #4]
 800b7d2:	685b      	ldr	r3, [r3, #4]
 800b7d4:	2b00      	cmp	r3, #0
 800b7d6:	d010      	beq.n	800b7fa <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x32>
 800b7d8:	687b      	ldr	r3, [r7, #4]
 800b7da:	689b      	ldr	r3, [r3, #8]
 800b7dc:	2b00      	cmp	r3, #0
 800b7de:	d107      	bne.n	800b7f0 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x28>
 800b7e0:	687b      	ldr	r3, [r7, #4]
 800b7e2:	68db      	ldr	r3, [r3, #12]
 800b7e4:	f003 0301 	and.w	r3, r3, #1
 800b7e8:	2b00      	cmp	r3, #0
 800b7ea:	d101      	bne.n	800b7f0 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x28>
 800b7ec:	2301      	movs	r3, #1
 800b7ee:	e000      	b.n	800b7f2 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x2a>
 800b7f0:	2300      	movs	r3, #0
 800b7f2:	2b01      	cmp	r3, #1
 800b7f4:	d001      	beq.n	800b7fa <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x32>
 800b7f6:	2301      	movs	r3, #1
 800b7f8:	e000      	b.n	800b7fc <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x34>
 800b7fa:	2300      	movs	r3, #0
    }
 800b7fc:	4618      	mov	r0, r3
 800b7fe:	370c      	adds	r7, #12
 800b800:	46bd      	mov	sp, r7
 800b802:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b806:	4770      	bx	lr

0800b808 <_ZN8touchgfx9colortypeC1Ev>:
 * extract a 24/32-bit color from this type, use the getColor32 function.
 */
struct colortype
{
    /** Default constructor. Creates a black (0) color. */
    colortype()
 800b808:	b480      	push	{r7}
 800b80a:	b083      	sub	sp, #12
 800b80c:	af00      	add	r7, sp, #0
 800b80e:	6078      	str	r0, [r7, #4]
        : color(0)
 800b810:	687b      	ldr	r3, [r7, #4]
 800b812:	2200      	movs	r2, #0
 800b814:	601a      	str	r2, [r3, #0]
    {
    }
 800b816:	687b      	ldr	r3, [r7, #4]
 800b818:	4618      	mov	r0, r3
 800b81a:	370c      	adds	r7, #12
 800b81c:	46bd      	mov	sp, r7
 800b81e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b822:	4770      	bx	lr

0800b824 <_ZN8touchgfx9colortypeC1Em>:
     *
     * @param  col The color.
     *
     * @see Color::getColorFromRGB
     */
    colortype(uint32_t col)
 800b824:	b480      	push	{r7}
 800b826:	b083      	sub	sp, #12
 800b828:	af00      	add	r7, sp, #0
 800b82a:	6078      	str	r0, [r7, #4]
 800b82c:	6039      	str	r1, [r7, #0]
        : color(col)
 800b82e:	687b      	ldr	r3, [r7, #4]
 800b830:	683a      	ldr	r2, [r7, #0]
 800b832:	601a      	str	r2, [r3, #0]
    {
    }
 800b834:	687b      	ldr	r3, [r7, #4]
 800b836:	4618      	mov	r0, r3
 800b838:	370c      	adds	r7, #12
 800b83a:	46bd      	mov	sp, r7
 800b83c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b840:	4770      	bx	lr

0800b842 <_ZN8touchgfx4RectC1Ev>:
/** Class representing a Rectangle with a few convenient methods. */
class Rect
{
public:
    /** Default constructor. Resulting in an empty Rect with coordinates 0,0. */
    Rect()
 800b842:	b480      	push	{r7}
 800b844:	b083      	sub	sp, #12
 800b846:	af00      	add	r7, sp, #0
 800b848:	6078      	str	r0, [r7, #4]
        : x(0), y(0), width(0), height(0)
 800b84a:	687b      	ldr	r3, [r7, #4]
 800b84c:	2200      	movs	r2, #0
 800b84e:	801a      	strh	r2, [r3, #0]
 800b850:	687b      	ldr	r3, [r7, #4]
 800b852:	2200      	movs	r2, #0
 800b854:	805a      	strh	r2, [r3, #2]
 800b856:	687b      	ldr	r3, [r7, #4]
 800b858:	2200      	movs	r2, #0
 800b85a:	809a      	strh	r2, [r3, #4]
 800b85c:	687b      	ldr	r3, [r7, #4]
 800b85e:	2200      	movs	r2, #0
 800b860:	80da      	strh	r2, [r3, #6]
    {
    }
 800b862:	687b      	ldr	r3, [r7, #4]
 800b864:	4618      	mov	r0, r3
 800b866:	370c      	adds	r7, #12
 800b868:	46bd      	mov	sp, r7
 800b86a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b86e:	4770      	bx	lr

0800b870 <_ZN8touchgfx4RectC1Essss>:
     * @param  rectX      The x coordinate.
     * @param  rectY      The y coordinate.
     * @param  rectWidth  The width.
     * @param  rectHeight The height.
     */
    Rect(int16_t rectX, int16_t rectY, int16_t rectWidth, int16_t rectHeight)
 800b870:	b480      	push	{r7}
 800b872:	b085      	sub	sp, #20
 800b874:	af00      	add	r7, sp, #0
 800b876:	60f8      	str	r0, [r7, #12]
 800b878:	4608      	mov	r0, r1
 800b87a:	4611      	mov	r1, r2
 800b87c:	461a      	mov	r2, r3
 800b87e:	4603      	mov	r3, r0
 800b880:	817b      	strh	r3, [r7, #10]
 800b882:	460b      	mov	r3, r1
 800b884:	813b      	strh	r3, [r7, #8]
 800b886:	4613      	mov	r3, r2
 800b888:	80fb      	strh	r3, [r7, #6]
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 800b88a:	68fb      	ldr	r3, [r7, #12]
 800b88c:	897a      	ldrh	r2, [r7, #10]
 800b88e:	801a      	strh	r2, [r3, #0]
 800b890:	68fb      	ldr	r3, [r7, #12]
 800b892:	893a      	ldrh	r2, [r7, #8]
 800b894:	805a      	strh	r2, [r3, #2]
 800b896:	68fb      	ldr	r3, [r7, #12]
 800b898:	88fa      	ldrh	r2, [r7, #6]
 800b89a:	809a      	strh	r2, [r3, #4]
 800b89c:	68fb      	ldr	r3, [r7, #12]
 800b89e:	8b3a      	ldrh	r2, [r7, #24]
 800b8a0:	80da      	strh	r2, [r3, #6]
    {
    }
 800b8a2:	68fb      	ldr	r3, [r7, #12]
 800b8a4:	4618      	mov	r0, r3
 800b8a6:	3714      	adds	r7, #20
 800b8a8:	46bd      	mov	sp, r7
 800b8aa:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b8ae:	4770      	bx	lr

0800b8b0 <_ZN8touchgfx6BitmapC1Et>:
     * Creates and binds a Bitmap instance to the corresponding entry in the BitmapData
     * array.
     *
     * @param  id (Optional) The unique bitmap identifier.
     */
    Bitmap(const BitmapId id = BITMAP_INVALID)
 800b8b0:	b480      	push	{r7}
 800b8b2:	b083      	sub	sp, #12
 800b8b4:	af00      	add	r7, sp, #0
 800b8b6:	6078      	str	r0, [r7, #4]
 800b8b8:	460b      	mov	r3, r1
 800b8ba:	807b      	strh	r3, [r7, #2]
        : bitmapId(id)
 800b8bc:	687b      	ldr	r3, [r7, #4]
 800b8be:	887a      	ldrh	r2, [r7, #2]
 800b8c0:	801a      	strh	r2, [r3, #0]
    {
    }
 800b8c2:	687b      	ldr	r3, [r7, #4]
 800b8c4:	4618      	mov	r0, r3
 800b8c6:	370c      	adds	r7, #12
 800b8c8:	46bd      	mov	sp, r7
 800b8ca:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b8ce:	4770      	bx	lr

0800b8d0 <_ZNK8touchgfx10ClickEvent7getTypeEv>:
    /**
     * Gets the click type of this event.
     *
     * @return The click type of this event.
     */
    ClickEventType getType() const
 800b8d0:	b480      	push	{r7}
 800b8d2:	b083      	sub	sp, #12
 800b8d4:	af00      	add	r7, sp, #0
 800b8d6:	6078      	str	r0, [r7, #4]
    {
        return clickEventType;
 800b8d8:	687b      	ldr	r3, [r7, #4]
 800b8da:	791b      	ldrb	r3, [r3, #4]
    }
 800b8dc:	4618      	mov	r0, r3
 800b8de:	370c      	adds	r7, #12
 800b8e0:	46bd      	mov	sp, r7
 800b8e2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b8e6:	4770      	bx	lr

0800b8e8 <_ZN8touchgfx8DrawableC1Ev>:
 */
class Drawable
{
public:
    /** Initializes a new instance of the Drawable class. */
    Drawable()
 800b8e8:	b580      	push	{r7, lr}
 800b8ea:	b082      	sub	sp, #8
 800b8ec:	af00      	add	r7, sp, #0
 800b8ee:	6078      	str	r0, [r7, #4]
          nextSibling(0),
          nextDrawChainElement(0),
          cachedAbsX(0),
          cachedAbsY(0),
          touchable(false),
          visible(true)
 800b8f0:	4a14      	ldr	r2, [pc, #80]	; (800b944 <_ZN8touchgfx8DrawableC1Ev+0x5c>)
 800b8f2:	687b      	ldr	r3, [r7, #4]
 800b8f4:	601a      	str	r2, [r3, #0]
        : rect(),
 800b8f6:	687b      	ldr	r3, [r7, #4]
 800b8f8:	3304      	adds	r3, #4
 800b8fa:	4618      	mov	r0, r3
 800b8fc:	f7ff ffa1 	bl	800b842 <_ZN8touchgfx4RectC1Ev>
          cachedVisibleRect(),
 800b900:	687b      	ldr	r3, [r7, #4]
 800b902:	330c      	adds	r3, #12
 800b904:	4618      	mov	r0, r3
 800b906:	f7ff ff9c 	bl	800b842 <_ZN8touchgfx4RectC1Ev>
          parent(0),
 800b90a:	687b      	ldr	r3, [r7, #4]
 800b90c:	2200      	movs	r2, #0
 800b90e:	615a      	str	r2, [r3, #20]
          nextSibling(0),
 800b910:	687b      	ldr	r3, [r7, #4]
 800b912:	2200      	movs	r2, #0
 800b914:	619a      	str	r2, [r3, #24]
          nextDrawChainElement(0),
 800b916:	687b      	ldr	r3, [r7, #4]
 800b918:	2200      	movs	r2, #0
 800b91a:	61da      	str	r2, [r3, #28]
          cachedAbsX(0),
 800b91c:	687b      	ldr	r3, [r7, #4]
 800b91e:	2200      	movs	r2, #0
 800b920:	841a      	strh	r2, [r3, #32]
          cachedAbsY(0),
 800b922:	687b      	ldr	r3, [r7, #4]
 800b924:	2200      	movs	r2, #0
 800b926:	845a      	strh	r2, [r3, #34]	; 0x22
          touchable(false),
 800b928:	687b      	ldr	r3, [r7, #4]
 800b92a:	2200      	movs	r2, #0
 800b92c:	f883 2024 	strb.w	r2, [r3, #36]	; 0x24
          visible(true)
 800b930:	687b      	ldr	r3, [r7, #4]
 800b932:	2201      	movs	r2, #1
 800b934:	f883 2025 	strb.w	r2, [r3, #37]	; 0x25
    {
    }
 800b938:	687b      	ldr	r3, [r7, #4]
 800b93a:	4618      	mov	r0, r3
 800b93c:	3708      	adds	r7, #8
 800b93e:	46bd      	mov	sp, r7
 800b940:	bd80      	pop	{r7, pc}
 800b942:	bf00      	nop
 800b944:	0802fd88 	.word	0x0802fd88

0800b948 <_ZN8touchgfx8DrawableD1Ev>:

    /** Finalizes an instance of the Drawable class. */
    virtual ~Drawable()
 800b948:	b480      	push	{r7}
 800b94a:	b083      	sub	sp, #12
 800b94c:	af00      	add	r7, sp, #0
 800b94e:	6078      	str	r0, [r7, #4]
    {
 800b950:	4a04      	ldr	r2, [pc, #16]	; (800b964 <_ZN8touchgfx8DrawableD1Ev+0x1c>)
 800b952:	687b      	ldr	r3, [r7, #4]
 800b954:	601a      	str	r2, [r3, #0]
    }
 800b956:	687b      	ldr	r3, [r7, #4]
 800b958:	4618      	mov	r0, r3
 800b95a:	370c      	adds	r7, #12
 800b95c:	46bd      	mov	sp, r7
 800b95e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b962:	4770      	bx	lr
 800b964:	0802fd88 	.word	0x0802fd88

0800b968 <_ZN8touchgfx8DrawableD0Ev>:
    virtual ~Drawable()
 800b968:	b580      	push	{r7, lr}
 800b96a:	b082      	sub	sp, #8
 800b96c:	af00      	add	r7, sp, #0
 800b96e:	6078      	str	r0, [r7, #4]
    }
 800b970:	6878      	ldr	r0, [r7, #4]
 800b972:	f7ff ffe9 	bl	800b948 <_ZN8touchgfx8DrawableD1Ev>
 800b976:	2128      	movs	r1, #40	; 0x28
 800b978:	6878      	ldr	r0, [r7, #4]
 800b97a:	f01e fcee 	bl	802a35a <_ZdlPvj>
 800b97e:	687b      	ldr	r3, [r7, #4]
 800b980:	4618      	mov	r0, r3
 800b982:	3708      	adds	r7, #8
 800b984:	46bd      	mov	sp, r7
 800b986:	bd80      	pop	{r7, pc}

0800b988 <_ZNK8touchgfx8Drawable17invalidateContentEv>:
     * Tell the framework that the contents of the Drawable needs to be redrawn. If the Drawable is
     * invisible, nothing happens. Subclasses of Drawable are encouraged to implement this function
     * and invalidate as little as possible, i.e. the smallest rectangle covering the visual element(s)
     * drawn by the widget.
     */
    virtual void invalidateContent() const
 800b988:	b580      	push	{r7, lr}
 800b98a:	b082      	sub	sp, #8
 800b98c:	af00      	add	r7, sp, #0
 800b98e:	6078      	str	r0, [r7, #4]
    {
        // Consider checking if *this is in the draw chain
        if (visible)
 800b990:	687b      	ldr	r3, [r7, #4]
 800b992:	f893 3025 	ldrb.w	r3, [r3, #37]	; 0x25
 800b996:	2b00      	cmp	r3, #0
 800b998:	d005      	beq.n	800b9a6 <_ZNK8touchgfx8Drawable17invalidateContentEv+0x1e>
        {
            invalidate();
 800b99a:	687b      	ldr	r3, [r7, #4]
 800b99c:	681b      	ldr	r3, [r3, #0]
 800b99e:	3314      	adds	r3, #20
 800b9a0:	681b      	ldr	r3, [r3, #0]
 800b9a2:	6878      	ldr	r0, [r7, #4]
 800b9a4:	4798      	blx	r3
        }
    }
 800b9a6:	bf00      	nop
 800b9a8:	3708      	adds	r7, #8
 800b9aa:	46bd      	mov	sp, r7
 800b9ac:	bd80      	pop	{r7, pc}

0800b9ae <_ZN8touchgfx8Drawable13getFirstChildEv>:
     * Function for obtaining the first child of this drawable if any.
     *
     * @return A pointer on the first child drawable if any.
     * @see Container::getFirstChild
     */
    virtual Drawable* getFirstChild()
 800b9ae:	b480      	push	{r7}
 800b9b0:	b083      	sub	sp, #12
 800b9b2:	af00      	add	r7, sp, #0
 800b9b4:	6078      	str	r0, [r7, #4]
    {
        return 0;
 800b9b6:	2300      	movs	r3, #0
    }
 800b9b8:	4618      	mov	r0, r3
 800b9ba:	370c      	adds	r7, #12
 800b9bc:	46bd      	mov	sp, r7
 800b9be:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b9c2:	4770      	bx	lr

0800b9c4 <_ZN8touchgfx8Drawable11setPositionEssss>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     *
     * @see setXY,setWidthHeight,setPosition(const Drawable&)
     */
    void setPosition(int16_t x, int16_t y, int16_t width, int16_t height)
 800b9c4:	b580      	push	{r7, lr}
 800b9c6:	b084      	sub	sp, #16
 800b9c8:	af00      	add	r7, sp, #0
 800b9ca:	60f8      	str	r0, [r7, #12]
 800b9cc:	4608      	mov	r0, r1
 800b9ce:	4611      	mov	r1, r2
 800b9d0:	461a      	mov	r2, r3
 800b9d2:	4603      	mov	r3, r0
 800b9d4:	817b      	strh	r3, [r7, #10]
 800b9d6:	460b      	mov	r3, r1
 800b9d8:	813b      	strh	r3, [r7, #8]
 800b9da:	4613      	mov	r3, r2
 800b9dc:	80fb      	strh	r3, [r7, #6]
    {
        setXY(x, y);
 800b9de:	f9b7 2008 	ldrsh.w	r2, [r7, #8]
 800b9e2:	f9b7 300a 	ldrsh.w	r3, [r7, #10]
 800b9e6:	4619      	mov	r1, r3
 800b9e8:	68f8      	ldr	r0, [r7, #12]
 800b9ea:	f000 f844 	bl	800ba76 <_ZN8touchgfx8Drawable5setXYEss>
        setWidthHeight(width, height);
 800b9ee:	f9b7 2018 	ldrsh.w	r2, [r7, #24]
 800b9f2:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 800b9f6:	4619      	mov	r1, r3
 800b9f8:	68f8      	ldr	r0, [r7, #12]
 800b9fa:	f000 f898 	bl	800bb2e <_ZN8touchgfx8Drawable14setWidthHeightEss>
    }
 800b9fe:	bf00      	nop
 800ba00:	3710      	adds	r7, #16
 800ba02:	46bd      	mov	sp, r7
 800ba04:	bd80      	pop	{r7, pc}

0800ba06 <_ZNK8touchgfx8Drawable8getWidthEv>:
    /**
     * Gets the width of this Drawable.
     *
     * @return The width of this Drawable.
     */
    int16_t getWidth() const
 800ba06:	b480      	push	{r7}
 800ba08:	b083      	sub	sp, #12
 800ba0a:	af00      	add	r7, sp, #0
 800ba0c:	6078      	str	r0, [r7, #4]
    {
        return rect.width;
 800ba0e:	687b      	ldr	r3, [r7, #4]
 800ba10:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
    }
 800ba14:	4618      	mov	r0, r3
 800ba16:	370c      	adds	r7, #12
 800ba18:	46bd      	mov	sp, r7
 800ba1a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ba1e:	4770      	bx	lr

0800ba20 <_ZNK8touchgfx8Drawable9getHeightEv>:
    /**
     * Gets the height of this Drawable.
     *
     * @return The height of this Drawable.
     */
    int16_t getHeight() const
 800ba20:	b480      	push	{r7}
 800ba22:	b083      	sub	sp, #12
 800ba24:	af00      	add	r7, sp, #0
 800ba26:	6078      	str	r0, [r7, #4]
    {
        return rect.height;
 800ba28:	687b      	ldr	r3, [r7, #4]
 800ba2a:	f9b3 300a 	ldrsh.w	r3, [r3, #10]
    }
 800ba2e:	4618      	mov	r0, r3
 800ba30:	370c      	adds	r7, #12
 800ba32:	46bd      	mov	sp, r7
 800ba34:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ba38:	4770      	bx	lr

0800ba3a <_ZN8touchgfx8Drawable4setXEs>:
     *
     * @param  x The new x value, relative to the parent. A negative value is allowed.
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setX(int16_t x)
 800ba3a:	b480      	push	{r7}
 800ba3c:	b083      	sub	sp, #12
 800ba3e:	af00      	add	r7, sp, #0
 800ba40:	6078      	str	r0, [r7, #4]
 800ba42:	460b      	mov	r3, r1
 800ba44:	807b      	strh	r3, [r7, #2]
    {
        rect.x = x;
 800ba46:	687b      	ldr	r3, [r7, #4]
 800ba48:	887a      	ldrh	r2, [r7, #2]
 800ba4a:	809a      	strh	r2, [r3, #4]
    }
 800ba4c:	bf00      	nop
 800ba4e:	370c      	adds	r7, #12
 800ba50:	46bd      	mov	sp, r7
 800ba52:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ba56:	4770      	bx	lr

0800ba58 <_ZN8touchgfx8Drawable4setYEs>:
     *
     * @param  y The new y value, relative to the parent. A negative value is allowed.
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setY(int16_t y)
 800ba58:	b480      	push	{r7}
 800ba5a:	b083      	sub	sp, #12
 800ba5c:	af00      	add	r7, sp, #0
 800ba5e:	6078      	str	r0, [r7, #4]
 800ba60:	460b      	mov	r3, r1
 800ba62:	807b      	strh	r3, [r7, #2]
    {
        rect.y = y;
 800ba64:	687b      	ldr	r3, [r7, #4]
 800ba66:	887a      	ldrh	r2, [r7, #2]
 800ba68:	80da      	strh	r2, [r3, #6]
    }
 800ba6a:	bf00      	nop
 800ba6c:	370c      	adds	r7, #12
 800ba6e:	46bd      	mov	sp, r7
 800ba70:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ba74:	4770      	bx	lr

0800ba76 <_ZN8touchgfx8Drawable5setXYEss>:
     *
     * @see moveTo
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    void setXY(int16_t x, int16_t y)
 800ba76:	b580      	push	{r7, lr}
 800ba78:	b082      	sub	sp, #8
 800ba7a:	af00      	add	r7, sp, #0
 800ba7c:	6078      	str	r0, [r7, #4]
 800ba7e:	460b      	mov	r3, r1
 800ba80:	807b      	strh	r3, [r7, #2]
 800ba82:	4613      	mov	r3, r2
 800ba84:	803b      	strh	r3, [r7, #0]
    {
        setX(x);
 800ba86:	687b      	ldr	r3, [r7, #4]
 800ba88:	681b      	ldr	r3, [r3, #0]
 800ba8a:	3330      	adds	r3, #48	; 0x30
 800ba8c:	681b      	ldr	r3, [r3, #0]
 800ba8e:	f9b7 2002 	ldrsh.w	r2, [r7, #2]
 800ba92:	4611      	mov	r1, r2
 800ba94:	6878      	ldr	r0, [r7, #4]
 800ba96:	4798      	blx	r3
        setY(y);
 800ba98:	687b      	ldr	r3, [r7, #4]
 800ba9a:	681b      	ldr	r3, [r3, #0]
 800ba9c:	3334      	adds	r3, #52	; 0x34
 800ba9e:	681b      	ldr	r3, [r3, #0]
 800baa0:	f9b7 2000 	ldrsh.w	r2, [r7]
 800baa4:	4611      	mov	r1, r2
 800baa6:	6878      	ldr	r0, [r7, #4]
 800baa8:	4798      	blx	r3
    }
 800baaa:	bf00      	nop
 800baac:	3708      	adds	r7, #8
 800baae:	46bd      	mov	sp, r7
 800bab0:	bd80      	pop	{r7, pc}

0800bab2 <_ZN8touchgfx8Drawable8setWidthEs>:
     *
     * @param  width The new width.
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setWidth(int16_t width)
 800bab2:	b480      	push	{r7}
 800bab4:	b083      	sub	sp, #12
 800bab6:	af00      	add	r7, sp, #0
 800bab8:	6078      	str	r0, [r7, #4]
 800baba:	460b      	mov	r3, r1
 800babc:	807b      	strh	r3, [r7, #2]
    {
        rect.width = width;
 800babe:	687b      	ldr	r3, [r7, #4]
 800bac0:	887a      	ldrh	r2, [r7, #2]
 800bac2:	811a      	strh	r2, [r3, #8]
    }
 800bac4:	bf00      	nop
 800bac6:	370c      	adds	r7, #12
 800bac8:	46bd      	mov	sp, r7
 800baca:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bace:	4770      	bx	lr

0800bad0 <_ZN8touchgfx8Drawable9setHeightEs>:
     *
     * @param  height The new height.
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setHeight(int16_t height)
 800bad0:	b480      	push	{r7}
 800bad2:	b083      	sub	sp, #12
 800bad4:	af00      	add	r7, sp, #0
 800bad6:	6078      	str	r0, [r7, #4]
 800bad8:	460b      	mov	r3, r1
 800bada:	807b      	strh	r3, [r7, #2]
    {
        rect.height = height;
 800badc:	687b      	ldr	r3, [r7, #4]
 800bade:	887a      	ldrh	r2, [r7, #2]
 800bae0:	815a      	strh	r2, [r3, #10]
    }
 800bae2:	bf00      	nop
 800bae4:	370c      	adds	r7, #12
 800bae6:	46bd      	mov	sp, r7
 800bae8:	f85d 7b04 	ldr.w	r7, [sp], #4
 800baec:	4770      	bx	lr

0800baee <_ZN8touchgfx8Drawable20childGeometryChangedEv>:
    /**
     * This function can be called on parent nodes to signal that the size or position of
     * one or more of its children has changed. Currently only used in ScrollableContainer
     * to redraw scrollbars when the size of the scrolling contents changes.
     */
    virtual void childGeometryChanged()
 800baee:	b480      	push	{r7}
 800baf0:	b083      	sub	sp, #12
 800baf2:	af00      	add	r7, sp, #0
 800baf4:	6078      	str	r0, [r7, #4]
    {
    }
 800baf6:	bf00      	nop
 800baf8:	370c      	adds	r7, #12
 800bafa:	46bd      	mov	sp, r7
 800bafc:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bb00:	4770      	bx	lr

0800bb02 <_ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE>:
     * ignores the event. The event is only received if the Drawable is touchable and
     * visible.
     *
     * @param  event The ClickEvent received from the HAL.
     */
    virtual void handleClickEvent(const ClickEvent& event)
 800bb02:	b480      	push	{r7}
 800bb04:	b083      	sub	sp, #12
 800bb06:	af00      	add	r7, sp, #0
 800bb08:	6078      	str	r0, [r7, #4]
 800bb0a:	6039      	str	r1, [r7, #0]
    {
        (void)event; // Unused variable
    }
 800bb0c:	bf00      	nop
 800bb0e:	370c      	adds	r7, #12
 800bb10:	46bd      	mov	sp, r7
 800bb12:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bb16:	4770      	bx	lr

0800bb18 <_ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE>:
     * ignores the event. The event is only received if the Drawable is touchable and
     * visible.
     *
     * @param  event The GestureEvent received from the HAL.
     */
    virtual void handleGestureEvent(const GestureEvent& event)
 800bb18:	b480      	push	{r7}
 800bb1a:	b083      	sub	sp, #12
 800bb1c:	af00      	add	r7, sp, #0
 800bb1e:	6078      	str	r0, [r7, #4]
 800bb20:	6039      	str	r1, [r7, #0]
    {
        (void)event; // Unused variable
    }
 800bb22:	bf00      	nop
 800bb24:	370c      	adds	r7, #12
 800bb26:	46bd      	mov	sp, r7
 800bb28:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bb2c:	4770      	bx	lr

0800bb2e <_ZN8touchgfx8Drawable14setWidthHeightEss>:
     * coordinates).
     *
     * @param  width  The width.
     * @param  height The height.
     */
    void setWidthHeight(int16_t width, int16_t height)
 800bb2e:	b580      	push	{r7, lr}
 800bb30:	b082      	sub	sp, #8
 800bb32:	af00      	add	r7, sp, #0
 800bb34:	6078      	str	r0, [r7, #4]
 800bb36:	460b      	mov	r3, r1
 800bb38:	807b      	strh	r3, [r7, #2]
 800bb3a:	4613      	mov	r3, r2
 800bb3c:	803b      	strh	r3, [r7, #0]
    {
        setWidth(width);
 800bb3e:	687b      	ldr	r3, [r7, #4]
 800bb40:	681b      	ldr	r3, [r3, #0]
 800bb42:	3338      	adds	r3, #56	; 0x38
 800bb44:	681b      	ldr	r3, [r3, #0]
 800bb46:	f9b7 2002 	ldrsh.w	r2, [r7, #2]
 800bb4a:	4611      	mov	r1, r2
 800bb4c:	6878      	ldr	r0, [r7, #4]
 800bb4e:	4798      	blx	r3
        setHeight(height);
 800bb50:	687b      	ldr	r3, [r7, #4]
 800bb52:	681b      	ldr	r3, [r3, #0]
 800bb54:	333c      	adds	r3, #60	; 0x3c
 800bb56:	681b      	ldr	r3, [r3, #0]
 800bb58:	f9b7 2000 	ldrsh.w	r2, [r7]
 800bb5c:	4611      	mov	r1, r2
 800bb5e:	6878      	ldr	r0, [r7, #4]
 800bb60:	4798      	blx	r3
    }
 800bb62:	bf00      	nop
 800bb64:	3708      	adds	r7, #8
 800bb66:	46bd      	mov	sp, r7
 800bb68:	bd80      	pop	{r7, pc}

0800bb6a <_ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE>:
     * ignores the event. The event is only received if the drawable is touchable and
     * visible.
     *
     * @param  event The DragEvent received from the HAL.
     */
    virtual void handleDragEvent(const DragEvent& event)
 800bb6a:	b480      	push	{r7}
 800bb6c:	b083      	sub	sp, #12
 800bb6e:	af00      	add	r7, sp, #0
 800bb70:	6078      	str	r0, [r7, #4]
 800bb72:	6039      	str	r1, [r7, #0]
    {
        (void)event; // Unused variable
    }
 800bb74:	bf00      	nop
 800bb76:	370c      	adds	r7, #12
 800bb78:	46bd      	mov	sp, r7
 800bb7a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bb7e:	4770      	bx	lr

0800bb80 <_ZN8touchgfx8Drawable15handleTickEventEv>:
     * Called periodically by the framework if the Drawable instance has subscribed to timer
     * ticks.
     *
     * @see Application::registerTimerWidget
     */
    virtual void handleTickEvent()
 800bb80:	b480      	push	{r7}
 800bb82:	b083      	sub	sp, #12
 800bb84:	af00      	add	r7, sp, #0
 800bb86:	6078      	str	r0, [r7, #4]
    {
    }
 800bb88:	bf00      	nop
 800bb8a:	370c      	adds	r7, #12
 800bb8c:	46bd      	mov	sp, r7
 800bb8e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bb92:	4770      	bx	lr

0800bb94 <_ZN8touchgfx8Drawable12setTouchableEb>:
    /**
     * Controls whether this Drawable receives touch events or not.
     *
     * @param  touch If true it will receive touch events, if false it will not.
     */
    void setTouchable(bool touch)
 800bb94:	b480      	push	{r7}
 800bb96:	b083      	sub	sp, #12
 800bb98:	af00      	add	r7, sp, #0
 800bb9a:	6078      	str	r0, [r7, #4]
 800bb9c:	460b      	mov	r3, r1
 800bb9e:	70fb      	strb	r3, [r7, #3]
    {
        touchable = touch;
 800bba0:	687b      	ldr	r3, [r7, #4]
 800bba2:	78fa      	ldrb	r2, [r7, #3]
 800bba4:	f883 2024 	strb.w	r2, [r3, #36]	; 0x24
    }
 800bba8:	bf00      	nop
 800bbaa:	370c      	adds	r7, #12
 800bbac:	46bd      	mov	sp, r7
 800bbae:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bbb2:	4770      	bx	lr

0800bbb4 <_ZNK8touchgfx8Drawable9isVisibleEv>:
     *
     * @return true if the Drawable is visible.
     *
     * @see setVisible
     */
    bool isVisible() const
 800bbb4:	b480      	push	{r7}
 800bbb6:	b083      	sub	sp, #12
 800bbb8:	af00      	add	r7, sp, #0
 800bbba:	6078      	str	r0, [r7, #4]
    {
        return visible;
 800bbbc:	687b      	ldr	r3, [r7, #4]
 800bbbe:	f893 3025 	ldrb.w	r3, [r3, #37]	; 0x25
    }
 800bbc2:	4618      	mov	r0, r3
 800bbc4:	370c      	adds	r7, #12
 800bbc6:	46bd      	mov	sp, r7
 800bbc8:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bbcc:	4770      	bx	lr

0800bbce <_ZNK8touchgfx8Drawable11isTouchableEv>:
     *
     * @return True if touch events are received.
     *
     * @see setTouchable
     */
    bool isTouchable() const
 800bbce:	b480      	push	{r7}
 800bbd0:	b083      	sub	sp, #12
 800bbd2:	af00      	add	r7, sp, #0
 800bbd4:	6078      	str	r0, [r7, #4]
    {
        return touchable;
 800bbd6:	687b      	ldr	r3, [r7, #4]
 800bbd8:	f893 3024 	ldrb.w	r3, [r3, #36]	; 0x24
    }
 800bbdc:	4618      	mov	r0, r3
 800bbde:	370c      	adds	r7, #12
 800bbe0:	46bd      	mov	sp, r7
 800bbe2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bbe6:	4770      	bx	lr

0800bbe8 <_ZN8touchgfx8Drawable6moveToEss>:
     *
     * @see moveRelative, setXY
     *
     * @note Will redraw the appropriate areas of the screen.
     */
    virtual void moveTo(int16_t x, int16_t y)
 800bbe8:	b580      	push	{r7, lr}
 800bbea:	b082      	sub	sp, #8
 800bbec:	af00      	add	r7, sp, #0
 800bbee:	6078      	str	r0, [r7, #4]
 800bbf0:	460b      	mov	r3, r1
 800bbf2:	807b      	strh	r3, [r7, #2]
 800bbf4:	4613      	mov	r3, r2
 800bbf6:	803b      	strh	r3, [r7, #0]
    {
        moveRelative(x - rect.x, y - rect.y);
 800bbf8:	687b      	ldr	r3, [r7, #4]
 800bbfa:	681b      	ldr	r3, [r3, #0]
 800bbfc:	3354      	adds	r3, #84	; 0x54
 800bbfe:	681b      	ldr	r3, [r3, #0]
 800bc00:	8879      	ldrh	r1, [r7, #2]
 800bc02:	687a      	ldr	r2, [r7, #4]
 800bc04:	f9b2 2004 	ldrsh.w	r2, [r2, #4]
 800bc08:	b292      	uxth	r2, r2
 800bc0a:	1a8a      	subs	r2, r1, r2
 800bc0c:	b292      	uxth	r2, r2
 800bc0e:	b210      	sxth	r0, r2
 800bc10:	8839      	ldrh	r1, [r7, #0]
 800bc12:	687a      	ldr	r2, [r7, #4]
 800bc14:	f9b2 2006 	ldrsh.w	r2, [r2, #6]
 800bc18:	b292      	uxth	r2, r2
 800bc1a:	1a8a      	subs	r2, r1, r2
 800bc1c:	b292      	uxth	r2, r2
 800bc1e:	b212      	sxth	r2, r2
 800bc20:	4601      	mov	r1, r0
 800bc22:	6878      	ldr	r0, [r7, #4]
 800bc24:	4798      	blx	r3
    }
 800bc26:	bf00      	nop
 800bc28:	3708      	adds	r7, #8
 800bc2a:	46bd      	mov	sp, r7
 800bc2c:	bd80      	pop	{r7, pc}

0800bc2e <_ZN8touchgfx8Drawable19resetDrawChainCacheEv>:
     *
     * Reset cached coordinate data.
     *
     * @note For TouchGFX internal use only.
     */
    void resetDrawChainCache()
 800bc2e:	b480      	push	{r7}
 800bc30:	b083      	sub	sp, #12
 800bc32:	af00      	add	r7, sp, #0
 800bc34:	6078      	str	r0, [r7, #4]
    {
        // Resetting the cached indicators
        cachedVisibleRect.x = UNCACHED_INDICATOR;
 800bc36:	687b      	ldr	r3, [r7, #4]
 800bc38:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800bc3c:	819a      	strh	r2, [r3, #12]
        cachedAbsX = UNCACHED_INDICATOR;
 800bc3e:	687b      	ldr	r3, [r7, #4]
 800bc40:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800bc44:	841a      	strh	r2, [r3, #32]
        cachedAbsY = UNCACHED_INDICATOR;
 800bc46:	687b      	ldr	r3, [r7, #4]
 800bc48:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800bc4c:	845a      	strh	r2, [r3, #34]	; 0x22
    }
 800bc4e:	bf00      	nop
 800bc50:	370c      	adds	r7, #12
 800bc52:	46bd      	mov	sp, r7
 800bc54:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bc58:	4770      	bx	lr

0800bc5a <_ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_>:
     * @param          invalidatedArea     Include drawables that intersect with this area only.
     * @param [in,out] nextPreviousElement Modifiable element in linked list.
     *
     * @note For TouchGFX internal use only.
     */
    virtual void setupDrawChain(const Rect& invalidatedArea, Drawable** nextPreviousElement)
 800bc5a:	b580      	push	{r7, lr}
 800bc5c:	b084      	sub	sp, #16
 800bc5e:	af00      	add	r7, sp, #0
 800bc60:	60f8      	str	r0, [r7, #12]
 800bc62:	60b9      	str	r1, [r7, #8]
 800bc64:	607a      	str	r2, [r7, #4]
    {
        (void)invalidatedArea; // Unused variable
        resetDrawChainCache();
 800bc66:	68f8      	ldr	r0, [r7, #12]
 800bc68:	f7ff ffe1 	bl	800bc2e <_ZN8touchgfx8Drawable19resetDrawChainCacheEv>
        nextDrawChainElement = *nextPreviousElement;
 800bc6c:	687b      	ldr	r3, [r7, #4]
 800bc6e:	681a      	ldr	r2, [r3, #0]
 800bc70:	68fb      	ldr	r3, [r7, #12]
 800bc72:	61da      	str	r2, [r3, #28]
        *nextPreviousElement = this;
 800bc74:	687b      	ldr	r3, [r7, #4]
 800bc76:	68fa      	ldr	r2, [r7, #12]
 800bc78:	601a      	str	r2, [r3, #0]
    }
 800bc7a:	bf00      	nop
 800bc7c:	3710      	adds	r7, #16
 800bc7e:	46bd      	mov	sp, r7
 800bc80:	bd80      	pop	{r7, pc}

0800bc82 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE>:
     * Since a Widget is only one Drawable, Widget::getLastChild simply yields itself as
     * result, but only if the Widget isVisible and isTouchable.
     *
     * @param [out] last Result, the address of the actual instance of the Widget.
     */
    virtual void getLastChild(int16_t /*x*/, int16_t /*y*/, Drawable** last)
 800bc82:	b580      	push	{r7, lr}
 800bc84:	b084      	sub	sp, #16
 800bc86:	af00      	add	r7, sp, #0
 800bc88:	60f8      	str	r0, [r7, #12]
 800bc8a:	607b      	str	r3, [r7, #4]
 800bc8c:	460b      	mov	r3, r1
 800bc8e:	817b      	strh	r3, [r7, #10]
 800bc90:	4613      	mov	r3, r2
 800bc92:	813b      	strh	r3, [r7, #8]
    {
        if (isVisible() && isTouchable())
 800bc94:	68fb      	ldr	r3, [r7, #12]
 800bc96:	4618      	mov	r0, r3
 800bc98:	f7ff ff8c 	bl	800bbb4 <_ZNK8touchgfx8Drawable9isVisibleEv>
 800bc9c:	4603      	mov	r3, r0
 800bc9e:	2b00      	cmp	r3, #0
 800bca0:	d008      	beq.n	800bcb4 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0x32>
 800bca2:	68fb      	ldr	r3, [r7, #12]
 800bca4:	4618      	mov	r0, r3
 800bca6:	f7ff ff92 	bl	800bbce <_ZNK8touchgfx8Drawable11isTouchableEv>
 800bcaa:	4603      	mov	r3, r0
 800bcac:	2b00      	cmp	r3, #0
 800bcae:	d001      	beq.n	800bcb4 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0x32>
 800bcb0:	2301      	movs	r3, #1
 800bcb2:	e000      	b.n	800bcb6 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0x34>
 800bcb4:	2300      	movs	r3, #0
 800bcb6:	2b00      	cmp	r3, #0
 800bcb8:	d002      	beq.n	800bcc0 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0x3e>
        {
            *last = this;
 800bcba:	68fa      	ldr	r2, [r7, #12]
 800bcbc:	687b      	ldr	r3, [r7, #4]
 800bcbe:	601a      	str	r2, [r3, #0]
        }
    }
 800bcc0:	bf00      	nop
 800bcc2:	3710      	adds	r7, #16
 800bcc4:	46bd      	mov	sp, r7
 800bcc6:	bd80      	pop	{r7, pc}

0800bcc8 <_ZN8touchgfx9ContainerC1Ev>:
 * @see Drawable
 */
class Container : public Drawable
{
public:
    Container()
 800bcc8:	b580      	push	{r7, lr}
 800bcca:	b082      	sub	sp, #8
 800bccc:	af00      	add	r7, sp, #0
 800bcce:	6078      	str	r0, [r7, #4]
        : Drawable(),
          firstChild(0)
 800bcd0:	687b      	ldr	r3, [r7, #4]
 800bcd2:	4618      	mov	r0, r3
 800bcd4:	f7ff fe08 	bl	800b8e8 <_ZN8touchgfx8DrawableC1Ev>
 800bcd8:	4a05      	ldr	r2, [pc, #20]	; (800bcf0 <_ZN8touchgfx9ContainerC1Ev+0x28>)
 800bcda:	687b      	ldr	r3, [r7, #4]
 800bcdc:	601a      	str	r2, [r3, #0]
 800bcde:	687b      	ldr	r3, [r7, #4]
 800bce0:	2200      	movs	r2, #0
 800bce2:	629a      	str	r2, [r3, #40]	; 0x28
    {
    }
 800bce4:	687b      	ldr	r3, [r7, #4]
 800bce6:	4618      	mov	r0, r3
 800bce8:	3708      	adds	r7, #8
 800bcea:	46bd      	mov	sp, r7
 800bcec:	bd80      	pop	{r7, pc}
 800bcee:	bf00      	nop
 800bcf0:	0802f5d4 	.word	0x0802f5d4

0800bcf4 <_ZN8touchgfx9Container13getFirstChildEv>:
     * @return Pointer to the first drawable added to this container. If nothing has been
     *         added return zero.
     *
     * @see getNextSibling
     */
    virtual Drawable* getFirstChild()
 800bcf4:	b480      	push	{r7}
 800bcf6:	b083      	sub	sp, #12
 800bcf8:	af00      	add	r7, sp, #0
 800bcfa:	6078      	str	r0, [r7, #4]
    {
        return firstChild;
 800bcfc:	687b      	ldr	r3, [r7, #4]
 800bcfe:	6a9b      	ldr	r3, [r3, #40]	; 0x28
    }
 800bd00:	4618      	mov	r0, r3
 800bd02:	370c      	adds	r7, #12
 800bd04:	46bd      	mov	sp, r7
 800bd06:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bd0a:	4770      	bx	lr

0800bd0c <_ZN8touchgfx6WidgetC1Ev>:
class Widget : public Drawable
 800bd0c:	b580      	push	{r7, lr}
 800bd0e:	b082      	sub	sp, #8
 800bd10:	af00      	add	r7, sp, #0
 800bd12:	6078      	str	r0, [r7, #4]
 800bd14:	687b      	ldr	r3, [r7, #4]
 800bd16:	4618      	mov	r0, r3
 800bd18:	f7ff fde6 	bl	800b8e8 <_ZN8touchgfx8DrawableC1Ev>
 800bd1c:	4a03      	ldr	r2, [pc, #12]	; (800bd2c <_ZN8touchgfx6WidgetC1Ev+0x20>)
 800bd1e:	687b      	ldr	r3, [r7, #4]
 800bd20:	601a      	str	r2, [r3, #0]
 800bd22:	687b      	ldr	r3, [r7, #4]
 800bd24:	4618      	mov	r0, r3
 800bd26:	3708      	adds	r7, #8
 800bd28:	46bd      	mov	sp, r7
 800bd2a:	bd80      	pop	{r7, pc}
 800bd2c:	0802ea70 	.word	0x0802ea70

0800bd30 <_ZN8touchgfx6WidgetD1Ev>:
 800bd30:	b580      	push	{r7, lr}
 800bd32:	b082      	sub	sp, #8
 800bd34:	af00      	add	r7, sp, #0
 800bd36:	6078      	str	r0, [r7, #4]
 800bd38:	4a05      	ldr	r2, [pc, #20]	; (800bd50 <_ZN8touchgfx6WidgetD1Ev+0x20>)
 800bd3a:	687b      	ldr	r3, [r7, #4]
 800bd3c:	601a      	str	r2, [r3, #0]
 800bd3e:	687b      	ldr	r3, [r7, #4]
 800bd40:	4618      	mov	r0, r3
 800bd42:	f7ff fe01 	bl	800b948 <_ZN8touchgfx8DrawableD1Ev>
 800bd46:	687b      	ldr	r3, [r7, #4]
 800bd48:	4618      	mov	r0, r3
 800bd4a:	3708      	adds	r7, #8
 800bd4c:	46bd      	mov	sp, r7
 800bd4e:	bd80      	pop	{r7, pc}
 800bd50:	0802ea70 	.word	0x0802ea70

0800bd54 <_ZN8touchgfx6WidgetD0Ev>:
 800bd54:	b580      	push	{r7, lr}
 800bd56:	b082      	sub	sp, #8
 800bd58:	af00      	add	r7, sp, #0
 800bd5a:	6078      	str	r0, [r7, #4]
 800bd5c:	6878      	ldr	r0, [r7, #4]
 800bd5e:	f7ff ffe7 	bl	800bd30 <_ZN8touchgfx6WidgetD1Ev>
 800bd62:	2128      	movs	r1, #40	; 0x28
 800bd64:	6878      	ldr	r0, [r7, #4]
 800bd66:	f01e faf8 	bl	802a35a <_ZdlPvj>
 800bd6a:	687b      	ldr	r3, [r7, #4]
 800bd6c:	4618      	mov	r0, r3
 800bd6e:	3708      	adds	r7, #8
 800bd70:	46bd      	mov	sp, r7
 800bd72:	bd80      	pop	{r7, pc}

0800bd74 <_ZN8touchgfx3BoxC1Ev>:
 */
class Box : public Widget
{
public:
    /** Construct a new Box with a default alpha value of 255 (solid) */
    Box()
 800bd74:	b580      	push	{r7, lr}
 800bd76:	b082      	sub	sp, #8
 800bd78:	af00      	add	r7, sp, #0
 800bd7a:	6078      	str	r0, [r7, #4]
        : Widget(), alpha(255), color(0)
 800bd7c:	687b      	ldr	r3, [r7, #4]
 800bd7e:	4618      	mov	r0, r3
 800bd80:	2326      	movs	r3, #38	; 0x26
 800bd82:	461a      	mov	r2, r3
 800bd84:	2100      	movs	r1, #0
 800bd86:	f01f f9a2 	bl	802b0ce <memset>
 800bd8a:	687b      	ldr	r3, [r7, #4]
 800bd8c:	4618      	mov	r0, r3
 800bd8e:	f7ff ffbd 	bl	800bd0c <_ZN8touchgfx6WidgetC1Ev>
 800bd92:	4a09      	ldr	r2, [pc, #36]	; (800bdb8 <_ZN8touchgfx3BoxC1Ev+0x44>)
 800bd94:	687b      	ldr	r3, [r7, #4]
 800bd96:	601a      	str	r2, [r3, #0]
 800bd98:	687b      	ldr	r3, [r7, #4]
 800bd9a:	22ff      	movs	r2, #255	; 0xff
 800bd9c:	f883 2026 	strb.w	r2, [r3, #38]	; 0x26
 800bda0:	687b      	ldr	r3, [r7, #4]
 800bda2:	3328      	adds	r3, #40	; 0x28
 800bda4:	2100      	movs	r1, #0
 800bda6:	4618      	mov	r0, r3
 800bda8:	f7ff fd3c 	bl	800b824 <_ZN8touchgfx9colortypeC1Em>
    {
    }
 800bdac:	687b      	ldr	r3, [r7, #4]
 800bdae:	4618      	mov	r0, r3
 800bdb0:	3708      	adds	r7, #8
 800bdb2:	46bd      	mov	sp, r7
 800bdb4:	bd80      	pop	{r7, pc}
 800bdb6:	bf00      	nop
 800bdb8:	0802fb00 	.word	0x0802fb00

0800bdbc <_ZN8touchgfx3Box8setColorENS_9colortypeE>:
     *
     * @param  newColor The color of the box.
     *
     * @see getColor, Color::getColorFromRGB
     */
    void setColor(colortype newColor)
 800bdbc:	b480      	push	{r7}
 800bdbe:	b083      	sub	sp, #12
 800bdc0:	af00      	add	r7, sp, #0
 800bdc2:	6078      	str	r0, [r7, #4]
 800bdc4:	6039      	str	r1, [r7, #0]
    {
        color = newColor;
 800bdc6:	687b      	ldr	r3, [r7, #4]
 800bdc8:	683a      	ldr	r2, [r7, #0]
 800bdca:	629a      	str	r2, [r3, #40]	; 0x28
    }
 800bdcc:	bf00      	nop
 800bdce:	370c      	adds	r7, #12
 800bdd0:	46bd      	mov	sp, r7
 800bdd2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bdd6:	4770      	bx	lr

0800bdd8 <_ZN8touchgfx3Box8setAlphaEh>:
    }

    /**
     * @copydoc Image::setAlpha
     */
    void setAlpha(uint8_t newAlpha)
 800bdd8:	b480      	push	{r7}
 800bdda:	b083      	sub	sp, #12
 800bddc:	af00      	add	r7, sp, #0
 800bdde:	6078      	str	r0, [r7, #4]
 800bde0:	460b      	mov	r3, r1
 800bde2:	70fb      	strb	r3, [r7, #3]
    {
        alpha = newAlpha;
 800bde4:	687b      	ldr	r3, [r7, #4]
 800bde6:	78fa      	ldrb	r2, [r7, #3]
 800bde8:	f883 2026 	strb.w	r2, [r3, #38]	; 0x26
    }
 800bdec:	bf00      	nop
 800bdee:	370c      	adds	r7, #12
 800bdf0:	46bd      	mov	sp, r7
 800bdf2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bdf6:	4770      	bx	lr

0800bdf8 <_ZN8touchgfx3BoxD1Ev>:
class Box : public Widget
 800bdf8:	b580      	push	{r7, lr}
 800bdfa:	b082      	sub	sp, #8
 800bdfc:	af00      	add	r7, sp, #0
 800bdfe:	6078      	str	r0, [r7, #4]
 800be00:	4a05      	ldr	r2, [pc, #20]	; (800be18 <_ZN8touchgfx3BoxD1Ev+0x20>)
 800be02:	687b      	ldr	r3, [r7, #4]
 800be04:	601a      	str	r2, [r3, #0]
 800be06:	687b      	ldr	r3, [r7, #4]
 800be08:	4618      	mov	r0, r3
 800be0a:	f7ff ff91 	bl	800bd30 <_ZN8touchgfx6WidgetD1Ev>
 800be0e:	687b      	ldr	r3, [r7, #4]
 800be10:	4618      	mov	r0, r3
 800be12:	3708      	adds	r7, #8
 800be14:	46bd      	mov	sp, r7
 800be16:	bd80      	pop	{r7, pc}
 800be18:	0802fb00 	.word	0x0802fb00

0800be1c <_ZN8touchgfx3BoxD0Ev>:
 800be1c:	b580      	push	{r7, lr}
 800be1e:	b082      	sub	sp, #8
 800be20:	af00      	add	r7, sp, #0
 800be22:	6078      	str	r0, [r7, #4]
 800be24:	6878      	ldr	r0, [r7, #4]
 800be26:	f7ff ffe7 	bl	800bdf8 <_ZN8touchgfx3BoxD1Ev>
 800be2a:	212c      	movs	r1, #44	; 0x2c
 800be2c:	6878      	ldr	r0, [r7, #4]
 800be2e:	f01e fa94 	bl	802a35a <_ZdlPvj>
 800be32:	687b      	ldr	r3, [r7, #4]
 800be34:	4618      	mov	r0, r3
 800be36:	3708      	adds	r7, #8
 800be38:	46bd      	mov	sp, r7
 800be3a:	bd80      	pop	{r7, pc}

0800be3c <_ZN8touchgfx13BoxWithBorderC1Ev>:
 * BoxWithBorder will function just like a Box.
 */
class BoxWithBorder : public Box
{
public:
    BoxWithBorder()
 800be3c:	b580      	push	{r7, lr}
 800be3e:	b082      	sub	sp, #8
 800be40:	af00      	add	r7, sp, #0
 800be42:	6078      	str	r0, [r7, #4]
        : Box(), borderColor(0), borderSize(0)
 800be44:	687b      	ldr	r3, [r7, #4]
 800be46:	4618      	mov	r0, r3
 800be48:	f7ff ff94 	bl	800bd74 <_ZN8touchgfx3BoxC1Ev>
 800be4c:	4a08      	ldr	r2, [pc, #32]	; (800be70 <_ZN8touchgfx13BoxWithBorderC1Ev+0x34>)
 800be4e:	687b      	ldr	r3, [r7, #4]
 800be50:	601a      	str	r2, [r3, #0]
 800be52:	687b      	ldr	r3, [r7, #4]
 800be54:	332c      	adds	r3, #44	; 0x2c
 800be56:	2100      	movs	r1, #0
 800be58:	4618      	mov	r0, r3
 800be5a:	f7ff fce3 	bl	800b824 <_ZN8touchgfx9colortypeC1Em>
 800be5e:	687b      	ldr	r3, [r7, #4]
 800be60:	2200      	movs	r2, #0
 800be62:	861a      	strh	r2, [r3, #48]	; 0x30
    {
    }
 800be64:	687b      	ldr	r3, [r7, #4]
 800be66:	4618      	mov	r0, r3
 800be68:	3708      	adds	r7, #8
 800be6a:	46bd      	mov	sp, r7
 800be6c:	bd80      	pop	{r7, pc}
 800be6e:	bf00      	nop
 800be70:	0802fbf8 	.word	0x0802fbf8

0800be74 <_ZN8touchgfx13BoxWithBorder14setBorderColorENS_9colortypeE>:
     *
     * @param  colorBorder The color of the border.
     *
     * @see setColor, getBorderColor, Color::getColorFromRGB
     */
    void setBorderColor(colortype colorBorder)
 800be74:	b480      	push	{r7}
 800be76:	b083      	sub	sp, #12
 800be78:	af00      	add	r7, sp, #0
 800be7a:	6078      	str	r0, [r7, #4]
 800be7c:	6039      	str	r1, [r7, #0]
    {
        borderColor = colorBorder;
 800be7e:	687b      	ldr	r3, [r7, #4]
 800be80:	683a      	ldr	r2, [r7, #0]
 800be82:	62da      	str	r2, [r3, #44]	; 0x2c
    }
 800be84:	bf00      	nop
 800be86:	370c      	adds	r7, #12
 800be88:	46bd      	mov	sp, r7
 800be8a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800be8e:	4770      	bx	lr

0800be90 <_ZN8touchgfx13BoxWithBorder13setBorderSizeEt>:
     *
     * @param  size The width of the border.
     *
     * @see getBorderSize
     */
    void setBorderSize(uint16_t size)
 800be90:	b480      	push	{r7}
 800be92:	b083      	sub	sp, #12
 800be94:	af00      	add	r7, sp, #0
 800be96:	6078      	str	r0, [r7, #4]
 800be98:	460b      	mov	r3, r1
 800be9a:	807b      	strh	r3, [r7, #2]
    {
        borderSize = size;
 800be9c:	687b      	ldr	r3, [r7, #4]
 800be9e:	887a      	ldrh	r2, [r7, #2]
 800bea0:	861a      	strh	r2, [r3, #48]	; 0x30
    }
 800bea2:	bf00      	nop
 800bea4:	370c      	adds	r7, #12
 800bea6:	46bd      	mov	sp, r7
 800bea8:	f85d 7b04 	ldr.w	r7, [sp], #4
 800beac:	4770      	bx	lr
	...

0800beb0 <_ZN8touchgfx9ContainerD1Ev>:
class Container : public Drawable
 800beb0:	b580      	push	{r7, lr}
 800beb2:	b082      	sub	sp, #8
 800beb4:	af00      	add	r7, sp, #0
 800beb6:	6078      	str	r0, [r7, #4]
 800beb8:	4a05      	ldr	r2, [pc, #20]	; (800bed0 <_ZN8touchgfx9ContainerD1Ev+0x20>)
 800beba:	687b      	ldr	r3, [r7, #4]
 800bebc:	601a      	str	r2, [r3, #0]
 800bebe:	687b      	ldr	r3, [r7, #4]
 800bec0:	4618      	mov	r0, r3
 800bec2:	f7ff fd41 	bl	800b948 <_ZN8touchgfx8DrawableD1Ev>
 800bec6:	687b      	ldr	r3, [r7, #4]
 800bec8:	4618      	mov	r0, r3
 800beca:	3708      	adds	r7, #8
 800becc:	46bd      	mov	sp, r7
 800bece:	bd80      	pop	{r7, pc}
 800bed0:	0802f5d4 	.word	0x0802f5d4

0800bed4 <_ZN8touchgfx9ContainerD0Ev>:
 800bed4:	b580      	push	{r7, lr}
 800bed6:	b082      	sub	sp, #8
 800bed8:	af00      	add	r7, sp, #0
 800beda:	6078      	str	r0, [r7, #4]
 800bedc:	6878      	ldr	r0, [r7, #4]
 800bede:	f7ff ffe7 	bl	800beb0 <_ZN8touchgfx9ContainerD1Ev>
 800bee2:	212c      	movs	r1, #44	; 0x2c
 800bee4:	6878      	ldr	r0, [r7, #4]
 800bee6:	f01e fa38 	bl	802a35a <_ZdlPvj>
 800beea:	687b      	ldr	r3, [r7, #4]
 800beec:	4618      	mov	r0, r3
 800beee:	3708      	adds	r7, #8
 800bef0:	46bd      	mov	sp, r7
 800bef2:	bd80      	pop	{r7, pc}

0800bef4 <_ZN8touchgfx23AbstractButtonContainerC1Ev>:
 * @see ClickButtonTrigger, RepeatButtonTrigger, ToggleButtonTrigger, TouchButtonTrigger
 */
class AbstractButtonContainer : public Container
{
public:
    AbstractButtonContainer()
 800bef4:	b580      	push	{r7, lr}
 800bef6:	b082      	sub	sp, #8
 800bef8:	af00      	add	r7, sp, #0
 800befa:	6078      	str	r0, [r7, #4]
        : pressed(false), alpha(255), action(0)
 800befc:	687b      	ldr	r3, [r7, #4]
 800befe:	4618      	mov	r0, r3
 800bf00:	f7ff fee2 	bl	800bcc8 <_ZN8touchgfx9ContainerC1Ev>
 800bf04:	4a0b      	ldr	r2, [pc, #44]	; (800bf34 <_ZN8touchgfx23AbstractButtonContainerC1Ev+0x40>)
 800bf06:	687b      	ldr	r3, [r7, #4]
 800bf08:	601a      	str	r2, [r3, #0]
 800bf0a:	687b      	ldr	r3, [r7, #4]
 800bf0c:	2200      	movs	r2, #0
 800bf0e:	f883 202c 	strb.w	r2, [r3, #44]	; 0x2c
 800bf12:	687b      	ldr	r3, [r7, #4]
 800bf14:	22ff      	movs	r2, #255	; 0xff
 800bf16:	f883 202d 	strb.w	r2, [r3, #45]	; 0x2d
 800bf1a:	687b      	ldr	r3, [r7, #4]
 800bf1c:	2200      	movs	r2, #0
 800bf1e:	631a      	str	r2, [r3, #48]	; 0x30
    {
        setTouchable(true);
 800bf20:	687b      	ldr	r3, [r7, #4]
 800bf22:	2101      	movs	r1, #1
 800bf24:	4618      	mov	r0, r3
 800bf26:	f7ff fe35 	bl	800bb94 <_ZN8touchgfx8Drawable12setTouchableEb>
    }
 800bf2a:	687b      	ldr	r3, [r7, #4]
 800bf2c:	4618      	mov	r0, r3
 800bf2e:	3708      	adds	r7, #8
 800bf30:	46bd      	mov	sp, r7
 800bf32:	bd80      	pop	{r7, pc}
 800bf34:	0802e9d4 	.word	0x0802e9d4

0800bf38 <_ZN8touchgfx23AbstractButtonContainer10setPressedEb>:
     *
     * @param  isPressed True if is pressed, false if not.
     *
     * @see getPressed, handlePressedUpdated
     */
    void setPressed(bool isPressed)
 800bf38:	b580      	push	{r7, lr}
 800bf3a:	b082      	sub	sp, #8
 800bf3c:	af00      	add	r7, sp, #0
 800bf3e:	6078      	str	r0, [r7, #4]
 800bf40:	460b      	mov	r3, r1
 800bf42:	70fb      	strb	r3, [r7, #3]
    {
        pressed = isPressed;
 800bf44:	687b      	ldr	r3, [r7, #4]
 800bf46:	78fa      	ldrb	r2, [r7, #3]
 800bf48:	f883 202c 	strb.w	r2, [r3, #44]	; 0x2c
        handlePressedUpdated();
 800bf4c:	687b      	ldr	r3, [r7, #4]
 800bf4e:	681b      	ldr	r3, [r3, #0]
 800bf50:	338c      	adds	r3, #140	; 0x8c
 800bf52:	681b      	ldr	r3, [r3, #0]
 800bf54:	6878      	ldr	r0, [r7, #4]
 800bf56:	4798      	blx	r3
    }
 800bf58:	bf00      	nop
 800bf5a:	3708      	adds	r7, #8
 800bf5c:	46bd      	mov	sp, r7
 800bf5e:	bd80      	pop	{r7, pc}

0800bf60 <_ZNK8touchgfx23AbstractButtonContainer10getPressedEv>:
     *
     * @return True if it succeeds, false if it fails.
     *
     * @see setPressed
     */
    bool getPressed() const
 800bf60:	b480      	push	{r7}
 800bf62:	b083      	sub	sp, #12
 800bf64:	af00      	add	r7, sp, #0
 800bf66:	6078      	str	r0, [r7, #4]
    {
        return pressed;
 800bf68:	687b      	ldr	r3, [r7, #4]
 800bf6a:	f893 302c 	ldrb.w	r3, [r3, #44]	; 0x2c
    }
 800bf6e:	4618      	mov	r0, r3
 800bf70:	370c      	adds	r7, #12
 800bf72:	46bd      	mov	sp, r7
 800bf74:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bf78:	4770      	bx	lr

0800bf7a <_ZNK8touchgfx23AbstractButtonContainer8getAlphaEv>:
        alpha = newAlpha;
        handleAlphaUpdated();
    }

    /** @copydoc Image::getAlpha() */
    uint8_t getAlpha() const
 800bf7a:	b480      	push	{r7}
 800bf7c:	b083      	sub	sp, #12
 800bf7e:	af00      	add	r7, sp, #0
 800bf80:	6078      	str	r0, [r7, #4]
    {
        return alpha;
 800bf82:	687b      	ldr	r3, [r7, #4]
 800bf84:	f893 302d 	ldrb.w	r3, [r3, #45]	; 0x2d
    }
 800bf88:	4618      	mov	r0, r3
 800bf8a:	370c      	adds	r7, #12
 800bf8c:	46bd      	mov	sp, r7
 800bf8e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bf92:	4770      	bx	lr

0800bf94 <_ZN8touchgfx23AbstractButtonContainer9setActionERNS_15GenericCallbackIRKS0_vvEE>:
     *
     * @param  callback The callback.
     *
     * @see executeAction
     */
    void setAction(GenericCallback<const AbstractButtonContainer&>& callback)
 800bf94:	b480      	push	{r7}
 800bf96:	b083      	sub	sp, #12
 800bf98:	af00      	add	r7, sp, #0
 800bf9a:	6078      	str	r0, [r7, #4]
 800bf9c:	6039      	str	r1, [r7, #0]
    {
        action = &callback;
 800bf9e:	687b      	ldr	r3, [r7, #4]
 800bfa0:	683a      	ldr	r2, [r7, #0]
 800bfa2:	631a      	str	r2, [r3, #48]	; 0x30
    }
 800bfa4:	bf00      	nop
 800bfa6:	370c      	adds	r7, #12
 800bfa8:	46bd      	mov	sp, r7
 800bfaa:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bfae:	4770      	bx	lr

0800bfb0 <_ZN8touchgfx23AbstractButtonContainer13executeActionEv>:
    /**
     * Executes the previously set action.
     *
     * @see setAction
     */
    virtual void executeAction()
 800bfb0:	b580      	push	{r7, lr}
 800bfb2:	b082      	sub	sp, #8
 800bfb4:	af00      	add	r7, sp, #0
 800bfb6:	6078      	str	r0, [r7, #4]
    {
        if (action && action->isValid())
 800bfb8:	687b      	ldr	r3, [r7, #4]
 800bfba:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800bfbc:	2b00      	cmp	r3, #0
 800bfbe:	d00d      	beq.n	800bfdc <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x2c>
 800bfc0:	687b      	ldr	r3, [r7, #4]
 800bfc2:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800bfc4:	687b      	ldr	r3, [r7, #4]
 800bfc6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800bfc8:	681b      	ldr	r3, [r3, #0]
 800bfca:	330c      	adds	r3, #12
 800bfcc:	681b      	ldr	r3, [r3, #0]
 800bfce:	4610      	mov	r0, r2
 800bfd0:	4798      	blx	r3
 800bfd2:	4603      	mov	r3, r0
 800bfd4:	2b00      	cmp	r3, #0
 800bfd6:	d001      	beq.n	800bfdc <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x2c>
 800bfd8:	2301      	movs	r3, #1
 800bfda:	e000      	b.n	800bfde <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x2e>
 800bfdc:	2300      	movs	r3, #0
 800bfde:	2b00      	cmp	r3, #0
 800bfe0:	d009      	beq.n	800bff6 <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x46>
        {
            action->execute(*this);
 800bfe2:	687b      	ldr	r3, [r7, #4]
 800bfe4:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800bfe6:	687b      	ldr	r3, [r7, #4]
 800bfe8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800bfea:	681b      	ldr	r3, [r3, #0]
 800bfec:	3308      	adds	r3, #8
 800bfee:	681b      	ldr	r3, [r3, #0]
 800bff0:	6879      	ldr	r1, [r7, #4]
 800bff2:	4610      	mov	r0, r2
 800bff4:	4798      	blx	r3
        }
    }
 800bff6:	bf00      	nop
 800bff8:	3708      	adds	r7, #8
 800bffa:	46bd      	mov	sp, r7
 800bffc:	bd80      	pop	{r7, pc}

0800bffe <_ZN8touchgfx23AbstractButtonContainer20handlePressedUpdatedEv>:
    uint8_t alpha; ///< The current alpha value. 255 denotes solid, 0 denotes completely invisible.

    GenericCallback<const AbstractButtonContainer&>* action; ///< The action to be executed

    /** Handles what should happen when the pressed state is updated. */
    virtual void handlePressedUpdated()
 800bffe:	b480      	push	{r7}
 800c000:	b083      	sub	sp, #12
 800c002:	af00      	add	r7, sp, #0
 800c004:	6078      	str	r0, [r7, #4]
    {
    }
 800c006:	bf00      	nop
 800c008:	370c      	adds	r7, #12
 800c00a:	46bd      	mov	sp, r7
 800c00c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c010:	4770      	bx	lr

0800c012 <_ZN8touchgfx23AbstractButtonContainer18handleAlphaUpdatedEv>:

    /** Handles what should happen when the alpha is updated. */
    virtual void handleAlphaUpdated()
 800c012:	b480      	push	{r7}
 800c014:	b083      	sub	sp, #12
 800c016:	af00      	add	r7, sp, #0
 800c018:	6078      	str	r0, [r7, #4]
    {
    }
 800c01a:	bf00      	nop
 800c01c:	370c      	adds	r7, #12
 800c01e:	46bd      	mov	sp, r7
 800c020:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c024:	4770      	bx	lr
	...

0800c028 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>:
     *
     * @param   bmp (Optional) The bitmap to display.
     *
     * @see setBitmap
     */
    Image(const Bitmap& bmp = Bitmap())
 800c028:	b580      	push	{r7, lr}
 800c02a:	b082      	sub	sp, #8
 800c02c:	af00      	add	r7, sp, #0
 800c02e:	6078      	str	r0, [r7, #4]
 800c030:	6039      	str	r1, [r7, #0]
        : Widget(), bitmap(bmp), alpha(255)
 800c032:	687b      	ldr	r3, [r7, #4]
 800c034:	4618      	mov	r0, r3
 800c036:	2326      	movs	r3, #38	; 0x26
 800c038:	461a      	mov	r2, r3
 800c03a:	2100      	movs	r1, #0
 800c03c:	f01f f847 	bl	802b0ce <memset>
 800c040:	687b      	ldr	r3, [r7, #4]
 800c042:	4618      	mov	r0, r3
 800c044:	f7ff fe62 	bl	800bd0c <_ZN8touchgfx6WidgetC1Ev>
 800c048:	4a09      	ldr	r2, [pc, #36]	; (800c070 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE+0x48>)
 800c04a:	687b      	ldr	r3, [r7, #4]
 800c04c:	601a      	str	r2, [r3, #0]
 800c04e:	687b      	ldr	r3, [r7, #4]
 800c050:	683a      	ldr	r2, [r7, #0]
 800c052:	8812      	ldrh	r2, [r2, #0]
 800c054:	84da      	strh	r2, [r3, #38]	; 0x26
 800c056:	687b      	ldr	r3, [r7, #4]
 800c058:	22ff      	movs	r2, #255	; 0xff
 800c05a:	f883 2028 	strb.w	r2, [r3, #40]	; 0x28
    {
        Image::setBitmap(bmp);
 800c05e:	6839      	ldr	r1, [r7, #0]
 800c060:	6878      	ldr	r0, [r7, #4]
 800c062:	f009 fa86 	bl	8015572 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    }
 800c066:	687b      	ldr	r3, [r7, #4]
 800c068:	4618      	mov	r0, r3
 800c06a:	3708      	adds	r7, #8
 800c06c:	46bd      	mov	sp, r7
 800c06e:	bd80      	pop	{r7, pc}
 800c070:	0802fc60 	.word	0x0802fc60

0800c074 <_ZN8touchgfx5Image8setAlphaEh>:
     *
     * @see getAlpha
     *
     * @note The user code must call invalidate() in order to update the display.
     */
    void setAlpha(uint8_t newAlpha)
 800c074:	b480      	push	{r7}
 800c076:	b083      	sub	sp, #12
 800c078:	af00      	add	r7, sp, #0
 800c07a:	6078      	str	r0, [r7, #4]
 800c07c:	460b      	mov	r3, r1
 800c07e:	70fb      	strb	r3, [r7, #3]
    {
        alpha = newAlpha;
 800c080:	687b      	ldr	r3, [r7, #4]
 800c082:	78fa      	ldrb	r2, [r7, #3]
 800c084:	f883 2028 	strb.w	r2, [r3, #40]	; 0x28
    }
 800c088:	bf00      	nop
 800c08a:	370c      	adds	r7, #12
 800c08c:	46bd      	mov	sp, r7
 800c08e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c092:	4770      	bx	lr

0800c094 <_ZN8touchgfx5ImageD1Ev>:
class Image : public Widget
 800c094:	b580      	push	{r7, lr}
 800c096:	b082      	sub	sp, #8
 800c098:	af00      	add	r7, sp, #0
 800c09a:	6078      	str	r0, [r7, #4]
 800c09c:	4a05      	ldr	r2, [pc, #20]	; (800c0b4 <_ZN8touchgfx5ImageD1Ev+0x20>)
 800c09e:	687b      	ldr	r3, [r7, #4]
 800c0a0:	601a      	str	r2, [r3, #0]
 800c0a2:	687b      	ldr	r3, [r7, #4]
 800c0a4:	4618      	mov	r0, r3
 800c0a6:	f7ff fe43 	bl	800bd30 <_ZN8touchgfx6WidgetD1Ev>
 800c0aa:	687b      	ldr	r3, [r7, #4]
 800c0ac:	4618      	mov	r0, r3
 800c0ae:	3708      	adds	r7, #8
 800c0b0:	46bd      	mov	sp, r7
 800c0b2:	bd80      	pop	{r7, pc}
 800c0b4:	0802fc60 	.word	0x0802fc60

0800c0b8 <_ZN8touchgfx5ImageD0Ev>:
 800c0b8:	b580      	push	{r7, lr}
 800c0ba:	b082      	sub	sp, #8
 800c0bc:	af00      	add	r7, sp, #0
 800c0be:	6078      	str	r0, [r7, #4]
 800c0c0:	6878      	ldr	r0, [r7, #4]
 800c0c2:	f7ff ffe7 	bl	800c094 <_ZN8touchgfx5ImageD1Ev>
 800c0c6:	212c      	movs	r1, #44	; 0x2c
 800c0c8:	6878      	ldr	r0, [r7, #4]
 800c0ca:	f01e f946 	bl	802a35a <_ZdlPvj>
 800c0ce:	687b      	ldr	r3, [r7, #4]
 800c0d0:	4618      	mov	r0, r3
 800c0d2:	3708      	adds	r7, #8
 800c0d4:	46bd      	mov	sp, r7
 800c0d6:	bd80      	pop	{r7, pc}

0800c0d8 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE>:
     *
     * @param  event The click event.
     *
     * @see setAction, setPressed, getPressed
     */
    virtual void handleClickEvent(const ClickEvent& event)
 800c0d8:	b580      	push	{r7, lr}
 800c0da:	b084      	sub	sp, #16
 800c0dc:	af00      	add	r7, sp, #0
 800c0de:	6078      	str	r0, [r7, #4]
 800c0e0:	6039      	str	r1, [r7, #0]
    {
        bool wasPressed = getPressed();
 800c0e2:	687b      	ldr	r3, [r7, #4]
 800c0e4:	4618      	mov	r0, r3
 800c0e6:	f7ff ff3b 	bl	800bf60 <_ZNK8touchgfx23AbstractButtonContainer10getPressedEv>
 800c0ea:	4603      	mov	r3, r0
 800c0ec:	73fb      	strb	r3, [r7, #15]
        bool newPressedValue = (event.getType() == ClickEvent::PRESSED);
 800c0ee:	6838      	ldr	r0, [r7, #0]
 800c0f0:	f7ff fbee 	bl	800b8d0 <_ZNK8touchgfx10ClickEvent7getTypeEv>
 800c0f4:	4603      	mov	r3, r0
 800c0f6:	2b00      	cmp	r3, #0
 800c0f8:	bf0c      	ite	eq
 800c0fa:	2301      	moveq	r3, #1
 800c0fc:	2300      	movne	r3, #0
 800c0fe:	73bb      	strb	r3, [r7, #14]
        if ((newPressedValue && !wasPressed) || (!newPressedValue && wasPressed))
 800c100:	7bbb      	ldrb	r3, [r7, #14]
 800c102:	2b00      	cmp	r3, #0
 800c104:	d005      	beq.n	800c112 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x3a>
 800c106:	7bfb      	ldrb	r3, [r7, #15]
 800c108:	f083 0301 	eor.w	r3, r3, #1
 800c10c:	b2db      	uxtb	r3, r3
 800c10e:	2b00      	cmp	r3, #0
 800c110:	d108      	bne.n	800c124 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x4c>
 800c112:	7bbb      	ldrb	r3, [r7, #14]
 800c114:	f083 0301 	eor.w	r3, r3, #1
 800c118:	b2db      	uxtb	r3, r3
 800c11a:	2b00      	cmp	r3, #0
 800c11c:	d00f      	beq.n	800c13e <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x66>
 800c11e:	7bfb      	ldrb	r3, [r7, #15]
 800c120:	2b00      	cmp	r3, #0
 800c122:	d00c      	beq.n	800c13e <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x66>
        {
            setPressed(newPressedValue);
 800c124:	687b      	ldr	r3, [r7, #4]
 800c126:	7bba      	ldrb	r2, [r7, #14]
 800c128:	4611      	mov	r1, r2
 800c12a:	4618      	mov	r0, r3
 800c12c:	f7ff ff04 	bl	800bf38 <_ZN8touchgfx23AbstractButtonContainer10setPressedEb>
            invalidate();
 800c130:	687a      	ldr	r2, [r7, #4]
 800c132:	687b      	ldr	r3, [r7, #4]
 800c134:	681b      	ldr	r3, [r3, #0]
 800c136:	3314      	adds	r3, #20
 800c138:	681b      	ldr	r3, [r3, #0]
 800c13a:	4610      	mov	r0, r2
 800c13c:	4798      	blx	r3
        }
        if (wasPressed && (event.getType() == ClickEvent::RELEASED))
 800c13e:	7bfb      	ldrb	r3, [r7, #15]
 800c140:	2b00      	cmp	r3, #0
 800c142:	d007      	beq.n	800c154 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x7c>
 800c144:	6838      	ldr	r0, [r7, #0]
 800c146:	f7ff fbc3 	bl	800b8d0 <_ZNK8touchgfx10ClickEvent7getTypeEv>
 800c14a:	4603      	mov	r3, r0
 800c14c:	2b01      	cmp	r3, #1
 800c14e:	d101      	bne.n	800c154 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x7c>
 800c150:	2301      	movs	r3, #1
 800c152:	e000      	b.n	800c156 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x7e>
 800c154:	2300      	movs	r3, #0
 800c156:	2b00      	cmp	r3, #0
 800c158:	d006      	beq.n	800c168 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x90>
        {
            executeAction();
 800c15a:	687a      	ldr	r2, [r7, #4]
 800c15c:	687b      	ldr	r3, [r7, #4]
 800c15e:	681b      	ldr	r3, [r3, #0]
 800c160:	3388      	adds	r3, #136	; 0x88
 800c162:	681b      	ldr	r3, [r3, #0]
 800c164:	4610      	mov	r0, r2
 800c166:	4798      	blx	r3
        }
    }
 800c168:	bf00      	nop
 800c16a:	3710      	adds	r7, #16
 800c16c:	46bd      	mov	sp, r7
 800c16e:	bd80      	pop	{r7, pc}

0800c170 <_ZN8touchgfx23AbstractButtonContainerD1Ev>:
class AbstractButtonContainer : public Container
 800c170:	b580      	push	{r7, lr}
 800c172:	b082      	sub	sp, #8
 800c174:	af00      	add	r7, sp, #0
 800c176:	6078      	str	r0, [r7, #4]
 800c178:	4a05      	ldr	r2, [pc, #20]	; (800c190 <_ZN8touchgfx23AbstractButtonContainerD1Ev+0x20>)
 800c17a:	687b      	ldr	r3, [r7, #4]
 800c17c:	601a      	str	r2, [r3, #0]
 800c17e:	687b      	ldr	r3, [r7, #4]
 800c180:	4618      	mov	r0, r3
 800c182:	f7ff fe95 	bl	800beb0 <_ZN8touchgfx9ContainerD1Ev>
 800c186:	687b      	ldr	r3, [r7, #4]
 800c188:	4618      	mov	r0, r3
 800c18a:	3708      	adds	r7, #8
 800c18c:	46bd      	mov	sp, r7
 800c18e:	bd80      	pop	{r7, pc}
 800c190:	0802e9d4 	.word	0x0802e9d4

0800c194 <_ZN8touchgfx23AbstractButtonContainerD0Ev>:
 800c194:	b580      	push	{r7, lr}
 800c196:	b082      	sub	sp, #8
 800c198:	af00      	add	r7, sp, #0
 800c19a:	6078      	str	r0, [r7, #4]
 800c19c:	6878      	ldr	r0, [r7, #4]
 800c19e:	f7ff ffe7 	bl	800c170 <_ZN8touchgfx23AbstractButtonContainerD1Ev>
 800c1a2:	2134      	movs	r1, #52	; 0x34
 800c1a4:	6878      	ldr	r0, [r7, #4]
 800c1a6:	f01e f8d8 	bl	802a35a <_ZdlPvj>
 800c1aa:	687b      	ldr	r3, [r7, #4]
 800c1ac:	4618      	mov	r0, r3
 800c1ae:	3708      	adds	r7, #8
 800c1b0:	46bd      	mov	sp, r7
 800c1b2:	bd80      	pop	{r7, pc}

0800c1b4 <_ZN8touchgfx9TypedTextC1Et>:
    TypedText(const TypedTextId id = TYPED_TEXT_INVALID)
 800c1b4:	b480      	push	{r7}
 800c1b6:	b083      	sub	sp, #12
 800c1b8:	af00      	add	r7, sp, #0
 800c1ba:	6078      	str	r0, [r7, #4]
 800c1bc:	460b      	mov	r3, r1
 800c1be:	807b      	strh	r3, [r7, #2]
        : typedTextId(id)
 800c1c0:	4a06      	ldr	r2, [pc, #24]	; (800c1dc <_ZN8touchgfx9TypedTextC1Et+0x28>)
 800c1c2:	687b      	ldr	r3, [r7, #4]
 800c1c4:	601a      	str	r2, [r3, #0]
 800c1c6:	687b      	ldr	r3, [r7, #4]
 800c1c8:	887a      	ldrh	r2, [r7, #2]
 800c1ca:	809a      	strh	r2, [r3, #4]
    }
 800c1cc:	687b      	ldr	r3, [r7, #4]
 800c1ce:	4618      	mov	r0, r3
 800c1d0:	370c      	adds	r7, #12
 800c1d2:	46bd      	mov	sp, r7
 800c1d4:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c1d8:	4770      	bx	lr
 800c1da:	bf00      	nop
 800c1dc:	0802e4e0 	.word	0x0802e4e0

0800c1e0 <_ZN8touchgfx8TextAreaC1Ev>:
 *       the pointer remains valid when drawing.
 */
class TextArea : public Widget
{
public:
    TextArea()
 800c1e0:	b580      	push	{r7, lr}
 800c1e2:	b082      	sub	sp, #8
 800c1e4:	af00      	add	r7, sp, #0
 800c1e6:	6078      	str	r0, [r7, #4]
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 800c1e8:	687b      	ldr	r3, [r7, #4]
 800c1ea:	4618      	mov	r0, r3
 800c1ec:	2326      	movs	r3, #38	; 0x26
 800c1ee:	461a      	mov	r2, r3
 800c1f0:	2100      	movs	r1, #0
 800c1f2:	f01e ff6c 	bl	802b0ce <memset>
 800c1f6:	687b      	ldr	r3, [r7, #4]
 800c1f8:	4618      	mov	r0, r3
 800c1fa:	f7ff fd87 	bl	800bd0c <_ZN8touchgfx6WidgetC1Ev>
 800c1fe:	4a16      	ldr	r2, [pc, #88]	; (800c258 <_ZN8touchgfx8TextAreaC1Ev+0x78>)
 800c200:	687b      	ldr	r3, [r7, #4]
 800c202:	601a      	str	r2, [r3, #0]
 800c204:	687b      	ldr	r3, [r7, #4]
 800c206:	3328      	adds	r3, #40	; 0x28
 800c208:	f64f 71ff 	movw	r1, #65535	; 0xffff
 800c20c:	4618      	mov	r0, r3
 800c20e:	f7ff ffd1 	bl	800c1b4 <_ZN8touchgfx9TypedTextC1Et>
 800c212:	687b      	ldr	r3, [r7, #4]
 800c214:	3330      	adds	r3, #48	; 0x30
 800c216:	2100      	movs	r1, #0
 800c218:	4618      	mov	r0, r3
 800c21a:	f7ff fb03 	bl	800b824 <_ZN8touchgfx9colortypeC1Em>
 800c21e:	687b      	ldr	r3, [r7, #4]
 800c220:	2200      	movs	r2, #0
 800c222:	869a      	strh	r2, [r3, #52]	; 0x34
 800c224:	687b      	ldr	r3, [r7, #4]
 800c226:	22ff      	movs	r2, #255	; 0xff
 800c228:	f883 2036 	strb.w	r2, [r3, #54]	; 0x36
 800c22c:	687b      	ldr	r3, [r7, #4]
 800c22e:	2200      	movs	r2, #0
 800c230:	f883 2037 	strb.w	r2, [r3, #55]	; 0x37
 800c234:	687b      	ldr	r3, [r7, #4]
 800c236:	2200      	movs	r2, #0
 800c238:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38
 800c23c:	687b      	ldr	r3, [r7, #4]
 800c23e:	2200      	movs	r2, #0
 800c240:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39
 800c244:	687b      	ldr	r3, [r7, #4]
 800c246:	333c      	adds	r3, #60	; 0x3c
 800c248:	4618      	mov	r0, r3
 800c24a:	f000 f8f0 	bl	800c42e <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>
    {
    }
 800c24e:	687b      	ldr	r3, [r7, #4]
 800c250:	4618      	mov	r0, r3
 800c252:	3708      	adds	r7, #8
 800c254:	46bd      	mov	sp, r7
 800c256:	bd80      	pop	{r7, pc}
 800c258:	0802fa70 	.word	0x0802fa70

0800c25c <_ZN8touchgfx8TextArea8setWidthEs>:

    virtual void setWidth(int16_t width)
 800c25c:	b590      	push	{r4, r7, lr}
 800c25e:	b087      	sub	sp, #28
 800c260:	af00      	add	r7, sp, #0
 800c262:	6178      	str	r0, [r7, #20]
 800c264:	460b      	mov	r3, r1
 800c266:	827b      	strh	r3, [r7, #18]
    {
        Widget::setWidth(width);
 800c268:	697b      	ldr	r3, [r7, #20]
 800c26a:	f9b7 2012 	ldrsh.w	r2, [r7, #18]
 800c26e:	4611      	mov	r1, r2
 800c270:	4618      	mov	r0, r3
 800c272:	f7ff fc1e 	bl	800bab2 <_ZN8touchgfx8Drawable8setWidthEs>
        boundingArea = calculateBoundingArea();
 800c276:	697b      	ldr	r3, [r7, #20]
 800c278:	681b      	ldr	r3, [r3, #0]
 800c27a:	3384      	adds	r3, #132	; 0x84
 800c27c:	681b      	ldr	r3, [r3, #0]
 800c27e:	697c      	ldr	r4, [r7, #20]
 800c280:	463a      	mov	r2, r7
 800c282:	6979      	ldr	r1, [r7, #20]
 800c284:	4610      	mov	r0, r2
 800c286:	4798      	blx	r3
 800c288:	f104 033c 	add.w	r3, r4, #60	; 0x3c
 800c28c:	463a      	mov	r2, r7
 800c28e:	ca07      	ldmia	r2, {r0, r1, r2}
 800c290:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    }
 800c294:	bf00      	nop
 800c296:	371c      	adds	r7, #28
 800c298:	46bd      	mov	sp, r7
 800c29a:	bd90      	pop	{r4, r7, pc}

0800c29c <_ZN8touchgfx8TextArea9setHeightEs>:

    virtual void setHeight(int16_t height)
 800c29c:	b590      	push	{r4, r7, lr}
 800c29e:	b087      	sub	sp, #28
 800c2a0:	af00      	add	r7, sp, #0
 800c2a2:	6178      	str	r0, [r7, #20]
 800c2a4:	460b      	mov	r3, r1
 800c2a6:	827b      	strh	r3, [r7, #18]
    {
        Widget::setHeight(height);
 800c2a8:	697b      	ldr	r3, [r7, #20]
 800c2aa:	f9b7 2012 	ldrsh.w	r2, [r7, #18]
 800c2ae:	4611      	mov	r1, r2
 800c2b0:	4618      	mov	r0, r3
 800c2b2:	f7ff fc0d 	bl	800bad0 <_ZN8touchgfx8Drawable9setHeightEs>
        boundingArea = calculateBoundingArea();
 800c2b6:	697b      	ldr	r3, [r7, #20]
 800c2b8:	681b      	ldr	r3, [r3, #0]
 800c2ba:	3384      	adds	r3, #132	; 0x84
 800c2bc:	681b      	ldr	r3, [r3, #0]
 800c2be:	697c      	ldr	r4, [r7, #20]
 800c2c0:	463a      	mov	r2, r7
 800c2c2:	6979      	ldr	r1, [r7, #20]
 800c2c4:	4610      	mov	r0, r2
 800c2c6:	4798      	blx	r3
 800c2c8:	f104 033c 	add.w	r3, r4, #60	; 0x3c
 800c2cc:	463a      	mov	r2, r7
 800c2ce:	ca07      	ldmia	r2, {r0, r1, r2}
 800c2d0:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    }
 800c2d4:	bf00      	nop
 800c2d6:	371c      	adds	r7, #28
 800c2d8:	46bd      	mov	sp, r7
 800c2da:	bd90      	pop	{r4, r7, pc}

0800c2dc <_ZNK8touchgfx8TextArea12getSolidRectEv>:

    virtual Rect getSolidRect() const
 800c2dc:	b580      	push	{r7, lr}
 800c2de:	b082      	sub	sp, #8
 800c2e0:	af00      	add	r7, sp, #0
 800c2e2:	6078      	str	r0, [r7, #4]
 800c2e4:	6039      	str	r1, [r7, #0]
    {
        return Rect();
 800c2e6:	6878      	ldr	r0, [r7, #4]
 800c2e8:	f7ff faab 	bl	800b842 <_ZN8touchgfx4RectC1Ev>
    }
 800c2ec:	6878      	ldr	r0, [r7, #4]
 800c2ee:	3708      	adds	r7, #8
 800c2f0:	46bd      	mov	sp, r7
 800c2f2:	bd80      	pop	{r7, pc}

0800c2f4 <_ZN8touchgfx8TextArea8setAlphaEh>:
    }

    /**
     * @copydoc Image::setAlpha
     */
    virtual void setAlpha(uint8_t newAlpha)
 800c2f4:	b480      	push	{r7}
 800c2f6:	b083      	sub	sp, #12
 800c2f8:	af00      	add	r7, sp, #0
 800c2fa:	6078      	str	r0, [r7, #4]
 800c2fc:	460b      	mov	r3, r1
 800c2fe:	70fb      	strb	r3, [r7, #3]
    {
        alpha = newAlpha;
 800c300:	687b      	ldr	r3, [r7, #4]
 800c302:	78fa      	ldrb	r2, [r7, #3]
 800c304:	f883 2036 	strb.w	r2, [r3, #54]	; 0x36
    }
 800c308:	bf00      	nop
 800c30a:	370c      	adds	r7, #12
 800c30c:	46bd      	mov	sp, r7
 800c30e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c312:	4770      	bx	lr

0800c314 <_ZN8touchgfx8TextArea12setBaselineYEs>:
     *
     * @param  baselineY The y coordinate of the baseline of the text.
     *
     * @note setTypedText() must be called prior to setting the baseline.
     */
    virtual void setBaselineY(int16_t baselineY)
 800c314:	b5f0      	push	{r4, r5, r6, r7, lr}
 800c316:	b085      	sub	sp, #20
 800c318:	af00      	add	r7, sp, #0
 800c31a:	6078      	str	r0, [r7, #4]
 800c31c:	460b      	mov	r3, r1
 800c31e:	807b      	strh	r3, [r7, #2]
    {
        setY(baselineY - getTypedText().getFont()->getBaseline());
 800c320:	687e      	ldr	r6, [r7, #4]
 800c322:	687b      	ldr	r3, [r7, #4]
 800c324:	681b      	ldr	r3, [r3, #0]
 800c326:	3334      	adds	r3, #52	; 0x34
 800c328:	681c      	ldr	r4, [r3, #0]
 800c32a:	887d      	ldrh	r5, [r7, #2]
 800c32c:	6878      	ldr	r0, [r7, #4]
 800c32e:	f000 f867 	bl	800c400 <_ZNK8touchgfx8TextArea12getTypedTextEv>
 800c332:	4603      	mov	r3, r0
 800c334:	60fb      	str	r3, [r7, #12]
     *
     * @return The font.
     */
    FORCE_INLINE_FUNCTION const Font* getFont() const
    {
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 800c336:	4b1c      	ldr	r3, [pc, #112]	; (800c3a8 <_ZN8touchgfx8TextArea12setBaselineYEs+0x94>)
 800c338:	681b      	ldr	r3, [r3, #0]
 800c33a:	2b00      	cmp	r3, #0
 800c33c:	d105      	bne.n	800c34a <_ZN8touchgfx8TextArea12setBaselineYEs+0x36>
 800c33e:	4b1b      	ldr	r3, [pc, #108]	; (800c3ac <_ZN8touchgfx8TextArea12setBaselineYEs+0x98>)
 800c340:	4a1b      	ldr	r2, [pc, #108]	; (800c3b0 <_ZN8touchgfx8TextArea12setBaselineYEs+0x9c>)
 800c342:	216c      	movs	r1, #108	; 0x6c
 800c344:	481b      	ldr	r0, [pc, #108]	; (800c3b4 <_ZN8touchgfx8TextArea12setBaselineYEs+0xa0>)
 800c346:	f01e f837 	bl	802a3b8 <__assert_func>
 800c34a:	68fb      	ldr	r3, [r7, #12]
 800c34c:	60bb      	str	r3, [r7, #8]
        return typedTextId < numberOfTypedTexts;
 800c34e:	68bb      	ldr	r3, [r7, #8]
 800c350:	889a      	ldrh	r2, [r3, #4]
 800c352:	4b19      	ldr	r3, [pc, #100]	; (800c3b8 <_ZN8touchgfx8TextArea12setBaselineYEs+0xa4>)
 800c354:	881b      	ldrh	r3, [r3, #0]
 800c356:	429a      	cmp	r2, r3
 800c358:	bf34      	ite	cc
 800c35a:	2301      	movcc	r3, #1
 800c35c:	2300      	movcs	r3, #0
 800c35e:	b2db      	uxtb	r3, r3
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 800c360:	2b00      	cmp	r3, #0
 800c362:	d105      	bne.n	800c370 <_ZN8touchgfx8TextArea12setBaselineYEs+0x5c>
 800c364:	4b15      	ldr	r3, [pc, #84]	; (800c3bc <_ZN8touchgfx8TextArea12setBaselineYEs+0xa8>)
 800c366:	4a12      	ldr	r2, [pc, #72]	; (800c3b0 <_ZN8touchgfx8TextArea12setBaselineYEs+0x9c>)
 800c368:	216d      	movs	r1, #109	; 0x6d
 800c36a:	4812      	ldr	r0, [pc, #72]	; (800c3b4 <_ZN8touchgfx8TextArea12setBaselineYEs+0xa0>)
 800c36c:	f01e f824 	bl	802a3b8 <__assert_func>
        return fonts[typedTexts[typedTextId].fontIdx];
 800c370:	4b13      	ldr	r3, [pc, #76]	; (800c3c0 <_ZN8touchgfx8TextArea12setBaselineYEs+0xac>)
 800c372:	681a      	ldr	r2, [r3, #0]
 800c374:	4b0c      	ldr	r3, [pc, #48]	; (800c3a8 <_ZN8touchgfx8TextArea12setBaselineYEs+0x94>)
 800c376:	6819      	ldr	r1, [r3, #0]
 800c378:	68fb      	ldr	r3, [r7, #12]
 800c37a:	889b      	ldrh	r3, [r3, #4]
 800c37c:	005b      	lsls	r3, r3, #1
 800c37e:	440b      	add	r3, r1
 800c380:	781b      	ldrb	r3, [r3, #0]
 800c382:	009b      	lsls	r3, r3, #2
 800c384:	4413      	add	r3, r2
 800c386:	681b      	ldr	r3, [r3, #0]
 800c388:	681a      	ldr	r2, [r3, #0]
 800c38a:	3230      	adds	r2, #48	; 0x30
 800c38c:	6812      	ldr	r2, [r2, #0]
 800c38e:	4618      	mov	r0, r3
 800c390:	4790      	blx	r2
 800c392:	4603      	mov	r3, r0
 800c394:	1aeb      	subs	r3, r5, r3
 800c396:	b29b      	uxth	r3, r3
 800c398:	b21b      	sxth	r3, r3
 800c39a:	4619      	mov	r1, r3
 800c39c:	4630      	mov	r0, r6
 800c39e:	47a0      	blx	r4
    }
 800c3a0:	bf00      	nop
 800c3a2:	3714      	adds	r7, #20
 800c3a4:	46bd      	mov	sp, r7
 800c3a6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800c3a8:	20006c8c 	.word	0x20006c8c
 800c3ac:	0802d4ec 	.word	0x0802d4ec
 800c3b0:	0802d530 	.word	0x0802d530
 800c3b4:	0802d56c 	.word	0x0802d56c
 800c3b8:	20006c90 	.word	0x20006c90
 800c3bc:	0802d5b0 	.word	0x0802d5b0
 800c3c0:	20006c94 	.word	0x20006c94

0800c3c4 <_ZN8touchgfx8TextArea13setXBaselineYEss>:
     * @param  x         The x coordinate of the TextArea.
     * @param  baselineY The y coordinate of the baseline of the text.
     *
     * @note setTypedText() must be called prior to setting the baseline.
     */
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 800c3c4:	b580      	push	{r7, lr}
 800c3c6:	b082      	sub	sp, #8
 800c3c8:	af00      	add	r7, sp, #0
 800c3ca:	6078      	str	r0, [r7, #4]
 800c3cc:	460b      	mov	r3, r1
 800c3ce:	807b      	strh	r3, [r7, #2]
 800c3d0:	4613      	mov	r3, r2
 800c3d2:	803b      	strh	r3, [r7, #0]
    {
        setX(x);
 800c3d4:	687a      	ldr	r2, [r7, #4]
 800c3d6:	687b      	ldr	r3, [r7, #4]
 800c3d8:	681b      	ldr	r3, [r3, #0]
 800c3da:	3330      	adds	r3, #48	; 0x30
 800c3dc:	681b      	ldr	r3, [r3, #0]
 800c3de:	f9b7 1002 	ldrsh.w	r1, [r7, #2]
 800c3e2:	4610      	mov	r0, r2
 800c3e4:	4798      	blx	r3
        setBaselineY(baselineY);
 800c3e6:	687b      	ldr	r3, [r7, #4]
 800c3e8:	681b      	ldr	r3, [r3, #0]
 800c3ea:	3364      	adds	r3, #100	; 0x64
 800c3ec:	681b      	ldr	r3, [r3, #0]
 800c3ee:	f9b7 2000 	ldrsh.w	r2, [r7]
 800c3f2:	4611      	mov	r1, r2
 800c3f4:	6878      	ldr	r0, [r7, #4]
 800c3f6:	4798      	blx	r3
    }
 800c3f8:	bf00      	nop
 800c3fa:	3708      	adds	r7, #8
 800c3fc:	46bd      	mov	sp, r7
 800c3fe:	bd80      	pop	{r7, pc}

0800c400 <_ZNK8touchgfx8TextArea12getTypedTextEv>:
    /**
     * Gets the TypedText of the text area.
     *
     * @return The currently used TypedText.
     */
    const TypedText& getTypedText() const
 800c400:	b480      	push	{r7}
 800c402:	b083      	sub	sp, #12
 800c404:	af00      	add	r7, sp, #0
 800c406:	6078      	str	r0, [r7, #4]
    {
        return typedText;
 800c408:	687b      	ldr	r3, [r7, #4]
 800c40a:	3328      	adds	r3, #40	; 0x28
    }
 800c40c:	4618      	mov	r0, r3
 800c40e:	370c      	adds	r7, #12
 800c410:	46bd      	mov	sp, r7
 800c412:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c416:	4770      	bx	lr

0800c418 <_ZNK8touchgfx8TextArea12getWildcard2Ev>:
     *
     * @return A pointer to the second wildcard, if this text area has two wildcards, otherwise 0.
     *
     * @see TextAreaWithOneWildcard, TextAreaWithTwoWildcards
     */
    virtual const Unicode::UnicodeChar* getWildcard2() const
 800c418:	b480      	push	{r7}
 800c41a:	b083      	sub	sp, #12
 800c41c:	af00      	add	r7, sp, #0
 800c41e:	6078      	str	r0, [r7, #4]
    {
        return 0;
 800c420:	2300      	movs	r3, #0
    }
 800c422:	4618      	mov	r0, r3
 800c424:	370c      	adds	r7, #12
 800c426:	46bd      	mov	sp, r7
 800c428:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c42c:	4770      	bx	lr

0800c42e <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>:
        }

        /**
         * Initializes a new instance of the BoundingArea class which is invalid by default.
         */
        BoundingArea()
 800c42e:	b580      	push	{r7, lr}
 800c430:	b084      	sub	sp, #16
 800c432:	af02      	add	r7, sp, #8
 800c434:	6078      	str	r0, [r7, #4]
            : rect(Rect(0, 0, -1, -1)), // Negative width and height means invalid rectangle
 800c436:	6878      	ldr	r0, [r7, #4]
 800c438:	f04f 33ff 	mov.w	r3, #4294967295
 800c43c:	9300      	str	r3, [sp, #0]
 800c43e:	f04f 33ff 	mov.w	r3, #4294967295
 800c442:	2200      	movs	r2, #0
 800c444:	2100      	movs	r1, #0
 800c446:	f7ff fa13 	bl	800b870 <_ZN8touchgfx4RectC1Essss>
              text(0)
 800c44a:	687b      	ldr	r3, [r7, #4]
 800c44c:	2200      	movs	r2, #0
 800c44e:	609a      	str	r2, [r3, #8]
        {
        }
 800c450:	687b      	ldr	r3, [r7, #4]
 800c452:	4618      	mov	r0, r3
 800c454:	3708      	adds	r7, #8
 800c456:	46bd      	mov	sp, r7
 800c458:	bd80      	pop	{r7, pc}
	...

0800c45c <_ZN8touchgfx8TextAreaD1Ev>:
class TextArea : public Widget
 800c45c:	b580      	push	{r7, lr}
 800c45e:	b082      	sub	sp, #8
 800c460:	af00      	add	r7, sp, #0
 800c462:	6078      	str	r0, [r7, #4]
 800c464:	4a08      	ldr	r2, [pc, #32]	; (800c488 <_ZN8touchgfx8TextAreaD1Ev+0x2c>)
 800c466:	687b      	ldr	r3, [r7, #4]
 800c468:	601a      	str	r2, [r3, #0]
 800c46a:	687b      	ldr	r3, [r7, #4]
 800c46c:	3328      	adds	r3, #40	; 0x28
 800c46e:	4618      	mov	r0, r3
 800c470:	f7fe f9e0 	bl	800a834 <_ZN8touchgfx9TypedTextD1Ev>
 800c474:	687b      	ldr	r3, [r7, #4]
 800c476:	4618      	mov	r0, r3
 800c478:	f7ff fc5a 	bl	800bd30 <_ZN8touchgfx6WidgetD1Ev>
 800c47c:	687b      	ldr	r3, [r7, #4]
 800c47e:	4618      	mov	r0, r3
 800c480:	3708      	adds	r7, #8
 800c482:	46bd      	mov	sp, r7
 800c484:	bd80      	pop	{r7, pc}
 800c486:	bf00      	nop
 800c488:	0802fa70 	.word	0x0802fa70

0800c48c <_ZN8touchgfx8TextAreaD0Ev>:
 800c48c:	b580      	push	{r7, lr}
 800c48e:	b082      	sub	sp, #8
 800c490:	af00      	add	r7, sp, #0
 800c492:	6078      	str	r0, [r7, #4]
 800c494:	6878      	ldr	r0, [r7, #4]
 800c496:	f7ff ffe1 	bl	800c45c <_ZN8touchgfx8TextAreaD1Ev>
 800c49a:	2148      	movs	r1, #72	; 0x48
 800c49c:	6878      	ldr	r0, [r7, #4]
 800c49e:	f01d ff5c 	bl	802a35a <_ZdlPvj>
 800c4a2:	687b      	ldr	r3, [r7, #4]
 800c4a4:	4618      	mov	r0, r3
 800c4a6:	3708      	adds	r7, #8
 800c4a8:	46bd      	mov	sp, r7
 800c4aa:	bd80      	pop	{r7, pc}

0800c4ac <_ZN8touchgfx24TextAreaWithWildcardBaseC1Ev>:
 *
 */
class TextAreaWithWildcardBase : public TextArea
{
public:
    TextAreaWithWildcardBase()
 800c4ac:	b580      	push	{r7, lr}
 800c4ae:	b082      	sub	sp, #8
 800c4b0:	af00      	add	r7, sp, #0
 800c4b2:	6078      	str	r0, [r7, #4]
        : TextArea()
 800c4b4:	687b      	ldr	r3, [r7, #4]
 800c4b6:	4618      	mov	r0, r3
 800c4b8:	f7ff fe92 	bl	800c1e0 <_ZN8touchgfx8TextAreaC1Ev>
 800c4bc:	4a03      	ldr	r2, [pc, #12]	; (800c4cc <_ZN8touchgfx24TextAreaWithWildcardBaseC1Ev+0x20>)
 800c4be:	687b      	ldr	r3, [r7, #4]
 800c4c0:	601a      	str	r2, [r3, #0]
    {
    }
 800c4c2:	687b      	ldr	r3, [r7, #4]
 800c4c4:	4618      	mov	r0, r3
 800c4c6:	3708      	adds	r7, #8
 800c4c8:	46bd      	mov	sp, r7
 800c4ca:	bd80      	pop	{r7, pc}
 800c4cc:	0802fb68 	.word	0x0802fb68

0800c4d0 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv>:

    virtual void draw(const Rect& area) const;

    virtual void invalidateContent() const
 800c4d0:	b580      	push	{r7, lr}
 800c4d2:	b082      	sub	sp, #8
 800c4d4:	af00      	add	r7, sp, #0
 800c4d6:	6078      	str	r0, [r7, #4]
    {
        Widget::invalidateContent();
 800c4d8:	687b      	ldr	r3, [r7, #4]
 800c4da:	4618      	mov	r0, r3
 800c4dc:	f7ff fa54 	bl	800b988 <_ZNK8touchgfx8Drawable17invalidateContentEv>
    }
 800c4e0:	bf00      	nop
 800c4e2:	3708      	adds	r7, #8
 800c4e4:	46bd      	mov	sp, r7
 800c4e6:	bd80      	pop	{r7, pc}

0800c4e8 <_ZNK8touchgfx24TextAreaWithWildcardBase21calculateBoundingAreaEv>:

protected:
    virtual TextArea::BoundingArea calculateBoundingArea() const
 800c4e8:	b580      	push	{r7, lr}
 800c4ea:	b082      	sub	sp, #8
 800c4ec:	af00      	add	r7, sp, #0
 800c4ee:	6078      	str	r0, [r7, #4]
 800c4f0:	6039      	str	r1, [r7, #0]
    {
        return TextArea::BoundingArea();
 800c4f2:	6878      	ldr	r0, [r7, #4]
 800c4f4:	f7ff ff9b 	bl	800c42e <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>
    }
 800c4f8:	6878      	ldr	r0, [r7, #4]
 800c4fa:	3708      	adds	r7, #8
 800c4fc:	46bd      	mov	sp, r7
 800c4fe:	bd80      	pop	{r7, pc}

0800c500 <_ZN8touchgfx24TextAreaWithWildcardBaseD1Ev>:
class TextAreaWithWildcardBase : public TextArea
 800c500:	b580      	push	{r7, lr}
 800c502:	b082      	sub	sp, #8
 800c504:	af00      	add	r7, sp, #0
 800c506:	6078      	str	r0, [r7, #4]
 800c508:	4a05      	ldr	r2, [pc, #20]	; (800c520 <_ZN8touchgfx24TextAreaWithWildcardBaseD1Ev+0x20>)
 800c50a:	687b      	ldr	r3, [r7, #4]
 800c50c:	601a      	str	r2, [r3, #0]
 800c50e:	687b      	ldr	r3, [r7, #4]
 800c510:	4618      	mov	r0, r3
 800c512:	f7ff ffa3 	bl	800c45c <_ZN8touchgfx8TextAreaD1Ev>
 800c516:	687b      	ldr	r3, [r7, #4]
 800c518:	4618      	mov	r0, r3
 800c51a:	3708      	adds	r7, #8
 800c51c:	46bd      	mov	sp, r7
 800c51e:	bd80      	pop	{r7, pc}
 800c520:	0802fb68 	.word	0x0802fb68

0800c524 <_ZN8touchgfx24TextAreaWithWildcardBaseD0Ev>:
 800c524:	b580      	push	{r7, lr}
 800c526:	b082      	sub	sp, #8
 800c528:	af00      	add	r7, sp, #0
 800c52a:	6078      	str	r0, [r7, #4]
 800c52c:	6878      	ldr	r0, [r7, #4]
 800c52e:	f7ff ffe7 	bl	800c500 <_ZN8touchgfx24TextAreaWithWildcardBaseD1Ev>
 800c532:	2148      	movs	r1, #72	; 0x48
 800c534:	6878      	ldr	r0, [r7, #4]
 800c536:	f01d ff10 	bl	802a35a <_ZdlPvj>
 800c53a:	687b      	ldr	r3, [r7, #4]
 800c53c:	4618      	mov	r0, r3
 800c53e:	3708      	adds	r7, #8
 800c540:	46bd      	mov	sp, r7
 800c542:	bd80      	pop	{r7, pc}

0800c544 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>:
 *       replaced by a wildcard text.
 */
class TextAreaWithOneWildcard : public TextAreaWithWildcardBase
{
public:
    TextAreaWithOneWildcard()
 800c544:	b580      	push	{r7, lr}
 800c546:	b082      	sub	sp, #8
 800c548:	af00      	add	r7, sp, #0
 800c54a:	6078      	str	r0, [r7, #4]
        : TextAreaWithWildcardBase(), wc1(0)
 800c54c:	687b      	ldr	r3, [r7, #4]
 800c54e:	4618      	mov	r0, r3
 800c550:	f7ff ffac 	bl	800c4ac <_ZN8touchgfx24TextAreaWithWildcardBaseC1Ev>
 800c554:	4a05      	ldr	r2, [pc, #20]	; (800c56c <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev+0x28>)
 800c556:	687b      	ldr	r3, [r7, #4]
 800c558:	601a      	str	r2, [r3, #0]
 800c55a:	687b      	ldr	r3, [r7, #4]
 800c55c:	2200      	movs	r2, #0
 800c55e:	649a      	str	r2, [r3, #72]	; 0x48
    {
    }
 800c560:	687b      	ldr	r3, [r7, #4]
 800c562:	4618      	mov	r0, r3
 800c564:	3708      	adds	r7, #8
 800c566:	46bd      	mov	sp, r7
 800c568:	bd80      	pop	{r7, pc}
 800c56a:	bf00      	nop
 800c56c:	0802e890 	.word	0x0802e890

0800c570 <_ZN8touchgfx23TextAreaWithOneWildcard12setWildcard1EPKt>:
     * @param  value A pointer to the UnicodeChar to set the wildcard to.
     *
     * @note The pointer passed is saved, and must be accessible whenever TextAreaWithOneWildcard
     *       may need it.
     */
    void setWildcard1(const Unicode::UnicodeChar* value)
 800c570:	b480      	push	{r7}
 800c572:	b083      	sub	sp, #12
 800c574:	af00      	add	r7, sp, #0
 800c576:	6078      	str	r0, [r7, #4]
 800c578:	6039      	str	r1, [r7, #0]
    {
        wc1 = value;
 800c57a:	687b      	ldr	r3, [r7, #4]
 800c57c:	683a      	ldr	r2, [r7, #0]
 800c57e:	649a      	str	r2, [r3, #72]	; 0x48
    }
 800c580:	bf00      	nop
 800c582:	370c      	adds	r7, #12
 800c584:	46bd      	mov	sp, r7
 800c586:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c58a:	4770      	bx	lr

0800c58c <_ZNK8touchgfx23TextAreaWithOneWildcard12getWildcard1Ev>:

    virtual const Unicode::UnicodeChar* getWildcard1() const
 800c58c:	b480      	push	{r7}
 800c58e:	b083      	sub	sp, #12
 800c590:	af00      	add	r7, sp, #0
 800c592:	6078      	str	r0, [r7, #4]
    {
        return wc1;
 800c594:	687b      	ldr	r3, [r7, #4]
 800c596:	6c9b      	ldr	r3, [r3, #72]	; 0x48
    }
 800c598:	4618      	mov	r0, r3
 800c59a:	370c      	adds	r7, #12
 800c59c:	46bd      	mov	sp, r7
 800c59e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c5a2:	4770      	bx	lr

0800c5a4 <_ZN8touchgfx23TextAreaWithOneWildcard11setWildcardEPKt>:
     * @param  value A pointer to the UnicodeChar to set the wildcard to.
     *
     * @note The pointer passed is saved, and must be accessible whenever TextAreaWithOneWildcard
     *       may need it.
     */
    void setWildcard(const Unicode::UnicodeChar* value)
 800c5a4:	b580      	push	{r7, lr}
 800c5a6:	b082      	sub	sp, #8
 800c5a8:	af00      	add	r7, sp, #0
 800c5aa:	6078      	str	r0, [r7, #4]
 800c5ac:	6039      	str	r1, [r7, #0]
    {
        setWildcard1(value);
 800c5ae:	6839      	ldr	r1, [r7, #0]
 800c5b0:	6878      	ldr	r0, [r7, #4]
 800c5b2:	f7ff ffdd 	bl	800c570 <_ZN8touchgfx23TextAreaWithOneWildcard12setWildcard1EPKt>
    }
 800c5b6:	bf00      	nop
 800c5b8:	3708      	adds	r7, #8
 800c5ba:	46bd      	mov	sp, r7
 800c5bc:	bd80      	pop	{r7, pc}

0800c5be <_ZN20CustomContainer1Base10Up_clickedEv>:
    virtual void initialize();

    /*
     * Virtual Action Handlers
     */
    virtual void Up_clicked()
 800c5be:	b480      	push	{r7}
 800c5c0:	b083      	sub	sp, #12
 800c5c2:	af00      	add	r7, sp, #0
 800c5c4:	6078      	str	r0, [r7, #4]
    {
        // Override and implement this function in CustomContainer1
    }
 800c5c6:	bf00      	nop
 800c5c8:	370c      	adds	r7, #12
 800c5ca:	46bd      	mov	sp, r7
 800c5cc:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c5d0:	4770      	bx	lr

0800c5d2 <_ZN20CustomContainer1Base12Down_clickedEv>:
    virtual void Down_clicked()
 800c5d2:	b480      	push	{r7}
 800c5d4:	b083      	sub	sp, #12
 800c5d6:	af00      	add	r7, sp, #0
 800c5d8:	6078      	str	r0, [r7, #4]
    {
        // Override and implement this function in CustomContainer1
    }
 800c5da:	bf00      	nop
 800c5dc:	370c      	adds	r7, #12
 800c5de:	46bd      	mov	sp, r7
 800c5e0:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c5e4:	4770      	bx	lr
	...

0800c5e8 <_ZN20CustomContainer1BaseC1Ev>:
#include <gui_generated/containers/CustomContainer1Base.hpp>
#include <touchgfx/Color.hpp>
#include <images/BitmapDatabase.hpp>
#include <texts/TextKeysAndLanguages.hpp>

CustomContainer1Base::CustomContainer1Base() :
 800c5e8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800c5ec:	b0a8      	sub	sp, #160	; 0xa0
 800c5ee:	af02      	add	r7, sp, #8
 800c5f0:	6178      	str	r0, [r7, #20]
    flexButtonCallback(this, &CustomContainer1Base::flexButtonCallbackHandler)
 800c5f2:	697b      	ldr	r3, [r7, #20]
 800c5f4:	4618      	mov	r0, r3
 800c5f6:	f7ff fb67 	bl	800bcc8 <_ZN8touchgfx9ContainerC1Ev>
 800c5fa:	4ae6      	ldr	r2, [pc, #920]	; (800c994 <_ZN20CustomContainer1BaseC1Ev+0x3ac>)
 800c5fc:	697b      	ldr	r3, [r7, #20]
 800c5fe:	601a      	str	r2, [r3, #0]
 800c600:	697b      	ldr	r3, [r7, #20]
 800c602:	332c      	adds	r3, #44	; 0x2c
 800c604:	4618      	mov	r0, r3
 800c606:	f7ff fc19 	bl	800be3c <_ZN8touchgfx13BoxWithBorderC1Ev>
 800c60a:	697b      	ldr	r3, [r7, #20]
 800c60c:	3360      	adds	r3, #96	; 0x60
 800c60e:	4618      	mov	r0, r3
 800c610:	f000 fb5a 	bl	800ccc8 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev>
 800c614:	697b      	ldr	r3, [r7, #20]
 800c616:	f503 7384 	add.w	r3, r3, #264	; 0x108
 800c61a:	4618      	mov	r0, r3
 800c61c:	f000 fb54 	bl	800ccc8 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev>
 800c620:	697b      	ldr	r3, [r7, #20]
 800c622:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800c626:	4618      	mov	r0, r3
 800c628:	f7ff ff8c 	bl	800c544 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 800c62c:	697b      	ldr	r3, [r7, #20]
 800c62e:	f503 7004 	add.w	r0, r3, #528	; 0x210
 800c632:	4bd9      	ldr	r3, [pc, #868]	; (800c998 <_ZN20CustomContainer1BaseC1Ev+0x3b0>)
 800c634:	61fb      	str	r3, [r7, #28]
 800c636:	2300      	movs	r3, #0
 800c638:	623b      	str	r3, [r7, #32]
 800c63a:	f107 031c 	add.w	r3, r7, #28
 800c63e:	cb0c      	ldmia	r3, {r2, r3}
 800c640:	6979      	ldr	r1, [r7, #20]
 800c642:	f000 fb89 	bl	800cd58 <_ZN8touchgfx8CallbackI20CustomContainer1BaseRKNS_23AbstractButtonContainerEvvEC1EPS1_MS1_FvS4_E>
{
    setWidth(328);
 800c646:	697b      	ldr	r3, [r7, #20]
 800c648:	f44f 71a4 	mov.w	r1, #328	; 0x148
 800c64c:	4618      	mov	r0, r3
 800c64e:	f7ff fa30 	bl	800bab2 <_ZN8touchgfx8Drawable8setWidthEs>
    setHeight(222);
 800c652:	697b      	ldr	r3, [r7, #20]
 800c654:	21de      	movs	r1, #222	; 0xde
 800c656:	4618      	mov	r0, r3
 800c658:	f7ff fa3a 	bl	800bad0 <_ZN8touchgfx8Drawable9setHeightEs>
    boxWithBorder1.setPosition(0, 0, 328, 222);
 800c65c:	697b      	ldr	r3, [r7, #20]
 800c65e:	f103 002c 	add.w	r0, r3, #44	; 0x2c
 800c662:	23de      	movs	r3, #222	; 0xde
 800c664:	9300      	str	r3, [sp, #0]
 800c666:	f44f 73a4 	mov.w	r3, #328	; 0x148
 800c66a:	2200      	movs	r2, #0
 800c66c:	2100      	movs	r1, #0
 800c66e:	f7ff f9a9 	bl	800b9c4 <_ZN8touchgfx8Drawable11setPositionEssss>
    boxWithBorder1.setColor(touchgfx::Color::getColorFromRGB(32, 32, 32));
 800c672:	697b      	ldr	r3, [r7, #20]
 800c674:	f103 042c 	add.w	r4, r3, #44	; 0x2c
 800c678:	2320      	movs	r3, #32
 800c67a:	f887 306d 	strb.w	r3, [r7, #109]	; 0x6d
 800c67e:	2320      	movs	r3, #32
 800c680:	f887 306c 	strb.w	r3, [r7, #108]	; 0x6c
 800c684:	2320      	movs	r3, #32
 800c686:	f887 306b 	strb.w	r3, [r7, #107]	; 0x6b
     *
     * @return The color representation depending on LCD color format.
     */
    FORCE_INLINE_FUNCTION static colortype getColorFromRGB(uint8_t red, uint8_t green, uint8_t blue)
    {
        return 0xFF000000 | (red << 16) | (green << 8) | (blue);
 800c68a:	f897 306d 	ldrb.w	r3, [r7, #109]	; 0x6d
 800c68e:	041b      	lsls	r3, r3, #16
 800c690:	461a      	mov	r2, r3
 800c692:	f897 306c 	ldrb.w	r3, [r7, #108]	; 0x6c
 800c696:	021b      	lsls	r3, r3, #8
 800c698:	431a      	orrs	r2, r3
 800c69a:	f897 306b 	ldrb.w	r3, [r7, #107]	; 0x6b
 800c69e:	4313      	orrs	r3, r2
 800c6a0:	f043 427f 	orr.w	r2, r3, #4278190080	; 0xff000000
 800c6a4:	f107 0364 	add.w	r3, r7, #100	; 0x64
 800c6a8:	4611      	mov	r1, r2
 800c6aa:	4618      	mov	r0, r3
 800c6ac:	f7ff f8ba 	bl	800b824 <_ZN8touchgfx9colortypeC1Em>
 800c6b0:	6e7b      	ldr	r3, [r7, #100]	; 0x64
 800c6b2:	4619      	mov	r1, r3
 800c6b4:	4620      	mov	r0, r4
 800c6b6:	f7ff fb81 	bl	800bdbc <_ZN8touchgfx3Box8setColorENS_9colortypeE>
    boxWithBorder1.setBorderColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
 800c6ba:	697b      	ldr	r3, [r7, #20]
 800c6bc:	f103 042c 	add.w	r4, r3, #44	; 0x2c
 800c6c0:	23ff      	movs	r3, #255	; 0xff
 800c6c2:	f887 3070 	strb.w	r3, [r7, #112]	; 0x70
 800c6c6:	23ff      	movs	r3, #255	; 0xff
 800c6c8:	f887 306f 	strb.w	r3, [r7, #111]	; 0x6f
 800c6cc:	23ff      	movs	r3, #255	; 0xff
 800c6ce:	f887 306e 	strb.w	r3, [r7, #110]	; 0x6e
 800c6d2:	f897 3070 	ldrb.w	r3, [r7, #112]	; 0x70
 800c6d6:	041b      	lsls	r3, r3, #16
 800c6d8:	461a      	mov	r2, r3
 800c6da:	f897 306f 	ldrb.w	r3, [r7, #111]	; 0x6f
 800c6de:	021b      	lsls	r3, r3, #8
 800c6e0:	431a      	orrs	r2, r3
 800c6e2:	f897 306e 	ldrb.w	r3, [r7, #110]	; 0x6e
 800c6e6:	4313      	orrs	r3, r2
 800c6e8:	f043 427f 	orr.w	r2, r3, #4278190080	; 0xff000000
 800c6ec:	f107 0360 	add.w	r3, r7, #96	; 0x60
 800c6f0:	4611      	mov	r1, r2
 800c6f2:	4618      	mov	r0, r3
 800c6f4:	f7ff f896 	bl	800b824 <_ZN8touchgfx9colortypeC1Em>
 800c6f8:	6e3b      	ldr	r3, [r7, #96]	; 0x60
 800c6fa:	4619      	mov	r1, r3
 800c6fc:	4620      	mov	r0, r4
 800c6fe:	f7ff fbb9 	bl	800be74 <_ZN8touchgfx13BoxWithBorder14setBorderColorENS_9colortypeE>
    boxWithBorder1.setBorderSize(5);
 800c702:	697b      	ldr	r3, [r7, #20]
 800c704:	332c      	adds	r3, #44	; 0x2c
 800c706:	2105      	movs	r1, #5
 800c708:	4618      	mov	r0, r3
 800c70a:	f7ff fbc1 	bl	800be90 <_ZN8touchgfx13BoxWithBorder13setBorderSizeEt>
    add(boxWithBorder1);
 800c70e:	697a      	ldr	r2, [r7, #20]
 800c710:	697b      	ldr	r3, [r7, #20]
 800c712:	332c      	adds	r3, #44	; 0x2c
 800c714:	4619      	mov	r1, r3
 800c716:	4610      	mov	r0, r2
 800c718:	f005 ff3e 	bl	8012598 <_ZN8touchgfx9Container3addERNS_8DrawableE>

    Temp_Up_Button.setBoxWithBorderPosition(0, 0, 80, 43);
 800c71c:	697b      	ldr	r3, [r7, #20]
 800c71e:	f103 0060 	add.w	r0, r3, #96	; 0x60
 800c722:	232b      	movs	r3, #43	; 0x2b
 800c724:	9300      	str	r3, [sp, #0]
 800c726:	2350      	movs	r3, #80	; 0x50
 800c728:	2200      	movs	r2, #0
 800c72a:	2100      	movs	r1, #0
 800c72c:	f000 fb34 	bl	800cd98 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE24setBoxWithBorderPositionEssss>
    Temp_Up_Button.setBorderSize(2);
 800c730:	697b      	ldr	r3, [r7, #20]
 800c732:	3360      	adds	r3, #96	; 0x60
 800c734:	2102      	movs	r1, #2
 800c736:	4618      	mov	r0, r3
 800c738:	f000 fb4e 	bl	800cdd8 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE13setBorderSizeEh>
    Temp_Up_Button.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(52, 232, 204), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(9, 122, 103), touchgfx::Color::getColorFromRGB(51, 102, 153));
 800c73c:	697b      	ldr	r3, [r7, #20]
 800c73e:	f103 0460 	add.w	r4, r3, #96	; 0x60
 800c742:	2334      	movs	r3, #52	; 0x34
 800c744:	f887 3073 	strb.w	r3, [r7, #115]	; 0x73
 800c748:	23e8      	movs	r3, #232	; 0xe8
 800c74a:	f887 3072 	strb.w	r3, [r7, #114]	; 0x72
 800c74e:	23cc      	movs	r3, #204	; 0xcc
 800c750:	f887 3071 	strb.w	r3, [r7, #113]	; 0x71
 800c754:	f897 3073 	ldrb.w	r3, [r7, #115]	; 0x73
 800c758:	041b      	lsls	r3, r3, #16
 800c75a:	461a      	mov	r2, r3
 800c75c:	f897 3072 	ldrb.w	r3, [r7, #114]	; 0x72
 800c760:	021b      	lsls	r3, r3, #8
 800c762:	431a      	orrs	r2, r3
 800c764:	f897 3071 	ldrb.w	r3, [r7, #113]	; 0x71
 800c768:	4313      	orrs	r3, r2
 800c76a:	f043 427f 	orr.w	r2, r3, #4278190080	; 0xff000000
 800c76e:	f107 035c 	add.w	r3, r7, #92	; 0x5c
 800c772:	4611      	mov	r1, r2
 800c774:	4618      	mov	r0, r3
 800c776:	f7ff f855 	bl	800b824 <_ZN8touchgfx9colortypeC1Em>
 800c77a:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 800c77c:	461d      	mov	r5, r3
 800c77e:	2300      	movs	r3, #0
 800c780:	f887 3076 	strb.w	r3, [r7, #118]	; 0x76
 800c784:	2399      	movs	r3, #153	; 0x99
 800c786:	f887 3075 	strb.w	r3, [r7, #117]	; 0x75
 800c78a:	23cc      	movs	r3, #204	; 0xcc
 800c78c:	f887 3074 	strb.w	r3, [r7, #116]	; 0x74
 800c790:	f897 3076 	ldrb.w	r3, [r7, #118]	; 0x76
 800c794:	041b      	lsls	r3, r3, #16
 800c796:	461a      	mov	r2, r3
 800c798:	f897 3075 	ldrb.w	r3, [r7, #117]	; 0x75
 800c79c:	021b      	lsls	r3, r3, #8
 800c79e:	431a      	orrs	r2, r3
 800c7a0:	f897 3074 	ldrb.w	r3, [r7, #116]	; 0x74
 800c7a4:	4313      	orrs	r3, r2
 800c7a6:	f043 427f 	orr.w	r2, r3, #4278190080	; 0xff000000
 800c7aa:	f107 0358 	add.w	r3, r7, #88	; 0x58
 800c7ae:	4611      	mov	r1, r2
 800c7b0:	4618      	mov	r0, r3
 800c7b2:	f7ff f837 	bl	800b824 <_ZN8touchgfx9colortypeC1Em>
 800c7b6:	6dbb      	ldr	r3, [r7, #88]	; 0x58
 800c7b8:	461e      	mov	r6, r3
 800c7ba:	2309      	movs	r3, #9
 800c7bc:	f887 3079 	strb.w	r3, [r7, #121]	; 0x79
 800c7c0:	237a      	movs	r3, #122	; 0x7a
 800c7c2:	f887 3078 	strb.w	r3, [r7, #120]	; 0x78
 800c7c6:	2367      	movs	r3, #103	; 0x67
 800c7c8:	f887 3077 	strb.w	r3, [r7, #119]	; 0x77
 800c7cc:	f897 3079 	ldrb.w	r3, [r7, #121]	; 0x79
 800c7d0:	041b      	lsls	r3, r3, #16
 800c7d2:	461a      	mov	r2, r3
 800c7d4:	f897 3078 	ldrb.w	r3, [r7, #120]	; 0x78
 800c7d8:	021b      	lsls	r3, r3, #8
 800c7da:	431a      	orrs	r2, r3
 800c7dc:	f897 3077 	ldrb.w	r3, [r7, #119]	; 0x77
 800c7e0:	4313      	orrs	r3, r2
 800c7e2:	f043 427f 	orr.w	r2, r3, #4278190080	; 0xff000000
 800c7e6:	f107 0354 	add.w	r3, r7, #84	; 0x54
 800c7ea:	4611      	mov	r1, r2
 800c7ec:	4618      	mov	r0, r3
 800c7ee:	f7ff f819 	bl	800b824 <_ZN8touchgfx9colortypeC1Em>
 800c7f2:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 800c7f4:	4698      	mov	r8, r3
 800c7f6:	2333      	movs	r3, #51	; 0x33
 800c7f8:	f887 307c 	strb.w	r3, [r7, #124]	; 0x7c
 800c7fc:	2366      	movs	r3, #102	; 0x66
 800c7fe:	f887 307b 	strb.w	r3, [r7, #123]	; 0x7b
 800c802:	2399      	movs	r3, #153	; 0x99
 800c804:	f887 307a 	strb.w	r3, [r7, #122]	; 0x7a
 800c808:	f897 307c 	ldrb.w	r3, [r7, #124]	; 0x7c
 800c80c:	041b      	lsls	r3, r3, #16
 800c80e:	461a      	mov	r2, r3
 800c810:	f897 307b 	ldrb.w	r3, [r7, #123]	; 0x7b
 800c814:	021b      	lsls	r3, r3, #8
 800c816:	431a      	orrs	r2, r3
 800c818:	f897 307a 	ldrb.w	r3, [r7, #122]	; 0x7a
 800c81c:	4313      	orrs	r3, r2
 800c81e:	f043 427f 	orr.w	r2, r3, #4278190080	; 0xff000000
 800c822:	f107 0350 	add.w	r3, r7, #80	; 0x50
 800c826:	4611      	mov	r1, r2
 800c828:	4618      	mov	r0, r3
 800c82a:	f7fe fffb 	bl	800b824 <_ZN8touchgfx9colortypeC1Em>
 800c82e:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 800c830:	9300      	str	r3, [sp, #0]
 800c832:	4643      	mov	r3, r8
 800c834:	4632      	mov	r2, r6
 800c836:	4629      	mov	r1, r5
 800c838:	4620      	mov	r0, r4
 800c83a:	f000 fadf 	bl	800cdfc <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
    Temp_Up_Button.setIconBitmaps(Bitmap(BITMAP_ICON_THEME_IMAGES_HARDWARE_KEYBOARD_ARROW_UP_35_35_000000_SVG_ID), Bitmap(BITMAP_ICON_THEME_IMAGES_HARDWARE_KEYBOARD_ARROW_UP_35_35_FF0000_SVG_ID));
 800c83e:	697b      	ldr	r3, [r7, #20]
 800c840:	f103 0460 	add.w	r4, r3, #96	; 0x60
 800c844:	f107 0324 	add.w	r3, r7, #36	; 0x24
 800c848:	2105      	movs	r1, #5
 800c84a:	4618      	mov	r0, r3
 800c84c:	f7ff f830 	bl	800b8b0 <_ZN8touchgfx6BitmapC1Et>
 800c850:	f107 0328 	add.w	r3, r7, #40	; 0x28
 800c854:	2106      	movs	r1, #6
 800c856:	4618      	mov	r0, r3
 800c858:	f7ff f82a 	bl	800b8b0 <_ZN8touchgfx6BitmapC1Et>
 800c85c:	f107 0228 	add.w	r2, r7, #40	; 0x28
 800c860:	f107 0324 	add.w	r3, r7, #36	; 0x24
 800c864:	4619      	mov	r1, r3
 800c866:	4620      	mov	r0, r4
 800c868:	f000 fae5 	bl	800ce36 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE14setIconBitmapsERKNS_6BitmapES7_>
    Temp_Up_Button.setIconXY(23, 6);
 800c86c:	697b      	ldr	r3, [r7, #20]
 800c86e:	3360      	adds	r3, #96	; 0x60
 800c870:	2206      	movs	r2, #6
 800c872:	2117      	movs	r1, #23
 800c874:	4618      	mov	r0, r3
 800c876:	f000 fb2c 	bl	800ced2 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE9setIconXYEss>
    Temp_Up_Button.setAction(flexButtonCallback);
 800c87a:	697b      	ldr	r3, [r7, #20]
 800c87c:	f103 0260 	add.w	r2, r3, #96	; 0x60
 800c880:	697b      	ldr	r3, [r7, #20]
 800c882:	f503 7304 	add.w	r3, r3, #528	; 0x210
 800c886:	4619      	mov	r1, r3
 800c888:	4610      	mov	r0, r2
 800c88a:	f7ff fb83 	bl	800bf94 <_ZN8touchgfx23AbstractButtonContainer9setActionERNS_15GenericCallbackIRKS0_vvEE>
    Temp_Up_Button.setPosition(6, 60, 80, 43);
 800c88e:	697b      	ldr	r3, [r7, #20]
 800c890:	f103 0060 	add.w	r0, r3, #96	; 0x60
 800c894:	232b      	movs	r3, #43	; 0x2b
 800c896:	9300      	str	r3, [sp, #0]
 800c898:	2350      	movs	r3, #80	; 0x50
 800c89a:	223c      	movs	r2, #60	; 0x3c
 800c89c:	2106      	movs	r1, #6
 800c89e:	f7ff f891 	bl	800b9c4 <_ZN8touchgfx8Drawable11setPositionEssss>
    add(Temp_Up_Button);
 800c8a2:	697a      	ldr	r2, [r7, #20]
 800c8a4:	697b      	ldr	r3, [r7, #20]
 800c8a6:	3360      	adds	r3, #96	; 0x60
 800c8a8:	4619      	mov	r1, r3
 800c8aa:	4610      	mov	r0, r2
 800c8ac:	f005 fe74 	bl	8012598 <_ZN8touchgfx9Container3addERNS_8DrawableE>

    Temp_down_button.setBoxWithBorderPosition(0, 0, 80, 43);
 800c8b0:	697b      	ldr	r3, [r7, #20]
 800c8b2:	f503 7084 	add.w	r0, r3, #264	; 0x108
 800c8b6:	232b      	movs	r3, #43	; 0x2b
 800c8b8:	9300      	str	r3, [sp, #0]
 800c8ba:	2350      	movs	r3, #80	; 0x50
 800c8bc:	2200      	movs	r2, #0
 800c8be:	2100      	movs	r1, #0
 800c8c0:	f000 fa6a 	bl	800cd98 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE24setBoxWithBorderPositionEssss>
    Temp_down_button.setBorderSize(2);
 800c8c4:	697b      	ldr	r3, [r7, #20]
 800c8c6:	f503 7384 	add.w	r3, r3, #264	; 0x108
 800c8ca:	2102      	movs	r1, #2
 800c8cc:	4618      	mov	r0, r3
 800c8ce:	f000 fa83 	bl	800cdd8 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE13setBorderSizeEh>
    Temp_down_button.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(52, 232, 204), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(9, 122, 103), touchgfx::Color::getColorFromRGB(51, 102, 153));
 800c8d2:	697b      	ldr	r3, [r7, #20]
 800c8d4:	f503 7484 	add.w	r4, r3, #264	; 0x108
 800c8d8:	2334      	movs	r3, #52	; 0x34
 800c8da:	f887 307f 	strb.w	r3, [r7, #127]	; 0x7f
 800c8de:	23e8      	movs	r3, #232	; 0xe8
 800c8e0:	f887 307e 	strb.w	r3, [r7, #126]	; 0x7e
 800c8e4:	23cc      	movs	r3, #204	; 0xcc
 800c8e6:	f887 307d 	strb.w	r3, [r7, #125]	; 0x7d
 800c8ea:	f897 307f 	ldrb.w	r3, [r7, #127]	; 0x7f
 800c8ee:	041b      	lsls	r3, r3, #16
 800c8f0:	461a      	mov	r2, r3
 800c8f2:	f897 307e 	ldrb.w	r3, [r7, #126]	; 0x7e
 800c8f6:	021b      	lsls	r3, r3, #8
 800c8f8:	431a      	orrs	r2, r3
 800c8fa:	f897 307d 	ldrb.w	r3, [r7, #125]	; 0x7d
 800c8fe:	4313      	orrs	r3, r2
 800c900:	f043 427f 	orr.w	r2, r3, #4278190080	; 0xff000000
 800c904:	f107 034c 	add.w	r3, r7, #76	; 0x4c
 800c908:	4611      	mov	r1, r2
 800c90a:	4618      	mov	r0, r3
 800c90c:	f7fe ff8a 	bl	800b824 <_ZN8touchgfx9colortypeC1Em>
 800c910:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 800c912:	461d      	mov	r5, r3
 800c914:	2300      	movs	r3, #0
 800c916:	f887 3082 	strb.w	r3, [r7, #130]	; 0x82
 800c91a:	2399      	movs	r3, #153	; 0x99
 800c91c:	f887 3081 	strb.w	r3, [r7, #129]	; 0x81
 800c920:	23cc      	movs	r3, #204	; 0xcc
 800c922:	f887 3080 	strb.w	r3, [r7, #128]	; 0x80
 800c926:	f897 3082 	ldrb.w	r3, [r7, #130]	; 0x82
 800c92a:	041b      	lsls	r3, r3, #16
 800c92c:	461a      	mov	r2, r3
 800c92e:	f897 3081 	ldrb.w	r3, [r7, #129]	; 0x81
 800c932:	021b      	lsls	r3, r3, #8
 800c934:	431a      	orrs	r2, r3
 800c936:	f897 3080 	ldrb.w	r3, [r7, #128]	; 0x80
 800c93a:	4313      	orrs	r3, r2
 800c93c:	f043 427f 	orr.w	r2, r3, #4278190080	; 0xff000000
 800c940:	f107 0348 	add.w	r3, r7, #72	; 0x48
 800c944:	4611      	mov	r1, r2
 800c946:	4618      	mov	r0, r3
 800c948:	f7fe ff6c 	bl	800b824 <_ZN8touchgfx9colortypeC1Em>
 800c94c:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 800c94e:	461e      	mov	r6, r3
 800c950:	2309      	movs	r3, #9
 800c952:	f887 3085 	strb.w	r3, [r7, #133]	; 0x85
 800c956:	237a      	movs	r3, #122	; 0x7a
 800c958:	f887 3084 	strb.w	r3, [r7, #132]	; 0x84
 800c95c:	2367      	movs	r3, #103	; 0x67
 800c95e:	f887 3083 	strb.w	r3, [r7, #131]	; 0x83
 800c962:	f897 3085 	ldrb.w	r3, [r7, #133]	; 0x85
 800c966:	041b      	lsls	r3, r3, #16
 800c968:	461a      	mov	r2, r3
 800c96a:	f897 3084 	ldrb.w	r3, [r7, #132]	; 0x84
 800c96e:	021b      	lsls	r3, r3, #8
 800c970:	431a      	orrs	r2, r3
 800c972:	f897 3083 	ldrb.w	r3, [r7, #131]	; 0x83
 800c976:	4313      	orrs	r3, r2
 800c978:	f043 427f 	orr.w	r2, r3, #4278190080	; 0xff000000
 800c97c:	f107 0344 	add.w	r3, r7, #68	; 0x44
 800c980:	4611      	mov	r1, r2
 800c982:	4618      	mov	r0, r3
 800c984:	f7fe ff4e 	bl	800b824 <_ZN8touchgfx9colortypeC1Em>
 800c988:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 800c98a:	4698      	mov	r8, r3
 800c98c:	2333      	movs	r3, #51	; 0x33
 800c98e:	f887 3088 	strb.w	r3, [r7, #136]	; 0x88
 800c992:	e003      	b.n	800c99c <_ZN20CustomContainer1BaseC1Ev+0x3b4>
 800c994:	0802e6a0 	.word	0x0802e6a0
 800c998:	0800cbf3 	.word	0x0800cbf3
 800c99c:	2366      	movs	r3, #102	; 0x66
 800c99e:	f887 3087 	strb.w	r3, [r7, #135]	; 0x87
 800c9a2:	2399      	movs	r3, #153	; 0x99
 800c9a4:	f887 3086 	strb.w	r3, [r7, #134]	; 0x86
 800c9a8:	f897 3088 	ldrb.w	r3, [r7, #136]	; 0x88
 800c9ac:	041b      	lsls	r3, r3, #16
 800c9ae:	461a      	mov	r2, r3
 800c9b0:	f897 3087 	ldrb.w	r3, [r7, #135]	; 0x87
 800c9b4:	021b      	lsls	r3, r3, #8
 800c9b6:	431a      	orrs	r2, r3
 800c9b8:	f897 3086 	ldrb.w	r3, [r7, #134]	; 0x86
 800c9bc:	4313      	orrs	r3, r2
 800c9be:	f043 427f 	orr.w	r2, r3, #4278190080	; 0xff000000
 800c9c2:	f107 0340 	add.w	r3, r7, #64	; 0x40
 800c9c6:	4611      	mov	r1, r2
 800c9c8:	4618      	mov	r0, r3
 800c9ca:	f7fe ff2b 	bl	800b824 <_ZN8touchgfx9colortypeC1Em>
 800c9ce:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 800c9d0:	9300      	str	r3, [sp, #0]
 800c9d2:	4643      	mov	r3, r8
 800c9d4:	4632      	mov	r2, r6
 800c9d6:	4629      	mov	r1, r5
 800c9d8:	4620      	mov	r0, r4
 800c9da:	f000 fa0f 	bl	800cdfc <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
    Temp_down_button.setIconBitmaps(Bitmap(BITMAP_ICON_THEME_IMAGES_HARDWARE_KEYBOARD_ARROW_DOWN_35_35_000000_SVG_ID), Bitmap(BITMAP_ICON_THEME_IMAGES_HARDWARE_KEYBOARD_ARROW_DOWN_35_35_FF0000_SVG_ID));
 800c9de:	697b      	ldr	r3, [r7, #20]
 800c9e0:	f503 7484 	add.w	r4, r3, #264	; 0x108
 800c9e4:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 800c9e8:	2103      	movs	r1, #3
 800c9ea:	4618      	mov	r0, r3
 800c9ec:	f7fe ff60 	bl	800b8b0 <_ZN8touchgfx6BitmapC1Et>
 800c9f0:	f107 0330 	add.w	r3, r7, #48	; 0x30
 800c9f4:	2104      	movs	r1, #4
 800c9f6:	4618      	mov	r0, r3
 800c9f8:	f7fe ff5a 	bl	800b8b0 <_ZN8touchgfx6BitmapC1Et>
 800c9fc:	f107 0230 	add.w	r2, r7, #48	; 0x30
 800ca00:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 800ca04:	4619      	mov	r1, r3
 800ca06:	4620      	mov	r0, r4
 800ca08:	f000 fa15 	bl	800ce36 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE14setIconBitmapsERKNS_6BitmapES7_>
    Temp_down_button.setIconXY(23, 6);
 800ca0c:	697b      	ldr	r3, [r7, #20]
 800ca0e:	f503 7384 	add.w	r3, r3, #264	; 0x108
 800ca12:	2206      	movs	r2, #6
 800ca14:	2117      	movs	r1, #23
 800ca16:	4618      	mov	r0, r3
 800ca18:	f000 fa5b 	bl	800ced2 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE9setIconXYEss>
    Temp_down_button.setAction(flexButtonCallback);
 800ca1c:	697b      	ldr	r3, [r7, #20]
 800ca1e:	f503 7284 	add.w	r2, r3, #264	; 0x108
 800ca22:	697b      	ldr	r3, [r7, #20]
 800ca24:	f503 7304 	add.w	r3, r3, #528	; 0x210
 800ca28:	4619      	mov	r1, r3
 800ca2a:	4610      	mov	r0, r2
 800ca2c:	f7ff fab2 	bl	800bf94 <_ZN8touchgfx23AbstractButtonContainer9setActionERNS_15GenericCallbackIRKS0_vvEE>
    Temp_down_button.setPosition(240, 60, 80, 43);
 800ca30:	697b      	ldr	r3, [r7, #20]
 800ca32:	f503 7084 	add.w	r0, r3, #264	; 0x108
 800ca36:	232b      	movs	r3, #43	; 0x2b
 800ca38:	9300      	str	r3, [sp, #0]
 800ca3a:	2350      	movs	r3, #80	; 0x50
 800ca3c:	223c      	movs	r2, #60	; 0x3c
 800ca3e:	21f0      	movs	r1, #240	; 0xf0
 800ca40:	f7fe ffc0 	bl	800b9c4 <_ZN8touchgfx8Drawable11setPositionEssss>
    add(Temp_down_button);
 800ca44:	697a      	ldr	r2, [r7, #20]
 800ca46:	697b      	ldr	r3, [r7, #20]
 800ca48:	f503 7384 	add.w	r3, r3, #264	; 0x108
 800ca4c:	4619      	mov	r1, r3
 800ca4e:	4610      	mov	r0, r2
 800ca50:	f005 fda2 	bl	8012598 <_ZN8touchgfx9Container3addERNS_8DrawableE>

    textArea1.setXY(146, 67);
 800ca54:	697b      	ldr	r3, [r7, #20]
 800ca56:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800ca5a:	2243      	movs	r2, #67	; 0x43
 800ca5c:	2192      	movs	r1, #146	; 0x92
 800ca5e:	4618      	mov	r0, r3
 800ca60:	f7ff f809 	bl	800ba76 <_ZN8touchgfx8Drawable5setXYEss>
    textArea1.setColor(touchgfx::Color::getColorFromRGB(52, 232, 204));
 800ca64:	697b      	ldr	r3, [r7, #20]
 800ca66:	f503 74d8 	add.w	r4, r3, #432	; 0x1b0
 800ca6a:	2334      	movs	r3, #52	; 0x34
 800ca6c:	f887 308b 	strb.w	r3, [r7, #139]	; 0x8b
 800ca70:	23e8      	movs	r3, #232	; 0xe8
 800ca72:	f887 308a 	strb.w	r3, [r7, #138]	; 0x8a
 800ca76:	23cc      	movs	r3, #204	; 0xcc
 800ca78:	f887 3089 	strb.w	r3, [r7, #137]	; 0x89
 800ca7c:	f897 308b 	ldrb.w	r3, [r7, #139]	; 0x8b
 800ca80:	041b      	lsls	r3, r3, #16
 800ca82:	461a      	mov	r2, r3
 800ca84:	f897 308a 	ldrb.w	r3, [r7, #138]	; 0x8a
 800ca88:	021b      	lsls	r3, r3, #8
 800ca8a:	431a      	orrs	r2, r3
 800ca8c:	f897 3089 	ldrb.w	r3, [r7, #137]	; 0x89
 800ca90:	4313      	orrs	r3, r2
 800ca92:	f043 427f 	orr.w	r2, r3, #4278190080	; 0xff000000
 800ca96:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 800ca9a:	4611      	mov	r1, r2
 800ca9c:	4618      	mov	r0, r3
 800ca9e:	f7fe fec1 	bl	800b824 <_ZN8touchgfx9colortypeC1Em>
 800caa2:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 800caa4:	f8c7 408c 	str.w	r4, [r7, #140]	; 0x8c
 800caa8:	61bb      	str	r3, [r7, #24]
        color = newColor;
 800caaa:	f8d7 308c 	ldr.w	r3, [r7, #140]	; 0x8c
 800caae:	69ba      	ldr	r2, [r7, #24]
 800cab0:	631a      	str	r2, [r3, #48]	; 0x30
    }
 800cab2:	bf00      	nop
    textArea1.setLinespacing(0);
 800cab4:	697b      	ldr	r3, [r7, #20]
 800cab6:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800caba:	f8c7 3094 	str.w	r3, [r7, #148]	; 0x94
 800cabe:	2300      	movs	r3, #0
 800cac0:	f8a7 3092 	strh.w	r3, [r7, #146]	; 0x92
        linespace = space;
 800cac4:	f8d7 3094 	ldr.w	r3, [r7, #148]	; 0x94
 800cac8:	f8b7 2092 	ldrh.w	r2, [r7, #146]	; 0x92
 800cacc:	869a      	strh	r2, [r3, #52]	; 0x34
        boundingArea = calculateBoundingArea();
 800cace:	f8d7 3094 	ldr.w	r3, [r7, #148]	; 0x94
 800cad2:	681b      	ldr	r3, [r3, #0]
 800cad4:	3384      	adds	r3, #132	; 0x84
 800cad6:	681b      	ldr	r3, [r3, #0]
 800cad8:	f8d7 4094 	ldr.w	r4, [r7, #148]	; 0x94
 800cadc:	463a      	mov	r2, r7
 800cade:	f8d7 1094 	ldr.w	r1, [r7, #148]	; 0x94
 800cae2:	4610      	mov	r0, r2
 800cae4:	4798      	blx	r3
 800cae6:	f104 033c 	add.w	r3, r4, #60	; 0x3c
 800caea:	463a      	mov	r2, r7
 800caec:	ca07      	ldmia	r2, {r0, r1, r2}
 800caee:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    }
 800caf2:	bf00      	nop
    textArea1Buffer[0] = 0;
 800caf4:	697b      	ldr	r3, [r7, #20]
 800caf6:	2200      	movs	r2, #0
 800caf8:	f8a3 21fc 	strh.w	r2, [r3, #508]	; 0x1fc
    textArea1.setWildcard(textArea1Buffer);
 800cafc:	697b      	ldr	r3, [r7, #20]
 800cafe:	f503 72d8 	add.w	r2, r3, #432	; 0x1b0
 800cb02:	697b      	ldr	r3, [r7, #20]
 800cb04:	f503 73fe 	add.w	r3, r3, #508	; 0x1fc
 800cb08:	4619      	mov	r1, r3
 800cb0a:	4610      	mov	r0, r2
 800cb0c:	f7ff fd4a 	bl	800c5a4 <_ZN8touchgfx23TextAreaWithOneWildcard11setWildcardEPKt>
    textArea1.resizeToCurrentText();
 800cb10:	697b      	ldr	r3, [r7, #20]
 800cb12:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800cb16:	4618      	mov	r0, r3
 800cb18:	f008 fbc0 	bl	801529c <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_S9BW));
 800cb1c:	697b      	ldr	r3, [r7, #20]
 800cb1e:	f503 74d8 	add.w	r4, r3, #432	; 0x1b0
 800cb22:	f107 0334 	add.w	r3, r7, #52	; 0x34
 800cb26:	2108      	movs	r1, #8
 800cb28:	4618      	mov	r0, r3
 800cb2a:	f7ff fb43 	bl	800c1b4 <_ZN8touchgfx9TypedTextC1Et>
 800cb2e:	f107 0334 	add.w	r3, r7, #52	; 0x34
 800cb32:	4619      	mov	r1, r3
 800cb34:	4620      	mov	r0, r4
 800cb36:	f008 fbd1 	bl	80152dc <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800cb3a:	f107 0334 	add.w	r3, r7, #52	; 0x34
 800cb3e:	4618      	mov	r0, r3
 800cb40:	f7fd fe78 	bl	800a834 <_ZN8touchgfx9TypedTextD1Ev>
    add(textArea1);
 800cb44:	697a      	ldr	r2, [r7, #20]
 800cb46:	697b      	ldr	r3, [r7, #20]
 800cb48:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800cb4c:	4619      	mov	r1, r3
 800cb4e:	4610      	mov	r0, r2
 800cb50:	f005 fd22 	bl	8012598 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 800cb54:	697b      	ldr	r3, [r7, #20]
 800cb56:	4618      	mov	r0, r3
 800cb58:	3798      	adds	r7, #152	; 0x98
 800cb5a:	46bd      	mov	sp, r7
 800cb5c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800cb60 <_ZN20CustomContainer1BaseD1Ev>:

CustomContainer1Base::~CustomContainer1Base()
 800cb60:	b580      	push	{r7, lr}
 800cb62:	b082      	sub	sp, #8
 800cb64:	af00      	add	r7, sp, #0
 800cb66:	6078      	str	r0, [r7, #4]
 800cb68:	4a13      	ldr	r2, [pc, #76]	; (800cbb8 <_ZN20CustomContainer1BaseD1Ev+0x58>)
 800cb6a:	687b      	ldr	r3, [r7, #4]
 800cb6c:	601a      	str	r2, [r3, #0]
 800cb6e:	687b      	ldr	r3, [r7, #4]
 800cb70:	f503 7304 	add.w	r3, r3, #528	; 0x210
 800cb74:	4618      	mov	r0, r3
 800cb76:	f000 faad 	bl	800d0d4 <_ZN8touchgfx8CallbackI20CustomContainer1BaseRKNS_23AbstractButtonContainerEvvED1Ev>
 800cb7a:	687b      	ldr	r3, [r7, #4]
 800cb7c:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800cb80:	4618      	mov	r0, r3
 800cb82:	f000 faf1 	bl	800d168 <_ZN8touchgfx23TextAreaWithOneWildcardD1Ev>
 800cb86:	687b      	ldr	r3, [r7, #4]
 800cb88:	f503 7384 	add.w	r3, r3, #264	; 0x108
 800cb8c:	4618      	mov	r0, r3
 800cb8e:	f000 fac3 	bl	800d118 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEED1Ev>
 800cb92:	687b      	ldr	r3, [r7, #4]
 800cb94:	3360      	adds	r3, #96	; 0x60
 800cb96:	4618      	mov	r0, r3
 800cb98:	f000 fabe 	bl	800d118 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEED1Ev>
 800cb9c:	687b      	ldr	r3, [r7, #4]
 800cb9e:	332c      	adds	r3, #44	; 0x2c
 800cba0:	4618      	mov	r0, r3
 800cba2:	f000 fb03 	bl	800d1ac <_ZN8touchgfx13BoxWithBorderD1Ev>
 800cba6:	687b      	ldr	r3, [r7, #4]
 800cba8:	4618      	mov	r0, r3
 800cbaa:	f7ff f981 	bl	800beb0 <_ZN8touchgfx9ContainerD1Ev>
{

}
 800cbae:	687b      	ldr	r3, [r7, #4]
 800cbb0:	4618      	mov	r0, r3
 800cbb2:	3708      	adds	r7, #8
 800cbb4:	46bd      	mov	sp, r7
 800cbb6:	bd80      	pop	{r7, pc}
 800cbb8:	0802e6a0 	.word	0x0802e6a0

0800cbbc <_ZN20CustomContainer1BaseD0Ev>:
CustomContainer1Base::~CustomContainer1Base()
 800cbbc:	b580      	push	{r7, lr}
 800cbbe:	b082      	sub	sp, #8
 800cbc0:	af00      	add	r7, sp, #0
 800cbc2:	6078      	str	r0, [r7, #4]
}
 800cbc4:	6878      	ldr	r0, [r7, #4]
 800cbc6:	f7ff ffcb 	bl	800cb60 <_ZN20CustomContainer1BaseD1Ev>
 800cbca:	f44f 7108 	mov.w	r1, #544	; 0x220
 800cbce:	6878      	ldr	r0, [r7, #4]
 800cbd0:	f01d fbc3 	bl	802a35a <_ZdlPvj>
 800cbd4:	687b      	ldr	r3, [r7, #4]
 800cbd6:	4618      	mov	r0, r3
 800cbd8:	3708      	adds	r7, #8
 800cbda:	46bd      	mov	sp, r7
 800cbdc:	bd80      	pop	{r7, pc}

0800cbde <_ZN20CustomContainer1Base10initializeEv>:

void CustomContainer1Base::initialize()
{
 800cbde:	b480      	push	{r7}
 800cbe0:	b083      	sub	sp, #12
 800cbe2:	af00      	add	r7, sp, #0
 800cbe4:	6078      	str	r0, [r7, #4]

}
 800cbe6:	bf00      	nop
 800cbe8:	370c      	adds	r7, #12
 800cbea:	46bd      	mov	sp, r7
 800cbec:	f85d 7b04 	ldr.w	r7, [sp], #4
 800cbf0:	4770      	bx	lr

0800cbf2 <_ZN20CustomContainer1Base25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE>:

void CustomContainer1Base::flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src)
{
 800cbf2:	b580      	push	{r7, lr}
 800cbf4:	b082      	sub	sp, #8
 800cbf6:	af00      	add	r7, sp, #0
 800cbf8:	6078      	str	r0, [r7, #4]
 800cbfa:	6039      	str	r1, [r7, #0]
    if (&src == &Temp_Up_Button)
 800cbfc:	687b      	ldr	r3, [r7, #4]
 800cbfe:	3360      	adds	r3, #96	; 0x60
 800cc00:	683a      	ldr	r2, [r7, #0]
 800cc02:	429a      	cmp	r2, r3
 800cc04:	d105      	bne.n	800cc12 <_ZN20CustomContainer1Base25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x20>
    {
        //Interaction1
        //When Temp_Up_Button clicked call virtual function
        //Call Up_clicked
        Up_clicked();
 800cc06:	687b      	ldr	r3, [r7, #4]
 800cc08:	681b      	ldr	r3, [r3, #0]
 800cc0a:	338c      	adds	r3, #140	; 0x8c
 800cc0c:	681b      	ldr	r3, [r3, #0]
 800cc0e:	6878      	ldr	r0, [r7, #4]
 800cc10:	4798      	blx	r3
    }
    if (&src == &Temp_down_button)
 800cc12:	687b      	ldr	r3, [r7, #4]
 800cc14:	f503 7384 	add.w	r3, r3, #264	; 0x108
 800cc18:	683a      	ldr	r2, [r7, #0]
 800cc1a:	429a      	cmp	r2, r3
 800cc1c:	d105      	bne.n	800cc2a <_ZN20CustomContainer1Base25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x38>
    {
        //Interaction2
        //When Temp_down_button clicked call virtual function
        //Call Down_clicked
        Down_clicked();
 800cc1e:	687b      	ldr	r3, [r7, #4]
 800cc20:	681b      	ldr	r3, [r3, #0]
 800cc22:	3390      	adds	r3, #144	; 0x90
 800cc24:	681b      	ldr	r3, [r3, #0]
 800cc26:	6878      	ldr	r0, [r7, #4]
 800cc28:	4798      	blx	r3
    }
}
 800cc2a:	bf00      	nop
 800cc2c:	3708      	adds	r7, #8
 800cc2e:	46bd      	mov	sp, r7
 800cc30:	bd80      	pop	{r7, pc}
	...

0800cc34 <_ZN8touchgfx18ClickButtonTriggerD1Ev>:
class ClickButtonTrigger : public AbstractButtonContainer
 800cc34:	b580      	push	{r7, lr}
 800cc36:	b082      	sub	sp, #8
 800cc38:	af00      	add	r7, sp, #0
 800cc3a:	6078      	str	r0, [r7, #4]
 800cc3c:	4a05      	ldr	r2, [pc, #20]	; (800cc54 <_ZN8touchgfx18ClickButtonTriggerD1Ev+0x20>)
 800cc3e:	687b      	ldr	r3, [r7, #4]
 800cc40:	601a      	str	r2, [r3, #0]
 800cc42:	687b      	ldr	r3, [r7, #4]
 800cc44:	4618      	mov	r0, r3
 800cc46:	f7ff fa93 	bl	800c170 <_ZN8touchgfx23AbstractButtonContainerD1Ev>
 800cc4a:	687b      	ldr	r3, [r7, #4]
 800cc4c:	4618      	mov	r0, r3
 800cc4e:	3708      	adds	r7, #8
 800cc50:	46bd      	mov	sp, r7
 800cc52:	bd80      	pop	{r7, pc}
 800cc54:	0802e920 	.word	0x0802e920

0800cc58 <_ZN8touchgfx18ClickButtonTriggerD0Ev>:
 800cc58:	b580      	push	{r7, lr}
 800cc5a:	b082      	sub	sp, #8
 800cc5c:	af00      	add	r7, sp, #0
 800cc5e:	6078      	str	r0, [r7, #4]
 800cc60:	6878      	ldr	r0, [r7, #4]
 800cc62:	f7ff ffe7 	bl	800cc34 <_ZN8touchgfx18ClickButtonTriggerD1Ev>
 800cc66:	2134      	movs	r1, #52	; 0x34
 800cc68:	6878      	ldr	r0, [r7, #4]
 800cc6a:	f01d fb76 	bl	802a35a <_ZdlPvj>
 800cc6e:	687b      	ldr	r3, [r7, #4]
 800cc70:	4618      	mov	r0, r3
 800cc72:	3708      	adds	r7, #8
 800cc74:	46bd      	mov	sp, r7
 800cc76:	bd80      	pop	{r7, pc}

0800cc78 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEED1Ev>:
 * @tparam T Generic type parameter. Typically a AbstractButtonContainer subclass.
 *
 * @see AbstractButtonContainer, BoxWithBorder
 */
template <class T>
class BoxWithBorderButtonStyle : public T
 800cc78:	b580      	push	{r7, lr}
 800cc7a:	b082      	sub	sp, #8
 800cc7c:	af00      	add	r7, sp, #0
 800cc7e:	6078      	str	r0, [r7, #4]
 800cc80:	4a08      	ldr	r2, [pc, #32]	; (800cca4 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEED1Ev+0x2c>)
 800cc82:	687b      	ldr	r3, [r7, #4]
 800cc84:	601a      	str	r2, [r3, #0]
 800cc86:	687b      	ldr	r3, [r7, #4]
 800cc88:	3334      	adds	r3, #52	; 0x34
 800cc8a:	4618      	mov	r0, r3
 800cc8c:	f000 fa8e 	bl	800d1ac <_ZN8touchgfx13BoxWithBorderD1Ev>
 800cc90:	687b      	ldr	r3, [r7, #4]
 800cc92:	4618      	mov	r0, r3
 800cc94:	f7ff ffce 	bl	800cc34 <_ZN8touchgfx18ClickButtonTriggerD1Ev>
 800cc98:	687b      	ldr	r3, [r7, #4]
 800cc9a:	4618      	mov	r0, r3
 800cc9c:	3708      	adds	r7, #8
 800cc9e:	46bd      	mov	sp, r7
 800cca0:	bd80      	pop	{r7, pc}
 800cca2:	bf00      	nop
 800cca4:	0802e7f4 	.word	0x0802e7f4

0800cca8 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEED0Ev>:
 800cca8:	b580      	push	{r7, lr}
 800ccaa:	b082      	sub	sp, #8
 800ccac:	af00      	add	r7, sp, #0
 800ccae:	6078      	str	r0, [r7, #4]
 800ccb0:	6878      	ldr	r0, [r7, #4]
 800ccb2:	f7ff ffe1 	bl	800cc78 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEED1Ev>
 800ccb6:	2178      	movs	r1, #120	; 0x78
 800ccb8:	6878      	ldr	r0, [r7, #4]
 800ccba:	f01d fb4e 	bl	802a35a <_ZdlPvj>
 800ccbe:	687b      	ldr	r3, [r7, #4]
 800ccc0:	4618      	mov	r0, r3
 800ccc2:	3708      	adds	r7, #8
 800ccc4:	46bd      	mov	sp, r7
 800ccc6:	bd80      	pop	{r7, pc}

0800ccc8 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev>:
 */
template <class T>
class IconButtonStyle : public T
{
public:
    IconButtonStyle()
 800ccc8:	b590      	push	{r4, r7, lr}
 800ccca:	b085      	sub	sp, #20
 800cccc:	af00      	add	r7, sp, #0
 800ccce:	6078      	str	r0, [r7, #4]
        : T()
 800ccd0:	687b      	ldr	r3, [r7, #4]
 800ccd2:	4618      	mov	r0, r3
 800ccd4:	f000 f928 	bl	800cf28 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEC1Ev>
 800ccd8:	4a16      	ldr	r2, [pc, #88]	; (800cd34 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev+0x6c>)
 800ccda:	687b      	ldr	r3, [r7, #4]
 800ccdc:	601a      	str	r2, [r3, #0]
 800ccde:	687b      	ldr	r3, [r7, #4]
 800cce0:	3378      	adds	r3, #120	; 0x78
 800cce2:	f64f 71ff 	movw	r1, #65535	; 0xffff
 800cce6:	4618      	mov	r0, r3
 800cce8:	f7fe fde2 	bl	800b8b0 <_ZN8touchgfx6BitmapC1Et>
 800ccec:	687b      	ldr	r3, [r7, #4]
 800ccee:	337a      	adds	r3, #122	; 0x7a
 800ccf0:	f64f 71ff 	movw	r1, #65535	; 0xffff
 800ccf4:	4618      	mov	r0, r3
 800ccf6:	f7fe fddb 	bl	800b8b0 <_ZN8touchgfx6BitmapC1Et>
 800ccfa:	687b      	ldr	r3, [r7, #4]
 800ccfc:	f103 047c 	add.w	r4, r3, #124	; 0x7c
 800cd00:	f107 030c 	add.w	r3, r7, #12
 800cd04:	f64f 71ff 	movw	r1, #65535	; 0xffff
 800cd08:	4618      	mov	r0, r3
 800cd0a:	f7fe fdd1 	bl	800b8b0 <_ZN8touchgfx6BitmapC1Et>
 800cd0e:	f107 030c 	add.w	r3, r7, #12
 800cd12:	4619      	mov	r1, r3
 800cd14:	4620      	mov	r0, r4
 800cd16:	f7ff f987 	bl	800c028 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
    {
        T::add(iconImage);
 800cd1a:	687a      	ldr	r2, [r7, #4]
 800cd1c:	687b      	ldr	r3, [r7, #4]
 800cd1e:	337c      	adds	r3, #124	; 0x7c
 800cd20:	4619      	mov	r1, r3
 800cd22:	4610      	mov	r0, r2
 800cd24:	f005 fc38 	bl	8012598 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    }
 800cd28:	687b      	ldr	r3, [r7, #4]
 800cd2a:	4618      	mov	r0, r3
 800cd2c:	3714      	adds	r7, #20
 800cd2e:	46bd      	mov	sp, r7
 800cd30:	bd90      	pop	{r4, r7, pc}
 800cd32:	bf00      	nop
 800cd34:	0802e754 	.word	0x0802e754

0800cd38 <_ZN8touchgfx15GenericCallbackIRKNS_23AbstractButtonContainerEvvEC1Ev>:
class GenericCallback<T1, void, void>
 800cd38:	b480      	push	{r7}
 800cd3a:	b083      	sub	sp, #12
 800cd3c:	af00      	add	r7, sp, #0
 800cd3e:	6078      	str	r0, [r7, #4]
 800cd40:	4a04      	ldr	r2, [pc, #16]	; (800cd54 <_ZN8touchgfx15GenericCallbackIRKNS_23AbstractButtonContainerEvvEC1Ev+0x1c>)
 800cd42:	687b      	ldr	r3, [r7, #4]
 800cd44:	601a      	str	r2, [r3, #0]
 800cd46:	687b      	ldr	r3, [r7, #4]
 800cd48:	4618      	mov	r0, r3
 800cd4a:	370c      	adds	r7, #12
 800cd4c:	46bd      	mov	sp, r7
 800cd4e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800cd52:	4770      	bx	lr
 800cd54:	0802e9bc 	.word	0x0802e9bc

0800cd58 <_ZN8touchgfx8CallbackI20CustomContainer1BaseRKNS_23AbstractButtonContainerEvvEC1EPS1_MS1_FvS4_E>:
    Callback(dest_type* pObject, void (dest_type::*pmemfun_1)(T1))
 800cd58:	b580      	push	{r7, lr}
 800cd5a:	b084      	sub	sp, #16
 800cd5c:	af00      	add	r7, sp, #0
 800cd5e:	60f8      	str	r0, [r7, #12]
 800cd60:	60b9      	str	r1, [r7, #8]
 800cd62:	4639      	mov	r1, r7
 800cd64:	e881 000c 	stmia.w	r1, {r2, r3}
        : pobject(pObject), pmemfun(pmemfun_1)
 800cd68:	68fb      	ldr	r3, [r7, #12]
 800cd6a:	4618      	mov	r0, r3
 800cd6c:	f7ff ffe4 	bl	800cd38 <_ZN8touchgfx15GenericCallbackIRKNS_23AbstractButtonContainerEvvEC1Ev>
 800cd70:	4a08      	ldr	r2, [pc, #32]	; (800cd94 <_ZN8touchgfx8CallbackI20CustomContainer1BaseRKNS_23AbstractButtonContainerEvvEC1EPS1_MS1_FvS4_E+0x3c>)
 800cd72:	68fb      	ldr	r3, [r7, #12]
 800cd74:	601a      	str	r2, [r3, #0]
 800cd76:	68fb      	ldr	r3, [r7, #12]
 800cd78:	68ba      	ldr	r2, [r7, #8]
 800cd7a:	605a      	str	r2, [r3, #4]
 800cd7c:	68fb      	ldr	r3, [r7, #12]
 800cd7e:	3308      	adds	r3, #8
 800cd80:	463a      	mov	r2, r7
 800cd82:	e892 0003 	ldmia.w	r2, {r0, r1}
 800cd86:	e883 0003 	stmia.w	r3, {r0, r1}
    }
 800cd8a:	68fb      	ldr	r3, [r7, #12]
 800cd8c:	4618      	mov	r0, r3
 800cd8e:	3710      	adds	r7, #16
 800cd90:	46bd      	mov	sp, r7
 800cd92:	bd80      	pop	{r7, pc}
 800cd94:	0802e73c 	.word	0x0802e73c

0800cd98 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE24setBoxWithBorderPositionEssss>:
     * @param  width  The width of this BoxWithBorderButtonStyle.
     * @param  height The height of this BoxWithBorderButtonStyle.
     *
     * @note Changing this does not automatically yield a redraw.
     */
    void setBoxWithBorderPosition(int16_t x, int16_t y, int16_t width, int16_t height)
 800cd98:	b590      	push	{r4, r7, lr}
 800cd9a:	b087      	sub	sp, #28
 800cd9c:	af02      	add	r7, sp, #8
 800cd9e:	60f8      	str	r0, [r7, #12]
 800cda0:	4608      	mov	r0, r1
 800cda2:	4611      	mov	r1, r2
 800cda4:	461a      	mov	r2, r3
 800cda6:	4603      	mov	r3, r0
 800cda8:	817b      	strh	r3, [r7, #10]
 800cdaa:	460b      	mov	r3, r1
 800cdac:	813b      	strh	r3, [r7, #8]
 800cdae:	4613      	mov	r3, r2
 800cdb0:	80fb      	strh	r3, [r7, #6]
    {
        borderBox.setPosition(x, y, width, height);
 800cdb2:	68fb      	ldr	r3, [r7, #12]
 800cdb4:	f103 0034 	add.w	r0, r3, #52	; 0x34
 800cdb8:	f9b7 4006 	ldrsh.w	r4, [r7, #6]
 800cdbc:	f9b7 2008 	ldrsh.w	r2, [r7, #8]
 800cdc0:	f9b7 100a 	ldrsh.w	r1, [r7, #10]
 800cdc4:	f9b7 3020 	ldrsh.w	r3, [r7, #32]
 800cdc8:	9300      	str	r3, [sp, #0]
 800cdca:	4623      	mov	r3, r4
 800cdcc:	f7fe fdfa 	bl	800b9c4 <_ZN8touchgfx8Drawable11setPositionEssss>
    }
 800cdd0:	bf00      	nop
 800cdd2:	3714      	adds	r7, #20
 800cdd4:	46bd      	mov	sp, r7
 800cdd6:	bd90      	pop	{r4, r7, pc}

0800cdd8 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE13setBorderSizeEh>:
    /**
     * Sets border size.
     *
     * @param  size The size.
     */
    void setBorderSize(uint8_t size)
 800cdd8:	b580      	push	{r7, lr}
 800cdda:	b082      	sub	sp, #8
 800cddc:	af00      	add	r7, sp, #0
 800cdde:	6078      	str	r0, [r7, #4]
 800cde0:	460b      	mov	r3, r1
 800cde2:	70fb      	strb	r3, [r7, #3]
    {
        borderBox.setBorderSize(size);
 800cde4:	687b      	ldr	r3, [r7, #4]
 800cde6:	3334      	adds	r3, #52	; 0x34
 800cde8:	78fa      	ldrb	r2, [r7, #3]
 800cdea:	b292      	uxth	r2, r2
 800cdec:	4611      	mov	r1, r2
 800cdee:	4618      	mov	r0, r3
 800cdf0:	f7ff f84e 	bl	800be90 <_ZN8touchgfx13BoxWithBorder13setBorderSizeEt>
    }
 800cdf4:	bf00      	nop
 800cdf6:	3708      	adds	r7, #8
 800cdf8:	46bd      	mov	sp, r7
 800cdfa:	bd80      	pop	{r7, pc}

0800cdfc <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>:
    void setBoxWithBorderColors(const colortype colorReleased, const colortype colorPressed, const colortype borderColorReleased, const colortype borderColorPressed)
 800cdfc:	b580      	push	{r7, lr}
 800cdfe:	b084      	sub	sp, #16
 800ce00:	af00      	add	r7, sp, #0
 800ce02:	60f8      	str	r0, [r7, #12]
 800ce04:	60b9      	str	r1, [r7, #8]
 800ce06:	607a      	str	r2, [r7, #4]
 800ce08:	603b      	str	r3, [r7, #0]
        up = colorReleased;
 800ce0a:	68fb      	ldr	r3, [r7, #12]
 800ce0c:	68ba      	ldr	r2, [r7, #8]
 800ce0e:	669a      	str	r2, [r3, #104]	; 0x68
        down = colorPressed;
 800ce10:	68fb      	ldr	r3, [r7, #12]
 800ce12:	687a      	ldr	r2, [r7, #4]
 800ce14:	66da      	str	r2, [r3, #108]	; 0x6c
        borderUp = borderColorReleased;
 800ce16:	68fb      	ldr	r3, [r7, #12]
 800ce18:	683a      	ldr	r2, [r7, #0]
 800ce1a:	671a      	str	r2, [r3, #112]	; 0x70
        borderDown = borderColorPressed;
 800ce1c:	68fb      	ldr	r3, [r7, #12]
 800ce1e:	69ba      	ldr	r2, [r7, #24]
 800ce20:	675a      	str	r2, [r3, #116]	; 0x74
        handlePressedUpdated();
 800ce22:	68fb      	ldr	r3, [r7, #12]
 800ce24:	681b      	ldr	r3, [r3, #0]
 800ce26:	338c      	adds	r3, #140	; 0x8c
 800ce28:	681b      	ldr	r3, [r3, #0]
 800ce2a:	68f8      	ldr	r0, [r7, #12]
 800ce2c:	4798      	blx	r3
    }
 800ce2e:	bf00      	nop
 800ce30:	3710      	adds	r7, #16
 800ce32:	46bd      	mov	sp, r7
 800ce34:	bd80      	pop	{r7, pc}

0800ce36 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE14setIconBitmapsERKNS_6BitmapES7_>:
     * Sets icon bitmaps.
     *
     * @param  newIconReleased The new icon released.
     * @param  newIconPressed  The new icon pressed.
     */
    virtual void setIconBitmaps(const Bitmap& newIconReleased, const Bitmap& newIconPressed)
 800ce36:	b5f0      	push	{r4, r5, r6, r7, lr}
 800ce38:	b085      	sub	sp, #20
 800ce3a:	af00      	add	r7, sp, #0
 800ce3c:	60f8      	str	r0, [r7, #12]
 800ce3e:	60b9      	str	r1, [r7, #8]
 800ce40:	607a      	str	r2, [r7, #4]
    {
        iconReleased = newIconReleased;
 800ce42:	68fb      	ldr	r3, [r7, #12]
 800ce44:	68ba      	ldr	r2, [r7, #8]
 800ce46:	8812      	ldrh	r2, [r2, #0]
 800ce48:	f8a3 2078 	strh.w	r2, [r3, #120]	; 0x78
        iconPressed = newIconPressed;
 800ce4c:	68fb      	ldr	r3, [r7, #12]
 800ce4e:	687a      	ldr	r2, [r7, #4]
 800ce50:	8812      	ldrh	r2, [r2, #0]
 800ce52:	f8a3 207a 	strh.w	r2, [r3, #122]	; 0x7a

        iconImage.setXY((T::getWidth() / 2) - (newIconPressed.getWidth() / 2), (T::getHeight() / 2) - (newIconPressed.getHeight() / 2));
 800ce56:	68fb      	ldr	r3, [r7, #12]
 800ce58:	f103 057c 	add.w	r5, r3, #124	; 0x7c
 800ce5c:	68fb      	ldr	r3, [r7, #12]
 800ce5e:	4618      	mov	r0, r3
 800ce60:	f7fe fdd1 	bl	800ba06 <_ZNK8touchgfx8Drawable8getWidthEv>
 800ce64:	4603      	mov	r3, r0
 800ce66:	0fda      	lsrs	r2, r3, #31
 800ce68:	4413      	add	r3, r2
 800ce6a:	105b      	asrs	r3, r3, #1
 800ce6c:	b21b      	sxth	r3, r3
 800ce6e:	b29c      	uxth	r4, r3
 800ce70:	6878      	ldr	r0, [r7, #4]
 800ce72:	f00f fb49 	bl	801c508 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800ce76:	4603      	mov	r3, r0
 800ce78:	0fda      	lsrs	r2, r3, #31
 800ce7a:	4413      	add	r3, r2
 800ce7c:	105b      	asrs	r3, r3, #1
 800ce7e:	b21b      	sxth	r3, r3
 800ce80:	b29b      	uxth	r3, r3
 800ce82:	1ae3      	subs	r3, r4, r3
 800ce84:	b29b      	uxth	r3, r3
 800ce86:	b21e      	sxth	r6, r3
 800ce88:	68fb      	ldr	r3, [r7, #12]
 800ce8a:	4618      	mov	r0, r3
 800ce8c:	f7fe fdc8 	bl	800ba20 <_ZNK8touchgfx8Drawable9getHeightEv>
 800ce90:	4603      	mov	r3, r0
 800ce92:	0fda      	lsrs	r2, r3, #31
 800ce94:	4413      	add	r3, r2
 800ce96:	105b      	asrs	r3, r3, #1
 800ce98:	b21b      	sxth	r3, r3
 800ce9a:	b29c      	uxth	r4, r3
 800ce9c:	6878      	ldr	r0, [r7, #4]
 800ce9e:	f00f fb67 	bl	801c570 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800cea2:	4603      	mov	r3, r0
 800cea4:	0fda      	lsrs	r2, r3, #31
 800cea6:	4413      	add	r3, r2
 800cea8:	105b      	asrs	r3, r3, #1
 800ceaa:	b21b      	sxth	r3, r3
 800ceac:	b29b      	uxth	r3, r3
 800ceae:	1ae3      	subs	r3, r4, r3
 800ceb0:	b29b      	uxth	r3, r3
 800ceb2:	b21b      	sxth	r3, r3
 800ceb4:	461a      	mov	r2, r3
 800ceb6:	4631      	mov	r1, r6
 800ceb8:	4628      	mov	r0, r5
 800ceba:	f7fe fddc 	bl	800ba76 <_ZN8touchgfx8Drawable5setXYEss>

        handlePressedUpdated();
 800cebe:	68fb      	ldr	r3, [r7, #12]
 800cec0:	681b      	ldr	r3, [r3, #0]
 800cec2:	338c      	adds	r3, #140	; 0x8c
 800cec4:	681b      	ldr	r3, [r3, #0]
 800cec6:	68f8      	ldr	r0, [r7, #12]
 800cec8:	4798      	blx	r3
    }
 800ceca:	bf00      	nop
 800cecc:	3714      	adds	r7, #20
 800cece:	46bd      	mov	sp, r7
 800ced0:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800ced2 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE9setIconXYEss>:
     * Sets the position of the icon.
     *
     * @param  x The x coordinate.
     * @param  y The y coordinate.
     */
    void setIconXY(int16_t x, int16_t y)
 800ced2:	b580      	push	{r7, lr}
 800ced4:	b082      	sub	sp, #8
 800ced6:	af00      	add	r7, sp, #0
 800ced8:	6078      	str	r0, [r7, #4]
 800ceda:	460b      	mov	r3, r1
 800cedc:	807b      	strh	r3, [r7, #2]
 800cede:	4613      	mov	r3, r2
 800cee0:	803b      	strh	r3, [r7, #0]
    {
        setIconX(x);
 800cee2:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
 800cee6:	4619      	mov	r1, r3
 800cee8:	6878      	ldr	r0, [r7, #4]
 800ceea:	f000 f8ce 	bl	800d08a <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE8setIconXEs>
        setIconY(y);
 800ceee:	f9b7 3000 	ldrsh.w	r3, [r7]
 800cef2:	4619      	mov	r1, r3
 800cef4:	6878      	ldr	r0, [r7, #4]
 800cef6:	f000 f8da 	bl	800d0ae <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE8setIconYEs>
    }
 800cefa:	bf00      	nop
 800cefc:	3708      	adds	r7, #8
 800cefe:	46bd      	mov	sp, r7
 800cf00:	bd80      	pop	{r7, pc}
	...

0800cf04 <_ZN8touchgfx18ClickButtonTriggerC1Ev>:
 800cf04:	b580      	push	{r7, lr}
 800cf06:	b082      	sub	sp, #8
 800cf08:	af00      	add	r7, sp, #0
 800cf0a:	6078      	str	r0, [r7, #4]
 800cf0c:	687b      	ldr	r3, [r7, #4]
 800cf0e:	4618      	mov	r0, r3
 800cf10:	f7fe fff0 	bl	800bef4 <_ZN8touchgfx23AbstractButtonContainerC1Ev>
 800cf14:	4a03      	ldr	r2, [pc, #12]	; (800cf24 <_ZN8touchgfx18ClickButtonTriggerC1Ev+0x20>)
 800cf16:	687b      	ldr	r3, [r7, #4]
 800cf18:	601a      	str	r2, [r3, #0]
 800cf1a:	687b      	ldr	r3, [r7, #4]
 800cf1c:	4618      	mov	r0, r3
 800cf1e:	3708      	adds	r7, #8
 800cf20:	46bd      	mov	sp, r7
 800cf22:	bd80      	pop	{r7, pc}
 800cf24:	0802e920 	.word	0x0802e920

0800cf28 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEC1Ev>:
    BoxWithBorderButtonStyle()
 800cf28:	b580      	push	{r7, lr}
 800cf2a:	b082      	sub	sp, #8
 800cf2c:	af00      	add	r7, sp, #0
 800cf2e:	6078      	str	r0, [r7, #4]
        : T(), up(), down()
 800cf30:	687b      	ldr	r3, [r7, #4]
 800cf32:	4618      	mov	r0, r3
 800cf34:	2334      	movs	r3, #52	; 0x34
 800cf36:	461a      	mov	r2, r3
 800cf38:	2100      	movs	r1, #0
 800cf3a:	f01e f8c8 	bl	802b0ce <memset>
 800cf3e:	687b      	ldr	r3, [r7, #4]
 800cf40:	4618      	mov	r0, r3
 800cf42:	f7ff ffdf 	bl	800cf04 <_ZN8touchgfx18ClickButtonTriggerC1Ev>
 800cf46:	4a17      	ldr	r2, [pc, #92]	; (800cfa4 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEC1Ev+0x7c>)
 800cf48:	687b      	ldr	r3, [r7, #4]
 800cf4a:	601a      	str	r2, [r3, #0]
 800cf4c:	687b      	ldr	r3, [r7, #4]
 800cf4e:	3334      	adds	r3, #52	; 0x34
 800cf50:	4618      	mov	r0, r3
 800cf52:	f7fe ff73 	bl	800be3c <_ZN8touchgfx13BoxWithBorderC1Ev>
 800cf56:	687b      	ldr	r3, [r7, #4]
 800cf58:	3368      	adds	r3, #104	; 0x68
 800cf5a:	4618      	mov	r0, r3
 800cf5c:	f7fe fc54 	bl	800b808 <_ZN8touchgfx9colortypeC1Ev>
 800cf60:	687b      	ldr	r3, [r7, #4]
 800cf62:	336c      	adds	r3, #108	; 0x6c
 800cf64:	4618      	mov	r0, r3
 800cf66:	f7fe fc4f 	bl	800b808 <_ZN8touchgfx9colortypeC1Ev>
 800cf6a:	687b      	ldr	r3, [r7, #4]
 800cf6c:	3370      	adds	r3, #112	; 0x70
 800cf6e:	4618      	mov	r0, r3
 800cf70:	f7fe fc4a 	bl	800b808 <_ZN8touchgfx9colortypeC1Ev>
 800cf74:	687b      	ldr	r3, [r7, #4]
 800cf76:	3374      	adds	r3, #116	; 0x74
 800cf78:	4618      	mov	r0, r3
 800cf7a:	f7fe fc45 	bl	800b808 <_ZN8touchgfx9colortypeC1Ev>
        borderBox.setXY(0, 0);
 800cf7e:	687b      	ldr	r3, [r7, #4]
 800cf80:	3334      	adds	r3, #52	; 0x34
 800cf82:	2200      	movs	r2, #0
 800cf84:	2100      	movs	r1, #0
 800cf86:	4618      	mov	r0, r3
 800cf88:	f7fe fd75 	bl	800ba76 <_ZN8touchgfx8Drawable5setXYEss>
        T::add(borderBox);
 800cf8c:	687a      	ldr	r2, [r7, #4]
 800cf8e:	687b      	ldr	r3, [r7, #4]
 800cf90:	3334      	adds	r3, #52	; 0x34
 800cf92:	4619      	mov	r1, r3
 800cf94:	4610      	mov	r0, r2
 800cf96:	f005 faff 	bl	8012598 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    }
 800cf9a:	687b      	ldr	r3, [r7, #4]
 800cf9c:	4618      	mov	r0, r3
 800cf9e:	3708      	adds	r7, #8
 800cfa0:	46bd      	mov	sp, r7
 800cfa2:	bd80      	pop	{r7, pc}
 800cfa4:	0802e7f4 	.word	0x0802e7f4

0800cfa8 <_ZN8touchgfx15GenericCallbackIRKNS_23AbstractButtonContainerEvvED1Ev>:
    virtual ~GenericCallback()
 800cfa8:	b480      	push	{r7}
 800cfaa:	b083      	sub	sp, #12
 800cfac:	af00      	add	r7, sp, #0
 800cfae:	6078      	str	r0, [r7, #4]
    }
 800cfb0:	4a04      	ldr	r2, [pc, #16]	; (800cfc4 <_ZN8touchgfx15GenericCallbackIRKNS_23AbstractButtonContainerEvvED1Ev+0x1c>)
 800cfb2:	687b      	ldr	r3, [r7, #4]
 800cfb4:	601a      	str	r2, [r3, #0]
 800cfb6:	687b      	ldr	r3, [r7, #4]
 800cfb8:	4618      	mov	r0, r3
 800cfba:	370c      	adds	r7, #12
 800cfbc:	46bd      	mov	sp, r7
 800cfbe:	f85d 7b04 	ldr.w	r7, [sp], #4
 800cfc2:	4770      	bx	lr
 800cfc4:	0802e9bc 	.word	0x0802e9bc

0800cfc8 <_ZN8touchgfx15GenericCallbackIRKNS_23AbstractButtonContainerEvvED0Ev>:
    virtual ~GenericCallback()
 800cfc8:	b580      	push	{r7, lr}
 800cfca:	b082      	sub	sp, #8
 800cfcc:	af00      	add	r7, sp, #0
 800cfce:	6078      	str	r0, [r7, #4]
    }
 800cfd0:	6878      	ldr	r0, [r7, #4]
 800cfd2:	f7ff ffe9 	bl	800cfa8 <_ZN8touchgfx15GenericCallbackIRKNS_23AbstractButtonContainerEvvED1Ev>
 800cfd6:	2104      	movs	r1, #4
 800cfd8:	6878      	ldr	r0, [r7, #4]
 800cfda:	f01d f9be 	bl	802a35a <_ZdlPvj>
 800cfde:	687b      	ldr	r3, [r7, #4]
 800cfe0:	4618      	mov	r0, r3
 800cfe2:	3708      	adds	r7, #8
 800cfe4:	46bd      	mov	sp, r7
 800cfe6:	bd80      	pop	{r7, pc}

0800cfe8 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv>:
    colortype down;          ///< The down
    colortype borderUp;      ///< The border up
    colortype borderDown;    ///< The border down

    /** @copydoc AbstractButtonContainer::handlePressedUpdated() */
    virtual void handlePressedUpdated()
 800cfe8:	b590      	push	{r4, r7, lr}
 800cfea:	b083      	sub	sp, #12
 800cfec:	af00      	add	r7, sp, #0
 800cfee:	6078      	str	r0, [r7, #4]
    {
        borderBox.setColor(T::getPressed() ? down : up);
 800cff0:	687b      	ldr	r3, [r7, #4]
 800cff2:	f103 0434 	add.w	r4, r3, #52	; 0x34
 800cff6:	687b      	ldr	r3, [r7, #4]
 800cff8:	4618      	mov	r0, r3
 800cffa:	f7fe ffb1 	bl	800bf60 <_ZNK8touchgfx23AbstractButtonContainer10getPressedEv>
 800cffe:	4603      	mov	r3, r0
 800d000:	2b00      	cmp	r3, #0
 800d002:	d002      	beq.n	800d00a <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv+0x22>
 800d004:	687b      	ldr	r3, [r7, #4]
 800d006:	336c      	adds	r3, #108	; 0x6c
 800d008:	e001      	b.n	800d00e <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv+0x26>
 800d00a:	687b      	ldr	r3, [r7, #4]
 800d00c:	3368      	adds	r3, #104	; 0x68
 800d00e:	6819      	ldr	r1, [r3, #0]
 800d010:	4620      	mov	r0, r4
 800d012:	f7fe fed3 	bl	800bdbc <_ZN8touchgfx3Box8setColorENS_9colortypeE>
        borderBox.setBorderColor(T::getPressed() ? borderDown : borderUp);
 800d016:	687b      	ldr	r3, [r7, #4]
 800d018:	f103 0434 	add.w	r4, r3, #52	; 0x34
 800d01c:	687b      	ldr	r3, [r7, #4]
 800d01e:	4618      	mov	r0, r3
 800d020:	f7fe ff9e 	bl	800bf60 <_ZNK8touchgfx23AbstractButtonContainer10getPressedEv>
 800d024:	4603      	mov	r3, r0
 800d026:	2b00      	cmp	r3, #0
 800d028:	d002      	beq.n	800d030 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv+0x48>
 800d02a:	687b      	ldr	r3, [r7, #4]
 800d02c:	3374      	adds	r3, #116	; 0x74
 800d02e:	e001      	b.n	800d034 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv+0x4c>
 800d030:	687b      	ldr	r3, [r7, #4]
 800d032:	3370      	adds	r3, #112	; 0x70
 800d034:	6819      	ldr	r1, [r3, #0]
 800d036:	4620      	mov	r0, r4
 800d038:	f7fe ff1c 	bl	800be74 <_ZN8touchgfx13BoxWithBorder14setBorderColorENS_9colortypeE>
        T::handlePressedUpdated();
 800d03c:	687b      	ldr	r3, [r7, #4]
 800d03e:	4618      	mov	r0, r3
 800d040:	f7fe ffdd 	bl	800bffe <_ZN8touchgfx23AbstractButtonContainer20handlePressedUpdatedEv>
    }
 800d044:	bf00      	nop
 800d046:	370c      	adds	r7, #12
 800d048:	46bd      	mov	sp, r7
 800d04a:	bd90      	pop	{r4, r7, pc}

0800d04c <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE20handlePressedUpdatedEv>:
    Bitmap iconReleased; ///< Icon to display when button is not pressed.
    Bitmap iconPressed;  ///< Icon to display when button is pressed.
    Image iconImage;     ///< The icon image

    /** @copydoc AbstractButtonContainer::handlePressedUpdated() */
    virtual void handlePressedUpdated()
 800d04c:	b590      	push	{r4, r7, lr}
 800d04e:	b083      	sub	sp, #12
 800d050:	af00      	add	r7, sp, #0
 800d052:	6078      	str	r0, [r7, #4]
    {
        iconImage.setBitmap(T::getPressed() ? iconPressed : iconReleased);
 800d054:	687b      	ldr	r3, [r7, #4]
 800d056:	f103 047c 	add.w	r4, r3, #124	; 0x7c
 800d05a:	687b      	ldr	r3, [r7, #4]
 800d05c:	4618      	mov	r0, r3
 800d05e:	f7fe ff7f 	bl	800bf60 <_ZNK8touchgfx23AbstractButtonContainer10getPressedEv>
 800d062:	4603      	mov	r3, r0
 800d064:	2b00      	cmp	r3, #0
 800d066:	d002      	beq.n	800d06e <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE20handlePressedUpdatedEv+0x22>
 800d068:	687b      	ldr	r3, [r7, #4]
 800d06a:	337a      	adds	r3, #122	; 0x7a
 800d06c:	e001      	b.n	800d072 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE20handlePressedUpdatedEv+0x26>
 800d06e:	687b      	ldr	r3, [r7, #4]
 800d070:	3378      	adds	r3, #120	; 0x78
 800d072:	4619      	mov	r1, r3
 800d074:	4620      	mov	r0, r4
 800d076:	f008 fa7c 	bl	8015572 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        T::handlePressedUpdated();
 800d07a:	687b      	ldr	r3, [r7, #4]
 800d07c:	4618      	mov	r0, r3
 800d07e:	f7ff ffb3 	bl	800cfe8 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv>
    }
 800d082:	bf00      	nop
 800d084:	370c      	adds	r7, #12
 800d086:	46bd      	mov	sp, r7
 800d088:	bd90      	pop	{r4, r7, pc}

0800d08a <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE8setIconXEs>:
    void setIconX(int16_t x)
 800d08a:	b580      	push	{r7, lr}
 800d08c:	b082      	sub	sp, #8
 800d08e:	af00      	add	r7, sp, #0
 800d090:	6078      	str	r0, [r7, #4]
 800d092:	460b      	mov	r3, r1
 800d094:	807b      	strh	r3, [r7, #2]
        iconImage.setX(x);
 800d096:	687b      	ldr	r3, [r7, #4]
 800d098:	337c      	adds	r3, #124	; 0x7c
 800d09a:	f9b7 2002 	ldrsh.w	r2, [r7, #2]
 800d09e:	4611      	mov	r1, r2
 800d0a0:	4618      	mov	r0, r3
 800d0a2:	f7fe fcca 	bl	800ba3a <_ZN8touchgfx8Drawable4setXEs>
    }
 800d0a6:	bf00      	nop
 800d0a8:	3708      	adds	r7, #8
 800d0aa:	46bd      	mov	sp, r7
 800d0ac:	bd80      	pop	{r7, pc}

0800d0ae <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE8setIconYEs>:
    void setIconY(int16_t y)
 800d0ae:	b580      	push	{r7, lr}
 800d0b0:	b082      	sub	sp, #8
 800d0b2:	af00      	add	r7, sp, #0
 800d0b4:	6078      	str	r0, [r7, #4]
 800d0b6:	460b      	mov	r3, r1
 800d0b8:	807b      	strh	r3, [r7, #2]
        iconImage.setY(y);
 800d0ba:	687b      	ldr	r3, [r7, #4]
 800d0bc:	337c      	adds	r3, #124	; 0x7c
 800d0be:	f9b7 2002 	ldrsh.w	r2, [r7, #2]
 800d0c2:	4611      	mov	r1, r2
 800d0c4:	4618      	mov	r0, r3
 800d0c6:	f7fe fcc7 	bl	800ba58 <_ZN8touchgfx8Drawable4setYEs>
    }
 800d0ca:	bf00      	nop
 800d0cc:	3708      	adds	r7, #8
 800d0ce:	46bd      	mov	sp, r7
 800d0d0:	bd80      	pop	{r7, pc}
	...

0800d0d4 <_ZN8touchgfx8CallbackI20CustomContainer1BaseRKNS_23AbstractButtonContainerEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 800d0d4:	b580      	push	{r7, lr}
 800d0d6:	b082      	sub	sp, #8
 800d0d8:	af00      	add	r7, sp, #0
 800d0da:	6078      	str	r0, [r7, #4]
 800d0dc:	4a05      	ldr	r2, [pc, #20]	; (800d0f4 <_ZN8touchgfx8CallbackI20CustomContainer1BaseRKNS_23AbstractButtonContainerEvvED1Ev+0x20>)
 800d0de:	687b      	ldr	r3, [r7, #4]
 800d0e0:	601a      	str	r2, [r3, #0]
 800d0e2:	687b      	ldr	r3, [r7, #4]
 800d0e4:	4618      	mov	r0, r3
 800d0e6:	f7ff ff5f 	bl	800cfa8 <_ZN8touchgfx15GenericCallbackIRKNS_23AbstractButtonContainerEvvED1Ev>
 800d0ea:	687b      	ldr	r3, [r7, #4]
 800d0ec:	4618      	mov	r0, r3
 800d0ee:	3708      	adds	r7, #8
 800d0f0:	46bd      	mov	sp, r7
 800d0f2:	bd80      	pop	{r7, pc}
 800d0f4:	0802e73c 	.word	0x0802e73c

0800d0f8 <_ZN8touchgfx8CallbackI20CustomContainer1BaseRKNS_23AbstractButtonContainerEvvED0Ev>:
 800d0f8:	b580      	push	{r7, lr}
 800d0fa:	b082      	sub	sp, #8
 800d0fc:	af00      	add	r7, sp, #0
 800d0fe:	6078      	str	r0, [r7, #4]
 800d100:	6878      	ldr	r0, [r7, #4]
 800d102:	f7ff ffe7 	bl	800d0d4 <_ZN8touchgfx8CallbackI20CustomContainer1BaseRKNS_23AbstractButtonContainerEvvED1Ev>
 800d106:	2110      	movs	r1, #16
 800d108:	6878      	ldr	r0, [r7, #4]
 800d10a:	f01d f926 	bl	802a35a <_ZdlPvj>
 800d10e:	687b      	ldr	r3, [r7, #4]
 800d110:	4618      	mov	r0, r3
 800d112:	3708      	adds	r7, #8
 800d114:	46bd      	mov	sp, r7
 800d116:	bd80      	pop	{r7, pc}

0800d118 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEED1Ev>:
class IconButtonStyle : public T
 800d118:	b580      	push	{r7, lr}
 800d11a:	b082      	sub	sp, #8
 800d11c:	af00      	add	r7, sp, #0
 800d11e:	6078      	str	r0, [r7, #4]
 800d120:	4a08      	ldr	r2, [pc, #32]	; (800d144 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEED1Ev+0x2c>)
 800d122:	687b      	ldr	r3, [r7, #4]
 800d124:	601a      	str	r2, [r3, #0]
 800d126:	687b      	ldr	r3, [r7, #4]
 800d128:	337c      	adds	r3, #124	; 0x7c
 800d12a:	4618      	mov	r0, r3
 800d12c:	f7fe ffb2 	bl	800c094 <_ZN8touchgfx5ImageD1Ev>
 800d130:	687b      	ldr	r3, [r7, #4]
 800d132:	4618      	mov	r0, r3
 800d134:	f7ff fda0 	bl	800cc78 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEED1Ev>
 800d138:	687b      	ldr	r3, [r7, #4]
 800d13a:	4618      	mov	r0, r3
 800d13c:	3708      	adds	r7, #8
 800d13e:	46bd      	mov	sp, r7
 800d140:	bd80      	pop	{r7, pc}
 800d142:	bf00      	nop
 800d144:	0802e754 	.word	0x0802e754

0800d148 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEED0Ev>:
 800d148:	b580      	push	{r7, lr}
 800d14a:	b082      	sub	sp, #8
 800d14c:	af00      	add	r7, sp, #0
 800d14e:	6078      	str	r0, [r7, #4]
 800d150:	6878      	ldr	r0, [r7, #4]
 800d152:	f7ff ffe1 	bl	800d118 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEED1Ev>
 800d156:	21a8      	movs	r1, #168	; 0xa8
 800d158:	6878      	ldr	r0, [r7, #4]
 800d15a:	f01d f8fe 	bl	802a35a <_ZdlPvj>
 800d15e:	687b      	ldr	r3, [r7, #4]
 800d160:	4618      	mov	r0, r3
 800d162:	3708      	adds	r7, #8
 800d164:	46bd      	mov	sp, r7
 800d166:	bd80      	pop	{r7, pc}

0800d168 <_ZN8touchgfx23TextAreaWithOneWildcardD1Ev>:
class TextAreaWithOneWildcard : public TextAreaWithWildcardBase
 800d168:	b580      	push	{r7, lr}
 800d16a:	b082      	sub	sp, #8
 800d16c:	af00      	add	r7, sp, #0
 800d16e:	6078      	str	r0, [r7, #4]
 800d170:	4a05      	ldr	r2, [pc, #20]	; (800d188 <_ZN8touchgfx23TextAreaWithOneWildcardD1Ev+0x20>)
 800d172:	687b      	ldr	r3, [r7, #4]
 800d174:	601a      	str	r2, [r3, #0]
 800d176:	687b      	ldr	r3, [r7, #4]
 800d178:	4618      	mov	r0, r3
 800d17a:	f7ff f9c1 	bl	800c500 <_ZN8touchgfx24TextAreaWithWildcardBaseD1Ev>
 800d17e:	687b      	ldr	r3, [r7, #4]
 800d180:	4618      	mov	r0, r3
 800d182:	3708      	adds	r7, #8
 800d184:	46bd      	mov	sp, r7
 800d186:	bd80      	pop	{r7, pc}
 800d188:	0802e890 	.word	0x0802e890

0800d18c <_ZN8touchgfx23TextAreaWithOneWildcardD0Ev>:
 800d18c:	b580      	push	{r7, lr}
 800d18e:	b082      	sub	sp, #8
 800d190:	af00      	add	r7, sp, #0
 800d192:	6078      	str	r0, [r7, #4]
 800d194:	6878      	ldr	r0, [r7, #4]
 800d196:	f7ff ffe7 	bl	800d168 <_ZN8touchgfx23TextAreaWithOneWildcardD1Ev>
 800d19a:	214c      	movs	r1, #76	; 0x4c
 800d19c:	6878      	ldr	r0, [r7, #4]
 800d19e:	f01d f8dc 	bl	802a35a <_ZdlPvj>
 800d1a2:	687b      	ldr	r3, [r7, #4]
 800d1a4:	4618      	mov	r0, r3
 800d1a6:	3708      	adds	r7, #8
 800d1a8:	46bd      	mov	sp, r7
 800d1aa:	bd80      	pop	{r7, pc}

0800d1ac <_ZN8touchgfx13BoxWithBorderD1Ev>:
class BoxWithBorder : public Box
 800d1ac:	b580      	push	{r7, lr}
 800d1ae:	b082      	sub	sp, #8
 800d1b0:	af00      	add	r7, sp, #0
 800d1b2:	6078      	str	r0, [r7, #4]
 800d1b4:	4a05      	ldr	r2, [pc, #20]	; (800d1cc <_ZN8touchgfx13BoxWithBorderD1Ev+0x20>)
 800d1b6:	687b      	ldr	r3, [r7, #4]
 800d1b8:	601a      	str	r2, [r3, #0]
 800d1ba:	687b      	ldr	r3, [r7, #4]
 800d1bc:	4618      	mov	r0, r3
 800d1be:	f7fe fe1b 	bl	800bdf8 <_ZN8touchgfx3BoxD1Ev>
 800d1c2:	687b      	ldr	r3, [r7, #4]
 800d1c4:	4618      	mov	r0, r3
 800d1c6:	3708      	adds	r7, #8
 800d1c8:	46bd      	mov	sp, r7
 800d1ca:	bd80      	pop	{r7, pc}
 800d1cc:	0802fbf8 	.word	0x0802fbf8

0800d1d0 <_ZN8touchgfx13BoxWithBorderD0Ev>:
 800d1d0:	b580      	push	{r7, lr}
 800d1d2:	b082      	sub	sp, #8
 800d1d4:	af00      	add	r7, sp, #0
 800d1d6:	6078      	str	r0, [r7, #4]
 800d1d8:	6878      	ldr	r0, [r7, #4]
 800d1da:	f7ff ffe7 	bl	800d1ac <_ZN8touchgfx13BoxWithBorderD1Ev>
 800d1de:	2134      	movs	r1, #52	; 0x34
 800d1e0:	6878      	ldr	r0, [r7, #4]
 800d1e2:	f01d f8ba 	bl	802a35a <_ZdlPvj>
 800d1e6:	687b      	ldr	r3, [r7, #4]
 800d1e8:	4618      	mov	r0, r3
 800d1ea:	3708      	adds	r7, #8
 800d1ec:	46bd      	mov	sp, r7
 800d1ee:	bd80      	pop	{r7, pc}

0800d1f0 <_ZN8touchgfx8CallbackI20CustomContainer1BaseRKNS_23AbstractButtonContainerEvvE7executeES4_>:
    virtual void execute(T1 t1)
 800d1f0:	b580      	push	{r7, lr}
 800d1f2:	b082      	sub	sp, #8
 800d1f4:	af00      	add	r7, sp, #0
 800d1f6:	6078      	str	r0, [r7, #4]
 800d1f8:	6039      	str	r1, [r7, #0]
        (pobject->*pmemfun)(t1);
 800d1fa:	687b      	ldr	r3, [r7, #4]
 800d1fc:	685b      	ldr	r3, [r3, #4]
 800d1fe:	687a      	ldr	r2, [r7, #4]
 800d200:	68d2      	ldr	r2, [r2, #12]
 800d202:	1052      	asrs	r2, r2, #1
 800d204:	1898      	adds	r0, r3, r2
 800d206:	687b      	ldr	r3, [r7, #4]
 800d208:	68db      	ldr	r3, [r3, #12]
 800d20a:	f003 0301 	and.w	r3, r3, #1
 800d20e:	2b00      	cmp	r3, #0
 800d210:	d102      	bne.n	800d218 <_ZN8touchgfx8CallbackI20CustomContainer1BaseRKNS_23AbstractButtonContainerEvvE7executeES4_+0x28>
 800d212:	687b      	ldr	r3, [r7, #4]
 800d214:	689b      	ldr	r3, [r3, #8]
 800d216:	e00a      	b.n	800d22e <_ZN8touchgfx8CallbackI20CustomContainer1BaseRKNS_23AbstractButtonContainerEvvE7executeES4_+0x3e>
 800d218:	687b      	ldr	r3, [r7, #4]
 800d21a:	685b      	ldr	r3, [r3, #4]
 800d21c:	687a      	ldr	r2, [r7, #4]
 800d21e:	68d2      	ldr	r2, [r2, #12]
 800d220:	1052      	asrs	r2, r2, #1
 800d222:	4413      	add	r3, r2
 800d224:	681b      	ldr	r3, [r3, #0]
 800d226:	687a      	ldr	r2, [r7, #4]
 800d228:	6892      	ldr	r2, [r2, #8]
 800d22a:	4413      	add	r3, r2
 800d22c:	681b      	ldr	r3, [r3, #0]
 800d22e:	6839      	ldr	r1, [r7, #0]
 800d230:	4798      	blx	r3
    }
 800d232:	bf00      	nop
 800d234:	3708      	adds	r7, #8
 800d236:	46bd      	mov	sp, r7
 800d238:	bd80      	pop	{r7, pc}

0800d23a <_ZNK8touchgfx8CallbackI20CustomContainer1BaseRKNS_23AbstractButtonContainerEvvE7isValidEv>:
    virtual bool isValid() const
 800d23a:	b480      	push	{r7}
 800d23c:	b083      	sub	sp, #12
 800d23e:	af00      	add	r7, sp, #0
 800d240:	6078      	str	r0, [r7, #4]
        return (pobject != 0) && (pmemfun != 0);
 800d242:	687b      	ldr	r3, [r7, #4]
 800d244:	685b      	ldr	r3, [r3, #4]
 800d246:	2b00      	cmp	r3, #0
 800d248:	d010      	beq.n	800d26c <_ZNK8touchgfx8CallbackI20CustomContainer1BaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x32>
 800d24a:	687b      	ldr	r3, [r7, #4]
 800d24c:	689b      	ldr	r3, [r3, #8]
 800d24e:	2b00      	cmp	r3, #0
 800d250:	d107      	bne.n	800d262 <_ZNK8touchgfx8CallbackI20CustomContainer1BaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x28>
 800d252:	687b      	ldr	r3, [r7, #4]
 800d254:	68db      	ldr	r3, [r3, #12]
 800d256:	f003 0301 	and.w	r3, r3, #1
 800d25a:	2b00      	cmp	r3, #0
 800d25c:	d101      	bne.n	800d262 <_ZNK8touchgfx8CallbackI20CustomContainer1BaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x28>
 800d25e:	2301      	movs	r3, #1
 800d260:	e000      	b.n	800d264 <_ZNK8touchgfx8CallbackI20CustomContainer1BaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x2a>
 800d262:	2300      	movs	r3, #0
 800d264:	2b01      	cmp	r3, #1
 800d266:	d001      	beq.n	800d26c <_ZNK8touchgfx8CallbackI20CustomContainer1BaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x32>
 800d268:	2301      	movs	r3, #1
 800d26a:	e000      	b.n	800d26e <_ZNK8touchgfx8CallbackI20CustomContainer1BaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x34>
 800d26c:	2300      	movs	r3, #0
    }
 800d26e:	4618      	mov	r0, r3
 800d270:	370c      	adds	r7, #12
 800d272:	46bd      	mov	sp, r7
 800d274:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d278:	4770      	bx	lr

0800d27a <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE18handleAlphaUpdatedEv>:

    /** @copydoc AbstractButtonContainer::handleAlphaUpdated() */
    virtual void handleAlphaUpdated()
 800d27a:	b590      	push	{r4, r7, lr}
 800d27c:	b083      	sub	sp, #12
 800d27e:	af00      	add	r7, sp, #0
 800d280:	6078      	str	r0, [r7, #4]
    {
        iconImage.setAlpha(T::getAlpha());
 800d282:	687b      	ldr	r3, [r7, #4]
 800d284:	f103 047c 	add.w	r4, r3, #124	; 0x7c
 800d288:	687b      	ldr	r3, [r7, #4]
 800d28a:	4618      	mov	r0, r3
 800d28c:	f7fe fe75 	bl	800bf7a <_ZNK8touchgfx23AbstractButtonContainer8getAlphaEv>
 800d290:	4603      	mov	r3, r0
 800d292:	4619      	mov	r1, r3
 800d294:	4620      	mov	r0, r4
 800d296:	f7fe feed 	bl	800c074 <_ZN8touchgfx5Image8setAlphaEh>
        T::handleAlphaUpdated();
 800d29a:	687b      	ldr	r3, [r7, #4]
 800d29c:	4618      	mov	r0, r3
 800d29e:	f000 f804 	bl	800d2aa <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE18handleAlphaUpdatedEv>
    }
 800d2a2:	bf00      	nop
 800d2a4:	370c      	adds	r7, #12
 800d2a6:	46bd      	mov	sp, r7
 800d2a8:	bd90      	pop	{r4, r7, pc}

0800d2aa <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE18handleAlphaUpdatedEv>:

    /** @copydoc AbstractButtonContainer::handleAlphaUpdated() */
    virtual void handleAlphaUpdated()
 800d2aa:	b590      	push	{r4, r7, lr}
 800d2ac:	b083      	sub	sp, #12
 800d2ae:	af00      	add	r7, sp, #0
 800d2b0:	6078      	str	r0, [r7, #4]
    {
        borderBox.setAlpha(T::getAlpha());
 800d2b2:	687b      	ldr	r3, [r7, #4]
 800d2b4:	f103 0434 	add.w	r4, r3, #52	; 0x34
 800d2b8:	687b      	ldr	r3, [r7, #4]
 800d2ba:	4618      	mov	r0, r3
 800d2bc:	f7fe fe5d 	bl	800bf7a <_ZNK8touchgfx23AbstractButtonContainer8getAlphaEv>
 800d2c0:	4603      	mov	r3, r0
 800d2c2:	4619      	mov	r1, r3
 800d2c4:	4620      	mov	r0, r4
 800d2c6:	f7fe fd87 	bl	800bdd8 <_ZN8touchgfx3Box8setAlphaEh>
        T::handleAlphaUpdated();
 800d2ca:	687b      	ldr	r3, [r7, #4]
 800d2cc:	4618      	mov	r0, r3
 800d2ce:	f7fe fea0 	bl	800c012 <_ZN8touchgfx23AbstractButtonContainer18handleAlphaUpdatedEv>
    }
 800d2d2:	bf00      	nop
 800d2d4:	370c      	adds	r7, #12
 800d2d6:	46bd      	mov	sp, r7
 800d2d8:	bd90      	pop	{r4, r7, pc}

0800d2da <_ZNK8touchgfx9colortypecvmEv>:
    operator uint32_t() const
 800d2da:	b480      	push	{r7}
 800d2dc:	b083      	sub	sp, #12
 800d2de:	af00      	add	r7, sp, #0
 800d2e0:	6078      	str	r0, [r7, #4]
        return color;
 800d2e2:	687b      	ldr	r3, [r7, #4]
 800d2e4:	681b      	ldr	r3, [r3, #0]
    }
 800d2e6:	4618      	mov	r0, r3
 800d2e8:	370c      	adds	r7, #12
 800d2ea:	46bd      	mov	sp, r7
 800d2ec:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d2f0:	4770      	bx	lr

0800d2f2 <_ZN8touchgfx8Drawable14setWidthHeightERKS0_>:
    void setWidthHeight(const Drawable& drawable)
 800d2f2:	b590      	push	{r4, r7, lr}
 800d2f4:	b083      	sub	sp, #12
 800d2f6:	af00      	add	r7, sp, #0
 800d2f8:	6078      	str	r0, [r7, #4]
 800d2fa:	6039      	str	r1, [r7, #0]
        setWidthHeight(drawable.getWidth(), drawable.getHeight());
 800d2fc:	6838      	ldr	r0, [r7, #0]
 800d2fe:	f7fe fb82 	bl	800ba06 <_ZNK8touchgfx8Drawable8getWidthEv>
 800d302:	4603      	mov	r3, r0
 800d304:	461c      	mov	r4, r3
 800d306:	6838      	ldr	r0, [r7, #0]
 800d308:	f7fe fb8a 	bl	800ba20 <_ZNK8touchgfx8Drawable9getHeightEv>
 800d30c:	4603      	mov	r3, r0
 800d30e:	461a      	mov	r2, r3
 800d310:	4621      	mov	r1, r4
 800d312:	6878      	ldr	r0, [r7, #4]
 800d314:	f7fe fc0b 	bl	800bb2e <_ZN8touchgfx8Drawable14setWidthHeightEss>
    }
 800d318:	bf00      	nop
 800d31a:	370c      	adds	r7, #12
 800d31c:	46bd      	mov	sp, r7
 800d31e:	bd90      	pop	{r4, r7, pc}

0800d320 <_ZN8touchgfx8Drawable10setVisibleEb>:
    void setVisible(bool vis)
 800d320:	b480      	push	{r7}
 800d322:	b083      	sub	sp, #12
 800d324:	af00      	add	r7, sp, #0
 800d326:	6078      	str	r0, [r7, #4]
 800d328:	460b      	mov	r3, r1
 800d32a:	70fb      	strb	r3, [r7, #3]
        visible = vis;
 800d32c:	687b      	ldr	r3, [r7, #4]
 800d32e:	78fa      	ldrb	r2, [r7, #3]
 800d330:	f883 2025 	strb.w	r2, [r3, #37]	; 0x25
    }
 800d334:	bf00      	nop
 800d336:	370c      	adds	r7, #12
 800d338:	46bd      	mov	sp, r7
 800d33a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d33e:	4770      	bx	lr

0800d340 <_ZN8touchgfx3HAL15getAuxiliaryLCDEv>:
    /**
     * Get the auxiliary LCD class attached to the HAL instance if any.
     *
     * @return A pointer on the axiliary LCD class attached to the HAL instance.
     */
    LCD* getAuxiliaryLCD()
 800d340:	b480      	push	{r7}
 800d342:	b083      	sub	sp, #12
 800d344:	af00      	add	r7, sp, #0
 800d346:	6078      	str	r0, [r7, #4]
    {
        return auxiliaryLCD;
 800d348:	687b      	ldr	r3, [r7, #4]
 800d34a:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
    }
 800d34c:	4618      	mov	r0, r3
 800d34e:	370c      	adds	r7, #12
 800d350:	46bd      	mov	sp, r7
 800d352:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d356:	4770      	bx	lr

0800d358 <_ZN8touchgfx6ScreenD1Ev>:
public:
    /** Initializes a new instance of the Screen class. */
    Screen();

    /** Finalizes an instance of the Screen class. */
    virtual ~Screen()
 800d358:	b580      	push	{r7, lr}
 800d35a:	b082      	sub	sp, #8
 800d35c:	af00      	add	r7, sp, #0
 800d35e:	6078      	str	r0, [r7, #4]
    {
 800d360:	4a06      	ldr	r2, [pc, #24]	; (800d37c <_ZN8touchgfx6ScreenD1Ev+0x24>)
 800d362:	687b      	ldr	r3, [r7, #4]
 800d364:	601a      	str	r2, [r3, #0]
 800d366:	687b      	ldr	r3, [r7, #4]
 800d368:	3304      	adds	r3, #4
 800d36a:	4618      	mov	r0, r3
 800d36c:	f7fe fda0 	bl	800beb0 <_ZN8touchgfx9ContainerD1Ev>
    }
 800d370:	687b      	ldr	r3, [r7, #4]
 800d372:	4618      	mov	r0, r3
 800d374:	3708      	adds	r7, #8
 800d376:	46bd      	mov	sp, r7
 800d378:	bd80      	pop	{r7, pc}
 800d37a:	bf00      	nop
 800d37c:	0802fe94 	.word	0x0802fe94

0800d380 <_ZN8touchgfx6ScreenD0Ev>:
    virtual ~Screen()
 800d380:	b580      	push	{r7, lr}
 800d382:	b082      	sub	sp, #8
 800d384:	af00      	add	r7, sp, #0
 800d386:	6078      	str	r0, [r7, #4]
    }
 800d388:	6878      	ldr	r0, [r7, #4]
 800d38a:	f7ff ffe5 	bl	800d358 <_ZN8touchgfx6ScreenD1Ev>
 800d38e:	213c      	movs	r1, #60	; 0x3c
 800d390:	6878      	ldr	r0, [r7, #4]
 800d392:	f01c ffe2 	bl	802a35a <_ZdlPvj>
 800d396:	687b      	ldr	r3, [r7, #4]
 800d398:	4618      	mov	r0, r3
 800d39a:	3708      	adds	r7, #8
 800d39c:	46bd      	mov	sp, r7
 800d39e:	bd80      	pop	{r7, pc}

0800d3a0 <_ZN8touchgfx6Screen11setupScreenEv>:
     * version does nothing, but place any screen specific initialization code in an
     * overridden version.
     *
     * @see Application::switchScreen
     */
    virtual void setupScreen()
 800d3a0:	b480      	push	{r7}
 800d3a2:	b083      	sub	sp, #12
 800d3a4:	af00      	add	r7, sp, #0
 800d3a6:	6078      	str	r0, [r7, #4]
    {
    }
 800d3a8:	bf00      	nop
 800d3aa:	370c      	adds	r7, #12
 800d3ac:	46bd      	mov	sp, r7
 800d3ae:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d3b2:	4770      	bx	lr

0800d3b4 <_ZN8touchgfx6Screen15afterTransitionEv>:
     * version does nothing, but override to do screen specific initialization code that has
     * to be done after the transition to the screen.
     *
     * @see Application::handleTickEvent
     */
    virtual void afterTransition()
 800d3b4:	b480      	push	{r7}
 800d3b6:	b083      	sub	sp, #12
 800d3b8:	af00      	add	r7, sp, #0
 800d3ba:	6078      	str	r0, [r7, #4]
    {
    }
 800d3bc:	bf00      	nop
 800d3be:	370c      	adds	r7, #12
 800d3c0:	46bd      	mov	sp, r7
 800d3c2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d3c6:	4770      	bx	lr

0800d3c8 <_ZN8touchgfx6Screen14tearDownScreenEv>:
     * Base version does nothing, but place any screen specific cleanup code in an
     * overridden version.
     *
     * @see Application::switchScreen
     */
    virtual void tearDownScreen()
 800d3c8:	b480      	push	{r7}
 800d3ca:	b083      	sub	sp, #12
 800d3cc:	af00      	add	r7, sp, #0
 800d3ce:	6078      	str	r0, [r7, #4]
    {
    }
 800d3d0:	bf00      	nop
 800d3d2:	370c      	adds	r7, #12
 800d3d4:	46bd      	mov	sp, r7
 800d3d6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d3da:	4770      	bx	lr

0800d3dc <_ZN8touchgfx6Screen15handleTickEventEv>:

    /**
     * Called by the Application on the current screen with a frequency of
     * Application::TICK_INTERVAL_MS.
     */
    virtual void handleTickEvent()
 800d3dc:	b480      	push	{r7}
 800d3de:	b083      	sub	sp, #12
 800d3e0:	af00      	add	r7, sp, #0
 800d3e2:	6078      	str	r0, [r7, #4]
    {
    }
 800d3e4:	bf00      	nop
 800d3e6:	370c      	adds	r7, #12
 800d3e8:	46bd      	mov	sp, r7
 800d3ea:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d3ee:	4770      	bx	lr

0800d3f0 <_ZN8touchgfx6Screen14handleKeyEventEh>:
     * Called by the Application on the reception of a "key", the meaning of which is
     * platform/application specific. Default implementation does nothing.
     *
     * @param  key The key to handle.
     */
    virtual void handleKeyEvent(uint8_t key)
 800d3f0:	b480      	push	{r7}
 800d3f2:	b083      	sub	sp, #12
 800d3f4:	af00      	add	r7, sp, #0
 800d3f6:	6078      	str	r0, [r7, #4]
 800d3f8:	460b      	mov	r3, r1
 800d3fa:	70fb      	strb	r3, [r7, #3]
    {
        (void)key; // Unused variable
    }
 800d3fc:	bf00      	nop
 800d3fe:	370c      	adds	r7, #12
 800d400:	46bd      	mov	sp, r7
 800d402:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d406:	4770      	bx	lr

0800d408 <_ZN8touchgfx6Screen3addERNS_8DrawableE>:
     * @param [in] d The Drawable to add.
     *
     * @note Must not be called with a Drawable that was already added to the screen. If in doubt,
     *       call remove() first.
     */
    void add(Drawable& d)
 800d408:	b580      	push	{r7, lr}
 800d40a:	b082      	sub	sp, #8
 800d40c:	af00      	add	r7, sp, #0
 800d40e:	6078      	str	r0, [r7, #4]
 800d410:	6039      	str	r1, [r7, #0]
    {
        container.add(d);
 800d412:	687b      	ldr	r3, [r7, #4]
 800d414:	3304      	adds	r3, #4
 800d416:	6839      	ldr	r1, [r7, #0]
 800d418:	4618      	mov	r0, r3
 800d41a:	f005 f8bd 	bl	8012598 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    }
 800d41e:	bf00      	nop
 800d420:	3708      	adds	r7, #8
 800d422:	46bd      	mov	sp, r7
 800d424:	bd80      	pop	{r7, pc}
	...

0800d428 <_ZN8touchgfx15AbstractPainterC1Ev>:
 */
class AbstractPainter
{
public:
    /** Initializes a new instance of the AbstractPainter class. */
    AbstractPainter()
 800d428:	b480      	push	{r7}
 800d42a:	b083      	sub	sp, #12
 800d42c:	af00      	add	r7, sp, #0
 800d42e:	6078      	str	r0, [r7, #4]
        : widgetWidth(0)
 800d430:	4a06      	ldr	r2, [pc, #24]	; (800d44c <_ZN8touchgfx15AbstractPainterC1Ev+0x24>)
 800d432:	687b      	ldr	r3, [r7, #4]
 800d434:	601a      	str	r2, [r3, #0]
 800d436:	687b      	ldr	r3, [r7, #4]
 800d438:	2200      	movs	r2, #0
 800d43a:	809a      	strh	r2, [r3, #4]
    {
    }
 800d43c:	687b      	ldr	r3, [r7, #4]
 800d43e:	4618      	mov	r0, r3
 800d440:	370c      	adds	r7, #12
 800d442:	46bd      	mov	sp, r7
 800d444:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d448:	4770      	bx	lr
 800d44a:	bf00      	nop
 800d44c:	0802ecc8 	.word	0x0802ecc8

0800d450 <_ZN8touchgfx15AbstractPainterD1Ev>:

    /** Finalizes an instance of the AbstractPainter class. */
    virtual ~AbstractPainter()
 800d450:	b480      	push	{r7}
 800d452:	b083      	sub	sp, #12
 800d454:	af00      	add	r7, sp, #0
 800d456:	6078      	str	r0, [r7, #4]
    {
 800d458:	4a04      	ldr	r2, [pc, #16]	; (800d46c <_ZN8touchgfx15AbstractPainterD1Ev+0x1c>)
 800d45a:	687b      	ldr	r3, [r7, #4]
 800d45c:	601a      	str	r2, [r3, #0]
    }
 800d45e:	687b      	ldr	r3, [r7, #4]
 800d460:	4618      	mov	r0, r3
 800d462:	370c      	adds	r7, #12
 800d464:	46bd      	mov	sp, r7
 800d466:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d46a:	4770      	bx	lr
 800d46c:	0802ecc8 	.word	0x0802ecc8

0800d470 <_ZN8touchgfx15AbstractPainterD0Ev>:
    virtual ~AbstractPainter()
 800d470:	b580      	push	{r7, lr}
 800d472:	b082      	sub	sp, #8
 800d474:	af00      	add	r7, sp, #0
 800d476:	6078      	str	r0, [r7, #4]
    }
 800d478:	6878      	ldr	r0, [r7, #4]
 800d47a:	f7ff ffe9 	bl	800d450 <_ZN8touchgfx15AbstractPainterD1Ev>
 800d47e:	2108      	movs	r1, #8
 800d480:	6878      	ldr	r0, [r7, #4]
 800d482:	f01c ff6a 	bl	802a35a <_ZdlPvj>
 800d486:	687b      	ldr	r3, [r7, #4]
 800d488:	4618      	mov	r0, r3
 800d48a:	3708      	adds	r7, #8
 800d48c:	46bd      	mov	sp, r7
 800d48e:	bd80      	pop	{r7, pc}

0800d490 <_ZNK8touchgfx15AbstractPainter18getRenderingMethodEv>:
     * HARDWARE if the painter uses hardware based drawing,
     * SOFTWARE otherwise. Relevant on platforms using DCACHE.
     *
     * @return HARDWARE if painter uses hardware based drawing, SOFTWARE otherwise.
     */
    virtual HAL::RenderingMethod getRenderingMethod() const
 800d490:	b480      	push	{r7}
 800d492:	b083      	sub	sp, #12
 800d494:	af00      	add	r7, sp, #0
 800d496:	6078      	str	r0, [r7, #4]
    {
        return HAL::SOFTWARE;
 800d498:	2300      	movs	r3, #0
    }
 800d49a:	4618      	mov	r0, r3
 800d49c:	370c      	adds	r7, #12
 800d49e:	46bd      	mov	sp, r7
 800d4a0:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d4a4:	4770      	bx	lr

0800d4a6 <_ZNK8touchgfx15AbstractPainter5setupERKNS_4RectE>:
     *
     * @return True if the painter is ready to paint, false otherwise.
     *
     * @see AbstractPainter::paint, AbstractPainter::tearDown
     */
    virtual bool setup(const Rect& widgetRect) const
 800d4a6:	b480      	push	{r7}
 800d4a8:	b083      	sub	sp, #12
 800d4aa:	af00      	add	r7, sp, #0
 800d4ac:	6078      	str	r0, [r7, #4]
 800d4ae:	6039      	str	r1, [r7, #0]
    {
        widgetWidth = widgetRect.width;
 800d4b0:	683b      	ldr	r3, [r7, #0]
 800d4b2:	f9b3 2004 	ldrsh.w	r2, [r3, #4]
 800d4b6:	687b      	ldr	r3, [r7, #4]
 800d4b8:	809a      	strh	r2, [r3, #4]
        return true;
 800d4ba:	2301      	movs	r3, #1
    }
 800d4bc:	4618      	mov	r0, r3
 800d4be:	370c      	adds	r7, #12
 800d4c0:	46bd      	mov	sp, r7
 800d4c2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d4c6:	4770      	bx	lr

0800d4c8 <_ZNK8touchgfx15AbstractPainter8tearDownEv>:
     * This function is called after all paint operation have finished. This allows the painter to
     * close down dma queues etc. This happens after the last scan line segment has been drawn.
     *
     * @see AbstractPainter::paint, AbstractPainter::setup
     */
    virtual void tearDown() const
 800d4c8:	b480      	push	{r7}
 800d4ca:	b083      	sub	sp, #12
 800d4cc:	af00      	add	r7, sp, #0
 800d4ce:	6078      	str	r0, [r7, #4]
    {
        return;
 800d4d0:	bf00      	nop
    }
 800d4d2:	370c      	adds	r7, #12
 800d4d4:	46bd      	mov	sp, r7
 800d4d6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d4da:	4770      	bx	lr

0800d4dc <_ZN8touchgfx20AbstractPainterColorC1ENS_9colortypeE>:
    /**
     * Constructor.
     *
     * @param  color (Optional) The color to use in the painter.
     */
    AbstractPainterColor(colortype color = 0)
 800d4dc:	b580      	push	{r7, lr}
 800d4de:	b082      	sub	sp, #8
 800d4e0:	af00      	add	r7, sp, #0
 800d4e2:	6078      	str	r0, [r7, #4]
 800d4e4:	6039      	str	r1, [r7, #0]
    {
 800d4e6:	4a08      	ldr	r2, [pc, #32]	; (800d508 <_ZN8touchgfx20AbstractPainterColorC1ENS_9colortypeE+0x2c>)
 800d4e8:	687b      	ldr	r3, [r7, #4]
 800d4ea:	601a      	str	r2, [r3, #0]
 800d4ec:	687b      	ldr	r3, [r7, #4]
 800d4ee:	3304      	adds	r3, #4
 800d4f0:	4618      	mov	r0, r3
 800d4f2:	f7fe f989 	bl	800b808 <_ZN8touchgfx9colortypeC1Ev>
        setColor(color);
 800d4f6:	6839      	ldr	r1, [r7, #0]
 800d4f8:	6878      	ldr	r0, [r7, #4]
 800d4fa:	f000 f827 	bl	800d54c <_ZN8touchgfx20AbstractPainterColor8setColorENS_9colortypeE>
    }
 800d4fe:	687b      	ldr	r3, [r7, #4]
 800d500:	4618      	mov	r0, r3
 800d502:	3708      	adds	r7, #8
 800d504:	46bd      	mov	sp, r7
 800d506:	bd80      	pop	{r7, pc}
 800d508:	0802ecb4 	.word	0x0802ecb4

0800d50c <_ZN8touchgfx20AbstractPainterColorD1Ev>:

    /** Destructor */
    virtual ~AbstractPainterColor()
 800d50c:	b480      	push	{r7}
 800d50e:	b083      	sub	sp, #12
 800d510:	af00      	add	r7, sp, #0
 800d512:	6078      	str	r0, [r7, #4]
    {
 800d514:	4a04      	ldr	r2, [pc, #16]	; (800d528 <_ZN8touchgfx20AbstractPainterColorD1Ev+0x1c>)
 800d516:	687b      	ldr	r3, [r7, #4]
 800d518:	601a      	str	r2, [r3, #0]
    }
 800d51a:	687b      	ldr	r3, [r7, #4]
 800d51c:	4618      	mov	r0, r3
 800d51e:	370c      	adds	r7, #12
 800d520:	46bd      	mov	sp, r7
 800d522:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d526:	4770      	bx	lr
 800d528:	0802ecb4 	.word	0x0802ecb4

0800d52c <_ZN8touchgfx20AbstractPainterColorD0Ev>:
    virtual ~AbstractPainterColor()
 800d52c:	b580      	push	{r7, lr}
 800d52e:	b082      	sub	sp, #8
 800d530:	af00      	add	r7, sp, #0
 800d532:	6078      	str	r0, [r7, #4]
    }
 800d534:	6878      	ldr	r0, [r7, #4]
 800d536:	f7ff ffe9 	bl	800d50c <_ZN8touchgfx20AbstractPainterColorD1Ev>
 800d53a:	2108      	movs	r1, #8
 800d53c:	6878      	ldr	r0, [r7, #4]
 800d53e:	f01c ff0c 	bl	802a35a <_ZdlPvj>
 800d542:	687b      	ldr	r3, [r7, #4]
 800d544:	4618      	mov	r0, r3
 800d546:	3708      	adds	r7, #8
 800d548:	46bd      	mov	sp, r7
 800d54a:	bd80      	pop	{r7, pc}

0800d54c <_ZN8touchgfx20AbstractPainterColor8setColorENS_9colortypeE>:
    /**
     * Sets color to use when drawing the CanvasWidget.
     *
     * @param  color The color.
     */
    virtual void setColor(colortype color)
 800d54c:	b480      	push	{r7}
 800d54e:	b083      	sub	sp, #12
 800d550:	af00      	add	r7, sp, #0
 800d552:	6078      	str	r0, [r7, #4]
 800d554:	6039      	str	r1, [r7, #0]
    {
        painterColor = color;
 800d556:	687b      	ldr	r3, [r7, #4]
 800d558:	683a      	ldr	r2, [r7, #0]
 800d55a:	605a      	str	r2, [r3, #4]
    }
 800d55c:	bf00      	nop
 800d55e:	370c      	adds	r7, #12
 800d560:	46bd      	mov	sp, r7
 800d562:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d566:	4770      	bx	lr

0800d568 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>:
public:
    static const uint16_t RMASK = 0xF800; ///< Mask for red   (1111100000000000)
    static const uint16_t GMASK = 0x07E0; ///< Mask for green (0000011111100000)
    static const uint16_t BMASK = 0x001F; ///< Mask for blue  (0000000000011111)

    AbstractPainterRGB565()
 800d568:	b580      	push	{r7, lr}
 800d56a:	b084      	sub	sp, #16
 800d56c:	af00      	add	r7, sp, #0
 800d56e:	6078      	str	r0, [r7, #4]
        : AbstractPainter()
 800d570:	687b      	ldr	r3, [r7, #4]
 800d572:	4618      	mov	r0, r3
 800d574:	f7ff ff58 	bl	800d428 <_ZN8touchgfx15AbstractPainterC1Ev>
 800d578:	4a26      	ldr	r2, [pc, #152]	; (800d614 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0xac>)
 800d57a:	687b      	ldr	r3, [r7, #4]
 800d57c:	601a      	str	r2, [r3, #0]
 800d57e:	2300      	movs	r3, #0
 800d580:	73fb      	strb	r3, [r7, #15]
     *
     * @return True if the format matches the framebuffer format, false otherwise.
     */
    FORCE_INLINE_FUNCTION static bool compatibleFramebuffer(Bitmap::BitmapFormat format)
    {
        bool compat = HAL::lcd().framebufferFormat() == format;
 800d582:	f7fd fcc3 	bl	800af0c <_ZN8touchgfx3HAL3lcdEv>
 800d586:	4603      	mov	r3, r0
 800d588:	681a      	ldr	r2, [r3, #0]
 800d58a:	322c      	adds	r2, #44	; 0x2c
 800d58c:	6812      	ldr	r2, [r2, #0]
 800d58e:	4618      	mov	r0, r3
 800d590:	4790      	blx	r2
 800d592:	4603      	mov	r3, r0
 800d594:	461a      	mov	r2, r3
 800d596:	7bfb      	ldrb	r3, [r7, #15]
 800d598:	4293      	cmp	r3, r2
 800d59a:	bf0c      	ite	eq
 800d59c:	2301      	moveq	r3, #1
 800d59e:	2300      	movne	r3, #0
 800d5a0:	73bb      	strb	r3, [r7, #14]
        if (HAL::getInstance()->getAuxiliaryLCD())
 800d5a2:	f7fd fca7 	bl	800aef4 <_ZN8touchgfx3HAL11getInstanceEv>
 800d5a6:	4603      	mov	r3, r0
 800d5a8:	4618      	mov	r0, r3
 800d5aa:	f7ff fec9 	bl	800d340 <_ZN8touchgfx3HAL15getAuxiliaryLCDEv>
 800d5ae:	4603      	mov	r3, r0
 800d5b0:	2b00      	cmp	r3, #0
 800d5b2:	bf14      	ite	ne
 800d5b4:	2301      	movne	r3, #1
 800d5b6:	2300      	moveq	r3, #0
 800d5b8:	b2db      	uxtb	r3, r3
 800d5ba:	2b00      	cmp	r3, #0
 800d5bc:	d01b      	beq.n	800d5f6 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x8e>
        {
            compat |= HAL::getInstance()->getAuxiliaryLCD()->framebufferFormat() == format;
 800d5be:	f7fd fc99 	bl	800aef4 <_ZN8touchgfx3HAL11getInstanceEv>
 800d5c2:	4603      	mov	r3, r0
 800d5c4:	4618      	mov	r0, r3
 800d5c6:	f7ff febb 	bl	800d340 <_ZN8touchgfx3HAL15getAuxiliaryLCDEv>
 800d5ca:	4603      	mov	r3, r0
 800d5cc:	681a      	ldr	r2, [r3, #0]
 800d5ce:	322c      	adds	r2, #44	; 0x2c
 800d5d0:	6812      	ldr	r2, [r2, #0]
 800d5d2:	4618      	mov	r0, r3
 800d5d4:	4790      	blx	r2
 800d5d6:	4603      	mov	r3, r0
 800d5d8:	461a      	mov	r2, r3
 800d5da:	7bfb      	ldrb	r3, [r7, #15]
 800d5dc:	4293      	cmp	r3, r2
 800d5de:	bf0c      	ite	eq
 800d5e0:	2301      	moveq	r3, #1
 800d5e2:	2300      	movne	r3, #0
 800d5e4:	b2da      	uxtb	r2, r3
 800d5e6:	7bbb      	ldrb	r3, [r7, #14]
 800d5e8:	4313      	orrs	r3, r2
 800d5ea:	b2db      	uxtb	r3, r3
 800d5ec:	2b00      	cmp	r3, #0
 800d5ee:	bf14      	ite	ne
 800d5f0:	2301      	movne	r3, #1
 800d5f2:	2300      	moveq	r3, #0
 800d5f4:	73bb      	strb	r3, [r7, #14]
        }
        return compat;
 800d5f6:	7bbb      	ldrb	r3, [r7, #14]
    {
        assert(compatibleFramebuffer(Bitmap::RGB565) && "The chosen painter only works with RGB565 displays");
 800d5f8:	2b00      	cmp	r3, #0
 800d5fa:	d105      	bne.n	800d608 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0xa0>
 800d5fc:	4b06      	ldr	r3, [pc, #24]	; (800d618 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0xb0>)
 800d5fe:	4a07      	ldr	r2, [pc, #28]	; (800d61c <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0xb4>)
 800d600:	212c      	movs	r1, #44	; 0x2c
 800d602:	4807      	ldr	r0, [pc, #28]	; (800d620 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0xb8>)
 800d604:	f01c fed8 	bl	802a3b8 <__assert_func>
    }
 800d608:	687b      	ldr	r3, [r7, #4]
 800d60a:	4618      	mov	r0, r3
 800d60c:	3710      	adds	r7, #16
 800d60e:	46bd      	mov	sp, r7
 800d610:	bd80      	pop	{r7, pc}
 800d612:	bf00      	nop
 800d614:	0802ec94 	.word	0x0802ec94
 800d618:	0802d5f0 	.word	0x0802d5f0
 800d61c:	0802d650 	.word	0x0802d650
 800d620:	0802d68c 	.word	0x0802d68c

0800d624 <_ZN8touchgfx21AbstractPainterRGB565D1Ev>:
class AbstractPainterRGB565 : public AbstractPainter
 800d624:	b580      	push	{r7, lr}
 800d626:	b082      	sub	sp, #8
 800d628:	af00      	add	r7, sp, #0
 800d62a:	6078      	str	r0, [r7, #4]
 800d62c:	4a05      	ldr	r2, [pc, #20]	; (800d644 <_ZN8touchgfx21AbstractPainterRGB565D1Ev+0x20>)
 800d62e:	687b      	ldr	r3, [r7, #4]
 800d630:	601a      	str	r2, [r3, #0]
 800d632:	687b      	ldr	r3, [r7, #4]
 800d634:	4618      	mov	r0, r3
 800d636:	f7ff ff0b 	bl	800d450 <_ZN8touchgfx15AbstractPainterD1Ev>
 800d63a:	687b      	ldr	r3, [r7, #4]
 800d63c:	4618      	mov	r0, r3
 800d63e:	3708      	adds	r7, #8
 800d640:	46bd      	mov	sp, r7
 800d642:	bd80      	pop	{r7, pc}
 800d644:	0802ec94 	.word	0x0802ec94

0800d648 <_ZN8touchgfx21AbstractPainterRGB565D0Ev>:
 800d648:	b580      	push	{r7, lr}
 800d64a:	b082      	sub	sp, #8
 800d64c:	af00      	add	r7, sp, #0
 800d64e:	6078      	str	r0, [r7, #4]
 800d650:	6878      	ldr	r0, [r7, #4]
 800d652:	f7ff ffe7 	bl	800d624 <_ZN8touchgfx21AbstractPainterRGB565D1Ev>
 800d656:	2108      	movs	r1, #8
 800d658:	6878      	ldr	r0, [r7, #4]
 800d65a:	f01c fe7e 	bl	802a35a <_ZdlPvj>
 800d65e:	687b      	ldr	r3, [r7, #4]
 800d660:	4618      	mov	r0, r3
 800d662:	3708      	adds	r7, #8
 800d664:	46bd      	mov	sp, r7
 800d666:	bd80      	pop	{r7, pc}

0800d668 <_ZN8touchgfx13PainterRGB565C1ENS_9colortypeE>:
    /**
     * Initializes a new instance of the PainterRGB565 class.
     *
     * @param  color (Optional) the color, default is black.
     */
    PainterRGB565(colortype color = 0)
 800d668:	b580      	push	{r7, lr}
 800d66a:	b082      	sub	sp, #8
 800d66c:	af00      	add	r7, sp, #0
 800d66e:	6078      	str	r0, [r7, #4]
 800d670:	6039      	str	r1, [r7, #0]
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 800d672:	687b      	ldr	r3, [r7, #4]
 800d674:	4618      	mov	r0, r3
 800d676:	f7ff ff77 	bl	800d568 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 800d67a:	687b      	ldr	r3, [r7, #4]
 800d67c:	3308      	adds	r3, #8
 800d67e:	6839      	ldr	r1, [r7, #0]
 800d680:	4618      	mov	r0, r3
 800d682:	f7ff ff2b 	bl	800d4dc <_ZN8touchgfx20AbstractPainterColorC1ENS_9colortypeE>
 800d686:	4a05      	ldr	r2, [pc, #20]	; (800d69c <_ZN8touchgfx13PainterRGB565C1ENS_9colortypeE+0x34>)
 800d688:	687b      	ldr	r3, [r7, #4]
 800d68a:	601a      	str	r2, [r3, #0]
 800d68c:	4a04      	ldr	r2, [pc, #16]	; (800d6a0 <_ZN8touchgfx13PainterRGB565C1ENS_9colortypeE+0x38>)
 800d68e:	687b      	ldr	r3, [r7, #4]
 800d690:	609a      	str	r2, [r3, #8]
    {
    }
 800d692:	687b      	ldr	r3, [r7, #4]
 800d694:	4618      	mov	r0, r3
 800d696:	3708      	adds	r7, #8
 800d698:	46bd      	mov	sp, r7
 800d69a:	bd80      	pop	{r7, pc}
 800d69c:	0802f7bc 	.word	0x0802f7bc
 800d6a0:	0802f7e0 	.word	0x0802f7e0

0800d6a4 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE>:

    virtual void setColor(colortype color)
 800d6a4:	b590      	push	{r4, r7, lr}
 800d6a6:	b085      	sub	sp, #20
 800d6a8:	af00      	add	r7, sp, #0
 800d6aa:	6078      	str	r0, [r7, #4]
 800d6ac:	6039      	str	r1, [r7, #0]
    {
        AbstractPainterColor::setColor(color);
 800d6ae:	687b      	ldr	r3, [r7, #4]
 800d6b0:	3308      	adds	r3, #8
 800d6b2:	6839      	ldr	r1, [r7, #0]
 800d6b4:	4618      	mov	r0, r3
 800d6b6:	f7ff ff49 	bl	800d54c <_ZN8touchgfx20AbstractPainterColor8setColorENS_9colortypeE>
 800d6ba:	687b      	ldr	r3, [r7, #4]
 800d6bc:	68db      	ldr	r3, [r3, #12]
 800d6be:	60fb      	str	r3, [r7, #12]
     *
     * @return The color representation depending on LCD color format.
     */
    FORCE_INLINE_FUNCTION static uint16_t getNativeColor(colortype color)
    {
        return ((color >> 8) & 0xF800) | ((color >> 5) & 0x07E0) | ((color >> 3) & 0x001F);
 800d6c0:	f107 030c 	add.w	r3, r7, #12
 800d6c4:	4618      	mov	r0, r3
 800d6c6:	f7ff fe08 	bl	800d2da <_ZNK8touchgfx9colortypecvmEv>
 800d6ca:	4603      	mov	r3, r0
 800d6cc:	0a1b      	lsrs	r3, r3, #8
 800d6ce:	b29b      	uxth	r3, r3
 800d6d0:	f423 63ff 	bic.w	r3, r3, #2040	; 0x7f8
 800d6d4:	f023 0307 	bic.w	r3, r3, #7
 800d6d8:	b29c      	uxth	r4, r3
 800d6da:	f107 030c 	add.w	r3, r7, #12
 800d6de:	4618      	mov	r0, r3
 800d6e0:	f7ff fdfb 	bl	800d2da <_ZNK8touchgfx9colortypecvmEv>
 800d6e4:	4603      	mov	r3, r0
 800d6e6:	095b      	lsrs	r3, r3, #5
 800d6e8:	b29b      	uxth	r3, r3
 800d6ea:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 800d6ee:	b29b      	uxth	r3, r3
 800d6f0:	4323      	orrs	r3, r4
 800d6f2:	b29c      	uxth	r4, r3
 800d6f4:	f107 030c 	add.w	r3, r7, #12
 800d6f8:	4618      	mov	r0, r3
 800d6fa:	f7ff fdee 	bl	800d2da <_ZNK8touchgfx9colortypecvmEv>
 800d6fe:	4603      	mov	r3, r0
 800d700:	08db      	lsrs	r3, r3, #3
 800d702:	b29b      	uxth	r3, r3
 800d704:	f003 031f 	and.w	r3, r3, #31
 800d708:	b29b      	uxth	r3, r3
 800d70a:	4323      	orrs	r3, r4
 800d70c:	b29a      	uxth	r2, r3
        color565 = LCD16bpp::getNativeColor(painterColor);
 800d70e:	687b      	ldr	r3, [r7, #4]
 800d710:	821a      	strh	r2, [r3, #16]
    }
 800d712:	bf00      	nop
 800d714:	3714      	adds	r7, #20
 800d716:	46bd      	mov	sp, r7
 800d718:	bd90      	pop	{r4, r7, pc}

0800d71a <_ZThn8_N8touchgfx13PainterRGB5658setColorENS_9colortypeE>:
    virtual void setColor(colortype color)
 800d71a:	f1a0 0008 	sub.w	r0, r0, #8
 800d71e:	e7c1      	b.n	800d6a4 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE>

0800d720 <_ZN16CustomContainer1D1Ev>:

class CustomContainer1 : public CustomContainer1Base
{
public:
    CustomContainer1();
    virtual ~CustomContainer1() {}
 800d720:	b580      	push	{r7, lr}
 800d722:	b082      	sub	sp, #8
 800d724:	af00      	add	r7, sp, #0
 800d726:	6078      	str	r0, [r7, #4]
 800d728:	4a05      	ldr	r2, [pc, #20]	; (800d740 <_ZN16CustomContainer1D1Ev+0x20>)
 800d72a:	687b      	ldr	r3, [r7, #4]
 800d72c:	601a      	str	r2, [r3, #0]
 800d72e:	687b      	ldr	r3, [r7, #4]
 800d730:	4618      	mov	r0, r3
 800d732:	f7ff fa15 	bl	800cb60 <_ZN20CustomContainer1BaseD1Ev>
 800d736:	687b      	ldr	r3, [r7, #4]
 800d738:	4618      	mov	r0, r3
 800d73a:	3708      	adds	r7, #8
 800d73c:	46bd      	mov	sp, r7
 800d73e:	bd80      	pop	{r7, pc}
 800d740:	0802ee2c 	.word	0x0802ee2c

0800d744 <_ZN16CustomContainer1D0Ev>:
 800d744:	b580      	push	{r7, lr}
 800d746:	b082      	sub	sp, #8
 800d748:	af00      	add	r7, sp, #0
 800d74a:	6078      	str	r0, [r7, #4]
 800d74c:	6878      	ldr	r0, [r7, #4]
 800d74e:	f7ff ffe7 	bl	800d720 <_ZN16CustomContainer1D1Ev>
 800d752:	f44f 7109 	mov.w	r1, #548	; 0x224
 800d756:	6878      	ldr	r0, [r7, #4]
 800d758:	f01c fdff 	bl	802a35a <_ZdlPvj>
 800d75c:	687b      	ldr	r3, [r7, #4]
 800d75e:	4618      	mov	r0, r3
 800d760:	3708      	adds	r7, #8
 800d762:	46bd      	mov	sp, r7
 800d764:	bd80      	pop	{r7, pc}

0800d766 <_ZN15Screen1ViewBase18Update_temperatureEv>:
    virtual void handleTickEvent();

    /*
     * Virtual Action Handlers
     */
    virtual void Update_temperature()
 800d766:	b480      	push	{r7}
 800d768:	b083      	sub	sp, #12
 800d76a:	af00      	add	r7, sp, #0
 800d76c:	6078      	str	r0, [r7, #4]
    {
        // Override and implement this function in Screen1
    }
 800d76e:	bf00      	nop
 800d770:	370c      	adds	r7, #12
 800d772:	46bd      	mov	sp, r7
 800d774:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d778:	4770      	bx	lr
	...

0800d77c <_ZN8touchgfx4ViewI16Screen1PresenterED1Ev>:
class View : public Screen
 800d77c:	b580      	push	{r7, lr}
 800d77e:	b082      	sub	sp, #8
 800d780:	af00      	add	r7, sp, #0
 800d782:	6078      	str	r0, [r7, #4]
 800d784:	4a05      	ldr	r2, [pc, #20]	; (800d79c <_ZN8touchgfx4ViewI16Screen1PresenterED1Ev+0x20>)
 800d786:	687b      	ldr	r3, [r7, #4]
 800d788:	601a      	str	r2, [r3, #0]
 800d78a:	687b      	ldr	r3, [r7, #4]
 800d78c:	4618      	mov	r0, r3
 800d78e:	f7ff fde3 	bl	800d358 <_ZN8touchgfx6ScreenD1Ev>
 800d792:	687b      	ldr	r3, [r7, #4]
 800d794:	4618      	mov	r0, r3
 800d796:	3708      	adds	r7, #8
 800d798:	46bd      	mov	sp, r7
 800d79a:	bd80      	pop	{r7, pc}
 800d79c:	0802ec60 	.word	0x0802ec60

0800d7a0 <_ZN8touchgfx4ViewI16Screen1PresenterED0Ev>:
 800d7a0:	b580      	push	{r7, lr}
 800d7a2:	b082      	sub	sp, #8
 800d7a4:	af00      	add	r7, sp, #0
 800d7a6:	6078      	str	r0, [r7, #4]
 800d7a8:	6878      	ldr	r0, [r7, #4]
 800d7aa:	f7ff ffe7 	bl	800d77c <_ZN8touchgfx4ViewI16Screen1PresenterED1Ev>
 800d7ae:	2140      	movs	r1, #64	; 0x40
 800d7b0:	6878      	ldr	r0, [r7, #4]
 800d7b2:	f01c fdd2 	bl	802a35a <_ZdlPvj>
 800d7b6:	687b      	ldr	r3, [r7, #4]
 800d7b8:	4618      	mov	r0, r3
 800d7ba:	3708      	adds	r7, #8
 800d7bc:	46bd      	mov	sp, r7
 800d7be:	bd80      	pop	{r7, pc}

0800d7c0 <_ZN15Screen1ViewBaseC1Ev>:
#include <touchgfx/canvas_widget_renderer/CanvasWidgetRenderer.hpp>
#include <touchgfx/Color.hpp>
#include <images/BitmapDatabase.hpp>
#include <texts/TextKeysAndLanguages.hpp>

Screen1ViewBase::Screen1ViewBase() :
 800d7c0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800d7c4:	b0c4      	sub	sp, #272	; 0x110
 800d7c6:	af02      	add	r7, sp, #8
 800d7c8:	6178      	str	r0, [r7, #20]
    flexButtonCallback(this, &Screen1ViewBase::flexButtonCallbackHandler)
 800d7ca:	697b      	ldr	r3, [r7, #20]
 800d7cc:	4618      	mov	r0, r3
 800d7ce:	f000 fee7 	bl	800e5a0 <_ZN8touchgfx4ViewI16Screen1PresenterEC1Ev>
 800d7d2:	4ae3      	ldr	r2, [pc, #908]	; (800db60 <_ZN15Screen1ViewBaseC1Ev+0x3a0>)
 800d7d4:	697b      	ldr	r3, [r7, #20]
 800d7d6:	601a      	str	r2, [r3, #0]
 800d7d8:	697b      	ldr	r3, [r7, #20]
 800d7da:	3340      	adds	r3, #64	; 0x40
 800d7dc:	4618      	mov	r0, r3
 800d7de:	f7fe fac9 	bl	800bd74 <_ZN8touchgfx3BoxC1Ev>
 800d7e2:	697b      	ldr	r3, [r7, #20]
 800d7e4:	336c      	adds	r3, #108	; 0x6c
 800d7e6:	4618      	mov	r0, r3
 800d7e8:	f7fe fac4 	bl	800bd74 <_ZN8touchgfx3BoxC1Ev>
 800d7ec:	697b      	ldr	r3, [r7, #20]
 800d7ee:	3398      	adds	r3, #152	; 0x98
 800d7f0:	4618      	mov	r0, r3
 800d7f2:	f004 fc4f 	bl	8012094 <_ZN8touchgfx14CircleProgressC1Ev>
 800d7f6:	697b      	ldr	r3, [r7, #20]
 800d7f8:	f503 74cc 	add.w	r4, r3, #408	; 0x198
 800d7fc:	f107 0320 	add.w	r3, r7, #32
 800d800:	2100      	movs	r1, #0
 800d802:	4618      	mov	r0, r3
 800d804:	f7fe f80e 	bl	800b824 <_ZN8touchgfx9colortypeC1Em>
 800d808:	6a39      	ldr	r1, [r7, #32]
 800d80a:	4620      	mov	r0, r4
 800d80c:	f7ff ff2c 	bl	800d668 <_ZN8touchgfx13PainterRGB565C1ENS_9colortypeE>
 800d810:	697b      	ldr	r3, [r7, #20]
 800d812:	f503 73d6 	add.w	r3, r3, #428	; 0x1ac
 800d816:	4618      	mov	r0, r3
 800d818:	f000 fed8 	bl	800e5cc <_ZN8touchgfx23WildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev>
 800d81c:	697b      	ldr	r3, [r7, #20]
 800d81e:	f503 731e 	add.w	r3, r3, #632	; 0x278
 800d822:	4618      	mov	r0, r3
 800d824:	f001 fca4 	bl	800f170 <_ZN16CustomContainer1C1Ev>
 800d828:	697b      	ldr	r3, [r7, #20]
 800d82a:	f203 439c 	addw	r3, r3, #1180	; 0x49c
 800d82e:	4618      	mov	r0, r3
 800d830:	f000 fef4 	bl	800e61c <_ZN8touchgfx15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev>
 800d834:	697b      	ldr	r3, [r7, #20]
 800d836:	f203 5364 	addw	r3, r3, #1380	; 0x564
 800d83a:	4618      	mov	r0, r3
 800d83c:	f000 feee 	bl	800e61c <_ZN8touchgfx15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev>
 800d840:	697b      	ldr	r3, [r7, #20]
 800d842:	f203 632c 	addw	r3, r3, #1580	; 0x62c
 800d846:	4618      	mov	r0, r3
 800d848:	f004 fce0 	bl	801220c <_ZN8touchgfx12LineProgressC1Ev>
 800d84c:	697b      	ldr	r3, [r7, #20]
 800d84e:	f503 64ec 	add.w	r4, r3, #1888	; 0x760
 800d852:	f107 0324 	add.w	r3, r7, #36	; 0x24
 800d856:	2100      	movs	r1, #0
 800d858:	4618      	mov	r0, r3
 800d85a:	f7fd ffe3 	bl	800b824 <_ZN8touchgfx9colortypeC1Em>
 800d85e:	6a79      	ldr	r1, [r7, #36]	; 0x24
 800d860:	4620      	mov	r0, r4
 800d862:	f7ff ff01 	bl	800d668 <_ZN8touchgfx13PainterRGB565C1ENS_9colortypeE>
 800d866:	697b      	ldr	r3, [r7, #20]
 800d868:	f203 7374 	addw	r3, r3, #1908	; 0x774
 800d86c:	4618      	mov	r0, r3
 800d86e:	f7fe fe69 	bl	800c544 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 800d872:	697b      	ldr	r3, [r7, #20]
 800d874:	f503 5010 	add.w	r0, r3, #9216	; 0x2400
 800d878:	3008      	adds	r0, #8
 800d87a:	4bba      	ldr	r3, [pc, #744]	; (800db64 <_ZN15Screen1ViewBaseC1Ev+0x3a4>)
 800d87c:	62bb      	str	r3, [r7, #40]	; 0x28
 800d87e:	2300      	movs	r3, #0
 800d880:	62fb      	str	r3, [r7, #44]	; 0x2c
 800d882:	f107 0328 	add.w	r3, r7, #40	; 0x28
 800d886:	cb0c      	ldmia	r3, {r2, r3}
 800d888:	6979      	ldr	r1, [r7, #20]
 800d88a:	f000 feef 	bl	800e66c <_ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_23AbstractButtonContainerEvvEC1EPS1_MS1_FvS4_E>
{
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 800d88e:	697b      	ldr	r3, [r7, #20]
 800d890:	f503 63fd 	add.w	r3, r3, #2024	; 0x7e8
 800d894:	f44f 51e1 	mov.w	r1, #7200	; 0x1c20
 800d898:	4618      	mov	r0, r3
 800d89a:	f008 fd6f 	bl	801637c <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    
    __background.setPosition(0, 0, 480, 320);
 800d89e:	697b      	ldr	r3, [r7, #20]
 800d8a0:	f103 0040 	add.w	r0, r3, #64	; 0x40
 800d8a4:	f44f 73a0 	mov.w	r3, #320	; 0x140
 800d8a8:	9300      	str	r3, [sp, #0]
 800d8aa:	f44f 73f0 	mov.w	r3, #480	; 0x1e0
 800d8ae:	2200      	movs	r2, #0
 800d8b0:	2100      	movs	r1, #0
 800d8b2:	f7fe f887 	bl	800b9c4 <_ZN8touchgfx8Drawable11setPositionEssss>
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
 800d8b6:	697b      	ldr	r3, [r7, #20]
 800d8b8:	f103 0440 	add.w	r4, r3, #64	; 0x40
 800d8bc:	2300      	movs	r3, #0
 800d8be:	f887 30b9 	strb.w	r3, [r7, #185]	; 0xb9
 800d8c2:	2300      	movs	r3, #0
 800d8c4:	f887 30b8 	strb.w	r3, [r7, #184]	; 0xb8
 800d8c8:	2300      	movs	r3, #0
 800d8ca:	f887 30b7 	strb.w	r3, [r7, #183]	; 0xb7
 800d8ce:	f897 30b9 	ldrb.w	r3, [r7, #185]	; 0xb9
 800d8d2:	041b      	lsls	r3, r3, #16
 800d8d4:	461a      	mov	r2, r3
 800d8d6:	f897 30b8 	ldrb.w	r3, [r7, #184]	; 0xb8
 800d8da:	021b      	lsls	r3, r3, #8
 800d8dc:	431a      	orrs	r2, r3
 800d8de:	f897 30b7 	ldrb.w	r3, [r7, #183]	; 0xb7
 800d8e2:	4313      	orrs	r3, r2
 800d8e4:	f043 427f 	orr.w	r2, r3, #4278190080	; 0xff000000
 800d8e8:	f107 03b0 	add.w	r3, r7, #176	; 0xb0
 800d8ec:	4611      	mov	r1, r2
 800d8ee:	4618      	mov	r0, r3
 800d8f0:	f7fd ff98 	bl	800b824 <_ZN8touchgfx9colortypeC1Em>
 800d8f4:	f8d7 30b0 	ldr.w	r3, [r7, #176]	; 0xb0
 800d8f8:	4619      	mov	r1, r3
 800d8fa:	4620      	mov	r0, r4
 800d8fc:	f7fe fa5e 	bl	800bdbc <_ZN8touchgfx3Box8setColorENS_9colortypeE>
    add(__background);
 800d900:	697a      	ldr	r2, [r7, #20]
 800d902:	697b      	ldr	r3, [r7, #20]
 800d904:	3340      	adds	r3, #64	; 0x40
 800d906:	4619      	mov	r1, r3
 800d908:	4610      	mov	r0, r2
 800d90a:	f7ff fd7d 	bl	800d408 <_ZN8touchgfx6Screen3addERNS_8DrawableE>

    box1.setPosition(0, 0, 480, 320);
 800d90e:	697b      	ldr	r3, [r7, #20]
 800d910:	f103 006c 	add.w	r0, r3, #108	; 0x6c
 800d914:	f44f 73a0 	mov.w	r3, #320	; 0x140
 800d918:	9300      	str	r3, [sp, #0]
 800d91a:	f44f 73f0 	mov.w	r3, #480	; 0x1e0
 800d91e:	2200      	movs	r2, #0
 800d920:	2100      	movs	r1, #0
 800d922:	f7fe f84f 	bl	800b9c4 <_ZN8touchgfx8Drawable11setPositionEssss>
    box1.setColor(touchgfx::Color::getColorFromRGB(32, 32, 32));
 800d926:	697b      	ldr	r3, [r7, #20]
 800d928:	f103 046c 	add.w	r4, r3, #108	; 0x6c
 800d92c:	2320      	movs	r3, #32
 800d92e:	f887 30bc 	strb.w	r3, [r7, #188]	; 0xbc
 800d932:	2320      	movs	r3, #32
 800d934:	f887 30bb 	strb.w	r3, [r7, #187]	; 0xbb
 800d938:	2320      	movs	r3, #32
 800d93a:	f887 30ba 	strb.w	r3, [r7, #186]	; 0xba
 800d93e:	f897 30bc 	ldrb.w	r3, [r7, #188]	; 0xbc
 800d942:	041b      	lsls	r3, r3, #16
 800d944:	461a      	mov	r2, r3
 800d946:	f897 30bb 	ldrb.w	r3, [r7, #187]	; 0xbb
 800d94a:	021b      	lsls	r3, r3, #8
 800d94c:	431a      	orrs	r2, r3
 800d94e:	f897 30ba 	ldrb.w	r3, [r7, #186]	; 0xba
 800d952:	4313      	orrs	r3, r2
 800d954:	f043 427f 	orr.w	r2, r3, #4278190080	; 0xff000000
 800d958:	f107 03ac 	add.w	r3, r7, #172	; 0xac
 800d95c:	4611      	mov	r1, r2
 800d95e:	4618      	mov	r0, r3
 800d960:	f7fd ff60 	bl	800b824 <_ZN8touchgfx9colortypeC1Em>
 800d964:	f8d7 30ac 	ldr.w	r3, [r7, #172]	; 0xac
 800d968:	4619      	mov	r1, r3
 800d96a:	4620      	mov	r0, r4
 800d96c:	f7fe fa26 	bl	800bdbc <_ZN8touchgfx3Box8setColorENS_9colortypeE>
    add(box1);
 800d970:	697a      	ldr	r2, [r7, #20]
 800d972:	697b      	ldr	r3, [r7, #20]
 800d974:	336c      	adds	r3, #108	; 0x6c
 800d976:	4619      	mov	r1, r3
 800d978:	4610      	mov	r0, r2
 800d97a:	f7ff fd45 	bl	800d408 <_ZN8touchgfx6Screen3addERNS_8DrawableE>

    circleProgress1.setXY(16, 8);
 800d97e:	697b      	ldr	r3, [r7, #20]
 800d980:	3398      	adds	r3, #152	; 0x98
 800d982:	2208      	movs	r2, #8
 800d984:	2110      	movs	r1, #16
 800d986:	4618      	mov	r0, r3
 800d988:	f7fe f875 	bl	800ba76 <_ZN8touchgfx8Drawable5setXYEss>
    circleProgress1.setProgressIndicatorPosition(0, 0, 110, 110);
 800d98c:	697b      	ldr	r3, [r7, #20]
 800d98e:	f103 0098 	add.w	r0, r3, #152	; 0x98
 800d992:	236e      	movs	r3, #110	; 0x6e
 800d994:	9300      	str	r3, [sp, #0]
 800d996:	236e      	movs	r3, #110	; 0x6e
 800d998:	2200      	movs	r2, #0
 800d99a:	2100      	movs	r1, #0
 800d99c:	f004 fb1e 	bl	8011fdc <_ZN8touchgfx14CircleProgress28setProgressIndicatorPositionEssss>
    circleProgress1.setRange(0, 100);
 800d9a0:	697b      	ldr	r3, [r7, #20]
 800d9a2:	f103 0098 	add.w	r0, r3, #152	; 0x98
 800d9a6:	2300      	movs	r3, #0
 800d9a8:	9300      	str	r3, [sp, #0]
 800d9aa:	2300      	movs	r3, #0
 800d9ac:	2264      	movs	r2, #100	; 0x64
 800d9ae:	2100      	movs	r1, #0
 800d9b0:	f004 fc5e 	bl	8012270 <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt>
    circleProgress1.setCenter(55, 55);
 800d9b4:	697b      	ldr	r3, [r7, #20]
 800d9b6:	3398      	adds	r3, #152	; 0x98
 800d9b8:	2237      	movs	r2, #55	; 0x37
 800d9ba:	2137      	movs	r1, #55	; 0x37
 800d9bc:	4618      	mov	r0, r3
 800d9be:	f004 fab8 	bl	8011f32 <_ZN8touchgfx14CircleProgress9setCenterEii>
    circleProgress1.setRadius(50);
 800d9c2:	697b      	ldr	r3, [r7, #20]
 800d9c4:	3398      	adds	r3, #152	; 0x98
 800d9c6:	2132      	movs	r1, #50	; 0x32
 800d9c8:	4618      	mov	r0, r3
 800d9ca:	f004 fadc 	bl	8011f86 <_ZN8touchgfx14CircleProgress9setRadiusEi>
    circleProgress1.setLineWidth(10);
 800d9ce:	697b      	ldr	r3, [r7, #20]
 800d9d0:	3398      	adds	r3, #152	; 0x98
 800d9d2:	210a      	movs	r1, #10
 800d9d4:	4618      	mov	r0, r3
 800d9d6:	f004 fadc 	bl	8011f92 <_ZN8touchgfx14CircleProgress12setLineWidthEi>
    circleProgress1.setStartEndAngle(0, 360);
 800d9da:	697b      	ldr	r3, [r7, #20]
 800d9dc:	3398      	adds	r3, #152	; 0x98
 800d9de:	f44f 72b4 	mov.w	r2, #360	; 0x168
 800d9e2:	2100      	movs	r1, #0
 800d9e4:	4618      	mov	r0, r3
 800d9e6:	f004 fb42 	bl	801206e <_ZN8touchgfx14CircleProgress16setStartEndAngleEii>
    circleProgress1.setCapPrecision(180);
 800d9ea:	697b      	ldr	r3, [r7, #20]
 800d9ec:	3398      	adds	r3, #152	; 0x98
 800d9ee:	21b4      	movs	r1, #180	; 0xb4
 800d9f0:	4618      	mov	r0, r3
 800d9f2:	f004 fad4 	bl	8011f9e <_ZN8touchgfx14CircleProgress15setCapPrecisionEi>
    circleProgress1.setBackground(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_CIRCLEPROGRESS_BACKGROUNDS_SMALL_ID));
 800d9f6:	697b      	ldr	r3, [r7, #20]
 800d9f8:	f103 0498 	add.w	r4, r3, #152	; 0x98
 800d9fc:	f107 0330 	add.w	r3, r7, #48	; 0x30
 800da00:	2100      	movs	r1, #0
 800da02:	4618      	mov	r0, r3
 800da04:	f7fd ff54 	bl	800b8b0 <_ZN8touchgfx6BitmapC1Et>
 800da08:	f107 0330 	add.w	r3, r7, #48	; 0x30
 800da0c:	4619      	mov	r1, r3
 800da0e:	4620      	mov	r0, r4
 800da10:	f004 fd54 	bl	80124bc <_ZN8touchgfx25AbstractProgressIndicator13setBackgroundERKNS_6BitmapE>
    circleProgress1Painter.setColor(touchgfx::Color::getColorFromRGB(52, 232, 204));
 800da14:	697b      	ldr	r3, [r7, #20]
 800da16:	f503 74cc 	add.w	r4, r3, #408	; 0x198
 800da1a:	2334      	movs	r3, #52	; 0x34
 800da1c:	f887 30bf 	strb.w	r3, [r7, #191]	; 0xbf
 800da20:	23e8      	movs	r3, #232	; 0xe8
 800da22:	f887 30be 	strb.w	r3, [r7, #190]	; 0xbe
 800da26:	23cc      	movs	r3, #204	; 0xcc
 800da28:	f887 30bd 	strb.w	r3, [r7, #189]	; 0xbd
 800da2c:	f897 30bf 	ldrb.w	r3, [r7, #191]	; 0xbf
 800da30:	041b      	lsls	r3, r3, #16
 800da32:	461a      	mov	r2, r3
 800da34:	f897 30be 	ldrb.w	r3, [r7, #190]	; 0xbe
 800da38:	021b      	lsls	r3, r3, #8
 800da3a:	431a      	orrs	r2, r3
 800da3c:	f897 30bd 	ldrb.w	r3, [r7, #189]	; 0xbd
 800da40:	4313      	orrs	r3, r2
 800da42:	f043 427f 	orr.w	r2, r3, #4278190080	; 0xff000000
 800da46:	f107 03a8 	add.w	r3, r7, #168	; 0xa8
 800da4a:	4611      	mov	r1, r2
 800da4c:	4618      	mov	r0, r3
 800da4e:	f7fd fee9 	bl	800b824 <_ZN8touchgfx9colortypeC1Em>
 800da52:	f8d7 30a8 	ldr.w	r3, [r7, #168]	; 0xa8
 800da56:	4619      	mov	r1, r3
 800da58:	4620      	mov	r0, r4
 800da5a:	f7ff fe23 	bl	800d6a4 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE>
    circleProgress1.setPainter(circleProgress1Painter);
 800da5e:	697b      	ldr	r3, [r7, #20]
 800da60:	f103 0298 	add.w	r2, r3, #152	; 0x98
 800da64:	697b      	ldr	r3, [r7, #20]
 800da66:	f503 73cc 	add.w	r3, r3, #408	; 0x198
 800da6a:	4619      	mov	r1, r3
 800da6c:	4610      	mov	r0, r2
 800da6e:	f004 fa5d 	bl	8011f2c <_ZN8touchgfx14CircleProgress10setPainterERNS_15AbstractPainterE>
    circleProgress1.setValue(60);
 800da72:	697b      	ldr	r3, [r7, #20]
 800da74:	3398      	adds	r3, #152	; 0x98
 800da76:	213c      	movs	r1, #60	; 0x3c
 800da78:	4618      	mov	r0, r3
 800da7a:	f004 fadc 	bl	8012036 <_ZN8touchgfx14CircleProgress8setValueEi>
    add(circleProgress1);
 800da7e:	697a      	ldr	r2, [r7, #20]
 800da80:	697b      	ldr	r3, [r7, #20]
 800da82:	3398      	adds	r3, #152	; 0x98
 800da84:	4619      	mov	r1, r3
 800da86:	4610      	mov	r0, r2
 800da88:	f7ff fcbe 	bl	800d408 <_ZN8touchgfx6Screen3addERNS_8DrawableE>

    flexButton1.setBoxWithBorderPosition(0, 0, 71, 50);
 800da8c:	697b      	ldr	r3, [r7, #20]
 800da8e:	f503 70d6 	add.w	r0, r3, #428	; 0x1ac
 800da92:	2332      	movs	r3, #50	; 0x32
 800da94:	9300      	str	r3, [sp, #0]
 800da96:	2347      	movs	r3, #71	; 0x47
 800da98:	2200      	movs	r2, #0
 800da9a:	2100      	movs	r1, #0
 800da9c:	f7ff f97c 	bl	800cd98 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE24setBoxWithBorderPositionEssss>
    flexButton1.setBorderSize(5);
 800daa0:	697b      	ldr	r3, [r7, #20]
 800daa2:	f503 73d6 	add.w	r3, r3, #428	; 0x1ac
 800daa6:	2105      	movs	r1, #5
 800daa8:	4618      	mov	r0, r3
 800daaa:	f7ff f995 	bl	800cdd8 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE13setBorderSizeEh>
    flexButton1.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(32, 32, 32), touchgfx::Color::getColorFromRGB(32, 32, 32), touchgfx::Color::getColorFromRGB(32, 32, 32), touchgfx::Color::getColorFromRGB(32, 32, 32));
 800daae:	697b      	ldr	r3, [r7, #20]
 800dab0:	f503 74d6 	add.w	r4, r3, #428	; 0x1ac
 800dab4:	2320      	movs	r3, #32
 800dab6:	f887 30c2 	strb.w	r3, [r7, #194]	; 0xc2
 800daba:	2320      	movs	r3, #32
 800dabc:	f887 30c1 	strb.w	r3, [r7, #193]	; 0xc1
 800dac0:	2320      	movs	r3, #32
 800dac2:	f887 30c0 	strb.w	r3, [r7, #192]	; 0xc0
 800dac6:	f897 30c2 	ldrb.w	r3, [r7, #194]	; 0xc2
 800daca:	041b      	lsls	r3, r3, #16
 800dacc:	461a      	mov	r2, r3
 800dace:	f897 30c1 	ldrb.w	r3, [r7, #193]	; 0xc1
 800dad2:	021b      	lsls	r3, r3, #8
 800dad4:	431a      	orrs	r2, r3
 800dad6:	f897 30c0 	ldrb.w	r3, [r7, #192]	; 0xc0
 800dada:	4313      	orrs	r3, r2
 800dadc:	f043 427f 	orr.w	r2, r3, #4278190080	; 0xff000000
 800dae0:	f107 03a4 	add.w	r3, r7, #164	; 0xa4
 800dae4:	4611      	mov	r1, r2
 800dae6:	4618      	mov	r0, r3
 800dae8:	f7fd fe9c 	bl	800b824 <_ZN8touchgfx9colortypeC1Em>
 800daec:	f8d7 30a4 	ldr.w	r3, [r7, #164]	; 0xa4
 800daf0:	461d      	mov	r5, r3
 800daf2:	2320      	movs	r3, #32
 800daf4:	f887 30c5 	strb.w	r3, [r7, #197]	; 0xc5
 800daf8:	2320      	movs	r3, #32
 800dafa:	f887 30c4 	strb.w	r3, [r7, #196]	; 0xc4
 800dafe:	2320      	movs	r3, #32
 800db00:	f887 30c3 	strb.w	r3, [r7, #195]	; 0xc3
 800db04:	f897 30c5 	ldrb.w	r3, [r7, #197]	; 0xc5
 800db08:	041b      	lsls	r3, r3, #16
 800db0a:	461a      	mov	r2, r3
 800db0c:	f897 30c4 	ldrb.w	r3, [r7, #196]	; 0xc4
 800db10:	021b      	lsls	r3, r3, #8
 800db12:	431a      	orrs	r2, r3
 800db14:	f897 30c3 	ldrb.w	r3, [r7, #195]	; 0xc3
 800db18:	4313      	orrs	r3, r2
 800db1a:	f043 427f 	orr.w	r2, r3, #4278190080	; 0xff000000
 800db1e:	f107 03a0 	add.w	r3, r7, #160	; 0xa0
 800db22:	4611      	mov	r1, r2
 800db24:	4618      	mov	r0, r3
 800db26:	f7fd fe7d 	bl	800b824 <_ZN8touchgfx9colortypeC1Em>
 800db2a:	f8d7 30a0 	ldr.w	r3, [r7, #160]	; 0xa0
 800db2e:	461e      	mov	r6, r3
 800db30:	2320      	movs	r3, #32
 800db32:	f887 30c8 	strb.w	r3, [r7, #200]	; 0xc8
 800db36:	2320      	movs	r3, #32
 800db38:	f887 30c7 	strb.w	r3, [r7, #199]	; 0xc7
 800db3c:	2320      	movs	r3, #32
 800db3e:	f887 30c6 	strb.w	r3, [r7, #198]	; 0xc6
 800db42:	f897 30c8 	ldrb.w	r3, [r7, #200]	; 0xc8
 800db46:	041b      	lsls	r3, r3, #16
 800db48:	461a      	mov	r2, r3
 800db4a:	f897 30c7 	ldrb.w	r3, [r7, #199]	; 0xc7
 800db4e:	021b      	lsls	r3, r3, #8
 800db50:	431a      	orrs	r2, r3
 800db52:	f897 30c6 	ldrb.w	r3, [r7, #198]	; 0xc6
 800db56:	4313      	orrs	r3, r2
 800db58:	f043 427f 	orr.w	r2, r3, #4278190080	; 0xff000000
 800db5c:	e004      	b.n	800db68 <_ZN15Screen1ViewBaseC1Ev+0x3a8>
 800db5e:	bf00      	nop
 800db60:	0802ead8 	.word	0x0802ead8
 800db64:	0800e47f 	.word	0x0800e47f
 800db68:	f107 039c 	add.w	r3, r7, #156	; 0x9c
 800db6c:	4611      	mov	r1, r2
 800db6e:	4618      	mov	r0, r3
 800db70:	f7fd fe58 	bl	800b824 <_ZN8touchgfx9colortypeC1Em>
 800db74:	f8d7 309c 	ldr.w	r3, [r7, #156]	; 0x9c
 800db78:	4698      	mov	r8, r3
 800db7a:	2320      	movs	r3, #32
 800db7c:	f887 30cb 	strb.w	r3, [r7, #203]	; 0xcb
 800db80:	2320      	movs	r3, #32
 800db82:	f887 30ca 	strb.w	r3, [r7, #202]	; 0xca
 800db86:	2320      	movs	r3, #32
 800db88:	f887 30c9 	strb.w	r3, [r7, #201]	; 0xc9
 800db8c:	f897 30cb 	ldrb.w	r3, [r7, #203]	; 0xcb
 800db90:	041b      	lsls	r3, r3, #16
 800db92:	461a      	mov	r2, r3
 800db94:	f897 30ca 	ldrb.w	r3, [r7, #202]	; 0xca
 800db98:	021b      	lsls	r3, r3, #8
 800db9a:	431a      	orrs	r2, r3
 800db9c:	f897 30c9 	ldrb.w	r3, [r7, #201]	; 0xc9
 800dba0:	4313      	orrs	r3, r2
 800dba2:	f043 427f 	orr.w	r2, r3, #4278190080	; 0xff000000
 800dba6:	f107 0398 	add.w	r3, r7, #152	; 0x98
 800dbaa:	4611      	mov	r1, r2
 800dbac:	4618      	mov	r0, r3
 800dbae:	f7fd fe39 	bl	800b824 <_ZN8touchgfx9colortypeC1Em>
 800dbb2:	f8d7 3098 	ldr.w	r3, [r7, #152]	; 0x98
 800dbb6:	9300      	str	r3, [sp, #0]
 800dbb8:	4643      	mov	r3, r8
 800dbba:	4632      	mov	r2, r6
 800dbbc:	4629      	mov	r1, r5
 800dbbe:	4620      	mov	r0, r4
 800dbc0:	f7ff f91c 	bl	800cdfc <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
    flexButton1.setWildcardText(TypedText(T___SINGLEUSE_9QSJ));
 800dbc4:	697b      	ldr	r3, [r7, #20]
 800dbc6:	f503 74d6 	add.w	r4, r3, #428	; 0x1ac
 800dbca:	f107 0334 	add.w	r3, r7, #52	; 0x34
 800dbce:	2104      	movs	r1, #4
 800dbd0:	4618      	mov	r0, r3
 800dbd2:	f7fe faef 	bl	800c1b4 <_ZN8touchgfx9TypedTextC1Et>
 800dbd6:	f107 0334 	add.w	r3, r7, #52	; 0x34
 800dbda:	4619      	mov	r1, r3
 800dbdc:	4620      	mov	r0, r4
 800dbde:	f000 fd65 	bl	800e6ac <_ZN8touchgfx23WildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE15setWildcardTextENS_9TypedTextE>
 800dbe2:	f107 0334 	add.w	r3, r7, #52	; 0x34
 800dbe6:	4618      	mov	r0, r3
 800dbe8:	f7fc fe24 	bl	800a834 <_ZN8touchgfx9TypedTextD1Ev>
    flexButton1Buffer[0] = 0;
 800dbec:	697b      	ldr	r3, [r7, #20]
 800dbee:	2200      	movs	r2, #0
 800dbf0:	f8a3 27c0 	strh.w	r2, [r3, #1984]	; 0x7c0
    flexButton1.setWildcardTextBuffer(flexButton1Buffer);
 800dbf4:	697b      	ldr	r3, [r7, #20]
 800dbf6:	f503 72d6 	add.w	r2, r3, #428	; 0x1ac
 800dbfa:	697b      	ldr	r3, [r7, #20]
 800dbfc:	f503 63f8 	add.w	r3, r3, #1984	; 0x7c0
 800dc00:	4619      	mov	r1, r3
 800dc02:	4610      	mov	r0, r2
 800dc04:	f000 fd74 	bl	800e6f0 <_ZN8touchgfx23WildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE21setWildcardTextBufferEPKt>
    flexButton1.setWildcardTextPosition(0, 11, 71, 50);
 800dc08:	697b      	ldr	r3, [r7, #20]
 800dc0a:	f503 70d6 	add.w	r0, r3, #428	; 0x1ac
 800dc0e:	2332      	movs	r3, #50	; 0x32
 800dc10:	9300      	str	r3, [sp, #0]
 800dc12:	2347      	movs	r3, #71	; 0x47
 800dc14:	220b      	movs	r2, #11
 800dc16:	2100      	movs	r1, #0
 800dc18:	f000 fd79 	bl	800e70e <_ZN8touchgfx23WildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE23setWildcardTextPositionEssss>
    flexButton1.setWildcardTextColors(touchgfx::Color::getColorFromRGB(52, 232, 204), touchgfx::Color::getColorFromRGB(52, 232, 204));
 800dc1c:	697b      	ldr	r3, [r7, #20]
 800dc1e:	f503 74d6 	add.w	r4, r3, #428	; 0x1ac
 800dc22:	2334      	movs	r3, #52	; 0x34
 800dc24:	f887 30ce 	strb.w	r3, [r7, #206]	; 0xce
 800dc28:	23e8      	movs	r3, #232	; 0xe8
 800dc2a:	f887 30cd 	strb.w	r3, [r7, #205]	; 0xcd
 800dc2e:	23cc      	movs	r3, #204	; 0xcc
 800dc30:	f887 30cc 	strb.w	r3, [r7, #204]	; 0xcc
 800dc34:	f897 30ce 	ldrb.w	r3, [r7, #206]	; 0xce
 800dc38:	041b      	lsls	r3, r3, #16
 800dc3a:	461a      	mov	r2, r3
 800dc3c:	f897 30cd 	ldrb.w	r3, [r7, #205]	; 0xcd
 800dc40:	021b      	lsls	r3, r3, #8
 800dc42:	431a      	orrs	r2, r3
 800dc44:	f897 30cc 	ldrb.w	r3, [r7, #204]	; 0xcc
 800dc48:	4313      	orrs	r3, r2
 800dc4a:	f043 427f 	orr.w	r2, r3, #4278190080	; 0xff000000
 800dc4e:	f107 0394 	add.w	r3, r7, #148	; 0x94
 800dc52:	4611      	mov	r1, r2
 800dc54:	4618      	mov	r0, r3
 800dc56:	f7fd fde5 	bl	800b824 <_ZN8touchgfx9colortypeC1Em>
 800dc5a:	f8d7 3094 	ldr.w	r3, [r7, #148]	; 0x94
 800dc5e:	461d      	mov	r5, r3
 800dc60:	2334      	movs	r3, #52	; 0x34
 800dc62:	f887 30d1 	strb.w	r3, [r7, #209]	; 0xd1
 800dc66:	23e8      	movs	r3, #232	; 0xe8
 800dc68:	f887 30d0 	strb.w	r3, [r7, #208]	; 0xd0
 800dc6c:	23cc      	movs	r3, #204	; 0xcc
 800dc6e:	f887 30cf 	strb.w	r3, [r7, #207]	; 0xcf
 800dc72:	f897 30d1 	ldrb.w	r3, [r7, #209]	; 0xd1
 800dc76:	041b      	lsls	r3, r3, #16
 800dc78:	461a      	mov	r2, r3
 800dc7a:	f897 30d0 	ldrb.w	r3, [r7, #208]	; 0xd0
 800dc7e:	021b      	lsls	r3, r3, #8
 800dc80:	431a      	orrs	r2, r3
 800dc82:	f897 30cf 	ldrb.w	r3, [r7, #207]	; 0xcf
 800dc86:	4313      	orrs	r3, r2
 800dc88:	f043 427f 	orr.w	r2, r3, #4278190080	; 0xff000000
 800dc8c:	f107 0390 	add.w	r3, r7, #144	; 0x90
 800dc90:	4611      	mov	r1, r2
 800dc92:	4618      	mov	r0, r3
 800dc94:	f7fd fdc6 	bl	800b824 <_ZN8touchgfx9colortypeC1Em>
 800dc98:	f8d7 3090 	ldr.w	r3, [r7, #144]	; 0x90
 800dc9c:	461a      	mov	r2, r3
 800dc9e:	4629      	mov	r1, r5
 800dca0:	4620      	mov	r0, r4
 800dca2:	f000 fd54 	bl	800e74e <_ZN8touchgfx23WildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE21setWildcardTextColorsENS_9colortypeES5_>
    flexButton1.setAction(flexButtonCallback);
 800dca6:	697b      	ldr	r3, [r7, #20]
 800dca8:	f503 72d6 	add.w	r2, r3, #428	; 0x1ac
 800dcac:	697b      	ldr	r3, [r7, #20]
 800dcae:	f503 5310 	add.w	r3, r3, #9216	; 0x2400
 800dcb2:	3308      	adds	r3, #8
 800dcb4:	4619      	mov	r1, r3
 800dcb6:	4610      	mov	r0, r2
 800dcb8:	f7fe f96c 	bl	800bf94 <_ZN8touchgfx23AbstractButtonContainer9setActionERNS_15GenericCallbackIRKS0_vvEE>
    flexButton1.setPosition(37, 38, 71, 50);
 800dcbc:	697b      	ldr	r3, [r7, #20]
 800dcbe:	f503 70d6 	add.w	r0, r3, #428	; 0x1ac
 800dcc2:	2332      	movs	r3, #50	; 0x32
 800dcc4:	9300      	str	r3, [sp, #0]
 800dcc6:	2347      	movs	r3, #71	; 0x47
 800dcc8:	2226      	movs	r2, #38	; 0x26
 800dcca:	2125      	movs	r1, #37	; 0x25
 800dccc:	f7fd fe7a 	bl	800b9c4 <_ZN8touchgfx8Drawable11setPositionEssss>
    add(flexButton1);
 800dcd0:	697a      	ldr	r2, [r7, #20]
 800dcd2:	697b      	ldr	r3, [r7, #20]
 800dcd4:	f503 73d6 	add.w	r3, r3, #428	; 0x1ac
 800dcd8:	4619      	mov	r1, r3
 800dcda:	4610      	mov	r0, r2
 800dcdc:	f7ff fb94 	bl	800d408 <_ZN8touchgfx6Screen3addERNS_8DrawableE>

    customContainer11.setXY(74, 49);
 800dce0:	697b      	ldr	r3, [r7, #20]
 800dce2:	f503 731e 	add.w	r3, r3, #632	; 0x278
 800dce6:	2231      	movs	r2, #49	; 0x31
 800dce8:	214a      	movs	r1, #74	; 0x4a
 800dcea:	4618      	mov	r0, r3
 800dcec:	f7fd fec3 	bl	800ba76 <_ZN8touchgfx8Drawable5setXYEss>
    customContainer11.setVisible(false);
 800dcf0:	697b      	ldr	r3, [r7, #20]
 800dcf2:	f503 731e 	add.w	r3, r3, #632	; 0x278
 800dcf6:	2100      	movs	r1, #0
 800dcf8:	4618      	mov	r0, r3
 800dcfa:	f7ff fb11 	bl	800d320 <_ZN8touchgfx8Drawable10setVisibleEb>
    add(customContainer11);
 800dcfe:	697a      	ldr	r2, [r7, #20]
 800dd00:	697b      	ldr	r3, [r7, #20]
 800dd02:	f503 731e 	add.w	r3, r3, #632	; 0x278
 800dd06:	4619      	mov	r1, r3
 800dd08:	4610      	mov	r0, r2
 800dd0a:	f7ff fb7d 	bl	800d408 <_ZN8touchgfx6Screen3addERNS_8DrawableE>

    OK_button_1.setBoxWithBorderPosition(0, 0, 85, 43);
 800dd0e:	697b      	ldr	r3, [r7, #20]
 800dd10:	f203 409c 	addw	r0, r3, #1180	; 0x49c
 800dd14:	232b      	movs	r3, #43	; 0x2b
 800dd16:	9300      	str	r3, [sp, #0]
 800dd18:	2355      	movs	r3, #85	; 0x55
 800dd1a:	2200      	movs	r2, #0
 800dd1c:	2100      	movs	r1, #0
 800dd1e:	f7ff f83b 	bl	800cd98 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE24setBoxWithBorderPositionEssss>
    OK_button_1.setBorderSize(2);
 800dd22:	697b      	ldr	r3, [r7, #20]
 800dd24:	f203 439c 	addw	r3, r3, #1180	; 0x49c
 800dd28:	2102      	movs	r1, #2
 800dd2a:	4618      	mov	r0, r3
 800dd2c:	f7ff f854 	bl	800cdd8 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE13setBorderSizeEh>
    OK_button_1.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(52, 232, 204), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(9, 122, 103), touchgfx::Color::getColorFromRGB(51, 102, 153));
 800dd30:	697b      	ldr	r3, [r7, #20]
 800dd32:	f203 449c 	addw	r4, r3, #1180	; 0x49c
 800dd36:	2334      	movs	r3, #52	; 0x34
 800dd38:	f887 30d4 	strb.w	r3, [r7, #212]	; 0xd4
 800dd3c:	23e8      	movs	r3, #232	; 0xe8
 800dd3e:	f887 30d3 	strb.w	r3, [r7, #211]	; 0xd3
 800dd42:	23cc      	movs	r3, #204	; 0xcc
 800dd44:	f887 30d2 	strb.w	r3, [r7, #210]	; 0xd2
 800dd48:	f897 30d4 	ldrb.w	r3, [r7, #212]	; 0xd4
 800dd4c:	041b      	lsls	r3, r3, #16
 800dd4e:	461a      	mov	r2, r3
 800dd50:	f897 30d3 	ldrb.w	r3, [r7, #211]	; 0xd3
 800dd54:	021b      	lsls	r3, r3, #8
 800dd56:	431a      	orrs	r2, r3
 800dd58:	f897 30d2 	ldrb.w	r3, [r7, #210]	; 0xd2
 800dd5c:	4313      	orrs	r3, r2
 800dd5e:	f043 427f 	orr.w	r2, r3, #4278190080	; 0xff000000
 800dd62:	f107 038c 	add.w	r3, r7, #140	; 0x8c
 800dd66:	4611      	mov	r1, r2
 800dd68:	4618      	mov	r0, r3
 800dd6a:	f7fd fd5b 	bl	800b824 <_ZN8touchgfx9colortypeC1Em>
 800dd6e:	f8d7 308c 	ldr.w	r3, [r7, #140]	; 0x8c
 800dd72:	461d      	mov	r5, r3
 800dd74:	2300      	movs	r3, #0
 800dd76:	f887 30d7 	strb.w	r3, [r7, #215]	; 0xd7
 800dd7a:	2399      	movs	r3, #153	; 0x99
 800dd7c:	f887 30d6 	strb.w	r3, [r7, #214]	; 0xd6
 800dd80:	23cc      	movs	r3, #204	; 0xcc
 800dd82:	f887 30d5 	strb.w	r3, [r7, #213]	; 0xd5
 800dd86:	f897 30d7 	ldrb.w	r3, [r7, #215]	; 0xd7
 800dd8a:	041b      	lsls	r3, r3, #16
 800dd8c:	461a      	mov	r2, r3
 800dd8e:	f897 30d6 	ldrb.w	r3, [r7, #214]	; 0xd6
 800dd92:	021b      	lsls	r3, r3, #8
 800dd94:	431a      	orrs	r2, r3
 800dd96:	f897 30d5 	ldrb.w	r3, [r7, #213]	; 0xd5
 800dd9a:	4313      	orrs	r3, r2
 800dd9c:	f043 427f 	orr.w	r2, r3, #4278190080	; 0xff000000
 800dda0:	f107 0388 	add.w	r3, r7, #136	; 0x88
 800dda4:	4611      	mov	r1, r2
 800dda6:	4618      	mov	r0, r3
 800dda8:	f7fd fd3c 	bl	800b824 <_ZN8touchgfx9colortypeC1Em>
 800ddac:	f8d7 3088 	ldr.w	r3, [r7, #136]	; 0x88
 800ddb0:	461e      	mov	r6, r3
 800ddb2:	2309      	movs	r3, #9
 800ddb4:	f887 30da 	strb.w	r3, [r7, #218]	; 0xda
 800ddb8:	237a      	movs	r3, #122	; 0x7a
 800ddba:	f887 30d9 	strb.w	r3, [r7, #217]	; 0xd9
 800ddbe:	2367      	movs	r3, #103	; 0x67
 800ddc0:	f887 30d8 	strb.w	r3, [r7, #216]	; 0xd8
 800ddc4:	f897 30da 	ldrb.w	r3, [r7, #218]	; 0xda
 800ddc8:	041b      	lsls	r3, r3, #16
 800ddca:	461a      	mov	r2, r3
 800ddcc:	f897 30d9 	ldrb.w	r3, [r7, #217]	; 0xd9
 800ddd0:	021b      	lsls	r3, r3, #8
 800ddd2:	431a      	orrs	r2, r3
 800ddd4:	f897 30d8 	ldrb.w	r3, [r7, #216]	; 0xd8
 800ddd8:	4313      	orrs	r3, r2
 800ddda:	f043 427f 	orr.w	r2, r3, #4278190080	; 0xff000000
 800ddde:	f107 0384 	add.w	r3, r7, #132	; 0x84
 800dde2:	4611      	mov	r1, r2
 800dde4:	4618      	mov	r0, r3
 800dde6:	f7fd fd1d 	bl	800b824 <_ZN8touchgfx9colortypeC1Em>
 800ddea:	f8d7 3084 	ldr.w	r3, [r7, #132]	; 0x84
 800ddee:	4698      	mov	r8, r3
 800ddf0:	2333      	movs	r3, #51	; 0x33
 800ddf2:	f887 30dd 	strb.w	r3, [r7, #221]	; 0xdd
 800ddf6:	2366      	movs	r3, #102	; 0x66
 800ddf8:	f887 30dc 	strb.w	r3, [r7, #220]	; 0xdc
 800ddfc:	2399      	movs	r3, #153	; 0x99
 800ddfe:	f887 30db 	strb.w	r3, [r7, #219]	; 0xdb
 800de02:	f897 30dd 	ldrb.w	r3, [r7, #221]	; 0xdd
 800de06:	041b      	lsls	r3, r3, #16
 800de08:	461a      	mov	r2, r3
 800de0a:	f897 30dc 	ldrb.w	r3, [r7, #220]	; 0xdc
 800de0e:	021b      	lsls	r3, r3, #8
 800de10:	431a      	orrs	r2, r3
 800de12:	f897 30db 	ldrb.w	r3, [r7, #219]	; 0xdb
 800de16:	4313      	orrs	r3, r2
 800de18:	f043 427f 	orr.w	r2, r3, #4278190080	; 0xff000000
 800de1c:	f107 0380 	add.w	r3, r7, #128	; 0x80
 800de20:	4611      	mov	r1, r2
 800de22:	4618      	mov	r0, r3
 800de24:	f7fd fcfe 	bl	800b824 <_ZN8touchgfx9colortypeC1Em>
 800de28:	f8d7 3080 	ldr.w	r3, [r7, #128]	; 0x80
 800de2c:	9300      	str	r3, [sp, #0]
 800de2e:	4643      	mov	r3, r8
 800de30:	4632      	mov	r2, r6
 800de32:	4629      	mov	r1, r5
 800de34:	4620      	mov	r0, r4
 800de36:	f7fe ffe1 	bl	800cdfc <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
    OK_button_1.setText(TypedText(T___SINGLEUSE_HR9W));
 800de3a:	697b      	ldr	r3, [r7, #20]
 800de3c:	f203 449c 	addw	r4, r3, #1180	; 0x49c
 800de40:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 800de44:	2103      	movs	r1, #3
 800de46:	4618      	mov	r0, r3
 800de48:	f7fe f9b4 	bl	800c1b4 <_ZN8touchgfx9TypedTextC1Et>
 800de4c:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 800de50:	4619      	mov	r1, r3
 800de52:	4620      	mov	r0, r4
 800de54:	f000 fc93 	bl	800e77e <_ZN8touchgfx15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE7setTextENS_9TypedTextE>
 800de58:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 800de5c:	4618      	mov	r0, r3
 800de5e:	f7fc fce9 	bl	800a834 <_ZN8touchgfx9TypedTextD1Ev>
    OK_button_1.setTextPosition(0, 11, 85, 43);
 800de62:	697b      	ldr	r3, [r7, #20]
 800de64:	f203 409c 	addw	r0, r3, #1180	; 0x49c
 800de68:	232b      	movs	r3, #43	; 0x2b
 800de6a:	9300      	str	r3, [sp, #0]
 800de6c:	2355      	movs	r3, #85	; 0x55
 800de6e:	220b      	movs	r2, #11
 800de70:	2100      	movs	r1, #0
 800de72:	f000 fc9a 	bl	800e7aa <_ZN8touchgfx15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE15setTextPositionEssss>
    OK_button_1.setTextColors(touchgfx::Color::getColorFromRGB(10, 10, 10), touchgfx::Color::getColorFromRGB(10, 10, 10));
 800de76:	697b      	ldr	r3, [r7, #20]
 800de78:	f203 449c 	addw	r4, r3, #1180	; 0x49c
 800de7c:	230a      	movs	r3, #10
 800de7e:	f887 30e0 	strb.w	r3, [r7, #224]	; 0xe0
 800de82:	230a      	movs	r3, #10
 800de84:	f887 30df 	strb.w	r3, [r7, #223]	; 0xdf
 800de88:	230a      	movs	r3, #10
 800de8a:	f887 30de 	strb.w	r3, [r7, #222]	; 0xde
 800de8e:	f897 30e0 	ldrb.w	r3, [r7, #224]	; 0xe0
 800de92:	041b      	lsls	r3, r3, #16
 800de94:	461a      	mov	r2, r3
 800de96:	f897 30df 	ldrb.w	r3, [r7, #223]	; 0xdf
 800de9a:	021b      	lsls	r3, r3, #8
 800de9c:	431a      	orrs	r2, r3
 800de9e:	f897 30de 	ldrb.w	r3, [r7, #222]	; 0xde
 800dea2:	4313      	orrs	r3, r2
 800dea4:	f043 427f 	orr.w	r2, r3, #4278190080	; 0xff000000
 800dea8:	f107 037c 	add.w	r3, r7, #124	; 0x7c
 800deac:	4611      	mov	r1, r2
 800deae:	4618      	mov	r0, r3
 800deb0:	f7fd fcb8 	bl	800b824 <_ZN8touchgfx9colortypeC1Em>
 800deb4:	6ffb      	ldr	r3, [r7, #124]	; 0x7c
 800deb6:	461d      	mov	r5, r3
 800deb8:	230a      	movs	r3, #10
 800deba:	f887 30e3 	strb.w	r3, [r7, #227]	; 0xe3
 800debe:	230a      	movs	r3, #10
 800dec0:	f887 30e2 	strb.w	r3, [r7, #226]	; 0xe2
 800dec4:	230a      	movs	r3, #10
 800dec6:	f887 30e1 	strb.w	r3, [r7, #225]	; 0xe1
 800deca:	f897 30e3 	ldrb.w	r3, [r7, #227]	; 0xe3
 800dece:	041b      	lsls	r3, r3, #16
 800ded0:	461a      	mov	r2, r3
 800ded2:	f897 30e2 	ldrb.w	r3, [r7, #226]	; 0xe2
 800ded6:	021b      	lsls	r3, r3, #8
 800ded8:	431a      	orrs	r2, r3
 800deda:	f897 30e1 	ldrb.w	r3, [r7, #225]	; 0xe1
 800dede:	4313      	orrs	r3, r2
 800dee0:	f043 427f 	orr.w	r2, r3, #4278190080	; 0xff000000
 800dee4:	f107 0378 	add.w	r3, r7, #120	; 0x78
 800dee8:	4611      	mov	r1, r2
 800deea:	4618      	mov	r0, r3
 800deec:	f7fd fc9a 	bl	800b824 <_ZN8touchgfx9colortypeC1Em>
 800def0:	6fbb      	ldr	r3, [r7, #120]	; 0x78
 800def2:	461a      	mov	r2, r3
 800def4:	4629      	mov	r1, r5
 800def6:	4620      	mov	r0, r4
 800def8:	f000 fc77 	bl	800e7ea <_ZN8touchgfx15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE13setTextColorsENS_9colortypeES5_>
    OK_button_1.setVisible(false);
 800defc:	697b      	ldr	r3, [r7, #20]
 800defe:	f203 439c 	addw	r3, r3, #1180	; 0x49c
 800df02:	2100      	movs	r1, #0
 800df04:	4618      	mov	r0, r3
 800df06:	f7ff fa0b 	bl	800d320 <_ZN8touchgfx8Drawable10setVisibleEb>
    OK_button_1.setAction(flexButtonCallback);
 800df0a:	697b      	ldr	r3, [r7, #20]
 800df0c:	f203 429c 	addw	r2, r3, #1180	; 0x49c
 800df10:	697b      	ldr	r3, [r7, #20]
 800df12:	f503 5310 	add.w	r3, r3, #9216	; 0x2400
 800df16:	3308      	adds	r3, #8
 800df18:	4619      	mov	r1, r3
 800df1a:	4610      	mov	r0, r2
 800df1c:	f7fe f83a 	bl	800bf94 <_ZN8touchgfx23AbstractButtonContainer9setActionERNS_15GenericCallbackIRKS0_vvEE>
    OK_button_1.setPosition(126, 221, 85, 43);
 800df20:	697b      	ldr	r3, [r7, #20]
 800df22:	f203 409c 	addw	r0, r3, #1180	; 0x49c
 800df26:	232b      	movs	r3, #43	; 0x2b
 800df28:	9300      	str	r3, [sp, #0]
 800df2a:	2355      	movs	r3, #85	; 0x55
 800df2c:	22dd      	movs	r2, #221	; 0xdd
 800df2e:	217e      	movs	r1, #126	; 0x7e
 800df30:	f7fd fd48 	bl	800b9c4 <_ZN8touchgfx8Drawable11setPositionEssss>
    add(OK_button_1);
 800df34:	697a      	ldr	r2, [r7, #20]
 800df36:	697b      	ldr	r3, [r7, #20]
 800df38:	f203 439c 	addw	r3, r3, #1180	; 0x49c
 800df3c:	4619      	mov	r1, r3
 800df3e:	4610      	mov	r0, r2
 800df40:	f7ff fa62 	bl	800d408 <_ZN8touchgfx6Screen3addERNS_8DrawableE>

    Cancel_button_1.setBoxWithBorderPosition(0, 0, 80, 43);
 800df44:	697b      	ldr	r3, [r7, #20]
 800df46:	f203 5064 	addw	r0, r3, #1380	; 0x564
 800df4a:	232b      	movs	r3, #43	; 0x2b
 800df4c:	9300      	str	r3, [sp, #0]
 800df4e:	2350      	movs	r3, #80	; 0x50
 800df50:	2200      	movs	r2, #0
 800df52:	2100      	movs	r1, #0
 800df54:	f7fe ff20 	bl	800cd98 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE24setBoxWithBorderPositionEssss>
    Cancel_button_1.setBorderSize(2);
 800df58:	697b      	ldr	r3, [r7, #20]
 800df5a:	f203 5364 	addw	r3, r3, #1380	; 0x564
 800df5e:	2102      	movs	r1, #2
 800df60:	4618      	mov	r0, r3
 800df62:	f7fe ff39 	bl	800cdd8 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE13setBorderSizeEh>
    Cancel_button_1.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(52, 232, 204), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(9, 122, 103), touchgfx::Color::getColorFromRGB(51, 102, 153));
 800df66:	697b      	ldr	r3, [r7, #20]
 800df68:	f203 5464 	addw	r4, r3, #1380	; 0x564
 800df6c:	2334      	movs	r3, #52	; 0x34
 800df6e:	f887 30e6 	strb.w	r3, [r7, #230]	; 0xe6
 800df72:	23e8      	movs	r3, #232	; 0xe8
 800df74:	f887 30e5 	strb.w	r3, [r7, #229]	; 0xe5
 800df78:	23cc      	movs	r3, #204	; 0xcc
 800df7a:	f887 30e4 	strb.w	r3, [r7, #228]	; 0xe4
 800df7e:	f897 30e6 	ldrb.w	r3, [r7, #230]	; 0xe6
 800df82:	041b      	lsls	r3, r3, #16
 800df84:	461a      	mov	r2, r3
 800df86:	f897 30e5 	ldrb.w	r3, [r7, #229]	; 0xe5
 800df8a:	021b      	lsls	r3, r3, #8
 800df8c:	431a      	orrs	r2, r3
 800df8e:	f897 30e4 	ldrb.w	r3, [r7, #228]	; 0xe4
 800df92:	4313      	orrs	r3, r2
 800df94:	f043 427f 	orr.w	r2, r3, #4278190080	; 0xff000000
 800df98:	f107 0374 	add.w	r3, r7, #116	; 0x74
 800df9c:	4611      	mov	r1, r2
 800df9e:	4618      	mov	r0, r3
 800dfa0:	f7fd fc40 	bl	800b824 <_ZN8touchgfx9colortypeC1Em>
 800dfa4:	6f7b      	ldr	r3, [r7, #116]	; 0x74
 800dfa6:	461d      	mov	r5, r3
 800dfa8:	2300      	movs	r3, #0
 800dfaa:	f887 30e9 	strb.w	r3, [r7, #233]	; 0xe9
 800dfae:	2399      	movs	r3, #153	; 0x99
 800dfb0:	f887 30e8 	strb.w	r3, [r7, #232]	; 0xe8
 800dfb4:	23cc      	movs	r3, #204	; 0xcc
 800dfb6:	f887 30e7 	strb.w	r3, [r7, #231]	; 0xe7
 800dfba:	f897 30e9 	ldrb.w	r3, [r7, #233]	; 0xe9
 800dfbe:	041b      	lsls	r3, r3, #16
 800dfc0:	461a      	mov	r2, r3
 800dfc2:	f897 30e8 	ldrb.w	r3, [r7, #232]	; 0xe8
 800dfc6:	021b      	lsls	r3, r3, #8
 800dfc8:	431a      	orrs	r2, r3
 800dfca:	f897 30e7 	ldrb.w	r3, [r7, #231]	; 0xe7
 800dfce:	4313      	orrs	r3, r2
 800dfd0:	f043 427f 	orr.w	r2, r3, #4278190080	; 0xff000000
 800dfd4:	f107 0370 	add.w	r3, r7, #112	; 0x70
 800dfd8:	4611      	mov	r1, r2
 800dfda:	4618      	mov	r0, r3
 800dfdc:	f7fd fc22 	bl	800b824 <_ZN8touchgfx9colortypeC1Em>
 800dfe0:	6f3b      	ldr	r3, [r7, #112]	; 0x70
 800dfe2:	461e      	mov	r6, r3
 800dfe4:	2309      	movs	r3, #9
 800dfe6:	f887 30ec 	strb.w	r3, [r7, #236]	; 0xec
 800dfea:	237a      	movs	r3, #122	; 0x7a
 800dfec:	f887 30eb 	strb.w	r3, [r7, #235]	; 0xeb
 800dff0:	2367      	movs	r3, #103	; 0x67
 800dff2:	f887 30ea 	strb.w	r3, [r7, #234]	; 0xea
 800dff6:	f897 30ec 	ldrb.w	r3, [r7, #236]	; 0xec
 800dffa:	041b      	lsls	r3, r3, #16
 800dffc:	461a      	mov	r2, r3
 800dffe:	f897 30eb 	ldrb.w	r3, [r7, #235]	; 0xeb
 800e002:	021b      	lsls	r3, r3, #8
 800e004:	431a      	orrs	r2, r3
 800e006:	f897 30ea 	ldrb.w	r3, [r7, #234]	; 0xea
 800e00a:	4313      	orrs	r3, r2
 800e00c:	f043 427f 	orr.w	r2, r3, #4278190080	; 0xff000000
 800e010:	f107 036c 	add.w	r3, r7, #108	; 0x6c
 800e014:	4611      	mov	r1, r2
 800e016:	4618      	mov	r0, r3
 800e018:	f7fd fc04 	bl	800b824 <_ZN8touchgfx9colortypeC1Em>
 800e01c:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 800e01e:	4698      	mov	r8, r3
 800e020:	2333      	movs	r3, #51	; 0x33
 800e022:	f887 30ef 	strb.w	r3, [r7, #239]	; 0xef
 800e026:	2366      	movs	r3, #102	; 0x66
 800e028:	f887 30ee 	strb.w	r3, [r7, #238]	; 0xee
 800e02c:	2399      	movs	r3, #153	; 0x99
 800e02e:	f887 30ed 	strb.w	r3, [r7, #237]	; 0xed
 800e032:	f897 30ef 	ldrb.w	r3, [r7, #239]	; 0xef
 800e036:	041b      	lsls	r3, r3, #16
 800e038:	461a      	mov	r2, r3
 800e03a:	f897 30ee 	ldrb.w	r3, [r7, #238]	; 0xee
 800e03e:	021b      	lsls	r3, r3, #8
 800e040:	431a      	orrs	r2, r3
 800e042:	f897 30ed 	ldrb.w	r3, [r7, #237]	; 0xed
 800e046:	4313      	orrs	r3, r2
 800e048:	f043 427f 	orr.w	r2, r3, #4278190080	; 0xff000000
 800e04c:	f107 0368 	add.w	r3, r7, #104	; 0x68
 800e050:	4611      	mov	r1, r2
 800e052:	4618      	mov	r0, r3
 800e054:	f7fd fbe6 	bl	800b824 <_ZN8touchgfx9colortypeC1Em>
 800e058:	6ebb      	ldr	r3, [r7, #104]	; 0x68
 800e05a:	9300      	str	r3, [sp, #0]
 800e05c:	4643      	mov	r3, r8
 800e05e:	4632      	mov	r2, r6
 800e060:	4629      	mov	r1, r5
 800e062:	4620      	mov	r0, r4
 800e064:	f7fe feca 	bl	800cdfc <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
    Cancel_button_1.setText(TypedText(T___SINGLEUSE_TZ5Y));
 800e068:	697b      	ldr	r3, [r7, #20]
 800e06a:	f203 5464 	addw	r4, r3, #1380	; 0x564
 800e06e:	f107 0344 	add.w	r3, r7, #68	; 0x44
 800e072:	2102      	movs	r1, #2
 800e074:	4618      	mov	r0, r3
 800e076:	f7fe f89d 	bl	800c1b4 <_ZN8touchgfx9TypedTextC1Et>
 800e07a:	f107 0344 	add.w	r3, r7, #68	; 0x44
 800e07e:	4619      	mov	r1, r3
 800e080:	4620      	mov	r0, r4
 800e082:	f000 fb7c 	bl	800e77e <_ZN8touchgfx15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE7setTextENS_9TypedTextE>
 800e086:	f107 0344 	add.w	r3, r7, #68	; 0x44
 800e08a:	4618      	mov	r0, r3
 800e08c:	f7fc fbd2 	bl	800a834 <_ZN8touchgfx9TypedTextD1Ev>
    Cancel_button_1.setTextPosition(0, 11, 80, 43);
 800e090:	697b      	ldr	r3, [r7, #20]
 800e092:	f203 5064 	addw	r0, r3, #1380	; 0x564
 800e096:	232b      	movs	r3, #43	; 0x2b
 800e098:	9300      	str	r3, [sp, #0]
 800e09a:	2350      	movs	r3, #80	; 0x50
 800e09c:	220b      	movs	r2, #11
 800e09e:	2100      	movs	r1, #0
 800e0a0:	f000 fb83 	bl	800e7aa <_ZN8touchgfx15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE15setTextPositionEssss>
    Cancel_button_1.setTextColors(touchgfx::Color::getColorFromRGB(10, 10, 10), touchgfx::Color::getColorFromRGB(10, 10, 10));
 800e0a4:	697b      	ldr	r3, [r7, #20]
 800e0a6:	f203 5464 	addw	r4, r3, #1380	; 0x564
 800e0aa:	230a      	movs	r3, #10
 800e0ac:	f887 30f2 	strb.w	r3, [r7, #242]	; 0xf2
 800e0b0:	230a      	movs	r3, #10
 800e0b2:	f887 30f1 	strb.w	r3, [r7, #241]	; 0xf1
 800e0b6:	230a      	movs	r3, #10
 800e0b8:	f887 30f0 	strb.w	r3, [r7, #240]	; 0xf0
 800e0bc:	f897 30f2 	ldrb.w	r3, [r7, #242]	; 0xf2
 800e0c0:	041b      	lsls	r3, r3, #16
 800e0c2:	461a      	mov	r2, r3
 800e0c4:	f897 30f1 	ldrb.w	r3, [r7, #241]	; 0xf1
 800e0c8:	021b      	lsls	r3, r3, #8
 800e0ca:	431a      	orrs	r2, r3
 800e0cc:	f897 30f0 	ldrb.w	r3, [r7, #240]	; 0xf0
 800e0d0:	4313      	orrs	r3, r2
 800e0d2:	f043 427f 	orr.w	r2, r3, #4278190080	; 0xff000000
 800e0d6:	f107 0364 	add.w	r3, r7, #100	; 0x64
 800e0da:	4611      	mov	r1, r2
 800e0dc:	4618      	mov	r0, r3
 800e0de:	f7fd fba1 	bl	800b824 <_ZN8touchgfx9colortypeC1Em>
 800e0e2:	6e7b      	ldr	r3, [r7, #100]	; 0x64
 800e0e4:	461d      	mov	r5, r3
 800e0e6:	230a      	movs	r3, #10
 800e0e8:	f887 30f5 	strb.w	r3, [r7, #245]	; 0xf5
 800e0ec:	230a      	movs	r3, #10
 800e0ee:	f887 30f4 	strb.w	r3, [r7, #244]	; 0xf4
 800e0f2:	230a      	movs	r3, #10
 800e0f4:	f887 30f3 	strb.w	r3, [r7, #243]	; 0xf3
 800e0f8:	f897 30f5 	ldrb.w	r3, [r7, #245]	; 0xf5
 800e0fc:	041b      	lsls	r3, r3, #16
 800e0fe:	461a      	mov	r2, r3
 800e100:	f897 30f4 	ldrb.w	r3, [r7, #244]	; 0xf4
 800e104:	021b      	lsls	r3, r3, #8
 800e106:	431a      	orrs	r2, r3
 800e108:	f897 30f3 	ldrb.w	r3, [r7, #243]	; 0xf3
 800e10c:	4313      	orrs	r3, r2
 800e10e:	f043 427f 	orr.w	r2, r3, #4278190080	; 0xff000000
 800e112:	f107 0360 	add.w	r3, r7, #96	; 0x60
 800e116:	4611      	mov	r1, r2
 800e118:	4618      	mov	r0, r3
 800e11a:	f7fd fb83 	bl	800b824 <_ZN8touchgfx9colortypeC1Em>
 800e11e:	6e3b      	ldr	r3, [r7, #96]	; 0x60
 800e120:	461a      	mov	r2, r3
 800e122:	4629      	mov	r1, r5
 800e124:	4620      	mov	r0, r4
 800e126:	f000 fb60 	bl	800e7ea <_ZN8touchgfx15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE13setTextColorsENS_9colortypeES5_>
    Cancel_button_1.setVisible(false);
 800e12a:	697b      	ldr	r3, [r7, #20]
 800e12c:	f203 5364 	addw	r3, r3, #1380	; 0x564
 800e130:	2100      	movs	r1, #0
 800e132:	4618      	mov	r0, r3
 800e134:	f7ff f8f4 	bl	800d320 <_ZN8touchgfx8Drawable10setVisibleEb>
    Cancel_button_1.setAction(flexButtonCallback);
 800e138:	697b      	ldr	r3, [r7, #20]
 800e13a:	f203 5264 	addw	r2, r3, #1380	; 0x564
 800e13e:	697b      	ldr	r3, [r7, #20]
 800e140:	f503 5310 	add.w	r3, r3, #9216	; 0x2400
 800e144:	3308      	adds	r3, #8
 800e146:	4619      	mov	r1, r3
 800e148:	4610      	mov	r0, r2
 800e14a:	f7fd ff23 	bl	800bf94 <_ZN8touchgfx23AbstractButtonContainer9setActionERNS_15GenericCallbackIRKS0_vvEE>
    Cancel_button_1.setPosition(275, 221, 80, 43);
 800e14e:	697b      	ldr	r3, [r7, #20]
 800e150:	f203 5064 	addw	r0, r3, #1380	; 0x564
 800e154:	232b      	movs	r3, #43	; 0x2b
 800e156:	9300      	str	r3, [sp, #0]
 800e158:	2350      	movs	r3, #80	; 0x50
 800e15a:	22dd      	movs	r2, #221	; 0xdd
 800e15c:	f240 1113 	movw	r1, #275	; 0x113
 800e160:	f7fd fc30 	bl	800b9c4 <_ZN8touchgfx8Drawable11setPositionEssss>
    add(Cancel_button_1);
 800e164:	697a      	ldr	r2, [r7, #20]
 800e166:	697b      	ldr	r3, [r7, #20]
 800e168:	f203 5364 	addw	r3, r3, #1380	; 0x564
 800e16c:	4619      	mov	r1, r3
 800e16e:	4610      	mov	r0, r2
 800e170:	f7ff f94a 	bl	800d408 <_ZN8touchgfx6Screen3addERNS_8DrawableE>

    lineProgress1.setXY(33, 179);
 800e174:	697b      	ldr	r3, [r7, #20]
 800e176:	f203 632c 	addw	r3, r3, #1580	; 0x62c
 800e17a:	22b3      	movs	r2, #179	; 0xb3
 800e17c:	2121      	movs	r1, #33	; 0x21
 800e17e:	4618      	mov	r0, r3
 800e180:	f7fd fc79 	bl	800ba76 <_ZN8touchgfx8Drawable5setXYEss>
    lineProgress1.setProgressIndicatorPosition(0, 0, 10, 100);
 800e184:	697b      	ldr	r3, [r7, #20]
 800e186:	f203 602c 	addw	r0, r3, #1580	; 0x62c
 800e18a:	2364      	movs	r3, #100	; 0x64
 800e18c:	9300      	str	r3, [sp, #0]
 800e18e:	230a      	movs	r3, #10
 800e190:	2200      	movs	r2, #0
 800e192:	2100      	movs	r1, #0
 800e194:	f004 f820 	bl	80121d8 <_ZN8touchgfx12LineProgress28setProgressIndicatorPositionEssss>
    lineProgress1.setRange(0, 100);
 800e198:	697b      	ldr	r3, [r7, #20]
 800e19a:	f203 602c 	addw	r0, r3, #1580	; 0x62c
 800e19e:	2300      	movs	r3, #0
 800e1a0:	9300      	str	r3, [sp, #0]
 800e1a2:	2300      	movs	r3, #0
 800e1a4:	2264      	movs	r2, #100	; 0x64
 800e1a6:	2100      	movs	r1, #0
 800e1a8:	f004 f862 	bl	8012270 <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt>
    lineProgress1.setBackground(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_LINEPROGRESS_BACKGROUNDS_IMAGE_PLAIN_NORMAL_TINY_90_ID));
 800e1ac:	697b      	ldr	r3, [r7, #20]
 800e1ae:	f203 642c 	addw	r4, r3, #1580	; 0x62c
 800e1b2:	f107 034c 	add.w	r3, r7, #76	; 0x4c
 800e1b6:	2101      	movs	r1, #1
 800e1b8:	4618      	mov	r0, r3
 800e1ba:	f7fd fb79 	bl	800b8b0 <_ZN8touchgfx6BitmapC1Et>
 800e1be:	f107 034c 	add.w	r3, r7, #76	; 0x4c
 800e1c2:	4619      	mov	r1, r3
 800e1c4:	4620      	mov	r0, r4
 800e1c6:	f004 f979 	bl	80124bc <_ZN8touchgfx25AbstractProgressIndicator13setBackgroundERKNS_6BitmapE>
    lineProgress1Painter.setColor(touchgfx::Color::getColorFromRGB(52, 232, 204));
 800e1ca:	697b      	ldr	r3, [r7, #20]
 800e1cc:	f503 64ec 	add.w	r4, r3, #1888	; 0x760
 800e1d0:	2334      	movs	r3, #52	; 0x34
 800e1d2:	f887 30f8 	strb.w	r3, [r7, #248]	; 0xf8
 800e1d6:	23e8      	movs	r3, #232	; 0xe8
 800e1d8:	f887 30f7 	strb.w	r3, [r7, #247]	; 0xf7
 800e1dc:	23cc      	movs	r3, #204	; 0xcc
 800e1de:	f887 30f6 	strb.w	r3, [r7, #246]	; 0xf6
 800e1e2:	f897 30f8 	ldrb.w	r3, [r7, #248]	; 0xf8
 800e1e6:	041b      	lsls	r3, r3, #16
 800e1e8:	461a      	mov	r2, r3
 800e1ea:	f897 30f7 	ldrb.w	r3, [r7, #247]	; 0xf7
 800e1ee:	021b      	lsls	r3, r3, #8
 800e1f0:	431a      	orrs	r2, r3
 800e1f2:	f897 30f6 	ldrb.w	r3, [r7, #246]	; 0xf6
 800e1f6:	4313      	orrs	r3, r2
 800e1f8:	f043 427f 	orr.w	r2, r3, #4278190080	; 0xff000000
 800e1fc:	f107 035c 	add.w	r3, r7, #92	; 0x5c
 800e200:	4611      	mov	r1, r2
 800e202:	4618      	mov	r0, r3
 800e204:	f7fd fb0e 	bl	800b824 <_ZN8touchgfx9colortypeC1Em>
 800e208:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 800e20a:	4619      	mov	r1, r3
 800e20c:	4620      	mov	r0, r4
 800e20e:	f7ff fa49 	bl	800d6a4 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE>
    lineProgress1.setPainter(lineProgress1Painter);
 800e212:	697b      	ldr	r3, [r7, #20]
 800e214:	f203 622c 	addw	r2, r3, #1580	; 0x62c
 800e218:	697b      	ldr	r3, [r7, #20]
 800e21a:	f503 63ec 	add.w	r3, r3, #1888	; 0x760
 800e21e:	4619      	mov	r1, r3
 800e220:	4610      	mov	r0, r2
 800e222:	f003 ff5f 	bl	80120e4 <_ZN8touchgfx12LineProgress10setPainterERNS_15AbstractPainterE>
    lineProgress1.setStart(5, 100);
 800e226:	697b      	ldr	r3, [r7, #20]
 800e228:	f203 632c 	addw	r3, r3, #1580	; 0x62c
 800e22c:	2264      	movs	r2, #100	; 0x64
 800e22e:	2105      	movs	r1, #5
 800e230:	4618      	mov	r0, r3
 800e232:	f003 ff81 	bl	8012138 <_ZN8touchgfx12LineProgress8setStartEii>
    lineProgress1.setEnd(5, 0);
 800e236:	697b      	ldr	r3, [r7, #20]
 800e238:	f203 632c 	addw	r3, r3, #1580	; 0x62c
 800e23c:	2200      	movs	r2, #0
 800e23e:	2105      	movs	r1, #5
 800e240:	4618      	mov	r0, r3
 800e242:	f003 ff5f 	bl	8012104 <_ZN8touchgfx12LineProgress6setEndEii>
    lineProgress1.setLineWidth(10);
 800e246:	697b      	ldr	r3, [r7, #20]
 800e248:	f203 632c 	addw	r3, r3, #1580	; 0x62c
 800e24c:	210a      	movs	r1, #10
 800e24e:	4618      	mov	r0, r3
 800e250:	f003 ff7b 	bl	801214a <_ZN8touchgfx12LineProgress12setLineWidthEi>
    lineProgress1.setLineEndingStyle(touchgfx::Line::BUTT_CAP_ENDING);
 800e254:	697b      	ldr	r3, [r7, #20]
 800e256:	f203 632c 	addw	r3, r3, #1580	; 0x62c
 800e25a:	2100      	movs	r1, #0
 800e25c:	4618      	mov	r0, r3
 800e25e:	f003 ff7f 	bl	8012160 <_ZN8touchgfx12LineProgress18setLineEndingStyleENS_4Line17LINE_ENDING_STYLEE>
    lineProgress1.setValue(60);
 800e262:	697b      	ldr	r3, [r7, #20]
 800e264:	f203 632c 	addw	r3, r3, #1580	; 0x62c
 800e268:	213c      	movs	r1, #60	; 0x3c
 800e26a:	4618      	mov	r0, r3
 800e26c:	f003 ff86 	bl	801217c <_ZN8touchgfx12LineProgress8setValueEi>
    add(lineProgress1);
 800e270:	697a      	ldr	r2, [r7, #20]
 800e272:	697b      	ldr	r3, [r7, #20]
 800e274:	f203 632c 	addw	r3, r3, #1580	; 0x62c
 800e278:	4619      	mov	r1, r3
 800e27a:	4610      	mov	r0, r2
 800e27c:	f7ff f8c4 	bl	800d408 <_ZN8touchgfx6Screen3addERNS_8DrawableE>

    textArea2.setPosition(58, 214, 83, 31);
 800e280:	697b      	ldr	r3, [r7, #20]
 800e282:	f203 7074 	addw	r0, r3, #1908	; 0x774
 800e286:	231f      	movs	r3, #31
 800e288:	9300      	str	r3, [sp, #0]
 800e28a:	2353      	movs	r3, #83	; 0x53
 800e28c:	22d6      	movs	r2, #214	; 0xd6
 800e28e:	213a      	movs	r1, #58	; 0x3a
 800e290:	f7fd fb98 	bl	800b9c4 <_ZN8touchgfx8Drawable11setPositionEssss>
    textArea2.setColor(touchgfx::Color::getColorFromRGB(52, 232, 204));
 800e294:	697b      	ldr	r3, [r7, #20]
 800e296:	f203 7474 	addw	r4, r3, #1908	; 0x774
 800e29a:	2334      	movs	r3, #52	; 0x34
 800e29c:	f887 30fb 	strb.w	r3, [r7, #251]	; 0xfb
 800e2a0:	23e8      	movs	r3, #232	; 0xe8
 800e2a2:	f887 30fa 	strb.w	r3, [r7, #250]	; 0xfa
 800e2a6:	23cc      	movs	r3, #204	; 0xcc
 800e2a8:	f887 30f9 	strb.w	r3, [r7, #249]	; 0xf9
 800e2ac:	f897 30fb 	ldrb.w	r3, [r7, #251]	; 0xfb
 800e2b0:	041b      	lsls	r3, r3, #16
 800e2b2:	461a      	mov	r2, r3
 800e2b4:	f897 30fa 	ldrb.w	r3, [r7, #250]	; 0xfa
 800e2b8:	021b      	lsls	r3, r3, #8
 800e2ba:	431a      	orrs	r2, r3
 800e2bc:	f897 30f9 	ldrb.w	r3, [r7, #249]	; 0xf9
 800e2c0:	4313      	orrs	r3, r2
 800e2c2:	f043 427f 	orr.w	r2, r3, #4278190080	; 0xff000000
 800e2c6:	f107 0358 	add.w	r3, r7, #88	; 0x58
 800e2ca:	4611      	mov	r1, r2
 800e2cc:	4618      	mov	r0, r3
 800e2ce:	f7fd faa9 	bl	800b824 <_ZN8touchgfx9colortypeC1Em>
 800e2d2:	6dbb      	ldr	r3, [r7, #88]	; 0x58
 800e2d4:	f8c7 40fc 	str.w	r4, [r7, #252]	; 0xfc
 800e2d8:	61fb      	str	r3, [r7, #28]
        color = newColor;
 800e2da:	f8d7 30fc 	ldr.w	r3, [r7, #252]	; 0xfc
 800e2de:	69fa      	ldr	r2, [r7, #28]
 800e2e0:	631a      	str	r2, [r3, #48]	; 0x30
    }
 800e2e2:	bf00      	nop
    textArea2.setLinespacing(0);
 800e2e4:	697b      	ldr	r3, [r7, #20]
 800e2e6:	f203 7374 	addw	r3, r3, #1908	; 0x774
 800e2ea:	f8c7 3104 	str.w	r3, [r7, #260]	; 0x104
 800e2ee:	2300      	movs	r3, #0
 800e2f0:	f8a7 3102 	strh.w	r3, [r7, #258]	; 0x102
        linespace = space;
 800e2f4:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 800e2f8:	f8b7 2102 	ldrh.w	r2, [r7, #258]	; 0x102
 800e2fc:	869a      	strh	r2, [r3, #52]	; 0x34
        boundingArea = calculateBoundingArea();
 800e2fe:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 800e302:	681b      	ldr	r3, [r3, #0]
 800e304:	3384      	adds	r3, #132	; 0x84
 800e306:	681b      	ldr	r3, [r3, #0]
 800e308:	f8d7 4104 	ldr.w	r4, [r7, #260]	; 0x104
 800e30c:	463a      	mov	r2, r7
 800e30e:	f8d7 1104 	ldr.w	r1, [r7, #260]	; 0x104
 800e312:	4610      	mov	r0, r2
 800e314:	4798      	blx	r3
 800e316:	f507 7384 	add.w	r3, r7, #264	; 0x108
 800e31a:	f5a3 7284 	sub.w	r2, r3, #264	; 0x108
 800e31e:	f104 033c 	add.w	r3, r4, #60	; 0x3c
 800e322:	ca07      	ldmia	r2, {r0, r1, r2}
 800e324:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    }
 800e328:	bf00      	nop
    textArea2Buffer[0] = 0;
 800e32a:	697b      	ldr	r3, [r7, #20]
 800e32c:	2200      	movs	r2, #0
 800e32e:	f8a3 27d4 	strh.w	r2, [r3, #2004]	; 0x7d4
    textArea2.setWildcard(textArea2Buffer);
 800e332:	697b      	ldr	r3, [r7, #20]
 800e334:	f203 7274 	addw	r2, r3, #1908	; 0x774
 800e338:	697b      	ldr	r3, [r7, #20]
 800e33a:	f203 73d4 	addw	r3, r3, #2004	; 0x7d4
 800e33e:	4619      	mov	r1, r3
 800e340:	4610      	mov	r0, r2
 800e342:	f7fe f92f 	bl	800c5a4 <_ZN8touchgfx23TextAreaWithOneWildcard11setWildcardEPKt>
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_49D8));
 800e346:	697b      	ldr	r3, [r7, #20]
 800e348:	f203 7474 	addw	r4, r3, #1908	; 0x774
 800e34c:	f107 0350 	add.w	r3, r7, #80	; 0x50
 800e350:	2101      	movs	r1, #1
 800e352:	4618      	mov	r0, r3
 800e354:	f7fd ff2e 	bl	800c1b4 <_ZN8touchgfx9TypedTextC1Et>
 800e358:	f107 0350 	add.w	r3, r7, #80	; 0x50
 800e35c:	4619      	mov	r1, r3
 800e35e:	4620      	mov	r0, r4
 800e360:	f006 ffbc 	bl	80152dc <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800e364:	f107 0350 	add.w	r3, r7, #80	; 0x50
 800e368:	4618      	mov	r0, r3
 800e36a:	f7fc fa63 	bl	800a834 <_ZN8touchgfx9TypedTextD1Ev>
    add(textArea2);
 800e36e:	697a      	ldr	r2, [r7, #20]
 800e370:	697b      	ldr	r3, [r7, #20]
 800e372:	f203 7374 	addw	r3, r3, #1908	; 0x774
 800e376:	4619      	mov	r1, r3
 800e378:	4610      	mov	r0, r2
 800e37a:	f7ff f845 	bl	800d408 <_ZN8touchgfx6Screen3addERNS_8DrawableE>
}
 800e37e:	697b      	ldr	r3, [r7, #20]
 800e380:	4618      	mov	r0, r3
 800e382:	f507 7784 	add.w	r7, r7, #264	; 0x108
 800e386:	46bd      	mov	sp, r7
 800e388:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800e38c <_ZN15Screen1ViewBaseD1Ev>:

Screen1ViewBase::~Screen1ViewBase()
 800e38c:	b580      	push	{r7, lr}
 800e38e:	b082      	sub	sp, #8
 800e390:	af00      	add	r7, sp, #0
 800e392:	6078      	str	r0, [r7, #4]
 800e394:	4a29      	ldr	r2, [pc, #164]	; (800e43c <_ZN15Screen1ViewBaseD1Ev+0xb0>)
 800e396:	687b      	ldr	r3, [r7, #4]
 800e398:	601a      	str	r2, [r3, #0]
{
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 800e39a:	f007 fff9 	bl	8016390 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
Screen1ViewBase::~Screen1ViewBase()
 800e39e:	687b      	ldr	r3, [r7, #4]
 800e3a0:	f503 5310 	add.w	r3, r3, #9216	; 0x2400
 800e3a4:	3308      	adds	r3, #8
 800e3a6:	4618      	mov	r0, r3
 800e3a8:	f000 fa7c 	bl	800e8a4 <_ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_23AbstractButtonContainerEvvED1Ev>
 800e3ac:	687b      	ldr	r3, [r7, #4]
 800e3ae:	f203 7374 	addw	r3, r3, #1908	; 0x774
 800e3b2:	4618      	mov	r0, r3
 800e3b4:	f7fe fed8 	bl	800d168 <_ZN8touchgfx23TextAreaWithOneWildcardD1Ev>
 800e3b8:	687b      	ldr	r3, [r7, #4]
 800e3ba:	f503 63ec 	add.w	r3, r3, #1888	; 0x760
 800e3be:	4618      	mov	r0, r3
 800e3c0:	f000 fb7c 	bl	800eabc <_ZN8touchgfx13PainterRGB565D1Ev>
 800e3c4:	687b      	ldr	r3, [r7, #4]
 800e3c6:	f203 632c 	addw	r3, r3, #1580	; 0x62c
 800e3ca:	4618      	mov	r0, r3
 800e3cc:	f000 fbcc 	bl	800eb68 <_ZN8touchgfx12LineProgressD1Ev>
 800e3d0:	687b      	ldr	r3, [r7, #4]
 800e3d2:	f203 5364 	addw	r3, r3, #1380	; 0x564
 800e3d6:	4618      	mov	r0, r3
 800e3d8:	f000 fa86 	bl	800e8e8 <_ZN8touchgfx15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEED1Ev>
 800e3dc:	687b      	ldr	r3, [r7, #4]
 800e3de:	f203 439c 	addw	r3, r3, #1180	; 0x49c
 800e3e2:	4618      	mov	r0, r3
 800e3e4:	f000 fa80 	bl	800e8e8 <_ZN8touchgfx15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEED1Ev>
 800e3e8:	687b      	ldr	r3, [r7, #4]
 800e3ea:	f503 731e 	add.w	r3, r3, #632	; 0x278
 800e3ee:	4618      	mov	r0, r3
 800e3f0:	f7ff f996 	bl	800d720 <_ZN16CustomContainer1D1Ev>
 800e3f4:	687b      	ldr	r3, [r7, #4]
 800e3f6:	f503 73d6 	add.w	r3, r3, #428	; 0x1ac
 800e3fa:	4618      	mov	r0, r3
 800e3fc:	f000 fa9c 	bl	800e938 <_ZN8touchgfx23WildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEED1Ev>
 800e400:	687b      	ldr	r3, [r7, #4]
 800e402:	f503 73cc 	add.w	r3, r3, #408	; 0x198
 800e406:	4618      	mov	r0, r3
 800e408:	f000 fb58 	bl	800eabc <_ZN8touchgfx13PainterRGB565D1Ev>
 800e40c:	687b      	ldr	r3, [r7, #4]
 800e40e:	3398      	adds	r3, #152	; 0x98
 800e410:	4618      	mov	r0, r3
 800e412:	f000 fb29 	bl	800ea68 <_ZN8touchgfx14CircleProgressD1Ev>
 800e416:	687b      	ldr	r3, [r7, #4]
 800e418:	336c      	adds	r3, #108	; 0x6c
 800e41a:	4618      	mov	r0, r3
 800e41c:	f7fd fcec 	bl	800bdf8 <_ZN8touchgfx3BoxD1Ev>
 800e420:	687b      	ldr	r3, [r7, #4]
 800e422:	3340      	adds	r3, #64	; 0x40
 800e424:	4618      	mov	r0, r3
 800e426:	f7fd fce7 	bl	800bdf8 <_ZN8touchgfx3BoxD1Ev>
 800e42a:	687b      	ldr	r3, [r7, #4]
 800e42c:	4618      	mov	r0, r3
 800e42e:	f7ff f9a5 	bl	800d77c <_ZN8touchgfx4ViewI16Screen1PresenterED1Ev>
}
 800e432:	687b      	ldr	r3, [r7, #4]
 800e434:	4618      	mov	r0, r3
 800e436:	3708      	adds	r7, #8
 800e438:	46bd      	mov	sp, r7
 800e43a:	bd80      	pop	{r7, pc}
 800e43c:	0802ead8 	.word	0x0802ead8

0800e440 <_ZN15Screen1ViewBaseD0Ev>:
Screen1ViewBase::~Screen1ViewBase()
 800e440:	b580      	push	{r7, lr}
 800e442:	b082      	sub	sp, #8
 800e444:	af00      	add	r7, sp, #0
 800e446:	6078      	str	r0, [r7, #4]
}
 800e448:	6878      	ldr	r0, [r7, #4]
 800e44a:	f7ff ff9f 	bl	800e38c <_ZN15Screen1ViewBaseD1Ev>
 800e44e:	f242 4118 	movw	r1, #9240	; 0x2418
 800e452:	6878      	ldr	r0, [r7, #4]
 800e454:	f01b ff81 	bl	802a35a <_ZdlPvj>
 800e458:	687b      	ldr	r3, [r7, #4]
 800e45a:	4618      	mov	r0, r3
 800e45c:	3708      	adds	r7, #8
 800e45e:	46bd      	mov	sp, r7
 800e460:	bd80      	pop	{r7, pc}

0800e462 <_ZN15Screen1ViewBase11setupScreenEv>:

void Screen1ViewBase::setupScreen()
{
 800e462:	b580      	push	{r7, lr}
 800e464:	b082      	sub	sp, #8
 800e466:	af00      	add	r7, sp, #0
 800e468:	6078      	str	r0, [r7, #4]
    customContainer11.initialize();
 800e46a:	687b      	ldr	r3, [r7, #4]
 800e46c:	f503 731e 	add.w	r3, r3, #632	; 0x278
 800e470:	4618      	mov	r0, r3
 800e472:	f000 fe93 	bl	800f19c <_ZN16CustomContainer110initializeEv>
}
 800e476:	bf00      	nop
 800e478:	3708      	adds	r7, #8
 800e47a:	46bd      	mov	sp, r7
 800e47c:	bd80      	pop	{r7, pc}

0800e47e <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE>:

void Screen1ViewBase::flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src)
{
 800e47e:	b580      	push	{r7, lr}
 800e480:	b082      	sub	sp, #8
 800e482:	af00      	add	r7, sp, #0
 800e484:	6078      	str	r0, [r7, #4]
 800e486:	6039      	str	r1, [r7, #0]
    if (&src == &flexButton1)
 800e488:	687b      	ldr	r3, [r7, #4]
 800e48a:	f503 73d6 	add.w	r3, r3, #428	; 0x1ac
 800e48e:	683a      	ldr	r2, [r7, #0]
 800e490:	429a      	cmp	r2, r3
 800e492:	d126      	bne.n	800e4e2 <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x64>
    {
        //Interaction1
        //When flexButton1 clicked show customContainer11
        //Show customContainer11
        customContainer11.setVisible(true);
 800e494:	687b      	ldr	r3, [r7, #4]
 800e496:	f503 731e 	add.w	r3, r3, #632	; 0x278
 800e49a:	2101      	movs	r1, #1
 800e49c:	4618      	mov	r0, r3
 800e49e:	f7fe ff3f 	bl	800d320 <_ZN8touchgfx8Drawable10setVisibleEb>
        customContainer11.invalidate();
 800e4a2:	687b      	ldr	r3, [r7, #4]
 800e4a4:	f503 731e 	add.w	r3, r3, #632	; 0x278
 800e4a8:	4618      	mov	r0, r3
 800e4aa:	f00b f8f4 	bl	8019696 <_ZNK8touchgfx8Drawable10invalidateEv>
    
        //Interaction3
        //When Interaction1 completed show OK_button_1
        //Show OK_button_1
        OK_button_1.setVisible(true);
 800e4ae:	687b      	ldr	r3, [r7, #4]
 800e4b0:	f203 439c 	addw	r3, r3, #1180	; 0x49c
 800e4b4:	2101      	movs	r1, #1
 800e4b6:	4618      	mov	r0, r3
 800e4b8:	f7fe ff32 	bl	800d320 <_ZN8touchgfx8Drawable10setVisibleEb>
        OK_button_1.invalidate();
 800e4bc:	687b      	ldr	r3, [r7, #4]
 800e4be:	f203 439c 	addw	r3, r3, #1180	; 0x49c
 800e4c2:	4618      	mov	r0, r3
 800e4c4:	f00b f8e7 	bl	8019696 <_ZNK8touchgfx8Drawable10invalidateEv>
    
    
        //Interaction4
        //When Interaction1 completed show Cancel_button_1
        //Show Cancel_button_1
        Cancel_button_1.setVisible(true);
 800e4c8:	687b      	ldr	r3, [r7, #4]
 800e4ca:	f203 5364 	addw	r3, r3, #1380	; 0x564
 800e4ce:	2101      	movs	r1, #1
 800e4d0:	4618      	mov	r0, r3
 800e4d2:	f7fe ff25 	bl	800d320 <_ZN8touchgfx8Drawable10setVisibleEb>
        Cancel_button_1.invalidate();
 800e4d6:	687b      	ldr	r3, [r7, #4]
 800e4d8:	f203 5364 	addw	r3, r3, #1380	; 0x564
 800e4dc:	4618      	mov	r0, r3
 800e4de:	f00b f8da 	bl	8019696 <_ZNK8touchgfx8Drawable10invalidateEv>
    }
    if (&src == &OK_button_1)
 800e4e2:	687b      	ldr	r3, [r7, #4]
 800e4e4:	f203 439c 	addw	r3, r3, #1180	; 0x49c
 800e4e8:	683a      	ldr	r2, [r7, #0]
 800e4ea:	429a      	cmp	r2, r3
 800e4ec:	d126      	bne.n	800e53c <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0xbe>
    {
        //Interaction5
        //When OK_button_1 clicked hide customContainer11
        //Hide customContainer11
        customContainer11.setVisible(false);
 800e4ee:	687b      	ldr	r3, [r7, #4]
 800e4f0:	f503 731e 	add.w	r3, r3, #632	; 0x278
 800e4f4:	2100      	movs	r1, #0
 800e4f6:	4618      	mov	r0, r3
 800e4f8:	f7fe ff12 	bl	800d320 <_ZN8touchgfx8Drawable10setVisibleEb>
        customContainer11.invalidate();
 800e4fc:	687b      	ldr	r3, [r7, #4]
 800e4fe:	f503 731e 	add.w	r3, r3, #632	; 0x278
 800e502:	4618      	mov	r0, r3
 800e504:	f00b f8c7 	bl	8019696 <_ZNK8touchgfx8Drawable10invalidateEv>
    
        //Interaction6
        //When Interaction5 completed hide Cancel_button_1
        //Hide Cancel_button_1
        Cancel_button_1.setVisible(false);
 800e508:	687b      	ldr	r3, [r7, #4]
 800e50a:	f203 5364 	addw	r3, r3, #1380	; 0x564
 800e50e:	2100      	movs	r1, #0
 800e510:	4618      	mov	r0, r3
 800e512:	f7fe ff05 	bl	800d320 <_ZN8touchgfx8Drawable10setVisibleEb>
        Cancel_button_1.invalidate();
 800e516:	687b      	ldr	r3, [r7, #4]
 800e518:	f203 5364 	addw	r3, r3, #1380	; 0x564
 800e51c:	4618      	mov	r0, r3
 800e51e:	f00b f8ba 	bl	8019696 <_ZNK8touchgfx8Drawable10invalidateEv>
    
    
        //Interaction10
        //When Interaction5 completed hide OK_button_1
        //Hide OK_button_1
        OK_button_1.setVisible(false);
 800e522:	687b      	ldr	r3, [r7, #4]
 800e524:	f203 439c 	addw	r3, r3, #1180	; 0x49c
 800e528:	2100      	movs	r1, #0
 800e52a:	4618      	mov	r0, r3
 800e52c:	f7fe fef8 	bl	800d320 <_ZN8touchgfx8Drawable10setVisibleEb>
        OK_button_1.invalidate();
 800e530:	687b      	ldr	r3, [r7, #4]
 800e532:	f203 439c 	addw	r3, r3, #1180	; 0x49c
 800e536:	4618      	mov	r0, r3
 800e538:	f00b f8ad 	bl	8019696 <_ZNK8touchgfx8Drawable10invalidateEv>
    }
    if (&src == &Cancel_button_1)
 800e53c:	687b      	ldr	r3, [r7, #4]
 800e53e:	f203 5364 	addw	r3, r3, #1380	; 0x564
 800e542:	683a      	ldr	r2, [r7, #0]
 800e544:	429a      	cmp	r2, r3
 800e546:	d119      	bne.n	800e57c <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0xfe>
    {
        //Interaction7
        //When Cancel_button_1 clicked hide customContainer11
        //Hide customContainer11
        customContainer11.setVisible(false);
 800e548:	687b      	ldr	r3, [r7, #4]
 800e54a:	f503 731e 	add.w	r3, r3, #632	; 0x278
 800e54e:	2100      	movs	r1, #0
 800e550:	4618      	mov	r0, r3
 800e552:	f7fe fee5 	bl	800d320 <_ZN8touchgfx8Drawable10setVisibleEb>
        customContainer11.invalidate();
 800e556:	687b      	ldr	r3, [r7, #4]
 800e558:	f503 731e 	add.w	r3, r3, #632	; 0x278
 800e55c:	4618      	mov	r0, r3
 800e55e:	f00b f89a 	bl	8019696 <_ZNK8touchgfx8Drawable10invalidateEv>
    
        //Interaction8
        //When Interaction7 completed hide OK_button_1
        //Hide OK_button_1
        OK_button_1.setVisible(false);
 800e562:	687b      	ldr	r3, [r7, #4]
 800e564:	f203 439c 	addw	r3, r3, #1180	; 0x49c
 800e568:	2100      	movs	r1, #0
 800e56a:	4618      	mov	r0, r3
 800e56c:	f7fe fed8 	bl	800d320 <_ZN8touchgfx8Drawable10setVisibleEb>
        OK_button_1.invalidate();
 800e570:	687b      	ldr	r3, [r7, #4]
 800e572:	f203 439c 	addw	r3, r3, #1180	; 0x49c
 800e576:	4618      	mov	r0, r3
 800e578:	f00b f88d 	bl	8019696 <_ZNK8touchgfx8Drawable10invalidateEv>
    }
}
 800e57c:	bf00      	nop
 800e57e:	3708      	adds	r7, #8
 800e580:	46bd      	mov	sp, r7
 800e582:	bd80      	pop	{r7, pc}

0800e584 <_ZN15Screen1ViewBase15handleTickEventEv>:

void Screen1ViewBase::handleTickEvent()
{
 800e584:	b580      	push	{r7, lr}
 800e586:	b082      	sub	sp, #8
 800e588:	af00      	add	r7, sp, #0
 800e58a:	6078      	str	r0, [r7, #4]
    //Interaction2
    //When every N tick call virtual function
    //Call Update_temperature
    Update_temperature();
 800e58c:	687b      	ldr	r3, [r7, #4]
 800e58e:	681b      	ldr	r3, [r3, #0]
 800e590:	332c      	adds	r3, #44	; 0x2c
 800e592:	681b      	ldr	r3, [r3, #0]
 800e594:	6878      	ldr	r0, [r7, #4]
 800e596:	4798      	blx	r3
}
 800e598:	bf00      	nop
 800e59a:	3708      	adds	r7, #8
 800e59c:	46bd      	mov	sp, r7
 800e59e:	bd80      	pop	{r7, pc}

0800e5a0 <_ZN8touchgfx4ViewI16Screen1PresenterEC1Ev>:
    View()
 800e5a0:	b580      	push	{r7, lr}
 800e5a2:	b082      	sub	sp, #8
 800e5a4:	af00      	add	r7, sp, #0
 800e5a6:	6078      	str	r0, [r7, #4]
        : presenter(0)
 800e5a8:	687b      	ldr	r3, [r7, #4]
 800e5aa:	4618      	mov	r0, r3
 800e5ac:	f00b fbe0 	bl	8019d70 <_ZN8touchgfx6ScreenC1Ev>
 800e5b0:	4a05      	ldr	r2, [pc, #20]	; (800e5c8 <_ZN8touchgfx4ViewI16Screen1PresenterEC1Ev+0x28>)
 800e5b2:	687b      	ldr	r3, [r7, #4]
 800e5b4:	601a      	str	r2, [r3, #0]
 800e5b6:	687b      	ldr	r3, [r7, #4]
 800e5b8:	2200      	movs	r2, #0
 800e5ba:	63da      	str	r2, [r3, #60]	; 0x3c
    }
 800e5bc:	687b      	ldr	r3, [r7, #4]
 800e5be:	4618      	mov	r0, r3
 800e5c0:	3708      	adds	r7, #8
 800e5c2:	46bd      	mov	sp, r7
 800e5c4:	bd80      	pop	{r7, pc}
 800e5c6:	bf00      	nop
 800e5c8:	0802ec60 	.word	0x0802ec60

0800e5cc <_ZN8touchgfx23WildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev>:
 */
template <class T>
class WildcardTextButtonStyle : public T
{
public:
    WildcardTextButtonStyle()
 800e5cc:	b580      	push	{r7, lr}
 800e5ce:	b082      	sub	sp, #8
 800e5d0:	af00      	add	r7, sp, #0
 800e5d2:	6078      	str	r0, [r7, #4]
        : T()
 800e5d4:	687b      	ldr	r3, [r7, #4]
 800e5d6:	4618      	mov	r0, r3
 800e5d8:	f7fe fca6 	bl	800cf28 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEC1Ev>
 800e5dc:	4a0e      	ldr	r2, [pc, #56]	; (800e618 <_ZN8touchgfx23WildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev+0x4c>)
 800e5de:	687b      	ldr	r3, [r7, #4]
 800e5e0:	601a      	str	r2, [r3, #0]
 800e5e2:	687b      	ldr	r3, [r7, #4]
 800e5e4:	3378      	adds	r3, #120	; 0x78
 800e5e6:	4618      	mov	r0, r3
 800e5e8:	f7fd ffac 	bl	800c544 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 800e5ec:	687b      	ldr	r3, [r7, #4]
 800e5ee:	33c4      	adds	r3, #196	; 0xc4
 800e5f0:	4618      	mov	r0, r3
 800e5f2:	f7fd f909 	bl	800b808 <_ZN8touchgfx9colortypeC1Ev>
 800e5f6:	687b      	ldr	r3, [r7, #4]
 800e5f8:	33c8      	adds	r3, #200	; 0xc8
 800e5fa:	4618      	mov	r0, r3
 800e5fc:	f7fd f904 	bl	800b808 <_ZN8touchgfx9colortypeC1Ev>
    {
        T::add(wildcardText);
 800e600:	687a      	ldr	r2, [r7, #4]
 800e602:	687b      	ldr	r3, [r7, #4]
 800e604:	3378      	adds	r3, #120	; 0x78
 800e606:	4619      	mov	r1, r3
 800e608:	4610      	mov	r0, r2
 800e60a:	f003 ffc5 	bl	8012598 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    }
 800e60e:	687b      	ldr	r3, [r7, #4]
 800e610:	4618      	mov	r0, r3
 800e612:	3708      	adds	r7, #8
 800e614:	46bd      	mov	sp, r7
 800e616:	bd80      	pop	{r7, pc}
 800e618:	0802ebc4 	.word	0x0802ebc4

0800e61c <_ZN8touchgfx15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev>:
 */
template <class T>
class TextButtonStyle : public T
{
public:
    TextButtonStyle()
 800e61c:	b580      	push	{r7, lr}
 800e61e:	b082      	sub	sp, #8
 800e620:	af00      	add	r7, sp, #0
 800e622:	6078      	str	r0, [r7, #4]
        : T()
 800e624:	687b      	ldr	r3, [r7, #4]
 800e626:	4618      	mov	r0, r3
 800e628:	f7fe fc7e 	bl	800cf28 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEC1Ev>
 800e62c:	4a0e      	ldr	r2, [pc, #56]	; (800e668 <_ZN8touchgfx15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev+0x4c>)
 800e62e:	687b      	ldr	r3, [r7, #4]
 800e630:	601a      	str	r2, [r3, #0]
 800e632:	687b      	ldr	r3, [r7, #4]
 800e634:	3378      	adds	r3, #120	; 0x78
 800e636:	4618      	mov	r0, r3
 800e638:	f7fd fdd2 	bl	800c1e0 <_ZN8touchgfx8TextAreaC1Ev>
 800e63c:	687b      	ldr	r3, [r7, #4]
 800e63e:	33c0      	adds	r3, #192	; 0xc0
 800e640:	4618      	mov	r0, r3
 800e642:	f7fd f8e1 	bl	800b808 <_ZN8touchgfx9colortypeC1Ev>
 800e646:	687b      	ldr	r3, [r7, #4]
 800e648:	33c4      	adds	r3, #196	; 0xc4
 800e64a:	4618      	mov	r0, r3
 800e64c:	f7fd f8dc 	bl	800b808 <_ZN8touchgfx9colortypeC1Ev>
    {
        T::add(text);
 800e650:	687a      	ldr	r2, [r7, #4]
 800e652:	687b      	ldr	r3, [r7, #4]
 800e654:	3378      	adds	r3, #120	; 0x78
 800e656:	4619      	mov	r1, r3
 800e658:	4610      	mov	r0, r2
 800e65a:	f003 ff9d 	bl	8012598 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    }
 800e65e:	687b      	ldr	r3, [r7, #4]
 800e660:	4618      	mov	r0, r3
 800e662:	3708      	adds	r7, #8
 800e664:	46bd      	mov	sp, r7
 800e666:	bd80      	pop	{r7, pc}
 800e668:	0802eb28 	.word	0x0802eb28

0800e66c <_ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_23AbstractButtonContainerEvvEC1EPS1_MS1_FvS4_E>:
    Callback(dest_type* pObject, void (dest_type::*pmemfun_1)(T1))
 800e66c:	b580      	push	{r7, lr}
 800e66e:	b084      	sub	sp, #16
 800e670:	af00      	add	r7, sp, #0
 800e672:	60f8      	str	r0, [r7, #12]
 800e674:	60b9      	str	r1, [r7, #8]
 800e676:	4639      	mov	r1, r7
 800e678:	e881 000c 	stmia.w	r1, {r2, r3}
        : pobject(pObject), pmemfun(pmemfun_1)
 800e67c:	68fb      	ldr	r3, [r7, #12]
 800e67e:	4618      	mov	r0, r3
 800e680:	f7fe fb5a 	bl	800cd38 <_ZN8touchgfx15GenericCallbackIRKNS_23AbstractButtonContainerEvvEC1Ev>
 800e684:	4a08      	ldr	r2, [pc, #32]	; (800e6a8 <_ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_23AbstractButtonContainerEvvEC1EPS1_MS1_FvS4_E+0x3c>)
 800e686:	68fb      	ldr	r3, [r7, #12]
 800e688:	601a      	str	r2, [r3, #0]
 800e68a:	68fb      	ldr	r3, [r7, #12]
 800e68c:	68ba      	ldr	r2, [r7, #8]
 800e68e:	605a      	str	r2, [r3, #4]
 800e690:	68fb      	ldr	r3, [r7, #12]
 800e692:	3308      	adds	r3, #8
 800e694:	463a      	mov	r2, r7
 800e696:	e892 0003 	ldmia.w	r2, {r0, r1}
 800e69a:	e883 0003 	stmia.w	r3, {r0, r1}
    }
 800e69e:	68fb      	ldr	r3, [r7, #12]
 800e6a0:	4618      	mov	r0, r3
 800e6a2:	3710      	adds	r7, #16
 800e6a4:	46bd      	mov	sp, r7
 800e6a6:	bd80      	pop	{r7, pc}
 800e6a8:	0802eb10 	.word	0x0802eb10

0800e6ac <_ZN8touchgfx23WildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE15setWildcardTextENS_9TypedTextE>:
    /**
     * Sets wildcard text.
     *
     * @param  t A TypedText to process.
     */
    void setWildcardText(TypedText t)
 800e6ac:	b5b0      	push	{r4, r5, r7, lr}
 800e6ae:	b082      	sub	sp, #8
 800e6b0:	af00      	add	r7, sp, #0
 800e6b2:	6078      	str	r0, [r7, #4]
 800e6b4:	6039      	str	r1, [r7, #0]
    {
        wildcardText.setTypedText(t);
 800e6b6:	687b      	ldr	r3, [r7, #4]
 800e6b8:	3378      	adds	r3, #120	; 0x78
 800e6ba:	6839      	ldr	r1, [r7, #0]
 800e6bc:	4618      	mov	r0, r3
 800e6be:	f006 fe0d 	bl	80152dc <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
        wildcardText.setWidthHeight(T::getWidth(), T::getHeight());
 800e6c2:	687b      	ldr	r3, [r7, #4]
 800e6c4:	f103 0478 	add.w	r4, r3, #120	; 0x78
 800e6c8:	687b      	ldr	r3, [r7, #4]
 800e6ca:	4618      	mov	r0, r3
 800e6cc:	f7fd f99b 	bl	800ba06 <_ZNK8touchgfx8Drawable8getWidthEv>
 800e6d0:	4603      	mov	r3, r0
 800e6d2:	461d      	mov	r5, r3
 800e6d4:	687b      	ldr	r3, [r7, #4]
 800e6d6:	4618      	mov	r0, r3
 800e6d8:	f7fd f9a2 	bl	800ba20 <_ZNK8touchgfx8Drawable9getHeightEv>
 800e6dc:	4603      	mov	r3, r0
 800e6de:	461a      	mov	r2, r3
 800e6e0:	4629      	mov	r1, r5
 800e6e2:	4620      	mov	r0, r4
 800e6e4:	f7fd fa23 	bl	800bb2e <_ZN8touchgfx8Drawable14setWidthHeightEss>
    }
 800e6e8:	bf00      	nop
 800e6ea:	3708      	adds	r7, #8
 800e6ec:	46bd      	mov	sp, r7
 800e6ee:	bdb0      	pop	{r4, r5, r7, pc}

0800e6f0 <_ZN8touchgfx23WildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE21setWildcardTextBufferEPKt>:
    /**
     * Sets wildcard text buffer.
     *
     * @param  buffer If non-null, the buffer.
     */
    void setWildcardTextBuffer(const Unicode::UnicodeChar* buffer)
 800e6f0:	b580      	push	{r7, lr}
 800e6f2:	b082      	sub	sp, #8
 800e6f4:	af00      	add	r7, sp, #0
 800e6f6:	6078      	str	r0, [r7, #4]
 800e6f8:	6039      	str	r1, [r7, #0]
    {
        wildcardText.setWildcard(buffer);
 800e6fa:	687b      	ldr	r3, [r7, #4]
 800e6fc:	3378      	adds	r3, #120	; 0x78
 800e6fe:	6839      	ldr	r1, [r7, #0]
 800e700:	4618      	mov	r0, r3
 800e702:	f7fd ff4f 	bl	800c5a4 <_ZN8touchgfx23TextAreaWithOneWildcard11setWildcardEPKt>
    }
 800e706:	bf00      	nop
 800e708:	3708      	adds	r7, #8
 800e70a:	46bd      	mov	sp, r7
 800e70c:	bd80      	pop	{r7, pc}

0800e70e <_ZN8touchgfx23WildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE23setWildcardTextPositionEssss>:
    void setWildcardTextPosition(int16_t x, int16_t y, int16_t width, int16_t height)
 800e70e:	b590      	push	{r4, r7, lr}
 800e710:	b087      	sub	sp, #28
 800e712:	af02      	add	r7, sp, #8
 800e714:	60f8      	str	r0, [r7, #12]
 800e716:	4608      	mov	r0, r1
 800e718:	4611      	mov	r1, r2
 800e71a:	461a      	mov	r2, r3
 800e71c:	4603      	mov	r3, r0
 800e71e:	817b      	strh	r3, [r7, #10]
 800e720:	460b      	mov	r3, r1
 800e722:	813b      	strh	r3, [r7, #8]
 800e724:	4613      	mov	r3, r2
 800e726:	80fb      	strh	r3, [r7, #6]
        wildcardText.setPosition(x, y, width, height);
 800e728:	68fb      	ldr	r3, [r7, #12]
 800e72a:	f103 0078 	add.w	r0, r3, #120	; 0x78
 800e72e:	f9b7 4006 	ldrsh.w	r4, [r7, #6]
 800e732:	f9b7 2008 	ldrsh.w	r2, [r7, #8]
 800e736:	f9b7 100a 	ldrsh.w	r1, [r7, #10]
 800e73a:	f9b7 3020 	ldrsh.w	r3, [r7, #32]
 800e73e:	9300      	str	r3, [sp, #0]
 800e740:	4623      	mov	r3, r4
 800e742:	f7fd f93f 	bl	800b9c4 <_ZN8touchgfx8Drawable11setPositionEssss>
    }
 800e746:	bf00      	nop
 800e748:	3714      	adds	r7, #20
 800e74a:	46bd      	mov	sp, r7
 800e74c:	bd90      	pop	{r4, r7, pc}

0800e74e <_ZN8touchgfx23WildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE21setWildcardTextColorsENS_9colortypeES5_>:
     * Sets wild card text colors.
     *
     * @param  newColorReleased The new color released.
     * @param  newColorPressed  The new color pressed.
     */
    void setWildcardTextColors(colortype newColorReleased, colortype newColorPressed)
 800e74e:	b580      	push	{r7, lr}
 800e750:	b084      	sub	sp, #16
 800e752:	af00      	add	r7, sp, #0
 800e754:	60f8      	str	r0, [r7, #12]
 800e756:	60b9      	str	r1, [r7, #8]
 800e758:	607a      	str	r2, [r7, #4]
    {
        colorReleased = newColorReleased;
 800e75a:	68fb      	ldr	r3, [r7, #12]
 800e75c:	68ba      	ldr	r2, [r7, #8]
 800e75e:	f8c3 20c4 	str.w	r2, [r3, #196]	; 0xc4
        colorPressed = newColorPressed;
 800e762:	68fb      	ldr	r3, [r7, #12]
 800e764:	687a      	ldr	r2, [r7, #4]
 800e766:	f8c3 20c8 	str.w	r2, [r3, #200]	; 0xc8

        handlePressedUpdated();
 800e76a:	68fb      	ldr	r3, [r7, #12]
 800e76c:	681b      	ldr	r3, [r3, #0]
 800e76e:	338c      	adds	r3, #140	; 0x8c
 800e770:	681b      	ldr	r3, [r3, #0]
 800e772:	68f8      	ldr	r0, [r7, #12]
 800e774:	4798      	blx	r3
    }
 800e776:	bf00      	nop
 800e778:	3710      	adds	r7, #16
 800e77a:	46bd      	mov	sp, r7
 800e77c:	bd80      	pop	{r7, pc}

0800e77e <_ZN8touchgfx15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE7setTextENS_9TypedTextE>:
    /**
     * Sets a text.
     *
     * @param  t A TypedText to process.
     */
    void setText(TypedText t)
 800e77e:	b580      	push	{r7, lr}
 800e780:	b082      	sub	sp, #8
 800e782:	af00      	add	r7, sp, #0
 800e784:	6078      	str	r0, [r7, #4]
 800e786:	6039      	str	r1, [r7, #0]
    {
        text.setTypedText(t);
 800e788:	687b      	ldr	r3, [r7, #4]
 800e78a:	3378      	adds	r3, #120	; 0x78
 800e78c:	6839      	ldr	r1, [r7, #0]
 800e78e:	4618      	mov	r0, r3
 800e790:	f006 fda4 	bl	80152dc <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
        text.setWidthHeight(*this);
 800e794:	687b      	ldr	r3, [r7, #4]
 800e796:	3378      	adds	r3, #120	; 0x78
 800e798:	687a      	ldr	r2, [r7, #4]
 800e79a:	4611      	mov	r1, r2
 800e79c:	4618      	mov	r0, r3
 800e79e:	f7fe fda8 	bl	800d2f2 <_ZN8touchgfx8Drawable14setWidthHeightERKS0_>
    }
 800e7a2:	bf00      	nop
 800e7a4:	3708      	adds	r7, #8
 800e7a6:	46bd      	mov	sp, r7
 800e7a8:	bd80      	pop	{r7, pc}

0800e7aa <_ZN8touchgfx15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE15setTextPositionEssss>:
     * @param  x      The x coordinate.
     * @param  y      The y coordinate.
     * @param  width  The width of the text.
     * @param  height The height of the text.
     */
    void setTextPosition(int16_t x, int16_t y, int16_t width, int16_t height)
 800e7aa:	b590      	push	{r4, r7, lr}
 800e7ac:	b087      	sub	sp, #28
 800e7ae:	af02      	add	r7, sp, #8
 800e7b0:	60f8      	str	r0, [r7, #12]
 800e7b2:	4608      	mov	r0, r1
 800e7b4:	4611      	mov	r1, r2
 800e7b6:	461a      	mov	r2, r3
 800e7b8:	4603      	mov	r3, r0
 800e7ba:	817b      	strh	r3, [r7, #10]
 800e7bc:	460b      	mov	r3, r1
 800e7be:	813b      	strh	r3, [r7, #8]
 800e7c0:	4613      	mov	r3, r2
 800e7c2:	80fb      	strh	r3, [r7, #6]
    {
        text.setPosition(x, y, width, height);
 800e7c4:	68fb      	ldr	r3, [r7, #12]
 800e7c6:	f103 0078 	add.w	r0, r3, #120	; 0x78
 800e7ca:	f9b7 4006 	ldrsh.w	r4, [r7, #6]
 800e7ce:	f9b7 2008 	ldrsh.w	r2, [r7, #8]
 800e7d2:	f9b7 100a 	ldrsh.w	r1, [r7, #10]
 800e7d6:	f9b7 3020 	ldrsh.w	r3, [r7, #32]
 800e7da:	9300      	str	r3, [sp, #0]
 800e7dc:	4623      	mov	r3, r4
 800e7de:	f7fd f8f1 	bl	800b9c4 <_ZN8touchgfx8Drawable11setPositionEssss>
    }
 800e7e2:	bf00      	nop
 800e7e4:	3714      	adds	r7, #20
 800e7e6:	46bd      	mov	sp, r7
 800e7e8:	bd90      	pop	{r4, r7, pc}

0800e7ea <_ZN8touchgfx15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE13setTextColorsENS_9colortypeES5_>:
     * Sets text colors.
     *
     * @param  newColorReleased The new color released.
     * @param  newColorPressed  The new color pressed.
     */
    void setTextColors(colortype newColorReleased, colortype newColorPressed)
 800e7ea:	b580      	push	{r7, lr}
 800e7ec:	b084      	sub	sp, #16
 800e7ee:	af00      	add	r7, sp, #0
 800e7f0:	60f8      	str	r0, [r7, #12]
 800e7f2:	60b9      	str	r1, [r7, #8]
 800e7f4:	607a      	str	r2, [r7, #4]
    {
        colorReleased = newColorReleased;
 800e7f6:	68fb      	ldr	r3, [r7, #12]
 800e7f8:	68ba      	ldr	r2, [r7, #8]
 800e7fa:	f8c3 20c0 	str.w	r2, [r3, #192]	; 0xc0
        colorPressed = newColorPressed;
 800e7fe:	68fb      	ldr	r3, [r7, #12]
 800e800:	687a      	ldr	r2, [r7, #4]
 800e802:	f8c3 20c4 	str.w	r2, [r3, #196]	; 0xc4

        handlePressedUpdated();
 800e806:	68fb      	ldr	r3, [r7, #12]
 800e808:	681b      	ldr	r3, [r3, #0]
 800e80a:	338c      	adds	r3, #140	; 0x8c
 800e80c:	681b      	ldr	r3, [r3, #0]
 800e80e:	68f8      	ldr	r0, [r7, #12]
 800e810:	4798      	blx	r3
    }
 800e812:	bf00      	nop
 800e814:	3710      	adds	r7, #16
 800e816:	46bd      	mov	sp, r7
 800e818:	bd80      	pop	{r7, pc}

0800e81a <_ZN8touchgfx23WildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE20handlePressedUpdatedEv>:
    TextAreaWithOneWildcard wildcardText; ///< The wildcard text
    colortype colorReleased;              ///< The color released
    colortype colorPressed;               ///< The color pressed

    /** @copydoc AbstractButtonContainer::handlePressedUpdated() */
    virtual void handlePressedUpdated()
 800e81a:	b590      	push	{r4, r7, lr}
 800e81c:	b085      	sub	sp, #20
 800e81e:	af00      	add	r7, sp, #0
 800e820:	6078      	str	r0, [r7, #4]
    {
        wildcardText.setColor(T::getPressed() ? colorPressed : colorReleased);
 800e822:	687b      	ldr	r3, [r7, #4]
 800e824:	f103 0478 	add.w	r4, r3, #120	; 0x78
 800e828:	687b      	ldr	r3, [r7, #4]
 800e82a:	4618      	mov	r0, r3
 800e82c:	f7fd fb98 	bl	800bf60 <_ZNK8touchgfx23AbstractButtonContainer10getPressedEv>
 800e830:	4603      	mov	r3, r0
 800e832:	2b00      	cmp	r3, #0
 800e834:	d002      	beq.n	800e83c <_ZN8touchgfx23WildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE20handlePressedUpdatedEv+0x22>
 800e836:	687b      	ldr	r3, [r7, #4]
 800e838:	33c8      	adds	r3, #200	; 0xc8
 800e83a:	e001      	b.n	800e840 <_ZN8touchgfx23WildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE20handlePressedUpdatedEv+0x26>
 800e83c:	687b      	ldr	r3, [r7, #4]
 800e83e:	33c4      	adds	r3, #196	; 0xc4
 800e840:	60fc      	str	r4, [r7, #12]
 800e842:	681b      	ldr	r3, [r3, #0]
 800e844:	60bb      	str	r3, [r7, #8]
        color = newColor;
 800e846:	68fb      	ldr	r3, [r7, #12]
 800e848:	68ba      	ldr	r2, [r7, #8]
 800e84a:	631a      	str	r2, [r3, #48]	; 0x30
    }
 800e84c:	bf00      	nop
        T::handlePressedUpdated();
 800e84e:	687b      	ldr	r3, [r7, #4]
 800e850:	4618      	mov	r0, r3
 800e852:	f7fe fbc9 	bl	800cfe8 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv>
    }
 800e856:	bf00      	nop
 800e858:	3714      	adds	r7, #20
 800e85a:	46bd      	mov	sp, r7
 800e85c:	bd90      	pop	{r4, r7, pc}

0800e85e <_ZN8touchgfx15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE20handlePressedUpdatedEv>:
    TextArea text;           ///< The text
    colortype colorReleased; ///< The color released
    colortype colorPressed;  ///< The color pressed

    /** @copydoc AbstractButtonContainer::handlePressedUpdated() */
    virtual void handlePressedUpdated()
 800e85e:	b590      	push	{r4, r7, lr}
 800e860:	b085      	sub	sp, #20
 800e862:	af00      	add	r7, sp, #0
 800e864:	6078      	str	r0, [r7, #4]
    {
        text.setColor(T::getPressed() ? colorPressed : colorReleased);
 800e866:	687b      	ldr	r3, [r7, #4]
 800e868:	f103 0478 	add.w	r4, r3, #120	; 0x78
 800e86c:	687b      	ldr	r3, [r7, #4]
 800e86e:	4618      	mov	r0, r3
 800e870:	f7fd fb76 	bl	800bf60 <_ZNK8touchgfx23AbstractButtonContainer10getPressedEv>
 800e874:	4603      	mov	r3, r0
 800e876:	2b00      	cmp	r3, #0
 800e878:	d002      	beq.n	800e880 <_ZN8touchgfx15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE20handlePressedUpdatedEv+0x22>
 800e87a:	687b      	ldr	r3, [r7, #4]
 800e87c:	33c4      	adds	r3, #196	; 0xc4
 800e87e:	e001      	b.n	800e884 <_ZN8touchgfx15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE20handlePressedUpdatedEv+0x26>
 800e880:	687b      	ldr	r3, [r7, #4]
 800e882:	33c0      	adds	r3, #192	; 0xc0
 800e884:	60fc      	str	r4, [r7, #12]
 800e886:	681b      	ldr	r3, [r3, #0]
 800e888:	60bb      	str	r3, [r7, #8]
        color = newColor;
 800e88a:	68fb      	ldr	r3, [r7, #12]
 800e88c:	68ba      	ldr	r2, [r7, #8]
 800e88e:	631a      	str	r2, [r3, #48]	; 0x30
    }
 800e890:	bf00      	nop
        T::handlePressedUpdated();
 800e892:	687b      	ldr	r3, [r7, #4]
 800e894:	4618      	mov	r0, r3
 800e896:	f7fe fba7 	bl	800cfe8 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv>
    }
 800e89a:	bf00      	nop
 800e89c:	3714      	adds	r7, #20
 800e89e:	46bd      	mov	sp, r7
 800e8a0:	bd90      	pop	{r4, r7, pc}
	...

0800e8a4 <_ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_23AbstractButtonContainerEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 800e8a4:	b580      	push	{r7, lr}
 800e8a6:	b082      	sub	sp, #8
 800e8a8:	af00      	add	r7, sp, #0
 800e8aa:	6078      	str	r0, [r7, #4]
 800e8ac:	4a05      	ldr	r2, [pc, #20]	; (800e8c4 <_ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_23AbstractButtonContainerEvvED1Ev+0x20>)
 800e8ae:	687b      	ldr	r3, [r7, #4]
 800e8b0:	601a      	str	r2, [r3, #0]
 800e8b2:	687b      	ldr	r3, [r7, #4]
 800e8b4:	4618      	mov	r0, r3
 800e8b6:	f7fe fb77 	bl	800cfa8 <_ZN8touchgfx15GenericCallbackIRKNS_23AbstractButtonContainerEvvED1Ev>
 800e8ba:	687b      	ldr	r3, [r7, #4]
 800e8bc:	4618      	mov	r0, r3
 800e8be:	3708      	adds	r7, #8
 800e8c0:	46bd      	mov	sp, r7
 800e8c2:	bd80      	pop	{r7, pc}
 800e8c4:	0802eb10 	.word	0x0802eb10

0800e8c8 <_ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_23AbstractButtonContainerEvvED0Ev>:
 800e8c8:	b580      	push	{r7, lr}
 800e8ca:	b082      	sub	sp, #8
 800e8cc:	af00      	add	r7, sp, #0
 800e8ce:	6078      	str	r0, [r7, #4]
 800e8d0:	6878      	ldr	r0, [r7, #4]
 800e8d2:	f7ff ffe7 	bl	800e8a4 <_ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_23AbstractButtonContainerEvvED1Ev>
 800e8d6:	2110      	movs	r1, #16
 800e8d8:	6878      	ldr	r0, [r7, #4]
 800e8da:	f01b fd3e 	bl	802a35a <_ZdlPvj>
 800e8de:	687b      	ldr	r3, [r7, #4]
 800e8e0:	4618      	mov	r0, r3
 800e8e2:	3708      	adds	r7, #8
 800e8e4:	46bd      	mov	sp, r7
 800e8e6:	bd80      	pop	{r7, pc}

0800e8e8 <_ZN8touchgfx15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEED1Ev>:
class TextButtonStyle : public T
 800e8e8:	b580      	push	{r7, lr}
 800e8ea:	b082      	sub	sp, #8
 800e8ec:	af00      	add	r7, sp, #0
 800e8ee:	6078      	str	r0, [r7, #4]
 800e8f0:	4a08      	ldr	r2, [pc, #32]	; (800e914 <_ZN8touchgfx15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEED1Ev+0x2c>)
 800e8f2:	687b      	ldr	r3, [r7, #4]
 800e8f4:	601a      	str	r2, [r3, #0]
 800e8f6:	687b      	ldr	r3, [r7, #4]
 800e8f8:	3378      	adds	r3, #120	; 0x78
 800e8fa:	4618      	mov	r0, r3
 800e8fc:	f7fd fdae 	bl	800c45c <_ZN8touchgfx8TextAreaD1Ev>
 800e900:	687b      	ldr	r3, [r7, #4]
 800e902:	4618      	mov	r0, r3
 800e904:	f7fe f9b8 	bl	800cc78 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEED1Ev>
 800e908:	687b      	ldr	r3, [r7, #4]
 800e90a:	4618      	mov	r0, r3
 800e90c:	3708      	adds	r7, #8
 800e90e:	46bd      	mov	sp, r7
 800e910:	bd80      	pop	{r7, pc}
 800e912:	bf00      	nop
 800e914:	0802eb28 	.word	0x0802eb28

0800e918 <_ZN8touchgfx15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEED0Ev>:
 800e918:	b580      	push	{r7, lr}
 800e91a:	b082      	sub	sp, #8
 800e91c:	af00      	add	r7, sp, #0
 800e91e:	6078      	str	r0, [r7, #4]
 800e920:	6878      	ldr	r0, [r7, #4]
 800e922:	f7ff ffe1 	bl	800e8e8 <_ZN8touchgfx15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEED1Ev>
 800e926:	21c8      	movs	r1, #200	; 0xc8
 800e928:	6878      	ldr	r0, [r7, #4]
 800e92a:	f01b fd16 	bl	802a35a <_ZdlPvj>
 800e92e:	687b      	ldr	r3, [r7, #4]
 800e930:	4618      	mov	r0, r3
 800e932:	3708      	adds	r7, #8
 800e934:	46bd      	mov	sp, r7
 800e936:	bd80      	pop	{r7, pc}

0800e938 <_ZN8touchgfx23WildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEED1Ev>:
class WildcardTextButtonStyle : public T
 800e938:	b580      	push	{r7, lr}
 800e93a:	b082      	sub	sp, #8
 800e93c:	af00      	add	r7, sp, #0
 800e93e:	6078      	str	r0, [r7, #4]
 800e940:	4a08      	ldr	r2, [pc, #32]	; (800e964 <_ZN8touchgfx23WildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEED1Ev+0x2c>)
 800e942:	687b      	ldr	r3, [r7, #4]
 800e944:	601a      	str	r2, [r3, #0]
 800e946:	687b      	ldr	r3, [r7, #4]
 800e948:	3378      	adds	r3, #120	; 0x78
 800e94a:	4618      	mov	r0, r3
 800e94c:	f7fe fc0c 	bl	800d168 <_ZN8touchgfx23TextAreaWithOneWildcardD1Ev>
 800e950:	687b      	ldr	r3, [r7, #4]
 800e952:	4618      	mov	r0, r3
 800e954:	f7fe f990 	bl	800cc78 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEED1Ev>
 800e958:	687b      	ldr	r3, [r7, #4]
 800e95a:	4618      	mov	r0, r3
 800e95c:	3708      	adds	r7, #8
 800e95e:	46bd      	mov	sp, r7
 800e960:	bd80      	pop	{r7, pc}
 800e962:	bf00      	nop
 800e964:	0802ebc4 	.word	0x0802ebc4

0800e968 <_ZN8touchgfx23WildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEED0Ev>:
 800e968:	b580      	push	{r7, lr}
 800e96a:	b082      	sub	sp, #8
 800e96c:	af00      	add	r7, sp, #0
 800e96e:	6078      	str	r0, [r7, #4]
 800e970:	6878      	ldr	r0, [r7, #4]
 800e972:	f7ff ffe1 	bl	800e938 <_ZN8touchgfx23WildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEED1Ev>
 800e976:	21cc      	movs	r1, #204	; 0xcc
 800e978:	6878      	ldr	r0, [r7, #4]
 800e97a:	f01b fcee 	bl	802a35a <_ZdlPvj>
 800e97e:	687b      	ldr	r3, [r7, #4]
 800e980:	4618      	mov	r0, r3
 800e982:	3708      	adds	r7, #8
 800e984:	46bd      	mov	sp, r7
 800e986:	bd80      	pop	{r7, pc}

0800e988 <_ZN8touchgfx25AbstractProgressIndicatorD1Ev>:
 * to implement a progress indicator. For more specific implementations see classes that
 * inherit from AbstractProgressIndicator.
 *
 * @see BoxProgress, CircleProgress, ImageProgress, LineProgress, TextProgress
 */
class AbstractProgressIndicator : public Container
 800e988:	b580      	push	{r7, lr}
 800e98a:	b082      	sub	sp, #8
 800e98c:	af00      	add	r7, sp, #0
 800e98e:	6078      	str	r0, [r7, #4]
 800e990:	4a0a      	ldr	r2, [pc, #40]	; (800e9bc <_ZN8touchgfx25AbstractProgressIndicatorD1Ev+0x34>)
 800e992:	687b      	ldr	r3, [r7, #4]
 800e994:	601a      	str	r2, [r3, #0]
 800e996:	687b      	ldr	r3, [r7, #4]
 800e998:	3358      	adds	r3, #88	; 0x58
 800e99a:	4618      	mov	r0, r3
 800e99c:	f7fd fa88 	bl	800beb0 <_ZN8touchgfx9ContainerD1Ev>
 800e9a0:	687b      	ldr	r3, [r7, #4]
 800e9a2:	332c      	adds	r3, #44	; 0x2c
 800e9a4:	4618      	mov	r0, r3
 800e9a6:	f7fd fb75 	bl	800c094 <_ZN8touchgfx5ImageD1Ev>
 800e9aa:	687b      	ldr	r3, [r7, #4]
 800e9ac:	4618      	mov	r0, r3
 800e9ae:	f7fd fa7f 	bl	800beb0 <_ZN8touchgfx9ContainerD1Ev>
 800e9b2:	687b      	ldr	r3, [r7, #4]
 800e9b4:	4618      	mov	r0, r3
 800e9b6:	3708      	adds	r7, #8
 800e9b8:	46bd      	mov	sp, r7
 800e9ba:	bd80      	pop	{r7, pc}
 800e9bc:	0802f500 	.word	0x0802f500

0800e9c0 <_ZN8touchgfx25AbstractProgressIndicatorD0Ev>:
 800e9c0:	b580      	push	{r7, lr}
 800e9c2:	b082      	sub	sp, #8
 800e9c4:	af00      	add	r7, sp, #0
 800e9c6:	6078      	str	r0, [r7, #4]
 800e9c8:	6878      	ldr	r0, [r7, #4]
 800e9ca:	f7ff ffdd 	bl	800e988 <_ZN8touchgfx25AbstractProgressIndicatorD1Ev>
 800e9ce:	21b4      	movs	r1, #180	; 0xb4
 800e9d0:	6878      	ldr	r0, [r7, #4]
 800e9d2:	f01b fcc2 	bl	802a35a <_ZdlPvj>
 800e9d6:	687b      	ldr	r3, [r7, #4]
 800e9d8:	4618      	mov	r0, r3
 800e9da:	3708      	adds	r7, #8
 800e9dc:	46bd      	mov	sp, r7
 800e9de:	bd80      	pop	{r7, pc}

0800e9e0 <_ZN8touchgfx12CanvasWidgetD1Ev>:
 * Class for drawing complex polygons on the display using CanvasWidgetRenderer. The
 * CanvasWidget is used by passing it to a Canvas object, drawing the outline of the
 * object and then having CanvasWidget render the outline on the display using the
 * assigned painter.
 */
class CanvasWidget : public Widget
 800e9e0:	b580      	push	{r7, lr}
 800e9e2:	b082      	sub	sp, #8
 800e9e4:	af00      	add	r7, sp, #0
 800e9e6:	6078      	str	r0, [r7, #4]
 800e9e8:	4a05      	ldr	r2, [pc, #20]	; (800ea00 <_ZN8touchgfx12CanvasWidgetD1Ev+0x20>)
 800e9ea:	687b      	ldr	r3, [r7, #4]
 800e9ec:	601a      	str	r2, [r3, #0]
 800e9ee:	687b      	ldr	r3, [r7, #4]
 800e9f0:	4618      	mov	r0, r3
 800e9f2:	f7fd f99d 	bl	800bd30 <_ZN8touchgfx6WidgetD1Ev>
 800e9f6:	687b      	ldr	r3, [r7, #4]
 800e9f8:	4618      	mov	r0, r3
 800e9fa:	3708      	adds	r7, #8
 800e9fc:	46bd      	mov	sp, r7
 800e9fe:	bd80      	pop	{r7, pc}
 800ea00:	0802f924 	.word	0x0802f924

0800ea04 <_ZN8touchgfx12CanvasWidgetD0Ev>:
 800ea04:	b580      	push	{r7, lr}
 800ea06:	b082      	sub	sp, #8
 800ea08:	af00      	add	r7, sp, #0
 800ea0a:	6078      	str	r0, [r7, #4]
 800ea0c:	6878      	ldr	r0, [r7, #4]
 800ea0e:	f7ff ffe7 	bl	800e9e0 <_ZN8touchgfx12CanvasWidgetD1Ev>
 800ea12:	212c      	movs	r1, #44	; 0x2c
 800ea14:	6878      	ldr	r0, [r7, #4]
 800ea16:	f01b fca0 	bl	802a35a <_ZdlPvj>
 800ea1a:	687b      	ldr	r3, [r7, #4]
 800ea1c:	4618      	mov	r0, r3
 800ea1e:	3708      	adds	r7, #8
 800ea20:	46bd      	mov	sp, r7
 800ea22:	bd80      	pop	{r7, pc}

0800ea24 <_ZN8touchgfx6CircleD1Ev>:
 *            int x, y, r;
 *            circle.getCenter(&x, &y); // Will return (1, 1)
 *            circle.getRadius(&r); // Will return 0
 *       @endcode.
 */
class Circle : public CanvasWidget
 800ea24:	b580      	push	{r7, lr}
 800ea26:	b082      	sub	sp, #8
 800ea28:	af00      	add	r7, sp, #0
 800ea2a:	6078      	str	r0, [r7, #4]
 800ea2c:	4a05      	ldr	r2, [pc, #20]	; (800ea44 <_ZN8touchgfx6CircleD1Ev+0x20>)
 800ea2e:	687b      	ldr	r3, [r7, #4]
 800ea30:	601a      	str	r2, [r3, #0]
 800ea32:	687b      	ldr	r3, [r7, #4]
 800ea34:	4618      	mov	r0, r3
 800ea36:	f7ff ffd3 	bl	800e9e0 <_ZN8touchgfx12CanvasWidgetD1Ev>
 800ea3a:	687b      	ldr	r3, [r7, #4]
 800ea3c:	4618      	mov	r0, r3
 800ea3e:	3708      	adds	r7, #8
 800ea40:	46bd      	mov	sp, r7
 800ea42:	bd80      	pop	{r7, pc}
 800ea44:	0802f8ac 	.word	0x0802f8ac

0800ea48 <_ZN8touchgfx6CircleD0Ev>:
 800ea48:	b580      	push	{r7, lr}
 800ea4a:	b082      	sub	sp, #8
 800ea4c:	af00      	add	r7, sp, #0
 800ea4e:	6078      	str	r0, [r7, #4]
 800ea50:	6878      	ldr	r0, [r7, #4]
 800ea52:	f7ff ffe7 	bl	800ea24 <_ZN8touchgfx6CircleD1Ev>
 800ea56:	2148      	movs	r1, #72	; 0x48
 800ea58:	6878      	ldr	r0, [r7, #4]
 800ea5a:	f01b fc7e 	bl	802a35a <_ZdlPvj>
 800ea5e:	687b      	ldr	r3, [r7, #4]
 800ea60:	4618      	mov	r0, r3
 800ea62:	3708      	adds	r7, #8
 800ea64:	46bd      	mov	sp, r7
 800ea66:	bd80      	pop	{r7, pc}

0800ea68 <_ZN8touchgfx14CircleProgressD1Ev>:
 * circle progress is defined by setting the minimum and maximum angle of the arc.
 *
 * @note As CircleProgress uses CanvasWidgetRenderer, it is important that a buffer is set up
 *       by calling CanvasWidgetRendere::setBuffer().
 */
class CircleProgress : public AbstractProgressIndicator
 800ea68:	b580      	push	{r7, lr}
 800ea6a:	b082      	sub	sp, #8
 800ea6c:	af00      	add	r7, sp, #0
 800ea6e:	6078      	str	r0, [r7, #4]
 800ea70:	4a08      	ldr	r2, [pc, #32]	; (800ea94 <_ZN8touchgfx14CircleProgressD1Ev+0x2c>)
 800ea72:	687b      	ldr	r3, [r7, #4]
 800ea74:	601a      	str	r2, [r3, #0]
 800ea76:	687b      	ldr	r3, [r7, #4]
 800ea78:	33b4      	adds	r3, #180	; 0xb4
 800ea7a:	4618      	mov	r0, r3
 800ea7c:	f7ff ffd2 	bl	800ea24 <_ZN8touchgfx6CircleD1Ev>
 800ea80:	687b      	ldr	r3, [r7, #4]
 800ea82:	4618      	mov	r0, r3
 800ea84:	f7ff ff80 	bl	800e988 <_ZN8touchgfx25AbstractProgressIndicatorD1Ev>
 800ea88:	687b      	ldr	r3, [r7, #4]
 800ea8a:	4618      	mov	r0, r3
 800ea8c:	3708      	adds	r7, #8
 800ea8e:	46bd      	mov	sp, r7
 800ea90:	bd80      	pop	{r7, pc}
 800ea92:	bf00      	nop
 800ea94:	0802f304 	.word	0x0802f304

0800ea98 <_ZN8touchgfx14CircleProgressD0Ev>:
 800ea98:	b580      	push	{r7, lr}
 800ea9a:	b082      	sub	sp, #8
 800ea9c:	af00      	add	r7, sp, #0
 800ea9e:	6078      	str	r0, [r7, #4]
 800eaa0:	6878      	ldr	r0, [r7, #4]
 800eaa2:	f7ff ffe1 	bl	800ea68 <_ZN8touchgfx14CircleProgressD1Ev>
 800eaa6:	f44f 7180 	mov.w	r1, #256	; 0x100
 800eaaa:	6878      	ldr	r0, [r7, #4]
 800eaac:	f01b fc55 	bl	802a35a <_ZdlPvj>
 800eab0:	687b      	ldr	r3, [r7, #4]
 800eab2:	4618      	mov	r0, r3
 800eab4:	3708      	adds	r7, #8
 800eab6:	46bd      	mov	sp, r7
 800eab8:	bd80      	pop	{r7, pc}
	...

0800eabc <_ZN8touchgfx13PainterRGB565D1Ev>:
class PainterRGB565 : public AbstractPainterRGB565, public AbstractPainterColor
 800eabc:	b580      	push	{r7, lr}
 800eabe:	b082      	sub	sp, #8
 800eac0:	af00      	add	r7, sp, #0
 800eac2:	6078      	str	r0, [r7, #4]
 800eac4:	4a09      	ldr	r2, [pc, #36]	; (800eaec <_ZN8touchgfx13PainterRGB565D1Ev+0x30>)
 800eac6:	687b      	ldr	r3, [r7, #4]
 800eac8:	601a      	str	r2, [r3, #0]
 800eaca:	4a09      	ldr	r2, [pc, #36]	; (800eaf0 <_ZN8touchgfx13PainterRGB565D1Ev+0x34>)
 800eacc:	687b      	ldr	r3, [r7, #4]
 800eace:	609a      	str	r2, [r3, #8]
 800ead0:	687b      	ldr	r3, [r7, #4]
 800ead2:	3308      	adds	r3, #8
 800ead4:	4618      	mov	r0, r3
 800ead6:	f7fe fd19 	bl	800d50c <_ZN8touchgfx20AbstractPainterColorD1Ev>
 800eada:	687b      	ldr	r3, [r7, #4]
 800eadc:	4618      	mov	r0, r3
 800eade:	f7fe fda1 	bl	800d624 <_ZN8touchgfx21AbstractPainterRGB565D1Ev>
 800eae2:	687b      	ldr	r3, [r7, #4]
 800eae4:	4618      	mov	r0, r3
 800eae6:	3708      	adds	r7, #8
 800eae8:	46bd      	mov	sp, r7
 800eaea:	bd80      	pop	{r7, pc}
 800eaec:	0802f7bc 	.word	0x0802f7bc
 800eaf0:	0802f7e0 	.word	0x0802f7e0

0800eaf4 <_ZThn8_N8touchgfx13PainterRGB565D1Ev>:
 800eaf4:	f1a0 0008 	sub.w	r0, r0, #8
 800eaf8:	e7e0      	b.n	800eabc <_ZN8touchgfx13PainterRGB565D1Ev>
 800eafa:	bf00      	nop

0800eafc <_ZN8touchgfx13PainterRGB565D0Ev>:
 800eafc:	b580      	push	{r7, lr}
 800eafe:	b082      	sub	sp, #8
 800eb00:	af00      	add	r7, sp, #0
 800eb02:	6078      	str	r0, [r7, #4]
 800eb04:	6878      	ldr	r0, [r7, #4]
 800eb06:	f7ff ffd9 	bl	800eabc <_ZN8touchgfx13PainterRGB565D1Ev>
 800eb0a:	2114      	movs	r1, #20
 800eb0c:	6878      	ldr	r0, [r7, #4]
 800eb0e:	f01b fc24 	bl	802a35a <_ZdlPvj>
 800eb12:	687b      	ldr	r3, [r7, #4]
 800eb14:	4618      	mov	r0, r3
 800eb16:	3708      	adds	r7, #8
 800eb18:	46bd      	mov	sp, r7
 800eb1a:	bd80      	pop	{r7, pc}

0800eb1c <_ZThn8_N8touchgfx13PainterRGB565D0Ev>:
 800eb1c:	f1a0 0008 	sub.w	r0, r0, #8
 800eb20:	e7ec      	b.n	800eafc <_ZN8touchgfx13PainterRGB565D0Ev>
	...

0800eb24 <_ZN8touchgfx4LineD1Ev>:
 *            line.setStart(1.1f, 1.1f); // Will use (35/32, 35/32) = (1.09375f, 1.09375f)
 *            int x, y;
 *            line.getStart(&x, &y); // Will return (1, 1)
 *       @endcode.
 */
class Line : public CanvasWidget
 800eb24:	b580      	push	{r7, lr}
 800eb26:	b082      	sub	sp, #8
 800eb28:	af00      	add	r7, sp, #0
 800eb2a:	6078      	str	r0, [r7, #4]
 800eb2c:	4a05      	ldr	r2, [pc, #20]	; (800eb44 <_ZN8touchgfx4LineD1Ev+0x20>)
 800eb2e:	687b      	ldr	r3, [r7, #4]
 800eb30:	601a      	str	r2, [r3, #0]
 800eb32:	687b      	ldr	r3, [r7, #4]
 800eb34:	4618      	mov	r0, r3
 800eb36:	f7ff ff53 	bl	800e9e0 <_ZN8touchgfx12CanvasWidgetD1Ev>
 800eb3a:	687b      	ldr	r3, [r7, #4]
 800eb3c:	4618      	mov	r0, r3
 800eb3e:	3708      	adds	r7, #8
 800eb40:	46bd      	mov	sp, r7
 800eb42:	bd80      	pop	{r7, pc}
 800eb44:	0802f9f8 	.word	0x0802f9f8

0800eb48 <_ZN8touchgfx4LineD0Ev>:
 800eb48:	b580      	push	{r7, lr}
 800eb4a:	b082      	sub	sp, #8
 800eb4c:	af00      	add	r7, sp, #0
 800eb4e:	6078      	str	r0, [r7, #4]
 800eb50:	6878      	ldr	r0, [r7, #4]
 800eb52:	f7ff ffe7 	bl	800eb24 <_ZN8touchgfx4LineD1Ev>
 800eb56:	2170      	movs	r1, #112	; 0x70
 800eb58:	6878      	ldr	r0, [r7, #4]
 800eb5a:	f01b fbfe 	bl	802a35a <_ZdlPvj>
 800eb5e:	687b      	ldr	r3, [r7, #4]
 800eb60:	4618      	mov	r0, r3
 800eb62:	3708      	adds	r7, #8
 800eb64:	46bd      	mov	sp, r7
 800eb66:	bd80      	pop	{r7, pc}

0800eb68 <_ZN8touchgfx12LineProgressD1Ev>:
 * horizontal or vertical, but can start at any coordinate and finish at any coordinate.
 *
 * @note As LineProgress uses CanvasWidgetRenderer, it is important that a buffer is set up by
 *       calling CanvasWidgetRendere::setBuffer().
 */
class LineProgress : public AbstractProgressIndicator
 800eb68:	b580      	push	{r7, lr}
 800eb6a:	b082      	sub	sp, #8
 800eb6c:	af00      	add	r7, sp, #0
 800eb6e:	6078      	str	r0, [r7, #4]
 800eb70:	4a08      	ldr	r2, [pc, #32]	; (800eb94 <_ZN8touchgfx12LineProgressD1Ev+0x2c>)
 800eb72:	687b      	ldr	r3, [r7, #4]
 800eb74:	601a      	str	r2, [r3, #0]
 800eb76:	687b      	ldr	r3, [r7, #4]
 800eb78:	33b4      	adds	r3, #180	; 0xb4
 800eb7a:	4618      	mov	r0, r3
 800eb7c:	f7ff ffd2 	bl	800eb24 <_ZN8touchgfx4LineD1Ev>
 800eb80:	687b      	ldr	r3, [r7, #4]
 800eb82:	4618      	mov	r0, r3
 800eb84:	f7ff ff00 	bl	800e988 <_ZN8touchgfx25AbstractProgressIndicatorD1Ev>
 800eb88:	687b      	ldr	r3, [r7, #4]
 800eb8a:	4618      	mov	r0, r3
 800eb8c:	3708      	adds	r7, #8
 800eb8e:	46bd      	mov	sp, r7
 800eb90:	bd80      	pop	{r7, pc}
 800eb92:	bf00      	nop
 800eb94:	0802f408 	.word	0x0802f408

0800eb98 <_ZN8touchgfx12LineProgressD0Ev>:
 800eb98:	b580      	push	{r7, lr}
 800eb9a:	b082      	sub	sp, #8
 800eb9c:	af00      	add	r7, sp, #0
 800eb9e:	6078      	str	r0, [r7, #4]
 800eba0:	6878      	ldr	r0, [r7, #4]
 800eba2:	f7ff ffe1 	bl	800eb68 <_ZN8touchgfx12LineProgressD1Ev>
 800eba6:	f44f 719a 	mov.w	r1, #308	; 0x134
 800ebaa:	6878      	ldr	r0, [r7, #4]
 800ebac:	f01b fbd5 	bl	802a35a <_ZdlPvj>
 800ebb0:	687b      	ldr	r3, [r7, #4]
 800ebb2:	4618      	mov	r0, r3
 800ebb4:	3708      	adds	r7, #8
 800ebb6:	46bd      	mov	sp, r7
 800ebb8:	bd80      	pop	{r7, pc}

0800ebba <_ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_23AbstractButtonContainerEvvE7executeES4_>:
    virtual void execute(T1 t1)
 800ebba:	b580      	push	{r7, lr}
 800ebbc:	b082      	sub	sp, #8
 800ebbe:	af00      	add	r7, sp, #0
 800ebc0:	6078      	str	r0, [r7, #4]
 800ebc2:	6039      	str	r1, [r7, #0]
        (pobject->*pmemfun)(t1);
 800ebc4:	687b      	ldr	r3, [r7, #4]
 800ebc6:	685b      	ldr	r3, [r3, #4]
 800ebc8:	687a      	ldr	r2, [r7, #4]
 800ebca:	68d2      	ldr	r2, [r2, #12]
 800ebcc:	1052      	asrs	r2, r2, #1
 800ebce:	1898      	adds	r0, r3, r2
 800ebd0:	687b      	ldr	r3, [r7, #4]
 800ebd2:	68db      	ldr	r3, [r3, #12]
 800ebd4:	f003 0301 	and.w	r3, r3, #1
 800ebd8:	2b00      	cmp	r3, #0
 800ebda:	d102      	bne.n	800ebe2 <_ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_23AbstractButtonContainerEvvE7executeES4_+0x28>
 800ebdc:	687b      	ldr	r3, [r7, #4]
 800ebde:	689b      	ldr	r3, [r3, #8]
 800ebe0:	e00a      	b.n	800ebf8 <_ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_23AbstractButtonContainerEvvE7executeES4_+0x3e>
 800ebe2:	687b      	ldr	r3, [r7, #4]
 800ebe4:	685b      	ldr	r3, [r3, #4]
 800ebe6:	687a      	ldr	r2, [r7, #4]
 800ebe8:	68d2      	ldr	r2, [r2, #12]
 800ebea:	1052      	asrs	r2, r2, #1
 800ebec:	4413      	add	r3, r2
 800ebee:	681b      	ldr	r3, [r3, #0]
 800ebf0:	687a      	ldr	r2, [r7, #4]
 800ebf2:	6892      	ldr	r2, [r2, #8]
 800ebf4:	4413      	add	r3, r2
 800ebf6:	681b      	ldr	r3, [r3, #0]
 800ebf8:	6839      	ldr	r1, [r7, #0]
 800ebfa:	4798      	blx	r3
    }
 800ebfc:	bf00      	nop
 800ebfe:	3708      	adds	r7, #8
 800ec00:	46bd      	mov	sp, r7
 800ec02:	bd80      	pop	{r7, pc}

0800ec04 <_ZNK8touchgfx8CallbackI15Screen1ViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv>:
    virtual bool isValid() const
 800ec04:	b480      	push	{r7}
 800ec06:	b083      	sub	sp, #12
 800ec08:	af00      	add	r7, sp, #0
 800ec0a:	6078      	str	r0, [r7, #4]
        return (pobject != 0) && (pmemfun != 0);
 800ec0c:	687b      	ldr	r3, [r7, #4]
 800ec0e:	685b      	ldr	r3, [r3, #4]
 800ec10:	2b00      	cmp	r3, #0
 800ec12:	d010      	beq.n	800ec36 <_ZNK8touchgfx8CallbackI15Screen1ViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x32>
 800ec14:	687b      	ldr	r3, [r7, #4]
 800ec16:	689b      	ldr	r3, [r3, #8]
 800ec18:	2b00      	cmp	r3, #0
 800ec1a:	d107      	bne.n	800ec2c <_ZNK8touchgfx8CallbackI15Screen1ViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x28>
 800ec1c:	687b      	ldr	r3, [r7, #4]
 800ec1e:	68db      	ldr	r3, [r3, #12]
 800ec20:	f003 0301 	and.w	r3, r3, #1
 800ec24:	2b00      	cmp	r3, #0
 800ec26:	d101      	bne.n	800ec2c <_ZNK8touchgfx8CallbackI15Screen1ViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x28>
 800ec28:	2301      	movs	r3, #1
 800ec2a:	e000      	b.n	800ec2e <_ZNK8touchgfx8CallbackI15Screen1ViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x2a>
 800ec2c:	2300      	movs	r3, #0
 800ec2e:	2b01      	cmp	r3, #1
 800ec30:	d001      	beq.n	800ec36 <_ZNK8touchgfx8CallbackI15Screen1ViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x32>
 800ec32:	2301      	movs	r3, #1
 800ec34:	e000      	b.n	800ec38 <_ZNK8touchgfx8CallbackI15Screen1ViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x34>
 800ec36:	2300      	movs	r3, #0
    }
 800ec38:	4618      	mov	r0, r3
 800ec3a:	370c      	adds	r7, #12
 800ec3c:	46bd      	mov	sp, r7
 800ec3e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ec42:	4770      	bx	lr

0800ec44 <_ZN8touchgfx15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE18handleAlphaUpdatedEv>:

    /** @copydoc AbstractButtonContainer::handleAlphaUpdated() */
    virtual void handleAlphaUpdated()
 800ec44:	b590      	push	{r4, r7, lr}
 800ec46:	b083      	sub	sp, #12
 800ec48:	af00      	add	r7, sp, #0
 800ec4a:	6078      	str	r0, [r7, #4]
    {
        text.setAlpha(T::getAlpha());
 800ec4c:	687b      	ldr	r3, [r7, #4]
 800ec4e:	f103 0478 	add.w	r4, r3, #120	; 0x78
 800ec52:	687b      	ldr	r3, [r7, #4]
 800ec54:	4618      	mov	r0, r3
 800ec56:	f7fd f990 	bl	800bf7a <_ZNK8touchgfx23AbstractButtonContainer8getAlphaEv>
 800ec5a:	4603      	mov	r3, r0
 800ec5c:	4619      	mov	r1, r3
 800ec5e:	4620      	mov	r0, r4
 800ec60:	f7fd fb48 	bl	800c2f4 <_ZN8touchgfx8TextArea8setAlphaEh>
        T::handleAlphaUpdated();
 800ec64:	687b      	ldr	r3, [r7, #4]
 800ec66:	4618      	mov	r0, r3
 800ec68:	f7fe fb1f 	bl	800d2aa <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE18handleAlphaUpdatedEv>
    }
 800ec6c:	bf00      	nop
 800ec6e:	370c      	adds	r7, #12
 800ec70:	46bd      	mov	sp, r7
 800ec72:	bd90      	pop	{r4, r7, pc}

0800ec74 <_ZN8touchgfx23WildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE18handleAlphaUpdatedEv>:

    /** @copydoc AbstractButtonContainer::handleAlphaUpdated() */
    virtual void handleAlphaUpdated()
 800ec74:	b590      	push	{r4, r7, lr}
 800ec76:	b083      	sub	sp, #12
 800ec78:	af00      	add	r7, sp, #0
 800ec7a:	6078      	str	r0, [r7, #4]
    {
        wildcardText.setAlpha(T::getAlpha());
 800ec7c:	687b      	ldr	r3, [r7, #4]
 800ec7e:	f103 0478 	add.w	r4, r3, #120	; 0x78
 800ec82:	687b      	ldr	r3, [r7, #4]
 800ec84:	4618      	mov	r0, r3
 800ec86:	f7fd f978 	bl	800bf7a <_ZNK8touchgfx23AbstractButtonContainer8getAlphaEv>
 800ec8a:	4603      	mov	r3, r0
 800ec8c:	4619      	mov	r1, r3
 800ec8e:	4620      	mov	r0, r4
 800ec90:	f7fd fb30 	bl	800c2f4 <_ZN8touchgfx8TextArea8setAlphaEh>
        T::handleAlphaUpdated();
 800ec94:	687b      	ldr	r3, [r7, #4]
 800ec96:	4618      	mov	r0, r3
 800ec98:	f7fe fb07 	bl	800d2aa <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE18handleAlphaUpdatedEv>
    }
 800ec9c:	bf00      	nop
 800ec9e:	370c      	adds	r7, #12
 800eca0:	46bd      	mov	sp, r7
 800eca2:	bd90      	pop	{r4, r7, pc}

0800eca4 <_ZN14BitmapDatabase11getInstanceEv>:
};

namespace BitmapDatabase
{
const touchgfx::Bitmap::BitmapData* getInstance()
{
 800eca4:	b480      	push	{r7}
 800eca6:	af00      	add	r7, sp, #0
    return bitmap_database;
 800eca8:	4b02      	ldr	r3, [pc, #8]	; (800ecb4 <_ZN14BitmapDatabase11getInstanceEv+0x10>)
}
 800ecaa:	4618      	mov	r0, r3
 800ecac:	46bd      	mov	sp, r7
 800ecae:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ecb2:	4770      	bx	lr
 800ecb4:	0802ece0 	.word	0x0802ece0

0800ecb8 <_ZN14BitmapDatabase15getInstanceSizeEv>:

uint16_t getInstanceSize()
{
 800ecb8:	b480      	push	{r7}
 800ecba:	af00      	add	r7, sp, #0
    return (uint16_t)(sizeof(bitmap_database) / sizeof(touchgfx::Bitmap::BitmapData));
 800ecbc:	2307      	movs	r3, #7
}
 800ecbe:	4618      	mov	r0, r3
 800ecc0:	46bd      	mov	sp, r7
 800ecc2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ecc6:	4770      	bx	lr

0800ecc8 <_ZNK8touchgfx4Font10getKerningEtPKNS_9GlyphNodeE>:
    virtual int8_t getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const
 800ecc8:	b480      	push	{r7}
 800ecca:	b085      	sub	sp, #20
 800eccc:	af00      	add	r7, sp, #0
 800ecce:	60f8      	str	r0, [r7, #12]
 800ecd0:	460b      	mov	r3, r1
 800ecd2:	607a      	str	r2, [r7, #4]
 800ecd4:	817b      	strh	r3, [r7, #10]
        return 0;
 800ecd6:	2300      	movs	r3, #0
    }
 800ecd8:	4618      	mov	r0, r3
 800ecda:	3714      	adds	r7, #20
 800ecdc:	46bd      	mov	sp, r7
 800ecde:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ece2:	4770      	bx	lr

0800ece4 <_ZNK8touchgfx4Font12getGSUBTableEv>:
    virtual const uint16_t* getGSUBTable() const
 800ece4:	b480      	push	{r7}
 800ece6:	b083      	sub	sp, #12
 800ece8:	af00      	add	r7, sp, #0
 800ecea:	6078      	str	r0, [r7, #4]
        return 0;
 800ecec:	2300      	movs	r3, #0
    }
 800ecee:	4618      	mov	r0, r3
 800ecf0:	370c      	adds	r7, #12
 800ecf2:	46bd      	mov	sp, r7
 800ecf4:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ecf8:	4770      	bx	lr

0800ecfa <_ZNK8touchgfx4Font23getContextualFormsTableEv>:
    virtual const FontContextualFormsTable* getContextualFormsTable() const
 800ecfa:	b480      	push	{r7}
 800ecfc:	b083      	sub	sp, #12
 800ecfe:	af00      	add	r7, sp, #0
 800ed00:	6078      	str	r0, [r7, #4]
        return 0;
 800ed02:	2300      	movs	r3, #0
    }
 800ed04:	4618      	mov	r0, r3
 800ed06:	370c      	adds	r7, #12
 800ed08:	46bd      	mov	sp, r7
 800ed0a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ed0e:	4770      	bx	lr

0800ed10 <_ZN8touchgfx9TypedText25registerTypedTextDatabaseEPKNS0_13TypedTextDataEPKPKNS_4FontEt>:
     *
     * @param  data A reference to the TypedTextData storage array.
     * @param  f    The fonts associated with the array.
     * @param  n    The number of typed texts in the array.
     */
    static void registerTypedTextDatabase(const TypedTextData* data, const Font* const* f, const uint16_t n)
 800ed10:	b480      	push	{r7}
 800ed12:	b085      	sub	sp, #20
 800ed14:	af00      	add	r7, sp, #0
 800ed16:	60f8      	str	r0, [r7, #12]
 800ed18:	60b9      	str	r1, [r7, #8]
 800ed1a:	4613      	mov	r3, r2
 800ed1c:	80fb      	strh	r3, [r7, #6]
    {
        typedTexts = data;
 800ed1e:	4a07      	ldr	r2, [pc, #28]	; (800ed3c <_ZN8touchgfx9TypedText25registerTypedTextDatabaseEPKNS0_13TypedTextDataEPKPKNS_4FontEt+0x2c>)
 800ed20:	68fb      	ldr	r3, [r7, #12]
 800ed22:	6013      	str	r3, [r2, #0]
        fonts = f;
 800ed24:	4a06      	ldr	r2, [pc, #24]	; (800ed40 <_ZN8touchgfx9TypedText25registerTypedTextDatabaseEPKNS0_13TypedTextDataEPKPKNS_4FontEt+0x30>)
 800ed26:	68bb      	ldr	r3, [r7, #8]
 800ed28:	6013      	str	r3, [r2, #0]
        numberOfTypedTexts = n;
 800ed2a:	4a06      	ldr	r2, [pc, #24]	; (800ed44 <_ZN8touchgfx9TypedText25registerTypedTextDatabaseEPKNS0_13TypedTextDataEPKPKNS_4FontEt+0x34>)
 800ed2c:	88fb      	ldrh	r3, [r7, #6]
 800ed2e:	8013      	strh	r3, [r2, #0]
    }
 800ed30:	bf00      	nop
 800ed32:	3714      	adds	r7, #20
 800ed34:	46bd      	mov	sp, r7
 800ed36:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ed3a:	4770      	bx	lr
 800ed3c:	20006c8c 	.word	0x20006c8c
 800ed40:	20006c94 	.word	0x20006c94
 800ed44:	20006c90 	.word	0x20006c90

0800ed48 <_ZNK8touchgfx4Font14getStringWidthEPKtz>:
#include <touchgfx/hal/HAL.hpp>
#include <touchgfx/lcd/LCD.hpp>
#include <texts/TypedTextDatabase.hpp>

uint16_t touchgfx::Font::getStringWidth(const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 800ed48:	b40e      	push	{r1, r2, r3}
 800ed4a:	b580      	push	{r7, lr}
 800ed4c:	b085      	sub	sp, #20
 800ed4e:	af00      	add	r7, sp, #0
 800ed50:	6078      	str	r0, [r7, #4]
    va_list pArg;
    va_start(pArg, text);
 800ed52:	f107 0320 	add.w	r3, r7, #32
 800ed56:	60bb      	str	r3, [r7, #8]
    uint16_t width = getStringWidthRTL(TEXT_DIRECTION_LTR, text, pArg);
 800ed58:	68bb      	ldr	r3, [r7, #8]
 800ed5a:	69fa      	ldr	r2, [r7, #28]
 800ed5c:	2100      	movs	r1, #0
 800ed5e:	6878      	ldr	r0, [r7, #4]
 800ed60:	f00a fb92 	bl	8019488 <_ZNK8touchgfx4Font17getStringWidthRTLEhPKtSt9__va_list>
 800ed64:	4603      	mov	r3, r0
 800ed66:	81fb      	strh	r3, [r7, #14]
    va_end(pArg);
    return width;
 800ed68:	89fb      	ldrh	r3, [r7, #14]
}
 800ed6a:	4618      	mov	r0, r3
 800ed6c:	3714      	adds	r7, #20
 800ed6e:	46bd      	mov	sp, r7
 800ed70:	e8bd 4080 	ldmia.w	sp!, {r7, lr}
 800ed74:	b003      	add	sp, #12
 800ed76:	4770      	bx	lr

0800ed78 <_ZNK8touchgfx4Font14getStringWidthEhPKtz>:

uint16_t touchgfx::Font::getStringWidth(touchgfx::TextDirection textDirection, const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 800ed78:	b40c      	push	{r2, r3}
 800ed7a:	b580      	push	{r7, lr}
 800ed7c:	b084      	sub	sp, #16
 800ed7e:	af00      	add	r7, sp, #0
 800ed80:	6078      	str	r0, [r7, #4]
 800ed82:	460b      	mov	r3, r1
 800ed84:	70fb      	strb	r3, [r7, #3]
    va_list pArg;
    va_start(pArg, text);
 800ed86:	f107 031c 	add.w	r3, r7, #28
 800ed8a:	60bb      	str	r3, [r7, #8]
    uint16_t width = getStringWidthRTL(textDirection, text, pArg);
 800ed8c:	78f9      	ldrb	r1, [r7, #3]
 800ed8e:	68bb      	ldr	r3, [r7, #8]
 800ed90:	69ba      	ldr	r2, [r7, #24]
 800ed92:	6878      	ldr	r0, [r7, #4]
 800ed94:	f00a fb78 	bl	8019488 <_ZNK8touchgfx4Font17getStringWidthRTLEhPKtSt9__va_list>
 800ed98:	4603      	mov	r3, r0
 800ed9a:	81fb      	strh	r3, [r7, #14]
    va_end(pArg);
    return width;
 800ed9c:	89fb      	ldrh	r3, [r7, #14]
}
 800ed9e:	4618      	mov	r0, r3
 800eda0:	3710      	adds	r7, #16
 800eda2:	46bd      	mov	sp, r7
 800eda4:	e8bd 4080 	ldmia.w	sp!, {r7, lr}
 800eda8:	b002      	add	sp, #8
 800edaa:	4770      	bx	lr

0800edac <_ZN8touchgfx12TextProvider15getNextLigatureEh>:

touchgfx::Unicode::UnicodeChar touchgfx::TextProvider::getNextLigature(TextDirection direction)
{
 800edac:	b590      	push	{r4, r7, lr}
 800edae:	b08d      	sub	sp, #52	; 0x34
 800edb0:	af00      	add	r7, sp, #0
 800edb2:	6078      	str	r0, [r7, #4]
 800edb4:	460b      	mov	r3, r1
 800edb6:	70fb      	strb	r3, [r7, #3]
    nextCharacters.replaceAt0(unicodeConverter(direction));
 800edb8:	687b      	ldr	r3, [r7, #4]
 800edba:	f103 0422 	add.w	r4, r3, #34	; 0x22
 800edbe:	78fb      	ldrb	r3, [r7, #3]
 800edc0:	4619      	mov	r1, r3
 800edc2:	6878      	ldr	r0, [r7, #4]
 800edc4:	f00b fa38 	bl	801a238 <_ZN8touchgfx12TextProvider16unicodeConverterEh>
 800edc8:	4603      	mov	r3, r0
 800edca:	62fc      	str	r4, [r7, #44]	; 0x2c
 800edcc:	857b      	strh	r3, [r7, #42]	; 0x2a
            replaceAt(++used - 1, newChar);
        }

        FORCE_INLINE_FUNCTION void replaceAt0(Unicode::UnicodeChar newChar)
        {
            buffer[pos] = newChar;
 800edce:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800edd0:	8a9b      	ldrh	r3, [r3, #20]
 800edd2:	4619      	mov	r1, r3
 800edd4:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800edd6:	8d7a      	ldrh	r2, [r7, #42]	; 0x2a
 800edd8:	f823 2011 	strh.w	r2, [r3, r1, lsl #1]
        }
 800eddc:	bf00      	nop
    if (fontGsubTable && nextCharacters.peekChar())
 800edde:	687b      	ldr	r3, [r7, #4]
 800ede0:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800ede2:	2b00      	cmp	r3, #0
 800ede4:	d016      	beq.n	800ee14 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x68>
 800ede6:	687b      	ldr	r3, [r7, #4]
 800ede8:	3322      	adds	r3, #34	; 0x22
 800edea:	627b      	str	r3, [r7, #36]	; 0x24
            assert(used > 0);
 800edec:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800edee:	8adb      	ldrh	r3, [r3, #22]
 800edf0:	2b00      	cmp	r3, #0
 800edf2:	d105      	bne.n	800ee00 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x54>
 800edf4:	4b42      	ldr	r3, [pc, #264]	; (800ef00 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x154>)
 800edf6:	4a43      	ldr	r2, [pc, #268]	; (800ef04 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x158>)
 800edf8:	21c5      	movs	r1, #197	; 0xc5
 800edfa:	4843      	ldr	r0, [pc, #268]	; (800ef08 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x15c>)
 800edfc:	f01b fadc 	bl	802a3b8 <__assert_func>
            return buffer[pos];
 800ee00:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800ee02:	8a9b      	ldrh	r3, [r3, #20]
 800ee04:	461a      	mov	r2, r3
 800ee06:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800ee08:	f833 3012 	ldrh.w	r3, [r3, r2, lsl #1]
 800ee0c:	2b00      	cmp	r3, #0
 800ee0e:	d001      	beq.n	800ee14 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x68>
 800ee10:	2301      	movs	r3, #1
 800ee12:	e000      	b.n	800ee16 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x6a>
 800ee14:	2300      	movs	r3, #0
 800ee16:	2b00      	cmp	r3, #0
 800ee18:	d06a      	beq.n	800eef0 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x144>
    {
        substituteGlyphs();
 800ee1a:	6878      	ldr	r0, [r7, #4]
 800ee1c:	f00c fb09 	bl	801b432 <_ZN8touchgfx12TextProvider16substituteGlyphsEv>
        if (nextCharacters.peekChar(1) == 0x093F) // Hindi I-matra
 800ee20:	687b      	ldr	r3, [r7, #4]
 800ee22:	3322      	adds	r3, #34	; 0x22
 800ee24:	623b      	str	r3, [r7, #32]
 800ee26:	2301      	movs	r3, #1
 800ee28:	83fb      	strh	r3, [r7, #30]
            assert(offset < used);
 800ee2a:	6a3b      	ldr	r3, [r7, #32]
 800ee2c:	8adb      	ldrh	r3, [r3, #22]
 800ee2e:	8bfa      	ldrh	r2, [r7, #30]
 800ee30:	429a      	cmp	r2, r3
 800ee32:	d305      	bcc.n	800ee40 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x94>
 800ee34:	4b35      	ldr	r3, [pc, #212]	; (800ef0c <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x160>)
 800ee36:	4a36      	ldr	r2, [pc, #216]	; (800ef10 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x164>)
 800ee38:	21cb      	movs	r1, #203	; 0xcb
 800ee3a:	4833      	ldr	r0, [pc, #204]	; (800ef08 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x15c>)
 800ee3c:	f01b fabc 	bl	802a3b8 <__assert_func>
            const uint16_t index = pos + offset;
 800ee40:	6a3b      	ldr	r3, [r7, #32]
 800ee42:	8a9a      	ldrh	r2, [r3, #20]
 800ee44:	8bfb      	ldrh	r3, [r7, #30]
 800ee46:	4413      	add	r3, r2
 800ee48:	83bb      	strh	r3, [r7, #28]
            return buffer[index < size ? index : index - size];
 800ee4a:	8bbb      	ldrh	r3, [r7, #28]
 800ee4c:	2b09      	cmp	r3, #9
 800ee4e:	d801      	bhi.n	800ee54 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0xa8>
 800ee50:	8bbb      	ldrh	r3, [r7, #28]
 800ee52:	e001      	b.n	800ee58 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0xac>
 800ee54:	8bbb      	ldrh	r3, [r7, #28]
 800ee56:	3b0a      	subs	r3, #10
 800ee58:	6a3a      	ldr	r2, [r7, #32]
 800ee5a:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 800ee5e:	f640 123f 	movw	r2, #2367	; 0x93f
 800ee62:	4293      	cmp	r3, r2
 800ee64:	bf0c      	ite	eq
 800ee66:	2301      	moveq	r3, #1
 800ee68:	2300      	movne	r3, #0
 800ee6a:	b2db      	uxtb	r3, r3
 800ee6c:	2b00      	cmp	r3, #0
 800ee6e:	d03f      	beq.n	800eef0 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x144>
        {
            nextCharacters.replaceAt1(nextCharacters.peekChar());
 800ee70:	687b      	ldr	r3, [r7, #4]
 800ee72:	3322      	adds	r3, #34	; 0x22
 800ee74:	687a      	ldr	r2, [r7, #4]
 800ee76:	3222      	adds	r2, #34	; 0x22
 800ee78:	60ba      	str	r2, [r7, #8]
            assert(used > 0);
 800ee7a:	68ba      	ldr	r2, [r7, #8]
 800ee7c:	8ad2      	ldrh	r2, [r2, #22]
 800ee7e:	2a00      	cmp	r2, #0
 800ee80:	d105      	bne.n	800ee8e <_ZN8touchgfx12TextProvider15getNextLigatureEh+0xe2>
 800ee82:	4b1f      	ldr	r3, [pc, #124]	; (800ef00 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x154>)
 800ee84:	4a1f      	ldr	r2, [pc, #124]	; (800ef04 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x158>)
 800ee86:	21c5      	movs	r1, #197	; 0xc5
 800ee88:	481f      	ldr	r0, [pc, #124]	; (800ef08 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x15c>)
 800ee8a:	f01b fa95 	bl	802a3b8 <__assert_func>
            return buffer[pos];
 800ee8e:	68ba      	ldr	r2, [r7, #8]
 800ee90:	8a92      	ldrh	r2, [r2, #20]
 800ee92:	4611      	mov	r1, r2
 800ee94:	68ba      	ldr	r2, [r7, #8]
 800ee96:	f832 2011 	ldrh.w	r2, [r2, r1, lsl #1]
 800ee9a:	613b      	str	r3, [r7, #16]
 800ee9c:	4613      	mov	r3, r2
 800ee9e:	81fb      	strh	r3, [r7, #14]

        FORCE_INLINE_FUNCTION void replaceAt1(Unicode::UnicodeChar newChar)
        {
            assert(used > 1);
 800eea0:	693b      	ldr	r3, [r7, #16]
 800eea2:	8adb      	ldrh	r3, [r3, #22]
 800eea4:	2b01      	cmp	r3, #1
 800eea6:	d806      	bhi.n	800eeb6 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x10a>
 800eea8:	4b1a      	ldr	r3, [pc, #104]	; (800ef14 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x168>)
 800eeaa:	4a1b      	ldr	r2, [pc, #108]	; (800ef18 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x16c>)
 800eeac:	f44f 718e 	mov.w	r1, #284	; 0x11c
 800eeb0:	4815      	ldr	r0, [pc, #84]	; (800ef08 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x15c>)
 800eeb2:	f01b fa81 	bl	802a3b8 <__assert_func>
            const uint16_t index = pos + 1;
 800eeb6:	693b      	ldr	r3, [r7, #16]
 800eeb8:	8a9b      	ldrh	r3, [r3, #20]
 800eeba:	3301      	adds	r3, #1
 800eebc:	81bb      	strh	r3, [r7, #12]
            buffer[index < size ? index : 0] = newChar;
 800eebe:	89bb      	ldrh	r3, [r7, #12]
 800eec0:	2b09      	cmp	r3, #9
 800eec2:	d801      	bhi.n	800eec8 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x11c>
 800eec4:	89bb      	ldrh	r3, [r7, #12]
 800eec6:	e000      	b.n	800eeca <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x11e>
 800eec8:	2300      	movs	r3, #0
 800eeca:	693a      	ldr	r2, [r7, #16]
 800eecc:	89f9      	ldrh	r1, [r7, #14]
 800eece:	f822 1013 	strh.w	r1, [r2, r3, lsl #1]
        }
 800eed2:	bf00      	nop
            nextCharacters.replaceAt0(0x093F);
 800eed4:	687b      	ldr	r3, [r7, #4]
 800eed6:	3322      	adds	r3, #34	; 0x22
 800eed8:	61bb      	str	r3, [r7, #24]
 800eeda:	f640 133f 	movw	r3, #2367	; 0x93f
 800eede:	82fb      	strh	r3, [r7, #22]
            buffer[pos] = newChar;
 800eee0:	69bb      	ldr	r3, [r7, #24]
 800eee2:	8a9b      	ldrh	r3, [r3, #20]
 800eee4:	4619      	mov	r1, r3
 800eee6:	69bb      	ldr	r3, [r7, #24]
 800eee8:	8afa      	ldrh	r2, [r7, #22]
 800eeea:	f823 2011 	strh.w	r2, [r3, r1, lsl #1]
        }
 800eeee:	bf00      	nop
        }
    }
    return getNextChar();
 800eef0:	6878      	ldr	r0, [r7, #4]
 800eef2:	f00c f9a1 	bl	801b238 <_ZN8touchgfx12TextProvider11getNextCharEv>
 800eef6:	4603      	mov	r3, r0
}
 800eef8:	4618      	mov	r0, r3
 800eefa:	3734      	adds	r7, #52	; 0x34
 800eefc:	46bd      	mov	sp, r7
 800eefe:	bd90      	pop	{r4, r7, pc}
 800ef00:	0802d7f0 	.word	0x0802d7f0
 800ef04:	0802d7fc 	.word	0x0802d7fc
 800ef08:	0802d8a8 	.word	0x0802d8a8
 800ef0c:	0802d8f0 	.word	0x0802d8f0
 800ef10:	0802d900 	.word	0x0802d900
 800ef14:	0802d9d4 	.word	0x0802d9d4
 800ef18:	0802d9e0 	.word	0x0802d9e0

0800ef1c <_ZN8touchgfx12TextProvider18initializeInternalEv>:

void touchgfx::TextProvider::initializeInternal()
{
 800ef1c:	b580      	push	{r7, lr}
 800ef1e:	b082      	sub	sp, #8
 800ef20:	af00      	add	r7, sp, #0
 800ef22:	6078      	str	r0, [r7, #4]
    fillInputBuffer();
 800ef24:	6878      	ldr	r0, [r7, #4]
 800ef26:	f00c f94e 	bl	801b1c6 <_ZN8touchgfx12TextProvider15fillInputBufferEv>
    unicodeConverterInit();
 800ef2a:	6878      	ldr	r0, [r7, #4]
 800ef2c:	f00b f980 	bl	801a230 <_ZN8touchgfx12TextProvider20unicodeConverterInitEv>
}
 800ef30:	bf00      	nop
 800ef32:	3708      	adds	r7, #8
 800ef34:	46bd      	mov	sp, r7
 800ef36:	bd80      	pop	{r7, pc}

0800ef38 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>:

void touchgfx::LCD::drawString(touchgfx::Rect widgetArea, const touchgfx::Rect& invalidatedArea, const touchgfx::LCD::StringVisuals& stringVisuals, const touchgfx::Unicode::UnicodeChar* format, ...)
{
 800ef38:	b580      	push	{r7, lr}
 800ef3a:	b088      	sub	sp, #32
 800ef3c:	af02      	add	r7, sp, #8
 800ef3e:	60f8      	str	r0, [r7, #12]
 800ef40:	1d38      	adds	r0, r7, #4
 800ef42:	e880 0006 	stmia.w	r0, {r1, r2}
 800ef46:	603b      	str	r3, [r7, #0]
    va_list pArg;
    va_start(pArg, format);
 800ef48:	f107 0328 	add.w	r3, r7, #40	; 0x28
 800ef4c:	617b      	str	r3, [r7, #20]
    drawStringRTL(widgetArea, invalidatedArea, stringVisuals, format, pArg);
 800ef4e:	1d39      	adds	r1, r7, #4
 800ef50:	697b      	ldr	r3, [r7, #20]
 800ef52:	9301      	str	r3, [sp, #4]
 800ef54:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800ef56:	9300      	str	r3, [sp, #0]
 800ef58:	6a3b      	ldr	r3, [r7, #32]
 800ef5a:	683a      	ldr	r2, [r7, #0]
 800ef5c:	68f8      	ldr	r0, [r7, #12]
 800ef5e:	f008 fe8d 	bl	8017c7c <_ZN8touchgfx3LCD13drawStringRTLERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>
    va_end(pArg);
}
 800ef62:	bf00      	nop
 800ef64:	3718      	adds	r7, #24
 800ef66:	46bd      	mov	sp, r7
 800ef68:	bd80      	pop	{r7, pc}
	...

0800ef6c <_ZN8touchgfx5Texts11setLanguageEt>:
touchgfx::LanguageId touchgfx::Texts::currentLanguage = static_cast<touchgfx::LanguageId>(0);
static const touchgfx::Unicode::UnicodeChar* currentLanguagePtr = 0;
static const uint32_t* currentLanguageIndices = 0;

void touchgfx::Texts::setLanguage(touchgfx::LanguageId id)
{
 800ef6c:	b590      	push	{r4, r7, lr}
 800ef6e:	b085      	sub	sp, #20
 800ef70:	af00      	add	r7, sp, #0
 800ef72:	4603      	mov	r3, r0
 800ef74:	80fb      	strh	r3, [r7, #6]
    const touchgfx::TypedText::TypedTextData* currentLanguageTypedText = 0;
 800ef76:	2300      	movs	r3, #0
 800ef78:	60fb      	str	r3, [r7, #12]
    if (id < 1)
 800ef7a:	88fb      	ldrh	r3, [r7, #6]
 800ef7c:	2b00      	cmp	r3, #0
 800ef7e:	d127      	bne.n	800efd0 <_ZN8touchgfx5Texts11setLanguageEt+0x64>
    {
        if (languagesArray[id] != 0)
 800ef80:	88fb      	ldrh	r3, [r7, #6]
 800ef82:	4a1e      	ldr	r2, [pc, #120]	; (800effc <_ZN8touchgfx5Texts11setLanguageEt+0x90>)
 800ef84:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 800ef88:	2b00      	cmp	r3, #0
 800ef8a:	d016      	beq.n	800efba <_ZN8touchgfx5Texts11setLanguageEt+0x4e>
        {
            // Dynamic translation is added
            const TranslationHeader* translation = languagesArray[id];
 800ef8c:	88fb      	ldrh	r3, [r7, #6]
 800ef8e:	4a1b      	ldr	r2, [pc, #108]	; (800effc <_ZN8touchgfx5Texts11setLanguageEt+0x90>)
 800ef90:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 800ef94:	60bb      	str	r3, [r7, #8]
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
 800ef96:	68bb      	ldr	r3, [r7, #8]
 800ef98:	681b      	ldr	r3, [r3, #0]
 800ef9a:	68ba      	ldr	r2, [r7, #8]
 800ef9c:	4413      	add	r3, r2
 800ef9e:	4a18      	ldr	r2, [pc, #96]	; (800f000 <_ZN8touchgfx5Texts11setLanguageEt+0x94>)
 800efa0:	6013      	str	r3, [r2, #0]
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
 800efa2:	68bb      	ldr	r3, [r7, #8]
 800efa4:	685b      	ldr	r3, [r3, #4]
 800efa6:	68ba      	ldr	r2, [r7, #8]
 800efa8:	4413      	add	r3, r2
 800efaa:	4a16      	ldr	r2, [pc, #88]	; (800f004 <_ZN8touchgfx5Texts11setLanguageEt+0x98>)
 800efac:	6013      	str	r3, [r2, #0]
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
 800efae:	68bb      	ldr	r3, [r7, #8]
 800efb0:	689b      	ldr	r3, [r3, #8]
 800efb2:	68ba      	ldr	r2, [r7, #8]
 800efb4:	4413      	add	r3, r2
 800efb6:	60fb      	str	r3, [r7, #12]
 800efb8:	e00a      	b.n	800efd0 <_ZN8touchgfx5Texts11setLanguageEt+0x64>
        }
        else
        {
            // Compiled and linked in languages
            currentLanguagePtr = texts_all_languages;
 800efba:	4b11      	ldr	r3, [pc, #68]	; (800f000 <_ZN8touchgfx5Texts11setLanguageEt+0x94>)
 800efbc:	4a12      	ldr	r2, [pc, #72]	; (800f008 <_ZN8touchgfx5Texts11setLanguageEt+0x9c>)
 800efbe:	601a      	str	r2, [r3, #0]
            currentLanguageIndices = staticLanguageIndices[id];
 800efc0:	4a12      	ldr	r2, [pc, #72]	; (800f00c <_ZN8touchgfx5Texts11setLanguageEt+0xa0>)
 800efc2:	4b10      	ldr	r3, [pc, #64]	; (800f004 <_ZN8touchgfx5Texts11setLanguageEt+0x98>)
 800efc4:	601a      	str	r2, [r3, #0]
            currentLanguageTypedText = typedTextDatabaseArray[id];
 800efc6:	88fb      	ldrh	r3, [r7, #6]
 800efc8:	4a11      	ldr	r2, [pc, #68]	; (800f010 <_ZN8touchgfx5Texts11setLanguageEt+0xa4>)
 800efca:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 800efce:	60fb      	str	r3, [r7, #12]
        }
    }

    if (currentLanguageTypedText)
 800efd0:	68fb      	ldr	r3, [r7, #12]
 800efd2:	2b00      	cmp	r3, #0
 800efd4:	d00d      	beq.n	800eff2 <_ZN8touchgfx5Texts11setLanguageEt+0x86>
    {
        currentLanguage = id;
 800efd6:	4a0f      	ldr	r2, [pc, #60]	; (800f014 <_ZN8touchgfx5Texts11setLanguageEt+0xa8>)
 800efd8:	88fb      	ldrh	r3, [r7, #6]
 800efda:	8013      	strh	r3, [r2, #0]
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
                                                       TypedTextDatabase::getFonts(), TypedTextDatabase::getInstanceSize());
 800efdc:	f000 f83e 	bl	800f05c <_ZN17TypedTextDatabase8getFontsEv>
 800efe0:	4604      	mov	r4, r0
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
 800efe2:	f000 f833 	bl	800f04c <_ZN17TypedTextDatabase15getInstanceSizeEv>
 800efe6:	4603      	mov	r3, r0
 800efe8:	461a      	mov	r2, r3
 800efea:	4621      	mov	r1, r4
 800efec:	68f8      	ldr	r0, [r7, #12]
 800efee:	f7ff fe8f 	bl	800ed10 <_ZN8touchgfx9TypedText25registerTypedTextDatabaseEPKNS0_13TypedTextDataEPKPKNS_4FontEt>
    }
}
 800eff2:	bf00      	nop
 800eff4:	3714      	adds	r7, #20
 800eff6:	46bd      	mov	sp, r7
 800eff8:	bd90      	pop	{r4, r7, pc}
 800effa:	bf00      	nop
 800effc:	2000071c 	.word	0x2000071c
 800f000:	20000724 	.word	0x20000724
 800f004:	20000728 	.word	0x20000728
 800f008:	0804f2cc 	.word	0x0804f2cc
 800f00c:	0804f2a8 	.word	0x0804f2a8
 800f010:	0804f320 	.word	0x0804f320
 800f014:	20000720 	.word	0x20000720

0800f018 <_ZNK8touchgfx5Texts7getTextEt>:
{
    languagesArray[id] = (const TranslationHeader*)translation;
}

const touchgfx::Unicode::UnicodeChar* touchgfx::Texts::getText(TypedTextId id) const
{
 800f018:	b480      	push	{r7}
 800f01a:	b083      	sub	sp, #12
 800f01c:	af00      	add	r7, sp, #0
 800f01e:	6078      	str	r0, [r7, #4]
 800f020:	460b      	mov	r3, r1
 800f022:	807b      	strh	r3, [r7, #2]
    return &currentLanguagePtr[currentLanguageIndices[id]];
 800f024:	4b07      	ldr	r3, [pc, #28]	; (800f044 <_ZNK8touchgfx5Texts7getTextEt+0x2c>)
 800f026:	681a      	ldr	r2, [r3, #0]
 800f028:	4b07      	ldr	r3, [pc, #28]	; (800f048 <_ZNK8touchgfx5Texts7getTextEt+0x30>)
 800f02a:	6819      	ldr	r1, [r3, #0]
 800f02c:	887b      	ldrh	r3, [r7, #2]
 800f02e:	009b      	lsls	r3, r3, #2
 800f030:	440b      	add	r3, r1
 800f032:	681b      	ldr	r3, [r3, #0]
 800f034:	005b      	lsls	r3, r3, #1
 800f036:	4413      	add	r3, r2
}
 800f038:	4618      	mov	r0, r3
 800f03a:	370c      	adds	r7, #12
 800f03c:	46bd      	mov	sp, r7
 800f03e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f042:	4770      	bx	lr
 800f044:	20000724 	.word	0x20000724
 800f048:	20000728 	.word	0x20000728

0800f04c <_ZN17TypedTextDatabase15getInstanceSizeEv>:
{
    return typedTextDatabaseArray[id];
}

uint16_t getInstanceSize()
{
 800f04c:	b480      	push	{r7}
 800f04e:	af00      	add	r7, sp, #0
    return sizeof(typedText_database_DEFAULT) / sizeof(touchgfx::TypedText::TypedTextData);
 800f050:	2309      	movs	r3, #9
}
 800f052:	4618      	mov	r0, r3
 800f054:	46bd      	mov	sp, r7
 800f056:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f05a:	4770      	bx	lr

0800f05c <_ZN17TypedTextDatabase8getFontsEv>:

const touchgfx::Font** getFonts()
{
 800f05c:	b480      	push	{r7}
 800f05e:	af00      	add	r7, sp, #0
    return touchgfx_fonts;
 800f060:	4b02      	ldr	r3, [pc, #8]	; (800f06c <_ZN17TypedTextDatabase8getFontsEv+0x10>)
}
 800f062:	4618      	mov	r0, r3
 800f064:	46bd      	mov	sp, r7
 800f066:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f06a:	4770      	bx	lr
 800f06c:	2000072c 	.word	0x2000072c

0800f070 <_Z41__static_initialization_and_destruction_0ii>:
    case 4:
        touchgfx_fonts[4] = &(getFont_verdanab_23_4bpp());
        break;
    }
}
} // namespace TypedTextDatabase
 800f070:	b580      	push	{r7, lr}
 800f072:	b082      	sub	sp, #8
 800f074:	af00      	add	r7, sp, #0
 800f076:	6078      	str	r0, [r7, #4]
 800f078:	6039      	str	r1, [r7, #0]
 800f07a:	687b      	ldr	r3, [r7, #4]
 800f07c:	2b01      	cmp	r3, #1
 800f07e:	d11d      	bne.n	800f0bc <_Z41__static_initialization_and_destruction_0ii+0x4c>
 800f080:	683b      	ldr	r3, [r7, #0]
 800f082:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800f086:	4293      	cmp	r3, r2
 800f088:	d118      	bne.n	800f0bc <_Z41__static_initialization_and_destruction_0ii+0x4c>
    &(getFont_verdana_18_4bpp()),
 800f08a:	f7fb fd0f 	bl	800aaac <_Z23getFont_verdana_18_4bppv>
 800f08e:	4603      	mov	r3, r0
};
 800f090:	4a0c      	ldr	r2, [pc, #48]	; (800f0c4 <_Z41__static_initialization_and_destruction_0ii+0x54>)
 800f092:	6013      	str	r3, [r2, #0]
    &(getFont_verdanab_16_4bpp()),
 800f094:	f7fb fd64 	bl	800ab60 <_Z24getFont_verdanab_16_4bppv>
 800f098:	4603      	mov	r3, r0
};
 800f09a:	4a0a      	ldr	r2, [pc, #40]	; (800f0c4 <_Z41__static_initialization_and_destruction_0ii+0x54>)
 800f09c:	6053      	str	r3, [r2, #4]
    &(getFont_verdana_10_4bpp()),
 800f09e:	f7fb fcab 	bl	800a9f8 <_Z23getFont_verdana_10_4bppv>
 800f0a2:	4603      	mov	r3, r0
};
 800f0a4:	4a07      	ldr	r2, [pc, #28]	; (800f0c4 <_Z41__static_initialization_and_destruction_0ii+0x54>)
 800f0a6:	6093      	str	r3, [r2, #8]
    &(getFont_verdanab_27_4bpp()),
 800f0a8:	f7fb fe0e 	bl	800acc8 <_Z24getFont_verdanab_27_4bppv>
 800f0ac:	4603      	mov	r3, r0
};
 800f0ae:	4a05      	ldr	r2, [pc, #20]	; (800f0c4 <_Z41__static_initialization_and_destruction_0ii+0x54>)
 800f0b0:	60d3      	str	r3, [r2, #12]
    &(getFont_verdanab_23_4bpp())
 800f0b2:	f7fb fdaf 	bl	800ac14 <_Z24getFont_verdanab_23_4bppv>
 800f0b6:	4603      	mov	r3, r0
};
 800f0b8:	4a02      	ldr	r2, [pc, #8]	; (800f0c4 <_Z41__static_initialization_and_destruction_0ii+0x54>)
 800f0ba:	6113      	str	r3, [r2, #16]
} // namespace TypedTextDatabase
 800f0bc:	bf00      	nop
 800f0be:	3708      	adds	r7, #8
 800f0c0:	46bd      	mov	sp, r7
 800f0c2:	bd80      	pop	{r7, pc}
 800f0c4:	2000072c 	.word	0x2000072c

0800f0c8 <_GLOBAL__sub_I_touchgfx_fonts>:
 800f0c8:	b580      	push	{r7, lr}
 800f0ca:	af00      	add	r7, sp, #0
 800f0cc:	f64f 71ff 	movw	r1, #65535	; 0xffff
 800f0d0:	2001      	movs	r0, #1
 800f0d2:	f7ff ffcd 	bl	800f070 <_Z41__static_initialization_and_destruction_0ii>
 800f0d6:	bd80      	pop	{r7, pc}

0800f0d8 <_ZN19FrontendApplicationD1Ev>:

class FrontendApplication : public FrontendApplicationBase
{
public:
    FrontendApplication(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplication() { }
 800f0d8:	b580      	push	{r7, lr}
 800f0da:	b082      	sub	sp, #8
 800f0dc:	af00      	add	r7, sp, #0
 800f0de:	6078      	str	r0, [r7, #4]
 800f0e0:	4a05      	ldr	r2, [pc, #20]	; (800f0f8 <_ZN19FrontendApplicationD1Ev+0x20>)
 800f0e2:	687b      	ldr	r3, [r7, #4]
 800f0e4:	601a      	str	r2, [r3, #0]
 800f0e6:	687b      	ldr	r3, [r7, #4]
 800f0e8:	4618      	mov	r0, r3
 800f0ea:	f7fc f84d 	bl	800b188 <_ZN23FrontendApplicationBaseD1Ev>
 800f0ee:	687b      	ldr	r3, [r7, #4]
 800f0f0:	4618      	mov	r0, r3
 800f0f2:	3708      	adds	r7, #8
 800f0f4:	46bd      	mov	sp, r7
 800f0f6:	bd80      	pop	{r7, pc}
 800f0f8:	0802edd8 	.word	0x0802edd8

0800f0fc <_ZN19FrontendApplicationD0Ev>:
 800f0fc:	b580      	push	{r7, lr}
 800f0fe:	b082      	sub	sp, #8
 800f100:	af00      	add	r7, sp, #0
 800f102:	6078      	str	r0, [r7, #4]
 800f104:	6878      	ldr	r0, [r7, #4]
 800f106:	f7ff ffe7 	bl	800f0d8 <_ZN19FrontendApplicationD1Ev>
 800f10a:	f44f 71ae 	mov.w	r1, #348	; 0x15c
 800f10e:	6878      	ldr	r0, [r7, #4]
 800f110:	f01b f923 	bl	802a35a <_ZdlPvj>
 800f114:	687b      	ldr	r3, [r7, #4]
 800f116:	4618      	mov	r0, r3
 800f118:	3708      	adds	r7, #8
 800f11a:	46bd      	mov	sp, r7
 800f11c:	bd80      	pop	{r7, pc}

0800f11e <_ZN19FrontendApplication15handleTickEventEv>:

    virtual void handleTickEvent()
 800f11e:	b580      	push	{r7, lr}
 800f120:	b082      	sub	sp, #8
 800f122:	af00      	add	r7, sp, #0
 800f124:	6078      	str	r0, [r7, #4]
    {
        model.tick();
 800f126:	687b      	ldr	r3, [r7, #4]
 800f128:	f8d3 3158 	ldr.w	r3, [r3, #344]	; 0x158
 800f12c:	4618      	mov	r0, r3
 800f12e:	f000 f89f 	bl	800f270 <_ZN5Model4tickEv>
        FrontendApplicationBase::handleTickEvent();
 800f132:	687b      	ldr	r3, [r7, #4]
 800f134:	4618      	mov	r0, r3
 800f136:	f009 faad 	bl	8018694 <_ZN8touchgfx11Application15handleTickEventEv>
    }
 800f13a:	bf00      	nop
 800f13c:	3708      	adds	r7, #8
 800f13e:	46bd      	mov	sp, r7
 800f140:	bd80      	pop	{r7, pc}
	...

0800f144 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>:
#include <gui/common/FrontendApplication.hpp>

FrontendApplication::FrontendApplication(Model& m, FrontendHeap& heap)
 800f144:	b580      	push	{r7, lr}
 800f146:	b084      	sub	sp, #16
 800f148:	af00      	add	r7, sp, #0
 800f14a:	60f8      	str	r0, [r7, #12]
 800f14c:	60b9      	str	r1, [r7, #8]
 800f14e:	607a      	str	r2, [r7, #4]
    : FrontendApplicationBase(m, heap)
 800f150:	68fb      	ldr	r3, [r7, #12]
 800f152:	687a      	ldr	r2, [r7, #4]
 800f154:	68b9      	ldr	r1, [r7, #8]
 800f156:	4618      	mov	r0, r3
 800f158:	f7fc f866 	bl	800b228 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>
 800f15c:	4a03      	ldr	r2, [pc, #12]	; (800f16c <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap+0x28>)
 800f15e:	68fb      	ldr	r3, [r7, #12]
 800f160:	601a      	str	r2, [r3, #0]
{

}
 800f162:	68fb      	ldr	r3, [r7, #12]
 800f164:	4618      	mov	r0, r3
 800f166:	3710      	adds	r7, #16
 800f168:	46bd      	mov	sp, r7
 800f16a:	bd80      	pop	{r7, pc}
 800f16c:	0802edd8 	.word	0x0802edd8

0800f170 <_ZN16CustomContainer1C1Ev>:
#include <touchgfx/canvas_widget_renderer/CanvasWidgetRenderer.hpp>
#include <touchgfx/Color.hpp>
#include <images/BitmapDatabase.hpp>
#include <texts/TextKeysAndLanguages.hpp>

CustomContainer1::CustomContainer1()
 800f170:	b580      	push	{r7, lr}
 800f172:	b082      	sub	sp, #8
 800f174:	af00      	add	r7, sp, #0
 800f176:	6078      	str	r0, [r7, #4]
 800f178:	687b      	ldr	r3, [r7, #4]
 800f17a:	4618      	mov	r0, r3
 800f17c:	f7fd fa34 	bl	800c5e8 <_ZN20CustomContainer1BaseC1Ev>
 800f180:	4a05      	ldr	r2, [pc, #20]	; (800f198 <_ZN16CustomContainer1C1Ev+0x28>)
 800f182:	687b      	ldr	r3, [r7, #4]
 800f184:	601a      	str	r2, [r3, #0]
 800f186:	687b      	ldr	r3, [r7, #4]
 800f188:	225c      	movs	r2, #92	; 0x5c
 800f18a:	f8a3 2220 	strh.w	r2, [r3, #544]	; 0x220
{

}
 800f18e:	687b      	ldr	r3, [r7, #4]
 800f190:	4618      	mov	r0, r3
 800f192:	3708      	adds	r7, #8
 800f194:	46bd      	mov	sp, r7
 800f196:	bd80      	pop	{r7, pc}
 800f198:	0802ee2c 	.word	0x0802ee2c

0800f19c <_ZN16CustomContainer110initializeEv>:

void CustomContainer1::initialize()
{
 800f19c:	b580      	push	{r7, lr}
 800f19e:	b082      	sub	sp, #8
 800f1a0:	af00      	add	r7, sp, #0
 800f1a2:	6078      	str	r0, [r7, #4]
	Unicode::snprintf(textArea1Buffer, TEXTAREA1_SIZE, "%u",temp);
 800f1a4:	687b      	ldr	r3, [r7, #4]
 800f1a6:	f503 70fe 	add.w	r0, r3, #508	; 0x1fc
 800f1aa:	687b      	ldr	r3, [r7, #4]
 800f1ac:	f8b3 3220 	ldrh.w	r3, [r3, #544]	; 0x220
 800f1b0:	4a05      	ldr	r2, [pc, #20]	; (800f1c8 <_ZN16CustomContainer110initializeEv+0x2c>)
 800f1b2:	210a      	movs	r1, #10
 800f1b4:	f00c fef2 	bl	801bf9c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    CustomContainer1Base::initialize();
 800f1b8:	687b      	ldr	r3, [r7, #4]
 800f1ba:	4618      	mov	r0, r3
 800f1bc:	f7fd fd0f 	bl	800cbde <_ZN20CustomContainer1Base10initializeEv>
}
 800f1c0:	bf00      	nop
 800f1c2:	3708      	adds	r7, #8
 800f1c4:	46bd      	mov	sp, r7
 800f1c6:	bd80      	pop	{r7, pc}
 800f1c8:	0802da94 	.word	0x0802da94

0800f1cc <_ZN16CustomContainer112Down_clickedEv>:

void CustomContainer1::Down_clicked(){
 800f1cc:	b580      	push	{r7, lr}
 800f1ce:	b082      	sub	sp, #8
 800f1d0:	af00      	add	r7, sp, #0
 800f1d2:	6078      	str	r0, [r7, #4]

	temp--;
 800f1d4:	687b      	ldr	r3, [r7, #4]
 800f1d6:	f8b3 3220 	ldrh.w	r3, [r3, #544]	; 0x220
 800f1da:	3b01      	subs	r3, #1
 800f1dc:	b29a      	uxth	r2, r3
 800f1de:	687b      	ldr	r3, [r7, #4]
 800f1e0:	f8a3 2220 	strh.w	r2, [r3, #544]	; 0x220
	Unicode::snprintf(textArea1Buffer, TEXTAREA1_SIZE, "%u",temp);
 800f1e4:	687b      	ldr	r3, [r7, #4]
 800f1e6:	f503 70fe 	add.w	r0, r3, #508	; 0x1fc
 800f1ea:	687b      	ldr	r3, [r7, #4]
 800f1ec:	f8b3 3220 	ldrh.w	r3, [r3, #544]	; 0x220
 800f1f0:	4a06      	ldr	r2, [pc, #24]	; (800f20c <_ZN16CustomContainer112Down_clickedEv+0x40>)
 800f1f2:	210a      	movs	r1, #10
 800f1f4:	f00c fed2 	bl	801bf9c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	textArea1.invalidate();
 800f1f8:	687b      	ldr	r3, [r7, #4]
 800f1fa:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800f1fe:	4618      	mov	r0, r3
 800f200:	f00a fa49 	bl	8019696 <_ZNK8touchgfx8Drawable10invalidateEv>
}
 800f204:	bf00      	nop
 800f206:	3708      	adds	r7, #8
 800f208:	46bd      	mov	sp, r7
 800f20a:	bd80      	pop	{r7, pc}
 800f20c:	0802da94 	.word	0x0802da94

0800f210 <_ZN16CustomContainer110Up_clickedEv>:


void CustomContainer1::Up_clicked(){
 800f210:	b580      	push	{r7, lr}
 800f212:	b082      	sub	sp, #8
 800f214:	af00      	add	r7, sp, #0
 800f216:	6078      	str	r0, [r7, #4]

	temp++;
 800f218:	687b      	ldr	r3, [r7, #4]
 800f21a:	f8b3 3220 	ldrh.w	r3, [r3, #544]	; 0x220
 800f21e:	3301      	adds	r3, #1
 800f220:	b29a      	uxth	r2, r3
 800f222:	687b      	ldr	r3, [r7, #4]
 800f224:	f8a3 2220 	strh.w	r2, [r3, #544]	; 0x220
	Unicode::snprintf(textArea1Buffer, TEXTAREA1_SIZE, "%u",temp);
 800f228:	687b      	ldr	r3, [r7, #4]
 800f22a:	f503 70fe 	add.w	r0, r3, #508	; 0x1fc
 800f22e:	687b      	ldr	r3, [r7, #4]
 800f230:	f8b3 3220 	ldrh.w	r3, [r3, #544]	; 0x220
 800f234:	4a06      	ldr	r2, [pc, #24]	; (800f250 <_ZN16CustomContainer110Up_clickedEv+0x40>)
 800f236:	210a      	movs	r1, #10
 800f238:	f00c feb0 	bl	801bf9c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	textArea1.invalidate();
 800f23c:	687b      	ldr	r3, [r7, #4]
 800f23e:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800f242:	4618      	mov	r0, r3
 800f244:	f00a fa27 	bl	8019696 <_ZNK8touchgfx8Drawable10invalidateEv>
}
 800f248:	bf00      	nop
 800f24a:	3708      	adds	r7, #8
 800f24c:	46bd      	mov	sp, r7
 800f24e:	bd80      	pop	{r7, pc}
 800f250:	0802da94 	.word	0x0802da94

0800f254 <_ZN5ModelC1Ev>:
#include <gui/model/Model.hpp>
#include <gui/model/ModelListener.hpp>

Model::Model() : modelListener(0)
 800f254:	b480      	push	{r7}
 800f256:	b083      	sub	sp, #12
 800f258:	af00      	add	r7, sp, #0
 800f25a:	6078      	str	r0, [r7, #4]
 800f25c:	687b      	ldr	r3, [r7, #4]
 800f25e:	2200      	movs	r2, #0
 800f260:	601a      	str	r2, [r3, #0]
{

}
 800f262:	687b      	ldr	r3, [r7, #4]
 800f264:	4618      	mov	r0, r3
 800f266:	370c      	adds	r7, #12
 800f268:	46bd      	mov	sp, r7
 800f26a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f26e:	4770      	bx	lr

0800f270 <_ZN5Model4tickEv>:

void Model::tick()
{
 800f270:	b480      	push	{r7}
 800f272:	b083      	sub	sp, #12
 800f274:	af00      	add	r7, sp, #0
 800f276:	6078      	str	r0, [r7, #4]

}
 800f278:	bf00      	nop
 800f27a:	370c      	adds	r7, #12
 800f27c:	46bd      	mov	sp, r7
 800f27e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f282:	4770      	bx	lr

0800f284 <_ZN8touchgfx9Presenter8activateEv>:
     * Place initialization code for the Presenter here.
     *
     * The activate function is called automatically when a screen transition causes this
     * Presenter to become active. Place initialization code for the Presenter here.
     */
    virtual void activate()
 800f284:	b480      	push	{r7}
 800f286:	b083      	sub	sp, #12
 800f288:	af00      	add	r7, sp, #0
 800f28a:	6078      	str	r0, [r7, #4]
    {
    }
 800f28c:	bf00      	nop
 800f28e:	370c      	adds	r7, #12
 800f290:	46bd      	mov	sp, r7
 800f292:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f296:	4770      	bx	lr

0800f298 <_ZN8touchgfx9Presenter10deactivateEv>:
     * Place cleanup code for the Presenter here.
     *
     * The deactivate function is called automatically when a screen transition causes this
     * Presenter to become inactive. Place cleanup code for the Presenter here.
     */
    virtual void deactivate()
 800f298:	b480      	push	{r7}
 800f29a:	b083      	sub	sp, #12
 800f29c:	af00      	add	r7, sp, #0
 800f29e:	6078      	str	r0, [r7, #4]
    {
    }
 800f2a0:	bf00      	nop
 800f2a2:	370c      	adds	r7, #12
 800f2a4:	46bd      	mov	sp, r7
 800f2a6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f2aa:	4770      	bx	lr

0800f2ac <_ZN8touchgfx9PresenterD1Ev>:

    /** Finalizes an instance of the Presenter class. */
    virtual ~Presenter()
 800f2ac:	b480      	push	{r7}
 800f2ae:	b083      	sub	sp, #12
 800f2b0:	af00      	add	r7, sp, #0
 800f2b2:	6078      	str	r0, [r7, #4]
    {
 800f2b4:	4a04      	ldr	r2, [pc, #16]	; (800f2c8 <_ZN8touchgfx9PresenterD1Ev+0x1c>)
 800f2b6:	687b      	ldr	r3, [r7, #4]
 800f2b8:	601a      	str	r2, [r3, #0]
    }
 800f2ba:	687b      	ldr	r3, [r7, #4]
 800f2bc:	4618      	mov	r0, r3
 800f2be:	370c      	adds	r7, #12
 800f2c0:	46bd      	mov	sp, r7
 800f2c2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f2c6:	4770      	bx	lr
 800f2c8:	0802ef00 	.word	0x0802ef00

0800f2cc <_ZN8touchgfx9PresenterD0Ev>:
    virtual ~Presenter()
 800f2cc:	b580      	push	{r7, lr}
 800f2ce:	b082      	sub	sp, #8
 800f2d0:	af00      	add	r7, sp, #0
 800f2d2:	6078      	str	r0, [r7, #4]
    }
 800f2d4:	6878      	ldr	r0, [r7, #4]
 800f2d6:	f7ff ffe9 	bl	800f2ac <_ZN8touchgfx9PresenterD1Ev>
 800f2da:	2104      	movs	r1, #4
 800f2dc:	6878      	ldr	r0, [r7, #4]
 800f2de:	f01b f83c 	bl	802a35a <_ZdlPvj>
 800f2e2:	687b      	ldr	r3, [r7, #4]
 800f2e4:	4618      	mov	r0, r3
 800f2e6:	3708      	adds	r7, #8
 800f2e8:	46bd      	mov	sp, r7
 800f2ea:	bd80      	pop	{r7, pc}

0800f2ec <_ZN8touchgfx9PresenterC1Ev>:

protected:
    /** Initializes a new instance of the Presenter class. */
    Presenter()
 800f2ec:	b480      	push	{r7}
 800f2ee:	b083      	sub	sp, #12
 800f2f0:	af00      	add	r7, sp, #0
 800f2f2:	6078      	str	r0, [r7, #4]
    {
 800f2f4:	4a04      	ldr	r2, [pc, #16]	; (800f308 <_ZN8touchgfx9PresenterC1Ev+0x1c>)
 800f2f6:	687b      	ldr	r3, [r7, #4]
 800f2f8:	601a      	str	r2, [r3, #0]
    }
 800f2fa:	687b      	ldr	r3, [r7, #4]
 800f2fc:	4618      	mov	r0, r3
 800f2fe:	370c      	adds	r7, #12
 800f300:	46bd      	mov	sp, r7
 800f302:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f306:	4770      	bx	lr
 800f308:	0802ef00 	.word	0x0802ef00

0800f30c <_ZN13ModelListenerC1Ev>:
    ModelListener() : model(0) {}
 800f30c:	b480      	push	{r7}
 800f30e:	b083      	sub	sp, #12
 800f310:	af00      	add	r7, sp, #0
 800f312:	6078      	str	r0, [r7, #4]
 800f314:	4a06      	ldr	r2, [pc, #24]	; (800f330 <_ZN13ModelListenerC1Ev+0x24>)
 800f316:	687b      	ldr	r3, [r7, #4]
 800f318:	601a      	str	r2, [r3, #0]
 800f31a:	687b      	ldr	r3, [r7, #4]
 800f31c:	2200      	movs	r2, #0
 800f31e:	605a      	str	r2, [r3, #4]
 800f320:	687b      	ldr	r3, [r7, #4]
 800f322:	4618      	mov	r0, r3
 800f324:	370c      	adds	r7, #12
 800f326:	46bd      	mov	sp, r7
 800f328:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f32c:	4770      	bx	lr
 800f32e:	bf00      	nop
 800f330:	0802eef0 	.word	0x0802eef0

0800f334 <_ZN13ModelListenerD1Ev>:
    virtual ~ModelListener() {}
 800f334:	b480      	push	{r7}
 800f336:	b083      	sub	sp, #12
 800f338:	af00      	add	r7, sp, #0
 800f33a:	6078      	str	r0, [r7, #4]
 800f33c:	4a04      	ldr	r2, [pc, #16]	; (800f350 <_ZN13ModelListenerD1Ev+0x1c>)
 800f33e:	687b      	ldr	r3, [r7, #4]
 800f340:	601a      	str	r2, [r3, #0]
 800f342:	687b      	ldr	r3, [r7, #4]
 800f344:	4618      	mov	r0, r3
 800f346:	370c      	adds	r7, #12
 800f348:	46bd      	mov	sp, r7
 800f34a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f34e:	4770      	bx	lr
 800f350:	0802eef0 	.word	0x0802eef0

0800f354 <_ZN13ModelListenerD0Ev>:
 800f354:	b580      	push	{r7, lr}
 800f356:	b082      	sub	sp, #8
 800f358:	af00      	add	r7, sp, #0
 800f35a:	6078      	str	r0, [r7, #4]
 800f35c:	6878      	ldr	r0, [r7, #4]
 800f35e:	f7ff ffe9 	bl	800f334 <_ZN13ModelListenerD1Ev>
 800f362:	2108      	movs	r1, #8
 800f364:	6878      	ldr	r0, [r7, #4]
 800f366:	f01a fff8 	bl	802a35a <_ZdlPvj>
 800f36a:	687b      	ldr	r3, [r7, #4]
 800f36c:	4618      	mov	r0, r3
 800f36e:	3708      	adds	r7, #8
 800f370:	46bd      	mov	sp, r7
 800f372:	bd80      	pop	{r7, pc}

0800f374 <_ZN16Screen1PresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Screen1Presenter() {}
 800f374:	b580      	push	{r7, lr}
 800f376:	b082      	sub	sp, #8
 800f378:	af00      	add	r7, sp, #0
 800f37a:	6078      	str	r0, [r7, #4]
 800f37c:	4a09      	ldr	r2, [pc, #36]	; (800f3a4 <_ZN16Screen1PresenterD1Ev+0x30>)
 800f37e:	687b      	ldr	r3, [r7, #4]
 800f380:	601a      	str	r2, [r3, #0]
 800f382:	4a09      	ldr	r2, [pc, #36]	; (800f3a8 <_ZN16Screen1PresenterD1Ev+0x34>)
 800f384:	687b      	ldr	r3, [r7, #4]
 800f386:	605a      	str	r2, [r3, #4]
 800f388:	687b      	ldr	r3, [r7, #4]
 800f38a:	3304      	adds	r3, #4
 800f38c:	4618      	mov	r0, r3
 800f38e:	f7ff ffd1 	bl	800f334 <_ZN13ModelListenerD1Ev>
 800f392:	687b      	ldr	r3, [r7, #4]
 800f394:	4618      	mov	r0, r3
 800f396:	f7ff ff89 	bl	800f2ac <_ZN8touchgfx9PresenterD1Ev>
 800f39a:	687b      	ldr	r3, [r7, #4]
 800f39c:	4618      	mov	r0, r3
 800f39e:	3708      	adds	r7, #8
 800f3a0:	46bd      	mov	sp, r7
 800f3a2:	bd80      	pop	{r7, pc}
 800f3a4:	0802eec8 	.word	0x0802eec8
 800f3a8:	0802eee0 	.word	0x0802eee0

0800f3ac <_ZThn4_N16Screen1PresenterD1Ev>:
 800f3ac:	f1a0 0004 	sub.w	r0, r0, #4
 800f3b0:	e7e0      	b.n	800f374 <_ZN16Screen1PresenterD1Ev>
 800f3b2:	bf00      	nop

0800f3b4 <_ZN16Screen1PresenterD0Ev>:
 800f3b4:	b580      	push	{r7, lr}
 800f3b6:	b082      	sub	sp, #8
 800f3b8:	af00      	add	r7, sp, #0
 800f3ba:	6078      	str	r0, [r7, #4]
 800f3bc:	6878      	ldr	r0, [r7, #4]
 800f3be:	f7ff ffd9 	bl	800f374 <_ZN16Screen1PresenterD1Ev>
 800f3c2:	2110      	movs	r1, #16
 800f3c4:	6878      	ldr	r0, [r7, #4]
 800f3c6:	f01a ffc8 	bl	802a35a <_ZdlPvj>
 800f3ca:	687b      	ldr	r3, [r7, #4]
 800f3cc:	4618      	mov	r0, r3
 800f3ce:	3708      	adds	r7, #8
 800f3d0:	46bd      	mov	sp, r7
 800f3d2:	bd80      	pop	{r7, pc}

0800f3d4 <_ZThn4_N16Screen1PresenterD0Ev>:
 800f3d4:	f1a0 0004 	sub.w	r0, r0, #4
 800f3d8:	e7ec      	b.n	800f3b4 <_ZN16Screen1PresenterD0Ev>
	...

0800f3dc <_ZN16Screen1PresenterC1ER11Screen1View>:
#include <gui/screen1_screen/Screen1View.hpp>
#include <gui/screen1_screen/Screen1Presenter.hpp>

Screen1Presenter::Screen1Presenter(Screen1View& v)
 800f3dc:	b580      	push	{r7, lr}
 800f3de:	b082      	sub	sp, #8
 800f3e0:	af00      	add	r7, sp, #0
 800f3e2:	6078      	str	r0, [r7, #4]
 800f3e4:	6039      	str	r1, [r7, #0]
    : view(v)
 800f3e6:	687b      	ldr	r3, [r7, #4]
 800f3e8:	4618      	mov	r0, r3
 800f3ea:	f7ff ff7f 	bl	800f2ec <_ZN8touchgfx9PresenterC1Ev>
 800f3ee:	687b      	ldr	r3, [r7, #4]
 800f3f0:	3304      	adds	r3, #4
 800f3f2:	4618      	mov	r0, r3
 800f3f4:	f7ff ff8a 	bl	800f30c <_ZN13ModelListenerC1Ev>
 800f3f8:	4a06      	ldr	r2, [pc, #24]	; (800f414 <_ZN16Screen1PresenterC1ER11Screen1View+0x38>)
 800f3fa:	687b      	ldr	r3, [r7, #4]
 800f3fc:	601a      	str	r2, [r3, #0]
 800f3fe:	4a06      	ldr	r2, [pc, #24]	; (800f418 <_ZN16Screen1PresenterC1ER11Screen1View+0x3c>)
 800f400:	687b      	ldr	r3, [r7, #4]
 800f402:	605a      	str	r2, [r3, #4]
 800f404:	687b      	ldr	r3, [r7, #4]
 800f406:	683a      	ldr	r2, [r7, #0]
 800f408:	60da      	str	r2, [r3, #12]
{

}
 800f40a:	687b      	ldr	r3, [r7, #4]
 800f40c:	4618      	mov	r0, r3
 800f40e:	3708      	adds	r7, #8
 800f410:	46bd      	mov	sp, r7
 800f412:	bd80      	pop	{r7, pc}
 800f414:	0802eec8 	.word	0x0802eec8
 800f418:	0802eee0 	.word	0x0802eee0

0800f41c <_ZN16Screen1Presenter8activateEv>:

void Screen1Presenter::activate()
{
 800f41c:	b480      	push	{r7}
 800f41e:	b083      	sub	sp, #12
 800f420:	af00      	add	r7, sp, #0
 800f422:	6078      	str	r0, [r7, #4]

}
 800f424:	bf00      	nop
 800f426:	370c      	adds	r7, #12
 800f428:	46bd      	mov	sp, r7
 800f42a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f42e:	4770      	bx	lr

0800f430 <_ZN16Screen1Presenter10deactivateEv>:

void Screen1Presenter::deactivate()
{
 800f430:	b480      	push	{r7}
 800f432:	b083      	sub	sp, #12
 800f434:	af00      	add	r7, sp, #0
 800f436:	6078      	str	r0, [r7, #4]

}
 800f438:	bf00      	nop
 800f43a:	370c      	adds	r7, #12
 800f43c:	46bd      	mov	sp, r7
 800f43e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f442:	4770      	bx	lr

0800f444 <_ZN8touchgfx7Unicode13snprintfFloatEPttPKcf>:
     * @return pointer to the first element in the buffer where the formatted string is
     *         placed.
     *
     * @see snprintf, snprintfFloats
     */
    static UnicodeChar* snprintfFloat(UnicodeChar* dst, uint16_t dstSize, const char* format, const float value)
 800f444:	b580      	push	{r7, lr}
 800f446:	b084      	sub	sp, #16
 800f448:	af00      	add	r7, sp, #0
 800f44a:	60f8      	str	r0, [r7, #12]
 800f44c:	460b      	mov	r3, r1
 800f44e:	607a      	str	r2, [r7, #4]
 800f450:	ed87 0a00 	vstr	s0, [r7]
 800f454:	817b      	strh	r3, [r7, #10]
    {
        return snprintfFloats(dst, dstSize, format, &value);
 800f456:	463b      	mov	r3, r7
 800f458:	8979      	ldrh	r1, [r7, #10]
 800f45a:	687a      	ldr	r2, [r7, #4]
 800f45c:	68f8      	ldr	r0, [r7, #12]
 800f45e:	f00c ff9d 	bl	801c39c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKcPKf>
 800f462:	4603      	mov	r3, r0
    }
 800f464:	4618      	mov	r0, r3
 800f466:	3710      	adds	r7, #16
 800f468:	46bd      	mov	sp, r7
 800f46a:	bd80      	pop	{r7, pc}

0800f46c <_ZN11Screen1ViewD1Ev>:

class Screen1View : public Screen1ViewBase
{
public:
    Screen1View();
    virtual ~Screen1View() {}
 800f46c:	b580      	push	{r7, lr}
 800f46e:	b082      	sub	sp, #8
 800f470:	af00      	add	r7, sp, #0
 800f472:	6078      	str	r0, [r7, #4]
 800f474:	4a05      	ldr	r2, [pc, #20]	; (800f48c <_ZN11Screen1ViewD1Ev+0x20>)
 800f476:	687b      	ldr	r3, [r7, #4]
 800f478:	601a      	str	r2, [r3, #0]
 800f47a:	687b      	ldr	r3, [r7, #4]
 800f47c:	4618      	mov	r0, r3
 800f47e:	f7fe ff85 	bl	800e38c <_ZN15Screen1ViewBaseD1Ev>
 800f482:	687b      	ldr	r3, [r7, #4]
 800f484:	4618      	mov	r0, r3
 800f486:	3708      	adds	r7, #8
 800f488:	46bd      	mov	sp, r7
 800f48a:	bd80      	pop	{r7, pc}
 800f48c:	0802ef18 	.word	0x0802ef18

0800f490 <_ZN11Screen1ViewD0Ev>:
 800f490:	b580      	push	{r7, lr}
 800f492:	b082      	sub	sp, #8
 800f494:	af00      	add	r7, sp, #0
 800f496:	6078      	str	r0, [r7, #4]
 800f498:	6878      	ldr	r0, [r7, #4]
 800f49a:	f7ff ffe7 	bl	800f46c <_ZN11Screen1ViewD1Ev>
 800f49e:	f242 4118 	movw	r1, #9240	; 0x2418
 800f4a2:	6878      	ldr	r0, [r7, #4]
 800f4a4:	f01a ff59 	bl	802a35a <_ZdlPvj>
 800f4a8:	687b      	ldr	r3, [r7, #4]
 800f4aa:	4618      	mov	r0, r3
 800f4ac:	3708      	adds	r7, #8
 800f4ae:	46bd      	mov	sp, r7
 800f4b0:	bd80      	pop	{r7, pc}
	...

0800f4b4 <_ZN11Screen1ViewC1Ev>:


extern float temperature;
extern long weight;

Screen1View::Screen1View()
 800f4b4:	b580      	push	{r7, lr}
 800f4b6:	b082      	sub	sp, #8
 800f4b8:	af00      	add	r7, sp, #0
 800f4ba:	6078      	str	r0, [r7, #4]
 800f4bc:	687b      	ldr	r3, [r7, #4]
 800f4be:	4618      	mov	r0, r3
 800f4c0:	f7fe f97e 	bl	800d7c0 <_ZN15Screen1ViewBaseC1Ev>
 800f4c4:	4a03      	ldr	r2, [pc, #12]	; (800f4d4 <_ZN11Screen1ViewC1Ev+0x20>)
 800f4c6:	687b      	ldr	r3, [r7, #4]
 800f4c8:	601a      	str	r2, [r3, #0]
{

}
 800f4ca:	687b      	ldr	r3, [r7, #4]
 800f4cc:	4618      	mov	r0, r3
 800f4ce:	3708      	adds	r7, #8
 800f4d0:	46bd      	mov	sp, r7
 800f4d2:	bd80      	pop	{r7, pc}
 800f4d4:	0802ef18 	.word	0x0802ef18

0800f4d8 <_ZN11Screen1View11setupScreenEv>:

void Screen1View::setupScreen()
{
 800f4d8:	b580      	push	{r7, lr}
 800f4da:	b082      	sub	sp, #8
 800f4dc:	af00      	add	r7, sp, #0
 800f4de:	6078      	str	r0, [r7, #4]
	Unicode::snprintfFloat(flexButton1Buffer,FLEXBUTTON1_SIZE, "%.0f",temperature);
 800f4e0:	687b      	ldr	r3, [r7, #4]
 800f4e2:	f503 63f8 	add.w	r3, r3, #1984	; 0x7c0
 800f4e6:	4a09      	ldr	r2, [pc, #36]	; (800f50c <_ZN11Screen1View11setupScreenEv+0x34>)
 800f4e8:	edd2 7a00 	vldr	s15, [r2]
 800f4ec:	eeb0 0a67 	vmov.f32	s0, s15
 800f4f0:	4a07      	ldr	r2, [pc, #28]	; (800f510 <_ZN11Screen1View11setupScreenEv+0x38>)
 800f4f2:	210a      	movs	r1, #10
 800f4f4:	4618      	mov	r0, r3
 800f4f6:	f7ff ffa5 	bl	800f444 <_ZN8touchgfx7Unicode13snprintfFloatEPttPKcf>

    Screen1ViewBase::setupScreen();
 800f4fa:	687b      	ldr	r3, [r7, #4]
 800f4fc:	4618      	mov	r0, r3
 800f4fe:	f7fe ffb0 	bl	800e462 <_ZN15Screen1ViewBase11setupScreenEv>
}
 800f502:	bf00      	nop
 800f504:	3708      	adds	r7, #8
 800f506:	46bd      	mov	sp, r7
 800f508:	bd80      	pop	{r7, pc}
 800f50a:	bf00      	nop
 800f50c:	200003c4 	.word	0x200003c4
 800f510:	0802da98 	.word	0x0802da98

0800f514 <_ZN11Screen1View14tearDownScreenEv>:

void Screen1View::tearDownScreen()
{
 800f514:	b580      	push	{r7, lr}
 800f516:	b082      	sub	sp, #8
 800f518:	af00      	add	r7, sp, #0
 800f51a:	6078      	str	r0, [r7, #4]
    Screen1ViewBase::tearDownScreen();
 800f51c:	687b      	ldr	r3, [r7, #4]
 800f51e:	4618      	mov	r0, r3
 800f520:	f7fd ff52 	bl	800d3c8 <_ZN8touchgfx6Screen14tearDownScreenEv>
}
 800f524:	bf00      	nop
 800f526:	3708      	adds	r7, #8
 800f528:	46bd      	mov	sp, r7
 800f52a:	bd80      	pop	{r7, pc}

0800f52c <_ZN11Screen1View18Update_temperatureEv>:
void Screen1View::Update_temperature(){
 800f52c:	b580      	push	{r7, lr}
 800f52e:	b082      	sub	sp, #8
 800f530:	af00      	add	r7, sp, #0
 800f532:	6078      	str	r0, [r7, #4]

	Unicode::snprintfFloat(flexButton1Buffer,FLEXBUTTON1_SIZE, "%.0f",temperature);
 800f534:	687b      	ldr	r3, [r7, #4]
 800f536:	f503 63f8 	add.w	r3, r3, #1984	; 0x7c0
 800f53a:	4a19      	ldr	r2, [pc, #100]	; (800f5a0 <_ZN11Screen1View18Update_temperatureEv+0x74>)
 800f53c:	edd2 7a00 	vldr	s15, [r2]
 800f540:	eeb0 0a67 	vmov.f32	s0, s15
 800f544:	4a17      	ldr	r2, [pc, #92]	; (800f5a4 <_ZN11Screen1View18Update_temperatureEv+0x78>)
 800f546:	210a      	movs	r1, #10
 800f548:	4618      	mov	r0, r3
 800f54a:	f7ff ff7b 	bl	800f444 <_ZN8touchgfx7Unicode13snprintfFloatEPttPKcf>
	Unicode::snprintf(textArea2Buffer,TEXTAREA2_SIZE, "%d",weight);
 800f54e:	687b      	ldr	r3, [r7, #4]
 800f550:	f203 70d4 	addw	r0, r3, #2004	; 0x7d4
 800f554:	4b14      	ldr	r3, [pc, #80]	; (800f5a8 <_ZN11Screen1View18Update_temperatureEv+0x7c>)
 800f556:	681b      	ldr	r3, [r3, #0]
 800f558:	4a14      	ldr	r2, [pc, #80]	; (800f5ac <_ZN11Screen1View18Update_temperatureEv+0x80>)
 800f55a:	210a      	movs	r1, #10
 800f55c:	f00c fd1e 	bl	801bf9c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	lineProgress1.setValue(weight);
 800f560:	687b      	ldr	r3, [r7, #4]
 800f562:	f203 632c 	addw	r3, r3, #1580	; 0x62c
 800f566:	4a10      	ldr	r2, [pc, #64]	; (800f5a8 <_ZN11Screen1View18Update_temperatureEv+0x7c>)
 800f568:	6812      	ldr	r2, [r2, #0]
 800f56a:	4611      	mov	r1, r2
 800f56c:	4618      	mov	r0, r3
 800f56e:	f002 fe05 	bl	801217c <_ZN8touchgfx12LineProgress8setValueEi>
	lineProgress1.invalidate();
 800f572:	687b      	ldr	r3, [r7, #4]
 800f574:	f203 632c 	addw	r3, r3, #1580	; 0x62c
 800f578:	4618      	mov	r0, r3
 800f57a:	f00a f88c 	bl	8019696 <_ZNK8touchgfx8Drawable10invalidateEv>
	flexButton1.invalidate();
 800f57e:	687b      	ldr	r3, [r7, #4]
 800f580:	f503 73d6 	add.w	r3, r3, #428	; 0x1ac
 800f584:	4618      	mov	r0, r3
 800f586:	f00a f886 	bl	8019696 <_ZNK8touchgfx8Drawable10invalidateEv>
	textArea2.invalidate();
 800f58a:	687b      	ldr	r3, [r7, #4]
 800f58c:	f203 7374 	addw	r3, r3, #1908	; 0x774
 800f590:	4618      	mov	r0, r3
 800f592:	f00a f880 	bl	8019696 <_ZNK8touchgfx8Drawable10invalidateEv>
}
 800f596:	bf00      	nop
 800f598:	3708      	adds	r7, #8
 800f59a:	46bd      	mov	sp, r7
 800f59c:	bd80      	pop	{r7, pc}
 800f59e:	bf00      	nop
 800f5a0:	200003c4 	.word	0x200003c4
 800f5a4:	0802da98 	.word	0x0802da98
 800f5a8:	200003cc 	.word	0x200003cc
 800f5ac:	0802daa0 	.word	0x0802daa0

0800f5b0 <_ZN8touchgfx15TouchControllerD1Ev>:
/** Basic Touch Controller interface. */
class TouchController
{
public:
    /** Finalizes an instance of the TouchController class. */
    virtual ~TouchController()
 800f5b0:	b480      	push	{r7}
 800f5b2:	b083      	sub	sp, #12
 800f5b4:	af00      	add	r7, sp, #0
 800f5b6:	6078      	str	r0, [r7, #4]
    {
 800f5b8:	4a04      	ldr	r2, [pc, #16]	; (800f5cc <_ZN8touchgfx15TouchControllerD1Ev+0x1c>)
 800f5ba:	687b      	ldr	r3, [r7, #4]
 800f5bc:	601a      	str	r2, [r3, #0]
    }
 800f5be:	687b      	ldr	r3, [r7, #4]
 800f5c0:	4618      	mov	r0, r3
 800f5c2:	370c      	adds	r7, #12
 800f5c4:	46bd      	mov	sp, r7
 800f5c6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f5ca:	4770      	bx	lr
 800f5cc:	0802ef68 	.word	0x0802ef68

0800f5d0 <_ZN8touchgfx15TouchControllerD0Ev>:
    virtual ~TouchController()
 800f5d0:	b580      	push	{r7, lr}
 800f5d2:	b082      	sub	sp, #8
 800f5d4:	af00      	add	r7, sp, #0
 800f5d6:	6078      	str	r0, [r7, #4]
    }
 800f5d8:	6878      	ldr	r0, [r7, #4]
 800f5da:	f7ff ffe9 	bl	800f5b0 <_ZN8touchgfx15TouchControllerD1Ev>
 800f5de:	2104      	movs	r1, #4
 800f5e0:	6878      	ldr	r0, [r7, #4]
 800f5e2:	f01a feba 	bl	802a35a <_ZdlPvj>
 800f5e6:	687b      	ldr	r3, [r7, #4]
 800f5e8:	4618      	mov	r0, r3
 800f5ea:	3708      	adds	r7, #8
 800f5ec:	46bd      	mov	sp, r7
 800f5ee:	bd80      	pop	{r7, pc}

0800f5f0 <ConvXPTtoILI>:
#include "ST7796.h"
#include "xpt2046.h"

extern "C" {
static void ConvXPTtoILI(uint16_t *x, uint16_t *y)
{
 800f5f0:	b480      	push	{r7}
 800f5f2:	b085      	sub	sp, #20
 800f5f4:	af00      	add	r7, sp, #0
 800f5f6:	6078      	str	r0, [r7, #4]
 800f5f8:	6039      	str	r1, [r7, #0]
	int16_t tx,ty;
	tx = (int16_t)(((int32_t)*x - XPT_XMIN) * GUI_WIDTH / XPT_WIDTH);
 800f5fa:	687b      	ldr	r3, [r7, #4]
 800f5fc:	881b      	ldrh	r3, [r3, #0]
 800f5fe:	f5a3 72af 	sub.w	r2, r3, #350	; 0x15e
 800f602:	4613      	mov	r3, r2
 800f604:	011b      	lsls	r3, r3, #4
 800f606:	1a9b      	subs	r3, r3, r2
 800f608:	015b      	lsls	r3, r3, #5
 800f60a:	4a1f      	ldr	r2, [pc, #124]	; (800f688 <ConvXPTtoILI+0x98>)
 800f60c:	fb82 1203 	smull	r1, r2, r2, r3
 800f610:	441a      	add	r2, r3
 800f612:	12d2      	asrs	r2, r2, #11
 800f614:	17db      	asrs	r3, r3, #31
 800f616:	1ad3      	subs	r3, r2, r3
 800f618:	81fb      	strh	r3, [r7, #14]
	tx = (tx < 0) ? 0 : tx;
 800f61a:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 800f61e:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 800f622:	81fb      	strh	r3, [r7, #14]
	tx = (tx >= GUI_WIDTH) ? GUI_WIDTH-1 : tx;
 800f624:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 800f628:	f240 12df 	movw	r2, #479	; 0x1df
 800f62c:	4293      	cmp	r3, r2
 800f62e:	bfa8      	it	ge
 800f630:	4613      	movge	r3, r2
 800f632:	81fb      	strh	r3, [r7, #14]
	ty = (int16_t)(((int32_t)*y - XPT_YMIN) * GUI_HEIGHT / XPT_HEIGHT);
 800f634:	683b      	ldr	r3, [r7, #0]
 800f636:	881b      	ldrh	r3, [r3, #0]
 800f638:	f5a3 72af 	sub.w	r2, r3, #350	; 0x15e
 800f63c:	4613      	mov	r3, r2
 800f63e:	009b      	lsls	r3, r3, #2
 800f640:	4413      	add	r3, r2
 800f642:	019b      	lsls	r3, r3, #6
 800f644:	4a11      	ldr	r2, [pc, #68]	; (800f68c <ConvXPTtoILI+0x9c>)
 800f646:	fb82 1203 	smull	r1, r2, r2, r3
 800f64a:	441a      	add	r2, r3
 800f64c:	12d2      	asrs	r2, r2, #11
 800f64e:	17db      	asrs	r3, r3, #31
 800f650:	1ad3      	subs	r3, r2, r3
 800f652:	81bb      	strh	r3, [r7, #12]
	ty = (ty < 0) ? 0 : ty;
 800f654:	f9b7 300c 	ldrsh.w	r3, [r7, #12]
 800f658:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 800f65c:	81bb      	strh	r3, [r7, #12]
	ty = (ty >= GUI_HEIGHT) ? GUI_HEIGHT-1 : ty;
 800f65e:	f9b7 300c 	ldrsh.w	r3, [r7, #12]
 800f662:	f240 123f 	movw	r2, #319	; 0x13f
 800f666:	4293      	cmp	r3, r2
 800f668:	bfa8      	it	ge
 800f66a:	4613      	movge	r3, r2
 800f66c:	81bb      	strh	r3, [r7, #12]
	*x = tx;
 800f66e:	89fa      	ldrh	r2, [r7, #14]
 800f670:	687b      	ldr	r3, [r7, #4]
 800f672:	801a      	strh	r2, [r3, #0]
	*y = ty;
 800f674:	89ba      	ldrh	r2, [r7, #12]
 800f676:	683b      	ldr	r3, [r7, #0]
 800f678:	801a      	strh	r2, [r3, #0]
}
 800f67a:	bf00      	nop
 800f67c:	3714      	adds	r7, #20
 800f67e:	46bd      	mov	sp, r7
 800f680:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f684:	4770      	bx	lr
 800f686:	bf00      	nop
 800f688:	97f7b075 	.word	0x97f7b075
 800f68c:	a151c331 	.word	0xa151c331

0800f690 <_ZN20STM32TouchController4initEv>:
}

void STM32TouchController::init()
{
 800f690:	b480      	push	{r7}
 800f692:	b083      	sub	sp, #12
 800f694:	af00      	add	r7, sp, #0
 800f696:	6078      	str	r0, [r7, #4]
    /**
     * Initialize touch controller and driver
     *
     */

}
 800f698:	bf00      	nop
 800f69a:	370c      	adds	r7, #12
 800f69c:	46bd      	mov	sp, r7
 800f69e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f6a2:	4770      	bx	lr

0800f6a4 <_ZN20STM32TouchController11sampleTouchERlS0_>:

bool STM32TouchController::sampleTouch(int32_t& x, int32_t& y)
{
 800f6a4:	b580      	push	{r7, lr}
 800f6a6:	b086      	sub	sp, #24
 800f6a8:	af00      	add	r7, sp, #0
 800f6aa:	60f8      	str	r0, [r7, #12]
 800f6ac:	60b9      	str	r1, [r7, #8]
 800f6ae:	607a      	str	r2, [r7, #4]
     *
     */
	static uint16_t prevx = GUI_WIDTH;
	static uint16_t prevy = GUI_HEIGHT;
	uint16_t intx, inty;
	XPT2046_Update(&intx, &inty);
 800f6b0:	f107 0214 	add.w	r2, r7, #20
 800f6b4:	f107 0316 	add.w	r3, r7, #22
 800f6b8:	4611      	mov	r1, r2
 800f6ba:	4618      	mov	r0, r3
 800f6bc:	f7f8 fece 	bl	800845c <XPT2046_Update>
	if (XPT2046_IsReasonable(intx, inty)) {
 800f6c0:	8afb      	ldrh	r3, [r7, #22]
 800f6c2:	8aba      	ldrh	r2, [r7, #20]
 800f6c4:	4611      	mov	r1, r2
 800f6c6:	4618      	mov	r0, r3
 800f6c8:	f7f8 ff5a 	bl	8008580 <XPT2046_IsReasonable>
 800f6cc:	4603      	mov	r3, r0
 800f6ce:	2b00      	cmp	r3, #0
 800f6d0:	bf14      	ite	ne
 800f6d2:	2301      	movne	r3, #1
 800f6d4:	2300      	moveq	r3, #0
 800f6d6:	b2db      	uxtb	r3, r3
 800f6d8:	2b00      	cmp	r3, #0
 800f6da:	d021      	beq.n	800f720 <_ZN20STM32TouchController11sampleTouchERlS0_+0x7c>
		ConvXPTtoILI(&intx, &inty);
 800f6dc:	f107 0214 	add.w	r2, r7, #20
 800f6e0:	f107 0316 	add.w	r3, r7, #22
 800f6e4:	4611      	mov	r1, r2
 800f6e6:	4618      	mov	r0, r3
 800f6e8:	f7ff ff82 	bl	800f5f0 <ConvXPTtoILI>
		if (intx != prevx || inty != prevy) {
 800f6ec:	8afa      	ldrh	r2, [r7, #22]
 800f6ee:	4b0f      	ldr	r3, [pc, #60]	; (800f72c <_ZN20STM32TouchController11sampleTouchERlS0_+0x88>)
 800f6f0:	881b      	ldrh	r3, [r3, #0]
 800f6f2:	429a      	cmp	r2, r3
 800f6f4:	d104      	bne.n	800f700 <_ZN20STM32TouchController11sampleTouchERlS0_+0x5c>
 800f6f6:	8aba      	ldrh	r2, [r7, #20]
 800f6f8:	4b0d      	ldr	r3, [pc, #52]	; (800f730 <_ZN20STM32TouchController11sampleTouchERlS0_+0x8c>)
 800f6fa:	881b      	ldrh	r3, [r3, #0]
 800f6fc:	429a      	cmp	r2, r3
 800f6fe:	d00f      	beq.n	800f720 <_ZN20STM32TouchController11sampleTouchERlS0_+0x7c>
			prevx = intx;
 800f700:	8afa      	ldrh	r2, [r7, #22]
 800f702:	4b0a      	ldr	r3, [pc, #40]	; (800f72c <_ZN20STM32TouchController11sampleTouchERlS0_+0x88>)
 800f704:	801a      	strh	r2, [r3, #0]
			prevy = inty;
 800f706:	8aba      	ldrh	r2, [r7, #20]
 800f708:	4b09      	ldr	r3, [pc, #36]	; (800f730 <_ZN20STM32TouchController11sampleTouchERlS0_+0x8c>)
 800f70a:	801a      	strh	r2, [r3, #0]
			x = (int32_t)intx;
 800f70c:	8afb      	ldrh	r3, [r7, #22]
 800f70e:	461a      	mov	r2, r3
 800f710:	68bb      	ldr	r3, [r7, #8]
 800f712:	601a      	str	r2, [r3, #0]
			y = (int32_t)inty;
 800f714:	8abb      	ldrh	r3, [r7, #20]
 800f716:	461a      	mov	r2, r3
 800f718:	687b      	ldr	r3, [r7, #4]
 800f71a:	601a      	str	r2, [r3, #0]
			return true;
 800f71c:	2301      	movs	r3, #1
 800f71e:	e000      	b.n	800f722 <_ZN20STM32TouchController11sampleTouchERlS0_+0x7e>
		}
	}
    return false;
 800f720:	2300      	movs	r3, #0
}
 800f722:	4618      	mov	r0, r3
 800f724:	3718      	adds	r7, #24
 800f726:	46bd      	mov	sp, r7
 800f728:	bd80      	pop	{r7, pc}
 800f72a:	bf00      	nop
 800f72c:	200000a2 	.word	0x200000a2
 800f730:	200000a4 	.word	0x200000a4

0800f734 <_ZN20STM32TouchControllerD1Ev>:
 * @brief This class specializes TouchController Interface.
 *
 * @sa touchgfx::TouchController
 */

class STM32TouchController : public touchgfx::TouchController
 800f734:	b580      	push	{r7, lr}
 800f736:	b082      	sub	sp, #8
 800f738:	af00      	add	r7, sp, #0
 800f73a:	6078      	str	r0, [r7, #4]
 800f73c:	4a05      	ldr	r2, [pc, #20]	; (800f754 <_ZN20STM32TouchControllerD1Ev+0x20>)
 800f73e:	687b      	ldr	r3, [r7, #4]
 800f740:	601a      	str	r2, [r3, #0]
 800f742:	687b      	ldr	r3, [r7, #4]
 800f744:	4618      	mov	r0, r3
 800f746:	f7ff ff33 	bl	800f5b0 <_ZN8touchgfx15TouchControllerD1Ev>
 800f74a:	687b      	ldr	r3, [r7, #4]
 800f74c:	4618      	mov	r0, r3
 800f74e:	3708      	adds	r7, #8
 800f750:	46bd      	mov	sp, r7
 800f752:	bd80      	pop	{r7, pc}
 800f754:	0802ef50 	.word	0x0802ef50

0800f758 <_ZN20STM32TouchControllerD0Ev>:
 800f758:	b580      	push	{r7, lr}
 800f75a:	b082      	sub	sp, #8
 800f75c:	af00      	add	r7, sp, #0
 800f75e:	6078      	str	r0, [r7, #4]
 800f760:	6878      	ldr	r0, [r7, #4]
 800f762:	f7ff ffe7 	bl	800f734 <_ZN20STM32TouchControllerD1Ev>
 800f766:	2104      	movs	r1, #4
 800f768:	6878      	ldr	r0, [r7, #4]
 800f76a:	f01a fdf6 	bl	802a35a <_ZdlPvj>
 800f76e:	687b      	ldr	r3, [r7, #4]
 800f770:	4618      	mov	r0, r3
 800f772:	3708      	adds	r7, #8
 800f774:	46bd      	mov	sp, r7
 800f776:	bd80      	pop	{r7, pc}

0800f778 <_ZN8touchgfx4GPIO4initEv>:

/*
 * Perform configuration of IO pins.
 */
void GPIO::init()
{
 800f778:	b480      	push	{r7}
 800f77a:	af00      	add	r7, sp, #0

}
 800f77c:	bf00      	nop
 800f77e:	46bd      	mov	sp, r7
 800f780:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f784:	4770      	bx	lr
	...

0800f788 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>:

/*
 * Sets a pin high.
 */
void GPIO::set(GPIO_ID id)
{
 800f788:	b480      	push	{r7}
 800f78a:	b083      	sub	sp, #12
 800f78c:	af00      	add	r7, sp, #0
 800f78e:	4603      	mov	r3, r0
 800f790:	71fb      	strb	r3, [r7, #7]
    switch (id)
 800f792:	79fb      	ldrb	r3, [r7, #7]
 800f794:	2b03      	cmp	r3, #3
 800f796:	d80c      	bhi.n	800f7b2 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x2a>
 800f798:	a201      	add	r2, pc, #4	; (adr r2, 800f7a0 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x18>)
 800f79a:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800f79e:	bf00      	nop
 800f7a0:	0800f7b1 	.word	0x0800f7b1
 800f7a4:	0800f7b1 	.word	0x0800f7b1
 800f7a8:	0800f7b1 	.word	0x0800f7b1
 800f7ac:	0800f7b1 	.word	0x0800f7b1
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, GPIO_PIN_SET);
#endif
        break;
 800f7b0:	bf00      	nop
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, GPIO_PIN_SET);
#endif
        break;
    }
}
 800f7b2:	bf00      	nop
 800f7b4:	370c      	adds	r7, #12
 800f7b6:	46bd      	mov	sp, r7
 800f7b8:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f7bc:	4770      	bx	lr
 800f7be:	bf00      	nop

0800f7c0 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>:

/*
 * Sets a pin low.
 */
void GPIO::clear(GPIO_ID id)
{
 800f7c0:	b480      	push	{r7}
 800f7c2:	b083      	sub	sp, #12
 800f7c4:	af00      	add	r7, sp, #0
 800f7c6:	4603      	mov	r3, r0
 800f7c8:	71fb      	strb	r3, [r7, #7]
    switch (id)
 800f7ca:	79fb      	ldrb	r3, [r7, #7]
 800f7cc:	2b03      	cmp	r3, #3
 800f7ce:	d80c      	bhi.n	800f7ea <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x2a>
 800f7d0:	a201      	add	r2, pc, #4	; (adr r2, 800f7d8 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x18>)
 800f7d2:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800f7d6:	bf00      	nop
 800f7d8:	0800f7e9 	.word	0x0800f7e9
 800f7dc:	0800f7e9 	.word	0x0800f7e9
 800f7e0:	0800f7e9 	.word	0x0800f7e9
 800f7e4:	0800f7e9 	.word	0x0800f7e9
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, GPIO_PIN_RESET);
#endif
        break;
 800f7e8:	bf00      	nop
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, GPIO_PIN_RESET);
#endif
        break;
    }
}
 800f7ea:	bf00      	nop
 800f7ec:	370c      	adds	r7, #12
 800f7ee:	46bd      	mov	sp, r7
 800f7f0:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f7f4:	4770      	bx	lr
 800f7f6:	bf00      	nop

0800f7f8 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>:

/*
 * Toggles a pin.
 */
void GPIO::toggle(GPIO_ID id)
{
 800f7f8:	b480      	push	{r7}
 800f7fa:	b083      	sub	sp, #12
 800f7fc:	af00      	add	r7, sp, #0
 800f7fe:	4603      	mov	r3, r0
 800f800:	71fb      	strb	r3, [r7, #7]
    switch (id)
 800f802:	79fb      	ldrb	r3, [r7, #7]
 800f804:	2b03      	cmp	r3, #3
 800f806:	d80c      	bhi.n	800f822 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x2a>
 800f808:	a201      	add	r2, pc, #4	; (adr r2, 800f810 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x18>)
 800f80a:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800f80e:	bf00      	nop
 800f810:	0800f821 	.word	0x0800f821
 800f814:	0800f821 	.word	0x0800f821
 800f818:	0800f821 	.word	0x0800f821
 800f81c:	0800f821 	.word	0x0800f821
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_TogglePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
#endif
        break;
 800f820:	bf00      	nop
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        HAL_GPIO_TogglePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
#endif
        break;
    }
}
 800f822:	bf00      	nop
 800f824:	370c      	adds	r7, #12
 800f826:	46bd      	mov	sp, r7
 800f828:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f82c:	4770      	bx	lr
 800f82e:	bf00      	nop

0800f830 <_ZN8touchgfx3HALD1Ev>:
    virtual ~HAL()
 800f830:	b480      	push	{r7}
 800f832:	b083      	sub	sp, #12
 800f834:	af00      	add	r7, sp, #0
 800f836:	6078      	str	r0, [r7, #4]
    {
 800f838:	4a04      	ldr	r2, [pc, #16]	; (800f84c <_ZN8touchgfx3HALD1Ev+0x1c>)
 800f83a:	687b      	ldr	r3, [r7, #4]
 800f83c:	601a      	str	r2, [r3, #0]
    }
 800f83e:	687b      	ldr	r3, [r7, #4]
 800f840:	4618      	mov	r0, r3
 800f842:	370c      	adds	r7, #12
 800f844:	46bd      	mov	sp, r7
 800f846:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f84a:	4770      	bx	lr
 800f84c:	0802f670 	.word	0x0802f670

0800f850 <_ZN8touchgfx3HALD0Ev>:
    virtual ~HAL()
 800f850:	b580      	push	{r7, lr}
 800f852:	b082      	sub	sp, #8
 800f854:	af00      	add	r7, sp, #0
 800f856:	6078      	str	r0, [r7, #4]
    }
 800f858:	6878      	ldr	r0, [r7, #4]
 800f85a:	f7ff ffe9 	bl	800f830 <_ZN8touchgfx3HALD1Ev>
 800f85e:	217c      	movs	r1, #124	; 0x7c
 800f860:	6878      	ldr	r0, [r7, #4]
 800f862:	f01a fd7a 	bl	802a35a <_ZdlPvj>
 800f866:	687b      	ldr	r3, [r7, #4]
 800f868:	4618      	mov	r0, r3
 800f86a:	3708      	adds	r7, #8
 800f86c:	46bd      	mov	sp, r7
 800f86e:	bd80      	pop	{r7, pc}

0800f870 <_ZN8touchgfx3HAL21setDisplayOrientationENS_18DisplayOrientationE>:
    virtual void setDisplayOrientation(DisplayOrientation orientation)
 800f870:	b480      	push	{r7}
 800f872:	b083      	sub	sp, #12
 800f874:	af00      	add	r7, sp, #0
 800f876:	6078      	str	r0, [r7, #4]
 800f878:	460b      	mov	r3, r1
 800f87a:	70fb      	strb	r3, [r7, #3]
        requestedOrientation = orientation;
 800f87c:	687b      	ldr	r3, [r7, #4]
 800f87e:	78fa      	ldrb	r2, [r7, #3]
 800f880:	f883 2078 	strb.w	r2, [r3, #120]	; 0x78
        displayOrientationChangeRequested = true;
 800f884:	687b      	ldr	r3, [r7, #4]
 800f886:	2201      	movs	r2, #1
 800f888:	f883 2079 	strb.w	r2, [r3, #121]	; 0x79
    }
 800f88c:	bf00      	nop
 800f88e:	370c      	adds	r7, #12
 800f890:	46bd      	mov	sp, r7
 800f892:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f896:	4770      	bx	lr

0800f898 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt>:
    virtual void setFrameBufferSize(uint16_t width, uint16_t height)
 800f898:	b580      	push	{r7, lr}
 800f89a:	b082      	sub	sp, #8
 800f89c:	af00      	add	r7, sp, #0
 800f89e:	6078      	str	r0, [r7, #4]
 800f8a0:	460b      	mov	r3, r1
 800f8a2:	807b      	strh	r3, [r7, #2]
 800f8a4:	4613      	mov	r3, r2
 800f8a6:	803b      	strh	r3, [r7, #0]
        assert(width >= DISPLAY_WIDTH && height >= DISPLAY_HEIGHT && "Framebuffer cannot be smaller than display");
 800f8a8:	4b0c      	ldr	r3, [pc, #48]	; (800f8dc <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x44>)
 800f8aa:	881b      	ldrh	r3, [r3, #0]
 800f8ac:	887a      	ldrh	r2, [r7, #2]
 800f8ae:	429a      	cmp	r2, r3
 800f8b0:	d304      	bcc.n	800f8bc <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x24>
 800f8b2:	4b0b      	ldr	r3, [pc, #44]	; (800f8e0 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x48>)
 800f8b4:	881b      	ldrh	r3, [r3, #0]
 800f8b6:	883a      	ldrh	r2, [r7, #0]
 800f8b8:	429a      	cmp	r2, r3
 800f8ba:	d205      	bcs.n	800f8c8 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x30>
 800f8bc:	4b09      	ldr	r3, [pc, #36]	; (800f8e4 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x4c>)
 800f8be:	4a0a      	ldr	r2, [pc, #40]	; (800f8e8 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x50>)
 800f8c0:	219e      	movs	r1, #158	; 0x9e
 800f8c2:	480a      	ldr	r0, [pc, #40]	; (800f8ec <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x54>)
 800f8c4:	f01a fd78 	bl	802a3b8 <__assert_func>
        FRAME_BUFFER_WIDTH = width;
 800f8c8:	4a09      	ldr	r2, [pc, #36]	; (800f8f0 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x58>)
 800f8ca:	887b      	ldrh	r3, [r7, #2]
 800f8cc:	8013      	strh	r3, [r2, #0]
        FRAME_BUFFER_HEIGHT = height;
 800f8ce:	4a09      	ldr	r2, [pc, #36]	; (800f8f4 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x5c>)
 800f8d0:	883b      	ldrh	r3, [r7, #0]
 800f8d2:	8013      	strh	r3, [r2, #0]
    }
 800f8d4:	bf00      	nop
 800f8d6:	3708      	adds	r7, #8
 800f8d8:	46bd      	mov	sp, r7
 800f8da:	bd80      	pop	{r7, pc}
 800f8dc:	20006c28 	.word	0x20006c28
 800f8e0:	20006c2a 	.word	0x20006c2a
 800f8e4:	0802daa4 	.word	0x0802daa4
 800f8e8:	0802db08 	.word	0x0802db08
 800f8ec:	0802db4c 	.word	0x0802db4c
 800f8f0:	20006c2e 	.word	0x20006c2e
 800f8f4:	20006c30 	.word	0x20006c30

0800f8f8 <_ZN8touchgfx3HAL11getBlitCapsEv>:
    virtual BlitOperations getBlitCaps()
 800f8f8:	b580      	push	{r7, lr}
 800f8fa:	b082      	sub	sp, #8
 800f8fc:	af00      	add	r7, sp, #0
 800f8fe:	6078      	str	r0, [r7, #4]
        if (useDMAAcceleration)
 800f900:	687b      	ldr	r3, [r7, #4]
 800f902:	f893 307a 	ldrb.w	r3, [r3, #122]	; 0x7a
 800f906:	2b00      	cmp	r3, #0
 800f908:	d009      	beq.n	800f91e <_ZN8touchgfx3HAL11getBlitCapsEv+0x26>
            return dma.getBlitCaps();
 800f90a:	687b      	ldr	r3, [r7, #4]
 800f90c:	685a      	ldr	r2, [r3, #4]
 800f90e:	687b      	ldr	r3, [r7, #4]
 800f910:	685b      	ldr	r3, [r3, #4]
 800f912:	681b      	ldr	r3, [r3, #0]
 800f914:	681b      	ldr	r3, [r3, #0]
 800f916:	4610      	mov	r0, r2
 800f918:	4798      	blx	r3
 800f91a:	4603      	mov	r3, r0
 800f91c:	e000      	b.n	800f920 <_ZN8touchgfx3HAL11getBlitCapsEv+0x28>
        return static_cast<BlitOperations>(0);
 800f91e:	2300      	movs	r3, #0
    }
 800f920:	4618      	mov	r0, r3
 800f922:	3708      	adds	r7, #8
 800f924:	46bd      	mov	sp, r7
 800f926:	bd80      	pop	{r7, pc}

0800f928 <_ZN8touchgfx3HAL15backPorchExitedEv>:
    virtual void backPorchExited()
 800f928:	b580      	push	{r7, lr}
 800f92a:	b082      	sub	sp, #8
 800f92c:	af00      	add	r7, sp, #0
 800f92e:	6078      	str	r0, [r7, #4]
        swapFrameBuffers();
 800f930:	6878      	ldr	r0, [r7, #4]
 800f932:	f003 fe61 	bl	80135f8 <_ZN8touchgfx3HAL16swapFrameBuffersEv>
        tick();
 800f936:	687b      	ldr	r3, [r7, #4]
 800f938:	681b      	ldr	r3, [r3, #0]
 800f93a:	33ac      	adds	r3, #172	; 0xac
 800f93c:	681b      	ldr	r3, [r3, #0]
 800f93e:	6878      	ldr	r0, [r7, #4]
 800f940:	4798      	blx	r3
    }
 800f942:	bf00      	nop
 800f944:	3708      	adds	r7, #8
 800f946:	46bd      	mov	sp, r7
 800f948:	bd80      	pop	{r7, pc}

0800f94a <_ZN8touchgfx3HAL9sampleKeyERh>:
    virtual bool sampleKey(uint8_t& key)
 800f94a:	b480      	push	{r7}
 800f94c:	b083      	sub	sp, #12
 800f94e:	af00      	add	r7, sp, #0
 800f950:	6078      	str	r0, [r7, #4]
 800f952:	6039      	str	r1, [r7, #0]
        return false;
 800f954:	2300      	movs	r3, #0
    }
 800f956:	4618      	mov	r0, r3
 800f958:	370c      	adds	r7, #12
 800f95a:	46bd      	mov	sp, r7
 800f95c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f960:	4770      	bx	lr
	...

0800f964 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_>:
    virtual void setFrameBufferStartAddresses(void* frameBuffer, void* doubleBuffer, void* animationStorage)
 800f964:	b580      	push	{r7, lr}
 800f966:	b084      	sub	sp, #16
 800f968:	af00      	add	r7, sp, #0
 800f96a:	60f8      	str	r0, [r7, #12]
 800f96c:	60b9      	str	r1, [r7, #8]
 800f96e:	607a      	str	r2, [r7, #4]
 800f970:	603b      	str	r3, [r7, #0]
        assert(frameBuffer != 0 && "A framebuffer address must be set");
 800f972:	68bb      	ldr	r3, [r7, #8]
 800f974:	2b00      	cmp	r3, #0
 800f976:	d106      	bne.n	800f986 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x22>
 800f978:	4b0f      	ldr	r3, [pc, #60]	; (800f9b8 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x54>)
 800f97a:	4a10      	ldr	r2, [pc, #64]	; (800f9bc <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x58>)
 800f97c:	f240 21d2 	movw	r1, #722	; 0x2d2
 800f980:	480f      	ldr	r0, [pc, #60]	; (800f9c0 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x5c>)
 800f982:	f01a fd19 	bl	802a3b8 <__assert_func>
        frameBuffer0 = reinterpret_cast<uint16_t*>(frameBuffer);
 800f986:	68fb      	ldr	r3, [r7, #12]
 800f988:	68ba      	ldr	r2, [r7, #8]
 800f98a:	63da      	str	r2, [r3, #60]	; 0x3c
        frameBuffer1 = reinterpret_cast<uint16_t*>(doubleBuffer);
 800f98c:	68fb      	ldr	r3, [r7, #12]
 800f98e:	687a      	ldr	r2, [r7, #4]
 800f990:	641a      	str	r2, [r3, #64]	; 0x40
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
 800f992:	687b      	ldr	r3, [r7, #4]
 800f994:	2b00      	cmp	r3, #0
 800f996:	bf14      	ite	ne
 800f998:	2301      	movne	r3, #1
 800f99a:	2300      	moveq	r3, #0
 800f99c:	b2da      	uxtb	r2, r3
 800f99e:	4b09      	ldr	r3, [pc, #36]	; (800f9c4 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x60>)
 800f9a0:	701a      	strb	r2, [r3, #0]
        setAnimationStorage(animationStorage);
 800f9a2:	68fb      	ldr	r3, [r7, #12]
 800f9a4:	681b      	ldr	r3, [r3, #0]
 800f9a6:	338c      	adds	r3, #140	; 0x8c
 800f9a8:	681b      	ldr	r3, [r3, #0]
 800f9aa:	6839      	ldr	r1, [r7, #0]
 800f9ac:	68f8      	ldr	r0, [r7, #12]
 800f9ae:	4798      	blx	r3
    }
 800f9b0:	bf00      	nop
 800f9b2:	3710      	adds	r7, #16
 800f9b4:	46bd      	mov	sp, r7
 800f9b6:	bd80      	pop	{r7, pc}
 800f9b8:	0802db90 	.word	0x0802db90
 800f9bc:	0802dbc8 	.word	0x0802dbc8
 800f9c0:	0802db4c 	.word	0x0802db4c
 800f9c4:	20006c32 	.word	0x20006c32

0800f9c8 <_ZN8touchgfx3HAL19setAnimationStorageEPv>:
    virtual void setAnimationStorage(void* animationStorage)
 800f9c8:	b480      	push	{r7}
 800f9ca:	b083      	sub	sp, #12
 800f9cc:	af00      	add	r7, sp, #0
 800f9ce:	6078      	str	r0, [r7, #4]
 800f9d0:	6039      	str	r1, [r7, #0]
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
 800f9d2:	687b      	ldr	r3, [r7, #4]
 800f9d4:	683a      	ldr	r2, [r7, #0]
 800f9d6:	645a      	str	r2, [r3, #68]	; 0x44
        USE_ANIMATION_STORAGE = animationStorage != 0;
 800f9d8:	683b      	ldr	r3, [r7, #0]
 800f9da:	2b00      	cmp	r3, #0
 800f9dc:	bf14      	ite	ne
 800f9de:	2301      	movne	r3, #1
 800f9e0:	2300      	moveq	r3, #0
 800f9e2:	b2da      	uxtb	r2, r3
 800f9e4:	4b03      	ldr	r3, [pc, #12]	; (800f9f4 <_ZN8touchgfx3HAL19setAnimationStorageEPv+0x2c>)
 800f9e6:	701a      	strb	r2, [r3, #0]
    }
 800f9e8:	bf00      	nop
 800f9ea:	370c      	adds	r7, #12
 800f9ec:	46bd      	mov	sp, r7
 800f9ee:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f9f2:	4770      	bx	lr
 800f9f4:	20006c33 	.word	0x20006c33

0800f9f8 <_ZNK8touchgfx3HAL18getFlashDataReaderEv>:
    virtual FlashDataReader* getFlashDataReader() const
 800f9f8:	b480      	push	{r7}
 800f9fa:	b083      	sub	sp, #12
 800f9fc:	af00      	add	r7, sp, #0
 800f9fe:	6078      	str	r0, [r7, #4]
        return 0;
 800fa00:	2300      	movs	r3, #0
    }
 800fa02:	4618      	mov	r0, r3
 800fa04:	370c      	adds	r7, #12
 800fa06:	46bd      	mov	sp, r7
 800fa08:	f85d 7b04 	ldr.w	r7, [sp], #4
 800fa0c:	4770      	bx	lr

0800fa0e <_ZN8touchgfx3HAL9taskDelayEt>:
    virtual void taskDelay(uint16_t ms)
 800fa0e:	b580      	push	{r7, lr}
 800fa10:	b082      	sub	sp, #8
 800fa12:	af00      	add	r7, sp, #0
 800fa14:	6078      	str	r0, [r7, #4]
 800fa16:	460b      	mov	r3, r1
 800fa18:	807b      	strh	r3, [r7, #2]
        if (taskDelayFunc)
 800fa1a:	687b      	ldr	r3, [r7, #4]
 800fa1c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800fa1e:	2b00      	cmp	r3, #0
 800fa20:	d004      	beq.n	800fa2c <_ZN8touchgfx3HAL9taskDelayEt+0x1e>
            taskDelayFunc(ms);
 800fa22:	687b      	ldr	r3, [r7, #4]
 800fa24:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800fa26:	887a      	ldrh	r2, [r7, #2]
 800fa28:	4610      	mov	r0, r2
 800fa2a:	4798      	blx	r3
    }
 800fa2c:	bf00      	nop
 800fa2e:	3708      	adds	r7, #8
 800fa30:	46bd      	mov	sp, r7
 800fa32:	bd80      	pop	{r7, pc}

0800fa34 <_ZN8touchgfx3HAL17getTFTCurrentLineEv>:
    virtual uint16_t getTFTCurrentLine()
 800fa34:	b480      	push	{r7}
 800fa36:	b083      	sub	sp, #12
 800fa38:	af00      	add	r7, sp, #0
 800fa3a:	6078      	str	r0, [r7, #4]
        return 0xFFFFu;
 800fa3c:	f64f 73ff 	movw	r3, #65535	; 0xffff
    }
 800fa40:	4618      	mov	r0, r3
 800fa42:	370c      	adds	r7, #12
 800fa44:	46bd      	mov	sp, r7
 800fa46:	f85d 7b04 	ldr.w	r7, [sp], #4
 800fa4a:	4770      	bx	lr

0800fa4c <_ZN8touchgfx3HAL10getDMATypeEv>:
    virtual DMAType getDMAType()
 800fa4c:	b580      	push	{r7, lr}
 800fa4e:	b082      	sub	sp, #8
 800fa50:	af00      	add	r7, sp, #0
 800fa52:	6078      	str	r0, [r7, #4]
        return dma.getDMAType();
 800fa54:	687b      	ldr	r3, [r7, #4]
 800fa56:	685a      	ldr	r2, [r3, #4]
 800fa58:	687b      	ldr	r3, [r7, #4]
 800fa5a:	685b      	ldr	r3, [r3, #4]
 800fa5c:	681b      	ldr	r3, [r3, #0]
 800fa5e:	3318      	adds	r3, #24
 800fa60:	681b      	ldr	r3, [r3, #0]
 800fa62:	4610      	mov	r0, r2
 800fa64:	4798      	blx	r3
 800fa66:	4603      	mov	r3, r0
    }
 800fa68:	4618      	mov	r0, r3
 800fa6a:	3708      	adds	r7, #8
 800fa6c:	46bd      	mov	sp, r7
 800fa6e:	bd80      	pop	{r7, pc}

0800fa70 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv>:

    /** Called by the touch driver to indicate that no touch is currently detected. */
    virtual void noTouch();

    /** Perform the actual display orientation change. */
    virtual void performDisplayOrientationChange()
 800fa70:	b480      	push	{r7}
 800fa72:	b085      	sub	sp, #20
 800fa74:	af00      	add	r7, sp, #0
 800fa76:	6078      	str	r0, [r7, #4]
    {
        if (requestedOrientation != nativeDisplayOrientation)
 800fa78:	687b      	ldr	r3, [r7, #4]
 800fa7a:	f893 2078 	ldrb.w	r2, [r3, #120]	; 0x78
 800fa7e:	687b      	ldr	r3, [r7, #4]
 800fa80:	f893 3034 	ldrb.w	r3, [r3, #52]	; 0x34
 800fa84:	429a      	cmp	r2, r3
 800fa86:	d011      	beq.n	800faac <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x3c>
        {
            if (DISPLAY_ROTATION == rotate0)
 800fa88:	4b14      	ldr	r3, [pc, #80]	; (800fadc <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x6c>)
 800fa8a:	781b      	ldrb	r3, [r3, #0]
 800fa8c:	2b00      	cmp	r3, #0
 800fa8e:	d11e      	bne.n	800face <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x5e>
            {
                const uint16_t tmp = DISPLAY_HEIGHT;
 800fa90:	4b13      	ldr	r3, [pc, #76]	; (800fae0 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x70>)
 800fa92:	881b      	ldrh	r3, [r3, #0]
 800fa94:	81bb      	strh	r3, [r7, #12]
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 800fa96:	4b13      	ldr	r3, [pc, #76]	; (800fae4 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x74>)
 800fa98:	881a      	ldrh	r2, [r3, #0]
 800fa9a:	4b11      	ldr	r3, [pc, #68]	; (800fae0 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x70>)
 800fa9c:	801a      	strh	r2, [r3, #0]
                DISPLAY_WIDTH = tmp;
 800fa9e:	4a11      	ldr	r2, [pc, #68]	; (800fae4 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x74>)
 800faa0:	89bb      	ldrh	r3, [r7, #12]
 800faa2:	8013      	strh	r3, [r2, #0]
                DISPLAY_ROTATION = rotate90;
 800faa4:	4b0d      	ldr	r3, [pc, #52]	; (800fadc <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x6c>)
 800faa6:	2201      	movs	r2, #1
 800faa8:	701a      	strb	r2, [r3, #0]
            const uint16_t tmp = DISPLAY_HEIGHT;
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
            DISPLAY_WIDTH = tmp;
            DISPLAY_ROTATION = rotate0;
        }
    }
 800faaa:	e010      	b.n	800face <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x5e>
        else if (DISPLAY_ROTATION != rotate0)
 800faac:	4b0b      	ldr	r3, [pc, #44]	; (800fadc <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x6c>)
 800faae:	781b      	ldrb	r3, [r3, #0]
 800fab0:	2b00      	cmp	r3, #0
 800fab2:	d00c      	beq.n	800face <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x5e>
            const uint16_t tmp = DISPLAY_HEIGHT;
 800fab4:	4b0a      	ldr	r3, [pc, #40]	; (800fae0 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x70>)
 800fab6:	881b      	ldrh	r3, [r3, #0]
 800fab8:	81fb      	strh	r3, [r7, #14]
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 800faba:	4b0a      	ldr	r3, [pc, #40]	; (800fae4 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x74>)
 800fabc:	881a      	ldrh	r2, [r3, #0]
 800fabe:	4b08      	ldr	r3, [pc, #32]	; (800fae0 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x70>)
 800fac0:	801a      	strh	r2, [r3, #0]
            DISPLAY_WIDTH = tmp;
 800fac2:	4a08      	ldr	r2, [pc, #32]	; (800fae4 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x74>)
 800fac4:	89fb      	ldrh	r3, [r7, #14]
 800fac6:	8013      	strh	r3, [r2, #0]
            DISPLAY_ROTATION = rotate0;
 800fac8:	4b04      	ldr	r3, [pc, #16]	; (800fadc <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x6c>)
 800faca:	2200      	movs	r2, #0
 800facc:	701a      	strb	r2, [r3, #0]
    }
 800face:	bf00      	nop
 800fad0:	3714      	adds	r7, #20
 800fad2:	46bd      	mov	sp, r7
 800fad4:	f85d 7b04 	ldr.w	r7, [sp], #4
 800fad8:	4770      	bx	lr
 800fada:	bf00      	nop
 800fadc:	20006c2c 	.word	0x20006c2c
 800fae0:	20006c2a 	.word	0x20006c2a
 800fae4:	20006c28 	.word	0x20006c28

0800fae8 <_ZN8touchgfx3HAL15InvalidateCacheEv>:
     * Invalidate D-Cache.
     *
     * Called by setRenderingMethod when changing rendering method
     * from Hardware to Software indicating the cache should be invalidated.
     */
    virtual void InvalidateCache()
 800fae8:	b480      	push	{r7}
 800faea:	b083      	sub	sp, #12
 800faec:	af00      	add	r7, sp, #0
 800faee:	6078      	str	r0, [r7, #4]
    {
    }
 800faf0:	bf00      	nop
 800faf2:	370c      	adds	r7, #12
 800faf4:	46bd      	mov	sp, r7
 800faf6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800fafa:	4770      	bx	lr

0800fafc <_ZN8touchgfx3HAL10FlushCacheEv>:
     * Flush D-Cache.
     *
     * Called by setRenderingMethod when changing rendering method
     * from Software to Hardware indicating the cache should be invalidated.
     */
    virtual void FlushCache()
 800fafc:	b480      	push	{r7}
 800fafe:	b083      	sub	sp, #12
 800fb00:	af00      	add	r7, sp, #0
 800fb02:	6078      	str	r0, [r7, #4]
    {
    }
 800fb04:	bf00      	nop
 800fb06:	370c      	adds	r7, #12
 800fb08:	46bd      	mov	sp, r7
 800fb0a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800fb0e:	4770      	bx	lr

0800fb10 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferEv>:
     *
     * This specialization is only in place to keep compilers happy. Base impl. will call the
     * Rect version.
     * @see HAL::flushFrameBuffer
     */
    virtual void flushFrameBuffer()
 800fb10:	b580      	push	{r7, lr}
 800fb12:	b082      	sub	sp, #8
 800fb14:	af00      	add	r7, sp, #0
 800fb16:	6078      	str	r0, [r7, #4]
    {
        HAL::flushFrameBuffer();
 800fb18:	687b      	ldr	r3, [r7, #4]
 800fb1a:	4618      	mov	r0, r3
 800fb1c:	f002 ffca 	bl	8012ab4 <_ZN8touchgfx3HAL16flushFrameBufferEv>
    }
 800fb20:	bf00      	nop
 800fb22:	3708      	adds	r7, #8
 800fb24:	46bd      	mov	sp, r7
 800fb26:	bd80      	pop	{r7, pc}

0800fb28 <_ZN20TouchGFXGeneratedHALD1Ev>:
class TouchGFXGeneratedHAL : public touchgfx::HAL
 800fb28:	b580      	push	{r7, lr}
 800fb2a:	b082      	sub	sp, #8
 800fb2c:	af00      	add	r7, sp, #0
 800fb2e:	6078      	str	r0, [r7, #4]
 800fb30:	4a05      	ldr	r2, [pc, #20]	; (800fb48 <_ZN20TouchGFXGeneratedHALD1Ev+0x20>)
 800fb32:	687b      	ldr	r3, [r7, #4]
 800fb34:	601a      	str	r2, [r3, #0]
 800fb36:	687b      	ldr	r3, [r7, #4]
 800fb38:	4618      	mov	r0, r3
 800fb3a:	f7ff fe79 	bl	800f830 <_ZN8touchgfx3HALD1Ev>
 800fb3e:	687b      	ldr	r3, [r7, #4]
 800fb40:	4618      	mov	r0, r3
 800fb42:	3708      	adds	r7, #8
 800fb44:	46bd      	mov	sp, r7
 800fb46:	bd80      	pop	{r7, pc}
 800fb48:	0802f1cc 	.word	0x0802f1cc

0800fb4c <_ZN20TouchGFXGeneratedHALD0Ev>:
 800fb4c:	b580      	push	{r7, lr}
 800fb4e:	b082      	sub	sp, #8
 800fb50:	af00      	add	r7, sp, #0
 800fb52:	6078      	str	r0, [r7, #4]
 800fb54:	6878      	ldr	r0, [r7, #4]
 800fb56:	f7ff ffe7 	bl	800fb28 <_ZN20TouchGFXGeneratedHALD1Ev>
 800fb5a:	217c      	movs	r1, #124	; 0x7c
 800fb5c:	6878      	ldr	r0, [r7, #4]
 800fb5e:	f01a fbfc 	bl	802a35a <_ZdlPvj>
 800fb62:	687b      	ldr	r3, [r7, #4]
 800fb64:	4618      	mov	r0, r3
 800fb66:	3708      	adds	r7, #8
 800fb68:	46bd      	mov	sp, r7
 800fb6a:	bd80      	pop	{r7, pc}

0800fb6c <_ZN11TouchGFXHAL16flushFrameBufferEv>:
     *
     * This specialization is only in place to keep compilers happy. Base impl. will call the
     * Rect version.
     * @see HAL::flushFrameBuffer
     */
    virtual void flushFrameBuffer()
 800fb6c:	b580      	push	{r7, lr}
 800fb6e:	b082      	sub	sp, #8
 800fb70:	af00      	add	r7, sp, #0
 800fb72:	6078      	str	r0, [r7, #4]
    {
        TouchGFXGeneratedHAL::flushFrameBuffer();
 800fb74:	687b      	ldr	r3, [r7, #4]
 800fb76:	4618      	mov	r0, r3
 800fb78:	f7ff ffca 	bl	800fb10 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferEv>
    }
 800fb7c:	bf00      	nop
 800fb7e:	3708      	adds	r7, #8
 800fb80:	46bd      	mov	sp, r7
 800fb82:	bd80      	pop	{r7, pc}

0800fb84 <_ZN11TouchGFXHAL10initializeEv>:
 *
 */


void TouchGFXHAL::initialize()
{
 800fb84:	b580      	push	{r7, lr}
 800fb86:	b082      	sub	sp, #8
 800fb88:	af00      	add	r7, sp, #0
 800fb8a:	6078      	str	r0, [r7, #4]
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::initialize() must be called to initialize the framework.

    TouchGFXGeneratedHAL::initialize();
 800fb8c:	687b      	ldr	r3, [r7, #4]
 800fb8e:	4618      	mov	r0, r3
 800fb90:	f001 f8c8 	bl	8010d24 <_ZN20TouchGFXGeneratedHAL10initializeEv>
}
 800fb94:	bf00      	nop
 800fb96:	3708      	adds	r7, #8
 800fb98:	46bd      	mov	sp, r7
 800fb9a:	bd80      	pop	{r7, pc}

0800fb9c <_ZNK11TouchGFXHAL17getTFTFrameBufferEv>:
 * Gets the frame buffer address used by the TFT controller.
 *
 * @return The address of the frame buffer currently being displayed on the TFT.
 */
uint16_t* TouchGFXHAL::getTFTFrameBuffer() const
{
 800fb9c:	b580      	push	{r7, lr}
 800fb9e:	b082      	sub	sp, #8
 800fba0:	af00      	add	r7, sp, #0
 800fba2:	6078      	str	r0, [r7, #4]
    // Calling parent implementation of getTFTFrameBuffer().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    return TouchGFXGeneratedHAL::getTFTFrameBuffer();
 800fba4:	687b      	ldr	r3, [r7, #4]
 800fba6:	4618      	mov	r0, r3
 800fba8:	f001 f93a 	bl	8010e20 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>
 800fbac:	4603      	mov	r3, r0
}
 800fbae:	4618      	mov	r0, r3
 800fbb0:	3708      	adds	r7, #8
 800fbb2:	46bd      	mov	sp, r7
 800fbb4:	bd80      	pop	{r7, pc}

0800fbb6 <_ZN11TouchGFXHAL17setTFTFrameBufferEPt>:
 * Sets the frame buffer address used by the TFT controller.
 *
 * @param [in] address New frame buffer address.
 */
void TouchGFXHAL::setTFTFrameBuffer(uint16_t* address)
{
 800fbb6:	b580      	push	{r7, lr}
 800fbb8:	b082      	sub	sp, #8
 800fbba:	af00      	add	r7, sp, #0
 800fbbc:	6078      	str	r0, [r7, #4]
 800fbbe:	6039      	str	r1, [r7, #0]
    // Calling parent implementation of setTFTFrameBuffer(uint16_t* address).
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::setTFTFrameBuffer(address);
 800fbc0:	687b      	ldr	r3, [r7, #4]
 800fbc2:	6839      	ldr	r1, [r7, #0]
 800fbc4:	4618      	mov	r0, r3
 800fbc6:	f001 f936 	bl	8010e36 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>
}
 800fbca:	bf00      	nop
 800fbcc:	3708      	adds	r7, #8
 800fbce:	46bd      	mov	sp, r7
 800fbd0:	bd80      	pop	{r7, pc}

0800fbd2 <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE>:
 * @param rect The area of the screen that has been drawn, expressed in absolute coordinates.
 *
 * @see flushFrameBuffer().
 */
void TouchGFXHAL::flushFrameBuffer(const touchgfx::Rect& rect)
{
 800fbd2:	b580      	push	{r7, lr}
 800fbd4:	b082      	sub	sp, #8
 800fbd6:	af00      	add	r7, sp, #0
 800fbd8:	6078      	str	r0, [r7, #4]
 800fbda:	6039      	str	r1, [r7, #0]
    // be called to notify the touchgfx framework that flush has been performed.
    // To calculate he start adress of rect,
    // use advanceFrameBufferToRect(uint8_t* fbPtr, const touchgfx::Rect& rect)
    // defined in TouchGFXGeneratedHAL.cpp

    TouchGFXGeneratedHAL::flushFrameBuffer(rect);
 800fbdc:	687b      	ldr	r3, [r7, #4]
 800fbde:	6839      	ldr	r1, [r7, #0]
 800fbe0:	4618      	mov	r0, r3
 800fbe2:	f001 f933 	bl	8010e4c <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>
}
 800fbe6:	bf00      	nop
 800fbe8:	3708      	adds	r7, #8
 800fbea:	46bd      	mov	sp, r7
 800fbec:	bd80      	pop	{r7, pc}

0800fbee <_ZN11TouchGFXHAL9blockCopyEPvPKvm>:

bool TouchGFXHAL::blockCopy(void* RESTRICT dest, const void* RESTRICT src, uint32_t numBytes)
{
 800fbee:	b580      	push	{r7, lr}
 800fbf0:	b084      	sub	sp, #16
 800fbf2:	af00      	add	r7, sp, #0
 800fbf4:	60f8      	str	r0, [r7, #12]
 800fbf6:	60b9      	str	r1, [r7, #8]
 800fbf8:	607a      	str	r2, [r7, #4]
 800fbfa:	603b      	str	r3, [r7, #0]
    return TouchGFXGeneratedHAL::blockCopy(dest, src, numBytes);
 800fbfc:	68f8      	ldr	r0, [r7, #12]
 800fbfe:	683b      	ldr	r3, [r7, #0]
 800fc00:	687a      	ldr	r2, [r7, #4]
 800fc02:	68b9      	ldr	r1, [r7, #8]
 800fc04:	f001 f965 	bl	8010ed2 <_ZN20TouchGFXGeneratedHAL9blockCopyEPvPKvm>
 800fc08:	4603      	mov	r3, r0
}
 800fc0a:	4618      	mov	r0, r3
 800fc0c:	3710      	adds	r7, #16
 800fc0e:	46bd      	mov	sp, r7
 800fc10:	bd80      	pop	{r7, pc}

0800fc12 <_ZN11TouchGFXHAL19configureInterruptsEv>:
/**
 * Configures the interrupts relevant for TouchGFX. This primarily entails setting
 * the interrupt priorities for the DMA and LCD interrupts.
 */
void TouchGFXHAL::configureInterrupts()
{
 800fc12:	b580      	push	{r7, lr}
 800fc14:	b082      	sub	sp, #8
 800fc16:	af00      	add	r7, sp, #0
 800fc18:	6078      	str	r0, [r7, #4]
    // Calling parent implementation of configureInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::configureInterrupts();
 800fc1a:	687b      	ldr	r3, [r7, #4]
 800fc1c:	4618      	mov	r0, r3
 800fc1e:	f001 f8b1 	bl	8010d84 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>
}
 800fc22:	bf00      	nop
 800fc24:	3708      	adds	r7, #8
 800fc26:	46bd      	mov	sp, r7
 800fc28:	bd80      	pop	{r7, pc}

0800fc2a <_ZN11TouchGFXHAL16enableInterruptsEv>:

/**
 * Used for enabling interrupts set in configureInterrupts()
 */
void TouchGFXHAL::enableInterrupts()
{
 800fc2a:	b580      	push	{r7, lr}
 800fc2c:	b082      	sub	sp, #8
 800fc2e:	af00      	add	r7, sp, #0
 800fc30:	6078      	str	r0, [r7, #4]
    // Calling parent implementation of enableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableInterrupts();
 800fc32:	687b      	ldr	r3, [r7, #4]
 800fc34:	4618      	mov	r0, r3
 800fc36:	f001 f8af 	bl	8010d98 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>
}
 800fc3a:	bf00      	nop
 800fc3c:	3708      	adds	r7, #8
 800fc3e:	46bd      	mov	sp, r7
 800fc40:	bd80      	pop	{r7, pc}

0800fc42 <_ZN11TouchGFXHAL17disableInterruptsEv>:

/**
 * Used for disabling interrupts set in configureInterrupts()
 */
void TouchGFXHAL::disableInterrupts()
{
 800fc42:	b580      	push	{r7, lr}
 800fc44:	b082      	sub	sp, #8
 800fc46:	af00      	add	r7, sp, #0
 800fc48:	6078      	str	r0, [r7, #4]
    // Calling parent implementation of disableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::disableInterrupts();
 800fc4a:	687b      	ldr	r3, [r7, #4]
 800fc4c:	4618      	mov	r0, r3
 800fc4e:	f001 f8ad 	bl	8010dac <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>
}
 800fc52:	bf00      	nop
 800fc54:	3708      	adds	r7, #8
 800fc56:	46bd      	mov	sp, r7
 800fc58:	bd80      	pop	{r7, pc}

0800fc5a <_ZN11TouchGFXHAL28enableLCDControllerInterruptEv>:
/**
 * Configure the LCD controller to fire interrupts at VSYNC. Called automatically
 * once TouchGFX initialization has completed.
 */
void TouchGFXHAL::enableLCDControllerInterrupt()
{
 800fc5a:	b580      	push	{r7, lr}
 800fc5c:	b082      	sub	sp, #8
 800fc5e:	af00      	add	r7, sp, #0
 800fc60:	6078      	str	r0, [r7, #4]
    // Calling parent implementation of enableLCDControllerInterrupt().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableLCDControllerInterrupt();
 800fc62:	687b      	ldr	r3, [r7, #4]
 800fc64:	4618      	mov	r0, r3
 800fc66:	f001 f8ab 	bl	8010dc0 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>
}
 800fc6a:	bf00      	nop
 800fc6c:	3708      	adds	r7, #8
 800fc6e:	46bd      	mov	sp, r7
 800fc70:	bd80      	pop	{r7, pc}

0800fc72 <_ZN11TouchGFXHAL10beginFrameEv>:

bool TouchGFXHAL::beginFrame()
{
 800fc72:	b580      	push	{r7, lr}
 800fc74:	b082      	sub	sp, #8
 800fc76:	af00      	add	r7, sp, #0
 800fc78:	6078      	str	r0, [r7, #4]
    return TouchGFXGeneratedHAL::beginFrame();
 800fc7a:	687b      	ldr	r3, [r7, #4]
 800fc7c:	4618      	mov	r0, r3
 800fc7e:	f001 f8a9 	bl	8010dd4 <_ZN20TouchGFXGeneratedHAL10beginFrameEv>
 800fc82:	4603      	mov	r3, r0
}
 800fc84:	4618      	mov	r0, r3
 800fc86:	3708      	adds	r7, #8
 800fc88:	46bd      	mov	sp, r7
 800fc8a:	bd80      	pop	{r7, pc}

0800fc8c <_ZN11TouchGFXHAL8endFrameEv>:

void TouchGFXHAL::endFrame()
{
 800fc8c:	b580      	push	{r7, lr}
 800fc8e:	b082      	sub	sp, #8
 800fc90:	af00      	add	r7, sp, #0
 800fc92:	6078      	str	r0, [r7, #4]
    TouchGFXGeneratedHAL::endFrame();
 800fc94:	687b      	ldr	r3, [r7, #4]
 800fc96:	4618      	mov	r0, r3
 800fc98:	f001 f8a9 	bl	8010dee <_ZN20TouchGFXGeneratedHAL8endFrameEv>
}
 800fc9c:	bf00      	nop
 800fc9e:	3708      	adds	r7, #8
 800fca0:	46bd      	mov	sp, r7
 800fca2:	bd80      	pop	{r7, pc}

0800fca4 <_ZN11TouchGFXHALD1Ev>:
class TouchGFXHAL : public TouchGFXGeneratedHAL
 800fca4:	b580      	push	{r7, lr}
 800fca6:	b082      	sub	sp, #8
 800fca8:	af00      	add	r7, sp, #0
 800fcaa:	6078      	str	r0, [r7, #4]
 800fcac:	4a05      	ldr	r2, [pc, #20]	; (800fcc4 <_ZN11TouchGFXHALD1Ev+0x20>)
 800fcae:	687b      	ldr	r3, [r7, #4]
 800fcb0:	601a      	str	r2, [r3, #0]
 800fcb2:	687b      	ldr	r3, [r7, #4]
 800fcb4:	4618      	mov	r0, r3
 800fcb6:	f7ff ff37 	bl	800fb28 <_ZN20TouchGFXGeneratedHALD1Ev>
 800fcba:	687b      	ldr	r3, [r7, #4]
 800fcbc:	4618      	mov	r0, r3
 800fcbe:	3708      	adds	r7, #8
 800fcc0:	46bd      	mov	sp, r7
 800fcc2:	bd80      	pop	{r7, pc}
 800fcc4:	0802ef80 	.word	0x0802ef80

0800fcc8 <_ZN11TouchGFXHALD0Ev>:
 800fcc8:	b580      	push	{r7, lr}
 800fcca:	b082      	sub	sp, #8
 800fccc:	af00      	add	r7, sp, #0
 800fcce:	6078      	str	r0, [r7, #4]
 800fcd0:	6878      	ldr	r0, [r7, #4]
 800fcd2:	f7ff ffe7 	bl	800fca4 <_ZN11TouchGFXHALD1Ev>
 800fcd6:	217c      	movs	r1, #124	; 0x7c
 800fcd8:	6878      	ldr	r0, [r7, #4]
 800fcda:	f01a fb3e 	bl	802a35a <_ZdlPvj>
 800fcde:	687b      	ldr	r3, [r7, #4]
 800fce0:	4618      	mov	r0, r3
 800fce2:	3708      	adds	r7, #8
 800fce4:	46bd      	mov	sp, r7
 800fce6:	bd80      	pop	{r7, pc}

0800fce8 <touchgfxDisplayDriverTransmitActive>:
extern void DisplayDriver_TransferCompleteCallback();

static uint8_t isTransmittingData = 0;

uint32_t touchgfxDisplayDriverTransmitActive(void)
{
 800fce8:	b480      	push	{r7}
 800fcea:	af00      	add	r7, sp, #0
	return isTransmittingData;
 800fcec:	4b03      	ldr	r3, [pc, #12]	; (800fcfc <touchgfxDisplayDriverTransmitActive+0x14>)
 800fcee:	781b      	ldrb	r3, [r3, #0]
}
 800fcf0:	4618      	mov	r0, r3
 800fcf2:	46bd      	mov	sp, r7
 800fcf4:	f85d 7b04 	ldr.w	r7, [sp], #4
 800fcf8:	4770      	bx	lr
 800fcfa:	bf00      	nop
 800fcfc:	20000740 	.word	0x20000740

0800fd00 <touchgfxDisplayDriverTransmitBlock>:

void touchgfxDisplayDriverTransmitBlock(uint8_t* pixels, uint16_t x, uint16_t y, uint16_t w, uint16_t h)
{
 800fd00:	b590      	push	{r4, r7, lr}
 800fd02:	b085      	sub	sp, #20
 800fd04:	af00      	add	r7, sp, #0
 800fd06:	60f8      	str	r0, [r7, #12]
 800fd08:	4608      	mov	r0, r1
 800fd0a:	4611      	mov	r1, r2
 800fd0c:	461a      	mov	r2, r3
 800fd0e:	4603      	mov	r3, r0
 800fd10:	817b      	strh	r3, [r7, #10]
 800fd12:	460b      	mov	r3, r1
 800fd14:	813b      	strh	r3, [r7, #8]
 800fd16:	4613      	mov	r3, r2
 800fd18:	80fb      	strh	r3, [r7, #6]
	isTransmittingData = 1;
 800fd1a:	4b0f      	ldr	r3, [pc, #60]	; (800fd58 <touchgfxDisplayDriverTransmitBlock+0x58>)
 800fd1c:	2201      	movs	r2, #1
 800fd1e:	701a      	strb	r2, [r3, #0]
	ST7796_SetWindow(x, y, x+w-1, y+h-1);
 800fd20:	897a      	ldrh	r2, [r7, #10]
 800fd22:	88fb      	ldrh	r3, [r7, #6]
 800fd24:	4413      	add	r3, r2
 800fd26:	b29b      	uxth	r3, r3
 800fd28:	3b01      	subs	r3, #1
 800fd2a:	b29c      	uxth	r4, r3
 800fd2c:	893a      	ldrh	r2, [r7, #8]
 800fd2e:	8c3b      	ldrh	r3, [r7, #32]
 800fd30:	4413      	add	r3, r2
 800fd32:	b29b      	uxth	r3, r3
 800fd34:	3b01      	subs	r3, #1
 800fd36:	b29b      	uxth	r3, r3
 800fd38:	8939      	ldrh	r1, [r7, #8]
 800fd3a:	8978      	ldrh	r0, [r7, #10]
 800fd3c:	4622      	mov	r2, r4
 800fd3e:	f7f2 f9db 	bl	80020f8 <ST7796_SetWindow>
	ST7796_DrawBitmap(w, h, pixels);
 800fd42:	8c39      	ldrh	r1, [r7, #32]
 800fd44:	88fb      	ldrh	r3, [r7, #6]
 800fd46:	68fa      	ldr	r2, [r7, #12]
 800fd48:	4618      	mov	r0, r3
 800fd4a:	f7f2 fa4d 	bl	80021e8 <ST7796_DrawBitmap>
}
 800fd4e:	bf00      	nop
 800fd50:	3714      	adds	r7, #20
 800fd52:	46bd      	mov	sp, r7
 800fd54:	bd90      	pop	{r4, r7, pc}
 800fd56:	bf00      	nop
 800fd58:	20000740 	.word	0x20000740

0800fd5c <HAL_SPI_TxCpltCallback>:

void HAL_SPI_TxCpltCallback(SPI_HandleTypeDef *hspi)
{
 800fd5c:	b580      	push	{r7, lr}
 800fd5e:	b082      	sub	sp, #8
 800fd60:	af00      	add	r7, sp, #0
 800fd62:	6078      	str	r0, [r7, #4]
	if (hspi->Instance == SPI1) {
 800fd64:	687b      	ldr	r3, [r7, #4]
 800fd66:	681b      	ldr	r3, [r3, #0]
 800fd68:	4a06      	ldr	r2, [pc, #24]	; (800fd84 <HAL_SPI_TxCpltCallback+0x28>)
 800fd6a:	4293      	cmp	r3, r2
 800fd6c:	d106      	bne.n	800fd7c <HAL_SPI_TxCpltCallback+0x20>
		ST7796_EndOfDrawBitmap();
 800fd6e:	f7f2 fa63 	bl	8002238 <ST7796_EndOfDrawBitmap>
		isTransmittingData = 0;
 800fd72:	4b05      	ldr	r3, [pc, #20]	; (800fd88 <HAL_SPI_TxCpltCallback+0x2c>)
 800fd74:	2200      	movs	r2, #0
 800fd76:	701a      	strb	r2, [r3, #0]
		DisplayDriver_TransferCompleteCallback();
 800fd78:	f001 f906 	bl	8010f88 <DisplayDriver_TransferCompleteCallback>
	}
}
 800fd7c:	bf00      	nop
 800fd7e:	3708      	adds	r7, #8
 800fd80:	46bd      	mov	sp, r7
 800fd82:	bd80      	pop	{r7, pc}
 800fd84:	40013000 	.word	0x40013000
 800fd88:	20000740 	.word	0x20000740

0800fd8c <_ZN8touchgfx10OSWrappers10initializeEv>:

/*
 * Initialize frame buffer semaphore and queue/mutex for VSYNC signal.
 */
void OSWrappers::initialize()
{
 800fd8c:	b480      	push	{r7}
 800fd8e:	af00      	add	r7, sp, #0
    fb_sem = 0;
 800fd90:	4b05      	ldr	r3, [pc, #20]	; (800fda8 <_ZN8touchgfx10OSWrappers10initializeEv+0x1c>)
 800fd92:	2200      	movs	r2, #0
 800fd94:	601a      	str	r2, [r3, #0]
    vsync_sem = 0;
 800fd96:	4b05      	ldr	r3, [pc, #20]	; (800fdac <_ZN8touchgfx10OSWrappers10initializeEv+0x20>)
 800fd98:	2200      	movs	r2, #0
 800fd9a:	601a      	str	r2, [r3, #0]
}
 800fd9c:	bf00      	nop
 800fd9e:	46bd      	mov	sp, r7
 800fda0:	f85d 7b04 	ldr.w	r7, [sp], #4
 800fda4:	4770      	bx	lr
 800fda6:	bf00      	nop
 800fda8:	20000744 	.word	0x20000744
 800fdac:	20000748 	.word	0x20000748

0800fdb0 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>:

/*
 * Take the frame buffer semaphore. Blocks until semaphore is available.
 */
void OSWrappers::takeFrameBufferSemaphore()
{
 800fdb0:	b480      	push	{r7}
 800fdb2:	af00      	add	r7, sp, #0
    while (fb_sem);
 800fdb4:	bf00      	nop
 800fdb6:	4b08      	ldr	r3, [pc, #32]	; (800fdd8 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0x28>)
 800fdb8:	681b      	ldr	r3, [r3, #0]
 800fdba:	2b00      	cmp	r3, #0
 800fdbc:	bf14      	ite	ne
 800fdbe:	2301      	movne	r3, #1
 800fdc0:	2300      	moveq	r3, #0
 800fdc2:	b2db      	uxtb	r3, r3
 800fdc4:	2b00      	cmp	r3, #0
 800fdc6:	d1f6      	bne.n	800fdb6 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0x6>
    fb_sem = 1;
 800fdc8:	4b03      	ldr	r3, [pc, #12]	; (800fdd8 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0x28>)
 800fdca:	2201      	movs	r2, #1
 800fdcc:	601a      	str	r2, [r3, #0]
}
 800fdce:	bf00      	nop
 800fdd0:	46bd      	mov	sp, r7
 800fdd2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800fdd6:	4770      	bx	lr
 800fdd8:	20000744 	.word	0x20000744

0800fddc <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>:

/*
 * Release the frame buffer semaphore.
 */
void OSWrappers::giveFrameBufferSemaphore()
{
 800fddc:	b480      	push	{r7}
 800fdde:	af00      	add	r7, sp, #0
    fb_sem = 0;
 800fde0:	4b03      	ldr	r3, [pc, #12]	; (800fdf0 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv+0x14>)
 800fde2:	2200      	movs	r2, #0
 800fde4:	601a      	str	r2, [r3, #0]
}
 800fde6:	bf00      	nop
 800fde8:	46bd      	mov	sp, r7
 800fdea:	f85d 7b04 	ldr.w	r7, [sp], #4
 800fdee:	4770      	bx	lr
 800fdf0:	20000744 	.word	0x20000744

0800fdf4 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>:
 *
 * Note must return immediately! This function does not care who has the taken the semaphore,
 * it only serves to make sure that the semaphore is taken by someone.
 */
void OSWrappers::tryTakeFrameBufferSemaphore()
{
 800fdf4:	b480      	push	{r7}
 800fdf6:	af00      	add	r7, sp, #0
    fb_sem = 1;
 800fdf8:	4b03      	ldr	r3, [pc, #12]	; (800fe08 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv+0x14>)
 800fdfa:	2201      	movs	r2, #1
 800fdfc:	601a      	str	r2, [r3, #0]
}
 800fdfe:	bf00      	nop
 800fe00:	46bd      	mov	sp, r7
 800fe02:	f85d 7b04 	ldr.w	r7, [sp], #4
 800fe06:	4770      	bx	lr
 800fe08:	20000744 	.word	0x20000744

0800fe0c <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>:
 *
 * Release the frame buffer semaphore in a way that is safe in interrupt context.
 * Called from ISR.
 */
void OSWrappers::giveFrameBufferSemaphoreFromISR()
{
 800fe0c:	b480      	push	{r7}
 800fe0e:	af00      	add	r7, sp, #0
    fb_sem = 0;
 800fe10:	4b03      	ldr	r3, [pc, #12]	; (800fe20 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv+0x14>)
 800fe12:	2200      	movs	r2, #0
 800fe14:	601a      	str	r2, [r3, #0]
}
 800fe16:	bf00      	nop
 800fe18:	46bd      	mov	sp, r7
 800fe1a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800fe1e:	4770      	bx	lr
 800fe20:	20000744 	.word	0x20000744

0800fe24 <_ZN8touchgfx10OSWrappers11signalVSyncEv>:
 *
 * Note This function is called from an ISR, and should (depending on OS) trigger a
 * scheduling.
 */
void OSWrappers::signalVSync()
{
 800fe24:	b480      	push	{r7}
 800fe26:	af00      	add	r7, sp, #0
    vsync_sem = 1;
 800fe28:	4b03      	ldr	r3, [pc, #12]	; (800fe38 <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x14>)
 800fe2a:	2201      	movs	r2, #1
 800fe2c:	601a      	str	r2, [r3, #0]
}
 800fe2e:	bf00      	nop
 800fe30:	46bd      	mov	sp, r7
 800fe32:	f85d 7b04 	ldr.w	r7, [sp], #4
 800fe36:	4770      	bx	lr
 800fe38:	20000748 	.word	0x20000748

0800fe3c <_ZN8touchgfx10OSWrappers19signalRenderingDoneEv>:
/*
  * Signal that the rendering of the frame has completed. Used by
  * some systems to avoid using any previous vsync.
  */
void OSWrappers::signalRenderingDone()
{
 800fe3c:	b480      	push	{r7}
 800fe3e:	af00      	add	r7, sp, #0
    vsync_sem = 0;
 800fe40:	4b03      	ldr	r3, [pc, #12]	; (800fe50 <_ZN8touchgfx10OSWrappers19signalRenderingDoneEv+0x14>)
 800fe42:	2200      	movs	r2, #0
 800fe44:	601a      	str	r2, [r3, #0]
}
 800fe46:	bf00      	nop
 800fe48:	46bd      	mov	sp, r7
 800fe4a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800fe4e:	4770      	bx	lr
 800fe50:	20000748 	.word	0x20000748

0800fe54 <_ZN8touchgfx10OSWrappers16isVSyncAvailableEv>:
 * @note signalRenderingDone is typically used together with this function.
 *
 * @return True if VSync occurred.
 */
bool OSWrappers::isVSyncAvailable()
{
 800fe54:	b480      	push	{r7}
 800fe56:	af00      	add	r7, sp, #0
    return vsync_sem;
 800fe58:	4b05      	ldr	r3, [pc, #20]	; (800fe70 <_ZN8touchgfx10OSWrappers16isVSyncAvailableEv+0x1c>)
 800fe5a:	681b      	ldr	r3, [r3, #0]
 800fe5c:	2b00      	cmp	r3, #0
 800fe5e:	bf14      	ite	ne
 800fe60:	2301      	movne	r3, #1
 800fe62:	2300      	moveq	r3, #0
 800fe64:	b2db      	uxtb	r3, r3
}
 800fe66:	4618      	mov	r0, r3
 800fe68:	46bd      	mov	sp, r7
 800fe6a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800fe6e:	4770      	bx	lr
 800fe70:	20000748 	.word	0x20000748

0800fe74 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>:
/*
 * This function check if a VSYNC has occured.
 * If VSYNC has occured, signal TouchGFX to start a rendering
 */
void OSWrappers::waitForVSync()
{
 800fe74:	b580      	push	{r7, lr}
 800fe76:	af00      	add	r7, sp, #0
    if (vsync_sem)
 800fe78:	4b0a      	ldr	r3, [pc, #40]	; (800fea4 <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x30>)
 800fe7a:	681b      	ldr	r3, [r3, #0]
 800fe7c:	2b00      	cmp	r3, #0
 800fe7e:	bf14      	ite	ne
 800fe80:	2301      	movne	r3, #1
 800fe82:	2300      	moveq	r3, #0
 800fe84:	b2db      	uxtb	r3, r3
 800fe86:	2b00      	cmp	r3, #0
 800fe88:	d00a      	beq.n	800fea0 <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x2c>
    {
        vsync_sem = 0;
 800fe8a:	4b06      	ldr	r3, [pc, #24]	; (800fea4 <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x30>)
 800fe8c:	2200      	movs	r2, #0
 800fe8e:	601a      	str	r2, [r3, #0]
        HAL::getInstance()->backPorchExited();
 800fe90:	f7fb f830 	bl	800aef4 <_ZN8touchgfx3HAL11getInstanceEv>
 800fe94:	4603      	mov	r3, r0
 800fe96:	681a      	ldr	r2, [r3, #0]
 800fe98:	3270      	adds	r2, #112	; 0x70
 800fe9a:	6812      	ldr	r2, [r2, #0]
 800fe9c:	4618      	mov	r0, r3
 800fe9e:	4790      	blx	r2
    }
}
 800fea0:	bf00      	nop
 800fea2:	bd80      	pop	{r7, pc}
 800fea4:	20000748 	.word	0x20000748

0800fea8 <_ZN8touchgfx9DMA_QueueD1Ev>:
     * @param  op The blitop to add.
     */
    virtual void pushCopyOf(const BlitOp& op) = 0;

    /** Finalizes an instance of the DMA_Queue class. */
    virtual ~DMA_Queue()
 800fea8:	b480      	push	{r7}
 800feaa:	b083      	sub	sp, #12
 800feac:	af00      	add	r7, sp, #0
 800feae:	6078      	str	r0, [r7, #4]
    {
 800feb0:	4a04      	ldr	r2, [pc, #16]	; (800fec4 <_ZN8touchgfx9DMA_QueueD1Ev+0x1c>)
 800feb2:	687b      	ldr	r3, [r7, #4]
 800feb4:	601a      	str	r2, [r3, #0]
    }
 800feb6:	687b      	ldr	r3, [r7, #4]
 800feb8:	4618      	mov	r0, r3
 800feba:	370c      	adds	r7, #12
 800febc:	46bd      	mov	sp, r7
 800febe:	f85d 7b04 	ldr.w	r7, [sp], #4
 800fec2:	4770      	bx	lr
 800fec4:	0802f0a8 	.word	0x0802f0a8

0800fec8 <_ZN8touchgfx9DMA_QueueD0Ev>:
    virtual ~DMA_Queue()
 800fec8:	b580      	push	{r7, lr}
 800feca:	b082      	sub	sp, #8
 800fecc:	af00      	add	r7, sp, #0
 800fece:	6078      	str	r0, [r7, #4]
    }
 800fed0:	6878      	ldr	r0, [r7, #4]
 800fed2:	f7ff ffe9 	bl	800fea8 <_ZN8touchgfx9DMA_QueueD1Ev>
 800fed6:	2104      	movs	r1, #4
 800fed8:	6878      	ldr	r0, [r7, #4]
 800feda:	f01a fa3e 	bl	802a35a <_ZdlPvj>
 800fede:	687b      	ldr	r3, [r7, #4]
 800fee0:	4618      	mov	r0, r3
 800fee2:	3708      	adds	r7, #8
 800fee4:	46bd      	mov	sp, r7
 800fee6:	bd80      	pop	{r7, pc}

0800fee8 <_ZN8touchgfx13DMA_Interface10initializeEv>:
    {
        waitForFrameBufferSemaphore();
    }

    /** Perform initialization. Does nothing in this base class. */
    virtual void initialize()
 800fee8:	b480      	push	{r7}
 800feea:	b083      	sub	sp, #12
 800feec:	af00      	add	r7, sp, #0
 800feee:	6078      	str	r0, [r7, #4]
    {
    }
 800fef0:	bf00      	nop
 800fef2:	370c      	adds	r7, #12
 800fef4:	46bd      	mov	sp, r7
 800fef6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800fefa:	4770      	bx	lr

0800fefc <_ZN8touchgfx13DMA_Interface10getDMATypeEv>:
     * Function for obtaining the DMA type of the concrete DMA_Interface implementation. As
     * default, will return DMA_TYPE_GENERIC type value.
     *
     * @return a DMAType value of the concrete DMA_Interface implementation.
     */
    virtual DMAType getDMAType()
 800fefc:	b480      	push	{r7}
 800fefe:	b083      	sub	sp, #12
 800ff00:	af00      	add	r7, sp, #0
 800ff02:	6078      	str	r0, [r7, #4]
    {
        return DMA_TYPE_GENERIC;
 800ff04:	2300      	movs	r3, #0
    }
 800ff06:	4618      	mov	r0, r3
 800ff08:	370c      	adds	r7, #12
 800ff0a:	46bd      	mov	sp, r7
 800ff0c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ff10:	4770      	bx	lr
	...

0800ff14 <_ZN8touchgfx13DMA_InterfaceD1Ev>:

    /** Finalizes an instance of the DMA_Interface class. */
    virtual ~DMA_Interface()
 800ff14:	b480      	push	{r7}
 800ff16:	b083      	sub	sp, #12
 800ff18:	af00      	add	r7, sp, #0
 800ff1a:	6078      	str	r0, [r7, #4]
    {
 800ff1c:	4a04      	ldr	r2, [pc, #16]	; (800ff30 <_ZN8touchgfx13DMA_InterfaceD1Ev+0x1c>)
 800ff1e:	687b      	ldr	r3, [r7, #4]
 800ff20:	601a      	str	r2, [r3, #0]
    }
 800ff22:	687b      	ldr	r3, [r7, #4]
 800ff24:	4618      	mov	r0, r3
 800ff26:	370c      	adds	r7, #12
 800ff28:	46bd      	mov	sp, r7
 800ff2a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ff2e:	4770      	bx	lr
 800ff30:	0802f748 	.word	0x0802f748

0800ff34 <_ZN8touchgfx13DMA_InterfaceD0Ev>:
    virtual ~DMA_Interface()
 800ff34:	b580      	push	{r7, lr}
 800ff36:	b082      	sub	sp, #8
 800ff38:	af00      	add	r7, sp, #0
 800ff3a:	6078      	str	r0, [r7, #4]
    }
 800ff3c:	6878      	ldr	r0, [r7, #4]
 800ff3e:	f7ff ffe9 	bl	800ff14 <_ZN8touchgfx13DMA_InterfaceD1Ev>
 800ff42:	210c      	movs	r1, #12
 800ff44:	6878      	ldr	r0, [r7, #4]
 800ff46:	f01a fa08 	bl	802a35a <_ZdlPvj>
 800ff4a:	687b      	ldr	r3, [r7, #4]
 800ff4c:	4618      	mov	r0, r3
 800ff4e:	3708      	adds	r7, #8
 800ff50:	46bd      	mov	sp, r7
 800ff52:	bd80      	pop	{r7, pc}

0800ff54 <_ZN8touchgfx13DMA_InterfaceC1ERNS_9DMA_QueueE>:
    /**
     * Constructs a DMA Interface object.
     *
     * @param [in] dmaQueue Reference to the queue of DMA operations.
     */
    DMA_Interface(DMA_Queue& dmaQueue)
 800ff54:	b480      	push	{r7}
 800ff56:	b083      	sub	sp, #12
 800ff58:	af00      	add	r7, sp, #0
 800ff5a:	6078      	str	r0, [r7, #4]
 800ff5c:	6039      	str	r1, [r7, #0]
        : queue(dmaQueue), isRunning(false), isAllowed(false)
 800ff5e:	4a09      	ldr	r2, [pc, #36]	; (800ff84 <_ZN8touchgfx13DMA_InterfaceC1ERNS_9DMA_QueueE+0x30>)
 800ff60:	687b      	ldr	r3, [r7, #4]
 800ff62:	601a      	str	r2, [r3, #0]
 800ff64:	687b      	ldr	r3, [r7, #4]
 800ff66:	683a      	ldr	r2, [r7, #0]
 800ff68:	605a      	str	r2, [r3, #4]
 800ff6a:	687b      	ldr	r3, [r7, #4]
 800ff6c:	2200      	movs	r2, #0
 800ff6e:	721a      	strb	r2, [r3, #8]
 800ff70:	687b      	ldr	r3, [r7, #4]
 800ff72:	2200      	movs	r2, #0
 800ff74:	725a      	strb	r2, [r3, #9]
    {
    }
 800ff76:	687b      	ldr	r3, [r7, #4]
 800ff78:	4618      	mov	r0, r3
 800ff7a:	370c      	adds	r7, #12
 800ff7c:	46bd      	mov	sp, r7
 800ff7e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ff82:	4770      	bx	lr
 800ff84:	0802f748 	.word	0x0802f748

0800ff88 <_ZN8STM32DMA18signalDMAInterruptEv>:
    /**
     * @fn virtual void STM32DMA::signalDMAInterrupt();
     *
     * @brief Does nothing.
     */
    virtual void signalDMAInterrupt()
 800ff88:	b480      	push	{r7}
 800ff8a:	b083      	sub	sp, #12
 800ff8c:	af00      	add	r7, sp, #0
 800ff8e:	6078      	str	r0, [r7, #4]
    {
    }
 800ff90:	bf00      	nop
 800ff92:	370c      	adds	r7, #12
 800ff94:	46bd      	mov	sp, r7
 800ff96:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ff9a:	4770      	bx	lr

0800ff9c <_ZN8STM32DMA5flushEv>:
     * @fn virtual void STM32DMA::flush();
     *
     * @brief Block until all DMA transfers are complete. Since this particular DMA does not do
     * anything, return immediately.
     */
    virtual void flush()
 800ff9c:	b480      	push	{r7}
 800ff9e:	b083      	sub	sp, #12
 800ffa0:	af00      	add	r7, sp, #0
 800ffa2:	6078      	str	r0, [r7, #4]
    {
    }
 800ffa4:	bf00      	nop
 800ffa6:	370c      	adds	r7, #12
 800ffa8:	46bd      	mov	sp, r7
 800ffaa:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ffae:	4770      	bx	lr

0800ffb0 <_ZN8touchgfx6BlitOpC1Ev>:

/**
 * BlitOp instances carry the required information for performing operations on the LCD
 * (framebuffer) using DMA.
 */
struct BlitOp
 800ffb0:	b580      	push	{r7, lr}
 800ffb2:	b082      	sub	sp, #8
 800ffb4:	af00      	add	r7, sp, #0
 800ffb6:	6078      	str	r0, [r7, #4]
 800ffb8:	687b      	ldr	r3, [r7, #4]
 800ffba:	330c      	adds	r3, #12
 800ffbc:	4618      	mov	r0, r3
 800ffbe:	f7fb fc23 	bl	800b808 <_ZN8touchgfx9colortypeC1Ev>
 800ffc2:	687b      	ldr	r3, [r7, #4]
 800ffc4:	4618      	mov	r0, r3
 800ffc6:	3708      	adds	r7, #8
 800ffc8:	46bd      	mov	sp, r7
 800ffca:	bd80      	pop	{r7, pc}

0800ffcc <_ZN8STM32DMAC1Ev>:
  */

#include <STM32DMA.hpp>
#include <assert.h>

STM32DMA::STM32DMA()
 800ffcc:	b580      	push	{r7, lr}
 800ffce:	b082      	sub	sp, #8
 800ffd0:	af00      	add	r7, sp, #0
 800ffd2:	6078      	str	r0, [r7, #4]
    : DMA_Interface(q), q(&b, 1)
 800ffd4:	687a      	ldr	r2, [r7, #4]
 800ffd6:	687b      	ldr	r3, [r7, #4]
 800ffd8:	330c      	adds	r3, #12
 800ffda:	4619      	mov	r1, r3
 800ffdc:	4610      	mov	r0, r2
 800ffde:	f7ff ffb9 	bl	800ff54 <_ZN8touchgfx13DMA_InterfaceC1ERNS_9DMA_QueueE>
 800ffe2:	4a0b      	ldr	r2, [pc, #44]	; (8010010 <_ZN8STM32DMAC1Ev+0x44>)
 800ffe4:	687b      	ldr	r3, [r7, #4]
 800ffe6:	601a      	str	r2, [r3, #0]
 800ffe8:	687b      	ldr	r3, [r7, #4]
 800ffea:	f103 000c 	add.w	r0, r3, #12
 800ffee:	687b      	ldr	r3, [r7, #4]
 800fff0:	3320      	adds	r3, #32
 800fff2:	2201      	movs	r2, #1
 800fff4:	4619      	mov	r1, r3
 800fff6:	f003 fc53 	bl	80138a0 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>
 800fffa:	687b      	ldr	r3, [r7, #4]
 800fffc:	3320      	adds	r3, #32
 800fffe:	4618      	mov	r0, r3
 8010000:	f7ff ffd6 	bl	800ffb0 <_ZN8touchgfx6BlitOpC1Ev>
{
}
 8010004:	687b      	ldr	r3, [r7, #4]
 8010006:	4618      	mov	r0, r3
 8010008:	3708      	adds	r7, #8
 801000a:	46bd      	mov	sp, r7
 801000c:	bd80      	pop	{r7, pc}
 801000e:	bf00      	nop
 8010010:	0802f058 	.word	0x0802f058

08010014 <_ZN8STM32DMA11getBlitCapsEv>:

touchgfx::BlitOperations STM32DMA::getBlitCaps()
{
 8010014:	b480      	push	{r7}
 8010016:	b083      	sub	sp, #12
 8010018:	af00      	add	r7, sp, #0
 801001a:	6078      	str	r0, [r7, #4]
    return static_cast<touchgfx::BlitOperations>(0);
 801001c:	2300      	movs	r3, #0
}
 801001e:	4618      	mov	r0, r3
 8010020:	370c      	adds	r7, #12
 8010022:	46bd      	mov	sp, r7
 8010024:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010028:	4770      	bx	lr
	...

0801002c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE>:

void STM32DMA::setupDataCopy(const touchgfx::BlitOp& blitOp)
{
 801002c:	b580      	push	{r7, lr}
 801002e:	b082      	sub	sp, #8
 8010030:	af00      	add	r7, sp, #0
 8010032:	6078      	str	r0, [r7, #4]
 8010034:	6039      	str	r1, [r7, #0]
    assert(0 && "DMA operation not supported");
 8010036:	4b03      	ldr	r3, [pc, #12]	; (8010044 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x18>)
 8010038:	4a03      	ldr	r2, [pc, #12]	; (8010048 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1c>)
 801003a:	2122      	movs	r1, #34	; 0x22
 801003c:	4803      	ldr	r0, [pc, #12]	; (801004c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x20>)
 801003e:	f01a f9bb 	bl	802a3b8 <__assert_func>
 8010042:	bf00      	nop
 8010044:	0802dc18 	.word	0x0802dc18
 8010048:	0802dc3c 	.word	0x0802dc3c
 801004c:	0802dc7c 	.word	0x0802dc7c

08010050 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE>:
}

void STM32DMA::setupDataFill(const touchgfx::BlitOp& blitOp)
{
 8010050:	b580      	push	{r7, lr}
 8010052:	b082      	sub	sp, #8
 8010054:	af00      	add	r7, sp, #0
 8010056:	6078      	str	r0, [r7, #4]
 8010058:	6039      	str	r1, [r7, #0]
    assert(0 && "DMA operation not supported");
 801005a:	4b03      	ldr	r3, [pc, #12]	; (8010068 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x18>)
 801005c:	4a03      	ldr	r2, [pc, #12]	; (801006c <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x1c>)
 801005e:	2127      	movs	r1, #39	; 0x27
 8010060:	4803      	ldr	r0, [pc, #12]	; (8010070 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x20>)
 8010062:	f01a f9a9 	bl	802a3b8 <__assert_func>
 8010066:	bf00      	nop
 8010068:	0802dc18 	.word	0x0802dc18
 801006c:	0802dca8 	.word	0x0802dca8
 8010070:	0802dc7c 	.word	0x0802dc7c

08010074 <_ZN8STM32DMAD1Ev>:
class STM32DMA : public touchgfx::DMA_Interface
 8010074:	b580      	push	{r7, lr}
 8010076:	b082      	sub	sp, #8
 8010078:	af00      	add	r7, sp, #0
 801007a:	6078      	str	r0, [r7, #4]
 801007c:	4a08      	ldr	r2, [pc, #32]	; (80100a0 <_ZN8STM32DMAD1Ev+0x2c>)
 801007e:	687b      	ldr	r3, [r7, #4]
 8010080:	601a      	str	r2, [r3, #0]
 8010082:	687b      	ldr	r3, [r7, #4]
 8010084:	330c      	adds	r3, #12
 8010086:	4618      	mov	r0, r3
 8010088:	f000 f81c 	bl	80100c4 <_ZN8touchgfx17LockFreeDMA_QueueD1Ev>
 801008c:	687b      	ldr	r3, [r7, #4]
 801008e:	4618      	mov	r0, r3
 8010090:	f7ff ff40 	bl	800ff14 <_ZN8touchgfx13DMA_InterfaceD1Ev>
 8010094:	687b      	ldr	r3, [r7, #4]
 8010096:	4618      	mov	r0, r3
 8010098:	3708      	adds	r7, #8
 801009a:	46bd      	mov	sp, r7
 801009c:	bd80      	pop	{r7, pc}
 801009e:	bf00      	nop
 80100a0:	0802f058 	.word	0x0802f058

080100a4 <_ZN8STM32DMAD0Ev>:
 80100a4:	b580      	push	{r7, lr}
 80100a6:	b082      	sub	sp, #8
 80100a8:	af00      	add	r7, sp, #0
 80100aa:	6078      	str	r0, [r7, #4]
 80100ac:	6878      	ldr	r0, [r7, #4]
 80100ae:	f7ff ffe1 	bl	8010074 <_ZN8STM32DMAD1Ev>
 80100b2:	2144      	movs	r1, #68	; 0x44
 80100b4:	6878      	ldr	r0, [r7, #4]
 80100b6:	f01a f950 	bl	802a35a <_ZdlPvj>
 80100ba:	687b      	ldr	r3, [r7, #4]
 80100bc:	4618      	mov	r0, r3
 80100be:	3708      	adds	r7, #8
 80100c0:	46bd      	mov	sp, r7
 80100c2:	bd80      	pop	{r7, pc}

080100c4 <_ZN8touchgfx17LockFreeDMA_QueueD1Ev>:
class LockFreeDMA_Queue : public DMA_Queue
 80100c4:	b580      	push	{r7, lr}
 80100c6:	b082      	sub	sp, #8
 80100c8:	af00      	add	r7, sp, #0
 80100ca:	6078      	str	r0, [r7, #4]
 80100cc:	4a05      	ldr	r2, [pc, #20]	; (80100e4 <_ZN8touchgfx17LockFreeDMA_QueueD1Ev+0x20>)
 80100ce:	687b      	ldr	r3, [r7, #4]
 80100d0:	601a      	str	r2, [r3, #0]
 80100d2:	687b      	ldr	r3, [r7, #4]
 80100d4:	4618      	mov	r0, r3
 80100d6:	f7ff fee7 	bl	800fea8 <_ZN8touchgfx9DMA_QueueD1Ev>
 80100da:	687b      	ldr	r3, [r7, #4]
 80100dc:	4618      	mov	r0, r3
 80100de:	3708      	adds	r7, #8
 80100e0:	46bd      	mov	sp, r7
 80100e2:	bd80      	pop	{r7, pc}
 80100e4:	0802f798 	.word	0x0802f798

080100e8 <_ZN8touchgfx17LockFreeDMA_QueueD0Ev>:
 80100e8:	b580      	push	{r7, lr}
 80100ea:	b082      	sub	sp, #8
 80100ec:	af00      	add	r7, sp, #0
 80100ee:	6078      	str	r0, [r7, #4]
 80100f0:	6878      	ldr	r0, [r7, #4]
 80100f2:	f7ff ffe7 	bl	80100c4 <_ZN8touchgfx17LockFreeDMA_QueueD1Ev>
 80100f6:	2114      	movs	r1, #20
 80100f8:	6878      	ldr	r0, [r7, #4]
 80100fa:	f01a f92e 	bl	802a35a <_ZdlPvj>
 80100fe:	687b      	ldr	r3, [r7, #4]
 8010100:	4618      	mov	r0, r3
 8010102:	3708      	adds	r7, #8
 8010104:	46bd      	mov	sp, r7
 8010106:	bd80      	pop	{r7, pc}

08010108 <_ZN8touchgfx9TypedText13registerTextsEPKNS_5TextsE>:
     * Registers an array of texts. This function is called automatically from
     * touchgfx_generic_init(). Should not be called under normal circumstances.
     *
     * @param  t The array of texts.
     */
    static void registerTexts(const Texts* t)
 8010108:	b480      	push	{r7}
 801010a:	b083      	sub	sp, #12
 801010c:	af00      	add	r7, sp, #0
 801010e:	6078      	str	r0, [r7, #4]
    {
        texts = t;
 8010110:	4a04      	ldr	r2, [pc, #16]	; (8010124 <_ZN8touchgfx9TypedText13registerTextsEPKNS_5TextsE+0x1c>)
 8010112:	687b      	ldr	r3, [r7, #4]
 8010114:	6013      	str	r3, [r2, #0]
    }
 8010116:	bf00      	nop
 8010118:	370c      	adds	r7, #12
 801011a:	46bd      	mov	sp, r7
 801011c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010120:	4770      	bx	lr
 8010122:	bf00      	nop
 8010124:	20006c98 	.word	0x20006c98

08010128 <_ZN8touchgfx7MVPHeapC1ERNS_17AbstractPartitionES2_S2_RNS_14MVPApplicationE>:
     * @param [in] scr  A memory partition containing enough memory to hold the largest view.
     * @param [in] tra  A memory partition containing enough memory to hold the largest
     *                  transition.
     * @param [in] app  A reference to the MVPApplication instance.
     */
    MVPHeap(AbstractPartition& pres,
 8010128:	b480      	push	{r7}
 801012a:	b085      	sub	sp, #20
 801012c:	af00      	add	r7, sp, #0
 801012e:	60f8      	str	r0, [r7, #12]
 8010130:	60b9      	str	r1, [r7, #8]
 8010132:	607a      	str	r2, [r7, #4]
 8010134:	603b      	str	r3, [r7, #0]
            AbstractPartition& tra,
            MVPApplication& app)
        : presenterStorage(pres),
          screenStorage(scr),
          transitionStorage(tra),
          frontendApplication(app)
 8010136:	4a0b      	ldr	r2, [pc, #44]	; (8010164 <_ZN8touchgfx7MVPHeapC1ERNS_17AbstractPartitionES2_S2_RNS_14MVPApplicationE+0x3c>)
 8010138:	68fb      	ldr	r3, [r7, #12]
 801013a:	601a      	str	r2, [r3, #0]
        : presenterStorage(pres),
 801013c:	68fb      	ldr	r3, [r7, #12]
 801013e:	68ba      	ldr	r2, [r7, #8]
 8010140:	605a      	str	r2, [r3, #4]
          screenStorage(scr),
 8010142:	68fb      	ldr	r3, [r7, #12]
 8010144:	687a      	ldr	r2, [r7, #4]
 8010146:	609a      	str	r2, [r3, #8]
          transitionStorage(tra),
 8010148:	68fb      	ldr	r3, [r7, #12]
 801014a:	683a      	ldr	r2, [r7, #0]
 801014c:	60da      	str	r2, [r3, #12]
          frontendApplication(app)
 801014e:	68fb      	ldr	r3, [r7, #12]
 8010150:	69ba      	ldr	r2, [r7, #24]
 8010152:	611a      	str	r2, [r3, #16]
    {
    }
 8010154:	68fb      	ldr	r3, [r7, #12]
 8010156:	4618      	mov	r0, r3
 8010158:	3714      	adds	r7, #20
 801015a:	46bd      	mov	sp, r7
 801015c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010160:	4770      	bx	lr
 8010162:	bf00      	nop
 8010164:	0802f190 	.word	0x0802f190

08010168 <_ZN8touchgfx7MVPHeapD1Ev>:

    /** Finalizes an instance of the MVPHeap class. */
    virtual ~MVPHeap()
 8010168:	b480      	push	{r7}
 801016a:	b083      	sub	sp, #12
 801016c:	af00      	add	r7, sp, #0
 801016e:	6078      	str	r0, [r7, #4]
    {
 8010170:	4a04      	ldr	r2, [pc, #16]	; (8010184 <_ZN8touchgfx7MVPHeapD1Ev+0x1c>)
 8010172:	687b      	ldr	r3, [r7, #4]
 8010174:	601a      	str	r2, [r3, #0]
    }
 8010176:	687b      	ldr	r3, [r7, #4]
 8010178:	4618      	mov	r0, r3
 801017a:	370c      	adds	r7, #12
 801017c:	46bd      	mov	sp, r7
 801017e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010182:	4770      	bx	lr
 8010184:	0802f190 	.word	0x0802f190

08010188 <_ZN8touchgfx7MVPHeapD0Ev>:
    virtual ~MVPHeap()
 8010188:	b580      	push	{r7, lr}
 801018a:	b082      	sub	sp, #8
 801018c:	af00      	add	r7, sp, #0
 801018e:	6078      	str	r0, [r7, #4]
    }
 8010190:	6878      	ldr	r0, [r7, #4]
 8010192:	f7ff ffe9 	bl	8010168 <_ZN8touchgfx7MVPHeapD1Ev>
 8010196:	2114      	movs	r1, #20
 8010198:	6878      	ldr	r0, [r7, #4]
 801019a:	f01a f8de 	bl	802a35a <_ZdlPvj>
 801019e:	687b      	ldr	r3, [r7, #4]
 80101a0:	4618      	mov	r0, r3
 80101a2:	3708      	adds	r7, #8
 80101a4:	46bd      	mov	sp, r7
 80101a6:	bd80      	pop	{r7, pc}

080101a8 <_ZN8touchgfx3LCDD1Ev>:
        : textureMapperClass(0), vectorFontRenderer(0)
    {
    }

    /** Finalizes an instance of the LCD class. */
    virtual ~LCD()
 80101a8:	b480      	push	{r7}
 80101aa:	b083      	sub	sp, #12
 80101ac:	af00      	add	r7, sp, #0
 80101ae:	6078      	str	r0, [r7, #4]
    {
 80101b0:	4a04      	ldr	r2, [pc, #16]	; (80101c4 <_ZN8touchgfx3LCDD1Ev+0x1c>)
 80101b2:	687b      	ldr	r3, [r7, #4]
 80101b4:	601a      	str	r2, [r3, #0]
    }
 80101b6:	687b      	ldr	r3, [r7, #4]
 80101b8:	4618      	mov	r0, r3
 80101ba:	370c      	adds	r7, #12
 80101bc:	46bd      	mov	sp, r7
 80101be:	f85d 7b04 	ldr.w	r7, [sp], #4
 80101c2:	4770      	bx	lr
 80101c4:	0802fcdc 	.word	0x0802fcdc

080101c8 <_ZN8touchgfx3LCDD0Ev>:
    virtual ~LCD()
 80101c8:	b580      	push	{r7, lr}
 80101ca:	b082      	sub	sp, #8
 80101cc:	af00      	add	r7, sp, #0
 80101ce:	6078      	str	r0, [r7, #4]
    }
 80101d0:	6878      	ldr	r0, [r7, #4]
 80101d2:	f7ff ffe9 	bl	80101a8 <_ZN8touchgfx3LCDD1Ev>
 80101d6:	210c      	movs	r1, #12
 80101d8:	6878      	ldr	r0, [r7, #4]
 80101da:	f01a f8be 	bl	802a35a <_ZdlPvj>
 80101de:	687b      	ldr	r3, [r7, #4]
 80101e0:	4618      	mov	r0, r3
 80101e2:	3708      	adds	r7, #8
 80101e4:	46bd      	mov	sp, r7
 80101e6:	bd80      	pop	{r7, pc}

080101e8 <_ZN8touchgfx8Gestures9DragStateC1Ev>:
    static const uint8_t MIN_VELOCITY_AT_RELEASE_BEFORE_SWIPE = 3;

    /** Defines the state of a drag. */
    struct DragState
    {
        DragState()
 80101e8:	b480      	push	{r7}
 80101ea:	b083      	sub	sp, #12
 80101ec:	af00      	add	r7, sp, #0
 80101ee:	6078      	str	r0, [r7, #4]
            : startX(0),
 80101f0:	687b      	ldr	r3, [r7, #4]
 80101f2:	2200      	movs	r2, #0
 80101f4:	801a      	strh	r2, [r3, #0]
              startY(0),
 80101f6:	687b      	ldr	r3, [r7, #4]
 80101f8:	2200      	movs	r2, #0
 80101fa:	805a      	strh	r2, [r3, #2]
              downX(0),
 80101fc:	687b      	ldr	r3, [r7, #4]
 80101fe:	2200      	movs	r2, #0
 8010200:	809a      	strh	r2, [r3, #4]
              downY(0),
 8010202:	687b      	ldr	r3, [r7, #4]
 8010204:	2200      	movs	r2, #0
 8010206:	80da      	strh	r2, [r3, #6]
              tickCount(0),
 8010208:	687b      	ldr	r3, [r7, #4]
 801020a:	2200      	movs	r2, #0
 801020c:	811a      	strh	r2, [r3, #8]
              velocityX(0),
 801020e:	687b      	ldr	r3, [r7, #4]
 8010210:	2200      	movs	r2, #0
 8010212:	815a      	strh	r2, [r3, #10]
              velocityY(0),
 8010214:	687b      	ldr	r3, [r7, #4]
 8010216:	2200      	movs	r2, #0
 8010218:	819a      	strh	r2, [r3, #12]
              inProgress(false)
 801021a:	687b      	ldr	r3, [r7, #4]
 801021c:	2200      	movs	r2, #0
 801021e:	739a      	strb	r2, [r3, #14]
        {
        }
 8010220:	687b      	ldr	r3, [r7, #4]
 8010222:	4618      	mov	r0, r3
 8010224:	370c      	adds	r7, #12
 8010226:	46bd      	mov	sp, r7
 8010228:	f85d 7b04 	ldr.w	r7, [sp], #4
 801022c:	4770      	bx	lr

0801022e <_ZN8touchgfx8GesturesC1Ev>:
        bool inProgress;    ///< Whether a drag is in progress or not
    };

public:
    /** Default constructor. Does nothing. */
    Gestures()
 801022e:	b580      	push	{r7, lr}
 8010230:	b082      	sub	sp, #8
 8010232:	af00      	add	r7, sp, #0
 8010234:	6078      	str	r0, [r7, #4]
        : drag(), listener(0), dragThresholdValue(0)
 8010236:	687b      	ldr	r3, [r7, #4]
 8010238:	4618      	mov	r0, r3
 801023a:	f7ff ffd5 	bl	80101e8 <_ZN8touchgfx8Gestures9DragStateC1Ev>
 801023e:	687b      	ldr	r3, [r7, #4]
 8010240:	2200      	movs	r2, #0
 8010242:	611a      	str	r2, [r3, #16]
 8010244:	687b      	ldr	r3, [r7, #4]
 8010246:	2200      	movs	r2, #0
 8010248:	829a      	strh	r2, [r3, #20]
    {
    }
 801024a:	687b      	ldr	r3, [r7, #4]
 801024c:	4618      	mov	r0, r3
 801024e:	3708      	adds	r7, #8
 8010250:	46bd      	mov	sp, r7
 8010252:	bd80      	pop	{r7, pc}

08010254 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt>:
    HAL(DMA_Interface& dmaInterface, LCD& display, TouchController& touchCtrl, uint16_t width, uint16_t height)
 8010254:	b580      	push	{r7, lr}
 8010256:	b084      	sub	sp, #16
 8010258:	af00      	add	r7, sp, #0
 801025a:	60f8      	str	r0, [r7, #12]
 801025c:	60b9      	str	r1, [r7, #8]
 801025e:	607a      	str	r2, [r7, #4]
 8010260:	603b      	str	r3, [r7, #0]
          lastRenderMethod(HARDWARE)
 8010262:	4a55      	ldr	r2, [pc, #340]	; (80103b8 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x164>)
 8010264:	68fb      	ldr	r3, [r7, #12]
 8010266:	601a      	str	r2, [r3, #0]
        : dma(dmaInterface),
 8010268:	68fb      	ldr	r3, [r7, #12]
 801026a:	68ba      	ldr	r2, [r7, #8]
 801026c:	605a      	str	r2, [r3, #4]
          lcdRef(display),
 801026e:	68fb      	ldr	r3, [r7, #12]
 8010270:	687a      	ldr	r2, [r7, #4]
 8010272:	609a      	str	r2, [r3, #8]
          touchController(touchCtrl),
 8010274:	68fb      	ldr	r3, [r7, #12]
 8010276:	683a      	ldr	r2, [r7, #0]
 8010278:	60da      	str	r2, [r3, #12]
          mcuInstrumentation(0),
 801027a:	68fb      	ldr	r3, [r7, #12]
 801027c:	2200      	movs	r2, #0
 801027e:	611a      	str	r2, [r3, #16]
          buttonController(0),
 8010280:	68fb      	ldr	r3, [r7, #12]
 8010282:	2200      	movs	r2, #0
 8010284:	615a      	str	r2, [r3, #20]
          frameBufferAllocator(0),
 8010286:	68fb      	ldr	r3, [r7, #12]
 8010288:	2200      	movs	r2, #0
 801028a:	619a      	str	r2, [r3, #24]
          gestures(),
 801028c:	68fb      	ldr	r3, [r7, #12]
 801028e:	331c      	adds	r3, #28
 8010290:	4618      	mov	r0, r3
 8010292:	f7ff ffcc 	bl	801022e <_ZN8touchgfx8GesturesC1Ev>
          nativeDisplayOrientation(ORIENTATION_LANDSCAPE),
 8010296:	68fb      	ldr	r3, [r7, #12]
 8010298:	2200      	movs	r2, #0
 801029a:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
          taskDelayFunc(0),
 801029e:	68fb      	ldr	r3, [r7, #12]
 80102a0:	2200      	movs	r2, #0
 80102a2:	639a      	str	r2, [r3, #56]	; 0x38
          frameBuffer0(0),
 80102a4:	68fb      	ldr	r3, [r7, #12]
 80102a6:	2200      	movs	r2, #0
 80102a8:	63da      	str	r2, [r3, #60]	; 0x3c
          frameBuffer1(0),
 80102aa:	68fb      	ldr	r3, [r7, #12]
 80102ac:	2200      	movs	r2, #0
 80102ae:	641a      	str	r2, [r3, #64]	; 0x40
          frameBuffer2(0),
 80102b0:	68fb      	ldr	r3, [r7, #12]
 80102b2:	2200      	movs	r2, #0
 80102b4:	645a      	str	r2, [r3, #68]	; 0x44
          refreshStrategy(REFRESH_STRATEGY_DEFAULT),
 80102b6:	68fb      	ldr	r3, [r7, #12]
 80102b8:	2200      	movs	r2, #0
 80102ba:	f883 2048 	strb.w	r2, [r3, #72]	; 0x48
          fingerSize(1),
 80102be:	68fb      	ldr	r3, [r7, #12]
 80102c0:	2201      	movs	r2, #1
 80102c2:	f883 2049 	strb.w	r2, [r3, #73]	; 0x49
          lockDMAToPorch(false),
 80102c6:	68fb      	ldr	r3, [r7, #12]
 80102c8:	2200      	movs	r2, #0
 80102ca:	f883 204a 	strb.w	r2, [r3, #74]	; 0x4a
          frameBufferUpdatedThisFrame(false),
 80102ce:	68fb      	ldr	r3, [r7, #12]
 80102d0:	2200      	movs	r2, #0
 80102d2:	f883 204b 	strb.w	r2, [r3, #75]	; 0x4b
          auxiliaryLCD(0),
 80102d6:	68fb      	ldr	r3, [r7, #12]
 80102d8:	2200      	movs	r2, #0
 80102da:	64da      	str	r2, [r3, #76]	; 0x4c
          partialFrameBufferRect(),
 80102dc:	68fb      	ldr	r3, [r7, #12]
 80102de:	3350      	adds	r3, #80	; 0x50
 80102e0:	4618      	mov	r0, r3
 80102e2:	f7fb faae 	bl	800b842 <_ZN8touchgfx4RectC1Ev>
          useAuxiliaryLCD(false),
 80102e6:	68fb      	ldr	r3, [r7, #12]
 80102e8:	2200      	movs	r2, #0
 80102ea:	f883 2058 	strb.w	r2, [r3, #88]	; 0x58
          listener(0),
 80102ee:	68fb      	ldr	r3, [r7, #12]
 80102f0:	2200      	movs	r2, #0
 80102f2:	65da      	str	r2, [r3, #92]	; 0x5c
          lastX(0),
 80102f4:	68fb      	ldr	r3, [r7, #12]
 80102f6:	2200      	movs	r2, #0
 80102f8:	661a      	str	r2, [r3, #96]	; 0x60
          lastY(0),
 80102fa:	68fb      	ldr	r3, [r7, #12]
 80102fc:	2200      	movs	r2, #0
 80102fe:	665a      	str	r2, [r3, #100]	; 0x64
          touchSampleRate(1),
 8010300:	68fb      	ldr	r3, [r7, #12]
 8010302:	2201      	movs	r2, #1
 8010304:	f883 2068 	strb.w	r2, [r3, #104]	; 0x68
          mcuLoadPct(0),
 8010308:	68fb      	ldr	r3, [r7, #12]
 801030a:	2200      	movs	r2, #0
 801030c:	f883 2069 	strb.w	r2, [r3, #105]	; 0x69
          vSyncCnt(0),
 8010310:	68fb      	ldr	r3, [r7, #12]
 8010312:	2200      	movs	r2, #0
 8010314:	f883 206a 	strb.w	r2, [r3, #106]	; 0x6a
          vSyncForFrame(1),
 8010318:	68fb      	ldr	r3, [r7, #12]
 801031a:	2201      	movs	r2, #1
 801031c:	f883 206b 	strb.w	r2, [r3, #107]	; 0x6b
          vSyncCompensationEnabled(false),
 8010320:	68fb      	ldr	r3, [r7, #12]
 8010322:	2200      	movs	r2, #0
 8010324:	f883 206c 	strb.w	r2, [r3, #108]	; 0x6c
          clientDirty(false),
 8010328:	68fb      	ldr	r3, [r7, #12]
 801032a:	2200      	movs	r2, #0
 801032c:	f883 206d 	strb.w	r2, [r3, #109]	; 0x6d
          swapRequested(false),
 8010330:	68fb      	ldr	r3, [r7, #12]
 8010332:	2200      	movs	r2, #0
 8010334:	f883 206e 	strb.w	r2, [r3, #110]	; 0x6e
          lastTouched(false),
 8010338:	68fb      	ldr	r3, [r7, #12]
 801033a:	2200      	movs	r2, #0
 801033c:	f883 206f 	strb.w	r2, [r3, #111]	; 0x6f
          updateMCULoad(0),
 8010340:	68fb      	ldr	r3, [r7, #12]
 8010342:	2200      	movs	r2, #0
 8010344:	f883 2070 	strb.w	r2, [r3, #112]	; 0x70
          cc_begin(0),
 8010348:	68fb      	ldr	r3, [r7, #12]
 801034a:	2200      	movs	r2, #0
 801034c:	675a      	str	r2, [r3, #116]	; 0x74
          requestedOrientation(ORIENTATION_LANDSCAPE),
 801034e:	68fb      	ldr	r3, [r7, #12]
 8010350:	2200      	movs	r2, #0
 8010352:	f883 2078 	strb.w	r2, [r3, #120]	; 0x78
          displayOrientationChangeRequested(false),
 8010356:	68fb      	ldr	r3, [r7, #12]
 8010358:	2200      	movs	r2, #0
 801035a:	f883 2079 	strb.w	r2, [r3, #121]	; 0x79
          useDMAAcceleration(true),
 801035e:	68fb      	ldr	r3, [r7, #12]
 8010360:	2201      	movs	r2, #1
 8010362:	f883 207a 	strb.w	r2, [r3, #122]	; 0x7a
          lastRenderMethod(HARDWARE)
 8010366:	68fb      	ldr	r3, [r7, #12]
 8010368:	2201      	movs	r2, #1
 801036a:	f883 207b 	strb.w	r2, [r3, #123]	; 0x7b
        instance = this;
 801036e:	4a13      	ldr	r2, [pc, #76]	; (80103bc <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x168>)
 8010370:	68fb      	ldr	r3, [r7, #12]
 8010372:	6013      	str	r3, [r2, #0]
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 8010374:	4a12      	ldr	r2, [pc, #72]	; (80103c0 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x16c>)
 8010376:	8b3b      	ldrh	r3, [r7, #24]
 8010378:	8013      	strh	r3, [r2, #0]
 801037a:	4b11      	ldr	r3, [pc, #68]	; (80103c0 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x16c>)
 801037c:	881a      	ldrh	r2, [r3, #0]
 801037e:	4b11      	ldr	r3, [pc, #68]	; (80103c4 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x170>)
 8010380:	801a      	strh	r2, [r3, #0]
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 8010382:	4a11      	ldr	r2, [pc, #68]	; (80103c8 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x174>)
 8010384:	8bbb      	ldrh	r3, [r7, #28]
 8010386:	8013      	strh	r3, [r2, #0]
 8010388:	4b0f      	ldr	r3, [pc, #60]	; (80103c8 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x174>)
 801038a:	881a      	ldrh	r2, [r3, #0]
 801038c:	4b0f      	ldr	r3, [pc, #60]	; (80103cc <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x178>)
 801038e:	801a      	strh	r2, [r3, #0]
        DISPLAY_ROTATION = rotate0;
 8010390:	4b0f      	ldr	r3, [pc, #60]	; (80103d0 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x17c>)
 8010392:	2200      	movs	r2, #0
 8010394:	701a      	strb	r2, [r3, #0]
        nativeDisplayOrientation = ((width >= height) ? ORIENTATION_LANDSCAPE : ORIENTATION_PORTRAIT);
 8010396:	8b3a      	ldrh	r2, [r7, #24]
 8010398:	8bbb      	ldrh	r3, [r7, #28]
 801039a:	429a      	cmp	r2, r3
 801039c:	bf34      	ite	cc
 801039e:	2301      	movcc	r3, #1
 80103a0:	2300      	movcs	r3, #0
 80103a2:	b2db      	uxtb	r3, r3
 80103a4:	461a      	mov	r2, r3
 80103a6:	68fb      	ldr	r3, [r7, #12]
 80103a8:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
    }
 80103ac:	68fb      	ldr	r3, [r7, #12]
 80103ae:	4618      	mov	r0, r3
 80103b0:	3710      	adds	r7, #16
 80103b2:	46bd      	mov	sp, r7
 80103b4:	bd80      	pop	{r7, pc}
 80103b6:	bf00      	nop
 80103b8:	0802f670 	.word	0x0802f670
 80103bc:	20006c34 	.word	0x20006c34
 80103c0:	20006c28 	.word	0x20006c28
 80103c4:	20006c2e 	.word	0x20006c2e
 80103c8:	20006c2a 	.word	0x20006c2a
 80103cc:	20006c30 	.word	0x20006c30
 80103d0:	20006c2c 	.word	0x20006c2c

080103d4 <_ZN16FrontendHeapBase15gotoStartScreenER19FrontendApplication>:
    /**
     * Determine (compile time) the Transition type of largest size.
     */
    typedef touchgfx::meta::select_type_maxsize< GeneratedTransitionTypes >::type MaxGeneratedTransitionType;

    virtual void gotoStartScreen(FrontendApplication& app)
 80103d4:	b580      	push	{r7, lr}
 80103d6:	b082      	sub	sp, #8
 80103d8:	af00      	add	r7, sp, #0
 80103da:	6078      	str	r0, [r7, #4]
 80103dc:	6039      	str	r1, [r7, #0]
    {
        app.gotoScreen1ScreenNoTransition();
 80103de:	683b      	ldr	r3, [r7, #0]
 80103e0:	4618      	mov	r0, r3
 80103e2:	f7fa ff83 	bl	800b2ec <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv>
    }
 80103e6:	bf00      	nop
 80103e8:	3708      	adds	r7, #8
 80103ea:	46bd      	mov	sp, r7
 80103ec:	bd80      	pop	{r7, pc}
	...

080103f0 <_ZN16FrontendHeapBaseC1ERN8touchgfx17AbstractPartitionES2_S2_R19FrontendApplication>:
protected:
    FrontendHeapBase(touchgfx::AbstractPartition& presenters, touchgfx::AbstractPartition& views, touchgfx::AbstractPartition& transitions, FrontendApplication& app)
 80103f0:	b580      	push	{r7, lr}
 80103f2:	b086      	sub	sp, #24
 80103f4:	af02      	add	r7, sp, #8
 80103f6:	60f8      	str	r0, [r7, #12]
 80103f8:	60b9      	str	r1, [r7, #8]
 80103fa:	607a      	str	r2, [r7, #4]
 80103fc:	603b      	str	r3, [r7, #0]
        : MVPHeap(presenters, views, transitions, app)
 80103fe:	68f8      	ldr	r0, [r7, #12]
 8010400:	69bb      	ldr	r3, [r7, #24]
 8010402:	9300      	str	r3, [sp, #0]
 8010404:	683b      	ldr	r3, [r7, #0]
 8010406:	687a      	ldr	r2, [r7, #4]
 8010408:	68b9      	ldr	r1, [r7, #8]
 801040a:	f7ff fe8d 	bl	8010128 <_ZN8touchgfx7MVPHeapC1ERNS_17AbstractPartitionES2_S2_RNS_14MVPApplicationE>
 801040e:	4a04      	ldr	r2, [pc, #16]	; (8010420 <_ZN16FrontendHeapBaseC1ERN8touchgfx17AbstractPartitionES2_S2_R19FrontendApplication+0x30>)
 8010410:	68fb      	ldr	r3, [r7, #12]
 8010412:	601a      	str	r2, [r3, #0]
    {

    }
 8010414:	68fb      	ldr	r3, [r7, #12]
 8010416:	4618      	mov	r0, r3
 8010418:	3710      	adds	r7, #16
 801041a:	46bd      	mov	sp, r7
 801041c:	bd80      	pop	{r7, pc}
 801041e:	bf00      	nop
 8010420:	0802f17c 	.word	0x0802f17c

08010424 <__tcf_0>:
                            > > CombinedTransitionTypes;
    typedef touchgfx::meta::select_type_maxsize< CombinedTransitionTypes >::type MaxTransitionType;

    static FrontendHeap& getInstance()
    {
        static FrontendHeap instance;
 8010424:	b580      	push	{r7, lr}
 8010426:	af00      	add	r7, sp, #0
 8010428:	4801      	ldr	r0, [pc, #4]	; (8010430 <__tcf_0+0xc>)
 801042a:	f000 f971 	bl	8010710 <_ZN12FrontendHeapD1Ev>
 801042e:	bd80      	pop	{r7, pc}
 8010430:	2000074c 	.word	0x2000074c

08010434 <_ZN12FrontendHeap11getInstanceEv>:
    static FrontendHeap& getInstance()
 8010434:	b580      	push	{r7, lr}
 8010436:	af00      	add	r7, sp, #0
        static FrontendHeap instance;
 8010438:	4b11      	ldr	r3, [pc, #68]	; (8010480 <_ZN12FrontendHeap11getInstanceEv+0x4c>)
 801043a:	681b      	ldr	r3, [r3, #0]
 801043c:	f3bf 8f5b 	dmb	ish
 8010440:	f003 0301 	and.w	r3, r3, #1
 8010444:	2b00      	cmp	r3, #0
 8010446:	bf0c      	ite	eq
 8010448:	2301      	moveq	r3, #1
 801044a:	2300      	movne	r3, #0
 801044c:	b2db      	uxtb	r3, r3
 801044e:	2b00      	cmp	r3, #0
 8010450:	d013      	beq.n	801047a <_ZN12FrontendHeap11getInstanceEv+0x46>
 8010452:	480b      	ldr	r0, [pc, #44]	; (8010480 <_ZN12FrontendHeap11getInstanceEv+0x4c>)
 8010454:	f019 ff83 	bl	802a35e <__cxa_guard_acquire>
 8010458:	4603      	mov	r3, r0
 801045a:	2b00      	cmp	r3, #0
 801045c:	bf14      	ite	ne
 801045e:	2301      	movne	r3, #1
 8010460:	2300      	moveq	r3, #0
 8010462:	b2db      	uxtb	r3, r3
 8010464:	2b00      	cmp	r3, #0
 8010466:	d008      	beq.n	801047a <_ZN12FrontendHeap11getInstanceEv+0x46>
 8010468:	4806      	ldr	r0, [pc, #24]	; (8010484 <_ZN12FrontendHeap11getInstanceEv+0x50>)
 801046a:	f000 f867 	bl	801053c <_ZN12FrontendHeapC1Ev>
 801046e:	4806      	ldr	r0, [pc, #24]	; (8010488 <_ZN12FrontendHeap11getInstanceEv+0x54>)
 8010470:	f019 ffc0 	bl	802a3f4 <atexit>
 8010474:	4802      	ldr	r0, [pc, #8]	; (8010480 <_ZN12FrontendHeap11getInstanceEv+0x4c>)
 8010476:	f019 ff7e 	bl	802a376 <__cxa_guard_release>
        return instance;
 801047a:	4b02      	ldr	r3, [pc, #8]	; (8010484 <_ZN12FrontendHeap11getInstanceEv+0x50>)
    }
 801047c:	4618      	mov	r0, r3
 801047e:	bd80      	pop	{r7, pc}
 8010480:	20002d0c 	.word	0x20002d0c
 8010484:	2000074c 	.word	0x2000074c
 8010488:	08010425 	.word	0x08010425

0801048c <_ZN16FrontendHeapBaseD1Ev>:
class FrontendHeapBase : public touchgfx::MVPHeap
 801048c:	b580      	push	{r7, lr}
 801048e:	b082      	sub	sp, #8
 8010490:	af00      	add	r7, sp, #0
 8010492:	6078      	str	r0, [r7, #4]
 8010494:	4a05      	ldr	r2, [pc, #20]	; (80104ac <_ZN16FrontendHeapBaseD1Ev+0x20>)
 8010496:	687b      	ldr	r3, [r7, #4]
 8010498:	601a      	str	r2, [r3, #0]
 801049a:	687b      	ldr	r3, [r7, #4]
 801049c:	4618      	mov	r0, r3
 801049e:	f7ff fe63 	bl	8010168 <_ZN8touchgfx7MVPHeapD1Ev>
 80104a2:	687b      	ldr	r3, [r7, #4]
 80104a4:	4618      	mov	r0, r3
 80104a6:	3708      	adds	r7, #8
 80104a8:	46bd      	mov	sp, r7
 80104aa:	bd80      	pop	{r7, pc}
 80104ac:	0802f17c 	.word	0x0802f17c

080104b0 <_ZN16FrontendHeapBaseD0Ev>:
 80104b0:	b580      	push	{r7, lr}
 80104b2:	b082      	sub	sp, #8
 80104b4:	af00      	add	r7, sp, #0
 80104b6:	6078      	str	r0, [r7, #4]
 80104b8:	6878      	ldr	r0, [r7, #4]
 80104ba:	f7ff ffe7 	bl	801048c <_ZN16FrontendHeapBaseD1Ev>
 80104be:	2114      	movs	r1, #20
 80104c0:	6878      	ldr	r0, [r7, #4]
 80104c2:	f019 ff4a 	bl	802a35a <_ZdlPvj>
 80104c6:	687b      	ldr	r3, [r7, #4]
 80104c8:	4618      	mov	r0, r3
 80104ca:	3708      	adds	r7, #8
 80104cc:	46bd      	mov	sp, r7
 80104ce:	bd80      	pop	{r7, pc}

080104d0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EEC1Ev>:
 * @tparam NUMBER_OF_ELEMENTS Type of the number of elements.
 *
 * @see AbstractPartition
 */
template <typename ListOfTypes, uint16_t NUMBER_OF_ELEMENTS>
class Partition : public AbstractPartition
 80104d0:	b580      	push	{r7, lr}
 80104d2:	b082      	sub	sp, #8
 80104d4:	af00      	add	r7, sp, #0
 80104d6:	6078      	str	r0, [r7, #4]
 80104d8:	687b      	ldr	r3, [r7, #4]
 80104da:	4618      	mov	r0, r3
 80104dc:	f001 fd1e 	bl	8011f1c <_ZN8touchgfx17AbstractPartitionC1Ev>
 80104e0:	4a03      	ldr	r2, [pc, #12]	; (80104f0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EEC1Ev+0x20>)
 80104e2:	687b      	ldr	r3, [r7, #4]
 80104e4:	601a      	str	r2, [r3, #0]
 80104e6:	687b      	ldr	r3, [r7, #4]
 80104e8:	4618      	mov	r0, r3
 80104ea:	3708      	adds	r7, #8
 80104ec:	46bd      	mov	sp, r7
 80104ee:	bd80      	pop	{r7, pc}
 80104f0:	0802f148 	.word	0x0802f148

080104f4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EEC1Ev>:
 80104f4:	b580      	push	{r7, lr}
 80104f6:	b082      	sub	sp, #8
 80104f8:	af00      	add	r7, sp, #0
 80104fa:	6078      	str	r0, [r7, #4]
 80104fc:	687b      	ldr	r3, [r7, #4]
 80104fe:	4618      	mov	r0, r3
 8010500:	f001 fd0c 	bl	8011f1c <_ZN8touchgfx17AbstractPartitionC1Ev>
 8010504:	4a03      	ldr	r2, [pc, #12]	; (8010514 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EEC1Ev+0x20>)
 8010506:	687b      	ldr	r3, [r7, #4]
 8010508:	601a      	str	r2, [r3, #0]
 801050a:	687b      	ldr	r3, [r7, #4]
 801050c:	4618      	mov	r0, r3
 801050e:	3708      	adds	r7, #8
 8010510:	46bd      	mov	sp, r7
 8010512:	bd80      	pop	{r7, pc}
 8010514:	0802f114 	.word	0x0802f114

08010518 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EEC1Ev>:
 8010518:	b580      	push	{r7, lr}
 801051a:	b082      	sub	sp, #8
 801051c:	af00      	add	r7, sp, #0
 801051e:	6078      	str	r0, [r7, #4]
 8010520:	687b      	ldr	r3, [r7, #4]
 8010522:	4618      	mov	r0, r3
 8010524:	f001 fcfa 	bl	8011f1c <_ZN8touchgfx17AbstractPartitionC1Ev>
 8010528:	4a03      	ldr	r2, [pc, #12]	; (8010538 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EEC1Ev+0x20>)
 801052a:	687b      	ldr	r3, [r7, #4]
 801052c:	601a      	str	r2, [r3, #0]
 801052e:	687b      	ldr	r3, [r7, #4]
 8010530:	4618      	mov	r0, r3
 8010532:	3708      	adds	r7, #8
 8010534:	46bd      	mov	sp, r7
 8010536:	bd80      	pop	{r7, pc}
 8010538:	0802f0e0 	.word	0x0802f0e0

0801053c <_ZN12FrontendHeapC1Ev>:
    touchgfx::Partition< CombinedTransitionTypes, 1 > transitions;
    Model model;
    FrontendApplication app;

private:
    FrontendHeap() : FrontendHeapBase(presenters, views, transitions, app),
 801053c:	b590      	push	{r4, r7, lr}
 801053e:	b085      	sub	sp, #20
 8010540:	af02      	add	r7, sp, #8
 8010542:	6078      	str	r0, [r7, #4]
                     app(model, *this)
 8010544:	6878      	ldr	r0, [r7, #4]
 8010546:	687b      	ldr	r3, [r7, #4]
 8010548:	f103 0114 	add.w	r1, r3, #20
 801054c:	687b      	ldr	r3, [r7, #4]
 801054e:	f103 042c 	add.w	r4, r3, #44	; 0x2c
 8010552:	687b      	ldr	r3, [r7, #4]
 8010554:	f503 5211 	add.w	r2, r3, #9280	; 0x2440
 8010558:	320c      	adds	r2, #12
    FrontendHeap() : FrontendHeapBase(presenters, views, transitions, app),
 801055a:	687b      	ldr	r3, [r7, #4]
 801055c:	f503 5311 	add.w	r3, r3, #9280	; 0x2440
 8010560:	3324      	adds	r3, #36	; 0x24
                     app(model, *this)
 8010562:	9300      	str	r3, [sp, #0]
 8010564:	4613      	mov	r3, r2
 8010566:	4622      	mov	r2, r4
 8010568:	f7ff ff42 	bl	80103f0 <_ZN16FrontendHeapBaseC1ERN8touchgfx17AbstractPartitionES2_S2_R19FrontendApplication>
 801056c:	4a1a      	ldr	r2, [pc, #104]	; (80105d8 <_ZN12FrontendHeapC1Ev+0x9c>)
 801056e:	687b      	ldr	r3, [r7, #4]
 8010570:	601a      	str	r2, [r3, #0]
 8010572:	687b      	ldr	r3, [r7, #4]
 8010574:	3314      	adds	r3, #20
 8010576:	4618      	mov	r0, r3
 8010578:	f7ff ffaa 	bl	80104d0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EEC1Ev>
 801057c:	687b      	ldr	r3, [r7, #4]
 801057e:	332c      	adds	r3, #44	; 0x2c
 8010580:	4618      	mov	r0, r3
 8010582:	f7ff ffb7 	bl	80104f4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EEC1Ev>
 8010586:	687b      	ldr	r3, [r7, #4]
 8010588:	f503 5311 	add.w	r3, r3, #9280	; 0x2440
 801058c:	330c      	adds	r3, #12
 801058e:	4618      	mov	r0, r3
 8010590:	f7ff ffc2 	bl	8010518 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EEC1Ev>
 8010594:	687b      	ldr	r3, [r7, #4]
 8010596:	f503 5311 	add.w	r3, r3, #9280	; 0x2440
 801059a:	3320      	adds	r3, #32
 801059c:	4618      	mov	r0, r3
 801059e:	f7fe fe59 	bl	800f254 <_ZN5ModelC1Ev>
 80105a2:	687b      	ldr	r3, [r7, #4]
 80105a4:	f503 5311 	add.w	r3, r3, #9280	; 0x2440
 80105a8:	3324      	adds	r3, #36	; 0x24
 80105aa:	687a      	ldr	r2, [r7, #4]
 80105ac:	f502 5111 	add.w	r1, r2, #9280	; 0x2440
 80105b0:	3120      	adds	r1, #32
 80105b2:	687a      	ldr	r2, [r7, #4]
 80105b4:	4618      	mov	r0, r3
 80105b6:	f7fe fdc5 	bl	800f144 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>
    {
        gotoStartScreen(app);
 80105ba:	687a      	ldr	r2, [r7, #4]
 80105bc:	687b      	ldr	r3, [r7, #4]
 80105be:	f503 5311 	add.w	r3, r3, #9280	; 0x2440
 80105c2:	3324      	adds	r3, #36	; 0x24
 80105c4:	4619      	mov	r1, r3
 80105c6:	4610      	mov	r0, r2
 80105c8:	f7ff ff04 	bl	80103d4 <_ZN16FrontendHeapBase15gotoStartScreenER19FrontendApplication>
    }
 80105cc:	687b      	ldr	r3, [r7, #4]
 80105ce:	4618      	mov	r0, r3
 80105d0:	370c      	adds	r7, #12
 80105d2:	46bd      	mov	sp, r7
 80105d4:	bd90      	pop	{r4, r7, pc}
 80105d6:	bf00      	nop
 80105d8:	0802f0cc 	.word	0x0802f0cc

080105dc <_ZN20TouchGFXGeneratedHALC1ERN8touchgfx13DMA_InterfaceERNS0_3LCDERNS0_15TouchControllerEtt>:
    TouchGFXGeneratedHAL(touchgfx::DMA_Interface& dma, touchgfx::LCD& display, touchgfx::TouchController& tc, uint16_t width, uint16_t height) :
 80105dc:	b580      	push	{r7, lr}
 80105de:	b086      	sub	sp, #24
 80105e0:	af02      	add	r7, sp, #8
 80105e2:	60f8      	str	r0, [r7, #12]
 80105e4:	60b9      	str	r1, [r7, #8]
 80105e6:	607a      	str	r2, [r7, #4]
 80105e8:	603b      	str	r3, [r7, #0]
        touchgfx::HAL(dma, display, tc, width, height)
 80105ea:	68f8      	ldr	r0, [r7, #12]
 80105ec:	8bbb      	ldrh	r3, [r7, #28]
 80105ee:	9301      	str	r3, [sp, #4]
 80105f0:	8b3b      	ldrh	r3, [r7, #24]
 80105f2:	9300      	str	r3, [sp, #0]
 80105f4:	683b      	ldr	r3, [r7, #0]
 80105f6:	687a      	ldr	r2, [r7, #4]
 80105f8:	68b9      	ldr	r1, [r7, #8]
 80105fa:	f7ff fe2b 	bl	8010254 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt>
 80105fe:	4a04      	ldr	r2, [pc, #16]	; (8010610 <_ZN20TouchGFXGeneratedHALC1ERN8touchgfx13DMA_InterfaceERNS0_3LCDERNS0_15TouchControllerEtt+0x34>)
 8010600:	68fb      	ldr	r3, [r7, #12]
 8010602:	601a      	str	r2, [r3, #0]
    }
 8010604:	68fb      	ldr	r3, [r7, #12]
 8010606:	4618      	mov	r0, r3
 8010608:	3710      	adds	r7, #16
 801060a:	46bd      	mov	sp, r7
 801060c:	bd80      	pop	{r7, pc}
 801060e:	bf00      	nop
 8010610:	0802f1cc 	.word	0x0802f1cc

08010614 <_ZN11TouchGFXHALC1ERN8touchgfx13DMA_InterfaceERNS0_3LCDERNS0_15TouchControllerEtt>:
    TouchGFXHAL(touchgfx::DMA_Interface& dma, touchgfx::LCD& display, touchgfx::TouchController& tc, uint16_t width, uint16_t height) : TouchGFXGeneratedHAL(dma, display, tc, width, height)
 8010614:	b580      	push	{r7, lr}
 8010616:	b086      	sub	sp, #24
 8010618:	af02      	add	r7, sp, #8
 801061a:	60f8      	str	r0, [r7, #12]
 801061c:	60b9      	str	r1, [r7, #8]
 801061e:	607a      	str	r2, [r7, #4]
 8010620:	603b      	str	r3, [r7, #0]
 8010622:	68f8      	ldr	r0, [r7, #12]
 8010624:	8bbb      	ldrh	r3, [r7, #28]
 8010626:	9301      	str	r3, [sp, #4]
 8010628:	8b3b      	ldrh	r3, [r7, #24]
 801062a:	9300      	str	r3, [sp, #0]
 801062c:	683b      	ldr	r3, [r7, #0]
 801062e:	687a      	ldr	r2, [r7, #4]
 8010630:	68b9      	ldr	r1, [r7, #8]
 8010632:	f7ff ffd3 	bl	80105dc <_ZN20TouchGFXGeneratedHALC1ERN8touchgfx13DMA_InterfaceERNS0_3LCDERNS0_15TouchControllerEtt>
 8010636:	4a04      	ldr	r2, [pc, #16]	; (8010648 <_ZN11TouchGFXHALC1ERN8touchgfx13DMA_InterfaceERNS0_3LCDERNS0_15TouchControllerEtt+0x34>)
 8010638:	68fb      	ldr	r3, [r7, #12]
 801063a:	601a      	str	r2, [r3, #0]
    }
 801063c:	68fb      	ldr	r3, [r7, #12]
 801063e:	4618      	mov	r0, r3
 8010640:	3710      	adds	r7, #16
 8010642:	46bd      	mov	sp, r7
 8010644:	bd80      	pop	{r7, pc}
 8010646:	bf00      	nop
 8010648:	0802ef80 	.word	0x0802ef80

0801064c <_ZN8touchgfx15TouchControllerC1Ev>:
class TouchController
 801064c:	b480      	push	{r7}
 801064e:	b083      	sub	sp, #12
 8010650:	af00      	add	r7, sp, #0
 8010652:	6078      	str	r0, [r7, #4]
 8010654:	4a04      	ldr	r2, [pc, #16]	; (8010668 <_ZN8touchgfx15TouchControllerC1Ev+0x1c>)
 8010656:	687b      	ldr	r3, [r7, #4]
 8010658:	601a      	str	r2, [r3, #0]
 801065a:	687b      	ldr	r3, [r7, #4]
 801065c:	4618      	mov	r0, r3
 801065e:	370c      	adds	r7, #12
 8010660:	46bd      	mov	sp, r7
 8010662:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010666:	4770      	bx	lr
 8010668:	0802ef68 	.word	0x0802ef68

0801066c <_ZN20STM32TouchControllerC1Ev>:
{
public:

    STM32TouchController() {}
 801066c:	b580      	push	{r7, lr}
 801066e:	b082      	sub	sp, #8
 8010670:	af00      	add	r7, sp, #0
 8010672:	6078      	str	r0, [r7, #4]
 8010674:	687b      	ldr	r3, [r7, #4]
 8010676:	4618      	mov	r0, r3
 8010678:	f7ff ffe8 	bl	801064c <_ZN8touchgfx15TouchControllerC1Ev>
 801067c:	4a03      	ldr	r2, [pc, #12]	; (801068c <_ZN20STM32TouchControllerC1Ev+0x20>)
 801067e:	687b      	ldr	r3, [r7, #4]
 8010680:	601a      	str	r2, [r3, #0]
 8010682:	687b      	ldr	r3, [r7, #4]
 8010684:	4618      	mov	r0, r3
 8010686:	3708      	adds	r7, #8
 8010688:	46bd      	mov	sp, r7
 801068a:	bd80      	pop	{r7, pc}
 801068c:	0802ef50 	.word	0x0802ef50

08010690 <touchgfx_init>:
static ApplicationFontProvider fontProvider;
static Texts texts;
static TouchGFXHAL hal(dma, display, tc, 480, 320);

void touchgfx_init()
{
 8010690:	b590      	push	{r4, r7, lr}
 8010692:	b085      	sub	sp, #20
 8010694:	af02      	add	r7, sp, #8
    Bitmap::registerBitmapDatabase(BitmapDatabase::getInstance(), BitmapDatabase::getInstanceSize());
 8010696:	f7fe fb05 	bl	800eca4 <_ZN14BitmapDatabase11getInstanceEv>
 801069a:	4604      	mov	r4, r0
 801069c:	f7fe fb0c 	bl	800ecb8 <_ZN14BitmapDatabase15getInstanceSizeEv>
 80106a0:	4603      	mov	r3, r0
 80106a2:	4619      	mov	r1, r3
 80106a4:	2300      	movs	r3, #0
 80106a6:	9300      	str	r3, [sp, #0]
 80106a8:	2300      	movs	r3, #0
 80106aa:	2200      	movs	r2, #0
 80106ac:	4620      	mov	r0, r4
 80106ae:	f00b ff17 	bl	801c4e0 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>
    TypedText::registerTexts(&texts);
 80106b2:	4809      	ldr	r0, [pc, #36]	; (80106d8 <touchgfx_init+0x48>)
 80106b4:	f7ff fd28 	bl	8010108 <_ZN8touchgfx9TypedText13registerTextsEPKNS_5TextsE>
    Texts::setLanguage(0);
 80106b8:	2000      	movs	r0, #0
 80106ba:	f7fe fc57 	bl	800ef6c <_ZN8touchgfx5Texts11setLanguageEt>

    FontManager::setFontProvider(&fontProvider);
 80106be:	4807      	ldr	r0, [pc, #28]	; (80106dc <touchgfx_init+0x4c>)
 80106c0:	f00b fe76 	bl	801c3b0 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>

    FrontendHeap& heap = FrontendHeap::getInstance();
 80106c4:	f7ff feb6 	bl	8010434 <_ZN12FrontendHeap11getInstanceEv>
 80106c8:	6078      	str	r0, [r7, #4]
    (void)heap;

    /*
     * Initialize TouchGFX
     */
    hal.initialize();
 80106ca:	4805      	ldr	r0, [pc, #20]	; (80106e0 <touchgfx_init+0x50>)
 80106cc:	f7ff fa5a 	bl	800fb84 <_ZN11TouchGFXHAL10initializeEv>
}
 80106d0:	bf00      	nop
 80106d2:	370c      	adds	r7, #12
 80106d4:	46bd      	mov	sp, r7
 80106d6:	bd90      	pop	{r4, r7, pc}
 80106d8:	20002de0 	.word	0x20002de0
 80106dc:	200000a8 	.word	0x200000a8
 80106e0:	20002de4 	.word	0x20002de4

080106e4 <touchgfx_components_init>:

void touchgfx_components_init()
{
 80106e4:	b480      	push	{r7}
 80106e6:	af00      	add	r7, sp, #0
}
 80106e8:	bf00      	nop
 80106ea:	46bd      	mov	sp, r7
 80106ec:	f85d 7b04 	ldr.w	r7, [sp], #4
 80106f0:	4770      	bx	lr
	...

080106f4 <touchgfx_taskEntry>:

void touchgfx_taskEntry()
{
 80106f4:	b580      	push	{r7, lr}
 80106f6:	af00      	add	r7, sp, #0
    /*
     * Main event loop will check for VSYNC signal, and then process next frame.
     *
     * Note This function returns immediately if there is no VSYNC signal.
     */
    if (OSWrappers::isVSyncAvailable())
 80106f8:	f7ff fbac 	bl	800fe54 <_ZN8touchgfx10OSWrappers16isVSyncAvailableEv>
 80106fc:	4603      	mov	r3, r0
 80106fe:	2b00      	cmp	r3, #0
 8010700:	d002      	beq.n	8010708 <touchgfx_taskEntry+0x14>
    {
        hal.backPorchExited();
 8010702:	4802      	ldr	r0, [pc, #8]	; (801070c <touchgfx_taskEntry+0x18>)
 8010704:	f7ff f910 	bl	800f928 <_ZN8touchgfx3HAL15backPorchExitedEv>
    }
}
 8010708:	bf00      	nop
 801070a:	bd80      	pop	{r7, pc}
 801070c:	20002de4 	.word	0x20002de4

08010710 <_ZN12FrontendHeapD1Ev>:
class FrontendHeap : public FrontendHeapBase
 8010710:	b580      	push	{r7, lr}
 8010712:	b082      	sub	sp, #8
 8010714:	af00      	add	r7, sp, #0
 8010716:	6078      	str	r0, [r7, #4]
 8010718:	4a11      	ldr	r2, [pc, #68]	; (8010760 <_ZN12FrontendHeapD1Ev+0x50>)
 801071a:	687b      	ldr	r3, [r7, #4]
 801071c:	601a      	str	r2, [r3, #0]
 801071e:	687b      	ldr	r3, [r7, #4]
 8010720:	f503 5311 	add.w	r3, r3, #9280	; 0x2440
 8010724:	3324      	adds	r3, #36	; 0x24
 8010726:	4618      	mov	r0, r3
 8010728:	f7fe fcd6 	bl	800f0d8 <_ZN19FrontendApplicationD1Ev>
 801072c:	687b      	ldr	r3, [r7, #4]
 801072e:	f503 5311 	add.w	r3, r3, #9280	; 0x2440
 8010732:	330c      	adds	r3, #12
 8010734:	4618      	mov	r0, r3
 8010736:	f000 f827 	bl	8010788 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>
 801073a:	687b      	ldr	r3, [r7, #4]
 801073c:	332c      	adds	r3, #44	; 0x2c
 801073e:	4618      	mov	r0, r3
 8010740:	f000 f844 	bl	80107cc <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8010744:	687b      	ldr	r3, [r7, #4]
 8010746:	3314      	adds	r3, #20
 8010748:	4618      	mov	r0, r3
 801074a:	f000 f863 	bl	8010814 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 801074e:	687b      	ldr	r3, [r7, #4]
 8010750:	4618      	mov	r0, r3
 8010752:	f7ff fe9b 	bl	801048c <_ZN16FrontendHeapBaseD1Ev>
 8010756:	687b      	ldr	r3, [r7, #4]
 8010758:	4618      	mov	r0, r3
 801075a:	3708      	adds	r7, #8
 801075c:	46bd      	mov	sp, r7
 801075e:	bd80      	pop	{r7, pc}
 8010760:	0802f0cc 	.word	0x0802f0cc

08010764 <_ZN12FrontendHeapD0Ev>:
 8010764:	b580      	push	{r7, lr}
 8010766:	b082      	sub	sp, #8
 8010768:	af00      	add	r7, sp, #0
 801076a:	6078      	str	r0, [r7, #4]
 801076c:	6878      	ldr	r0, [r7, #4]
 801076e:	f7ff ffcf 	bl	8010710 <_ZN12FrontendHeapD1Ev>
 8010772:	f44f 5117 	mov.w	r1, #9664	; 0x25c0
 8010776:	6878      	ldr	r0, [r7, #4]
 8010778:	f019 fdef 	bl	802a35a <_ZdlPvj>
 801077c:	687b      	ldr	r3, [r7, #4]
 801077e:	4618      	mov	r0, r3
 8010780:	3708      	adds	r7, #8
 8010782:	46bd      	mov	sp, r7
 8010784:	bd80      	pop	{r7, pc}
	...

08010788 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>:
 8010788:	b580      	push	{r7, lr}
 801078a:	b082      	sub	sp, #8
 801078c:	af00      	add	r7, sp, #0
 801078e:	6078      	str	r0, [r7, #4]
 8010790:	4a05      	ldr	r2, [pc, #20]	; (80107a8 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev+0x20>)
 8010792:	687b      	ldr	r3, [r7, #4]
 8010794:	601a      	str	r2, [r3, #0]
 8010796:	687b      	ldr	r3, [r7, #4]
 8010798:	4618      	mov	r0, r3
 801079a:	f001 fbbe 	bl	8011f1a <_ZN8touchgfx17AbstractPartitionD1Ev>
 801079e:	687b      	ldr	r3, [r7, #4]
 80107a0:	4618      	mov	r0, r3
 80107a2:	3708      	adds	r7, #8
 80107a4:	46bd      	mov	sp, r7
 80107a6:	bd80      	pop	{r7, pc}
 80107a8:	0802f0e0 	.word	0x0802f0e0

080107ac <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED0Ev>:
 80107ac:	b580      	push	{r7, lr}
 80107ae:	b082      	sub	sp, #8
 80107b0:	af00      	add	r7, sp, #0
 80107b2:	6078      	str	r0, [r7, #4]
 80107b4:	6878      	ldr	r0, [r7, #4]
 80107b6:	f7ff ffe7 	bl	8010788 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>
 80107ba:	2114      	movs	r1, #20
 80107bc:	6878      	ldr	r0, [r7, #4]
 80107be:	f019 fdcc 	bl	802a35a <_ZdlPvj>
 80107c2:	687b      	ldr	r3, [r7, #4]
 80107c4:	4618      	mov	r0, r3
 80107c6:	3708      	adds	r7, #8
 80107c8:	46bd      	mov	sp, r7
 80107ca:	bd80      	pop	{r7, pc}

080107cc <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 80107cc:	b580      	push	{r7, lr}
 80107ce:	b082      	sub	sp, #8
 80107d0:	af00      	add	r7, sp, #0
 80107d2:	6078      	str	r0, [r7, #4]
 80107d4:	4a05      	ldr	r2, [pc, #20]	; (80107ec <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EED1Ev+0x20>)
 80107d6:	687b      	ldr	r3, [r7, #4]
 80107d8:	601a      	str	r2, [r3, #0]
 80107da:	687b      	ldr	r3, [r7, #4]
 80107dc:	4618      	mov	r0, r3
 80107de:	f001 fb9c 	bl	8011f1a <_ZN8touchgfx17AbstractPartitionD1Ev>
 80107e2:	687b      	ldr	r3, [r7, #4]
 80107e4:	4618      	mov	r0, r3
 80107e6:	3708      	adds	r7, #8
 80107e8:	46bd      	mov	sp, r7
 80107ea:	bd80      	pop	{r7, pc}
 80107ec:	0802f114 	.word	0x0802f114

080107f0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 80107f0:	b580      	push	{r7, lr}
 80107f2:	b082      	sub	sp, #8
 80107f4:	af00      	add	r7, sp, #0
 80107f6:	6078      	str	r0, [r7, #4]
 80107f8:	6878      	ldr	r0, [r7, #4]
 80107fa:	f7ff ffe7 	bl	80107cc <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 80107fe:	f242 4120 	movw	r1, #9248	; 0x2420
 8010802:	6878      	ldr	r0, [r7, #4]
 8010804:	f019 fda9 	bl	802a35a <_ZdlPvj>
 8010808:	687b      	ldr	r3, [r7, #4]
 801080a:	4618      	mov	r0, r3
 801080c:	3708      	adds	r7, #8
 801080e:	46bd      	mov	sp, r7
 8010810:	bd80      	pop	{r7, pc}
	...

08010814 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 8010814:	b580      	push	{r7, lr}
 8010816:	b082      	sub	sp, #8
 8010818:	af00      	add	r7, sp, #0
 801081a:	6078      	str	r0, [r7, #4]
 801081c:	4a05      	ldr	r2, [pc, #20]	; (8010834 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EED1Ev+0x20>)
 801081e:	687b      	ldr	r3, [r7, #4]
 8010820:	601a      	str	r2, [r3, #0]
 8010822:	687b      	ldr	r3, [r7, #4]
 8010824:	4618      	mov	r0, r3
 8010826:	f001 fb78 	bl	8011f1a <_ZN8touchgfx17AbstractPartitionD1Ev>
 801082a:	687b      	ldr	r3, [r7, #4]
 801082c:	4618      	mov	r0, r3
 801082e:	3708      	adds	r7, #8
 8010830:	46bd      	mov	sp, r7
 8010832:	bd80      	pop	{r7, pc}
 8010834:	0802f148 	.word	0x0802f148

08010838 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 8010838:	b580      	push	{r7, lr}
 801083a:	b082      	sub	sp, #8
 801083c:	af00      	add	r7, sp, #0
 801083e:	6078      	str	r0, [r7, #4]
 8010840:	6878      	ldr	r0, [r7, #4]
 8010842:	f7ff ffe7 	bl	8010814 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8010846:	2118      	movs	r1, #24
 8010848:	6878      	ldr	r0, [r7, #4]
 801084a:	f019 fd86 	bl	802a35a <_ZdlPvj>
 801084e:	687b      	ldr	r3, [r7, #4]
 8010850:	4618      	mov	r0, r3
 8010852:	3708      	adds	r7, #8
 8010854:	46bd      	mov	sp, r7
 8010856:	bd80      	pop	{r7, pc}

08010858 <_ZN8touchgfx8LCD16bppD1Ev>:
class LCD16bpp : public LCD
 8010858:	b580      	push	{r7, lr}
 801085a:	b082      	sub	sp, #8
 801085c:	af00      	add	r7, sp, #0
 801085e:	6078      	str	r0, [r7, #4]
 8010860:	4a05      	ldr	r2, [pc, #20]	; (8010878 <_ZN8touchgfx8LCD16bppD1Ev+0x20>)
 8010862:	687b      	ldr	r3, [r7, #4]
 8010864:	601a      	str	r2, [r3, #0]
 8010866:	687b      	ldr	r3, [r7, #4]
 8010868:	4618      	mov	r0, r3
 801086a:	f7ff fc9d 	bl	80101a8 <_ZN8touchgfx3LCDD1Ev>
 801086e:	687b      	ldr	r3, [r7, #4]
 8010870:	4618      	mov	r0, r3
 8010872:	3708      	adds	r7, #8
 8010874:	46bd      	mov	sp, r7
 8010876:	bd80      	pop	{r7, pc}
 8010878:	0803014c 	.word	0x0803014c

0801087c <_ZN8touchgfx8LCD16bppD0Ev>:
 801087c:	b580      	push	{r7, lr}
 801087e:	b082      	sub	sp, #8
 8010880:	af00      	add	r7, sp, #0
 8010882:	6078      	str	r0, [r7, #4]
 8010884:	6878      	ldr	r0, [r7, #4]
 8010886:	f7ff ffe7 	bl	8010858 <_ZN8touchgfx8LCD16bppD1Ev>
 801088a:	2188      	movs	r1, #136	; 0x88
 801088c:	6878      	ldr	r0, [r7, #4]
 801088e:	f019 fd64 	bl	802a35a <_ZdlPvj>
 8010892:	687b      	ldr	r3, [r7, #4]
 8010894:	4618      	mov	r0, r3
 8010896:	3708      	adds	r7, #8
 8010898:	46bd      	mov	sp, r7
 801089a:	bd80      	pop	{r7, pc}

0801089c <_Z41__static_initialization_and_destruction_0ii>:
 801089c:	b580      	push	{r7, lr}
 801089e:	b084      	sub	sp, #16
 80108a0:	af02      	add	r7, sp, #8
 80108a2:	6078      	str	r0, [r7, #4]
 80108a4:	6039      	str	r1, [r7, #0]
 80108a6:	687b      	ldr	r3, [r7, #4]
 80108a8:	2b01      	cmp	r3, #1
 80108aa:	d119      	bne.n	80108e0 <_Z41__static_initialization_and_destruction_0ii+0x44>
 80108ac:	683b      	ldr	r3, [r7, #0]
 80108ae:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80108b2:	4293      	cmp	r3, r2
 80108b4:	d114      	bne.n	80108e0 <_Z41__static_initialization_and_destruction_0ii+0x44>
static STM32TouchController tc;
 80108b6:	4818      	ldr	r0, [pc, #96]	; (8010918 <_Z41__static_initialization_and_destruction_0ii+0x7c>)
 80108b8:	f7ff fed8 	bl	801066c <_ZN20STM32TouchControllerC1Ev>
static STM32DMA dma;
 80108bc:	4817      	ldr	r0, [pc, #92]	; (801091c <_Z41__static_initialization_and_destruction_0ii+0x80>)
 80108be:	f7ff fb85 	bl	800ffcc <_ZN8STM32DMAC1Ev>
static LCD16bpp display;
 80108c2:	4817      	ldr	r0, [pc, #92]	; (8010920 <_Z41__static_initialization_and_destruction_0ii+0x84>)
 80108c4:	f010 f8d0 	bl	8020a68 <_ZN8touchgfx8LCD16bppC1Ev>
static TouchGFXHAL hal(dma, display, tc, 480, 320);
 80108c8:	f44f 73a0 	mov.w	r3, #320	; 0x140
 80108cc:	9301      	str	r3, [sp, #4]
 80108ce:	f44f 73f0 	mov.w	r3, #480	; 0x1e0
 80108d2:	9300      	str	r3, [sp, #0]
 80108d4:	4b10      	ldr	r3, [pc, #64]	; (8010918 <_Z41__static_initialization_and_destruction_0ii+0x7c>)
 80108d6:	4a12      	ldr	r2, [pc, #72]	; (8010920 <_Z41__static_initialization_and_destruction_0ii+0x84>)
 80108d8:	4910      	ldr	r1, [pc, #64]	; (801091c <_Z41__static_initialization_and_destruction_0ii+0x80>)
 80108da:	4812      	ldr	r0, [pc, #72]	; (8010924 <_Z41__static_initialization_and_destruction_0ii+0x88>)
 80108dc:	f7ff fe9a 	bl	8010614 <_ZN11TouchGFXHALC1ERN8touchgfx13DMA_InterfaceERNS0_3LCDERNS0_15TouchControllerEtt>
 80108e0:	687b      	ldr	r3, [r7, #4]
 80108e2:	2b00      	cmp	r3, #0
 80108e4:	d113      	bne.n	801090e <_Z41__static_initialization_and_destruction_0ii+0x72>
 80108e6:	683b      	ldr	r3, [r7, #0]
 80108e8:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80108ec:	4293      	cmp	r3, r2
 80108ee:	d10e      	bne.n	801090e <_Z41__static_initialization_and_destruction_0ii+0x72>
 80108f0:	480c      	ldr	r0, [pc, #48]	; (8010924 <_Z41__static_initialization_and_destruction_0ii+0x88>)
 80108f2:	f7ff f9d7 	bl	800fca4 <_ZN11TouchGFXHALD1Ev>
static ApplicationFontProvider fontProvider;
 80108f6:	480c      	ldr	r0, [pc, #48]	; (8010928 <_Z41__static_initialization_and_destruction_0ii+0x8c>)
 80108f8:	f7f9 fe8e 	bl	800a618 <_ZN23ApplicationFontProviderD1Ev>
static LCD16bpp display;
 80108fc:	4808      	ldr	r0, [pc, #32]	; (8010920 <_Z41__static_initialization_and_destruction_0ii+0x84>)
 80108fe:	f7ff ffab 	bl	8010858 <_ZN8touchgfx8LCD16bppD1Ev>
static STM32DMA dma;
 8010902:	4806      	ldr	r0, [pc, #24]	; (801091c <_Z41__static_initialization_and_destruction_0ii+0x80>)
 8010904:	f7ff fbb6 	bl	8010074 <_ZN8STM32DMAD1Ev>
static STM32TouchController tc;
 8010908:	4803      	ldr	r0, [pc, #12]	; (8010918 <_Z41__static_initialization_and_destruction_0ii+0x7c>)
 801090a:	f7fe ff13 	bl	800f734 <_ZN20STM32TouchControllerD1Ev>
}
 801090e:	bf00      	nop
 8010910:	3708      	adds	r7, #8
 8010912:	46bd      	mov	sp, r7
 8010914:	bd80      	pop	{r7, pc}
 8010916:	bf00      	nop
 8010918:	20002d10 	.word	0x20002d10
 801091c:	20002d14 	.word	0x20002d14
 8010920:	20002d58 	.word	0x20002d58
 8010924:	20002de4 	.word	0x20002de4
 8010928:	200000a8 	.word	0x200000a8

0801092c <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    {
        INTS_PR_ELEMENT = (sizeof(typename meta::select_type_maxsize<SupportedTypesList>::type) + sizeof(int) - 1) / sizeof(int),
        SIZE_OF_ELEMENT = INTS_PR_ELEMENT * sizeof(int)
    };

    virtual uint16_t capacity() const
 801092c:	b480      	push	{r7}
 801092e:	b083      	sub	sp, #12
 8010930:	af00      	add	r7, sp, #0
 8010932:	6078      	str	r0, [r7, #4]
    {
        return NUMBER_OF_ELEMENTS;
 8010934:	2301      	movs	r3, #1
    }
 8010936:	4618      	mov	r0, r3
 8010938:	370c      	adds	r7, #12
 801093a:	46bd      	mov	sp, r7
 801093c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010940:	4770      	bx	lr

08010942 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:

    virtual uint32_t element_size()
 8010942:	b480      	push	{r7}
 8010944:	b083      	sub	sp, #12
 8010946:	af00      	add	r7, sp, #0
 8010948:	6078      	str	r0, [r7, #4]
    {
        return sizeof(stBlocks[0]);
 801094a:	230c      	movs	r3, #12
    }
 801094c:	4618      	mov	r0, r3
 801094e:	370c      	adds	r7, #12
 8010950:	46bd      	mov	sp, r7
 8010952:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010956:	4770      	bx	lr

08010958 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE7elementEt>:

protected:
    virtual void* element(uint16_t index)
 8010958:	b480      	push	{r7}
 801095a:	b083      	sub	sp, #12
 801095c:	af00      	add	r7, sp, #0
 801095e:	6078      	str	r0, [r7, #4]
 8010960:	460b      	mov	r3, r1
 8010962:	807b      	strh	r3, [r7, #2]
    {
        return &stBlocks[index];
 8010964:	887a      	ldrh	r2, [r7, #2]
 8010966:	4613      	mov	r3, r2
 8010968:	005b      	lsls	r3, r3, #1
 801096a:	4413      	add	r3, r2
 801096c:	009b      	lsls	r3, r3, #2
 801096e:	3308      	adds	r3, #8
 8010970:	687a      	ldr	r2, [r7, #4]
 8010972:	4413      	add	r3, r2
    }
 8010974:	4618      	mov	r0, r3
 8010976:	370c      	adds	r7, #12
 8010978:	46bd      	mov	sp, r7
 801097a:	f85d 7b04 	ldr.w	r7, [sp], #4
 801097e:	4770      	bx	lr

08010980 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE7elementEt>:

    virtual const void* element(uint16_t index) const
 8010980:	b480      	push	{r7}
 8010982:	b083      	sub	sp, #12
 8010984:	af00      	add	r7, sp, #0
 8010986:	6078      	str	r0, [r7, #4]
 8010988:	460b      	mov	r3, r1
 801098a:	807b      	strh	r3, [r7, #2]
    {
        return &stBlocks[index];
 801098c:	887a      	ldrh	r2, [r7, #2]
 801098e:	4613      	mov	r3, r2
 8010990:	005b      	lsls	r3, r3, #1
 8010992:	4413      	add	r3, r2
 8010994:	009b      	lsls	r3, r3, #2
 8010996:	3308      	adds	r3, #8
 8010998:	687a      	ldr	r2, [r7, #4]
 801099a:	4413      	add	r3, r2
    }
 801099c:	4618      	mov	r0, r3
 801099e:	370c      	adds	r7, #12
 80109a0:	46bd      	mov	sp, r7
 80109a2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80109a6:	4770      	bx	lr

080109a8 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    virtual uint16_t capacity() const
 80109a8:	b480      	push	{r7}
 80109aa:	b083      	sub	sp, #12
 80109ac:	af00      	add	r7, sp, #0
 80109ae:	6078      	str	r0, [r7, #4]
        return NUMBER_OF_ELEMENTS;
 80109b0:	2301      	movs	r3, #1
    }
 80109b2:	4618      	mov	r0, r3
 80109b4:	370c      	adds	r7, #12
 80109b6:	46bd      	mov	sp, r7
 80109b8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80109bc:	4770      	bx	lr

080109be <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    virtual uint32_t element_size()
 80109be:	b480      	push	{r7}
 80109c0:	b083      	sub	sp, #12
 80109c2:	af00      	add	r7, sp, #0
 80109c4:	6078      	str	r0, [r7, #4]
        return sizeof(stBlocks[0]);
 80109c6:	f242 4318 	movw	r3, #9240	; 0x2418
    }
 80109ca:	4618      	mov	r0, r3
 80109cc:	370c      	adds	r7, #12
 80109ce:	46bd      	mov	sp, r7
 80109d0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80109d4:	4770      	bx	lr

080109d6 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
    virtual void* element(uint16_t index)
 80109d6:	b480      	push	{r7}
 80109d8:	b083      	sub	sp, #12
 80109da:	af00      	add	r7, sp, #0
 80109dc:	6078      	str	r0, [r7, #4]
 80109de:	460b      	mov	r3, r1
 80109e0:	807b      	strh	r3, [r7, #2]
        return &stBlocks[index];
 80109e2:	887b      	ldrh	r3, [r7, #2]
 80109e4:	f242 4218 	movw	r2, #9240	; 0x2418
 80109e8:	fb02 f303 	mul.w	r3, r2, r3
 80109ec:	3308      	adds	r3, #8
 80109ee:	687a      	ldr	r2, [r7, #4]
 80109f0:	4413      	add	r3, r2
    }
 80109f2:	4618      	mov	r0, r3
 80109f4:	370c      	adds	r7, #12
 80109f6:	46bd      	mov	sp, r7
 80109f8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80109fc:	4770      	bx	lr

080109fe <_ZNK8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
    virtual const void* element(uint16_t index) const
 80109fe:	b480      	push	{r7}
 8010a00:	b083      	sub	sp, #12
 8010a02:	af00      	add	r7, sp, #0
 8010a04:	6078      	str	r0, [r7, #4]
 8010a06:	460b      	mov	r3, r1
 8010a08:	807b      	strh	r3, [r7, #2]
        return &stBlocks[index];
 8010a0a:	887b      	ldrh	r3, [r7, #2]
 8010a0c:	f242 4218 	movw	r2, #9240	; 0x2418
 8010a10:	fb02 f303 	mul.w	r3, r2, r3
 8010a14:	3308      	adds	r3, #8
 8010a16:	687a      	ldr	r2, [r7, #4]
 8010a18:	4413      	add	r3, r2
    }
 8010a1a:	4618      	mov	r0, r3
 8010a1c:	370c      	adds	r7, #12
 8010a1e:	46bd      	mov	sp, r7
 8010a20:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010a24:	4770      	bx	lr

08010a26 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    virtual uint16_t capacity() const
 8010a26:	b480      	push	{r7}
 8010a28:	b083      	sub	sp, #12
 8010a2a:	af00      	add	r7, sp, #0
 8010a2c:	6078      	str	r0, [r7, #4]
        return NUMBER_OF_ELEMENTS;
 8010a2e:	2301      	movs	r3, #1
    }
 8010a30:	4618      	mov	r0, r3
 8010a32:	370c      	adds	r7, #12
 8010a34:	46bd      	mov	sp, r7
 8010a36:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010a3a:	4770      	bx	lr

08010a3c <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    virtual uint32_t element_size()
 8010a3c:	b480      	push	{r7}
 8010a3e:	b083      	sub	sp, #12
 8010a40:	af00      	add	r7, sp, #0
 8010a42:	6078      	str	r0, [r7, #4]
        return sizeof(stBlocks[0]);
 8010a44:	2310      	movs	r3, #16
    }
 8010a46:	4618      	mov	r0, r3
 8010a48:	370c      	adds	r7, #12
 8010a4a:	46bd      	mov	sp, r7
 8010a4c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010a50:	4770      	bx	lr

08010a52 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
    virtual void* element(uint16_t index)
 8010a52:	b480      	push	{r7}
 8010a54:	b083      	sub	sp, #12
 8010a56:	af00      	add	r7, sp, #0
 8010a58:	6078      	str	r0, [r7, #4]
 8010a5a:	460b      	mov	r3, r1
 8010a5c:	807b      	strh	r3, [r7, #2]
        return &stBlocks[index];
 8010a5e:	887b      	ldrh	r3, [r7, #2]
 8010a60:	011b      	lsls	r3, r3, #4
 8010a62:	3308      	adds	r3, #8
 8010a64:	687a      	ldr	r2, [r7, #4]
 8010a66:	4413      	add	r3, r2
    }
 8010a68:	4618      	mov	r0, r3
 8010a6a:	370c      	adds	r7, #12
 8010a6c:	46bd      	mov	sp, r7
 8010a6e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010a72:	4770      	bx	lr

08010a74 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
    virtual const void* element(uint16_t index) const
 8010a74:	b480      	push	{r7}
 8010a76:	b083      	sub	sp, #12
 8010a78:	af00      	add	r7, sp, #0
 8010a7a:	6078      	str	r0, [r7, #4]
 8010a7c:	460b      	mov	r3, r1
 8010a7e:	807b      	strh	r3, [r7, #2]
        return &stBlocks[index];
 8010a80:	887b      	ldrh	r3, [r7, #2]
 8010a82:	011b      	lsls	r3, r3, #4
 8010a84:	3308      	adds	r3, #8
 8010a86:	687a      	ldr	r2, [r7, #4]
 8010a88:	4413      	add	r3, r2
    }
 8010a8a:	4618      	mov	r0, r3
 8010a8c:	370c      	adds	r7, #12
 8010a8e:	46bd      	mov	sp, r7
 8010a90:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010a94:	4770      	bx	lr

08010a96 <_GLOBAL__sub_I_touchgfx_init>:
 8010a96:	b580      	push	{r7, lr}
 8010a98:	af00      	add	r7, sp, #0
 8010a9a:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8010a9e:	2001      	movs	r0, #1
 8010aa0:	f7ff fefc 	bl	801089c <_Z41__static_initialization_and_destruction_0ii>
 8010aa4:	bd80      	pop	{r7, pc}

08010aa6 <_GLOBAL__sub_D_touchgfx_init>:
 8010aa6:	b580      	push	{r7, lr}
 8010aa8:	af00      	add	r7, sp, #0
 8010aaa:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8010aae:	2000      	movs	r0, #0
 8010ab0:	f7ff fef4 	bl	801089c <_Z41__static_initialization_and_destruction_0ii>
 8010ab4:	bd80      	pop	{r7, pc}
	...

08010ab8 <_ZN8touchgfx20FrameBufferAllocatorD1Ev>:
     * transferred and ready to reuse.
     */
    virtual void freeBlockAfterTransfer() = 0;

    /** Finalizes an instance of the FrameBufferAllocator class. */
    virtual ~FrameBufferAllocator()
 8010ab8:	b480      	push	{r7}
 8010aba:	b083      	sub	sp, #12
 8010abc:	af00      	add	r7, sp, #0
 8010abe:	6078      	str	r0, [r7, #4]
    {
 8010ac0:	4a04      	ldr	r2, [pc, #16]	; (8010ad4 <_ZN8touchgfx20FrameBufferAllocatorD1Ev+0x1c>)
 8010ac2:	687b      	ldr	r3, [r7, #4]
 8010ac4:	601a      	str	r2, [r3, #0]
    }
 8010ac6:	687b      	ldr	r3, [r7, #4]
 8010ac8:	4618      	mov	r0, r3
 8010aca:	370c      	adds	r7, #12
 8010acc:	46bd      	mov	sp, r7
 8010ace:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010ad2:	4770      	bx	lr
 8010ad4:	0802f2a4 	.word	0x0802f2a4

08010ad8 <_ZN8touchgfx20FrameBufferAllocatorD0Ev>:
    virtual ~FrameBufferAllocator()
 8010ad8:	b580      	push	{r7, lr}
 8010ada:	b082      	sub	sp, #8
 8010adc:	af00      	add	r7, sp, #0
 8010ade:	6078      	str	r0, [r7, #4]
    }
 8010ae0:	6878      	ldr	r0, [r7, #4]
 8010ae2:	f7ff ffe9 	bl	8010ab8 <_ZN8touchgfx20FrameBufferAllocatorD1Ev>
 8010ae6:	2104      	movs	r1, #4
 8010ae8:	6878      	ldr	r0, [r7, #4]
 8010aea:	f019 fc36 	bl	802a35a <_ZdlPvj>
 8010aee:	687b      	ldr	r3, [r7, #4]
 8010af0:	4618      	mov	r0, r3
 8010af2:	3708      	adds	r7, #8
 8010af4:	46bd      	mov	sp, r7
 8010af6:	bd80      	pop	{r7, pc}

08010af8 <_ZN8touchgfx3HAL5vSyncEv>:
    void vSync()
 8010af8:	b480      	push	{r7}
 8010afa:	b083      	sub	sp, #12
 8010afc:	af00      	add	r7, sp, #0
 8010afe:	6078      	str	r0, [r7, #4]
        vSyncCnt++;
 8010b00:	687b      	ldr	r3, [r7, #4]
 8010b02:	f893 306a 	ldrb.w	r3, [r3, #106]	; 0x6a
 8010b06:	3301      	adds	r3, #1
 8010b08:	b2da      	uxtb	r2, r3
 8010b0a:	687b      	ldr	r3, [r7, #4]
 8010b0c:	f883 206a 	strb.w	r2, [r3, #106]	; 0x6a
    }
 8010b10:	bf00      	nop
 8010b12:	370c      	adds	r7, #12
 8010b14:	46bd      	mov	sp, r7
 8010b16:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010b1a:	4770      	bx	lr

08010b1c <_ZN8touchgfx3HAL23setFrameBufferAllocatorEPNS_20FrameBufferAllocatorE>:
    void setFrameBufferAllocator(FrameBufferAllocator* allocator)
 8010b1c:	b480      	push	{r7}
 8010b1e:	b083      	sub	sp, #12
 8010b20:	af00      	add	r7, sp, #0
 8010b22:	6078      	str	r0, [r7, #4]
 8010b24:	6039      	str	r1, [r7, #0]
        frameBufferAllocator = allocator;
 8010b26:	687b      	ldr	r3, [r7, #4]
 8010b28:	683a      	ldr	r2, [r7, #0]
 8010b2a:	619a      	str	r2, [r3, #24]
    }
 8010b2c:	bf00      	nop
 8010b2e:	370c      	adds	r7, #12
 8010b30:	46bd      	mov	sp, r7
 8010b32:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010b36:	4770      	bx	lr

08010b38 <_ZN8touchgfx3HAL23getFrameBufferAllocatorEv>:
    FrameBufferAllocator* getFrameBufferAllocator()
 8010b38:	b480      	push	{r7}
 8010b3a:	b083      	sub	sp, #12
 8010b3c:	af00      	add	r7, sp, #0
 8010b3e:	6078      	str	r0, [r7, #4]
        return frameBufferAllocator;
 8010b40:	687b      	ldr	r3, [r7, #4]
 8010b42:	699b      	ldr	r3, [r3, #24]
    }
 8010b44:	4618      	mov	r0, r3
 8010b46:	370c      	adds	r7, #12
 8010b48:	46bd      	mov	sp, r7
 8010b4a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010b4e:	4770      	bx	lr

08010b50 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE>:
    bool setFrameRefreshStrategy(FrameRefreshStrategy s)
 8010b50:	b580      	push	{r7, lr}
 8010b52:	b082      	sub	sp, #8
 8010b54:	af00      	add	r7, sp, #0
 8010b56:	6078      	str	r0, [r7, #4]
 8010b58:	460b      	mov	r3, r1
 8010b5a:	70fb      	strb	r3, [r7, #3]
        if (s == REFRESH_STRATEGY_DEFAULT || s == REFRESH_STRATEGY_PARTIAL_FRAMEBUFFER)
 8010b5c:	78fb      	ldrb	r3, [r7, #3]
 8010b5e:	2b00      	cmp	r3, #0
 8010b60:	d002      	beq.n	8010b68 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x18>
 8010b62:	78fb      	ldrb	r3, [r7, #3]
 8010b64:	2b02      	cmp	r3, #2
 8010b66:	d105      	bne.n	8010b74 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x24>
            refreshStrategy = s;
 8010b68:	687b      	ldr	r3, [r7, #4]
 8010b6a:	78fa      	ldrb	r2, [r7, #3]
 8010b6c:	f883 2048 	strb.w	r2, [r3, #72]	; 0x48
            return true;
 8010b70:	2301      	movs	r3, #1
 8010b72:	e027      	b.n	8010bc4 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x74>
        if (s == REFRESH_STRATEGY_OPTIM_SINGLE_BUFFER_TFT_CTRL)
 8010b74:	78fb      	ldrb	r3, [r7, #3]
 8010b76:	2b01      	cmp	r3, #1
 8010b78:	d123      	bne.n	8010bc2 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x72>
            if (taskDelayFunc != 0 && getTFTCurrentLine() != 0xFFFF && !USE_DOUBLE_BUFFERING)
 8010b7a:	687b      	ldr	r3, [r7, #4]
 8010b7c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8010b7e:	2b00      	cmp	r3, #0
 8010b80:	d014      	beq.n	8010bac <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x5c>
 8010b82:	687b      	ldr	r3, [r7, #4]
 8010b84:	681b      	ldr	r3, [r3, #0]
 8010b86:	339c      	adds	r3, #156	; 0x9c
 8010b88:	681b      	ldr	r3, [r3, #0]
 8010b8a:	6878      	ldr	r0, [r7, #4]
 8010b8c:	4798      	blx	r3
 8010b8e:	4603      	mov	r3, r0
 8010b90:	461a      	mov	r2, r3
 8010b92:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8010b96:	429a      	cmp	r2, r3
 8010b98:	d008      	beq.n	8010bac <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x5c>
 8010b9a:	4b0c      	ldr	r3, [pc, #48]	; (8010bcc <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x7c>)
 8010b9c:	781b      	ldrb	r3, [r3, #0]
 8010b9e:	f083 0301 	eor.w	r3, r3, #1
 8010ba2:	b2db      	uxtb	r3, r3
 8010ba4:	2b00      	cmp	r3, #0
 8010ba6:	d001      	beq.n	8010bac <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x5c>
 8010ba8:	2301      	movs	r3, #1
 8010baa:	e000      	b.n	8010bae <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x5e>
 8010bac:	2300      	movs	r3, #0
 8010bae:	2b00      	cmp	r3, #0
 8010bb0:	d005      	beq.n	8010bbe <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x6e>
                refreshStrategy = s;
 8010bb2:	687b      	ldr	r3, [r7, #4]
 8010bb4:	78fa      	ldrb	r2, [r7, #3]
 8010bb6:	f883 2048 	strb.w	r2, [r3, #72]	; 0x48
                return true;
 8010bba:	2301      	movs	r3, #1
 8010bbc:	e002      	b.n	8010bc4 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x74>
            return false;
 8010bbe:	2300      	movs	r3, #0
 8010bc0:	e000      	b.n	8010bc4 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x74>
        return false;
 8010bc2:	2300      	movs	r3, #0
    }
 8010bc4:	4618      	mov	r0, r3
 8010bc6:	3708      	adds	r7, #8
 8010bc8:	46bd      	mov	sp, r7
 8010bca:	bd80      	pop	{r7, pc}
 8010bcc:	20006c32 	.word	0x20006c32

08010bd0 <_ZN8touchgfx5paint8tearDownEv>:
{
    blendL8CLUT = data;
}

void tearDown()
{
 8010bd0:	b480      	push	{r7}
 8010bd2:	af00      	add	r7, sp, #0
}
 8010bd4:	bf00      	nop
 8010bd6:	46bd      	mov	sp, r7
 8010bd8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010bdc:	4770      	bx	lr
	...

08010be0 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm>:
{
    return ((color >> 8) & 0xF800) | ((color >> 5) & 0x07E0) | ((color >> 3) & 0x001F);
}

void lineFromColor(uint16_t* const ptr, const unsigned count, const uint32_t color, const uint8_t alpha, const uint32_t color565)
{
 8010be0:	b480      	push	{r7}
 8010be2:	b08b      	sub	sp, #44	; 0x2c
 8010be4:	af00      	add	r7, sp, #0
 8010be6:	60f8      	str	r0, [r7, #12]
 8010be8:	60b9      	str	r1, [r7, #8]
 8010bea:	607a      	str	r2, [r7, #4]
 8010bec:	70fb      	strb	r3, [r7, #3]
    uint16_t* framebuffer = ptr;
 8010bee:	68fb      	ldr	r3, [r7, #12]
 8010bf0:	627b      	str	r3, [r7, #36]	; 0x24
    const uint16_t* const lineEnd = framebuffer + count;
 8010bf2:	68bb      	ldr	r3, [r7, #8]
 8010bf4:	005b      	lsls	r3, r3, #1
 8010bf6:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8010bf8:	4413      	add	r3, r2
 8010bfa:	623b      	str	r3, [r7, #32]
    if (alpha == 0xFF)
 8010bfc:	78fb      	ldrb	r3, [r7, #3]
 8010bfe:	2bff      	cmp	r3, #255	; 0xff
 8010c00:	d110      	bne.n	8010c24 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x44>
    {
        do
        {
            *framebuffer = color565;
 8010c02:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8010c04:	b29a      	uxth	r2, r3
 8010c06:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8010c08:	801a      	strh	r2, [r3, #0]
        } while (++framebuffer < lineEnd);
 8010c0a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8010c0c:	3302      	adds	r3, #2
 8010c0e:	627b      	str	r3, [r7, #36]	; 0x24
 8010c10:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8010c12:	6a3b      	ldr	r3, [r7, #32]
 8010c14:	429a      	cmp	r2, r3
 8010c16:	bf34      	ite	cc
 8010c18:	2301      	movcc	r3, #1
 8010c1a:	2300      	movcs	r3, #0
 8010c1c:	b2db      	uxtb	r3, r3
 8010c1e:	2b00      	cmp	r3, #0
 8010c20:	d1ef      	bne.n	8010c02 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x22>
        do
        {
            *framebuffer = alphaBlend(color565, *framebuffer, alpha);
        } while (++framebuffer < lineEnd);
    }
}
 8010c22:	e077      	b.n	8010d14 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x134>
            *framebuffer = alphaBlend(color565, *framebuffer, alpha);
 8010c24:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8010c26:	b29a      	uxth	r2, r3
 8010c28:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8010c2a:	881b      	ldrh	r3, [r3, #0]
 8010c2c:	83fa      	strh	r2, [r7, #30]
 8010c2e:	83bb      	strh	r3, [r7, #28]
 8010c30:	78fb      	ldrb	r3, [r7, #3]
 8010c32:	76fb      	strb	r3, [r7, #27]
    return alphaBlend(newpix & RMASK, newpix & GMASK, newpix & BMASK, bufpix, alpha);
 8010c34:	8bfb      	ldrh	r3, [r7, #30]
 8010c36:	f423 63ff 	bic.w	r3, r3, #2040	; 0x7f8
 8010c3a:	f023 0307 	bic.w	r3, r3, #7
 8010c3e:	b299      	uxth	r1, r3
 8010c40:	8bfb      	ldrh	r3, [r7, #30]
 8010c42:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8010c46:	b29a      	uxth	r2, r3
 8010c48:	8bfb      	ldrh	r3, [r7, #30]
 8010c4a:	f003 031f 	and.w	r3, r3, #31
 8010c4e:	b29b      	uxth	r3, r3
 8010c50:	8339      	strh	r1, [r7, #24]
 8010c52:	82fa      	strh	r2, [r7, #22]
 8010c54:	82bb      	strh	r3, [r7, #20]
 8010c56:	8bbb      	ldrh	r3, [r7, #28]
 8010c58:	827b      	strh	r3, [r7, #18]
 8010c5a:	7efb      	ldrb	r3, [r7, #27]
 8010c5c:	747b      	strb	r3, [r7, #17]
    const uint8_t ialpha = 0xFF - alpha;
 8010c5e:	7c7b      	ldrb	r3, [r7, #17]
 8010c60:	43db      	mvns	r3, r3
 8010c62:	743b      	strb	r3, [r7, #16]
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 8010c64:	8b3b      	ldrh	r3, [r7, #24]
 8010c66:	7c7a      	ldrb	r2, [r7, #17]
 8010c68:	fb03 f202 	mul.w	r2, r3, r2
 8010c6c:	8a7b      	ldrh	r3, [r7, #18]
 8010c6e:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 8010c72:	7c39      	ldrb	r1, [r7, #16]
 8010c74:	fb01 f303 	mul.w	r3, r1, r3
 8010c78:	4413      	add	r3, r2
 8010c7a:	4a29      	ldr	r2, [pc, #164]	; (8010d20 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x140>)
 8010c7c:	fb82 1203 	smull	r1, r2, r2, r3
 8010c80:	441a      	add	r2, r3
 8010c82:	11d2      	asrs	r2, r2, #7
 8010c84:	17db      	asrs	r3, r3, #31
 8010c86:	1ad3      	subs	r3, r2, r3
 8010c88:	b21b      	sxth	r3, r3
 8010c8a:	f423 63ff 	bic.w	r3, r3, #2040	; 0x7f8
 8010c8e:	f023 0307 	bic.w	r3, r3, #7
 8010c92:	b21a      	sxth	r2, r3
           (((G * alpha + (bufpix & GMASK) * ialpha) / 255) & GMASK) |
 8010c94:	8afb      	ldrh	r3, [r7, #22]
 8010c96:	7c79      	ldrb	r1, [r7, #17]
 8010c98:	fb03 f101 	mul.w	r1, r3, r1
 8010c9c:	8a7b      	ldrh	r3, [r7, #18]
 8010c9e:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8010ca2:	7c38      	ldrb	r0, [r7, #16]
 8010ca4:	fb00 f303 	mul.w	r3, r0, r3
 8010ca8:	440b      	add	r3, r1
 8010caa:	491d      	ldr	r1, [pc, #116]	; (8010d20 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x140>)
 8010cac:	fb81 0103 	smull	r0, r1, r1, r3
 8010cb0:	4419      	add	r1, r3
 8010cb2:	11c9      	asrs	r1, r1, #7
 8010cb4:	17db      	asrs	r3, r3, #31
 8010cb6:	1acb      	subs	r3, r1, r3
 8010cb8:	b21b      	sxth	r3, r3
 8010cba:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8010cbe:	b21b      	sxth	r3, r3
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 8010cc0:	4313      	orrs	r3, r2
 8010cc2:	b21a      	sxth	r2, r3
           (((B * alpha + (bufpix & BMASK) * ialpha) / 255) & BMASK);
 8010cc4:	8abb      	ldrh	r3, [r7, #20]
 8010cc6:	7c79      	ldrb	r1, [r7, #17]
 8010cc8:	fb03 f101 	mul.w	r1, r3, r1
 8010ccc:	8a7b      	ldrh	r3, [r7, #18]
 8010cce:	f003 031f 	and.w	r3, r3, #31
 8010cd2:	7c38      	ldrb	r0, [r7, #16]
 8010cd4:	fb00 f303 	mul.w	r3, r0, r3
 8010cd8:	440b      	add	r3, r1
 8010cda:	4911      	ldr	r1, [pc, #68]	; (8010d20 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x140>)
 8010cdc:	fb81 0103 	smull	r0, r1, r1, r3
 8010ce0:	4419      	add	r1, r3
 8010ce2:	11c9      	asrs	r1, r1, #7
 8010ce4:	17db      	asrs	r3, r3, #31
 8010ce6:	1acb      	subs	r3, r1, r3
 8010ce8:	b21b      	sxth	r3, r3
 8010cea:	f003 031f 	and.w	r3, r3, #31
 8010cee:	b21b      	sxth	r3, r3
           (((G * alpha + (bufpix & GMASK) * ialpha) / 255) & GMASK) |
 8010cf0:	4313      	orrs	r3, r2
 8010cf2:	b21b      	sxth	r3, r3
           (((B * alpha + (bufpix & BMASK) * ialpha) / 255) & BMASK);
 8010cf4:	b29a      	uxth	r2, r3
    return alphaBlend(newpix & RMASK, newpix & GMASK, newpix & BMASK, bufpix, alpha);
 8010cf6:	bf00      	nop
            *framebuffer = alphaBlend(color565, *framebuffer, alpha);
 8010cf8:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8010cfa:	801a      	strh	r2, [r3, #0]
        } while (++framebuffer < lineEnd);
 8010cfc:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8010cfe:	3302      	adds	r3, #2
 8010d00:	627b      	str	r3, [r7, #36]	; 0x24
 8010d02:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8010d04:	6a3b      	ldr	r3, [r7, #32]
 8010d06:	429a      	cmp	r2, r3
 8010d08:	bf34      	ite	cc
 8010d0a:	2301      	movcc	r3, #1
 8010d0c:	2300      	movcs	r3, #0
 8010d0e:	b2db      	uxtb	r3, r3
 8010d10:	2b00      	cmp	r3, #0
 8010d12:	d187      	bne.n	8010c24 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x44>
}
 8010d14:	bf00      	nop
 8010d16:	372c      	adds	r7, #44	; 0x2c
 8010d18:	46bd      	mov	sp, r7
 8010d1a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010d1e:	4770      	bx	lr
 8010d20:	80808081 	.word	0x80808081

08010d24 <_ZN20TouchGFXGeneratedHAL10initializeEv>:
       3, /* number of blocks */
       2 /* bytes per pixel */
       > blockAllocator;

void TouchGFXGeneratedHAL::initialize()
{
 8010d24:	b5b0      	push	{r4, r5, r7, lr}
 8010d26:	b082      	sub	sp, #8
 8010d28:	af00      	add	r7, sp, #0
 8010d2a:	6078      	str	r0, [r7, #4]
    HAL::initialize();
 8010d2c:	687b      	ldr	r3, [r7, #4]
 8010d2e:	4618      	mov	r0, r3
 8010d30:	f001 ff15 	bl	8012b5e <_ZN8touchgfx3HAL10initializeEv>
    registerEventListener(*(Application::getInstance()));
 8010d34:	687d      	ldr	r5, [r7, #4]
 8010d36:	687b      	ldr	r3, [r7, #4]
 8010d38:	681b      	ldr	r3, [r3, #0]
 8010d3a:	3364      	adds	r3, #100	; 0x64
 8010d3c:	681c      	ldr	r4, [r3, #0]
 8010d3e:	f007 fc0d 	bl	801855c <_ZN8touchgfx11Application11getInstanceEv>
 8010d42:	4603      	mov	r3, r0
 8010d44:	4619      	mov	r1, r3
 8010d46:	4628      	mov	r0, r5
 8010d48:	47a0      	blx	r4
    enableLCDControllerInterrupt();
 8010d4a:	687b      	ldr	r3, [r7, #4]
 8010d4c:	681b      	ldr	r3, [r3, #0]
 8010d4e:	3380      	adds	r3, #128	; 0x80
 8010d50:	681b      	ldr	r3, [r3, #0]
 8010d52:	6878      	ldr	r0, [r7, #4]
 8010d54:	4798      	blx	r3
    enableInterrupts();
 8010d56:	687b      	ldr	r3, [r7, #4]
 8010d58:	681b      	ldr	r3, [r3, #0]
 8010d5a:	3378      	adds	r3, #120	; 0x78
 8010d5c:	681b      	ldr	r3, [r3, #0]
 8010d5e:	6878      	ldr	r0, [r7, #4]
 8010d60:	4798      	blx	r3
    // Partial framebuffer strategy
    setFrameBufferAllocator(&blockAllocator);
 8010d62:	687b      	ldr	r3, [r7, #4]
 8010d64:	4906      	ldr	r1, [pc, #24]	; (8010d80 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x5c>)
 8010d66:	4618      	mov	r0, r3
 8010d68:	f7ff fed8 	bl	8010b1c <_ZN8touchgfx3HAL23setFrameBufferAllocatorEPNS_20FrameBufferAllocatorE>
    setFrameRefreshStrategy(HAL::REFRESH_STRATEGY_PARTIAL_FRAMEBUFFER);
 8010d6c:	687b      	ldr	r3, [r7, #4]
 8010d6e:	2102      	movs	r1, #2
 8010d70:	4618      	mov	r0, r3
 8010d72:	f7ff feed 	bl	8010b50 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE>
}
 8010d76:	bf00      	nop
 8010d78:	3708      	adds	r7, #8
 8010d7a:	46bd      	mov	sp, r7
 8010d7c:	bdb0      	pop	{r4, r5, r7, pc}
 8010d7e:	bf00      	nop
 8010d80:	20002e60 	.word	0x20002e60

08010d84 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>:

void TouchGFXGeneratedHAL::configureInterrupts()
{
 8010d84:	b480      	push	{r7}
 8010d86:	b083      	sub	sp, #12
 8010d88:	af00      	add	r7, sp, #0
 8010d8a:	6078      	str	r0, [r7, #4]
}
 8010d8c:	bf00      	nop
 8010d8e:	370c      	adds	r7, #12
 8010d90:	46bd      	mov	sp, r7
 8010d92:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010d96:	4770      	bx	lr

08010d98 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>:

void TouchGFXGeneratedHAL::enableInterrupts()
{
 8010d98:	b480      	push	{r7}
 8010d9a:	b083      	sub	sp, #12
 8010d9c:	af00      	add	r7, sp, #0
 8010d9e:	6078      	str	r0, [r7, #4]
}
 8010da0:	bf00      	nop
 8010da2:	370c      	adds	r7, #12
 8010da4:	46bd      	mov	sp, r7
 8010da6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010daa:	4770      	bx	lr

08010dac <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>:

void TouchGFXGeneratedHAL::disableInterrupts()
{
 8010dac:	b480      	push	{r7}
 8010dae:	b083      	sub	sp, #12
 8010db0:	af00      	add	r7, sp, #0
 8010db2:	6078      	str	r0, [r7, #4]
}
 8010db4:	bf00      	nop
 8010db6:	370c      	adds	r7, #12
 8010db8:	46bd      	mov	sp, r7
 8010dba:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010dbe:	4770      	bx	lr

08010dc0 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>:

void TouchGFXGeneratedHAL::enableLCDControllerInterrupt()
{
 8010dc0:	b480      	push	{r7}
 8010dc2:	b083      	sub	sp, #12
 8010dc4:	af00      	add	r7, sp, #0
 8010dc6:	6078      	str	r0, [r7, #4]
}
 8010dc8:	bf00      	nop
 8010dca:	370c      	adds	r7, #12
 8010dcc:	46bd      	mov	sp, r7
 8010dce:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010dd2:	4770      	bx	lr

08010dd4 <_ZN20TouchGFXGeneratedHAL10beginFrameEv>:

bool TouchGFXGeneratedHAL::beginFrame()
{
 8010dd4:	b580      	push	{r7, lr}
 8010dd6:	b082      	sub	sp, #8
 8010dd8:	af00      	add	r7, sp, #0
 8010dda:	6078      	str	r0, [r7, #4]
    return HAL::beginFrame();
 8010ddc:	687b      	ldr	r3, [r7, #4]
 8010dde:	4618      	mov	r0, r3
 8010de0:	f001 fea4 	bl	8012b2c <_ZN8touchgfx3HAL10beginFrameEv>
 8010de4:	4603      	mov	r3, r0
}
 8010de6:	4618      	mov	r0, r3
 8010de8:	3708      	adds	r7, #8
 8010dea:	46bd      	mov	sp, r7
 8010dec:	bd80      	pop	{r7, pc}

08010dee <_ZN20TouchGFXGeneratedHAL8endFrameEv>:

void TouchGFXGeneratedHAL::endFrame()
{
 8010dee:	b580      	push	{r7, lr}
 8010df0:	b082      	sub	sp, #8
 8010df2:	af00      	add	r7, sp, #0
 8010df4:	6078      	str	r0, [r7, #4]
    // We must guard the next frame until we're done transferring all blocks over our display interface
    // through either a semaphore if user is running an OS or a simple variable if not
    // Wait until all blocks have been transmitted
    while (touchgfxDisplayDriverTransmitActive()){}
 8010df6:	bf00      	nop
 8010df8:	f7fe ff76 	bl	800fce8 <touchgfxDisplayDriverTransmitActive>
 8010dfc:	4603      	mov	r3, r0
 8010dfe:	2b00      	cmp	r3, #0
 8010e00:	bf14      	ite	ne
 8010e02:	2301      	movne	r3, #1
 8010e04:	2300      	moveq	r3, #0
 8010e06:	b2db      	uxtb	r3, r3
 8010e08:	2b00      	cmp	r3, #0
 8010e0a:	d1f5      	bne.n	8010df8 <_ZN20TouchGFXGeneratedHAL8endFrameEv+0xa>

    HAL::endFrame();
 8010e0c:	687b      	ldr	r3, [r7, #4]
 8010e0e:	4618      	mov	r0, r3
 8010e10:	f001 fe98 	bl	8012b44 <_ZN8touchgfx3HAL8endFrameEv>
    touchgfx::OSWrappers::signalRenderingDone();
 8010e14:	f7ff f812 	bl	800fe3c <_ZN8touchgfx10OSWrappers19signalRenderingDoneEv>
}
 8010e18:	bf00      	nop
 8010e1a:	3708      	adds	r7, #8
 8010e1c:	46bd      	mov	sp, r7
 8010e1e:	bd80      	pop	{r7, pc}

08010e20 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>:
    fbPtr += rect.y * lcd().framebufferStride() + rect.x * 2;
    return fbPtr;
}

uint16_t* TouchGFXGeneratedHAL::getTFTFrameBuffer() const
{
 8010e20:	b480      	push	{r7}
 8010e22:	b083      	sub	sp, #12
 8010e24:	af00      	add	r7, sp, #0
 8010e26:	6078      	str	r0, [r7, #4]
    //getTFTFrameBuffer() not used for selected Frame Buffer Strategy
    return 0;
 8010e28:	2300      	movs	r3, #0
}
 8010e2a:	4618      	mov	r0, r3
 8010e2c:	370c      	adds	r7, #12
 8010e2e:	46bd      	mov	sp, r7
 8010e30:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010e34:	4770      	bx	lr

08010e36 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>:

void TouchGFXGeneratedHAL::setTFTFrameBuffer(uint16_t* adr)
{
 8010e36:	b480      	push	{r7}
 8010e38:	b083      	sub	sp, #12
 8010e3a:	af00      	add	r7, sp, #0
 8010e3c:	6078      	str	r0, [r7, #4]
 8010e3e:	6039      	str	r1, [r7, #0]
    //setTFTFrameBuffer() not used for selected display interface
}
 8010e40:	bf00      	nop
 8010e42:	370c      	adds	r7, #12
 8010e44:	46bd      	mov	sp, r7
 8010e46:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010e4a:	4770      	bx	lr

08010e4c <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>:

void TouchGFXGeneratedHAL::flushFrameBuffer(const touchgfx::Rect& rect)
{
 8010e4c:	b580      	push	{r7, lr}
 8010e4e:	b088      	sub	sp, #32
 8010e50:	af02      	add	r7, sp, #8
 8010e52:	6078      	str	r0, [r7, #4]
 8010e54:	6039      	str	r1, [r7, #0]
    HAL::flushFrameBuffer(rect);
 8010e56:	687b      	ldr	r3, [r7, #4]
 8010e58:	6839      	ldr	r1, [r7, #0]
 8010e5a:	4618      	mov	r0, r3
 8010e5c:	f001 fe30 	bl	8012ac0 <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>
    // Once flushFrameBuffer() is called by the framework a block is already for transfer
    // Mark it ready for transfer and transmit it if user defined method isTransmittingData() does not return false
    // If data is not being transmitted, transfer the data with user defined method transmitFrameBufferBlock().
    frameBufferAllocator->markBlockReadyForTransfer();
 8010e60:	687b      	ldr	r3, [r7, #4]
 8010e62:	699a      	ldr	r2, [r3, #24]
 8010e64:	687b      	ldr	r3, [r7, #4]
 8010e66:	699b      	ldr	r3, [r3, #24]
 8010e68:	681b      	ldr	r3, [r3, #0]
 8010e6a:	3304      	adds	r3, #4
 8010e6c:	681b      	ldr	r3, [r3, #0]
 8010e6e:	4610      	mov	r0, r2
 8010e70:	4798      	blx	r3
    if (!touchgfxDisplayDriverTransmitActive())
 8010e72:	f7fe ff39 	bl	800fce8 <touchgfxDisplayDriverTransmitActive>
 8010e76:	4603      	mov	r3, r0
 8010e78:	2b00      	cmp	r3, #0
 8010e7a:	bf0c      	ite	eq
 8010e7c:	2301      	moveq	r3, #1
 8010e7e:	2300      	movne	r3, #0
 8010e80:	b2db      	uxtb	r3, r3
 8010e82:	2b00      	cmp	r3, #0
 8010e84:	d021      	beq.n	8010eca <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE+0x7e>
    {
        touchgfx::Rect r;
 8010e86:	f107 030c 	add.w	r3, r7, #12
 8010e8a:	4618      	mov	r0, r3
 8010e8c:	f7fa fcd9 	bl	800b842 <_ZN8touchgfx4RectC1Ev>
        // Get pointer to block buffer and coordinates of the rect
        const uint8_t* pixels = frameBufferAllocator->getBlockForTransfer(r);
 8010e90:	687b      	ldr	r3, [r7, #4]
 8010e92:	699a      	ldr	r2, [r3, #24]
 8010e94:	687b      	ldr	r3, [r7, #4]
 8010e96:	699b      	ldr	r3, [r3, #24]
 8010e98:	681b      	ldr	r3, [r3, #0]
 8010e9a:	330c      	adds	r3, #12
 8010e9c:	681b      	ldr	r3, [r3, #0]
 8010e9e:	f107 010c 	add.w	r1, r7, #12
 8010ea2:	4610      	mov	r0, r2
 8010ea4:	4798      	blx	r3
 8010ea6:	6178      	str	r0, [r7, #20]
        // Start transmission of the block
        touchgfxDisplayDriverTransmitBlock((uint8_t*)pixels, r.x, r.y, r.width, r.height);
 8010ea8:	f9b7 300c 	ldrsh.w	r3, [r7, #12]
 8010eac:	b299      	uxth	r1, r3
 8010eae:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 8010eb2:	b29a      	uxth	r2, r3
 8010eb4:	f9b7 3010 	ldrsh.w	r3, [r7, #16]
 8010eb8:	b298      	uxth	r0, r3
 8010eba:	f9b7 3012 	ldrsh.w	r3, [r7, #18]
 8010ebe:	b29b      	uxth	r3, r3
 8010ec0:	9300      	str	r3, [sp, #0]
 8010ec2:	4603      	mov	r3, r0
 8010ec4:	6978      	ldr	r0, [r7, #20]
 8010ec6:	f7fe ff1b 	bl	800fd00 <touchgfxDisplayDriverTransmitBlock>
    }
}
 8010eca:	bf00      	nop
 8010ecc:	3718      	adds	r7, #24
 8010ece:	46bd      	mov	sp, r7
 8010ed0:	bd80      	pop	{r7, pc}

08010ed2 <_ZN20TouchGFXGeneratedHAL9blockCopyEPvPKvm>:

bool TouchGFXGeneratedHAL::blockCopy(void* RESTRICT dest, const void* RESTRICT src, uint32_t numBytes)
{
 8010ed2:	b580      	push	{r7, lr}
 8010ed4:	b084      	sub	sp, #16
 8010ed6:	af00      	add	r7, sp, #0
 8010ed8:	60f8      	str	r0, [r7, #12]
 8010eda:	60b9      	str	r1, [r7, #8]
 8010edc:	607a      	str	r2, [r7, #4]
 8010ede:	603b      	str	r3, [r7, #0]
    return HAL::blockCopy(dest, src, numBytes);
 8010ee0:	68f8      	ldr	r0, [r7, #12]
 8010ee2:	683b      	ldr	r3, [r7, #0]
 8010ee4:	687a      	ldr	r2, [r7, #4]
 8010ee6:	68b9      	ldr	r1, [r7, #8]
 8010ee8:	f001 ff5b 	bl	8012da2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm>
 8010eec:	4603      	mov	r3, r0
}
 8010eee:	4618      	mov	r0, r3
 8010ef0:	3710      	adds	r7, #16
 8010ef2:	46bd      	mov	sp, r7
 8010ef4:	bd80      	pop	{r7, pc}

08010ef6 <_ZN8touchgfx34FrameBufferAllocatorWaitOnTransferEv>:
/**
 * This function is called by FrameBufferAllocator if no block is
 * available.
 */
void FrameBufferAllocatorWaitOnTransfer()
{
 8010ef6:	b480      	push	{r7}
 8010ef8:	af00      	add	r7, sp, #0
    /* NOTE: This function should not be modified, when the fuction is needed,
     *       FrameBufferAllocatorWaitOnTransfer should be implemented in the user file
     */
}
 8010efa:	bf00      	nop
 8010efc:	46bd      	mov	sp, r7
 8010efe:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010f02:	4770      	bx	lr

08010f04 <_ZN8touchgfx36FrameBufferAllocatorSignalBlockDrawnEv>:
 * Called by FrameBufferAllocator when a block is drawn and
 * therefore ready for transfer. The LCD driver should use this
 * method to start a transfer.
 */
void FrameBufferAllocatorSignalBlockDrawn()
{
 8010f04:	b480      	push	{r7}
 8010f06:	af00      	add	r7, sp, #0
    /* NOTE: This function should not be modified, when the fuction is needed,
     *       FrameBufferAllocatorSignalBlockDrawn should be implemented in the user file
     */
}
 8010f08:	bf00      	nop
 8010f0a:	46bd      	mov	sp, r7
 8010f0c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010f10:	4770      	bx	lr

08010f12 <_ZN8touchgfx16startNewTransferEv>:

// A user must call touchgfx::startNewTransfer(); once transmitFrameBufferBlock() has successfully sent a block.
void startNewTransfer()
{
 8010f12:	b580      	push	{r7, lr}
 8010f14:	b086      	sub	sp, #24
 8010f16:	af02      	add	r7, sp, #8
    FrameBufferAllocator* fba = HAL::getInstance()->getFrameBufferAllocator();
 8010f18:	f7f9 ffec 	bl	800aef4 <_ZN8touchgfx3HAL11getInstanceEv>
 8010f1c:	4603      	mov	r3, r0
 8010f1e:	4618      	mov	r0, r3
 8010f20:	f7ff fe0a 	bl	8010b38 <_ZN8touchgfx3HAL23getFrameBufferAllocatorEv>
 8010f24:	60f8      	str	r0, [r7, #12]

    // Free the previous transmitted block, marking it ready for rendering
    fba->freeBlockAfterTransfer();
 8010f26:	68fb      	ldr	r3, [r7, #12]
 8010f28:	681b      	ldr	r3, [r3, #0]
 8010f2a:	3318      	adds	r3, #24
 8010f2c:	681b      	ldr	r3, [r3, #0]
 8010f2e:	68f8      	ldr	r0, [r7, #12]
 8010f30:	4798      	blx	r3
    if (fba->hasBlockReadyForTransfer())
 8010f32:	68fb      	ldr	r3, [r7, #12]
 8010f34:	681b      	ldr	r3, [r3, #0]
 8010f36:	3308      	adds	r3, #8
 8010f38:	681b      	ldr	r3, [r3, #0]
 8010f3a:	68f8      	ldr	r0, [r7, #12]
 8010f3c:	4798      	blx	r3
 8010f3e:	4603      	mov	r3, r0
 8010f40:	2b00      	cmp	r3, #0
 8010f42:	d01d      	beq.n	8010f80 <_ZN8touchgfx16startNewTransferEv+0x6e>
    {
        touchgfx::Rect r;
 8010f44:	463b      	mov	r3, r7
 8010f46:	4618      	mov	r0, r3
 8010f48:	f7fa fc7b 	bl	800b842 <_ZN8touchgfx4RectC1Ev>
        // Get pointer to block buffer and coordinates of the rect
        const uint8_t* pixels = fba->getBlockForTransfer(r);
 8010f4c:	68fb      	ldr	r3, [r7, #12]
 8010f4e:	681b      	ldr	r3, [r3, #0]
 8010f50:	330c      	adds	r3, #12
 8010f52:	681b      	ldr	r3, [r3, #0]
 8010f54:	463a      	mov	r2, r7
 8010f56:	4611      	mov	r1, r2
 8010f58:	68f8      	ldr	r0, [r7, #12]
 8010f5a:	4798      	blx	r3
 8010f5c:	60b8      	str	r0, [r7, #8]
        // Start transmission of the block
        touchgfxDisplayDriverTransmitBlock((uint8_t*)pixels, r.x, r.y, r.width, r.height);
 8010f5e:	f9b7 3000 	ldrsh.w	r3, [r7]
 8010f62:	b299      	uxth	r1, r3
 8010f64:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
 8010f68:	b29a      	uxth	r2, r3
 8010f6a:	f9b7 3004 	ldrsh.w	r3, [r7, #4]
 8010f6e:	b298      	uxth	r0, r3
 8010f70:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 8010f74:	b29b      	uxth	r3, r3
 8010f76:	9300      	str	r3, [sp, #0]
 8010f78:	4603      	mov	r3, r0
 8010f7a:	68b8      	ldr	r0, [r7, #8]
 8010f7c:	f7fe fec0 	bl	800fd00 <touchgfxDisplayDriverTransmitBlock>
    }
}
 8010f80:	bf00      	nop
 8010f82:	3710      	adds	r7, #16
 8010f84:	46bd      	mov	sp, r7
 8010f86:	bd80      	pop	{r7, pc}

08010f88 <DisplayDriver_TransferCompleteCallback>:

extern "C"
void DisplayDriver_TransferCompleteCallback()
{
 8010f88:	b580      	push	{r7, lr}
 8010f8a:	af00      	add	r7, sp, #0
    // After completed transmission start new transfer if blocks are ready.
    touchgfx::startNewTransfer();
 8010f8c:	f7ff ffc1 	bl	8010f12 <_ZN8touchgfx16startNewTransferEv>
}
 8010f90:	bf00      	nop
 8010f92:	bd80      	pop	{r7, pc}

08010f94 <touchgfxSignalVSync>:
}

extern "C"
void touchgfxSignalVSync(void)
{
 8010f94:	b580      	push	{r7, lr}
 8010f96:	af00      	add	r7, sp, #0
    /* VSync has occurred, increment TouchGFX engine vsync counter */
    touchgfx::HAL::getInstance()->vSync();
 8010f98:	f7f9 ffac 	bl	800aef4 <_ZN8touchgfx3HAL11getInstanceEv>
 8010f9c:	4603      	mov	r3, r0
 8010f9e:	4618      	mov	r0, r3
 8010fa0:	f7ff fdaa 	bl	8010af8 <_ZN8touchgfx3HAL5vSyncEv>

    /* VSync has occurred, signal TouchGFX engine */
    touchgfx::OSWrappers::signalVSync();
 8010fa4:	f7fe ff3e 	bl	800fe24 <_ZN8touchgfx10OSWrappers11signalVSyncEv>
}
 8010fa8:	bf00      	nop
 8010faa:	bd80      	pop	{r7, pc}

08010fac <_ZN8touchgfx20FrameBufferAllocatorC1Ev>:
class FrameBufferAllocator
 8010fac:	b480      	push	{r7}
 8010fae:	b083      	sub	sp, #12
 8010fb0:	af00      	add	r7, sp, #0
 8010fb2:	6078      	str	r0, [r7, #4]
 8010fb4:	4a04      	ldr	r2, [pc, #16]	; (8010fc8 <_ZN8touchgfx20FrameBufferAllocatorC1Ev+0x1c>)
 8010fb6:	687b      	ldr	r3, [r7, #4]
 8010fb8:	601a      	str	r2, [r3, #0]
 8010fba:	687b      	ldr	r3, [r7, #4]
 8010fbc:	4618      	mov	r0, r3
 8010fbe:	370c      	adds	r7, #12
 8010fc0:	46bd      	mov	sp, r7
 8010fc2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010fc6:	4770      	bx	lr
 8010fc8:	0802f2a4 	.word	0x0802f2a4

08010fcc <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EEC1Ev>:
 */
template <uint32_t block_size, uint32_t blocks, uint32_t bytes_pr_pixel>
class ManyBlockAllocator : public FrameBufferAllocator
{
public:
    ManyBlockAllocator()
 8010fcc:	b5b0      	push	{r4, r5, r7, lr}
 8010fce:	b084      	sub	sp, #16
 8010fd0:	af00      	add	r7, sp, #0
 8010fd2:	6078      	str	r0, [r7, #4]
    {
 8010fd4:	687b      	ldr	r3, [r7, #4]
 8010fd6:	4618      	mov	r0, r3
 8010fd8:	f7ff ffe8 	bl	8010fac <_ZN8touchgfx20FrameBufferAllocatorC1Ev>
 8010fdc:	4a1a      	ldr	r2, [pc, #104]	; (8011048 <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EEC1Ev+0x7c>)
 8010fde:	687b      	ldr	r3, [r7, #4]
 8010fe0:	601a      	str	r2, [r3, #0]
 8010fe2:	687b      	ldr	r3, [r7, #4]
 8010fe4:	f503 5307 	add.w	r3, r3, #8640	; 0x21c0
 8010fe8:	3308      	adds	r3, #8
 8010fea:	2402      	movs	r4, #2
 8010fec:	461d      	mov	r5, r3
 8010fee:	e004      	b.n	8010ffa <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EEC1Ev+0x2e>
 8010ff0:	4628      	mov	r0, r5
 8010ff2:	f7fa fc26 	bl	800b842 <_ZN8touchgfx4RectC1Ev>
 8010ff6:	3508      	adds	r5, #8
 8010ff8:	3c01      	subs	r4, #1
 8010ffa:	2c00      	cmp	r4, #0
 8010ffc:	daf8      	bge.n	8010ff0 <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EEC1Ev+0x24>
        sendingBlock = -1;
 8010ffe:	687b      	ldr	r3, [r7, #4]
 8011000:	f503 5300 	add.w	r3, r3, #8192	; 0x2000
 8011004:	461a      	mov	r2, r3
 8011006:	f04f 33ff 	mov.w	r3, #4294967295
 801100a:	f8c2 31e0 	str.w	r3, [r2, #480]	; 0x1e0
        drawingBlock = -1;
 801100e:	687b      	ldr	r3, [r7, #4]
 8011010:	f503 5300 	add.w	r3, r3, #8192	; 0x2000
 8011014:	461a      	mov	r2, r3
 8011016:	f04f 33ff 	mov.w	r3, #4294967295
 801101a:	f8c2 31e4 	str.w	r3, [r2, #484]	; 0x1e4
        for (uint32_t i = 0; i < blocks; i++)
 801101e:	2300      	movs	r3, #0
 8011020:	60fb      	str	r3, [r7, #12]
 8011022:	e008      	b.n	8011036 <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EEC1Ev+0x6a>
        {
            state[i] = EMPTY;
 8011024:	687a      	ldr	r2, [r7, #4]
 8011026:	68fb      	ldr	r3, [r7, #12]
 8011028:	4413      	add	r3, r2
 801102a:	3304      	adds	r3, #4
 801102c:	2200      	movs	r2, #0
 801102e:	701a      	strb	r2, [r3, #0]
        for (uint32_t i = 0; i < blocks; i++)
 8011030:	68fb      	ldr	r3, [r7, #12]
 8011032:	3301      	adds	r3, #1
 8011034:	60fb      	str	r3, [r7, #12]
 8011036:	68fb      	ldr	r3, [r7, #12]
 8011038:	2b02      	cmp	r3, #2
 801103a:	d9f3      	bls.n	8011024 <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EEC1Ev+0x58>
        }
    }
 801103c:	687b      	ldr	r3, [r7, #4]
 801103e:	4618      	mov	r0, r3
 8011040:	3710      	adds	r7, #16
 8011042:	46bd      	mov	sp, r7
 8011044:	bdb0      	pop	{r4, r5, r7, pc}
 8011046:	bf00      	nop
 8011048:	0802f1a0 	.word	0x0802f1a0

0801104c <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EED1Ev>:
class ManyBlockAllocator : public FrameBufferAllocator
 801104c:	b580      	push	{r7, lr}
 801104e:	b082      	sub	sp, #8
 8011050:	af00      	add	r7, sp, #0
 8011052:	6078      	str	r0, [r7, #4]
 8011054:	4a05      	ldr	r2, [pc, #20]	; (801106c <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EED1Ev+0x20>)
 8011056:	687b      	ldr	r3, [r7, #4]
 8011058:	601a      	str	r2, [r3, #0]
 801105a:	687b      	ldr	r3, [r7, #4]
 801105c:	4618      	mov	r0, r3
 801105e:	f7ff fd2b 	bl	8010ab8 <_ZN8touchgfx20FrameBufferAllocatorD1Ev>
 8011062:	687b      	ldr	r3, [r7, #4]
 8011064:	4618      	mov	r0, r3
 8011066:	3708      	adds	r7, #8
 8011068:	46bd      	mov	sp, r7
 801106a:	bd80      	pop	{r7, pc}
 801106c:	0802f1a0 	.word	0x0802f1a0

08011070 <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EED0Ev>:
 8011070:	b580      	push	{r7, lr}
 8011072:	b082      	sub	sp, #8
 8011074:	af00      	add	r7, sp, #0
 8011076:	6078      	str	r0, [r7, #4]
 8011078:	6878      	ldr	r0, [r7, #4]
 801107a:	f7ff ffe7 	bl	801104c <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EED1Ev>
 801107e:	f242 11e8 	movw	r1, #8680	; 0x21e8
 8011082:	6878      	ldr	r0, [r7, #4]
 8011084:	f019 f969 	bl	802a35a <_ZdlPvj>
 8011088:	687b      	ldr	r3, [r7, #4]
 801108a:	4618      	mov	r0, r3
 801108c:	3708      	adds	r7, #8
 801108e:	46bd      	mov	sp, r7
 8011090:	bd80      	pop	{r7, pc}
	...

08011094 <_Z41__static_initialization_and_destruction_0ii>:
 8011094:	b580      	push	{r7, lr}
 8011096:	b082      	sub	sp, #8
 8011098:	af00      	add	r7, sp, #0
 801109a:	6078      	str	r0, [r7, #4]
 801109c:	6039      	str	r1, [r7, #0]
 801109e:	687b      	ldr	r3, [r7, #4]
 80110a0:	2b01      	cmp	r3, #1
 80110a2:	d107      	bne.n	80110b4 <_Z41__static_initialization_and_destruction_0ii+0x20>
 80110a4:	683b      	ldr	r3, [r7, #0]
 80110a6:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80110aa:	4293      	cmp	r3, r2
 80110ac:	d102      	bne.n	80110b4 <_Z41__static_initialization_and_destruction_0ii+0x20>
       > blockAllocator;
 80110ae:	4809      	ldr	r0, [pc, #36]	; (80110d4 <_Z41__static_initialization_and_destruction_0ii+0x40>)
 80110b0:	f7ff ff8c 	bl	8010fcc <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EEC1Ev>
 80110b4:	687b      	ldr	r3, [r7, #4]
 80110b6:	2b00      	cmp	r3, #0
 80110b8:	d107      	bne.n	80110ca <_Z41__static_initialization_and_destruction_0ii+0x36>
 80110ba:	683b      	ldr	r3, [r7, #0]
 80110bc:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80110c0:	4293      	cmp	r3, r2
 80110c2:	d102      	bne.n	80110ca <_Z41__static_initialization_and_destruction_0ii+0x36>
 80110c4:	4803      	ldr	r0, [pc, #12]	; (80110d4 <_Z41__static_initialization_and_destruction_0ii+0x40>)
 80110c6:	f7ff ffc1 	bl	801104c <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EED1Ev>
}
 80110ca:	bf00      	nop
 80110cc:	3708      	adds	r7, #8
 80110ce:	46bd      	mov	sp, r7
 80110d0:	bd80      	pop	{r7, pc}
 80110d2:	bf00      	nop
 80110d4:	20002e60 	.word	0x20002e60

080110d8 <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE13allocateBlockEttttPPh>:
     * @param          height The height of the block.
     * @param [in,out] block  Pointer to pointer to return the block address in.
     *
     * @return The height of the allocated block.
     */
    virtual uint16_t allocateBlock(const uint16_t x, const uint16_t y, const uint16_t width, const uint16_t height, uint8_t** block)
 80110d8:	b580      	push	{r7, lr}
 80110da:	b086      	sub	sp, #24
 80110dc:	af00      	add	r7, sp, #0
 80110de:	60f8      	str	r0, [r7, #12]
 80110e0:	4608      	mov	r0, r1
 80110e2:	4611      	mov	r1, r2
 80110e4:	461a      	mov	r2, r3
 80110e6:	4603      	mov	r3, r0
 80110e8:	817b      	strh	r3, [r7, #10]
 80110ea:	460b      	mov	r3, r1
 80110ec:	813b      	strh	r3, [r7, #8]
 80110ee:	4613      	mov	r3, r2
 80110f0:	80fb      	strh	r3, [r7, #6]
    {
        drawingBlock++;
 80110f2:	68fb      	ldr	r3, [r7, #12]
 80110f4:	f503 5300 	add.w	r3, r3, #8192	; 0x2000
 80110f8:	f8d3 31e4 	ldr.w	r3, [r3, #484]	; 0x1e4
 80110fc:	3301      	adds	r3, #1
 80110fe:	68fa      	ldr	r2, [r7, #12]
 8011100:	f502 5200 	add.w	r2, r2, #8192	; 0x2000
 8011104:	f8c2 31e4 	str.w	r3, [r2, #484]	; 0x1e4
        if (drawingBlock == blocks)
 8011108:	68fb      	ldr	r3, [r7, #12]
 801110a:	f503 5300 	add.w	r3, r3, #8192	; 0x2000
 801110e:	f8d3 31e4 	ldr.w	r3, [r3, #484]	; 0x1e4
 8011112:	2b03      	cmp	r3, #3
 8011114:	d109      	bne.n	801112a <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE13allocateBlockEttttPPh+0x52>
        {
            drawingBlock = 0;
 8011116:	68fb      	ldr	r3, [r7, #12]
 8011118:	f503 5300 	add.w	r3, r3, #8192	; 0x2000
 801111c:	461a      	mov	r2, r3
 801111e:	2300      	movs	r3, #0
 8011120:	f8c2 31e4 	str.w	r3, [r2, #484]	; 0x1e4
        }
        while (state[drawingBlock] != EMPTY)
 8011124:	e001      	b.n	801112a <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE13allocateBlockEttttPPh+0x52>
        {
            FrameBufferAllocatorWaitOnTransfer();
 8011126:	f7ff fee6 	bl	8010ef6 <_ZN8touchgfx34FrameBufferAllocatorWaitOnTransferEv>
        while (state[drawingBlock] != EMPTY)
 801112a:	68fb      	ldr	r3, [r7, #12]
 801112c:	f503 5300 	add.w	r3, r3, #8192	; 0x2000
 8011130:	f8d3 31e4 	ldr.w	r3, [r3, #484]	; 0x1e4
 8011134:	68fa      	ldr	r2, [r7, #12]
 8011136:	4413      	add	r3, r2
 8011138:	791b      	ldrb	r3, [r3, #4]
 801113a:	b2db      	uxtb	r3, r3
 801113c:	2b00      	cmp	r3, #0
 801113e:	bf14      	ite	ne
 8011140:	2301      	movne	r3, #1
 8011142:	2300      	moveq	r3, #0
 8011144:	b2db      	uxtb	r3, r3
 8011146:	2b00      	cmp	r3, #0
 8011148:	d1ed      	bne.n	8011126 <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE13allocateBlockEttttPPh+0x4e>
        }
        assert(state[drawingBlock] == EMPTY);
 801114a:	68fb      	ldr	r3, [r7, #12]
 801114c:	f503 5300 	add.w	r3, r3, #8192	; 0x2000
 8011150:	f8d3 31e4 	ldr.w	r3, [r3, #484]	; 0x1e4
 8011154:	68fa      	ldr	r2, [r7, #12]
 8011156:	4413      	add	r3, r2
 8011158:	791b      	ldrb	r3, [r3, #4]
 801115a:	b2db      	uxtb	r3, r3
 801115c:	2b00      	cmp	r3, #0
 801115e:	d005      	beq.n	801116c <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE13allocateBlockEttttPPh+0x94>
 8011160:	4b38      	ldr	r3, [pc, #224]	; (8011244 <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE13allocateBlockEttttPPh+0x16c>)
 8011162:	4a39      	ldr	r2, [pc, #228]	; (8011248 <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE13allocateBlockEttttPPh+0x170>)
 8011164:	21aa      	movs	r1, #170	; 0xaa
 8011166:	4839      	ldr	r0, [pc, #228]	; (801124c <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE13allocateBlockEttttPPh+0x174>)
 8011168:	f019 f926 	bl	802a3b8 <__assert_func>
        state[drawingBlock] = ALLOCATED;
 801116c:	68fb      	ldr	r3, [r7, #12]
 801116e:	f503 5300 	add.w	r3, r3, #8192	; 0x2000
 8011172:	f8d3 31e4 	ldr.w	r3, [r3, #484]	; 0x1e4
 8011176:	68fa      	ldr	r2, [r7, #12]
 8011178:	4413      	add	r3, r2
 801117a:	2201      	movs	r2, #1
 801117c:	711a      	strb	r2, [r3, #4]
        const int32_t stride = width * bytes_pr_pixel;
 801117e:	88fb      	ldrh	r3, [r7, #6]
 8011180:	005b      	lsls	r3, r3, #1
 8011182:	617b      	str	r3, [r7, #20]
        const int32_t lines = block_size / stride;
 8011184:	697b      	ldr	r3, [r7, #20]
 8011186:	f44f 6234 	mov.w	r2, #2880	; 0xb40
 801118a:	fbb2 f3f3 	udiv	r3, r2, r3
 801118e:	613b      	str	r3, [r7, #16]
        *block = (uint8_t*)&memory[drawingBlock][0];
 8011190:	68fb      	ldr	r3, [r7, #12]
 8011192:	f503 5300 	add.w	r3, r3, #8192	; 0x2000
 8011196:	f8d3 31e4 	ldr.w	r3, [r3, #484]	; 0x1e4
 801119a:	f44f 6234 	mov.w	r2, #2880	; 0xb40
 801119e:	fb02 f303 	mul.w	r3, r2, r3
 80111a2:	3308      	adds	r3, #8
 80111a4:	68fa      	ldr	r2, [r7, #12]
 80111a6:	441a      	add	r2, r3
 80111a8:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80111aa:	601a      	str	r2, [r3, #0]
        blockRect[drawingBlock].x = x;
 80111ac:	68fb      	ldr	r3, [r7, #12]
 80111ae:	f503 5300 	add.w	r3, r3, #8192	; 0x2000
 80111b2:	f8d3 21e4 	ldr.w	r2, [r3, #484]	; 0x1e4
 80111b6:	f9b7 100a 	ldrsh.w	r1, [r7, #10]
 80111ba:	68fb      	ldr	r3, [r7, #12]
 80111bc:	f202 4239 	addw	r2, r2, #1081	; 0x439
 80111c0:	f823 1032 	strh.w	r1, [r3, r2, lsl #3]
        blockRect[drawingBlock].y = y;
 80111c4:	68fb      	ldr	r3, [r7, #12]
 80111c6:	f503 5300 	add.w	r3, r3, #8192	; 0x2000
 80111ca:	f8d3 31e4 	ldr.w	r3, [r3, #484]	; 0x1e4
 80111ce:	f9b7 1008 	ldrsh.w	r1, [r7, #8]
 80111d2:	68fa      	ldr	r2, [r7, #12]
 80111d4:	f203 4339 	addw	r3, r3, #1081	; 0x439
 80111d8:	00db      	lsls	r3, r3, #3
 80111da:	4413      	add	r3, r2
 80111dc:	460a      	mov	r2, r1
 80111de:	805a      	strh	r2, [r3, #2]
        blockRect[drawingBlock].width = width;
 80111e0:	68fb      	ldr	r3, [r7, #12]
 80111e2:	f503 5300 	add.w	r3, r3, #8192	; 0x2000
 80111e6:	f8d3 31e4 	ldr.w	r3, [r3, #484]	; 0x1e4
 80111ea:	f9b7 1006 	ldrsh.w	r1, [r7, #6]
 80111ee:	68fa      	ldr	r2, [r7, #12]
 80111f0:	f203 4339 	addw	r3, r3, #1081	; 0x439
 80111f4:	00db      	lsls	r3, r3, #3
 80111f6:	4413      	add	r3, r2
 80111f8:	460a      	mov	r2, r1
 80111fa:	809a      	strh	r2, [r3, #4]
        blockRect[drawingBlock].height = MIN(height, lines);
 80111fc:	8c3a      	ldrh	r2, [r7, #32]
 80111fe:	693b      	ldr	r3, [r7, #16]
 8011200:	429a      	cmp	r2, r3
 8011202:	bfa8      	it	ge
 8011204:	461a      	movge	r2, r3
 8011206:	68fb      	ldr	r3, [r7, #12]
 8011208:	f503 5300 	add.w	r3, r3, #8192	; 0x2000
 801120c:	f8d3 31e4 	ldr.w	r3, [r3, #484]	; 0x1e4
 8011210:	b211      	sxth	r1, r2
 8011212:	68fa      	ldr	r2, [r7, #12]
 8011214:	f203 4339 	addw	r3, r3, #1081	; 0x439
 8011218:	00db      	lsls	r3, r3, #3
 801121a:	4413      	add	r3, r2
 801121c:	460a      	mov	r2, r1
 801121e:	80da      	strh	r2, [r3, #6]
        return blockRect[drawingBlock].height;
 8011220:	68fb      	ldr	r3, [r7, #12]
 8011222:	f503 5300 	add.w	r3, r3, #8192	; 0x2000
 8011226:	f8d3 31e4 	ldr.w	r3, [r3, #484]	; 0x1e4
 801122a:	68fa      	ldr	r2, [r7, #12]
 801122c:	f203 4339 	addw	r3, r3, #1081	; 0x439
 8011230:	00db      	lsls	r3, r3, #3
 8011232:	4413      	add	r3, r2
 8011234:	f9b3 3006 	ldrsh.w	r3, [r3, #6]
 8011238:	b29b      	uxth	r3, r3
    }
 801123a:	4618      	mov	r0, r3
 801123c:	3718      	adds	r7, #24
 801123e:	46bd      	mov	sp, r7
 8011240:	bd80      	pop	{r7, pc}
 8011242:	bf00      	nop
 8011244:	0802de5c 	.word	0x0802de5c
 8011248:	0802de7c 	.word	0x0802de7c
 801124c:	0802dfb0 	.word	0x0802dfb0

08011250 <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE25markBlockReadyForTransferEv>:

    /** Marks a previously allocated block as ready to be transferred to the LCD. */
    virtual void markBlockReadyForTransfer()
 8011250:	b580      	push	{r7, lr}
 8011252:	b082      	sub	sp, #8
 8011254:	af00      	add	r7, sp, #0
 8011256:	6078      	str	r0, [r7, #4]
    {
        assert(state[drawingBlock] == ALLOCATED);
 8011258:	687b      	ldr	r3, [r7, #4]
 801125a:	f503 5300 	add.w	r3, r3, #8192	; 0x2000
 801125e:	f8d3 31e4 	ldr.w	r3, [r3, #484]	; 0x1e4
 8011262:	687a      	ldr	r2, [r7, #4]
 8011264:	4413      	add	r3, r2
 8011266:	791b      	ldrb	r3, [r3, #4]
 8011268:	b2db      	uxtb	r3, r3
 801126a:	2b01      	cmp	r3, #1
 801126c:	d005      	beq.n	801127a <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE25markBlockReadyForTransferEv+0x2a>
 801126e:	4b0a      	ldr	r3, [pc, #40]	; (8011298 <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE25markBlockReadyForTransferEv+0x48>)
 8011270:	4a0a      	ldr	r2, [pc, #40]	; (801129c <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE25markBlockReadyForTransferEv+0x4c>)
 8011272:	21b9      	movs	r1, #185	; 0xb9
 8011274:	480a      	ldr	r0, [pc, #40]	; (80112a0 <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE25markBlockReadyForTransferEv+0x50>)
 8011276:	f019 f89f 	bl	802a3b8 <__assert_func>
        state[drawingBlock] = DRAWN;
 801127a:	687b      	ldr	r3, [r7, #4]
 801127c:	f503 5300 	add.w	r3, r3, #8192	; 0x2000
 8011280:	f8d3 31e4 	ldr.w	r3, [r3, #484]	; 0x1e4
 8011284:	687a      	ldr	r2, [r7, #4]
 8011286:	4413      	add	r3, r2
 8011288:	2202      	movs	r2, #2
 801128a:	711a      	strb	r2, [r3, #4]
        FrameBufferAllocatorSignalBlockDrawn();
 801128c:	f7ff fe3a 	bl	8010f04 <_ZN8touchgfx36FrameBufferAllocatorSignalBlockDrawnEv>
    }
 8011290:	bf00      	nop
 8011292:	3708      	adds	r7, #8
 8011294:	46bd      	mov	sp, r7
 8011296:	bd80      	pop	{r7, pc}
 8011298:	0802e004 	.word	0x0802e004
 801129c:	0802e028 	.word	0x0802e028
 80112a0:	0802dfb0 	.word	0x0802dfb0

080112a4 <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE24hasBlockReadyForTransferEv>:
    /**
     * Check if a block is ready for transfer to the LCD.
     *
     * @return True if a block is ready for transfer.
     */
    virtual bool hasBlockReadyForTransfer()
 80112a4:	b480      	push	{r7}
 80112a6:	b085      	sub	sp, #20
 80112a8:	af00      	add	r7, sp, #0
 80112aa:	6078      	str	r0, [r7, #4]
    {
        for (uint32_t i = 0; i < blocks; i++)
 80112ac:	2300      	movs	r3, #0
 80112ae:	60fb      	str	r3, [r7, #12]
 80112b0:	e011      	b.n	80112d6 <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE24hasBlockReadyForTransferEv+0x32>
        {
            if (state[i] == DRAWN)
 80112b2:	687a      	ldr	r2, [r7, #4]
 80112b4:	68fb      	ldr	r3, [r7, #12]
 80112b6:	4413      	add	r3, r2
 80112b8:	3304      	adds	r3, #4
 80112ba:	781b      	ldrb	r3, [r3, #0]
 80112bc:	b2db      	uxtb	r3, r3
 80112be:	2b02      	cmp	r3, #2
 80112c0:	bf0c      	ite	eq
 80112c2:	2301      	moveq	r3, #1
 80112c4:	2300      	movne	r3, #0
 80112c6:	b2db      	uxtb	r3, r3
 80112c8:	2b00      	cmp	r3, #0
 80112ca:	d001      	beq.n	80112d0 <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE24hasBlockReadyForTransferEv+0x2c>
            {
                return true;
 80112cc:	2301      	movs	r3, #1
 80112ce:	e006      	b.n	80112de <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE24hasBlockReadyForTransferEv+0x3a>
        for (uint32_t i = 0; i < blocks; i++)
 80112d0:	68fb      	ldr	r3, [r7, #12]
 80112d2:	3301      	adds	r3, #1
 80112d4:	60fb      	str	r3, [r7, #12]
 80112d6:	68fb      	ldr	r3, [r7, #12]
 80112d8:	2b02      	cmp	r3, #2
 80112da:	d9ea      	bls.n	80112b2 <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE24hasBlockReadyForTransferEv+0xe>
            }
        }
        return false;
 80112dc:	2300      	movs	r3, #0
    }
 80112de:	4618      	mov	r0, r3
 80112e0:	3714      	adds	r7, #20
 80112e2:	46bd      	mov	sp, r7
 80112e4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80112e8:	4770      	bx	lr
	...

080112ec <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE19getBlockForTransferERNS_4RectE>:
     *
     * @param [in,out] rect Reference to rect to write block x, y, width, and height.
     *
     * @return Returns the address of the block ready for transfer.
     */
    virtual const uint8_t* getBlockForTransfer(Rect& rect)
 80112ec:	b580      	push	{r7, lr}
 80112ee:	b082      	sub	sp, #8
 80112f0:	af00      	add	r7, sp, #0
 80112f2:	6078      	str	r0, [r7, #4]
 80112f4:	6039      	str	r1, [r7, #0]
    {
        sendingBlock++;
 80112f6:	687b      	ldr	r3, [r7, #4]
 80112f8:	f503 5300 	add.w	r3, r3, #8192	; 0x2000
 80112fc:	f8d3 31e0 	ldr.w	r3, [r3, #480]	; 0x1e0
 8011300:	3301      	adds	r3, #1
 8011302:	687a      	ldr	r2, [r7, #4]
 8011304:	f502 5200 	add.w	r2, r2, #8192	; 0x2000
 8011308:	f8c2 31e0 	str.w	r3, [r2, #480]	; 0x1e0
        if (sendingBlock == blocks)
 801130c:	687b      	ldr	r3, [r7, #4]
 801130e:	f503 5300 	add.w	r3, r3, #8192	; 0x2000
 8011312:	f8d3 31e0 	ldr.w	r3, [r3, #480]	; 0x1e0
 8011316:	2b03      	cmp	r3, #3
 8011318:	d106      	bne.n	8011328 <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE19getBlockForTransferERNS_4RectE+0x3c>
        {
            sendingBlock = 0;
 801131a:	687b      	ldr	r3, [r7, #4]
 801131c:	f503 5300 	add.w	r3, r3, #8192	; 0x2000
 8011320:	461a      	mov	r2, r3
 8011322:	2300      	movs	r3, #0
 8011324:	f8c2 31e0 	str.w	r3, [r2, #480]	; 0x1e0
        }
        assert(state[sendingBlock] == DRAWN);
 8011328:	687b      	ldr	r3, [r7, #4]
 801132a:	f503 5300 	add.w	r3, r3, #8192	; 0x2000
 801132e:	f8d3 31e0 	ldr.w	r3, [r3, #480]	; 0x1e0
 8011332:	687a      	ldr	r2, [r7, #4]
 8011334:	4413      	add	r3, r2
 8011336:	791b      	ldrb	r3, [r3, #4]
 8011338:	b2db      	uxtb	r3, r3
 801133a:	2b02      	cmp	r3, #2
 801133c:	d005      	beq.n	801134a <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE19getBlockForTransferERNS_4RectE+0x5e>
 801133e:	4b16      	ldr	r3, [pc, #88]	; (8011398 <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE19getBlockForTransferERNS_4RectE+0xac>)
 8011340:	4a16      	ldr	r2, [pc, #88]	; (801139c <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE19getBlockForTransferERNS_4RectE+0xb0>)
 8011342:	21dd      	movs	r1, #221	; 0xdd
 8011344:	4816      	ldr	r0, [pc, #88]	; (80113a0 <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE19getBlockForTransferERNS_4RectE+0xb4>)
 8011346:	f019 f837 	bl	802a3b8 <__assert_func>
        rect = blockRect[sendingBlock];
 801134a:	687b      	ldr	r3, [r7, #4]
 801134c:	f503 5300 	add.w	r3, r3, #8192	; 0x2000
 8011350:	f8d3 31e0 	ldr.w	r3, [r3, #480]	; 0x1e0
 8011354:	683a      	ldr	r2, [r7, #0]
 8011356:	6879      	ldr	r1, [r7, #4]
 8011358:	f203 4339 	addw	r3, r3, #1081	; 0x439
 801135c:	00db      	lsls	r3, r3, #3
 801135e:	440b      	add	r3, r1
 8011360:	cb03      	ldmia	r3!, {r0, r1}
 8011362:	6010      	str	r0, [r2, #0]
 8011364:	6051      	str	r1, [r2, #4]
        state[sendingBlock] = SENDING;
 8011366:	687b      	ldr	r3, [r7, #4]
 8011368:	f503 5300 	add.w	r3, r3, #8192	; 0x2000
 801136c:	f8d3 31e0 	ldr.w	r3, [r3, #480]	; 0x1e0
 8011370:	687a      	ldr	r2, [r7, #4]
 8011372:	4413      	add	r3, r2
 8011374:	2203      	movs	r2, #3
 8011376:	711a      	strb	r2, [r3, #4]
        return (const uint8_t*)&memory[sendingBlock][0];
 8011378:	687b      	ldr	r3, [r7, #4]
 801137a:	f503 5300 	add.w	r3, r3, #8192	; 0x2000
 801137e:	f8d3 31e0 	ldr.w	r3, [r3, #480]	; 0x1e0
 8011382:	f44f 6234 	mov.w	r2, #2880	; 0xb40
 8011386:	fb02 f303 	mul.w	r3, r2, r3
 801138a:	3308      	adds	r3, #8
 801138c:	687a      	ldr	r2, [r7, #4]
 801138e:	4413      	add	r3, r2
    }
 8011390:	4618      	mov	r0, r3
 8011392:	3708      	adds	r7, #8
 8011394:	46bd      	mov	sp, r7
 8011396:	bd80      	pop	{r7, pc}
 8011398:	0802e0fc 	.word	0x0802e0fc
 801139c:	0802e11c 	.word	0x0802e11c
 80113a0:	0802dfb0 	.word	0x0802dfb0

080113a4 <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE20peekBlockForTransferEv>:

    virtual const Rect& peekBlockForTransfer()
 80113a4:	b580      	push	{r7, lr}
 80113a6:	b084      	sub	sp, #16
 80113a8:	af00      	add	r7, sp, #0
 80113aa:	6078      	str	r0, [r7, #4]
    {
        int nextSendingBlock = sendingBlock + 1;
 80113ac:	687b      	ldr	r3, [r7, #4]
 80113ae:	f503 5300 	add.w	r3, r3, #8192	; 0x2000
 80113b2:	f8d3 31e0 	ldr.w	r3, [r3, #480]	; 0x1e0
 80113b6:	3301      	adds	r3, #1
 80113b8:	60fb      	str	r3, [r7, #12]
        if (nextSendingBlock == blocks)
 80113ba:	68fb      	ldr	r3, [r7, #12]
 80113bc:	2b03      	cmp	r3, #3
 80113be:	d101      	bne.n	80113c4 <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE20peekBlockForTransferEv+0x20>
        {
            nextSendingBlock = 0;
 80113c0:	2300      	movs	r3, #0
 80113c2:	60fb      	str	r3, [r7, #12]
        }
        assert(state[nextSendingBlock] == DRAWN);
 80113c4:	687a      	ldr	r2, [r7, #4]
 80113c6:	68fb      	ldr	r3, [r7, #12]
 80113c8:	4413      	add	r3, r2
 80113ca:	3304      	adds	r3, #4
 80113cc:	781b      	ldrb	r3, [r3, #0]
 80113ce:	b2db      	uxtb	r3, r3
 80113d0:	2b02      	cmp	r3, #2
 80113d2:	d005      	beq.n	80113e0 <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE20peekBlockForTransferEv+0x3c>
 80113d4:	4b07      	ldr	r3, [pc, #28]	; (80113f4 <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE20peekBlockForTransferEv+0x50>)
 80113d6:	4a08      	ldr	r2, [pc, #32]	; (80113f8 <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE20peekBlockForTransferEv+0x54>)
 80113d8:	21ea      	movs	r1, #234	; 0xea
 80113da:	4808      	ldr	r0, [pc, #32]	; (80113fc <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE20peekBlockForTransferEv+0x58>)
 80113dc:	f018 ffec 	bl	802a3b8 <__assert_func>
        return blockRect[nextSendingBlock];
 80113e0:	68fb      	ldr	r3, [r7, #12]
 80113e2:	f203 4339 	addw	r3, r3, #1081	; 0x439
 80113e6:	00db      	lsls	r3, r3, #3
 80113e8:	687a      	ldr	r2, [r7, #4]
 80113ea:	4413      	add	r3, r2
    }
 80113ec:	4618      	mov	r0, r3
 80113ee:	3710      	adds	r7, #16
 80113f0:	46bd      	mov	sp, r7
 80113f2:	bd80      	pop	{r7, pc}
 80113f4:	0802e21c 	.word	0x0802e21c
 80113f8:	0802e240 	.word	0x0802e240
 80113fc:	0802dfb0 	.word	0x0802dfb0

08011400 <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE13hasEmptyBlockEv>:

    virtual bool hasEmptyBlock()
 8011400:	b480      	push	{r7}
 8011402:	b085      	sub	sp, #20
 8011404:	af00      	add	r7, sp, #0
 8011406:	6078      	str	r0, [r7, #4]
    {
        int nextDrawingBlock = drawingBlock + 1;
 8011408:	687b      	ldr	r3, [r7, #4]
 801140a:	f503 5300 	add.w	r3, r3, #8192	; 0x2000
 801140e:	f8d3 31e4 	ldr.w	r3, [r3, #484]	; 0x1e4
 8011412:	3301      	adds	r3, #1
 8011414:	60fb      	str	r3, [r7, #12]
        if (nextDrawingBlock == blocks)
 8011416:	68fb      	ldr	r3, [r7, #12]
 8011418:	2b03      	cmp	r3, #3
 801141a:	d101      	bne.n	8011420 <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE13hasEmptyBlockEv+0x20>
        {
            nextDrawingBlock = 0;
 801141c:	2300      	movs	r3, #0
 801141e:	60fb      	str	r3, [r7, #12]
        }
        return (state[nextDrawingBlock] == EMPTY);
 8011420:	687a      	ldr	r2, [r7, #4]
 8011422:	68fb      	ldr	r3, [r7, #12]
 8011424:	4413      	add	r3, r2
 8011426:	3304      	adds	r3, #4
 8011428:	781b      	ldrb	r3, [r3, #0]
 801142a:	b2db      	uxtb	r3, r3
 801142c:	2b00      	cmp	r3, #0
 801142e:	bf0c      	ite	eq
 8011430:	2301      	moveq	r3, #1
 8011432:	2300      	movne	r3, #0
 8011434:	b2db      	uxtb	r3, r3
    }
 8011436:	4618      	mov	r0, r3
 8011438:	3714      	adds	r7, #20
 801143a:	46bd      	mov	sp, r7
 801143c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8011440:	4770      	bx	lr
	...

08011444 <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE22freeBlockAfterTransferEv>:
    /**
     * Free a block after transfer to the LCD.
     *
     * Marks a previously allocated block as transferred and ready to reuse.
     */
    virtual void freeBlockAfterTransfer()
 8011444:	b580      	push	{r7, lr}
 8011446:	b082      	sub	sp, #8
 8011448:	af00      	add	r7, sp, #0
 801144a:	6078      	str	r0, [r7, #4]
    {
        assert(state[sendingBlock] == SENDING);
 801144c:	687b      	ldr	r3, [r7, #4]
 801144e:	f503 5300 	add.w	r3, r3, #8192	; 0x2000
 8011452:	f8d3 31e0 	ldr.w	r3, [r3, #480]	; 0x1e0
 8011456:	687a      	ldr	r2, [r7, #4]
 8011458:	4413      	add	r3, r2
 801145a:	791b      	ldrb	r3, [r3, #4]
 801145c:	b2db      	uxtb	r3, r3
 801145e:	2b03      	cmp	r3, #3
 8011460:	d005      	beq.n	801146e <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE22freeBlockAfterTransferEv+0x2a>
 8011462:	4b09      	ldr	r3, [pc, #36]	; (8011488 <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE22freeBlockAfterTransferEv+0x44>)
 8011464:	4a09      	ldr	r2, [pc, #36]	; (801148c <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE22freeBlockAfterTransferEv+0x48>)
 8011466:	21ff      	movs	r1, #255	; 0xff
 8011468:	4809      	ldr	r0, [pc, #36]	; (8011490 <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE22freeBlockAfterTransferEv+0x4c>)
 801146a:	f018 ffa5 	bl	802a3b8 <__assert_func>
        state[sendingBlock] = EMPTY;
 801146e:	687b      	ldr	r3, [r7, #4]
 8011470:	f503 5300 	add.w	r3, r3, #8192	; 0x2000
 8011474:	f8d3 31e0 	ldr.w	r3, [r3, #480]	; 0x1e0
 8011478:	687a      	ldr	r2, [r7, #4]
 801147a:	4413      	add	r3, r2
 801147c:	2200      	movs	r2, #0
 801147e:	711a      	strb	r2, [r3, #4]
    }
 8011480:	bf00      	nop
 8011482:	3708      	adds	r7, #8
 8011484:	46bd      	mov	sp, r7
 8011486:	bd80      	pop	{r7, pc}
 8011488:	0802e320 	.word	0x0802e320
 801148c:	0802e340 	.word	0x0802e340
 8011490:	0802dfb0 	.word	0x0802dfb0

08011494 <_GLOBAL__sub_I__ZN8touchgfx5paint12setL8PaletteEPKh>:
 8011494:	b580      	push	{r7, lr}
 8011496:	af00      	add	r7, sp, #0
 8011498:	f64f 71ff 	movw	r1, #65535	; 0xffff
 801149c:	2001      	movs	r0, #1
 801149e:	f7ff fdf9 	bl	8011094 <_Z41__static_initialization_and_destruction_0ii>
 80114a2:	bd80      	pop	{r7, pc}

080114a4 <_GLOBAL__sub_D__ZN8touchgfx5paint12setL8PaletteEPKh>:
 80114a4:	b580      	push	{r7, lr}
 80114a6:	af00      	add	r7, sp, #0
 80114a8:	f64f 71ff 	movw	r1, #65535	; 0xffff
 80114ac:	2000      	movs	r0, #0
 80114ae:	f7ff fdf1 	bl	8011094 <_Z41__static_initialization_and_destruction_0ii>
 80114b2:	bd80      	pop	{r7, pc}

080114b4 <MX_USB_DEVICE_Init>:
/**
  * Init USB device Library, add supported class and start the library
  * @retval None
  */
void MX_USB_DEVICE_Init(void)
{
 80114b4:	b580      	push	{r7, lr}
 80114b6:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN USB_DEVICE_Init_PreTreatment */

  /* USER CODE END USB_DEVICE_Init_PreTreatment */

  /* Init Device Library, add supported class and start the library. */
  if (USBD_Init(&hUsbDeviceFS, &FS_Desc, DEVICE_FS) != USBD_OK)
 80114b8:	2200      	movs	r2, #0
 80114ba:	4912      	ldr	r1, [pc, #72]	; (8011504 <MX_USB_DEVICE_Init+0x50>)
 80114bc:	4812      	ldr	r0, [pc, #72]	; (8011508 <MX_USB_DEVICE_Init+0x54>)
 80114be:	f7f7 fd51 	bl	8008f64 <USBD_Init>
 80114c2:	4603      	mov	r3, r0
 80114c4:	2b00      	cmp	r3, #0
 80114c6:	d001      	beq.n	80114cc <MX_USB_DEVICE_Init+0x18>
  {
    Error_Handler();
 80114c8:	f7f0 f83c 	bl	8001544 <Error_Handler>
  }
  if (USBD_RegisterClass(&hUsbDeviceFS, &USBD_CDC) != USBD_OK)
 80114cc:	490f      	ldr	r1, [pc, #60]	; (801150c <MX_USB_DEVICE_Init+0x58>)
 80114ce:	480e      	ldr	r0, [pc, #56]	; (8011508 <MX_USB_DEVICE_Init+0x54>)
 80114d0:	f7f7 fd78 	bl	8008fc4 <USBD_RegisterClass>
 80114d4:	4603      	mov	r3, r0
 80114d6:	2b00      	cmp	r3, #0
 80114d8:	d001      	beq.n	80114de <MX_USB_DEVICE_Init+0x2a>
  {
    Error_Handler();
 80114da:	f7f0 f833 	bl	8001544 <Error_Handler>
  }
  if (USBD_CDC_RegisterInterface(&hUsbDeviceFS, &USBD_Interface_fops_FS) != USBD_OK)
 80114de:	490c      	ldr	r1, [pc, #48]	; (8011510 <MX_USB_DEVICE_Init+0x5c>)
 80114e0:	4809      	ldr	r0, [pc, #36]	; (8011508 <MX_USB_DEVICE_Init+0x54>)
 80114e2:	f7f7 fc6f 	bl	8008dc4 <USBD_CDC_RegisterInterface>
 80114e6:	4603      	mov	r3, r0
 80114e8:	2b00      	cmp	r3, #0
 80114ea:	d001      	beq.n	80114f0 <MX_USB_DEVICE_Init+0x3c>
  {
    Error_Handler();
 80114ec:	f7f0 f82a 	bl	8001544 <Error_Handler>
  }
  if (USBD_Start(&hUsbDeviceFS) != USBD_OK)
 80114f0:	4805      	ldr	r0, [pc, #20]	; (8011508 <MX_USB_DEVICE_Init+0x54>)
 80114f2:	f7f7 fd9d 	bl	8009030 <USBD_Start>
 80114f6:	4603      	mov	r3, r0
 80114f8:	2b00      	cmp	r3, #0
 80114fa:	d001      	beq.n	8011500 <MX_USB_DEVICE_Init+0x4c>
  {
    Error_Handler();
 80114fc:	f7f0 f822 	bl	8001544 <Error_Handler>
  }

  /* USER CODE BEGIN USB_DEVICE_Init_PostTreatment */

  /* USER CODE END USB_DEVICE_Init_PostTreatment */
}
 8011500:	bf00      	nop
 8011502:	bd80      	pop	{r7, pc}
 8011504:	200000c0 	.word	0x200000c0
 8011508:	20005048 	.word	0x20005048
 801150c:	20000024 	.word	0x20000024
 8011510:	200000ac 	.word	0x200000ac

08011514 <CDC_Init_FS>:
/**
  * @brief  Initializes the CDC media low layer over the FS USB IP
  * @retval USBD_OK if all operations are OK else USBD_FAIL
  */
static int8_t CDC_Init_FS(void)
{
 8011514:	b580      	push	{r7, lr}
 8011516:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN 3 */
  /* Set Application Buffers */
  USBD_CDC_SetTxBuffer(&hUsbDeviceFS, UserTxBufferFS, 0);
 8011518:	2200      	movs	r2, #0
 801151a:	4905      	ldr	r1, [pc, #20]	; (8011530 <CDC_Init_FS+0x1c>)
 801151c:	4805      	ldr	r0, [pc, #20]	; (8011534 <CDC_Init_FS+0x20>)
 801151e:	f7f7 fc6b 	bl	8008df8 <USBD_CDC_SetTxBuffer>
  USBD_CDC_SetRxBuffer(&hUsbDeviceFS, UserRxBufferFS);
 8011522:	4905      	ldr	r1, [pc, #20]	; (8011538 <CDC_Init_FS+0x24>)
 8011524:	4803      	ldr	r0, [pc, #12]	; (8011534 <CDC_Init_FS+0x20>)
 8011526:	f7f7 fc89 	bl	8008e3c <USBD_CDC_SetRxBuffer>
  return (USBD_OK);
 801152a:	2300      	movs	r3, #0
  /* USER CODE END 3 */
}
 801152c:	4618      	mov	r0, r3
 801152e:	bd80      	pop	{r7, pc}
 8011530:	20005b24 	.word	0x20005b24
 8011534:	20005048 	.word	0x20005048
 8011538:	20005324 	.word	0x20005324

0801153c <CDC_DeInit_FS>:
/**
  * @brief  DeInitializes the CDC media low layer
  * @retval USBD_OK if all operations are OK else USBD_FAIL
  */
static int8_t CDC_DeInit_FS(void)
{
 801153c:	b480      	push	{r7}
 801153e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN 4 */
  return (USBD_OK);
 8011540:	2300      	movs	r3, #0
  /* USER CODE END 4 */
}
 8011542:	4618      	mov	r0, r3
 8011544:	46bd      	mov	sp, r7
 8011546:	f85d 7b04 	ldr.w	r7, [sp], #4
 801154a:	4770      	bx	lr

0801154c <CDC_Control_FS>:
  * @param  pbuf: Buffer containing command data (request parameters)
  * @param  length: Number of data to be sent (in bytes)
  * @retval Result of the operation: USBD_OK if all operations are OK else USBD_FAIL
  */
static int8_t CDC_Control_FS(uint8_t cmd, uint8_t* pbuf, uint16_t length)
{
 801154c:	b480      	push	{r7}
 801154e:	b083      	sub	sp, #12
 8011550:	af00      	add	r7, sp, #0
 8011552:	4603      	mov	r3, r0
 8011554:	6039      	str	r1, [r7, #0]
 8011556:	71fb      	strb	r3, [r7, #7]
 8011558:	4613      	mov	r3, r2
 801155a:	80bb      	strh	r3, [r7, #4]
  /* USER CODE BEGIN 5 */
  switch(cmd)
 801155c:	79fb      	ldrb	r3, [r7, #7]
 801155e:	2b23      	cmp	r3, #35	; 0x23
 8011560:	d84a      	bhi.n	80115f8 <CDC_Control_FS+0xac>
 8011562:	a201      	add	r2, pc, #4	; (adr r2, 8011568 <CDC_Control_FS+0x1c>)
 8011564:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8011568:	080115f9 	.word	0x080115f9
 801156c:	080115f9 	.word	0x080115f9
 8011570:	080115f9 	.word	0x080115f9
 8011574:	080115f9 	.word	0x080115f9
 8011578:	080115f9 	.word	0x080115f9
 801157c:	080115f9 	.word	0x080115f9
 8011580:	080115f9 	.word	0x080115f9
 8011584:	080115f9 	.word	0x080115f9
 8011588:	080115f9 	.word	0x080115f9
 801158c:	080115f9 	.word	0x080115f9
 8011590:	080115f9 	.word	0x080115f9
 8011594:	080115f9 	.word	0x080115f9
 8011598:	080115f9 	.word	0x080115f9
 801159c:	080115f9 	.word	0x080115f9
 80115a0:	080115f9 	.word	0x080115f9
 80115a4:	080115f9 	.word	0x080115f9
 80115a8:	080115f9 	.word	0x080115f9
 80115ac:	080115f9 	.word	0x080115f9
 80115b0:	080115f9 	.word	0x080115f9
 80115b4:	080115f9 	.word	0x080115f9
 80115b8:	080115f9 	.word	0x080115f9
 80115bc:	080115f9 	.word	0x080115f9
 80115c0:	080115f9 	.word	0x080115f9
 80115c4:	080115f9 	.word	0x080115f9
 80115c8:	080115f9 	.word	0x080115f9
 80115cc:	080115f9 	.word	0x080115f9
 80115d0:	080115f9 	.word	0x080115f9
 80115d4:	080115f9 	.word	0x080115f9
 80115d8:	080115f9 	.word	0x080115f9
 80115dc:	080115f9 	.word	0x080115f9
 80115e0:	080115f9 	.word	0x080115f9
 80115e4:	080115f9 	.word	0x080115f9
 80115e8:	080115f9 	.word	0x080115f9
 80115ec:	080115f9 	.word	0x080115f9
 80115f0:	080115f9 	.word	0x080115f9
 80115f4:	080115f9 	.word	0x080115f9
    case CDC_SEND_BREAK:

    break;

  default:
    break;
 80115f8:	bf00      	nop
  }

  return (USBD_OK);
 80115fa:	2300      	movs	r3, #0
  /* USER CODE END 5 */
}
 80115fc:	4618      	mov	r0, r3
 80115fe:	370c      	adds	r7, #12
 8011600:	46bd      	mov	sp, r7
 8011602:	f85d 7b04 	ldr.w	r7, [sp], #4
 8011606:	4770      	bx	lr

08011608 <CDC_Receive_FS>:
  * @param  Buf: Buffer of data to be received
  * @param  Len: Number of data received (in bytes)
  * @retval Result of the operation: USBD_OK if all operations are OK else USBD_FAIL
  */
static int8_t CDC_Receive_FS(uint8_t* Buf, uint32_t *Len)
{
 8011608:	b580      	push	{r7, lr}
 801160a:	b082      	sub	sp, #8
 801160c:	af00      	add	r7, sp, #0
 801160e:	6078      	str	r0, [r7, #4]
 8011610:	6039      	str	r1, [r7, #0]
  /* USER CODE BEGIN 6 */
  USBD_CDC_SetRxBuffer(&hUsbDeviceFS, &Buf[0]);
 8011612:	6879      	ldr	r1, [r7, #4]
 8011614:	4805      	ldr	r0, [pc, #20]	; (801162c <CDC_Receive_FS+0x24>)
 8011616:	f7f7 fc11 	bl	8008e3c <USBD_CDC_SetRxBuffer>
  USBD_CDC_ReceivePacket(&hUsbDeviceFS);
 801161a:	4804      	ldr	r0, [pc, #16]	; (801162c <CDC_Receive_FS+0x24>)
 801161c:	f7f7 fc6c 	bl	8008ef8 <USBD_CDC_ReceivePacket>
  return (USBD_OK);
 8011620:	2300      	movs	r3, #0
  /* USER CODE END 6 */
}
 8011622:	4618      	mov	r0, r3
 8011624:	3708      	adds	r7, #8
 8011626:	46bd      	mov	sp, r7
 8011628:	bd80      	pop	{r7, pc}
 801162a:	bf00      	nop
 801162c:	20005048 	.word	0x20005048

08011630 <CDC_Transmit_FS>:
  * @param  Buf: Buffer of data to be sent
  * @param  Len: Number of data to be sent (in bytes)
  * @retval USBD_OK if all operations are OK else USBD_FAIL or USBD_BUSY
  */
uint8_t CDC_Transmit_FS(uint8_t* Buf, uint16_t Len)
{
 8011630:	b580      	push	{r7, lr}
 8011632:	b084      	sub	sp, #16
 8011634:	af00      	add	r7, sp, #0
 8011636:	6078      	str	r0, [r7, #4]
 8011638:	460b      	mov	r3, r1
 801163a:	807b      	strh	r3, [r7, #2]
  uint8_t result = USBD_OK;
 801163c:	2300      	movs	r3, #0
 801163e:	73fb      	strb	r3, [r7, #15]
  /* USER CODE BEGIN 7 */
  USBD_CDC_HandleTypeDef *hcdc = (USBD_CDC_HandleTypeDef*)hUsbDeviceFS.pClassData;
 8011640:	4b0d      	ldr	r3, [pc, #52]	; (8011678 <CDC_Transmit_FS+0x48>)
 8011642:	f8d3 32bc 	ldr.w	r3, [r3, #700]	; 0x2bc
 8011646:	60bb      	str	r3, [r7, #8]
  if (hcdc->TxState != 0){
 8011648:	68bb      	ldr	r3, [r7, #8]
 801164a:	f8d3 3214 	ldr.w	r3, [r3, #532]	; 0x214
 801164e:	2b00      	cmp	r3, #0
 8011650:	d001      	beq.n	8011656 <CDC_Transmit_FS+0x26>
    return USBD_BUSY;
 8011652:	2301      	movs	r3, #1
 8011654:	e00b      	b.n	801166e <CDC_Transmit_FS+0x3e>
  }
  USBD_CDC_SetTxBuffer(&hUsbDeviceFS, Buf, Len);
 8011656:	887b      	ldrh	r3, [r7, #2]
 8011658:	461a      	mov	r2, r3
 801165a:	6879      	ldr	r1, [r7, #4]
 801165c:	4806      	ldr	r0, [pc, #24]	; (8011678 <CDC_Transmit_FS+0x48>)
 801165e:	f7f7 fbcb 	bl	8008df8 <USBD_CDC_SetTxBuffer>
  result = USBD_CDC_TransmitPacket(&hUsbDeviceFS);
 8011662:	4805      	ldr	r0, [pc, #20]	; (8011678 <CDC_Transmit_FS+0x48>)
 8011664:	f7f7 fc08 	bl	8008e78 <USBD_CDC_TransmitPacket>
 8011668:	4603      	mov	r3, r0
 801166a:	73fb      	strb	r3, [r7, #15]
  /* USER CODE END 7 */
  return result;
 801166c:	7bfb      	ldrb	r3, [r7, #15]
}
 801166e:	4618      	mov	r0, r3
 8011670:	3710      	adds	r7, #16
 8011672:	46bd      	mov	sp, r7
 8011674:	bd80      	pop	{r7, pc}
 8011676:	bf00      	nop
 8011678:	20005048 	.word	0x20005048

0801167c <CDC_TransmitCplt_FS>:
  * @param  Buf: Buffer of data to be received
  * @param  Len: Number of data received (in bytes)
  * @retval Result of the operation: USBD_OK if all operations are OK else USBD_FAIL
  */
static int8_t CDC_TransmitCplt_FS(uint8_t *Buf, uint32_t *Len, uint8_t epnum)
{
 801167c:	b480      	push	{r7}
 801167e:	b087      	sub	sp, #28
 8011680:	af00      	add	r7, sp, #0
 8011682:	60f8      	str	r0, [r7, #12]
 8011684:	60b9      	str	r1, [r7, #8]
 8011686:	4613      	mov	r3, r2
 8011688:	71fb      	strb	r3, [r7, #7]
  uint8_t result = USBD_OK;
 801168a:	2300      	movs	r3, #0
 801168c:	75fb      	strb	r3, [r7, #23]
  /* USER CODE BEGIN 13 */
  UNUSED(Buf);
  UNUSED(Len);
  UNUSED(epnum);
  /* USER CODE END 13 */
  return result;
 801168e:	f997 3017 	ldrsb.w	r3, [r7, #23]
}
 8011692:	4618      	mov	r0, r3
 8011694:	371c      	adds	r7, #28
 8011696:	46bd      	mov	sp, r7
 8011698:	f85d 7b04 	ldr.w	r7, [sp], #4
 801169c:	4770      	bx	lr
	...

080116a0 <USBD_FS_DeviceDescriptor>:
  * @param  speed : Current device speed
  * @param  length : Pointer to data length variable
  * @retval Pointer to descriptor buffer
  */
uint8_t * USBD_FS_DeviceDescriptor(USBD_SpeedTypeDef speed, uint16_t *length)
{
 80116a0:	b480      	push	{r7}
 80116a2:	b083      	sub	sp, #12
 80116a4:	af00      	add	r7, sp, #0
 80116a6:	4603      	mov	r3, r0
 80116a8:	6039      	str	r1, [r7, #0]
 80116aa:	71fb      	strb	r3, [r7, #7]
  UNUSED(speed);
  *length = sizeof(USBD_FS_DeviceDesc);
 80116ac:	683b      	ldr	r3, [r7, #0]
 80116ae:	2212      	movs	r2, #18
 80116b0:	801a      	strh	r2, [r3, #0]
  return USBD_FS_DeviceDesc;
 80116b2:	4b03      	ldr	r3, [pc, #12]	; (80116c0 <USBD_FS_DeviceDescriptor+0x20>)
}
 80116b4:	4618      	mov	r0, r3
 80116b6:	370c      	adds	r7, #12
 80116b8:	46bd      	mov	sp, r7
 80116ba:	f85d 7b04 	ldr.w	r7, [sp], #4
 80116be:	4770      	bx	lr
 80116c0:	200000dc 	.word	0x200000dc

080116c4 <USBD_FS_LangIDStrDescriptor>:
  * @param  speed : Current device speed
  * @param  length : Pointer to data length variable
  * @retval Pointer to descriptor buffer
  */
uint8_t * USBD_FS_LangIDStrDescriptor(USBD_SpeedTypeDef speed, uint16_t *length)
{
 80116c4:	b480      	push	{r7}
 80116c6:	b083      	sub	sp, #12
 80116c8:	af00      	add	r7, sp, #0
 80116ca:	4603      	mov	r3, r0
 80116cc:	6039      	str	r1, [r7, #0]
 80116ce:	71fb      	strb	r3, [r7, #7]
  UNUSED(speed);
  *length = sizeof(USBD_LangIDDesc);
 80116d0:	683b      	ldr	r3, [r7, #0]
 80116d2:	2204      	movs	r2, #4
 80116d4:	801a      	strh	r2, [r3, #0]
  return USBD_LangIDDesc;
 80116d6:	4b03      	ldr	r3, [pc, #12]	; (80116e4 <USBD_FS_LangIDStrDescriptor+0x20>)
}
 80116d8:	4618      	mov	r0, r3
 80116da:	370c      	adds	r7, #12
 80116dc:	46bd      	mov	sp, r7
 80116de:	f85d 7b04 	ldr.w	r7, [sp], #4
 80116e2:	4770      	bx	lr
 80116e4:	200000f0 	.word	0x200000f0

080116e8 <USBD_FS_ProductStrDescriptor>:
  * @param  speed : Current device speed
  * @param  length : Pointer to data length variable
  * @retval Pointer to descriptor buffer
  */
uint8_t * USBD_FS_ProductStrDescriptor(USBD_SpeedTypeDef speed, uint16_t *length)
{
 80116e8:	b580      	push	{r7, lr}
 80116ea:	b082      	sub	sp, #8
 80116ec:	af00      	add	r7, sp, #0
 80116ee:	4603      	mov	r3, r0
 80116f0:	6039      	str	r1, [r7, #0]
 80116f2:	71fb      	strb	r3, [r7, #7]
  if(speed == 0)
 80116f4:	79fb      	ldrb	r3, [r7, #7]
 80116f6:	2b00      	cmp	r3, #0
 80116f8:	d105      	bne.n	8011706 <USBD_FS_ProductStrDescriptor+0x1e>
  {
    USBD_GetString((uint8_t *)USBD_PRODUCT_STRING_FS, USBD_StrDesc, length);
 80116fa:	683a      	ldr	r2, [r7, #0]
 80116fc:	4907      	ldr	r1, [pc, #28]	; (801171c <USBD_FS_ProductStrDescriptor+0x34>)
 80116fe:	4808      	ldr	r0, [pc, #32]	; (8011720 <USBD_FS_ProductStrDescriptor+0x38>)
 8011700:	f7f8 fe48 	bl	800a394 <USBD_GetString>
 8011704:	e004      	b.n	8011710 <USBD_FS_ProductStrDescriptor+0x28>
  }
  else
  {
    USBD_GetString((uint8_t *)USBD_PRODUCT_STRING_FS, USBD_StrDesc, length);
 8011706:	683a      	ldr	r2, [r7, #0]
 8011708:	4904      	ldr	r1, [pc, #16]	; (801171c <USBD_FS_ProductStrDescriptor+0x34>)
 801170a:	4805      	ldr	r0, [pc, #20]	; (8011720 <USBD_FS_ProductStrDescriptor+0x38>)
 801170c:	f7f8 fe42 	bl	800a394 <USBD_GetString>
  }
  return USBD_StrDesc;
 8011710:	4b02      	ldr	r3, [pc, #8]	; (801171c <USBD_FS_ProductStrDescriptor+0x34>)
}
 8011712:	4618      	mov	r0, r3
 8011714:	3708      	adds	r7, #8
 8011716:	46bd      	mov	sp, r7
 8011718:	bd80      	pop	{r7, pc}
 801171a:	bf00      	nop
 801171c:	20006324 	.word	0x20006324
 8011720:	0802e410 	.word	0x0802e410

08011724 <USBD_FS_ManufacturerStrDescriptor>:
  * @param  speed : Current device speed
  * @param  length : Pointer to data length variable
  * @retval Pointer to descriptor buffer
  */
uint8_t * USBD_FS_ManufacturerStrDescriptor(USBD_SpeedTypeDef speed, uint16_t *length)
{
 8011724:	b580      	push	{r7, lr}
 8011726:	b082      	sub	sp, #8
 8011728:	af00      	add	r7, sp, #0
 801172a:	4603      	mov	r3, r0
 801172c:	6039      	str	r1, [r7, #0]
 801172e:	71fb      	strb	r3, [r7, #7]
  UNUSED(speed);
  USBD_GetString((uint8_t *)USBD_MANUFACTURER_STRING, USBD_StrDesc, length);
 8011730:	683a      	ldr	r2, [r7, #0]
 8011732:	4904      	ldr	r1, [pc, #16]	; (8011744 <USBD_FS_ManufacturerStrDescriptor+0x20>)
 8011734:	4804      	ldr	r0, [pc, #16]	; (8011748 <USBD_FS_ManufacturerStrDescriptor+0x24>)
 8011736:	f7f8 fe2d 	bl	800a394 <USBD_GetString>
  return USBD_StrDesc;
 801173a:	4b02      	ldr	r3, [pc, #8]	; (8011744 <USBD_FS_ManufacturerStrDescriptor+0x20>)
}
 801173c:	4618      	mov	r0, r3
 801173e:	3708      	adds	r7, #8
 8011740:	46bd      	mov	sp, r7
 8011742:	bd80      	pop	{r7, pc}
 8011744:	20006324 	.word	0x20006324
 8011748:	0802e428 	.word	0x0802e428

0801174c <USBD_FS_SerialStrDescriptor>:
  * @param  speed : Current device speed
  * @param  length : Pointer to data length variable
  * @retval Pointer to descriptor buffer
  */
uint8_t * USBD_FS_SerialStrDescriptor(USBD_SpeedTypeDef speed, uint16_t *length)
{
 801174c:	b580      	push	{r7, lr}
 801174e:	b082      	sub	sp, #8
 8011750:	af00      	add	r7, sp, #0
 8011752:	4603      	mov	r3, r0
 8011754:	6039      	str	r1, [r7, #0]
 8011756:	71fb      	strb	r3, [r7, #7]
  UNUSED(speed);
  *length = USB_SIZ_STRING_SERIAL;
 8011758:	683b      	ldr	r3, [r7, #0]
 801175a:	221a      	movs	r2, #26
 801175c:	801a      	strh	r2, [r3, #0]

  /* Update the serial number string descriptor with the data from the unique
   * ID */
  Get_SerialNum();
 801175e:	f000 f843 	bl	80117e8 <Get_SerialNum>
  /* USER CODE BEGIN USBD_FS_SerialStrDescriptor */

  /* USER CODE END USBD_FS_SerialStrDescriptor */
  return (uint8_t *) USBD_StringSerial;
 8011762:	4b02      	ldr	r3, [pc, #8]	; (801176c <USBD_FS_SerialStrDescriptor+0x20>)
}
 8011764:	4618      	mov	r0, r3
 8011766:	3708      	adds	r7, #8
 8011768:	46bd      	mov	sp, r7
 801176a:	bd80      	pop	{r7, pc}
 801176c:	200000f4 	.word	0x200000f4

08011770 <USBD_FS_ConfigStrDescriptor>:
  * @param  speed : Current device speed
  * @param  length : Pointer to data length variable
  * @retval Pointer to descriptor buffer
  */
uint8_t * USBD_FS_ConfigStrDescriptor(USBD_SpeedTypeDef speed, uint16_t *length)
{
 8011770:	b580      	push	{r7, lr}
 8011772:	b082      	sub	sp, #8
 8011774:	af00      	add	r7, sp, #0
 8011776:	4603      	mov	r3, r0
 8011778:	6039      	str	r1, [r7, #0]
 801177a:	71fb      	strb	r3, [r7, #7]
  if(speed == USBD_SPEED_HIGH)
 801177c:	79fb      	ldrb	r3, [r7, #7]
 801177e:	2b00      	cmp	r3, #0
 8011780:	d105      	bne.n	801178e <USBD_FS_ConfigStrDescriptor+0x1e>
  {
    USBD_GetString((uint8_t *)USBD_CONFIGURATION_STRING_FS, USBD_StrDesc, length);
 8011782:	683a      	ldr	r2, [r7, #0]
 8011784:	4907      	ldr	r1, [pc, #28]	; (80117a4 <USBD_FS_ConfigStrDescriptor+0x34>)
 8011786:	4808      	ldr	r0, [pc, #32]	; (80117a8 <USBD_FS_ConfigStrDescriptor+0x38>)
 8011788:	f7f8 fe04 	bl	800a394 <USBD_GetString>
 801178c:	e004      	b.n	8011798 <USBD_FS_ConfigStrDescriptor+0x28>
  }
  else
  {
    USBD_GetString((uint8_t *)USBD_CONFIGURATION_STRING_FS, USBD_StrDesc, length);
 801178e:	683a      	ldr	r2, [r7, #0]
 8011790:	4904      	ldr	r1, [pc, #16]	; (80117a4 <USBD_FS_ConfigStrDescriptor+0x34>)
 8011792:	4805      	ldr	r0, [pc, #20]	; (80117a8 <USBD_FS_ConfigStrDescriptor+0x38>)
 8011794:	f7f8 fdfe 	bl	800a394 <USBD_GetString>
  }
  return USBD_StrDesc;
 8011798:	4b02      	ldr	r3, [pc, #8]	; (80117a4 <USBD_FS_ConfigStrDescriptor+0x34>)
}
 801179a:	4618      	mov	r0, r3
 801179c:	3708      	adds	r7, #8
 801179e:	46bd      	mov	sp, r7
 80117a0:	bd80      	pop	{r7, pc}
 80117a2:	bf00      	nop
 80117a4:	20006324 	.word	0x20006324
 80117a8:	0802e43c 	.word	0x0802e43c

080117ac <USBD_FS_InterfaceStrDescriptor>:
  * @param  speed : Current device speed
  * @param  length : Pointer to data length variable
  * @retval Pointer to descriptor buffer
  */
uint8_t * USBD_FS_InterfaceStrDescriptor(USBD_SpeedTypeDef speed, uint16_t *length)
{
 80117ac:	b580      	push	{r7, lr}
 80117ae:	b082      	sub	sp, #8
 80117b0:	af00      	add	r7, sp, #0
 80117b2:	4603      	mov	r3, r0
 80117b4:	6039      	str	r1, [r7, #0]
 80117b6:	71fb      	strb	r3, [r7, #7]
  if(speed == 0)
 80117b8:	79fb      	ldrb	r3, [r7, #7]
 80117ba:	2b00      	cmp	r3, #0
 80117bc:	d105      	bne.n	80117ca <USBD_FS_InterfaceStrDescriptor+0x1e>
  {
    USBD_GetString((uint8_t *)USBD_INTERFACE_STRING_FS, USBD_StrDesc, length);
 80117be:	683a      	ldr	r2, [r7, #0]
 80117c0:	4907      	ldr	r1, [pc, #28]	; (80117e0 <USBD_FS_InterfaceStrDescriptor+0x34>)
 80117c2:	4808      	ldr	r0, [pc, #32]	; (80117e4 <USBD_FS_InterfaceStrDescriptor+0x38>)
 80117c4:	f7f8 fde6 	bl	800a394 <USBD_GetString>
 80117c8:	e004      	b.n	80117d4 <USBD_FS_InterfaceStrDescriptor+0x28>
  }
  else
  {
    USBD_GetString((uint8_t *)USBD_INTERFACE_STRING_FS, USBD_StrDesc, length);
 80117ca:	683a      	ldr	r2, [r7, #0]
 80117cc:	4904      	ldr	r1, [pc, #16]	; (80117e0 <USBD_FS_InterfaceStrDescriptor+0x34>)
 80117ce:	4805      	ldr	r0, [pc, #20]	; (80117e4 <USBD_FS_InterfaceStrDescriptor+0x38>)
 80117d0:	f7f8 fde0 	bl	800a394 <USBD_GetString>
  }
  return USBD_StrDesc;
 80117d4:	4b02      	ldr	r3, [pc, #8]	; (80117e0 <USBD_FS_InterfaceStrDescriptor+0x34>)
}
 80117d6:	4618      	mov	r0, r3
 80117d8:	3708      	adds	r7, #8
 80117da:	46bd      	mov	sp, r7
 80117dc:	bd80      	pop	{r7, pc}
 80117de:	bf00      	nop
 80117e0:	20006324 	.word	0x20006324
 80117e4:	0802e448 	.word	0x0802e448

080117e8 <Get_SerialNum>:
  * @brief  Create the serial number string descriptor
  * @param  None
  * @retval None
  */
static void Get_SerialNum(void)
{
 80117e8:	b580      	push	{r7, lr}
 80117ea:	b084      	sub	sp, #16
 80117ec:	af00      	add	r7, sp, #0
  uint32_t deviceserial0;
  uint32_t deviceserial1;
  uint32_t deviceserial2;

  deviceserial0 = *(uint32_t *) DEVICE_ID1;
 80117ee:	4b0f      	ldr	r3, [pc, #60]	; (801182c <Get_SerialNum+0x44>)
 80117f0:	681b      	ldr	r3, [r3, #0]
 80117f2:	60fb      	str	r3, [r7, #12]
  deviceserial1 = *(uint32_t *) DEVICE_ID2;
 80117f4:	4b0e      	ldr	r3, [pc, #56]	; (8011830 <Get_SerialNum+0x48>)
 80117f6:	681b      	ldr	r3, [r3, #0]
 80117f8:	60bb      	str	r3, [r7, #8]
  deviceserial2 = *(uint32_t *) DEVICE_ID3;
 80117fa:	4b0e      	ldr	r3, [pc, #56]	; (8011834 <Get_SerialNum+0x4c>)
 80117fc:	681b      	ldr	r3, [r3, #0]
 80117fe:	607b      	str	r3, [r7, #4]

  deviceserial0 += deviceserial2;
 8011800:	68fa      	ldr	r2, [r7, #12]
 8011802:	687b      	ldr	r3, [r7, #4]
 8011804:	4413      	add	r3, r2
 8011806:	60fb      	str	r3, [r7, #12]

  if (deviceserial0 != 0)
 8011808:	68fb      	ldr	r3, [r7, #12]
 801180a:	2b00      	cmp	r3, #0
 801180c:	d009      	beq.n	8011822 <Get_SerialNum+0x3a>
  {
    IntToUnicode(deviceserial0, &USBD_StringSerial[2], 8);
 801180e:	2208      	movs	r2, #8
 8011810:	4909      	ldr	r1, [pc, #36]	; (8011838 <Get_SerialNum+0x50>)
 8011812:	68f8      	ldr	r0, [r7, #12]
 8011814:	f000 f814 	bl	8011840 <IntToUnicode>
    IntToUnicode(deviceserial1, &USBD_StringSerial[18], 4);
 8011818:	2204      	movs	r2, #4
 801181a:	4908      	ldr	r1, [pc, #32]	; (801183c <Get_SerialNum+0x54>)
 801181c:	68b8      	ldr	r0, [r7, #8]
 801181e:	f000 f80f 	bl	8011840 <IntToUnicode>
  }
}
 8011822:	bf00      	nop
 8011824:	3710      	adds	r7, #16
 8011826:	46bd      	mov	sp, r7
 8011828:	bd80      	pop	{r7, pc}
 801182a:	bf00      	nop
 801182c:	1fff7a10 	.word	0x1fff7a10
 8011830:	1fff7a14 	.word	0x1fff7a14
 8011834:	1fff7a18 	.word	0x1fff7a18
 8011838:	200000f6 	.word	0x200000f6
 801183c:	20000106 	.word	0x20000106

08011840 <IntToUnicode>:
  * @param  pbuf: pointer to the buffer
  * @param  len: buffer length
  * @retval None
  */
static void IntToUnicode(uint32_t value, uint8_t * pbuf, uint8_t len)
{
 8011840:	b480      	push	{r7}
 8011842:	b087      	sub	sp, #28
 8011844:	af00      	add	r7, sp, #0
 8011846:	60f8      	str	r0, [r7, #12]
 8011848:	60b9      	str	r1, [r7, #8]
 801184a:	4613      	mov	r3, r2
 801184c:	71fb      	strb	r3, [r7, #7]
  uint8_t idx = 0;
 801184e:	2300      	movs	r3, #0
 8011850:	75fb      	strb	r3, [r7, #23]

  for (idx = 0; idx < len; idx++)
 8011852:	2300      	movs	r3, #0
 8011854:	75fb      	strb	r3, [r7, #23]
 8011856:	e027      	b.n	80118a8 <IntToUnicode+0x68>
  {
    if (((value >> 28)) < 0xA)
 8011858:	68fb      	ldr	r3, [r7, #12]
 801185a:	0f1b      	lsrs	r3, r3, #28
 801185c:	2b09      	cmp	r3, #9
 801185e:	d80b      	bhi.n	8011878 <IntToUnicode+0x38>
    {
      pbuf[2 * idx] = (value >> 28) + '0';
 8011860:	68fb      	ldr	r3, [r7, #12]
 8011862:	0f1b      	lsrs	r3, r3, #28
 8011864:	b2da      	uxtb	r2, r3
 8011866:	7dfb      	ldrb	r3, [r7, #23]
 8011868:	005b      	lsls	r3, r3, #1
 801186a:	4619      	mov	r1, r3
 801186c:	68bb      	ldr	r3, [r7, #8]
 801186e:	440b      	add	r3, r1
 8011870:	3230      	adds	r2, #48	; 0x30
 8011872:	b2d2      	uxtb	r2, r2
 8011874:	701a      	strb	r2, [r3, #0]
 8011876:	e00a      	b.n	801188e <IntToUnicode+0x4e>
    }
    else
    {
      pbuf[2 * idx] = (value >> 28) + 'A' - 10;
 8011878:	68fb      	ldr	r3, [r7, #12]
 801187a:	0f1b      	lsrs	r3, r3, #28
 801187c:	b2da      	uxtb	r2, r3
 801187e:	7dfb      	ldrb	r3, [r7, #23]
 8011880:	005b      	lsls	r3, r3, #1
 8011882:	4619      	mov	r1, r3
 8011884:	68bb      	ldr	r3, [r7, #8]
 8011886:	440b      	add	r3, r1
 8011888:	3237      	adds	r2, #55	; 0x37
 801188a:	b2d2      	uxtb	r2, r2
 801188c:	701a      	strb	r2, [r3, #0]
    }

    value = value << 4;
 801188e:	68fb      	ldr	r3, [r7, #12]
 8011890:	011b      	lsls	r3, r3, #4
 8011892:	60fb      	str	r3, [r7, #12]

    pbuf[2 * idx + 1] = 0;
 8011894:	7dfb      	ldrb	r3, [r7, #23]
 8011896:	005b      	lsls	r3, r3, #1
 8011898:	3301      	adds	r3, #1
 801189a:	68ba      	ldr	r2, [r7, #8]
 801189c:	4413      	add	r3, r2
 801189e:	2200      	movs	r2, #0
 80118a0:	701a      	strb	r2, [r3, #0]
  for (idx = 0; idx < len; idx++)
 80118a2:	7dfb      	ldrb	r3, [r7, #23]
 80118a4:	3301      	adds	r3, #1
 80118a6:	75fb      	strb	r3, [r7, #23]
 80118a8:	7dfa      	ldrb	r2, [r7, #23]
 80118aa:	79fb      	ldrb	r3, [r7, #7]
 80118ac:	429a      	cmp	r2, r3
 80118ae:	d3d3      	bcc.n	8011858 <IntToUnicode+0x18>
  }
}
 80118b0:	bf00      	nop
 80118b2:	bf00      	nop
 80118b4:	371c      	adds	r7, #28
 80118b6:	46bd      	mov	sp, r7
 80118b8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80118bc:	4770      	bx	lr
	...

080118c0 <HAL_PCD_MspInit>:
                       LL Driver Callbacks (PCD -> USB Device Library)
*******************************************************************************/
/* MSP Init */

void HAL_PCD_MspInit(PCD_HandleTypeDef* pcdHandle)
{
 80118c0:	b580      	push	{r7, lr}
 80118c2:	b08a      	sub	sp, #40	; 0x28
 80118c4:	af00      	add	r7, sp, #0
 80118c6:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80118c8:	f107 0314 	add.w	r3, r7, #20
 80118cc:	2200      	movs	r2, #0
 80118ce:	601a      	str	r2, [r3, #0]
 80118d0:	605a      	str	r2, [r3, #4]
 80118d2:	609a      	str	r2, [r3, #8]
 80118d4:	60da      	str	r2, [r3, #12]
 80118d6:	611a      	str	r2, [r3, #16]
  if(pcdHandle->Instance==USB_OTG_FS)
 80118d8:	687b      	ldr	r3, [r7, #4]
 80118da:	681b      	ldr	r3, [r3, #0]
 80118dc:	f1b3 4fa0 	cmp.w	r3, #1342177280	; 0x50000000
 80118e0:	d13a      	bne.n	8011958 <HAL_PCD_MspInit+0x98>
  {
  /* USER CODE BEGIN USB_OTG_FS_MspInit 0 */

  /* USER CODE END USB_OTG_FS_MspInit 0 */

    __HAL_RCC_GPIOA_CLK_ENABLE();
 80118e2:	2300      	movs	r3, #0
 80118e4:	613b      	str	r3, [r7, #16]
 80118e6:	4b1e      	ldr	r3, [pc, #120]	; (8011960 <HAL_PCD_MspInit+0xa0>)
 80118e8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80118ea:	4a1d      	ldr	r2, [pc, #116]	; (8011960 <HAL_PCD_MspInit+0xa0>)
 80118ec:	f043 0301 	orr.w	r3, r3, #1
 80118f0:	6313      	str	r3, [r2, #48]	; 0x30
 80118f2:	4b1b      	ldr	r3, [pc, #108]	; (8011960 <HAL_PCD_MspInit+0xa0>)
 80118f4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80118f6:	f003 0301 	and.w	r3, r3, #1
 80118fa:	613b      	str	r3, [r7, #16]
 80118fc:	693b      	ldr	r3, [r7, #16]
    /**USB_OTG_FS GPIO Configuration
    PA11     ------> USB_OTG_FS_DM
    PA12     ------> USB_OTG_FS_DP
    */
    GPIO_InitStruct.Pin = GPIO_PIN_11|GPIO_PIN_12;
 80118fe:	f44f 53c0 	mov.w	r3, #6144	; 0x1800
 8011902:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8011904:	2302      	movs	r3, #2
 8011906:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8011908:	2300      	movs	r3, #0
 801190a:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 801190c:	2303      	movs	r3, #3
 801190e:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF10_OTG_FS;
 8011910:	230a      	movs	r3, #10
 8011912:	627b      	str	r3, [r7, #36]	; 0x24
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8011914:	f107 0314 	add.w	r3, r7, #20
 8011918:	4619      	mov	r1, r3
 801191a:	4812      	ldr	r0, [pc, #72]	; (8011964 <HAL_PCD_MspInit+0xa4>)
 801191c:	f7f1 fa38 	bl	8002d90 <HAL_GPIO_Init>

    /* Peripheral clock enable */
    __HAL_RCC_USB_OTG_FS_CLK_ENABLE();
 8011920:	4b0f      	ldr	r3, [pc, #60]	; (8011960 <HAL_PCD_MspInit+0xa0>)
 8011922:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8011924:	4a0e      	ldr	r2, [pc, #56]	; (8011960 <HAL_PCD_MspInit+0xa0>)
 8011926:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 801192a:	6353      	str	r3, [r2, #52]	; 0x34
 801192c:	2300      	movs	r3, #0
 801192e:	60fb      	str	r3, [r7, #12]
 8011930:	4b0b      	ldr	r3, [pc, #44]	; (8011960 <HAL_PCD_MspInit+0xa0>)
 8011932:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8011934:	4a0a      	ldr	r2, [pc, #40]	; (8011960 <HAL_PCD_MspInit+0xa0>)
 8011936:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 801193a:	6453      	str	r3, [r2, #68]	; 0x44
 801193c:	4b08      	ldr	r3, [pc, #32]	; (8011960 <HAL_PCD_MspInit+0xa0>)
 801193e:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8011940:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 8011944:	60fb      	str	r3, [r7, #12]
 8011946:	68fb      	ldr	r3, [r7, #12]

    /* Peripheral interrupt init */
    HAL_NVIC_SetPriority(OTG_FS_IRQn, 0, 0);
 8011948:	2200      	movs	r2, #0
 801194a:	2100      	movs	r1, #0
 801194c:	2043      	movs	r0, #67	; 0x43
 801194e:	f7f0 fe5c 	bl	800260a <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(OTG_FS_IRQn);
 8011952:	2043      	movs	r0, #67	; 0x43
 8011954:	f7f0 fe75 	bl	8002642 <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN USB_OTG_FS_MspInit 1 */

  /* USER CODE END USB_OTG_FS_MspInit 1 */
  }
}
 8011958:	bf00      	nop
 801195a:	3728      	adds	r7, #40	; 0x28
 801195c:	46bd      	mov	sp, r7
 801195e:	bd80      	pop	{r7, pc}
 8011960:	40023800 	.word	0x40023800
 8011964:	40020000 	.word	0x40020000

08011968 <HAL_PCD_SetupStageCallback>:
#if (USE_HAL_PCD_REGISTER_CALLBACKS == 1U)
static void PCD_SetupStageCallback(PCD_HandleTypeDef *hpcd)
#else
void HAL_PCD_SetupStageCallback(PCD_HandleTypeDef *hpcd)
#endif /* USE_HAL_PCD_REGISTER_CALLBACKS */
{
 8011968:	b580      	push	{r7, lr}
 801196a:	b082      	sub	sp, #8
 801196c:	af00      	add	r7, sp, #0
 801196e:	6078      	str	r0, [r7, #4]
  USBD_LL_SetupStage((USBD_HandleTypeDef*)hpcd->pData, (uint8_t *)hpcd->Setup);
 8011970:	687b      	ldr	r3, [r7, #4]
 8011972:	f8d3 24e0 	ldr.w	r2, [r3, #1248]	; 0x4e0
 8011976:	687b      	ldr	r3, [r7, #4]
 8011978:	f203 439c 	addw	r3, r3, #1180	; 0x49c
 801197c:	4619      	mov	r1, r3
 801197e:	4610      	mov	r0, r2
 8011980:	f7f7 fba3 	bl	80090ca <USBD_LL_SetupStage>
}
 8011984:	bf00      	nop
 8011986:	3708      	adds	r7, #8
 8011988:	46bd      	mov	sp, r7
 801198a:	bd80      	pop	{r7, pc}

0801198c <HAL_PCD_DataOutStageCallback>:
#if (USE_HAL_PCD_REGISTER_CALLBACKS == 1U)
static void PCD_DataOutStageCallback(PCD_HandleTypeDef *hpcd, uint8_t epnum)
#else
void HAL_PCD_DataOutStageCallback(PCD_HandleTypeDef *hpcd, uint8_t epnum)
#endif /* USE_HAL_PCD_REGISTER_CALLBACKS */
{
 801198c:	b580      	push	{r7, lr}
 801198e:	b082      	sub	sp, #8
 8011990:	af00      	add	r7, sp, #0
 8011992:	6078      	str	r0, [r7, #4]
 8011994:	460b      	mov	r3, r1
 8011996:	70fb      	strb	r3, [r7, #3]
  USBD_LL_DataOutStage((USBD_HandleTypeDef*)hpcd->pData, epnum, hpcd->OUT_ep[epnum].xfer_buff);
 8011998:	687b      	ldr	r3, [r7, #4]
 801199a:	f8d3 04e0 	ldr.w	r0, [r3, #1248]	; 0x4e0
 801199e:	78fa      	ldrb	r2, [r7, #3]
 80119a0:	6879      	ldr	r1, [r7, #4]
 80119a2:	4613      	mov	r3, r2
 80119a4:	00db      	lsls	r3, r3, #3
 80119a6:	4413      	add	r3, r2
 80119a8:	009b      	lsls	r3, r3, #2
 80119aa:	440b      	add	r3, r1
 80119ac:	f503 7318 	add.w	r3, r3, #608	; 0x260
 80119b0:	681a      	ldr	r2, [r3, #0]
 80119b2:	78fb      	ldrb	r3, [r7, #3]
 80119b4:	4619      	mov	r1, r3
 80119b6:	f7f7 fbdd 	bl	8009174 <USBD_LL_DataOutStage>
}
 80119ba:	bf00      	nop
 80119bc:	3708      	adds	r7, #8
 80119be:	46bd      	mov	sp, r7
 80119c0:	bd80      	pop	{r7, pc}

080119c2 <HAL_PCD_DataInStageCallback>:
#if (USE_HAL_PCD_REGISTER_CALLBACKS == 1U)
static void PCD_DataInStageCallback(PCD_HandleTypeDef *hpcd, uint8_t epnum)
#else
void HAL_PCD_DataInStageCallback(PCD_HandleTypeDef *hpcd, uint8_t epnum)
#endif /* USE_HAL_PCD_REGISTER_CALLBACKS */
{
 80119c2:	b580      	push	{r7, lr}
 80119c4:	b082      	sub	sp, #8
 80119c6:	af00      	add	r7, sp, #0
 80119c8:	6078      	str	r0, [r7, #4]
 80119ca:	460b      	mov	r3, r1
 80119cc:	70fb      	strb	r3, [r7, #3]
  USBD_LL_DataInStage((USBD_HandleTypeDef*)hpcd->pData, epnum, hpcd->IN_ep[epnum].xfer_buff);
 80119ce:	687b      	ldr	r3, [r7, #4]
 80119d0:	f8d3 04e0 	ldr.w	r0, [r3, #1248]	; 0x4e0
 80119d4:	78fa      	ldrb	r2, [r7, #3]
 80119d6:	6879      	ldr	r1, [r7, #4]
 80119d8:	4613      	mov	r3, r2
 80119da:	00db      	lsls	r3, r3, #3
 80119dc:	4413      	add	r3, r2
 80119de:	009b      	lsls	r3, r3, #2
 80119e0:	440b      	add	r3, r1
 80119e2:	3320      	adds	r3, #32
 80119e4:	681a      	ldr	r2, [r3, #0]
 80119e6:	78fb      	ldrb	r3, [r7, #3]
 80119e8:	4619      	mov	r1, r3
 80119ea:	f7f7 fc76 	bl	80092da <USBD_LL_DataInStage>
}
 80119ee:	bf00      	nop
 80119f0:	3708      	adds	r7, #8
 80119f2:	46bd      	mov	sp, r7
 80119f4:	bd80      	pop	{r7, pc}

080119f6 <HAL_PCD_SOFCallback>:
#if (USE_HAL_PCD_REGISTER_CALLBACKS == 1U)
static void PCD_SOFCallback(PCD_HandleTypeDef *hpcd)
#else
void HAL_PCD_SOFCallback(PCD_HandleTypeDef *hpcd)
#endif /* USE_HAL_PCD_REGISTER_CALLBACKS */
{
 80119f6:	b580      	push	{r7, lr}
 80119f8:	b082      	sub	sp, #8
 80119fa:	af00      	add	r7, sp, #0
 80119fc:	6078      	str	r0, [r7, #4]
  USBD_LL_SOF((USBD_HandleTypeDef*)hpcd->pData);
 80119fe:	687b      	ldr	r3, [r7, #4]
 8011a00:	f8d3 34e0 	ldr.w	r3, [r3, #1248]	; 0x4e0
 8011a04:	4618      	mov	r0, r3
 8011a06:	f7f7 fdb0 	bl	800956a <USBD_LL_SOF>
}
 8011a0a:	bf00      	nop
 8011a0c:	3708      	adds	r7, #8
 8011a0e:	46bd      	mov	sp, r7
 8011a10:	bd80      	pop	{r7, pc}

08011a12 <HAL_PCD_ResetCallback>:
#if (USE_HAL_PCD_REGISTER_CALLBACKS == 1U)
static void PCD_ResetCallback(PCD_HandleTypeDef *hpcd)
#else
void HAL_PCD_ResetCallback(PCD_HandleTypeDef *hpcd)
#endif /* USE_HAL_PCD_REGISTER_CALLBACKS */
{
 8011a12:	b580      	push	{r7, lr}
 8011a14:	b084      	sub	sp, #16
 8011a16:	af00      	add	r7, sp, #0
 8011a18:	6078      	str	r0, [r7, #4]
   USBD_SpeedTypeDef speed = USBD_SPEED_FULL;
 8011a1a:	2301      	movs	r3, #1
 8011a1c:	73fb      	strb	r3, [r7, #15]

  if ( hpcd->Init.speed != PCD_SPEED_FULL)
 8011a1e:	687b      	ldr	r3, [r7, #4]
 8011a20:	79db      	ldrb	r3, [r3, #7]
 8011a22:	2b02      	cmp	r3, #2
 8011a24:	d001      	beq.n	8011a2a <HAL_PCD_ResetCallback+0x18>
  {
    Error_Handler();
 8011a26:	f7ef fd8d 	bl	8001544 <Error_Handler>
  }
    /* Set Speed. */
  USBD_LL_SetSpeed((USBD_HandleTypeDef*)hpcd->pData, speed);
 8011a2a:	687b      	ldr	r3, [r7, #4]
 8011a2c:	f8d3 34e0 	ldr.w	r3, [r3, #1248]	; 0x4e0
 8011a30:	7bfa      	ldrb	r2, [r7, #15]
 8011a32:	4611      	mov	r1, r2
 8011a34:	4618      	mov	r0, r3
 8011a36:	f7f7 fd54 	bl	80094e2 <USBD_LL_SetSpeed>

  /* Reset Device. */
  USBD_LL_Reset((USBD_HandleTypeDef*)hpcd->pData);
 8011a3a:	687b      	ldr	r3, [r7, #4]
 8011a3c:	f8d3 34e0 	ldr.w	r3, [r3, #1248]	; 0x4e0
 8011a40:	4618      	mov	r0, r3
 8011a42:	f7f7 fcfc 	bl	800943e <USBD_LL_Reset>
}
 8011a46:	bf00      	nop
 8011a48:	3710      	adds	r7, #16
 8011a4a:	46bd      	mov	sp, r7
 8011a4c:	bd80      	pop	{r7, pc}
	...

08011a50 <HAL_PCD_SuspendCallback>:
#if (USE_HAL_PCD_REGISTER_CALLBACKS == 1U)
static void PCD_SuspendCallback(PCD_HandleTypeDef *hpcd)
#else
void HAL_PCD_SuspendCallback(PCD_HandleTypeDef *hpcd)
#endif /* USE_HAL_PCD_REGISTER_CALLBACKS */
{
 8011a50:	b580      	push	{r7, lr}
 8011a52:	b082      	sub	sp, #8
 8011a54:	af00      	add	r7, sp, #0
 8011a56:	6078      	str	r0, [r7, #4]
  /* Inform USB library that core enters in suspend Mode. */
  USBD_LL_Suspend((USBD_HandleTypeDef*)hpcd->pData);
 8011a58:	687b      	ldr	r3, [r7, #4]
 8011a5a:	f8d3 34e0 	ldr.w	r3, [r3, #1248]	; 0x4e0
 8011a5e:	4618      	mov	r0, r3
 8011a60:	f7f7 fd4f 	bl	8009502 <USBD_LL_Suspend>
  __HAL_PCD_GATE_PHYCLOCK(hpcd);
 8011a64:	687b      	ldr	r3, [r7, #4]
 8011a66:	681b      	ldr	r3, [r3, #0]
 8011a68:	f503 6360 	add.w	r3, r3, #3584	; 0xe00
 8011a6c:	681b      	ldr	r3, [r3, #0]
 8011a6e:	687a      	ldr	r2, [r7, #4]
 8011a70:	6812      	ldr	r2, [r2, #0]
 8011a72:	f502 6260 	add.w	r2, r2, #3584	; 0xe00
 8011a76:	f043 0301 	orr.w	r3, r3, #1
 8011a7a:	6013      	str	r3, [r2, #0]
  /* Enter in STOP mode. */
  /* USER CODE BEGIN 2 */
  if (hpcd->Init.low_power_enable)
 8011a7c:	687b      	ldr	r3, [r7, #4]
 8011a7e:	7adb      	ldrb	r3, [r3, #11]
 8011a80:	2b00      	cmp	r3, #0
 8011a82:	d005      	beq.n	8011a90 <HAL_PCD_SuspendCallback+0x40>
  {
    /* Set SLEEPDEEP bit and SleepOnExit of Cortex System Control Register. */
    SCB->SCR |= (uint32_t)((uint32_t)(SCB_SCR_SLEEPDEEP_Msk | SCB_SCR_SLEEPONEXIT_Msk));
 8011a84:	4b04      	ldr	r3, [pc, #16]	; (8011a98 <HAL_PCD_SuspendCallback+0x48>)
 8011a86:	691b      	ldr	r3, [r3, #16]
 8011a88:	4a03      	ldr	r2, [pc, #12]	; (8011a98 <HAL_PCD_SuspendCallback+0x48>)
 8011a8a:	f043 0306 	orr.w	r3, r3, #6
 8011a8e:	6113      	str	r3, [r2, #16]
  }
  /* USER CODE END 2 */
}
 8011a90:	bf00      	nop
 8011a92:	3708      	adds	r7, #8
 8011a94:	46bd      	mov	sp, r7
 8011a96:	bd80      	pop	{r7, pc}
 8011a98:	e000ed00 	.word	0xe000ed00

08011a9c <HAL_PCD_ResumeCallback>:
#if (USE_HAL_PCD_REGISTER_CALLBACKS == 1U)
static void PCD_ResumeCallback(PCD_HandleTypeDef *hpcd)
#else
void HAL_PCD_ResumeCallback(PCD_HandleTypeDef *hpcd)
#endif /* USE_HAL_PCD_REGISTER_CALLBACKS */
{
 8011a9c:	b580      	push	{r7, lr}
 8011a9e:	b082      	sub	sp, #8
 8011aa0:	af00      	add	r7, sp, #0
 8011aa2:	6078      	str	r0, [r7, #4]
  /* USER CODE BEGIN 3 */

  /* USER CODE END 3 */
  USBD_LL_Resume((USBD_HandleTypeDef*)hpcd->pData);
 8011aa4:	687b      	ldr	r3, [r7, #4]
 8011aa6:	f8d3 34e0 	ldr.w	r3, [r3, #1248]	; 0x4e0
 8011aaa:	4618      	mov	r0, r3
 8011aac:	f7f7 fd45 	bl	800953a <USBD_LL_Resume>
}
 8011ab0:	bf00      	nop
 8011ab2:	3708      	adds	r7, #8
 8011ab4:	46bd      	mov	sp, r7
 8011ab6:	bd80      	pop	{r7, pc}

08011ab8 <HAL_PCD_ISOOUTIncompleteCallback>:
#if (USE_HAL_PCD_REGISTER_CALLBACKS == 1U)
static void PCD_ISOOUTIncompleteCallback(PCD_HandleTypeDef *hpcd, uint8_t epnum)
#else
void HAL_PCD_ISOOUTIncompleteCallback(PCD_HandleTypeDef *hpcd, uint8_t epnum)
#endif /* USE_HAL_PCD_REGISTER_CALLBACKS */
{
 8011ab8:	b580      	push	{r7, lr}
 8011aba:	b082      	sub	sp, #8
 8011abc:	af00      	add	r7, sp, #0
 8011abe:	6078      	str	r0, [r7, #4]
 8011ac0:	460b      	mov	r3, r1
 8011ac2:	70fb      	strb	r3, [r7, #3]
  USBD_LL_IsoOUTIncomplete((USBD_HandleTypeDef*)hpcd->pData, epnum);
 8011ac4:	687b      	ldr	r3, [r7, #4]
 8011ac6:	f8d3 34e0 	ldr.w	r3, [r3, #1248]	; 0x4e0
 8011aca:	78fa      	ldrb	r2, [r7, #3]
 8011acc:	4611      	mov	r1, r2
 8011ace:	4618      	mov	r0, r3
 8011ad0:	f7f7 fd9d 	bl	800960e <USBD_LL_IsoOUTIncomplete>
}
 8011ad4:	bf00      	nop
 8011ad6:	3708      	adds	r7, #8
 8011ad8:	46bd      	mov	sp, r7
 8011ada:	bd80      	pop	{r7, pc}

08011adc <HAL_PCD_ISOINIncompleteCallback>:
#if (USE_HAL_PCD_REGISTER_CALLBACKS == 1U)
static void PCD_ISOINIncompleteCallback(PCD_HandleTypeDef *hpcd, uint8_t epnum)
#else
void HAL_PCD_ISOINIncompleteCallback(PCD_HandleTypeDef *hpcd, uint8_t epnum)
#endif /* USE_HAL_PCD_REGISTER_CALLBACKS */
{
 8011adc:	b580      	push	{r7, lr}
 8011ade:	b082      	sub	sp, #8
 8011ae0:	af00      	add	r7, sp, #0
 8011ae2:	6078      	str	r0, [r7, #4]
 8011ae4:	460b      	mov	r3, r1
 8011ae6:	70fb      	strb	r3, [r7, #3]
  USBD_LL_IsoINIncomplete((USBD_HandleTypeDef*)hpcd->pData, epnum);
 8011ae8:	687b      	ldr	r3, [r7, #4]
 8011aea:	f8d3 34e0 	ldr.w	r3, [r3, #1248]	; 0x4e0
 8011aee:	78fa      	ldrb	r2, [r7, #3]
 8011af0:	4611      	mov	r1, r2
 8011af2:	4618      	mov	r0, r3
 8011af4:	f7f7 fd59 	bl	80095aa <USBD_LL_IsoINIncomplete>
}
 8011af8:	bf00      	nop
 8011afa:	3708      	adds	r7, #8
 8011afc:	46bd      	mov	sp, r7
 8011afe:	bd80      	pop	{r7, pc}

08011b00 <HAL_PCD_ConnectCallback>:
#if (USE_HAL_PCD_REGISTER_CALLBACKS == 1U)
static void PCD_ConnectCallback(PCD_HandleTypeDef *hpcd)
#else
void HAL_PCD_ConnectCallback(PCD_HandleTypeDef *hpcd)
#endif /* USE_HAL_PCD_REGISTER_CALLBACKS */
{
 8011b00:	b580      	push	{r7, lr}
 8011b02:	b082      	sub	sp, #8
 8011b04:	af00      	add	r7, sp, #0
 8011b06:	6078      	str	r0, [r7, #4]
  USBD_LL_DevConnected((USBD_HandleTypeDef*)hpcd->pData);
 8011b08:	687b      	ldr	r3, [r7, #4]
 8011b0a:	f8d3 34e0 	ldr.w	r3, [r3, #1248]	; 0x4e0
 8011b0e:	4618      	mov	r0, r3
 8011b10:	f7f7 fdaf 	bl	8009672 <USBD_LL_DevConnected>
}
 8011b14:	bf00      	nop
 8011b16:	3708      	adds	r7, #8
 8011b18:	46bd      	mov	sp, r7
 8011b1a:	bd80      	pop	{r7, pc}

08011b1c <HAL_PCD_DisconnectCallback>:
#if (USE_HAL_PCD_REGISTER_CALLBACKS == 1U)
static void PCD_DisconnectCallback(PCD_HandleTypeDef *hpcd)
#else
void HAL_PCD_DisconnectCallback(PCD_HandleTypeDef *hpcd)
#endif /* USE_HAL_PCD_REGISTER_CALLBACKS */
{
 8011b1c:	b580      	push	{r7, lr}
 8011b1e:	b082      	sub	sp, #8
 8011b20:	af00      	add	r7, sp, #0
 8011b22:	6078      	str	r0, [r7, #4]
  USBD_LL_DevDisconnected((USBD_HandleTypeDef*)hpcd->pData);
 8011b24:	687b      	ldr	r3, [r7, #4]
 8011b26:	f8d3 34e0 	ldr.w	r3, [r3, #1248]	; 0x4e0
 8011b2a:	4618      	mov	r0, r3
 8011b2c:	f7f7 fdac 	bl	8009688 <USBD_LL_DevDisconnected>
}
 8011b30:	bf00      	nop
 8011b32:	3708      	adds	r7, #8
 8011b34:	46bd      	mov	sp, r7
 8011b36:	bd80      	pop	{r7, pc}

08011b38 <USBD_LL_Init>:
  * @brief  Initializes the low level portion of the device driver.
  * @param  pdev: Device handle
  * @retval USBD status
  */
USBD_StatusTypeDef USBD_LL_Init(USBD_HandleTypeDef *pdev)
{
 8011b38:	b580      	push	{r7, lr}
 8011b3a:	b082      	sub	sp, #8
 8011b3c:	af00      	add	r7, sp, #0
 8011b3e:	6078      	str	r0, [r7, #4]
  /* Init USB Ip. */
  if (pdev->id == DEVICE_FS) {
 8011b40:	687b      	ldr	r3, [r7, #4]
 8011b42:	781b      	ldrb	r3, [r3, #0]
 8011b44:	2b00      	cmp	r3, #0
 8011b46:	d13c      	bne.n	8011bc2 <USBD_LL_Init+0x8a>
  /* Link the driver to the stack. */
  hpcd_USB_OTG_FS.pData = pdev;
 8011b48:	4a20      	ldr	r2, [pc, #128]	; (8011bcc <USBD_LL_Init+0x94>)
 8011b4a:	687b      	ldr	r3, [r7, #4]
 8011b4c:	f8c2 34e0 	str.w	r3, [r2, #1248]	; 0x4e0
  pdev->pData = &hpcd_USB_OTG_FS;
 8011b50:	687b      	ldr	r3, [r7, #4]
 8011b52:	4a1e      	ldr	r2, [pc, #120]	; (8011bcc <USBD_LL_Init+0x94>)
 8011b54:	f8c3 22c8 	str.w	r2, [r3, #712]	; 0x2c8

  hpcd_USB_OTG_FS.Instance = USB_OTG_FS;
 8011b58:	4b1c      	ldr	r3, [pc, #112]	; (8011bcc <USBD_LL_Init+0x94>)
 8011b5a:	f04f 42a0 	mov.w	r2, #1342177280	; 0x50000000
 8011b5e:	601a      	str	r2, [r3, #0]
  hpcd_USB_OTG_FS.Init.dev_endpoints = 4;
 8011b60:	4b1a      	ldr	r3, [pc, #104]	; (8011bcc <USBD_LL_Init+0x94>)
 8011b62:	2204      	movs	r2, #4
 8011b64:	711a      	strb	r2, [r3, #4]
  hpcd_USB_OTG_FS.Init.speed = PCD_SPEED_FULL;
 8011b66:	4b19      	ldr	r3, [pc, #100]	; (8011bcc <USBD_LL_Init+0x94>)
 8011b68:	2202      	movs	r2, #2
 8011b6a:	71da      	strb	r2, [r3, #7]
  hpcd_USB_OTG_FS.Init.dma_enable = DISABLE;
 8011b6c:	4b17      	ldr	r3, [pc, #92]	; (8011bcc <USBD_LL_Init+0x94>)
 8011b6e:	2200      	movs	r2, #0
 8011b70:	719a      	strb	r2, [r3, #6]
  hpcd_USB_OTG_FS.Init.phy_itface = PCD_PHY_EMBEDDED;
 8011b72:	4b16      	ldr	r3, [pc, #88]	; (8011bcc <USBD_LL_Init+0x94>)
 8011b74:	2202      	movs	r2, #2
 8011b76:	725a      	strb	r2, [r3, #9]
  hpcd_USB_OTG_FS.Init.Sof_enable = DISABLE;
 8011b78:	4b14      	ldr	r3, [pc, #80]	; (8011bcc <USBD_LL_Init+0x94>)
 8011b7a:	2200      	movs	r2, #0
 8011b7c:	729a      	strb	r2, [r3, #10]
  hpcd_USB_OTG_FS.Init.low_power_enable = DISABLE;
 8011b7e:	4b13      	ldr	r3, [pc, #76]	; (8011bcc <USBD_LL_Init+0x94>)
 8011b80:	2200      	movs	r2, #0
 8011b82:	72da      	strb	r2, [r3, #11]
  hpcd_USB_OTG_FS.Init.lpm_enable = DISABLE;
 8011b84:	4b11      	ldr	r3, [pc, #68]	; (8011bcc <USBD_LL_Init+0x94>)
 8011b86:	2200      	movs	r2, #0
 8011b88:	731a      	strb	r2, [r3, #12]
  hpcd_USB_OTG_FS.Init.vbus_sensing_enable = DISABLE;
 8011b8a:	4b10      	ldr	r3, [pc, #64]	; (8011bcc <USBD_LL_Init+0x94>)
 8011b8c:	2200      	movs	r2, #0
 8011b8e:	739a      	strb	r2, [r3, #14]
  hpcd_USB_OTG_FS.Init.use_dedicated_ep1 = DISABLE;
 8011b90:	4b0e      	ldr	r3, [pc, #56]	; (8011bcc <USBD_LL_Init+0x94>)
 8011b92:	2200      	movs	r2, #0
 8011b94:	73da      	strb	r2, [r3, #15]
  if (HAL_PCD_Init(&hpcd_USB_OTG_FS) != HAL_OK)
 8011b96:	480d      	ldr	r0, [pc, #52]	; (8011bcc <USBD_LL_Init+0x94>)
 8011b98:	f7f1 fabb 	bl	8003112 <HAL_PCD_Init>
 8011b9c:	4603      	mov	r3, r0
 8011b9e:	2b00      	cmp	r3, #0
 8011ba0:	d001      	beq.n	8011ba6 <USBD_LL_Init+0x6e>
  {
    Error_Handler( );
 8011ba2:	f7ef fccf 	bl	8001544 <Error_Handler>
  HAL_PCD_RegisterDataOutStageCallback(&hpcd_USB_OTG_FS, PCD_DataOutStageCallback);
  HAL_PCD_RegisterDataInStageCallback(&hpcd_USB_OTG_FS, PCD_DataInStageCallback);
  HAL_PCD_RegisterIsoOutIncpltCallback(&hpcd_USB_OTG_FS, PCD_ISOOUTIncompleteCallback);
  HAL_PCD_RegisterIsoInIncpltCallback(&hpcd_USB_OTG_FS, PCD_ISOINIncompleteCallback);
#endif /* USE_HAL_PCD_REGISTER_CALLBACKS */
  HAL_PCDEx_SetRxFiFo(&hpcd_USB_OTG_FS, 0x80);
 8011ba6:	2180      	movs	r1, #128	; 0x80
 8011ba8:	4808      	ldr	r0, [pc, #32]	; (8011bcc <USBD_LL_Init+0x94>)
 8011baa:	f7f2 fce6 	bl	800457a <HAL_PCDEx_SetRxFiFo>
  HAL_PCDEx_SetTxFiFo(&hpcd_USB_OTG_FS, 0, 0x40);
 8011bae:	2240      	movs	r2, #64	; 0x40
 8011bb0:	2100      	movs	r1, #0
 8011bb2:	4806      	ldr	r0, [pc, #24]	; (8011bcc <USBD_LL_Init+0x94>)
 8011bb4:	f7f2 fc9a 	bl	80044ec <HAL_PCDEx_SetTxFiFo>
  HAL_PCDEx_SetTxFiFo(&hpcd_USB_OTG_FS, 1, 0x80);
 8011bb8:	2280      	movs	r2, #128	; 0x80
 8011bba:	2101      	movs	r1, #1
 8011bbc:	4803      	ldr	r0, [pc, #12]	; (8011bcc <USBD_LL_Init+0x94>)
 8011bbe:	f7f2 fc95 	bl	80044ec <HAL_PCDEx_SetTxFiFo>
  }
  return USBD_OK;
 8011bc2:	2300      	movs	r3, #0
}
 8011bc4:	4618      	mov	r0, r3
 8011bc6:	3708      	adds	r7, #8
 8011bc8:	46bd      	mov	sp, r7
 8011bca:	bd80      	pop	{r7, pc}
 8011bcc:	20006524 	.word	0x20006524

08011bd0 <USBD_LL_Start>:
  * @brief  Starts the low level portion of the device driver.
  * @param  pdev: Device handle
  * @retval USBD status
  */
USBD_StatusTypeDef USBD_LL_Start(USBD_HandleTypeDef *pdev)
{
 8011bd0:	b580      	push	{r7, lr}
 8011bd2:	b084      	sub	sp, #16
 8011bd4:	af00      	add	r7, sp, #0
 8011bd6:	6078      	str	r0, [r7, #4]
  HAL_StatusTypeDef hal_status = HAL_OK;
 8011bd8:	2300      	movs	r3, #0
 8011bda:	73fb      	strb	r3, [r7, #15]
  USBD_StatusTypeDef usb_status = USBD_OK;
 8011bdc:	2300      	movs	r3, #0
 8011bde:	73bb      	strb	r3, [r7, #14]

  hal_status = HAL_PCD_Start(pdev->pData);
 8011be0:	687b      	ldr	r3, [r7, #4]
 8011be2:	f8d3 32c8 	ldr.w	r3, [r3, #712]	; 0x2c8
 8011be6:	4618      	mov	r0, r3
 8011be8:	f7f1 fba2 	bl	8003330 <HAL_PCD_Start>
 8011bec:	4603      	mov	r3, r0
 8011bee:	73fb      	strb	r3, [r7, #15]

  usb_status =  USBD_Get_USB_Status(hal_status);
 8011bf0:	7bfb      	ldrb	r3, [r7, #15]
 8011bf2:	4618      	mov	r0, r3
 8011bf4:	f000 f942 	bl	8011e7c <USBD_Get_USB_Status>
 8011bf8:	4603      	mov	r3, r0
 8011bfa:	73bb      	strb	r3, [r7, #14]

  return usb_status;
 8011bfc:	7bbb      	ldrb	r3, [r7, #14]
}
 8011bfe:	4618      	mov	r0, r3
 8011c00:	3710      	adds	r7, #16
 8011c02:	46bd      	mov	sp, r7
 8011c04:	bd80      	pop	{r7, pc}

08011c06 <USBD_LL_OpenEP>:
  * @param  ep_type: Endpoint type
  * @param  ep_mps: Endpoint max packet size
  * @retval USBD status
  */
USBD_StatusTypeDef USBD_LL_OpenEP(USBD_HandleTypeDef *pdev, uint8_t ep_addr, uint8_t ep_type, uint16_t ep_mps)
{
 8011c06:	b580      	push	{r7, lr}
 8011c08:	b084      	sub	sp, #16
 8011c0a:	af00      	add	r7, sp, #0
 8011c0c:	6078      	str	r0, [r7, #4]
 8011c0e:	4608      	mov	r0, r1
 8011c10:	4611      	mov	r1, r2
 8011c12:	461a      	mov	r2, r3
 8011c14:	4603      	mov	r3, r0
 8011c16:	70fb      	strb	r3, [r7, #3]
 8011c18:	460b      	mov	r3, r1
 8011c1a:	70bb      	strb	r3, [r7, #2]
 8011c1c:	4613      	mov	r3, r2
 8011c1e:	803b      	strh	r3, [r7, #0]
  HAL_StatusTypeDef hal_status = HAL_OK;
 8011c20:	2300      	movs	r3, #0
 8011c22:	73fb      	strb	r3, [r7, #15]
  USBD_StatusTypeDef usb_status = USBD_OK;
 8011c24:	2300      	movs	r3, #0
 8011c26:	73bb      	strb	r3, [r7, #14]

  hal_status = HAL_PCD_EP_Open(pdev->pData, ep_addr, ep_mps, ep_type);
 8011c28:	687b      	ldr	r3, [r7, #4]
 8011c2a:	f8d3 02c8 	ldr.w	r0, [r3, #712]	; 0x2c8
 8011c2e:	78bb      	ldrb	r3, [r7, #2]
 8011c30:	883a      	ldrh	r2, [r7, #0]
 8011c32:	78f9      	ldrb	r1, [r7, #3]
 8011c34:	f7f2 f876 	bl	8003d24 <HAL_PCD_EP_Open>
 8011c38:	4603      	mov	r3, r0
 8011c3a:	73fb      	strb	r3, [r7, #15]

  usb_status =  USBD_Get_USB_Status(hal_status);
 8011c3c:	7bfb      	ldrb	r3, [r7, #15]
 8011c3e:	4618      	mov	r0, r3
 8011c40:	f000 f91c 	bl	8011e7c <USBD_Get_USB_Status>
 8011c44:	4603      	mov	r3, r0
 8011c46:	73bb      	strb	r3, [r7, #14]

  return usb_status;
 8011c48:	7bbb      	ldrb	r3, [r7, #14]
}
 8011c4a:	4618      	mov	r0, r3
 8011c4c:	3710      	adds	r7, #16
 8011c4e:	46bd      	mov	sp, r7
 8011c50:	bd80      	pop	{r7, pc}

08011c52 <USBD_LL_CloseEP>:
  * @param  pdev: Device handle
  * @param  ep_addr: Endpoint number
  * @retval USBD status
  */
USBD_StatusTypeDef USBD_LL_CloseEP(USBD_HandleTypeDef *pdev, uint8_t ep_addr)
{
 8011c52:	b580      	push	{r7, lr}
 8011c54:	b084      	sub	sp, #16
 8011c56:	af00      	add	r7, sp, #0
 8011c58:	6078      	str	r0, [r7, #4]
 8011c5a:	460b      	mov	r3, r1
 8011c5c:	70fb      	strb	r3, [r7, #3]
  HAL_StatusTypeDef hal_status = HAL_OK;
 8011c5e:	2300      	movs	r3, #0
 8011c60:	73fb      	strb	r3, [r7, #15]
  USBD_StatusTypeDef usb_status = USBD_OK;
 8011c62:	2300      	movs	r3, #0
 8011c64:	73bb      	strb	r3, [r7, #14]

  hal_status = HAL_PCD_EP_Close(pdev->pData, ep_addr);
 8011c66:	687b      	ldr	r3, [r7, #4]
 8011c68:	f8d3 32c8 	ldr.w	r3, [r3, #712]	; 0x2c8
 8011c6c:	78fa      	ldrb	r2, [r7, #3]
 8011c6e:	4611      	mov	r1, r2
 8011c70:	4618      	mov	r0, r3
 8011c72:	f7f2 f8bf 	bl	8003df4 <HAL_PCD_EP_Close>
 8011c76:	4603      	mov	r3, r0
 8011c78:	73fb      	strb	r3, [r7, #15]

  usb_status =  USBD_Get_USB_Status(hal_status);
 8011c7a:	7bfb      	ldrb	r3, [r7, #15]
 8011c7c:	4618      	mov	r0, r3
 8011c7e:	f000 f8fd 	bl	8011e7c <USBD_Get_USB_Status>
 8011c82:	4603      	mov	r3, r0
 8011c84:	73bb      	strb	r3, [r7, #14]

  return usb_status;
 8011c86:	7bbb      	ldrb	r3, [r7, #14]
}
 8011c88:	4618      	mov	r0, r3
 8011c8a:	3710      	adds	r7, #16
 8011c8c:	46bd      	mov	sp, r7
 8011c8e:	bd80      	pop	{r7, pc}

08011c90 <USBD_LL_StallEP>:
  * @param  pdev: Device handle
  * @param  ep_addr: Endpoint number
  * @retval USBD status
  */
USBD_StatusTypeDef USBD_LL_StallEP(USBD_HandleTypeDef *pdev, uint8_t ep_addr)
{
 8011c90:	b580      	push	{r7, lr}
 8011c92:	b084      	sub	sp, #16
 8011c94:	af00      	add	r7, sp, #0
 8011c96:	6078      	str	r0, [r7, #4]
 8011c98:	460b      	mov	r3, r1
 8011c9a:	70fb      	strb	r3, [r7, #3]
  HAL_StatusTypeDef hal_status = HAL_OK;
 8011c9c:	2300      	movs	r3, #0
 8011c9e:	73fb      	strb	r3, [r7, #15]
  USBD_StatusTypeDef usb_status = USBD_OK;
 8011ca0:	2300      	movs	r3, #0
 8011ca2:	73bb      	strb	r3, [r7, #14]

  hal_status = HAL_PCD_EP_SetStall(pdev->pData, ep_addr);
 8011ca4:	687b      	ldr	r3, [r7, #4]
 8011ca6:	f8d3 32c8 	ldr.w	r3, [r3, #712]	; 0x2c8
 8011caa:	78fa      	ldrb	r2, [r7, #3]
 8011cac:	4611      	mov	r1, r2
 8011cae:	4618      	mov	r0, r3
 8011cb0:	f7f2 f977 	bl	8003fa2 <HAL_PCD_EP_SetStall>
 8011cb4:	4603      	mov	r3, r0
 8011cb6:	73fb      	strb	r3, [r7, #15]

  usb_status =  USBD_Get_USB_Status(hal_status);
 8011cb8:	7bfb      	ldrb	r3, [r7, #15]
 8011cba:	4618      	mov	r0, r3
 8011cbc:	f000 f8de 	bl	8011e7c <USBD_Get_USB_Status>
 8011cc0:	4603      	mov	r3, r0
 8011cc2:	73bb      	strb	r3, [r7, #14]

  return usb_status;
 8011cc4:	7bbb      	ldrb	r3, [r7, #14]
}
 8011cc6:	4618      	mov	r0, r3
 8011cc8:	3710      	adds	r7, #16
 8011cca:	46bd      	mov	sp, r7
 8011ccc:	bd80      	pop	{r7, pc}

08011cce <USBD_LL_ClearStallEP>:
  * @param  pdev: Device handle
  * @param  ep_addr: Endpoint number
  * @retval USBD status
  */
USBD_StatusTypeDef USBD_LL_ClearStallEP(USBD_HandleTypeDef *pdev, uint8_t ep_addr)
{
 8011cce:	b580      	push	{r7, lr}
 8011cd0:	b084      	sub	sp, #16
 8011cd2:	af00      	add	r7, sp, #0
 8011cd4:	6078      	str	r0, [r7, #4]
 8011cd6:	460b      	mov	r3, r1
 8011cd8:	70fb      	strb	r3, [r7, #3]
  HAL_StatusTypeDef hal_status = HAL_OK;
 8011cda:	2300      	movs	r3, #0
 8011cdc:	73fb      	strb	r3, [r7, #15]
  USBD_StatusTypeDef usb_status = USBD_OK;
 8011cde:	2300      	movs	r3, #0
 8011ce0:	73bb      	strb	r3, [r7, #14]

  hal_status = HAL_PCD_EP_ClrStall(pdev->pData, ep_addr);
 8011ce2:	687b      	ldr	r3, [r7, #4]
 8011ce4:	f8d3 32c8 	ldr.w	r3, [r3, #712]	; 0x2c8
 8011ce8:	78fa      	ldrb	r2, [r7, #3]
 8011cea:	4611      	mov	r1, r2
 8011cec:	4618      	mov	r0, r3
 8011cee:	f7f2 f9bb 	bl	8004068 <HAL_PCD_EP_ClrStall>
 8011cf2:	4603      	mov	r3, r0
 8011cf4:	73fb      	strb	r3, [r7, #15]

  usb_status =  USBD_Get_USB_Status(hal_status);
 8011cf6:	7bfb      	ldrb	r3, [r7, #15]
 8011cf8:	4618      	mov	r0, r3
 8011cfa:	f000 f8bf 	bl	8011e7c <USBD_Get_USB_Status>
 8011cfe:	4603      	mov	r3, r0
 8011d00:	73bb      	strb	r3, [r7, #14]

  return usb_status;
 8011d02:	7bbb      	ldrb	r3, [r7, #14]
}
 8011d04:	4618      	mov	r0, r3
 8011d06:	3710      	adds	r7, #16
 8011d08:	46bd      	mov	sp, r7
 8011d0a:	bd80      	pop	{r7, pc}

08011d0c <USBD_LL_IsStallEP>:
  * @param  pdev: Device handle
  * @param  ep_addr: Endpoint number
  * @retval Stall (1: Yes, 0: No)
  */
uint8_t USBD_LL_IsStallEP(USBD_HandleTypeDef *pdev, uint8_t ep_addr)
{
 8011d0c:	b480      	push	{r7}
 8011d0e:	b085      	sub	sp, #20
 8011d10:	af00      	add	r7, sp, #0
 8011d12:	6078      	str	r0, [r7, #4]
 8011d14:	460b      	mov	r3, r1
 8011d16:	70fb      	strb	r3, [r7, #3]
  PCD_HandleTypeDef *hpcd = (PCD_HandleTypeDef*) pdev->pData;
 8011d18:	687b      	ldr	r3, [r7, #4]
 8011d1a:	f8d3 32c8 	ldr.w	r3, [r3, #712]	; 0x2c8
 8011d1e:	60fb      	str	r3, [r7, #12]

  if((ep_addr & 0x80) == 0x80)
 8011d20:	f997 3003 	ldrsb.w	r3, [r7, #3]
 8011d24:	2b00      	cmp	r3, #0
 8011d26:	da0b      	bge.n	8011d40 <USBD_LL_IsStallEP+0x34>
  {
    return hpcd->IN_ep[ep_addr & 0x7F].is_stall;
 8011d28:	78fb      	ldrb	r3, [r7, #3]
 8011d2a:	f003 027f 	and.w	r2, r3, #127	; 0x7f
 8011d2e:	68f9      	ldr	r1, [r7, #12]
 8011d30:	4613      	mov	r3, r2
 8011d32:	00db      	lsls	r3, r3, #3
 8011d34:	4413      	add	r3, r2
 8011d36:	009b      	lsls	r3, r3, #2
 8011d38:	440b      	add	r3, r1
 8011d3a:	3316      	adds	r3, #22
 8011d3c:	781b      	ldrb	r3, [r3, #0]
 8011d3e:	e00b      	b.n	8011d58 <USBD_LL_IsStallEP+0x4c>
  }
  else
  {
    return hpcd->OUT_ep[ep_addr & 0x7F].is_stall;
 8011d40:	78fb      	ldrb	r3, [r7, #3]
 8011d42:	f003 027f 	and.w	r2, r3, #127	; 0x7f
 8011d46:	68f9      	ldr	r1, [r7, #12]
 8011d48:	4613      	mov	r3, r2
 8011d4a:	00db      	lsls	r3, r3, #3
 8011d4c:	4413      	add	r3, r2
 8011d4e:	009b      	lsls	r3, r3, #2
 8011d50:	440b      	add	r3, r1
 8011d52:	f203 2356 	addw	r3, r3, #598	; 0x256
 8011d56:	781b      	ldrb	r3, [r3, #0]
  }
}
 8011d58:	4618      	mov	r0, r3
 8011d5a:	3714      	adds	r7, #20
 8011d5c:	46bd      	mov	sp, r7
 8011d5e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8011d62:	4770      	bx	lr

08011d64 <USBD_LL_SetUSBAddress>:
  * @param  pdev: Device handle
  * @param  dev_addr: Device address
  * @retval USBD status
  */
USBD_StatusTypeDef USBD_LL_SetUSBAddress(USBD_HandleTypeDef *pdev, uint8_t dev_addr)
{
 8011d64:	b580      	push	{r7, lr}
 8011d66:	b084      	sub	sp, #16
 8011d68:	af00      	add	r7, sp, #0
 8011d6a:	6078      	str	r0, [r7, #4]
 8011d6c:	460b      	mov	r3, r1
 8011d6e:	70fb      	strb	r3, [r7, #3]
  HAL_StatusTypeDef hal_status = HAL_OK;
 8011d70:	2300      	movs	r3, #0
 8011d72:	73fb      	strb	r3, [r7, #15]
  USBD_StatusTypeDef usb_status = USBD_OK;
 8011d74:	2300      	movs	r3, #0
 8011d76:	73bb      	strb	r3, [r7, #14]

  hal_status = HAL_PCD_SetAddress(pdev->pData, dev_addr);
 8011d78:	687b      	ldr	r3, [r7, #4]
 8011d7a:	f8d3 32c8 	ldr.w	r3, [r3, #712]	; 0x2c8
 8011d7e:	78fa      	ldrb	r2, [r7, #3]
 8011d80:	4611      	mov	r1, r2
 8011d82:	4618      	mov	r0, r3
 8011d84:	f7f1 ffaa 	bl	8003cdc <HAL_PCD_SetAddress>
 8011d88:	4603      	mov	r3, r0
 8011d8a:	73fb      	strb	r3, [r7, #15]

  usb_status =  USBD_Get_USB_Status(hal_status);
 8011d8c:	7bfb      	ldrb	r3, [r7, #15]
 8011d8e:	4618      	mov	r0, r3
 8011d90:	f000 f874 	bl	8011e7c <USBD_Get_USB_Status>
 8011d94:	4603      	mov	r3, r0
 8011d96:	73bb      	strb	r3, [r7, #14]

  return usb_status;
 8011d98:	7bbb      	ldrb	r3, [r7, #14]
}
 8011d9a:	4618      	mov	r0, r3
 8011d9c:	3710      	adds	r7, #16
 8011d9e:	46bd      	mov	sp, r7
 8011da0:	bd80      	pop	{r7, pc}

08011da2 <USBD_LL_Transmit>:
  * @param  pbuf: Pointer to data to be sent
  * @param  size: Data size
  * @retval USBD status
  */
USBD_StatusTypeDef USBD_LL_Transmit(USBD_HandleTypeDef *pdev, uint8_t ep_addr, uint8_t *pbuf, uint32_t size)
{
 8011da2:	b580      	push	{r7, lr}
 8011da4:	b086      	sub	sp, #24
 8011da6:	af00      	add	r7, sp, #0
 8011da8:	60f8      	str	r0, [r7, #12]
 8011daa:	607a      	str	r2, [r7, #4]
 8011dac:	603b      	str	r3, [r7, #0]
 8011dae:	460b      	mov	r3, r1
 8011db0:	72fb      	strb	r3, [r7, #11]
  HAL_StatusTypeDef hal_status = HAL_OK;
 8011db2:	2300      	movs	r3, #0
 8011db4:	75fb      	strb	r3, [r7, #23]
  USBD_StatusTypeDef usb_status = USBD_OK;
 8011db6:	2300      	movs	r3, #0
 8011db8:	75bb      	strb	r3, [r7, #22]

  hal_status = HAL_PCD_EP_Transmit(pdev->pData, ep_addr, pbuf, size);
 8011dba:	68fb      	ldr	r3, [r7, #12]
 8011dbc:	f8d3 02c8 	ldr.w	r0, [r3, #712]	; 0x2c8
 8011dc0:	7af9      	ldrb	r1, [r7, #11]
 8011dc2:	683b      	ldr	r3, [r7, #0]
 8011dc4:	687a      	ldr	r2, [r7, #4]
 8011dc6:	f7f2 f8b2 	bl	8003f2e <HAL_PCD_EP_Transmit>
 8011dca:	4603      	mov	r3, r0
 8011dcc:	75fb      	strb	r3, [r7, #23]

  usb_status =  USBD_Get_USB_Status(hal_status);
 8011dce:	7dfb      	ldrb	r3, [r7, #23]
 8011dd0:	4618      	mov	r0, r3
 8011dd2:	f000 f853 	bl	8011e7c <USBD_Get_USB_Status>
 8011dd6:	4603      	mov	r3, r0
 8011dd8:	75bb      	strb	r3, [r7, #22]

  return usb_status;
 8011dda:	7dbb      	ldrb	r3, [r7, #22]
}
 8011ddc:	4618      	mov	r0, r3
 8011dde:	3718      	adds	r7, #24
 8011de0:	46bd      	mov	sp, r7
 8011de2:	bd80      	pop	{r7, pc}

08011de4 <USBD_LL_PrepareReceive>:
  * @param  pbuf: Pointer to data to be received
  * @param  size: Data size
  * @retval USBD status
  */
USBD_StatusTypeDef USBD_LL_PrepareReceive(USBD_HandleTypeDef *pdev, uint8_t ep_addr, uint8_t *pbuf, uint32_t size)
{
 8011de4:	b580      	push	{r7, lr}
 8011de6:	b086      	sub	sp, #24
 8011de8:	af00      	add	r7, sp, #0
 8011dea:	60f8      	str	r0, [r7, #12]
 8011dec:	607a      	str	r2, [r7, #4]
 8011dee:	603b      	str	r3, [r7, #0]
 8011df0:	460b      	mov	r3, r1
 8011df2:	72fb      	strb	r3, [r7, #11]
  HAL_StatusTypeDef hal_status = HAL_OK;
 8011df4:	2300      	movs	r3, #0
 8011df6:	75fb      	strb	r3, [r7, #23]
  USBD_StatusTypeDef usb_status = USBD_OK;
 8011df8:	2300      	movs	r3, #0
 8011dfa:	75bb      	strb	r3, [r7, #22]

  hal_status = HAL_PCD_EP_Receive(pdev->pData, ep_addr, pbuf, size);
 8011dfc:	68fb      	ldr	r3, [r7, #12]
 8011dfe:	f8d3 02c8 	ldr.w	r0, [r3, #712]	; 0x2c8
 8011e02:	7af9      	ldrb	r1, [r7, #11]
 8011e04:	683b      	ldr	r3, [r7, #0]
 8011e06:	687a      	ldr	r2, [r7, #4]
 8011e08:	f7f2 f83e 	bl	8003e88 <HAL_PCD_EP_Receive>
 8011e0c:	4603      	mov	r3, r0
 8011e0e:	75fb      	strb	r3, [r7, #23]

  usb_status =  USBD_Get_USB_Status(hal_status);
 8011e10:	7dfb      	ldrb	r3, [r7, #23]
 8011e12:	4618      	mov	r0, r3
 8011e14:	f000 f832 	bl	8011e7c <USBD_Get_USB_Status>
 8011e18:	4603      	mov	r3, r0
 8011e1a:	75bb      	strb	r3, [r7, #22]

  return usb_status;
 8011e1c:	7dbb      	ldrb	r3, [r7, #22]
}
 8011e1e:	4618      	mov	r0, r3
 8011e20:	3718      	adds	r7, #24
 8011e22:	46bd      	mov	sp, r7
 8011e24:	bd80      	pop	{r7, pc}

08011e26 <USBD_LL_GetRxDataSize>:
  * @param  pdev: Device handle
  * @param  ep_addr: Endpoint number
  * @retval Received Data Size
  */
uint32_t USBD_LL_GetRxDataSize(USBD_HandleTypeDef *pdev, uint8_t ep_addr)
{
 8011e26:	b580      	push	{r7, lr}
 8011e28:	b082      	sub	sp, #8
 8011e2a:	af00      	add	r7, sp, #0
 8011e2c:	6078      	str	r0, [r7, #4]
 8011e2e:	460b      	mov	r3, r1
 8011e30:	70fb      	strb	r3, [r7, #3]
  return HAL_PCD_EP_GetRxCount((PCD_HandleTypeDef*) pdev->pData, ep_addr);
 8011e32:	687b      	ldr	r3, [r7, #4]
 8011e34:	f8d3 32c8 	ldr.w	r3, [r3, #712]	; 0x2c8
 8011e38:	78fa      	ldrb	r2, [r7, #3]
 8011e3a:	4611      	mov	r1, r2
 8011e3c:	4618      	mov	r0, r3
 8011e3e:	f7f2 f85e 	bl	8003efe <HAL_PCD_EP_GetRxCount>
 8011e42:	4603      	mov	r3, r0
}
 8011e44:	4618      	mov	r0, r3
 8011e46:	3708      	adds	r7, #8
 8011e48:	46bd      	mov	sp, r7
 8011e4a:	bd80      	pop	{r7, pc}

08011e4c <USBD_static_malloc>:
  * @brief  Static single allocation.
  * @param  size: Size of allocated memory
  * @retval None
  */
void *USBD_static_malloc(uint32_t size)
{
 8011e4c:	b480      	push	{r7}
 8011e4e:	b083      	sub	sp, #12
 8011e50:	af00      	add	r7, sp, #0
 8011e52:	6078      	str	r0, [r7, #4]
  static uint32_t mem[(sizeof(USBD_CDC_HandleTypeDef)/4)+1];/* On 32-bit boundary */
  return mem;
 8011e54:	4b03      	ldr	r3, [pc, #12]	; (8011e64 <USBD_static_malloc+0x18>)
}
 8011e56:	4618      	mov	r0, r3
 8011e58:	370c      	adds	r7, #12
 8011e5a:	46bd      	mov	sp, r7
 8011e5c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8011e60:	4770      	bx	lr
 8011e62:	bf00      	nop
 8011e64:	20006a08 	.word	0x20006a08

08011e68 <USBD_static_free>:
  * @brief  Dummy memory free
  * @param  p: Pointer to allocated  memory address
  * @retval None
  */
void USBD_static_free(void *p)
{
 8011e68:	b480      	push	{r7}
 8011e6a:	b083      	sub	sp, #12
 8011e6c:	af00      	add	r7, sp, #0
 8011e6e:	6078      	str	r0, [r7, #4]

}
 8011e70:	bf00      	nop
 8011e72:	370c      	adds	r7, #12
 8011e74:	46bd      	mov	sp, r7
 8011e76:	f85d 7b04 	ldr.w	r7, [sp], #4
 8011e7a:	4770      	bx	lr

08011e7c <USBD_Get_USB_Status>:
  * @brief  Returns the USB status depending on the HAL status:
  * @param  hal_status: HAL status
  * @retval USB status
  */
USBD_StatusTypeDef USBD_Get_USB_Status(HAL_StatusTypeDef hal_status)
{
 8011e7c:	b480      	push	{r7}
 8011e7e:	b085      	sub	sp, #20
 8011e80:	af00      	add	r7, sp, #0
 8011e82:	4603      	mov	r3, r0
 8011e84:	71fb      	strb	r3, [r7, #7]
  USBD_StatusTypeDef usb_status = USBD_OK;
 8011e86:	2300      	movs	r3, #0
 8011e88:	73fb      	strb	r3, [r7, #15]

  switch (hal_status)
 8011e8a:	79fb      	ldrb	r3, [r7, #7]
 8011e8c:	2b03      	cmp	r3, #3
 8011e8e:	d817      	bhi.n	8011ec0 <USBD_Get_USB_Status+0x44>
 8011e90:	a201      	add	r2, pc, #4	; (adr r2, 8011e98 <USBD_Get_USB_Status+0x1c>)
 8011e92:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8011e96:	bf00      	nop
 8011e98:	08011ea9 	.word	0x08011ea9
 8011e9c:	08011eaf 	.word	0x08011eaf
 8011ea0:	08011eb5 	.word	0x08011eb5
 8011ea4:	08011ebb 	.word	0x08011ebb
  {
    case HAL_OK :
      usb_status = USBD_OK;
 8011ea8:	2300      	movs	r3, #0
 8011eaa:	73fb      	strb	r3, [r7, #15]
    break;
 8011eac:	e00b      	b.n	8011ec6 <USBD_Get_USB_Status+0x4a>
    case HAL_ERROR :
      usb_status = USBD_FAIL;
 8011eae:	2303      	movs	r3, #3
 8011eb0:	73fb      	strb	r3, [r7, #15]
    break;
 8011eb2:	e008      	b.n	8011ec6 <USBD_Get_USB_Status+0x4a>
    case HAL_BUSY :
      usb_status = USBD_BUSY;
 8011eb4:	2301      	movs	r3, #1
 8011eb6:	73fb      	strb	r3, [r7, #15]
    break;
 8011eb8:	e005      	b.n	8011ec6 <USBD_Get_USB_Status+0x4a>
    case HAL_TIMEOUT :
      usb_status = USBD_FAIL;
 8011eba:	2303      	movs	r3, #3
 8011ebc:	73fb      	strb	r3, [r7, #15]
    break;
 8011ebe:	e002      	b.n	8011ec6 <USBD_Get_USB_Status+0x4a>
    default :
      usb_status = USBD_FAIL;
 8011ec0:	2303      	movs	r3, #3
 8011ec2:	73fb      	strb	r3, [r7, #15]
    break;
 8011ec4:	bf00      	nop
  }
  return usb_status;
 8011ec6:	7bfb      	ldrb	r3, [r7, #15]
}
 8011ec8:	4618      	mov	r0, r3
 8011eca:	3714      	adds	r7, #20
 8011ecc:	46bd      	mov	sp, r7
 8011ece:	f85d 7b04 	ldr.w	r7, [sp], #4
 8011ed2:	4770      	bx	lr

08011ed4 <_ZNK8touchgfx17AbstractPartition18getAllocationCountEv>:
 8011ed4:	8880      	ldrh	r0, [r0, #4]
 8011ed6:	4770      	bx	lr

08011ed8 <_ZN8touchgfx17AbstractPartition7indexOfEPKv>:
 8011ed8:	b570      	push	{r4, r5, r6, lr}
 8011eda:	6803      	ldr	r3, [r0, #0]
 8011edc:	4605      	mov	r5, r0
 8011ede:	460c      	mov	r4, r1
 8011ee0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8011ee2:	2100      	movs	r1, #0
 8011ee4:	4798      	blx	r3
 8011ee6:	682b      	ldr	r3, [r5, #0]
 8011ee8:	4606      	mov	r6, r0
 8011eea:	6a1b      	ldr	r3, [r3, #32]
 8011eec:	4628      	mov	r0, r5
 8011eee:	4798      	blx	r3
 8011ef0:	1ba4      	subs	r4, r4, r6
 8011ef2:	b2a4      	uxth	r4, r4
 8011ef4:	fbb4 f0f0 	udiv	r0, r4, r0
 8011ef8:	bd70      	pop	{r4, r5, r6, pc}

08011efa <_ZN8touchgfx17AbstractPartition5clearEv>:
 8011efa:	2300      	movs	r3, #0
 8011efc:	8083      	strh	r3, [r0, #4]
 8011efe:	4770      	bx	lr

08011f00 <_ZN8touchgfx17AbstractPartition8allocateEt>:
 8011f00:	b510      	push	{r4, lr}
 8011f02:	6803      	ldr	r3, [r0, #0]
 8011f04:	8881      	ldrh	r1, [r0, #4]
 8011f06:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8011f08:	4604      	mov	r4, r0
 8011f0a:	4798      	blx	r3
 8011f0c:	88a3      	ldrh	r3, [r4, #4]
 8011f0e:	3301      	adds	r3, #1
 8011f10:	80a3      	strh	r3, [r4, #4]
 8011f12:	bd10      	pop	{r4, pc}

08011f14 <_ZN8touchgfx17AbstractPartition10allocateAtEtt>:
 8011f14:	6803      	ldr	r3, [r0, #0]
 8011f16:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8011f18:	4718      	bx	r3

08011f1a <_ZN8touchgfx17AbstractPartitionD1Ev>:
 8011f1a:	4770      	bx	lr

08011f1c <_ZN8touchgfx17AbstractPartitionC1Ev>:
 8011f1c:	4a02      	ldr	r2, [pc, #8]	; (8011f28 <_ZN8touchgfx17AbstractPartitionC1Ev+0xc>)
 8011f1e:	6002      	str	r2, [r0, #0]
 8011f20:	2200      	movs	r2, #0
 8011f22:	8082      	strh	r2, [r0, #4]
 8011f24:	4770      	bx	lr
 8011f26:	bf00      	nop
 8011f28:	0802f2d0 	.word	0x0802f2d0

08011f2c <_ZN8touchgfx14CircleProgress10setPainterERNS_15AbstractPainterE>:
 8011f2c:	f8c0 10dc 	str.w	r1, [r0, #220]	; 0xdc
 8011f30:	4770      	bx	lr

08011f32 <_ZN8touchgfx14CircleProgress9setCenterEii>:
 8011f32:	0149      	lsls	r1, r1, #5
 8011f34:	0152      	lsls	r2, r2, #5
 8011f36:	f8c0 10e0 	str.w	r1, [r0, #224]	; 0xe0
 8011f3a:	f8c0 20e4 	str.w	r2, [r0, #228]	; 0xe4
 8011f3e:	4770      	bx	lr

08011f40 <_ZNK8touchgfx14CircleProgress9getCenterERiS1_>:
 8011f40:	b530      	push	{r4, r5, lr}
 8011f42:	f8d0 40e0 	ldr.w	r4, [r0, #224]	; 0xe0
 8011f46:	2520      	movs	r5, #32
 8011f48:	fb94 f4f5 	sdiv	r4, r4, r5
 8011f4c:	600c      	str	r4, [r1, #0]
 8011f4e:	f8d0 30e4 	ldr.w	r3, [r0, #228]	; 0xe4
 8011f52:	fb93 f3f5 	sdiv	r3, r3, r5
 8011f56:	6013      	str	r3, [r2, #0]
 8011f58:	bd30      	pop	{r4, r5, pc}

08011f5a <_ZNK8touchgfx14CircleProgress9getRadiusEv>:
 8011f5a:	f8d0 00e8 	ldr.w	r0, [r0, #232]	; 0xe8
 8011f5e:	2320      	movs	r3, #32
 8011f60:	fb90 f0f3 	sdiv	r0, r0, r3
 8011f64:	4770      	bx	lr

08011f66 <_ZNK8touchgfx14CircleProgress12getLineWidthEv>:
 8011f66:	f8d0 00f4 	ldr.w	r0, [r0, #244]	; 0xf4
 8011f6a:	2320      	movs	r3, #32
 8011f6c:	fb90 f0f3 	sdiv	r0, r0, r3
 8011f70:	4770      	bx	lr

08011f72 <_ZNK8touchgfx14CircleProgress13getStartAngleEv>:
 8011f72:	f8d0 00ec 	ldr.w	r0, [r0, #236]	; 0xec
 8011f76:	2320      	movs	r3, #32
 8011f78:	fb90 f0f3 	sdiv	r0, r0, r3
 8011f7c:	b200      	sxth	r0, r0
 8011f7e:	4770      	bx	lr

08011f80 <_ZNK8touchgfx14CircleProgress11getEndAngleEv>:
 8011f80:	f8d0 00fc 	ldr.w	r0, [r0, #252]	; 0xfc
 8011f84:	4770      	bx	lr

08011f86 <_ZN8touchgfx14CircleProgress9setRadiusEi>:
 8011f86:	0149      	lsls	r1, r1, #5
 8011f88:	ea21 71e1 	bic.w	r1, r1, r1, asr #31
 8011f8c:	f8c0 10e8 	str.w	r1, [r0, #232]	; 0xe8
 8011f90:	4770      	bx	lr

08011f92 <_ZN8touchgfx14CircleProgress12setLineWidthEi>:
 8011f92:	0149      	lsls	r1, r1, #5
 8011f94:	ea21 71e1 	bic.w	r1, r1, r1, asr #31
 8011f98:	f8c0 10f4 	str.w	r1, [r0, #244]	; 0xf4
 8011f9c:	4770      	bx	lr

08011f9e <_ZN8touchgfx14CircleProgress15setCapPrecisionEi>:
 8011f9e:	30b4      	adds	r0, #180	; 0xb4
 8011fa0:	f001 bd22 	b.w	80139e8 <_ZN8touchgfx6Circle15setCapPrecisionEi>

08011fa4 <_ZN8touchgfx14CircleProgress8setAlphaEh>:
 8011fa4:	b538      	push	{r3, r4, r5, lr}
 8011fa6:	4604      	mov	r4, r0
 8011fa8:	460d      	mov	r5, r1
 8011faa:	f000 f9a1 	bl	80122f0 <_ZN8touchgfx25AbstractProgressIndicator8setAlphaEh>
 8011fae:	f884 50da 	strb.w	r5, [r4, #218]	; 0xda
 8011fb2:	bd38      	pop	{r3, r4, r5, pc}

08011fb4 <_ZNK8touchgfx14CircleProgress15getCapPrecisionEv>:
 8011fb4:	30b4      	adds	r0, #180	; 0xb4
 8011fb6:	f001 bd20 	b.w	80139fa <_ZNK8touchgfx6Circle15getCapPrecisionEv>

08011fba <_ZNK8touchgfx25AbstractProgressIndicator17invalidateContentEv>:
 8011fba:	b510      	push	{r4, lr}
 8011fbc:	6803      	ldr	r3, [r0, #0]
 8011fbe:	f8d3 30c8 	ldr.w	r3, [r3, #200]	; 0xc8
 8011fc2:	4604      	mov	r4, r0
 8011fc4:	4798      	blx	r3
 8011fc6:	b140      	cbz	r0, 8011fda <_ZNK8touchgfx25AbstractProgressIndicator17invalidateContentEv+0x20>
 8011fc8:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 8011fcc:	b12b      	cbz	r3, 8011fda <_ZNK8touchgfx25AbstractProgressIndicator17invalidateContentEv+0x20>
 8011fce:	6823      	ldr	r3, [r4, #0]
 8011fd0:	4620      	mov	r0, r4
 8011fd2:	695b      	ldr	r3, [r3, #20]
 8011fd4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8011fd8:	4718      	bx	r3
 8011fda:	bd10      	pop	{r4, pc}

08011fdc <_ZN8touchgfx14CircleProgress28setProgressIndicatorPositionEssss>:
 8011fdc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8011fe0:	f9bd 6018 	ldrsh.w	r6, [sp, #24]
 8011fe4:	461d      	mov	r5, r3
 8011fe6:	2300      	movs	r3, #0
 8011fe8:	f8c0 30b8 	str.w	r3, [r0, #184]	; 0xb8
 8011fec:	4604      	mov	r4, r0
 8011fee:	460f      	mov	r7, r1
 8011ff0:	4690      	mov	r8, r2
 8011ff2:	4629      	mov	r1, r5
 8011ff4:	4632      	mov	r2, r6
 8011ff6:	30b4      	adds	r0, #180	; 0xb4
 8011ff8:	f7f9 fd99 	bl	800bb2e <_ZN8touchgfx8Drawable14setWidthHeightEss>
 8011ffc:	9606      	str	r6, [sp, #24]
 8011ffe:	462b      	mov	r3, r5
 8012000:	4642      	mov	r2, r8
 8012002:	4639      	mov	r1, r7
 8012004:	4620      	mov	r0, r4
 8012006:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 801200a:	f000 ba38 	b.w	801247e <_ZN8touchgfx25AbstractProgressIndicator28setProgressIndicatorPositionEssss>

0801200e <_ZN8touchgfx6Circle12updateArcEndINS_7CWRUtil2Q5EEEvT_>:
 801200e:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8012010:	6bc3      	ldr	r3, [r0, #60]	; 0x3c
 8012012:	9101      	str	r1, [sp, #4]
 8012014:	4299      	cmp	r1, r3
 8012016:	4604      	mov	r4, r0
 8012018:	d00b      	beq.n	8012032 <_ZN8touchgfx6Circle12updateArcEndINS_7CWRUtil2Q5EEEvT_+0x24>
 801201a:	4601      	mov	r1, r0
 801201c:	aa01      	add	r2, sp, #4
 801201e:	a802      	add	r0, sp, #8
 8012020:	f001 fed4 	bl	8013dcc <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E>
 8012024:	9b01      	ldr	r3, [sp, #4]
 8012026:	63e3      	str	r3, [r4, #60]	; 0x3c
 8012028:	6823      	ldr	r3, [r4, #0]
 801202a:	a902      	add	r1, sp, #8
 801202c:	691b      	ldr	r3, [r3, #16]
 801202e:	4620      	mov	r0, r4
 8012030:	4798      	blx	r3
 8012032:	b004      	add	sp, #16
 8012034:	bd10      	pop	{r4, pc}

08012036 <_ZN8touchgfx14CircleProgress8setValueEi>:
 8012036:	b570      	push	{r4, r5, r6, lr}
 8012038:	4604      	mov	r4, r0
 801203a:	f000 f9a4 	bl	8012386 <_ZN8touchgfx25AbstractProgressIndicator8setValueEi>
 801203e:	f8d4 60fc 	ldr.w	r6, [r4, #252]	; 0xfc
 8012042:	f8d4 50ec 	ldr.w	r5, [r4, #236]	; 0xec
 8012046:	0176      	lsls	r6, r6, #5
 8012048:	42b5      	cmp	r5, r6
 801204a:	bfcc      	ite	gt
 801204c:	1ba9      	subgt	r1, r5, r6
 801204e:	1b71      	suble	r1, r6, r5
 8012050:	b289      	uxth	r1, r1
 8012052:	4620      	mov	r0, r4
 8012054:	f000 f9b9 	bl	80123ca <_ZNK8touchgfx25AbstractProgressIndicator11getProgressEt>
 8012058:	42b5      	cmp	r5, r6
 801205a:	4601      	mov	r1, r0
 801205c:	bfc8      	it	gt
 801205e:	1a69      	subgt	r1, r5, r1
 8012060:	f104 00b4 	add.w	r0, r4, #180	; 0xb4
 8012064:	bfd8      	it	le
 8012066:	1949      	addle	r1, r1, r5
 8012068:	f7ff ffd1 	bl	801200e <_ZN8touchgfx6Circle12updateArcEndINS_7CWRUtil2Q5EEEvT_>
 801206c:	bd70      	pop	{r4, r5, r6, pc}

0801206e <_ZN8touchgfx14CircleProgress16setStartEndAngleEii>:
 801206e:	b510      	push	{r4, lr}
 8012070:	0149      	lsls	r1, r1, #5
 8012072:	0153      	lsls	r3, r2, #5
 8012074:	f8c0 10ec 	str.w	r1, [r0, #236]	; 0xec
 8012078:	f8c0 30f0 	str.w	r3, [r0, #240]	; 0xf0
 801207c:	f8c0 20fc 	str.w	r2, [r0, #252]	; 0xfc
 8012080:	4604      	mov	r4, r0
 8012082:	f000 f932 	bl	80122ea <_ZNK8touchgfx25AbstractProgressIndicator8getValueEv>
 8012086:	4601      	mov	r1, r0
 8012088:	4620      	mov	r0, r4
 801208a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801208e:	f7ff bfd2 	b.w	8012036 <_ZN8touchgfx14CircleProgress8setValueEi>
	...

08012094 <_ZN8touchgfx14CircleProgressC1Ev>:
 8012094:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8012096:	4604      	mov	r4, r0
 8012098:	4625      	mov	r5, r4
 801209a:	f000 fa1d 	bl	80124d8 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev>
 801209e:	4b10      	ldr	r3, [pc, #64]	; (80120e0 <_ZN8touchgfx14CircleProgressC1Ev+0x4c>)
 80120a0:	f845 3bb4 	str.w	r3, [r5], #180
 80120a4:	f44f 77b4 	mov.w	r7, #360	; 0x168
 80120a8:	4628      	mov	r0, r5
 80120aa:	f001 fc85 	bl	80139b8 <_ZN8touchgfx6CircleC1Ev>
 80120ae:	2600      	movs	r6, #0
 80120b0:	4629      	mov	r1, r5
 80120b2:	f104 0058 	add.w	r0, r4, #88	; 0x58
 80120b6:	f8c4 70fc 	str.w	r7, [r4, #252]	; 0xfc
 80120ba:	f000 fa6d 	bl	8012598 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80120be:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 80120c2:	f9b4 200a 	ldrsh.w	r2, [r4, #10]
 80120c6:	f8c4 60b8 	str.w	r6, [r4, #184]	; 0xb8
 80120ca:	4628      	mov	r0, r5
 80120cc:	f7f9 fd2f 	bl	800bb2e <_ZN8touchgfx8Drawable14setWidthHeightEss>
 80120d0:	4620      	mov	r0, r4
 80120d2:	463a      	mov	r2, r7
 80120d4:	4631      	mov	r1, r6
 80120d6:	f7ff ffca 	bl	801206e <_ZN8touchgfx14CircleProgress16setStartEndAngleEii>
 80120da:	4620      	mov	r0, r4
 80120dc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80120de:	bf00      	nop
 80120e0:	0802f304 	.word	0x0802f304

080120e4 <_ZN8touchgfx12LineProgress10setPainterERNS_15AbstractPainterE>:
 80120e4:	f8c0 10dc 	str.w	r1, [r0, #220]	; 0xdc
 80120e8:	4770      	bx	lr

080120ea <_ZNK8touchgfx12LineProgress8getStartERiS1_>:
 80120ea:	b530      	push	{r4, r5, lr}
 80120ec:	f8d0 4124 	ldr.w	r4, [r0, #292]	; 0x124
 80120f0:	2520      	movs	r5, #32
 80120f2:	fb94 f4f5 	sdiv	r4, r4, r5
 80120f6:	600c      	str	r4, [r1, #0]
 80120f8:	f8d0 3128 	ldr.w	r3, [r0, #296]	; 0x128
 80120fc:	fb93 f3f5 	sdiv	r3, r3, r5
 8012100:	6013      	str	r3, [r2, #0]
 8012102:	bd30      	pop	{r4, r5, pc}

08012104 <_ZN8touchgfx12LineProgress6setEndEii>:
 8012104:	0149      	lsls	r1, r1, #5
 8012106:	0152      	lsls	r2, r2, #5
 8012108:	f8c0 112c 	str.w	r1, [r0, #300]	; 0x12c
 801210c:	f8c0 2130 	str.w	r2, [r0, #304]	; 0x130
 8012110:	4770      	bx	lr

08012112 <_ZNK8touchgfx12LineProgress6getEndERiS1_>:
 8012112:	b530      	push	{r4, r5, lr}
 8012114:	f8d0 412c 	ldr.w	r4, [r0, #300]	; 0x12c
 8012118:	2520      	movs	r5, #32
 801211a:	fb94 f4f5 	sdiv	r4, r4, r5
 801211e:	600c      	str	r4, [r1, #0]
 8012120:	f8d0 3130 	ldr.w	r3, [r0, #304]	; 0x130
 8012124:	fb93 f3f5 	sdiv	r3, r3, r5
 8012128:	6013      	str	r3, [r2, #0]
 801212a:	bd30      	pop	{r4, r5, pc}

0801212c <_ZNK8touchgfx12LineProgress12getLineWidthEv>:
 801212c:	f8d0 00f0 	ldr.w	r0, [r0, #240]	; 0xf0
 8012130:	2320      	movs	r3, #32
 8012132:	fb90 f0f3 	sdiv	r0, r0, r3
 8012136:	4770      	bx	lr

08012138 <_ZN8touchgfx12LineProgress8setStartEii>:
 8012138:	0149      	lsls	r1, r1, #5
 801213a:	0152      	lsls	r2, r2, #5
 801213c:	f8c0 1124 	str.w	r1, [r0, #292]	; 0x124
 8012140:	f8c0 2128 	str.w	r2, [r0, #296]	; 0x128
 8012144:	30b4      	adds	r0, #180	; 0xb4
 8012146:	f002 bc72 	b.w	8014a2e <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>

0801214a <_ZN8touchgfx12LineProgress12setLineWidthEi>:
 801214a:	f8d0 30f0 	ldr.w	r3, [r0, #240]	; 0xf0
 801214e:	0149      	lsls	r1, r1, #5
 8012150:	4299      	cmp	r1, r3
 8012152:	d004      	beq.n	801215e <_ZN8touchgfx12LineProgress12setLineWidthEi+0x14>
 8012154:	f8c0 10f0 	str.w	r1, [r0, #240]	; 0xf0
 8012158:	30b4      	adds	r0, #180	; 0xb4
 801215a:	f002 bb72 	b.w	8014842 <_ZN8touchgfx4Line17updateCachedShapeEv>
 801215e:	4770      	bx	lr

08012160 <_ZN8touchgfx12LineProgress18setLineEndingStyleENS_4Line17LINE_ENDING_STYLEE>:
 8012160:	30b4      	adds	r0, #180	; 0xb4
 8012162:	f002 bc89 	b.w	8014a78 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>

08012166 <_ZNK8touchgfx12LineProgress18getLineEndingStyleEv>:
 8012166:	30b4      	adds	r0, #180	; 0xb4
 8012168:	f002 bb68 	b.w	801483c <_ZNK8touchgfx4Line18getLineEndingStyleEv>

0801216c <_ZN8touchgfx12LineProgress8setAlphaEh>:
 801216c:	b538      	push	{r3, r4, r5, lr}
 801216e:	4604      	mov	r4, r0
 8012170:	460d      	mov	r5, r1
 8012172:	f000 f8bd 	bl	80122f0 <_ZN8touchgfx25AbstractProgressIndicator8setAlphaEh>
 8012176:	f884 50da 	strb.w	r5, [r4, #218]	; 0xda
 801217a:	bd38      	pop	{r3, r4, r5, pc}

0801217c <_ZN8touchgfx12LineProgress8setValueEi>:
 801217c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801217e:	f8b0 3090 	ldrh.w	r3, [r0, #144]	; 0x90
 8012182:	4604      	mov	r4, r0
 8012184:	b33b      	cbz	r3, 80121d6 <_ZN8touchgfx12LineProgress8setValueEi+0x5a>
 8012186:	f000 f8fe 	bl	8012386 <_ZN8touchgfx25AbstractProgressIndicator8setValueEi>
 801218a:	f8b4 1090 	ldrh.w	r1, [r4, #144]	; 0x90
 801218e:	4620      	mov	r0, r4
 8012190:	f000 f91b 	bl	80123ca <_ZNK8touchgfx25AbstractProgressIndicator11getProgressEt>
 8012194:	f8d4 1124 	ldr.w	r1, [r4, #292]	; 0x124
 8012198:	f8d4 2128 	ldr.w	r2, [r4, #296]	; 0x128
 801219c:	f8d4 312c 	ldr.w	r3, [r4, #300]	; 0x12c
 80121a0:	f8d4 5130 	ldr.w	r5, [r4, #304]	; 0x130
 80121a4:	f8b4 6090 	ldrh.w	r6, [r4, #144]	; 0x90
 80121a8:	1a5b      	subs	r3, r3, r1
 80121aa:	1aad      	subs	r5, r5, r2
 80121ac:	2720      	movs	r7, #32
 80121ae:	015b      	lsls	r3, r3, #5
 80121b0:	016d      	lsls	r5, r5, #5
 80121b2:	fb93 f3f6 	sdiv	r3, r3, r6
 80121b6:	fb95 f5f6 	sdiv	r5, r5, r6
 80121ba:	4343      	muls	r3, r0
 80121bc:	4368      	muls	r0, r5
 80121be:	fb93 f3f7 	sdiv	r3, r3, r7
 80121c2:	fb90 f0f7 	sdiv	r0, r0, r7
 80121c6:	4419      	add	r1, r3
 80121c8:	4402      	add	r2, r0
 80121ca:	f104 00b4 	add.w	r0, r4, #180	; 0xb4
 80121ce:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 80121d2:	f002 bc37 	b.w	8014a44 <_ZN8touchgfx4Line9updateEndENS_7CWRUtil2Q5ES2_>
 80121d6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

080121d8 <_ZN8touchgfx12LineProgress28setProgressIndicatorPositionEssss>:
 80121d8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80121dc:	f9bd 6018 	ldrsh.w	r6, [sp, #24]
 80121e0:	461d      	mov	r5, r3
 80121e2:	2300      	movs	r3, #0
 80121e4:	f8c0 30b8 	str.w	r3, [r0, #184]	; 0xb8
 80121e8:	4604      	mov	r4, r0
 80121ea:	460f      	mov	r7, r1
 80121ec:	4690      	mov	r8, r2
 80121ee:	4629      	mov	r1, r5
 80121f0:	4632      	mov	r2, r6
 80121f2:	30b4      	adds	r0, #180	; 0xb4
 80121f4:	f7f9 fc9b 	bl	800bb2e <_ZN8touchgfx8Drawable14setWidthHeightEss>
 80121f8:	9606      	str	r6, [sp, #24]
 80121fa:	462b      	mov	r3, r5
 80121fc:	4642      	mov	r2, r8
 80121fe:	4639      	mov	r1, r7
 8012200:	4620      	mov	r0, r4
 8012202:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8012206:	f000 b93a 	b.w	801247e <_ZN8touchgfx25AbstractProgressIndicator28setProgressIndicatorPositionEssss>
	...

0801220c <_ZN8touchgfx12LineProgressC1Ev>:
 801220c:	b570      	push	{r4, r5, r6, lr}
 801220e:	4604      	mov	r4, r0
 8012210:	4625      	mov	r5, r4
 8012212:	f000 f961 	bl	80124d8 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev>
 8012216:	4b0f      	ldr	r3, [pc, #60]	; (8012254 <_ZN8touchgfx12LineProgressC1Ev+0x48>)
 8012218:	f845 3bb4 	str.w	r3, [r5], #180
 801221c:	2600      	movs	r6, #0
 801221e:	4628      	mov	r0, r5
 8012220:	f002 faec 	bl	80147fc <_ZN8touchgfx4LineC1Ev>
 8012224:	4629      	mov	r1, r5
 8012226:	f104 0058 	add.w	r0, r4, #88	; 0x58
 801222a:	f8c4 6124 	str.w	r6, [r4, #292]	; 0x124
 801222e:	f8c4 6128 	str.w	r6, [r4, #296]	; 0x128
 8012232:	f8c4 612c 	str.w	r6, [r4, #300]	; 0x12c
 8012236:	f8c4 6130 	str.w	r6, [r4, #304]	; 0x130
 801223a:	f000 f9ad 	bl	8012598 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 801223e:	4628      	mov	r0, r5
 8012240:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 8012244:	f9b4 200a 	ldrsh.w	r2, [r4, #10]
 8012248:	f8c4 60b8 	str.w	r6, [r4, #184]	; 0xb8
 801224c:	f7f9 fc6f 	bl	800bb2e <_ZN8touchgfx8Drawable14setWidthHeightEss>
 8012250:	4620      	mov	r0, r4
 8012252:	bd70      	pop	{r4, r5, r6, pc}
 8012254:	0802f408 	.word	0x0802f408

08012258 <_ZNK8touchgfx25AbstractProgressIndicator21getProgressIndicatorXEv>:
 8012258:	f9b0 005c 	ldrsh.w	r0, [r0, #92]	; 0x5c
 801225c:	4770      	bx	lr

0801225e <_ZNK8touchgfx25AbstractProgressIndicator21getProgressIndicatorYEv>:
 801225e:	f9b0 005e 	ldrsh.w	r0, [r0, #94]	; 0x5e
 8012262:	4770      	bx	lr

08012264 <_ZNK8touchgfx25AbstractProgressIndicator25getProgressIndicatorWidthEv>:
 8012264:	f9b0 0060 	ldrsh.w	r0, [r0, #96]	; 0x60
 8012268:	4770      	bx	lr

0801226a <_ZNK8touchgfx25AbstractProgressIndicator26getProgressIndicatorHeightEv>:
 801226a:	f9b0 0062 	ldrsh.w	r0, [r0, #98]	; 0x62
 801226e:	4770      	bx	lr

08012270 <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt>:
 8012270:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8012272:	e9c0 1221 	strd	r1, r2, [r0, #132]	; 0x84
 8012276:	461e      	mov	r6, r3
 8012278:	6803      	ldr	r3, [r0, #0]
 801227a:	460f      	mov	r7, r1
 801227c:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 8012280:	f8d0 108c 	ldr.w	r1, [r0, #140]	; 0x8c
 8012284:	4604      	mov	r4, r0
 8012286:	4615      	mov	r5, r2
 8012288:	4798      	blx	r3
 801228a:	b93e      	cbnz	r6, 801229c <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt+0x2c>
 801228c:	1bed      	subs	r5, r5, r7
 801228e:	f8a4 5090 	strh.w	r5, [r4, #144]	; 0x90
 8012292:	f8bd 3018 	ldrh.w	r3, [sp, #24]
 8012296:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
 801229a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801229c:	f8a4 6090 	strh.w	r6, [r4, #144]	; 0x90
 80122a0:	e7f7      	b.n	8012292 <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt+0x22>

080122a2 <_ZNK8touchgfx25AbstractProgressIndicator8getRangeERiS1_RtS2_>:
 80122a2:	b510      	push	{r4, lr}
 80122a4:	f8d0 4084 	ldr.w	r4, [r0, #132]	; 0x84
 80122a8:	600c      	str	r4, [r1, #0]
 80122aa:	f8d0 1088 	ldr.w	r1, [r0, #136]	; 0x88
 80122ae:	6011      	str	r1, [r2, #0]
 80122b0:	f8b0 2090 	ldrh.w	r2, [r0, #144]	; 0x90
 80122b4:	801a      	strh	r2, [r3, #0]
 80122b6:	9b02      	ldr	r3, [sp, #8]
 80122b8:	f8b0 2092 	ldrh.w	r2, [r0, #146]	; 0x92
 80122bc:	801a      	strh	r2, [r3, #0]
 80122be:	bd10      	pop	{r4, pc}

080122c0 <_ZNK8touchgfx25AbstractProgressIndicator8getRangeERiS1_Rt>:
 80122c0:	b510      	push	{r4, lr}
 80122c2:	f8d0 4084 	ldr.w	r4, [r0, #132]	; 0x84
 80122c6:	600c      	str	r4, [r1, #0]
 80122c8:	f8d0 1088 	ldr.w	r1, [r0, #136]	; 0x88
 80122cc:	6011      	str	r1, [r2, #0]
 80122ce:	f8b0 2090 	ldrh.w	r2, [r0, #144]	; 0x90
 80122d2:	801a      	strh	r2, [r3, #0]
 80122d4:	bd10      	pop	{r4, pc}

080122d6 <_ZNK8touchgfx25AbstractProgressIndicator8getRangeERiS1_>:
 80122d6:	f8d0 3084 	ldr.w	r3, [r0, #132]	; 0x84
 80122da:	600b      	str	r3, [r1, #0]
 80122dc:	f8d0 3088 	ldr.w	r3, [r0, #136]	; 0x88
 80122e0:	6013      	str	r3, [r2, #0]
 80122e2:	4770      	bx	lr

080122e4 <_ZN8touchgfx25AbstractProgressIndicator17setEasingEquationEPFstsstE>:
 80122e4:	f8c0 1094 	str.w	r1, [r0, #148]	; 0x94
 80122e8:	4770      	bx	lr

080122ea <_ZNK8touchgfx25AbstractProgressIndicator8getValueEv>:
 80122ea:	f8d0 008c 	ldr.w	r0, [r0, #140]	; 0x8c
 80122ee:	4770      	bx	lr

080122f0 <_ZN8touchgfx25AbstractProgressIndicator8setAlphaEh>:
 80122f0:	f880 1054 	strb.w	r1, [r0, #84]	; 0x54
 80122f4:	4770      	bx	lr

080122f6 <_ZNK8touchgfx25AbstractProgressIndicator8getAlphaEv>:
 80122f6:	f890 0054 	ldrb.w	r0, [r0, #84]	; 0x54
 80122fa:	4770      	bx	lr

080122fc <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit>:
 80122fc:	b570      	push	{r4, r5, r6, lr}
 80122fe:	f8d0 5084 	ldr.w	r5, [r0, #132]	; 0x84
 8012302:	428d      	cmp	r5, r1
 8012304:	bfb8      	it	lt
 8012306:	460d      	movlt	r5, r1
 8012308:	f8d0 1088 	ldr.w	r1, [r0, #136]	; 0x88
 801230c:	428d      	cmp	r5, r1
 801230e:	4604      	mov	r4, r0
 8012310:	bfa8      	it	ge
 8012312:	460d      	movge	r5, r1
 8012314:	4616      	mov	r6, r2
 8012316:	b99a      	cbnz	r2, 8012340 <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit+0x44>
 8012318:	6803      	ldr	r3, [r0, #0]
 801231a:	4629      	mov	r1, r5
 801231c:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 8012320:	4798      	blx	r3
 8012322:	f8d4 00b0 	ldr.w	r0, [r4, #176]	; 0xb0
 8012326:	b368      	cbz	r0, 8012384 <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit+0x88>
 8012328:	6803      	ldr	r3, [r0, #0]
 801232a:	68db      	ldr	r3, [r3, #12]
 801232c:	4798      	blx	r3
 801232e:	b348      	cbz	r0, 8012384 <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit+0x88>
 8012330:	f8d4 00b0 	ldr.w	r0, [r4, #176]	; 0xb0
 8012334:	6803      	ldr	r3, [r0, #0]
 8012336:	4621      	mov	r1, r4
 8012338:	689b      	ldr	r3, [r3, #8]
 801233a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801233e:	4718      	bx	r3
 8012340:	f8d0 30a4 	ldr.w	r3, [r0, #164]	; 0xa4
 8012344:	2b00      	cmp	r3, #0
 8012346:	dd08      	ble.n	801235a <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit+0x5e>
 8012348:	f006 f908 	bl	801855c <_ZN8touchgfx11Application11getInstanceEv>
 801234c:	4621      	mov	r1, r4
 801234e:	3004      	adds	r0, #4
 8012350:	f006 f929 	bl	80185a6 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE>
 8012354:	2300      	movs	r3, #0
 8012356:	f884 3098 	strb.w	r3, [r4, #152]	; 0x98
 801235a:	6823      	ldr	r3, [r4, #0]
 801235c:	4620      	mov	r0, r4
 801235e:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 8012362:	4798      	blx	r3
 8012364:	2300      	movs	r3, #0
 8012366:	f8c4 30a8 	str.w	r3, [r4, #168]	; 0xa8
 801236a:	e9c4 0527 	strd	r0, r5, [r4, #156]	; 0x9c
 801236e:	f8c4 60a4 	str.w	r6, [r4, #164]	; 0xa4
 8012372:	f006 f8f3 	bl	801855c <_ZN8touchgfx11Application11getInstanceEv>
 8012376:	4621      	mov	r1, r4
 8012378:	3004      	adds	r0, #4
 801237a:	f006 f9bd 	bl	80186f8 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE>
 801237e:	2301      	movs	r3, #1
 8012380:	f884 3098 	strb.w	r3, [r4, #152]	; 0x98
 8012384:	bd70      	pop	{r4, r5, r6, pc}

08012386 <_ZN8touchgfx25AbstractProgressIndicator8setValueEi>:
 8012386:	b510      	push	{r4, lr}
 8012388:	f8d0 3084 	ldr.w	r3, [r0, #132]	; 0x84
 801238c:	4299      	cmp	r1, r3
 801238e:	bfb8      	it	lt
 8012390:	4619      	movlt	r1, r3
 8012392:	f8d0 3088 	ldr.w	r3, [r0, #136]	; 0x88
 8012396:	4299      	cmp	r1, r3
 8012398:	bfa8      	it	ge
 801239a:	4619      	movge	r1, r3
 801239c:	f8d0 308c 	ldr.w	r3, [r0, #140]	; 0x8c
 80123a0:	428b      	cmp	r3, r1
 80123a2:	4604      	mov	r4, r0
 80123a4:	d010      	beq.n	80123c8 <_ZN8touchgfx25AbstractProgressIndicator8setValueEi+0x42>
 80123a6:	f8c0 108c 	str.w	r1, [r0, #140]	; 0x8c
 80123aa:	f8d0 00ac 	ldr.w	r0, [r0, #172]	; 0xac
 80123ae:	b158      	cbz	r0, 80123c8 <_ZN8touchgfx25AbstractProgressIndicator8setValueEi+0x42>
 80123b0:	6803      	ldr	r3, [r0, #0]
 80123b2:	68db      	ldr	r3, [r3, #12]
 80123b4:	4798      	blx	r3
 80123b6:	b138      	cbz	r0, 80123c8 <_ZN8touchgfx25AbstractProgressIndicator8setValueEi+0x42>
 80123b8:	f8d4 00ac 	ldr.w	r0, [r4, #172]	; 0xac
 80123bc:	6803      	ldr	r3, [r0, #0]
 80123be:	4621      	mov	r1, r4
 80123c0:	689b      	ldr	r3, [r3, #8]
 80123c2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80123c6:	4718      	bx	r3
 80123c8:	bd10      	pop	{r4, pc}

080123ca <_ZNK8touchgfx25AbstractProgressIndicator11getProgressEt>:
 80123ca:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80123cc:	4604      	mov	r4, r0
 80123ce:	460d      	mov	r5, r1
 80123d0:	b1a9      	cbz	r1, 80123fe <_ZNK8touchgfx25AbstractProgressIndicator11getProgressEt+0x34>
 80123d2:	f8b0 6092 	ldrh.w	r6, [r0, #146]	; 0x92
 80123d6:	f8b4 1090 	ldrh.w	r1, [r4, #144]	; 0x90
 80123da:	f8d4 708c 	ldr.w	r7, [r4, #140]	; 0x8c
 80123de:	e9d0 0221 	ldrd	r0, r2, [r0, #132]	; 0x84
 80123e2:	ab01      	add	r3, sp, #4
 80123e4:	1a12      	subs	r2, r2, r0
 80123e6:	1b89      	subs	r1, r1, r6
 80123e8:	1a38      	subs	r0, r7, r0
 80123ea:	f007 faff 	bl	80199ec <_ZN8touchgfx6muldivElllRl>
 80123ee:	4629      	mov	r1, r5
 80123f0:	ab01      	add	r3, sp, #4
 80123f2:	f8b4 2090 	ldrh.w	r2, [r4, #144]	; 0x90
 80123f6:	4430      	add	r0, r6
 80123f8:	f007 faf8 	bl	80199ec <_ZN8touchgfx6muldivElllRl>
 80123fc:	b285      	uxth	r5, r0
 80123fe:	4628      	mov	r0, r5
 8012400:	b003      	add	sp, #12
 8012402:	bdf0      	pop	{r4, r5, r6, r7, pc}

08012404 <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv>:
 8012404:	b570      	push	{r4, r5, r6, lr}
 8012406:	f890 3098 	ldrb.w	r3, [r0, #152]	; 0x98
 801240a:	4604      	mov	r4, r0
 801240c:	2b00      	cmp	r3, #0
 801240e:	d035      	beq.n	801247c <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv+0x78>
 8012410:	e9d4 3227 	ldrd	r3, r2, [r4, #156]	; 0x9c
 8012414:	f8d0 00a8 	ldr.w	r0, [r0, #168]	; 0xa8
 8012418:	f8d4 5094 	ldr.w	r5, [r4, #148]	; 0x94
 801241c:	3001      	adds	r0, #1
 801241e:	1ad2      	subs	r2, r2, r3
 8012420:	b212      	sxth	r2, r2
 8012422:	f8c4 00a8 	str.w	r0, [r4, #168]	; 0xa8
 8012426:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	; 0xa4
 801242a:	2100      	movs	r1, #0
 801242c:	b280      	uxth	r0, r0
 801242e:	47a8      	blx	r5
 8012430:	f8d4 109c 	ldr.w	r1, [r4, #156]	; 0x9c
 8012434:	6823      	ldr	r3, [r4, #0]
 8012436:	4401      	add	r1, r0
 8012438:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 801243c:	4620      	mov	r0, r4
 801243e:	4798      	blx	r3
 8012440:	e9d4 3229 	ldrd	r3, r2, [r4, #164]	; 0xa4
 8012444:	429a      	cmp	r2, r3
 8012446:	db19      	blt.n	801247c <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv+0x78>
 8012448:	2500      	movs	r5, #0
 801244a:	e9c4 5529 	strd	r5, r5, [r4, #164]	; 0xa4
 801244e:	f006 f885 	bl	801855c <_ZN8touchgfx11Application11getInstanceEv>
 8012452:	4621      	mov	r1, r4
 8012454:	3004      	adds	r0, #4
 8012456:	f006 f8a6 	bl	80185a6 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE>
 801245a:	f8d4 00b0 	ldr.w	r0, [r4, #176]	; 0xb0
 801245e:	f884 5098 	strb.w	r5, [r4, #152]	; 0x98
 8012462:	b158      	cbz	r0, 801247c <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv+0x78>
 8012464:	6803      	ldr	r3, [r0, #0]
 8012466:	68db      	ldr	r3, [r3, #12]
 8012468:	4798      	blx	r3
 801246a:	b138      	cbz	r0, 801247c <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv+0x78>
 801246c:	f8d4 00b0 	ldr.w	r0, [r4, #176]	; 0xb0
 8012470:	6803      	ldr	r3, [r0, #0]
 8012472:	4621      	mov	r1, r4
 8012474:	689b      	ldr	r3, [r3, #8]
 8012476:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801247a:	4718      	bx	r3
 801247c:	bd70      	pop	{r4, r5, r6, pc}

0801247e <_ZN8touchgfx25AbstractProgressIndicator28setProgressIndicatorPositionEssss>:
 801247e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8012482:	4604      	mov	r4, r0
 8012484:	f9bd 7018 	ldrsh.w	r7, [sp, #24]
 8012488:	f8a4 105c 	strh.w	r1, [r4, #92]	; 0x5c
 801248c:	460e      	mov	r6, r1
 801248e:	4615      	mov	r5, r2
 8012490:	f8a4 205e 	strh.w	r2, [r4, #94]	; 0x5e
 8012494:	4619      	mov	r1, r3
 8012496:	463a      	mov	r2, r7
 8012498:	3058      	adds	r0, #88	; 0x58
 801249a:	4698      	mov	r8, r3
 801249c:	f7f9 fb47 	bl	800bb2e <_ZN8touchgfx8Drawable14setWidthHeightEss>
 80124a0:	f9b4 3008 	ldrsh.w	r3, [r4, #8]
 80124a4:	4446      	add	r6, r8
 80124a6:	42b3      	cmp	r3, r6
 80124a8:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 80124ac:	bfb8      	it	lt
 80124ae:	8126      	strhlt	r6, [r4, #8]
 80124b0:	443d      	add	r5, r7
 80124b2:	42ab      	cmp	r3, r5
 80124b4:	bfb8      	it	lt
 80124b6:	8165      	strhlt	r5, [r4, #10]
 80124b8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080124bc <_ZN8touchgfx25AbstractProgressIndicator13setBackgroundERKNS_6BitmapE>:
 80124bc:	b510      	push	{r4, lr}
 80124be:	4604      	mov	r4, r0
 80124c0:	302c      	adds	r0, #44	; 0x2c
 80124c2:	f003 f856 	bl	8015572 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 80124c6:	f9b4 2036 	ldrsh.w	r2, [r4, #54]	; 0x36
 80124ca:	f9b4 1034 	ldrsh.w	r1, [r4, #52]	; 0x34
 80124ce:	4620      	mov	r0, r4
 80124d0:	f7f9 fb2d 	bl	800bb2e <_ZN8touchgfx8Drawable14setWidthHeightEss>
 80124d4:	bd10      	pop	{r4, pc}
	...

080124d8 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev>:
 80124d8:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80124da:	4604      	mov	r4, r0
 80124dc:	4626      	mov	r6, r4
 80124de:	2500      	movs	r5, #0
 80124e0:	f7f9 fa02 	bl	800b8e8 <_ZN8touchgfx8DrawableC1Ev>
 80124e4:	4b23      	ldr	r3, [pc, #140]	; (8012574 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev+0x9c>)
 80124e6:	62a5      	str	r5, [r4, #40]	; 0x28
 80124e8:	f846 3b2c 	str.w	r3, [r6], #44
 80124ec:	2226      	movs	r2, #38	; 0x26
 80124ee:	4629      	mov	r1, r5
 80124f0:	f64f 77ff 	movw	r7, #65535	; 0xffff
 80124f4:	4630      	mov	r0, r6
 80124f6:	f8ad 7004 	strh.w	r7, [sp, #4]
 80124fa:	f018 fde8 	bl	802b0ce <memset>
 80124fe:	4630      	mov	r0, r6
 8012500:	f7f9 f9f2 	bl	800b8e8 <_ZN8touchgfx8DrawableC1Ev>
 8012504:	a902      	add	r1, sp, #8
 8012506:	4b1c      	ldr	r3, [pc, #112]	; (8012578 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev+0xa0>)
 8012508:	62e3      	str	r3, [r4, #44]	; 0x2c
 801250a:	f831 3d04 	ldrh.w	r3, [r1, #-4]!
 801250e:	f8a4 3052 	strh.w	r3, [r4, #82]	; 0x52
 8012512:	f884 7054 	strb.w	r7, [r4, #84]	; 0x54
 8012516:	4630      	mov	r0, r6
 8012518:	f104 0758 	add.w	r7, r4, #88	; 0x58
 801251c:	f003 f829 	bl	8015572 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8012520:	4638      	mov	r0, r7
 8012522:	f7f9 f9e1 	bl	800b8e8 <_ZN8touchgfx8DrawableC1Ev>
 8012526:	4b15      	ldr	r3, [pc, #84]	; (801257c <_ZN8touchgfx25AbstractProgressIndicatorC1Ev+0xa4>)
 8012528:	65a3      	str	r3, [r4, #88]	; 0x58
 801252a:	2364      	movs	r3, #100	; 0x64
 801252c:	e9c4 3522 	strd	r3, r5, [r4, #136]	; 0x88
 8012530:	f8c4 3090 	str.w	r3, [r4, #144]	; 0x90
 8012534:	4b12      	ldr	r3, [pc, #72]	; (8012580 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev+0xa8>)
 8012536:	f8c4 3094 	str.w	r3, [r4, #148]	; 0x94
 801253a:	4629      	mov	r1, r5
 801253c:	4630      	mov	r0, r6
 801253e:	e9c4 5520 	strd	r5, r5, [r4, #128]	; 0x80
 8012542:	f884 5098 	strb.w	r5, [r4, #152]	; 0x98
 8012546:	e9c4 5527 	strd	r5, r5, [r4, #156]	; 0x9c
 801254a:	e9c4 5529 	strd	r5, r5, [r4, #164]	; 0xa4
 801254e:	e9c4 552b 	strd	r5, r5, [r4, #172]	; 0xac
 8012552:	f7f9 fa72 	bl	800ba3a <_ZN8touchgfx8Drawable4setXEs>
 8012556:	4629      	mov	r1, r5
 8012558:	4630      	mov	r0, r6
 801255a:	f7f9 fa7d 	bl	800ba58 <_ZN8touchgfx8Drawable4setYEs>
 801255e:	4631      	mov	r1, r6
 8012560:	4620      	mov	r0, r4
 8012562:	f000 f819 	bl	8012598 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8012566:	4620      	mov	r0, r4
 8012568:	4639      	mov	r1, r7
 801256a:	f000 f815 	bl	8012598 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 801256e:	4620      	mov	r0, r4
 8012570:	b003      	add	sp, #12
 8012572:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8012574:	0802f500 	.word	0x0802f500
 8012578:	0802fc60 	.word	0x0802fc60
 801257c:	0802f5d4 	.word	0x0802f5d4
 8012580:	0801a0d5 	.word	0x0801a0d5

08012584 <_ZN8touchgfx9Container8containsERKNS_8DrawableE>:
 8012584:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8012586:	2000      	movs	r0, #0
 8012588:	b12b      	cbz	r3, 8012596 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 801258a:	b920      	cbnz	r0, 8012596 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 801258c:	1a5a      	subs	r2, r3, r1
 801258e:	4250      	negs	r0, r2
 8012590:	4150      	adcs	r0, r2
 8012592:	699b      	ldr	r3, [r3, #24]
 8012594:	e7f8      	b.n	8012588 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x4>
 8012596:	4770      	bx	lr

08012598 <_ZN8touchgfx9Container3addERNS_8DrawableE>:
 8012598:	2300      	movs	r3, #0
 801259a:	6148      	str	r0, [r1, #20]
 801259c:	618b      	str	r3, [r1, #24]
 801259e:	6a83      	ldr	r3, [r0, #40]	; 0x28
 80125a0:	b913      	cbnz	r3, 80125a8 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x10>
 80125a2:	6281      	str	r1, [r0, #40]	; 0x28
 80125a4:	4770      	bx	lr
 80125a6:	4613      	mov	r3, r2
 80125a8:	699a      	ldr	r2, [r3, #24]
 80125aa:	2a00      	cmp	r2, #0
 80125ac:	d1fb      	bne.n	80125a6 <_ZN8touchgfx9Container3addERNS_8DrawableE+0xe>
 80125ae:	6199      	str	r1, [r3, #24]
 80125b0:	4770      	bx	lr

080125b2 <_ZN8touchgfx9Container9removeAllEv>:
 80125b2:	2200      	movs	r2, #0
 80125b4:	6a83      	ldr	r3, [r0, #40]	; 0x28
 80125b6:	b123      	cbz	r3, 80125c2 <_ZN8touchgfx9Container9removeAllEv+0x10>
 80125b8:	6999      	ldr	r1, [r3, #24]
 80125ba:	6281      	str	r1, [r0, #40]	; 0x28
 80125bc:	e9c3 2205 	strd	r2, r2, [r3, #20]
 80125c0:	e7f8      	b.n	80125b4 <_ZN8touchgfx9Container9removeAllEv+0x2>
 80125c2:	4770      	bx	lr

080125c4 <_ZN8touchgfx9Container6unlinkEv>:
 80125c4:	2300      	movs	r3, #0
 80125c6:	6283      	str	r3, [r0, #40]	; 0x28
 80125c8:	4770      	bx	lr

080125ca <_ZNK8touchgfx9Container12getSolidRectEv>:
 80125ca:	2200      	movs	r2, #0
 80125cc:	8002      	strh	r2, [r0, #0]
 80125ce:	8042      	strh	r2, [r0, #2]
 80125d0:	8082      	strh	r2, [r0, #4]
 80125d2:	80c2      	strh	r2, [r0, #6]
 80125d4:	4770      	bx	lr

080125d6 <_ZN8touchgfx9Container20moveChildrenRelativeEss>:
 80125d6:	b570      	push	{r4, r5, r6, lr}
 80125d8:	6a84      	ldr	r4, [r0, #40]	; 0x28
 80125da:	460d      	mov	r5, r1
 80125dc:	4616      	mov	r6, r2
 80125de:	b13c      	cbz	r4, 80125f0 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x1a>
 80125e0:	6823      	ldr	r3, [r4, #0]
 80125e2:	4620      	mov	r0, r4
 80125e4:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 80125e6:	4632      	mov	r2, r6
 80125e8:	4629      	mov	r1, r5
 80125ea:	4798      	blx	r3
 80125ec:	69a4      	ldr	r4, [r4, #24]
 80125ee:	e7f6      	b.n	80125de <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x8>
 80125f0:	bd70      	pop	{r4, r5, r6, pc}

080125f2 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE>:
 80125f2:	b538      	push	{r3, r4, r5, lr}
 80125f4:	6a84      	ldr	r4, [r0, #40]	; 0x28
 80125f6:	460d      	mov	r5, r1
 80125f8:	b134      	cbz	r4, 8012608 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x16>
 80125fa:	682b      	ldr	r3, [r5, #0]
 80125fc:	4621      	mov	r1, r4
 80125fe:	689b      	ldr	r3, [r3, #8]
 8012600:	4628      	mov	r0, r5
 8012602:	4798      	blx	r3
 8012604:	69a4      	ldr	r4, [r4, #24]
 8012606:	e7f7      	b.n	80125f8 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x6>
 8012608:	bd38      	pop	{r3, r4, r5, pc}

0801260a <_ZN8touchgfx9Container6removeERNS_8DrawableE>:
 801260a:	6a83      	ldr	r3, [r0, #40]	; 0x28
 801260c:	b19b      	cbz	r3, 8012636 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 801260e:	428b      	cmp	r3, r1
 8012610:	d109      	bne.n	8012626 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x1c>
 8012612:	699a      	ldr	r2, [r3, #24]
 8012614:	2100      	movs	r1, #0
 8012616:	6159      	str	r1, [r3, #20]
 8012618:	6282      	str	r2, [r0, #40]	; 0x28
 801261a:	b902      	cbnz	r2, 801261e <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x14>
 801261c:	4770      	bx	lr
 801261e:	6199      	str	r1, [r3, #24]
 8012620:	4770      	bx	lr
 8012622:	4613      	mov	r3, r2
 8012624:	b13a      	cbz	r2, 8012636 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 8012626:	699a      	ldr	r2, [r3, #24]
 8012628:	428a      	cmp	r2, r1
 801262a:	d1fa      	bne.n	8012622 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x18>
 801262c:	698a      	ldr	r2, [r1, #24]
 801262e:	619a      	str	r2, [r3, #24]
 8012630:	2300      	movs	r3, #0
 8012632:	e9c1 3305 	strd	r3, r3, [r1, #20]
 8012636:	4770      	bx	lr

08012638 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_>:
 8012638:	b410      	push	{r4}
 801263a:	6a83      	ldr	r3, [r0, #40]	; 0x28
 801263c:	4604      	mov	r4, r0
 801263e:	b92b      	cbnz	r3, 801264c <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x14>
 8012640:	6803      	ldr	r3, [r0, #0]
 8012642:	f85d 4b04 	ldr.w	r4, [sp], #4
 8012646:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8012648:	4611      	mov	r1, r2
 801264a:	4718      	bx	r3
 801264c:	b941      	cbnz	r1, 8012660 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x28>
 801264e:	6193      	str	r3, [r2, #24]
 8012650:	6282      	str	r2, [r0, #40]	; 0x28
 8012652:	6154      	str	r4, [r2, #20]
 8012654:	f85d 4b04 	ldr.w	r4, [sp], #4
 8012658:	4770      	bx	lr
 801265a:	4603      	mov	r3, r0
 801265c:	2800      	cmp	r0, #0
 801265e:	d0f9      	beq.n	8012654 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1c>
 8012660:	4299      	cmp	r1, r3
 8012662:	6998      	ldr	r0, [r3, #24]
 8012664:	d1f9      	bne.n	801265a <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x22>
 8012666:	6190      	str	r0, [r2, #24]
 8012668:	618a      	str	r2, [r1, #24]
 801266a:	e7f2      	b.n	8012652 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1a>

0801266c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>:
 801266c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8012670:	461f      	mov	r7, r3
 8012672:	f890 3024 	ldrb.w	r3, [r0, #36]	; 0x24
 8012676:	460d      	mov	r5, r1
 8012678:	4616      	mov	r6, r2
 801267a:	b103      	cbz	r3, 801267e <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x12>
 801267c:	6038      	str	r0, [r7, #0]
 801267e:	6a84      	ldr	r4, [r0, #40]	; 0x28
 8012680:	b314      	cbz	r4, 80126c8 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x5c>
 8012682:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 8012686:	b1eb      	cbz	r3, 80126c4 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 8012688:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 801268c:	428d      	cmp	r5, r1
 801268e:	db19      	blt.n	80126c4 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 8012690:	8923      	ldrh	r3, [r4, #8]
 8012692:	b289      	uxth	r1, r1
 8012694:	440b      	add	r3, r1
 8012696:	b21b      	sxth	r3, r3
 8012698:	429d      	cmp	r5, r3
 801269a:	da13      	bge.n	80126c4 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 801269c:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 80126a0:	4296      	cmp	r6, r2
 80126a2:	db0f      	blt.n	80126c4 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 80126a4:	8963      	ldrh	r3, [r4, #10]
 80126a6:	b292      	uxth	r2, r2
 80126a8:	4413      	add	r3, r2
 80126aa:	b21b      	sxth	r3, r3
 80126ac:	429e      	cmp	r6, r3
 80126ae:	da09      	bge.n	80126c4 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 80126b0:	6823      	ldr	r3, [r4, #0]
 80126b2:	1ab2      	subs	r2, r6, r2
 80126b4:	1a69      	subs	r1, r5, r1
 80126b6:	f8d3 8024 	ldr.w	r8, [r3, #36]	; 0x24
 80126ba:	b212      	sxth	r2, r2
 80126bc:	463b      	mov	r3, r7
 80126be:	b209      	sxth	r1, r1
 80126c0:	4620      	mov	r0, r4
 80126c2:	47c0      	blx	r8
 80126c4:	69a4      	ldr	r4, [r4, #24]
 80126c6:	e7db      	b.n	8012680 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x14>
 80126c8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080126cc <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>:
 80126cc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80126d0:	4c6e      	ldr	r4, [pc, #440]	; (801288c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c0>)
 80126d2:	b0a1      	sub	sp, #132	; 0x84
 80126d4:	6824      	ldr	r4, [r4, #0]
 80126d6:	9d2a      	ldr	r5, [sp, #168]	; 0xa8
 80126d8:	f894 9049 	ldrb.w	r9, [r4, #73]	; 0x49
 80126dc:	9303      	str	r3, [sp, #12]
 80126de:	2400      	movs	r4, #0
 80126e0:	802c      	strh	r4, [r5, #0]
 80126e2:	9d2b      	ldr	r5, [sp, #172]	; 0xac
 80126e4:	802c      	strh	r4, [r5, #0]
 80126e6:	601c      	str	r4, [r3, #0]
 80126e8:	4606      	mov	r6, r0
 80126ea:	e9cd 1201 	strd	r1, r2, [sp, #4]
 80126ee:	f7ff ffbd 	bl	801266c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 80126f2:	f1b9 0f03 	cmp.w	r9, #3
 80126f6:	f340 80c2 	ble.w	801287e <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b2>
 80126fa:	4631      	mov	r1, r6
 80126fc:	a80c      	add	r0, sp, #48	; 0x30
 80126fe:	f007 f865 	bl	80197cc <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8012702:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	; 0x30
 8012706:	9306      	str	r3, [sp, #24]
 8012708:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 801270c:	9307      	str	r3, [sp, #28]
 801270e:	9b03      	ldr	r3, [sp, #12]
 8012710:	f8d3 a000 	ldr.w	sl, [r3]
 8012714:	f1ba 0f00 	cmp.w	sl, #0
 8012718:	f000 80b4 	beq.w	8012884 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b8>
 801271c:	4651      	mov	r1, sl
 801271e:	a810      	add	r0, sp, #64	; 0x40
 8012720:	f007 f854 	bl	80197cc <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8012724:	9b01      	ldr	r3, [sp, #4]
 8012726:	9a06      	ldr	r2, [sp, #24]
 8012728:	f9bd 1044 	ldrsh.w	r1, [sp, #68]	; 0x44
 801272c:	189d      	adds	r5, r3, r2
 801272e:	f9bd 3040 	ldrsh.w	r3, [sp, #64]	; 0x40
 8012732:	9a07      	ldr	r2, [sp, #28]
 8012734:	2002      	movs	r0, #2
 8012736:	fb91 f1f0 	sdiv	r1, r1, r0
 801273a:	4419      	add	r1, r3
 801273c:	1a6d      	subs	r5, r5, r1
 801273e:	9b02      	ldr	r3, [sp, #8]
 8012740:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	; 0x42
 8012744:	4413      	add	r3, r2
 8012746:	f9bd 2046 	ldrsh.w	r2, [sp, #70]	; 0x46
 801274a:	fb92 f2f0 	sdiv	r2, r2, r0
 801274e:	440a      	add	r2, r1
 8012750:	1a9b      	subs	r3, r3, r2
 8012752:	435b      	muls	r3, r3
 8012754:	fb05 3505 	mla	r5, r5, r5, r3
 8012758:	4f4d      	ldr	r7, [pc, #308]	; (8012890 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c4>)
 801275a:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 801275c:	ac10      	add	r4, sp, #64	; 0x40
 801275e:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8012760:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 8012762:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8012764:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 8012766:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8012768:	e897 000f 	ldmia.w	r7, {r0, r1, r2, r3}
 801276c:	f1b9 0f0c 	cmp.w	r9, #12
 8012770:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 8012774:	f04f 0303 	mov.w	r3, #3
 8012778:	bfc8      	it	gt
 801277a:	4698      	movgt	r8, r3
 801277c:	f8cd 9000 	str.w	r9, [sp]
 8012780:	f04f 0400 	mov.w	r4, #0
 8012784:	bfdc      	itt	le
 8012786:	f109 32ff 	addle.w	r2, r9, #4294967295
 801278a:	fb92 f8f3 	sdivle	r8, r2, r3
 801278e:	1c63      	adds	r3, r4, #1
 8012790:	aa10      	add	r2, sp, #64	; 0x40
 8012792:	f004 0401 	and.w	r4, r4, #1
 8012796:	9308      	str	r3, [sp, #32]
 8012798:	eb02 1444 	add.w	r4, r2, r4, lsl #5
 801279c:	9b00      	ldr	r3, [sp, #0]
 801279e:	fb93 f3f8 	sdiv	r3, r3, r8
 80127a2:	b29b      	uxth	r3, r3
 80127a4:	3404      	adds	r4, #4
 80127a6:	f04f 0b00 	mov.w	fp, #0
 80127aa:	9304      	str	r3, [sp, #16]
 80127ac:	9a04      	ldr	r2, [sp, #16]
 80127ae:	f854 3c04 	ldr.w	r3, [r4, #-4]
 80127b2:	fb13 f302 	smulbb	r3, r3, r2
 80127b6:	9a01      	ldr	r2, [sp, #4]
 80127b8:	b29b      	uxth	r3, r3
 80127ba:	1899      	adds	r1, r3, r2
 80127bc:	9305      	str	r3, [sp, #20]
 80127be:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 80127c2:	b209      	sxth	r1, r1
 80127c4:	4299      	cmp	r1, r3
 80127c6:	db4d      	blt.n	8012864 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 80127c8:	8932      	ldrh	r2, [r6, #8]
 80127ca:	4413      	add	r3, r2
 80127cc:	b21b      	sxth	r3, r3
 80127ce:	4299      	cmp	r1, r3
 80127d0:	da48      	bge.n	8012864 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 80127d2:	9b04      	ldr	r3, [sp, #16]
 80127d4:	6827      	ldr	r7, [r4, #0]
 80127d6:	fb17 f703 	smulbb	r7, r7, r3
 80127da:	9b02      	ldr	r3, [sp, #8]
 80127dc:	b2bf      	uxth	r7, r7
 80127de:	18fa      	adds	r2, r7, r3
 80127e0:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 80127e4:	b212      	sxth	r2, r2
 80127e6:	429a      	cmp	r2, r3
 80127e8:	db3c      	blt.n	8012864 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 80127ea:	8970      	ldrh	r0, [r6, #10]
 80127ec:	4403      	add	r3, r0
 80127ee:	b21b      	sxth	r3, r3
 80127f0:	429a      	cmp	r2, r3
 80127f2:	da37      	bge.n	8012864 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 80127f4:	2300      	movs	r3, #0
 80127f6:	930b      	str	r3, [sp, #44]	; 0x2c
 80127f8:	4630      	mov	r0, r6
 80127fa:	ab0b      	add	r3, sp, #44	; 0x2c
 80127fc:	f7ff ff36 	bl	801266c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 8012800:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8012802:	b37a      	cbz	r2, 8012864 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 8012804:	4552      	cmp	r2, sl
 8012806:	d02d      	beq.n	8012864 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 8012808:	4611      	mov	r1, r2
 801280a:	a80e      	add	r0, sp, #56	; 0x38
 801280c:	9209      	str	r2, [sp, #36]	; 0x24
 801280e:	f006 ffdd 	bl	80197cc <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8012812:	9a06      	ldr	r2, [sp, #24]
 8012814:	f9bd 0038 	ldrsh.w	r0, [sp, #56]	; 0x38
 8012818:	9b01      	ldr	r3, [sp, #4]
 801281a:	f9bd 103c 	ldrsh.w	r1, [sp, #60]	; 0x3c
 801281e:	f9bd c03e 	ldrsh.w	ip, [sp, #62]	; 0x3e
 8012822:	4413      	add	r3, r2
 8012824:	f04f 0e02 	mov.w	lr, #2
 8012828:	fb91 f1fe 	sdiv	r1, r1, lr
 801282c:	4401      	add	r1, r0
 801282e:	1a58      	subs	r0, r3, r1
 8012830:	9a07      	ldr	r2, [sp, #28]
 8012832:	9b02      	ldr	r3, [sp, #8]
 8012834:	f9bd 103a 	ldrsh.w	r1, [sp, #58]	; 0x3a
 8012838:	fb9c fcfe 	sdiv	ip, ip, lr
 801283c:	4413      	add	r3, r2
 801283e:	448c      	add	ip, r1
 8012840:	eba3 030c 	sub.w	r3, r3, ip
 8012844:	435b      	muls	r3, r3
 8012846:	fb00 3300 	mla	r3, r0, r0, r3
 801284a:	42ab      	cmp	r3, r5
 801284c:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801284e:	d208      	bcs.n	8012862 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x196>
 8012850:	9803      	ldr	r0, [sp, #12]
 8012852:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8012854:	6001      	str	r1, [r0, #0]
 8012856:	992a      	ldr	r1, [sp, #168]	; 0xa8
 8012858:	9805      	ldr	r0, [sp, #20]
 801285a:	8008      	strh	r0, [r1, #0]
 801285c:	992b      	ldr	r1, [sp, #172]	; 0xac
 801285e:	461d      	mov	r5, r3
 8012860:	800f      	strh	r7, [r1, #0]
 8012862:	4692      	mov	sl, r2
 8012864:	f10b 0b01 	add.w	fp, fp, #1
 8012868:	f1bb 0f04 	cmp.w	fp, #4
 801286c:	f104 0408 	add.w	r4, r4, #8
 8012870:	d19c      	bne.n	80127ac <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xe0>
 8012872:	9b00      	ldr	r3, [sp, #0]
 8012874:	9c08      	ldr	r4, [sp, #32]
 8012876:	444b      	add	r3, r9
 8012878:	4544      	cmp	r4, r8
 801287a:	9300      	str	r3, [sp, #0]
 801287c:	d187      	bne.n	801278e <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xc2>
 801287e:	b021      	add	sp, #132	; 0x84
 8012880:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8012884:	f04f 35ff 	mov.w	r5, #4294967295
 8012888:	e766      	b.n	8012758 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x8c>
 801288a:	bf00      	nop
 801288c:	20006c34 	.word	0x20006c34
 8012890:	0802e458 	.word	0x0802e458

08012894 <_ZN8touchgfx4RectaNERKS0_>:
 8012894:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8012898:	f9b1 7000 	ldrsh.w	r7, [r1]
 801289c:	888c      	ldrh	r4, [r1, #4]
 801289e:	f9b0 9000 	ldrsh.w	r9, [r0]
 80128a2:	443c      	add	r4, r7
 80128a4:	b2a4      	uxth	r4, r4
 80128a6:	fa0f f884 	sxth.w	r8, r4
 80128aa:	45c1      	cmp	r9, r8
 80128ac:	da2f      	bge.n	801290e <_ZN8touchgfx4RectaNERKS0_+0x7a>
 80128ae:	8882      	ldrh	r2, [r0, #4]
 80128b0:	444a      	add	r2, r9
 80128b2:	b292      	uxth	r2, r2
 80128b4:	fa0f fe82 	sxth.w	lr, r2
 80128b8:	4577      	cmp	r7, lr
 80128ba:	da28      	bge.n	801290e <_ZN8touchgfx4RectaNERKS0_+0x7a>
 80128bc:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
 80128c0:	88cb      	ldrh	r3, [r1, #6]
 80128c2:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 80128c6:	442b      	add	r3, r5
 80128c8:	b21b      	sxth	r3, r3
 80128ca:	429e      	cmp	r6, r3
 80128cc:	da1f      	bge.n	801290e <_ZN8touchgfx4RectaNERKS0_+0x7a>
 80128ce:	88c3      	ldrh	r3, [r0, #6]
 80128d0:	4433      	add	r3, r6
 80128d2:	b29b      	uxth	r3, r3
 80128d4:	fa0f fc83 	sxth.w	ip, r3
 80128d8:	4565      	cmp	r5, ip
 80128da:	da18      	bge.n	801290e <_ZN8touchgfx4RectaNERKS0_+0x7a>
 80128dc:	454f      	cmp	r7, r9
 80128de:	bfb8      	it	lt
 80128e0:	464f      	movlt	r7, r9
 80128e2:	42b5      	cmp	r5, r6
 80128e4:	bfb8      	it	lt
 80128e6:	4635      	movlt	r5, r6
 80128e8:	45f0      	cmp	r8, lr
 80128ea:	bfd8      	it	le
 80128ec:	4622      	movle	r2, r4
 80128ee:	1bd2      	subs	r2, r2, r7
 80128f0:	8082      	strh	r2, [r0, #4]
 80128f2:	884a      	ldrh	r2, [r1, #2]
 80128f4:	88c9      	ldrh	r1, [r1, #6]
 80128f6:	8007      	strh	r7, [r0, #0]
 80128f8:	440a      	add	r2, r1
 80128fa:	b292      	uxth	r2, r2
 80128fc:	b211      	sxth	r1, r2
 80128fe:	458c      	cmp	ip, r1
 8012900:	bfa8      	it	ge
 8012902:	4613      	movge	r3, r2
 8012904:	1b5b      	subs	r3, r3, r5
 8012906:	80c3      	strh	r3, [r0, #6]
 8012908:	8045      	strh	r5, [r0, #2]
 801290a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801290e:	2300      	movs	r3, #0
 8012910:	8003      	strh	r3, [r0, #0]
 8012912:	8043      	strh	r3, [r0, #2]
 8012914:	8083      	strh	r3, [r0, #4]
 8012916:	80c3      	strh	r3, [r0, #6]
 8012918:	e7f7      	b.n	801290a <_ZN8touchgfx4RectaNERKS0_+0x76>

0801291a <_ZNK8touchgfx4Rect7isEmptyEv>:
 801291a:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 801291e:	2b00      	cmp	r3, #0
 8012920:	dd06      	ble.n	8012930 <_ZNK8touchgfx4Rect7isEmptyEv+0x16>
 8012922:	f9b0 0006 	ldrsh.w	r0, [r0, #6]
 8012926:	2800      	cmp	r0, #0
 8012928:	bfcc      	ite	gt
 801292a:	2000      	movgt	r0, #0
 801292c:	2001      	movle	r0, #1
 801292e:	4770      	bx	lr
 8012930:	2001      	movs	r0, #1
 8012932:	4770      	bx	lr

08012934 <_ZNK8touchgfx9Container16getContainedAreaEv>:
 8012934:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8012938:	2300      	movs	r3, #0
 801293a:	6a8d      	ldr	r5, [r1, #40]	; 0x28
 801293c:	8003      	strh	r3, [r0, #0]
 801293e:	4604      	mov	r4, r0
 8012940:	8043      	strh	r3, [r0, #2]
 8012942:	8083      	strh	r3, [r0, #4]
 8012944:	80c3      	strh	r3, [r0, #6]
 8012946:	2d00      	cmp	r5, #0
 8012948:	d040      	beq.n	80129cc <_ZNK8touchgfx9Container16getContainedAreaEv+0x98>
 801294a:	1d28      	adds	r0, r5, #4
 801294c:	f7ff ffe5 	bl	801291a <_ZNK8touchgfx4Rect7isEmptyEv>
 8012950:	b988      	cbnz	r0, 8012976 <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 8012952:	4620      	mov	r0, r4
 8012954:	f7ff ffe1 	bl	801291a <_ZNK8touchgfx4Rect7isEmptyEv>
 8012958:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
 801295c:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 8012960:	f9b5 e008 	ldrsh.w	lr, [r5, #8]
 8012964:	f9b5 c00a 	ldrsh.w	ip, [r5, #10]
 8012968:	b138      	cbz	r0, 801297a <_ZNK8touchgfx9Container16getContainedAreaEv+0x46>
 801296a:	8022      	strh	r2, [r4, #0]
 801296c:	8063      	strh	r3, [r4, #2]
 801296e:	f8a4 e004 	strh.w	lr, [r4, #4]
 8012972:	f8a4 c006 	strh.w	ip, [r4, #6]
 8012976:	69ad      	ldr	r5, [r5, #24]
 8012978:	e7e5      	b.n	8012946 <_ZNK8touchgfx9Container16getContainedAreaEv+0x12>
 801297a:	f9b4 0000 	ldrsh.w	r0, [r4]
 801297e:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 8012982:	f8b4 8004 	ldrh.w	r8, [r4, #4]
 8012986:	4290      	cmp	r0, r2
 8012988:	4607      	mov	r7, r0
 801298a:	bfa8      	it	ge
 801298c:	4617      	movge	r7, r2
 801298e:	4472      	add	r2, lr
 8012990:	f8b4 e006 	ldrh.w	lr, [r4, #6]
 8012994:	8027      	strh	r7, [r4, #0]
 8012996:	4299      	cmp	r1, r3
 8012998:	460e      	mov	r6, r1
 801299a:	4440      	add	r0, r8
 801299c:	bfa8      	it	ge
 801299e:	461e      	movge	r6, r3
 80129a0:	4471      	add	r1, lr
 80129a2:	4463      	add	r3, ip
 80129a4:	b200      	sxth	r0, r0
 80129a6:	b212      	sxth	r2, r2
 80129a8:	b209      	sxth	r1, r1
 80129aa:	b21b      	sxth	r3, r3
 80129ac:	4290      	cmp	r0, r2
 80129ae:	bfac      	ite	ge
 80129b0:	ebc7 0200 	rsbge	r2, r7, r0
 80129b4:	ebc7 0202 	rsblt	r2, r7, r2
 80129b8:	4299      	cmp	r1, r3
 80129ba:	bfac      	ite	ge
 80129bc:	ebc6 0301 	rsbge	r3, r6, r1
 80129c0:	ebc6 0303 	rsblt	r3, r6, r3
 80129c4:	8066      	strh	r6, [r4, #2]
 80129c6:	80a2      	strh	r2, [r4, #4]
 80129c8:	80e3      	strh	r3, [r4, #6]
 80129ca:	e7d4      	b.n	8012976 <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 80129cc:	4620      	mov	r0, r4
 80129ce:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080129d2 <_ZNK8touchgfx9Container4drawERKNS_4RectE>:
 80129d2:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 80129d6:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
 80129da:	b383      	cbz	r3, 8012a3e <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 80129dc:	6a84      	ldr	r4, [r0, #40]	; 0x28
 80129de:	b374      	cbz	r4, 8012a3e <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 80129e0:	f9b1 5000 	ldrsh.w	r5, [r1]
 80129e4:	f9b1 6002 	ldrsh.w	r6, [r1, #2]
 80129e8:	f9b1 7004 	ldrsh.w	r7, [r1, #4]
 80129ec:	f9b1 8006 	ldrsh.w	r8, [r1, #6]
 80129f0:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 80129f4:	b303      	cbz	r3, 8012a38 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 80129f6:	4668      	mov	r0, sp
 80129f8:	1d21      	adds	r1, r4, #4
 80129fa:	f8ad 5000 	strh.w	r5, [sp]
 80129fe:	f8ad 6002 	strh.w	r6, [sp, #2]
 8012a02:	f8ad 7004 	strh.w	r7, [sp, #4]
 8012a06:	f8ad 8006 	strh.w	r8, [sp, #6]
 8012a0a:	f7ff ff43 	bl	8012894 <_ZN8touchgfx4RectaNERKS0_>
 8012a0e:	4668      	mov	r0, sp
 8012a10:	f7ff ff83 	bl	801291a <_ZNK8touchgfx4Rect7isEmptyEv>
 8012a14:	b980      	cbnz	r0, 8012a38 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 8012a16:	f8bd 3000 	ldrh.w	r3, [sp]
 8012a1a:	88a2      	ldrh	r2, [r4, #4]
 8012a1c:	1a9b      	subs	r3, r3, r2
 8012a1e:	f8ad 3000 	strh.w	r3, [sp]
 8012a22:	88e2      	ldrh	r2, [r4, #6]
 8012a24:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8012a28:	1a9b      	subs	r3, r3, r2
 8012a2a:	f8ad 3002 	strh.w	r3, [sp, #2]
 8012a2e:	6823      	ldr	r3, [r4, #0]
 8012a30:	4669      	mov	r1, sp
 8012a32:	689b      	ldr	r3, [r3, #8]
 8012a34:	4620      	mov	r0, r4
 8012a36:	4798      	blx	r3
 8012a38:	69a4      	ldr	r4, [r4, #24]
 8012a3a:	2c00      	cmp	r4, #0
 8012a3c:	d1d8      	bne.n	80129f0 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x1e>
 8012a3e:	b002      	add	sp, #8
 8012a40:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08012a44 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>:
 8012a44:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8012a46:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
 8012a4a:	460d      	mov	r5, r1
 8012a4c:	4616      	mov	r6, r2
 8012a4e:	b323      	cbz	r3, 8012a9a <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 8012a50:	6a84      	ldr	r4, [r0, #40]	; 0x28
 8012a52:	b314      	cbz	r4, 8012a9a <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 8012a54:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 8012a58:	b1eb      	cbz	r3, 8012a96 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 8012a5a:	6828      	ldr	r0, [r5, #0]
 8012a5c:	6869      	ldr	r1, [r5, #4]
 8012a5e:	466b      	mov	r3, sp
 8012a60:	c303      	stmia	r3!, {r0, r1}
 8012a62:	4668      	mov	r0, sp
 8012a64:	1d21      	adds	r1, r4, #4
 8012a66:	f7ff ff15 	bl	8012894 <_ZN8touchgfx4RectaNERKS0_>
 8012a6a:	4668      	mov	r0, sp
 8012a6c:	f7ff ff55 	bl	801291a <_ZNK8touchgfx4Rect7isEmptyEv>
 8012a70:	b988      	cbnz	r0, 8012a96 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 8012a72:	f8bd 3000 	ldrh.w	r3, [sp]
 8012a76:	88a2      	ldrh	r2, [r4, #4]
 8012a78:	1a9b      	subs	r3, r3, r2
 8012a7a:	f8ad 3000 	strh.w	r3, [sp]
 8012a7e:	88e2      	ldrh	r2, [r4, #6]
 8012a80:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8012a84:	1a9b      	subs	r3, r3, r2
 8012a86:	f8ad 3002 	strh.w	r3, [sp, #2]
 8012a8a:	6823      	ldr	r3, [r4, #0]
 8012a8c:	4632      	mov	r2, r6
 8012a8e:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8012a90:	4669      	mov	r1, sp
 8012a92:	4620      	mov	r0, r4
 8012a94:	4798      	blx	r3
 8012a96:	69a4      	ldr	r4, [r4, #24]
 8012a98:	e7db      	b.n	8012a52 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0xe>
 8012a9a:	b002      	add	sp, #8
 8012a9c:	bd70      	pop	{r4, r5, r6, pc}

08012a9e <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEt>:
 8012a9e:	b513      	push	{r0, r1, r4, lr}
 8012aa0:	6803      	ldr	r3, [r0, #0]
 8012aa2:	f8d3 40a8 	ldr.w	r4, [r3, #168]	; 0xa8
 8012aa6:	2300      	movs	r3, #0
 8012aa8:	e9cd 3300 	strd	r3, r3, [sp]
 8012aac:	466b      	mov	r3, sp
 8012aae:	47a0      	blx	r4
 8012ab0:	b002      	add	sp, #8
 8012ab2:	bd10      	pop	{r4, pc}

08012ab4 <_ZN8touchgfx3HAL16flushFrameBufferEv>:
 8012ab4:	2301      	movs	r3, #1
 8012ab6:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
 8012aba:	f880 306d 	strb.w	r3, [r0, #109]	; 0x6d
 8012abe:	4770      	bx	lr

08012ac0 <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>:
 8012ac0:	2301      	movs	r3, #1
 8012ac2:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
 8012ac6:	f880 306d 	strb.w	r3, [r0, #109]	; 0x6d
 8012aca:	4770      	bx	lr

08012acc <_ZN8touchgfx3HAL17allowDMATransfersEv>:
 8012acc:	6843      	ldr	r3, [r0, #4]
 8012ace:	2201      	movs	r2, #1
 8012ad0:	725a      	strb	r2, [r3, #9]
 8012ad2:	6840      	ldr	r0, [r0, #4]
 8012ad4:	6803      	ldr	r3, [r0, #0]
 8012ad6:	691b      	ldr	r3, [r3, #16]
 8012ad8:	4718      	bx	r3

08012ada <_ZN8touchgfx3HAL8flushDMAEv>:
 8012ada:	6840      	ldr	r0, [r0, #4]
 8012adc:	6803      	ldr	r3, [r0, #0]
 8012ade:	689b      	ldr	r3, [r3, #8]
 8012ae0:	4718      	bx	r3

08012ae2 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbtNS_6Bitmap12BitmapFormatES4_b>:
 8012ae2:	b530      	push	{r4, r5, lr}
 8012ae4:	b08b      	sub	sp, #44	; 0x2c
 8012ae6:	6804      	ldr	r4, [r0, #0]
 8012ae8:	f89d 5058 	ldrb.w	r5, [sp, #88]	; 0x58
 8012aec:	9509      	str	r5, [sp, #36]	; 0x24
 8012aee:	f89d 5054 	ldrb.w	r5, [sp, #84]	; 0x54
 8012af2:	9508      	str	r5, [sp, #32]
 8012af4:	f89d 5050 	ldrb.w	r5, [sp, #80]	; 0x50
 8012af8:	9507      	str	r5, [sp, #28]
 8012afa:	f8bd 504c 	ldrh.w	r5, [sp, #76]	; 0x4c
 8012afe:	9506      	str	r5, [sp, #24]
 8012b00:	f89d 5048 	ldrb.w	r5, [sp, #72]	; 0x48
 8012b04:	9505      	str	r5, [sp, #20]
 8012b06:	f89d 5044 	ldrb.w	r5, [sp, #68]	; 0x44
 8012b0a:	9504      	str	r5, [sp, #16]
 8012b0c:	f8bd 5040 	ldrh.w	r5, [sp, #64]	; 0x40
 8012b10:	9503      	str	r5, [sp, #12]
 8012b12:	f8bd 503c 	ldrh.w	r5, [sp, #60]	; 0x3c
 8012b16:	9502      	str	r5, [sp, #8]
 8012b18:	f8bd 5038 	ldrh.w	r5, [sp, #56]	; 0x38
 8012b1c:	e9cd 3500 	strd	r3, r5, [sp]
 8012b20:	4613      	mov	r3, r2
 8012b22:	6be4      	ldr	r4, [r4, #60]	; 0x3c
 8012b24:	2200      	movs	r2, #0
 8012b26:	47a0      	blx	r4
 8012b28:	b00b      	add	sp, #44	; 0x2c
 8012b2a:	bd30      	pop	{r4, r5, pc}

08012b2c <_ZN8touchgfx3HAL10beginFrameEv>:
 8012b2c:	4b04      	ldr	r3, [pc, #16]	; (8012b40 <_ZN8touchgfx3HAL10beginFrameEv+0x14>)
 8012b2e:	781b      	ldrb	r3, [r3, #0]
 8012b30:	b123      	cbz	r3, 8012b3c <_ZN8touchgfx3HAL10beginFrameEv+0x10>
 8012b32:	f890 006e 	ldrb.w	r0, [r0, #110]	; 0x6e
 8012b36:	f080 0001 	eor.w	r0, r0, #1
 8012b3a:	4770      	bx	lr
 8012b3c:	2001      	movs	r0, #1
 8012b3e:	4770      	bx	lr
 8012b40:	20006c32 	.word	0x20006c32

08012b44 <_ZN8touchgfx3HAL8endFrameEv>:
 8012b44:	b510      	push	{r4, lr}
 8012b46:	4604      	mov	r4, r0
 8012b48:	6840      	ldr	r0, [r0, #4]
 8012b4a:	6803      	ldr	r3, [r0, #0]
 8012b4c:	689b      	ldr	r3, [r3, #8]
 8012b4e:	4798      	blx	r3
 8012b50:	f894 306d 	ldrb.w	r3, [r4, #109]	; 0x6d
 8012b54:	b113      	cbz	r3, 8012b5c <_ZN8touchgfx3HAL8endFrameEv+0x18>
 8012b56:	2301      	movs	r3, #1
 8012b58:	f884 306e 	strb.w	r3, [r4, #110]	; 0x6e
 8012b5c:	bd10      	pop	{r4, pc}

08012b5e <_ZN8touchgfx3HAL10initializeEv>:
 8012b5e:	b510      	push	{r4, lr}
 8012b60:	4604      	mov	r4, r0
 8012b62:	f7fd f913 	bl	800fd8c <_ZN8touchgfx10OSWrappers10initializeEv>
 8012b66:	f7fc fe07 	bl	800f778 <_ZN8touchgfx4GPIO4initEv>
 8012b6a:	6860      	ldr	r0, [r4, #4]
 8012b6c:	6803      	ldr	r3, [r0, #0]
 8012b6e:	68db      	ldr	r3, [r3, #12]
 8012b70:	4798      	blx	r3
 8012b72:	68e0      	ldr	r0, [r4, #12]
 8012b74:	6803      	ldr	r3, [r0, #0]
 8012b76:	689b      	ldr	r3, [r3, #8]
 8012b78:	4798      	blx	r3
 8012b7a:	6823      	ldr	r3, [r4, #0]
 8012b7c:	4620      	mov	r0, r4
 8012b7e:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8012b80:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8012b84:	4718      	bx	r3

08012b86 <_ZN8touchgfx3HAL9taskEntryEv>:
 8012b86:	b508      	push	{r3, lr}
 8012b88:	6803      	ldr	r3, [r0, #0]
 8012b8a:	4604      	mov	r4, r0
 8012b8c:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8012b90:	4798      	blx	r3
 8012b92:	6823      	ldr	r3, [r4, #0]
 8012b94:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 8012b96:	4620      	mov	r0, r4
 8012b98:	4798      	blx	r3
 8012b9a:	f7fd f96b 	bl	800fe74 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
 8012b9e:	6823      	ldr	r3, [r4, #0]
 8012ba0:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8012ba2:	e7f8      	b.n	8012b96 <_ZN8touchgfx3HAL9taskEntryEv+0x10>

08012ba4 <_ZN8touchgfx3HAL4tickEv>:
 8012ba4:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8012ba6:	6803      	ldr	r3, [r0, #0]
 8012ba8:	4d5b      	ldr	r5, [pc, #364]	; (8012d18 <_ZN8touchgfx3HAL4tickEv+0x174>)
 8012baa:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 8012bae:	4604      	mov	r4, r0
 8012bb0:	4798      	blx	r3
 8012bb2:	2800      	cmp	r0, #0
 8012bb4:	f000 8095 	beq.w	8012ce2 <_ZN8touchgfx3HAL4tickEv+0x13e>
 8012bb8:	2001      	movs	r0, #1
 8012bba:	f7fc fde5 	bl	800f788 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 8012bbe:	f894 306a 	ldrb.w	r3, [r4, #106]	; 0x6a
 8012bc2:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
 8012bc6:	f894 3079 	ldrb.w	r3, [r4, #121]	; 0x79
 8012bca:	2600      	movs	r6, #0
 8012bcc:	f884 606a 	strb.w	r6, [r4, #106]	; 0x6a
 8012bd0:	f884 604b 	strb.w	r6, [r4, #75]	; 0x4b
 8012bd4:	b133      	cbz	r3, 8012be4 <_ZN8touchgfx3HAL4tickEv+0x40>
 8012bd6:	6823      	ldr	r3, [r4, #0]
 8012bd8:	4620      	mov	r0, r4
 8012bda:	f8d3 30c4 	ldr.w	r3, [r3, #196]	; 0xc4
 8012bde:	4798      	blx	r3
 8012be0:	f884 6079 	strb.w	r6, [r4, #121]	; 0x79
 8012be4:	f894 304a 	ldrb.w	r3, [r4, #74]	; 0x4a
 8012be8:	6862      	ldr	r2, [r4, #4]
 8012bea:	f083 0301 	eor.w	r3, r3, #1
 8012bee:	7253      	strb	r3, [r2, #9]
 8012bf0:	2601      	movs	r6, #1
 8012bf2:	702e      	strb	r6, [r5, #0]
 8012bf4:	f005 fcb2 	bl	801855c <_ZN8touchgfx11Application11getInstanceEv>
 8012bf8:	6803      	ldr	r3, [r0, #0]
 8012bfa:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8012bfc:	4798      	blx	r3
 8012bfe:	f894 306b 	ldrb.w	r3, [r4, #107]	; 0x6b
 8012c02:	b90b      	cbnz	r3, 8012c08 <_ZN8touchgfx3HAL4tickEv+0x64>
 8012c04:	f884 606b 	strb.w	r6, [r4, #107]	; 0x6b
 8012c08:	f005 fca8 	bl	801855c <_ZN8touchgfx11Application11getInstanceEv>
 8012c0c:	6803      	ldr	r3, [r0, #0]
 8012c0e:	695b      	ldr	r3, [r3, #20]
 8012c10:	4798      	blx	r3
 8012c12:	6de0      	ldr	r0, [r4, #92]	; 0x5c
 8012c14:	6803      	ldr	r3, [r0, #0]
 8012c16:	691b      	ldr	r3, [r3, #16]
 8012c18:	4798      	blx	r3
 8012c1a:	f894 306b 	ldrb.w	r3, [r4, #107]	; 0x6b
 8012c1e:	f894 206c 	ldrb.w	r2, [r4, #108]	; 0x6c
 8012c22:	3b01      	subs	r3, #1
 8012c24:	b2db      	uxtb	r3, r3
 8012c26:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
 8012c2a:	b10a      	cbz	r2, 8012c30 <_ZN8touchgfx3HAL4tickEv+0x8c>
 8012c2c:	2b00      	cmp	r3, #0
 8012c2e:	d1eb      	bne.n	8012c08 <_ZN8touchgfx3HAL4tickEv+0x64>
 8012c30:	4a3a      	ldr	r2, [pc, #232]	; (8012d1c <_ZN8touchgfx3HAL4tickEv+0x178>)
 8012c32:	f994 1068 	ldrsb.w	r1, [r4, #104]	; 0x68
 8012c36:	7813      	ldrb	r3, [r2, #0]
 8012c38:	3301      	adds	r3, #1
 8012c3a:	b25b      	sxtb	r3, r3
 8012c3c:	4299      	cmp	r1, r3
 8012c3e:	7013      	strb	r3, [r2, #0]
 8012c40:	dc10      	bgt.n	8012c64 <_ZN8touchgfx3HAL4tickEv+0xc0>
 8012c42:	68e0      	ldr	r0, [r4, #12]
 8012c44:	2300      	movs	r3, #0
 8012c46:	7013      	strb	r3, [r2, #0]
 8012c48:	6803      	ldr	r3, [r0, #0]
 8012c4a:	aa03      	add	r2, sp, #12
 8012c4c:	68db      	ldr	r3, [r3, #12]
 8012c4e:	a902      	add	r1, sp, #8
 8012c50:	4798      	blx	r3
 8012c52:	6823      	ldr	r3, [r4, #0]
 8012c54:	2800      	cmp	r0, #0
 8012c56:	d050      	beq.n	8012cfa <_ZN8touchgfx3HAL4tickEv+0x156>
 8012c58:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 8012c5c:	e9dd 1202 	ldrd	r1, r2, [sp, #8]
 8012c60:	4620      	mov	r0, r4
 8012c62:	4798      	blx	r3
 8012c64:	6960      	ldr	r0, [r4, #20]
 8012c66:	2300      	movs	r3, #0
 8012c68:	f88d 3007 	strb.w	r3, [sp, #7]
 8012c6c:	b158      	cbz	r0, 8012c86 <_ZN8touchgfx3HAL4tickEv+0xe2>
 8012c6e:	6803      	ldr	r3, [r0, #0]
 8012c70:	f10d 0107 	add.w	r1, sp, #7
 8012c74:	68db      	ldr	r3, [r3, #12]
 8012c76:	4798      	blx	r3
 8012c78:	b128      	cbz	r0, 8012c86 <_ZN8touchgfx3HAL4tickEv+0xe2>
 8012c7a:	6de0      	ldr	r0, [r4, #92]	; 0x5c
 8012c7c:	f89d 1007 	ldrb.w	r1, [sp, #7]
 8012c80:	6803      	ldr	r3, [r0, #0]
 8012c82:	68db      	ldr	r3, [r3, #12]
 8012c84:	4798      	blx	r3
 8012c86:	f104 001c 	add.w	r0, r4, #28
 8012c8a:	f016 ffbb 	bl	8029c04 <_ZN8touchgfx8Gestures4tickEv>
 8012c8e:	f894 3070 	ldrb.w	r3, [r4, #112]	; 0x70
 8012c92:	b30b      	cbz	r3, 8012cd8 <_ZN8touchgfx3HAL4tickEv+0x134>
 8012c94:	6920      	ldr	r0, [r4, #16]
 8012c96:	6803      	ldr	r3, [r0, #0]
 8012c98:	691b      	ldr	r3, [r3, #16]
 8012c9a:	4798      	blx	r3
 8012c9c:	6f63      	ldr	r3, [r4, #116]	; 0x74
 8012c9e:	4606      	mov	r6, r0
 8012ca0:	b903      	cbnz	r3, 8012ca4 <_ZN8touchgfx3HAL4tickEv+0x100>
 8012ca2:	6760      	str	r0, [r4, #116]	; 0x74
 8012ca4:	6f63      	ldr	r3, [r4, #116]	; 0x74
 8012ca6:	4a1e      	ldr	r2, [pc, #120]	; (8012d20 <_ZN8touchgfx3HAL4tickEv+0x17c>)
 8012ca8:	1af3      	subs	r3, r6, r3
 8012caa:	4293      	cmp	r3, r2
 8012cac:	d914      	bls.n	8012cd8 <_ZN8touchgfx3HAL4tickEv+0x134>
 8012cae:	6920      	ldr	r0, [r4, #16]
 8012cb0:	6803      	ldr	r3, [r0, #0]
 8012cb2:	699b      	ldr	r3, [r3, #24]
 8012cb4:	4798      	blx	r3
 8012cb6:	6f63      	ldr	r3, [r4, #116]	; 0x74
 8012cb8:	2264      	movs	r2, #100	; 0x64
 8012cba:	1af3      	subs	r3, r6, r3
 8012cbc:	fbb3 f3f2 	udiv	r3, r3, r2
 8012cc0:	fbb0 f0f3 	udiv	r0, r0, r3
 8012cc4:	2800      	cmp	r0, #0
 8012cc6:	dc1d      	bgt.n	8012d04 <_ZN8touchgfx3HAL4tickEv+0x160>
 8012cc8:	f884 2069 	strb.w	r2, [r4, #105]	; 0x69
 8012ccc:	6920      	ldr	r0, [r4, #16]
 8012cce:	6803      	ldr	r3, [r0, #0]
 8012cd0:	2100      	movs	r1, #0
 8012cd2:	69db      	ldr	r3, [r3, #28]
 8012cd4:	4798      	blx	r3
 8012cd6:	6766      	str	r6, [r4, #116]	; 0x74
 8012cd8:	f005 fc40 	bl	801855c <_ZN8touchgfx11Application11getInstanceEv>
 8012cdc:	6803      	ldr	r3, [r0, #0]
 8012cde:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8012ce0:	4798      	blx	r3
 8012ce2:	6823      	ldr	r3, [r4, #0]
 8012ce4:	4620      	mov	r0, r4
 8012ce6:	f8d3 30b4 	ldr.w	r3, [r3, #180]	; 0xb4
 8012cea:	4798      	blx	r3
 8012cec:	2001      	movs	r0, #1
 8012cee:	f7fc fd67 	bl	800f7c0 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
 8012cf2:	2300      	movs	r3, #0
 8012cf4:	702b      	strb	r3, [r5, #0]
 8012cf6:	b004      	add	sp, #16
 8012cf8:	bd70      	pop	{r4, r5, r6, pc}
 8012cfa:	f8d3 30c0 	ldr.w	r3, [r3, #192]	; 0xc0
 8012cfe:	4620      	mov	r0, r4
 8012d00:	4798      	blx	r3
 8012d02:	e7af      	b.n	8012c64 <_ZN8touchgfx3HAL4tickEv+0xc0>
 8012d04:	2863      	cmp	r0, #99	; 0x63
 8012d06:	bfcb      	itete	gt
 8012d08:	2300      	movgt	r3, #0
 8012d0a:	f1c0 0064 	rsble	r0, r0, #100	; 0x64
 8012d0e:	f884 3069 	strbgt.w	r3, [r4, #105]	; 0x69
 8012d12:	f884 0069 	strble.w	r0, [r4, #105]	; 0x69
 8012d16:	e7d9      	b.n	8012ccc <_ZN8touchgfx3HAL4tickEv+0x128>
 8012d18:	20006c38 	.word	0x20006c38
 8012d1c:	20006c39 	.word	0x20006c39
 8012d20:	05f5e100 	.word	0x05f5e100

08012d24 <_ZN8touchgfx3HAL17unlockFrameBufferEv>:
 8012d24:	b510      	push	{r4, lr}
 8012d26:	4604      	mov	r4, r0
 8012d28:	f7fd f858 	bl	800fddc <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>
 8012d2c:	6863      	ldr	r3, [r4, #4]
 8012d2e:	2200      	movs	r2, #0
 8012d30:	729a      	strb	r2, [r3, #10]
 8012d32:	bd10      	pop	{r4, pc}

08012d34 <_ZN8touchgfx3HAL21registerEventListenerERNS_15UIEventListenerE>:
 8012d34:	65c1      	str	r1, [r0, #92]	; 0x5c
 8012d36:	301c      	adds	r0, #28
 8012d38:	f016 bf62 	b.w	8029c00 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>

08012d3c <_ZN8touchgfx3HAL5touchEll>:
 8012d3c:	b530      	push	{r4, r5, lr}
 8012d3e:	b087      	sub	sp, #28
 8012d40:	4604      	mov	r4, r0
 8012d42:	a804      	add	r0, sp, #16
 8012d44:	e9cd 1204 	strd	r1, r2, [sp, #16]
 8012d48:	f005 f9fa 	bl	8018140 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>
 8012d4c:	9b04      	ldr	r3, [sp, #16]
 8012d4e:	f8ad 300c 	strh.w	r3, [sp, #12]
 8012d52:	a906      	add	r1, sp, #24
 8012d54:	9b05      	ldr	r3, [sp, #20]
 8012d56:	f821 3d0a 	strh.w	r3, [r1, #-10]!
 8012d5a:	a803      	add	r0, sp, #12
 8012d5c:	f005 fa42 	bl	80181e4 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>
 8012d60:	f894 106f 	ldrb.w	r1, [r4, #111]	; 0x6f
 8012d64:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 8012d68:	f8bd 300e 	ldrh.w	r3, [sp, #14]
 8012d6c:	f104 001c 	add.w	r0, r4, #28
 8012d70:	b189      	cbz	r1, 8012d96 <_ZN8touchgfx3HAL5touchEll+0x5a>
 8012d72:	f8b4 5064 	ldrh.w	r5, [r4, #100]	; 0x64
 8012d76:	9300      	str	r3, [sp, #0]
 8012d78:	f8b4 1060 	ldrh.w	r1, [r4, #96]	; 0x60
 8012d7c:	4613      	mov	r3, r2
 8012d7e:	462a      	mov	r2, r5
 8012d80:	f016 ff4e 	bl	8029c20 <_ZN8touchgfx8Gestures17registerDragEventEtttt>
 8012d84:	b128      	cbz	r0, 8012d92 <_ZN8touchgfx3HAL5touchEll+0x56>
 8012d86:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 8012d8a:	6623      	str	r3, [r4, #96]	; 0x60
 8012d8c:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 8012d90:	6663      	str	r3, [r4, #100]	; 0x64
 8012d92:	b007      	add	sp, #28
 8012d94:	bd30      	pop	{r4, r5, pc}
 8012d96:	f016 ff83 	bl	8029ca0 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 8012d9a:	2301      	movs	r3, #1
 8012d9c:	f884 306f 	strb.w	r3, [r4, #111]	; 0x6f
 8012da0:	e7f1      	b.n	8012d86 <_ZN8touchgfx3HAL5touchEll+0x4a>

08012da2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm>:
 8012da2:	b510      	push	{r4, lr}
 8012da4:	2b00      	cmp	r3, #0
 8012da6:	d046      	beq.n	8012e36 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 8012da8:	ea81 0002 	eor.w	r0, r1, r2
 8012dac:	07c4      	lsls	r4, r0, #31
 8012dae:	d508      	bpl.n	8012dc2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x20>
 8012db0:	440b      	add	r3, r1
 8012db2:	3a01      	subs	r2, #1
 8012db4:	428b      	cmp	r3, r1
 8012db6:	d93e      	bls.n	8012e36 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 8012db8:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 8012dbc:	f801 0b01 	strb.w	r0, [r1], #1
 8012dc0:	e7f8      	b.n	8012db4 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x12>
 8012dc2:	07d0      	lsls	r0, r2, #31
 8012dc4:	bf42      	ittt	mi
 8012dc6:	f812 0b01 	ldrbmi.w	r0, [r2], #1
 8012dca:	f801 0b01 	strbmi.w	r0, [r1], #1
 8012dce:	f103 33ff 	addmi.w	r3, r3, #4294967295
 8012dd2:	2b01      	cmp	r3, #1
 8012dd4:	d911      	bls.n	8012dfa <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 8012dd6:	ea81 0402 	eor.w	r4, r1, r2
 8012dda:	07a4      	lsls	r4, r4, #30
 8012ddc:	4610      	mov	r0, r2
 8012dde:	d022      	beq.n	8012e26 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x84>
 8012de0:	f023 0401 	bic.w	r4, r3, #1
 8012de4:	440c      	add	r4, r1
 8012de6:	428c      	cmp	r4, r1
 8012de8:	4602      	mov	r2, r0
 8012dea:	d904      	bls.n	8012df6 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x54>
 8012dec:	8812      	ldrh	r2, [r2, #0]
 8012dee:	f821 2b02 	strh.w	r2, [r1], #2
 8012df2:	3002      	adds	r0, #2
 8012df4:	e7f7      	b.n	8012de6 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x44>
 8012df6:	f003 0301 	and.w	r3, r3, #1
 8012dfa:	f023 0003 	bic.w	r0, r3, #3
 8012dfe:	4408      	add	r0, r1
 8012e00:	4288      	cmp	r0, r1
 8012e02:	4614      	mov	r4, r2
 8012e04:	d904      	bls.n	8012e10 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x6e>
 8012e06:	6824      	ldr	r4, [r4, #0]
 8012e08:	f841 4b04 	str.w	r4, [r1], #4
 8012e0c:	3204      	adds	r2, #4
 8012e0e:	e7f7      	b.n	8012e00 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x5e>
 8012e10:	f003 0303 	and.w	r3, r3, #3
 8012e14:	440b      	add	r3, r1
 8012e16:	3a01      	subs	r2, #1
 8012e18:	428b      	cmp	r3, r1
 8012e1a:	d90c      	bls.n	8012e36 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 8012e1c:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 8012e20:	f801 0b01 	strb.w	r0, [r1], #1
 8012e24:	e7f8      	b.n	8012e18 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x76>
 8012e26:	0790      	lsls	r0, r2, #30
 8012e28:	d0e7      	beq.n	8012dfa <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 8012e2a:	f832 0b02 	ldrh.w	r0, [r2], #2
 8012e2e:	f821 0b02 	strh.w	r0, [r1], #2
 8012e32:	3b02      	subs	r3, #2
 8012e34:	e7e1      	b.n	8012dfa <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 8012e36:	2001      	movs	r0, #1
 8012e38:	bd10      	pop	{r4, pc}

08012e3a <_ZN8touchgfx3HAL7noTouchEv>:
 8012e3a:	b510      	push	{r4, lr}
 8012e3c:	f890 306f 	ldrb.w	r3, [r0, #111]	; 0x6f
 8012e40:	4604      	mov	r4, r0
 8012e42:	b153      	cbz	r3, 8012e5a <_ZN8touchgfx3HAL7noTouchEv+0x20>
 8012e44:	f8b0 3064 	ldrh.w	r3, [r0, #100]	; 0x64
 8012e48:	f8b0 2060 	ldrh.w	r2, [r0, #96]	; 0x60
 8012e4c:	2101      	movs	r1, #1
 8012e4e:	301c      	adds	r0, #28
 8012e50:	f016 ff26 	bl	8029ca0 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 8012e54:	2300      	movs	r3, #0
 8012e56:	f884 306f 	strb.w	r3, [r4, #111]	; 0x6f
 8012e5a:	bd10      	pop	{r4, pc}

08012e5c <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt>:
 8012e5c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8012e60:	b085      	sub	sp, #20
 8012e62:	ad04      	add	r5, sp, #16
 8012e64:	4604      	mov	r4, r0
 8012e66:	2000      	movs	r0, #0
 8012e68:	f845 0d04 	str.w	r0, [r5, #-4]!
 8012e6c:	69a0      	ldr	r0, [r4, #24]
 8012e6e:	6806      	ldr	r6, [r0, #0]
 8012e70:	9501      	str	r5, [sp, #4]
 8012e72:	f8bd 5030 	ldrh.w	r5, [sp, #48]	; 0x30
 8012e76:	9500      	str	r5, [sp, #0]
 8012e78:	6835      	ldr	r5, [r6, #0]
 8012e7a:	4699      	mov	r9, r3
 8012e7c:	460f      	mov	r7, r1
 8012e7e:	4690      	mov	r8, r2
 8012e80:	47a8      	blx	r5
 8012e82:	4d10      	ldr	r5, [pc, #64]	; (8012ec4 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x68>)
 8012e84:	4606      	mov	r6, r0
 8012e86:	f8a5 9000 	strh.w	r9, [r5]
 8012e8a:	f7f8 f83f 	bl	800af0c <_ZN8touchgfx3HAL3lcdEv>
 8012e8e:	6803      	ldr	r3, [r0, #0]
 8012e90:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8012e92:	4798      	blx	r3
 8012e94:	b128      	cbz	r0, 8012ea2 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x46>
 8012e96:	2801      	cmp	r0, #1
 8012e98:	d00b      	beq.n	8012eb2 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x56>
 8012e9a:	4630      	mov	r0, r6
 8012e9c:	b005      	add	sp, #20
 8012e9e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8012ea2:	882b      	ldrh	r3, [r5, #0]
 8012ea4:	fb08 7203 	mla	r2, r8, r3, r7
 8012ea8:	9b03      	ldr	r3, [sp, #12]
 8012eaa:	eba3 0342 	sub.w	r3, r3, r2, lsl #1
 8012eae:	63e3      	str	r3, [r4, #60]	; 0x3c
 8012eb0:	e7f3      	b.n	8012e9a <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
 8012eb2:	882a      	ldrh	r2, [r5, #0]
 8012eb4:	9b03      	ldr	r3, [sp, #12]
 8012eb6:	fb08 7202 	mla	r2, r8, r2, r7
 8012eba:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8012ebe:	1a9a      	subs	r2, r3, r2
 8012ec0:	63e2      	str	r2, [r4, #60]	; 0x3c
 8012ec2:	e7ea      	b.n	8012e9a <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
 8012ec4:	20006c2e 	.word	0x20006c2e

08012ec8 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb>:
 8012ec8:	b5f0      	push	{r4, r5, r6, r7, lr}
 8012eca:	b08b      	sub	sp, #44	; 0x2c
 8012ecc:	4617      	mov	r7, r2
 8012ece:	4604      	mov	r4, r0
 8012ed0:	460e      	mov	r6, r1
 8012ed2:	461d      	mov	r5, r3
 8012ed4:	f7f8 f81a 	bl	800af0c <_ZN8touchgfx3HAL3lcdEv>
 8012ed8:	6803      	ldr	r3, [r0, #0]
 8012eda:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8012edc:	4798      	blx	r3
 8012ede:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 8012ee2:	9007      	str	r0, [sp, #28]
 8012ee4:	e9cd 0308 	strd	r0, r3, [sp, #32]
 8012ee8:	4b0d      	ldr	r3, [pc, #52]	; (8012f20 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb+0x58>)
 8012eea:	6822      	ldr	r2, [r4, #0]
 8012eec:	881b      	ldrh	r3, [r3, #0]
 8012eee:	9306      	str	r3, [sp, #24]
 8012ef0:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 8012ef4:	9305      	str	r3, [sp, #20]
 8012ef6:	f89d 304c 	ldrb.w	r3, [sp, #76]	; 0x4c
 8012efa:	9304      	str	r3, [sp, #16]
 8012efc:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8012f00:	9303      	str	r3, [sp, #12]
 8012f02:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 8012f06:	9302      	str	r3, [sp, #8]
 8012f08:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 8012f0c:	e9cd 5300 	strd	r5, r3, [sp]
 8012f10:	4631      	mov	r1, r6
 8012f12:	6bd5      	ldr	r5, [r2, #60]	; 0x3c
 8012f14:	463b      	mov	r3, r7
 8012f16:	2200      	movs	r2, #0
 8012f18:	4620      	mov	r0, r4
 8012f1a:	47a8      	blx	r5
 8012f1c:	b00b      	add	sp, #44	; 0x2c
 8012f1e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8012f20:	20006c2e 	.word	0x20006c2e

08012f24 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb>:
 8012f24:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8012f28:	4698      	mov	r8, r3
 8012f2a:	6803      	ldr	r3, [r0, #0]
 8012f2c:	6bdd      	ldr	r5, [r3, #60]	; 0x3c
 8012f2e:	4b15      	ldr	r3, [pc, #84]	; (8012f84 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb+0x60>)
 8012f30:	b08b      	sub	sp, #44	; 0x2c
 8012f32:	4617      	mov	r7, r2
 8012f34:	f8b3 9000 	ldrh.w	r9, [r3]
 8012f38:	460e      	mov	r6, r1
 8012f3a:	4604      	mov	r4, r0
 8012f3c:	f7f7 ffe6 	bl	800af0c <_ZN8touchgfx3HAL3lcdEv>
 8012f40:	6803      	ldr	r3, [r0, #0]
 8012f42:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8012f44:	4798      	blx	r3
 8012f46:	f89d 3058 	ldrb.w	r3, [sp, #88]	; 0x58
 8012f4a:	e9cd 0308 	strd	r0, r3, [sp, #32]
 8012f4e:	2302      	movs	r3, #2
 8012f50:	e9cd 9306 	strd	r9, r3, [sp, #24]
 8012f54:	2301      	movs	r3, #1
 8012f56:	9305      	str	r3, [sp, #20]
 8012f58:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 8012f5c:	9304      	str	r3, [sp, #16]
 8012f5e:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
 8012f62:	9303      	str	r3, [sp, #12]
 8012f64:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 8012f68:	9302      	str	r3, [sp, #8]
 8012f6a:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8012f6e:	2200      	movs	r2, #0
 8012f70:	e9cd 8300 	strd	r8, r3, [sp]
 8012f74:	4631      	mov	r1, r6
 8012f76:	463b      	mov	r3, r7
 8012f78:	4620      	mov	r0, r4
 8012f7a:	47a8      	blx	r5
 8012f7c:	b00b      	add	sp, #44	; 0x2c
 8012f7e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8012f82:	bf00      	nop
 8012f84:	20006c2e 	.word	0x20006c2e

08012f88 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb>:
 8012f88:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8012f8c:	4698      	mov	r8, r3
 8012f8e:	6803      	ldr	r3, [r0, #0]
 8012f90:	6d9d      	ldr	r5, [r3, #88]	; 0x58
 8012f92:	4b11      	ldr	r3, [pc, #68]	; (8012fd8 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb+0x50>)
 8012f94:	b087      	sub	sp, #28
 8012f96:	f8b3 9000 	ldrh.w	r9, [r3]
 8012f9a:	460e      	mov	r6, r1
 8012f9c:	4617      	mov	r7, r2
 8012f9e:	4604      	mov	r4, r0
 8012fa0:	f7f7 ffb4 	bl	800af0c <_ZN8touchgfx3HAL3lcdEv>
 8012fa4:	6803      	ldr	r3, [r0, #0]
 8012fa6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8012fa8:	4798      	blx	r3
 8012faa:	f89d 3044 	ldrb.w	r3, [sp, #68]	; 0x44
 8012fae:	f8cd 900c 	str.w	r9, [sp, #12]
 8012fb2:	e9cd 0304 	strd	r0, r3, [sp, #16]
 8012fb6:	f89d 3040 	ldrb.w	r3, [sp, #64]	; 0x40
 8012fba:	9302      	str	r3, [sp, #8]
 8012fbc:	f8bd 303c 	ldrh.w	r3, [sp, #60]	; 0x3c
 8012fc0:	9301      	str	r3, [sp, #4]
 8012fc2:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 8012fc6:	9300      	str	r3, [sp, #0]
 8012fc8:	463a      	mov	r2, r7
 8012fca:	4643      	mov	r3, r8
 8012fcc:	4631      	mov	r1, r6
 8012fce:	4620      	mov	r0, r4
 8012fd0:	47a8      	blx	r5
 8012fd2:	b007      	add	sp, #28
 8012fd4:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8012fd8:	20006c2e 	.word	0x20006c2e

08012fdc <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE>:
 8012fdc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012fe0:	4604      	mov	r4, r0
 8012fe2:	b08f      	sub	sp, #60	; 0x3c
 8012fe4:	4610      	mov	r0, r2
 8012fe6:	460d      	mov	r5, r1
 8012fe8:	4691      	mov	r9, r2
 8012fea:	461e      	mov	r6, r3
 8012fec:	f009 f9f8 	bl	801c3e0 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 8012ff0:	2800      	cmp	r0, #0
 8012ff2:	f000 809d 	beq.w	8013130 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x154>
 8012ff6:	6823      	ldr	r3, [r4, #0]
 8012ff8:	f8df b198 	ldr.w	fp, [pc, #408]	; 8013194 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>
 8012ffc:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8012ffe:	f8df a198 	ldr.w	sl, [pc, #408]	; 8013198 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>
 8013002:	4f61      	ldr	r7, [pc, #388]	; (8013188 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 8013004:	4620      	mov	r0, r4
 8013006:	4798      	blx	r3
 8013008:	6823      	ldr	r3, [r4, #0]
 801300a:	4620      	mov	r0, r4
 801300c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801300e:	4798      	blx	r3
 8013010:	f8bb 3000 	ldrh.w	r3, [fp]
 8013014:	9301      	str	r3, [sp, #4]
 8013016:	f10d 0838 	add.w	r8, sp, #56	; 0x38
 801301a:	f8ba 3000 	ldrh.w	r3, [sl]
 801301e:	9302      	str	r3, [sp, #8]
 8013020:	883b      	ldrh	r3, [r7, #0]
 8013022:	f828 9d1c 	strh.w	r9, [r8, #-28]!
 8013026:	9303      	str	r3, [sp, #12]
 8013028:	4b58      	ldr	r3, [pc, #352]	; (801318c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 801302a:	9305      	str	r3, [sp, #20]
 801302c:	881a      	ldrh	r2, [r3, #0]
 801302e:	9204      	str	r2, [sp, #16]
 8013030:	4640      	mov	r0, r8
 8013032:	f009 fa69 	bl	801c508 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8013036:	8038      	strh	r0, [r7, #0]
 8013038:	4640      	mov	r0, r8
 801303a:	f009 fa99 	bl	801c570 <_ZNK8touchgfx6Bitmap9getHeightEv>
 801303e:	9b05      	ldr	r3, [sp, #20]
 8013040:	b280      	uxth	r0, r0
 8013042:	8018      	strh	r0, [r3, #0]
 8013044:	4b52      	ldr	r3, [pc, #328]	; (8013190 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b4>)
 8013046:	781b      	ldrb	r3, [r3, #0]
 8013048:	2b00      	cmp	r3, #0
 801304a:	d174      	bne.n	8013136 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x15a>
 801304c:	883b      	ldrh	r3, [r7, #0]
 801304e:	f8ab 3000 	strh.w	r3, [fp]
 8013052:	f8aa 0000 	strh.w	r0, [sl]
 8013056:	4648      	mov	r0, r9
 8013058:	e9d4 870f 	ldrd	r8, r7, [r4, #60]	; 0x3c
 801305c:	f009 f9c0 	bl	801c3e0 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 8013060:	e9c4 000f 	strd	r0, r0, [r4, #60]	; 0x3c
 8013064:	2200      	movs	r2, #0
 8013066:	4611      	mov	r1, r2
 8013068:	4628      	mov	r0, r5
 801306a:	f9b5 9004 	ldrsh.w	r9, [r5, #4]
 801306e:	f9b5 a006 	ldrsh.w	sl, [r5, #6]
 8013072:	f7f8 fd00 	bl	800ba76 <_ZN8touchgfx8Drawable5setXYEss>
 8013076:	2301      	movs	r3, #1
 8013078:	f895 b025 	ldrb.w	fp, [r5, #37]	; 0x25
 801307c:	f885 3025 	strb.w	r3, [r5, #37]	; 0x25
 8013080:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 8013084:	2b00      	cmp	r3, #0
 8013086:	dd5c      	ble.n	8013142 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
 8013088:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 801308c:	2b00      	cmp	r3, #0
 801308e:	dd58      	ble.n	8013142 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
 8013090:	462a      	mov	r2, r5
 8013092:	ab0a      	add	r3, sp, #40	; 0x28
 8013094:	f852 0f04 	ldr.w	r0, [r2, #4]!
 8013098:	6851      	ldr	r1, [r2, #4]
 801309a:	c303      	stmia	r3!, {r0, r1}
 801309c:	4631      	mov	r1, r6
 801309e:	a80a      	add	r0, sp, #40	; 0x28
 80130a0:	f7ff fbf8 	bl	8012894 <_ZN8touchgfx4RectaNERKS0_>
 80130a4:	4b38      	ldr	r3, [pc, #224]	; (8013188 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 80130a6:	f9b3 2000 	ldrsh.w	r2, [r3]
 80130aa:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
 80130ae:	2100      	movs	r1, #0
 80130b0:	aa0a      	add	r2, sp, #40	; 0x28
 80130b2:	4b36      	ldr	r3, [pc, #216]	; (801318c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 80130b4:	910c      	str	r1, [sp, #48]	; 0x30
 80130b6:	e892 0003 	ldmia.w	r2, {r0, r1}
 80130ba:	f9b3 3000 	ldrsh.w	r3, [r3]
 80130be:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 80130c2:	ab08      	add	r3, sp, #32
 80130c4:	e883 0003 	stmia.w	r3, {r0, r1}
 80130c8:	4618      	mov	r0, r3
 80130ca:	a90c      	add	r1, sp, #48	; 0x30
 80130cc:	f7ff fbe2 	bl	8012894 <_ZN8touchgfx4RectaNERKS0_>
 80130d0:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
 80130d2:	2b00      	cmp	r3, #0
 80130d4:	d13c      	bne.n	8013150 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x174>
 80130d6:	2000      	movs	r0, #0
 80130d8:	f884 0058 	strb.w	r0, [r4, #88]	; 0x58
 80130dc:	2600      	movs	r6, #0
 80130de:	682a      	ldr	r2, [r5, #0]
 80130e0:	696b      	ldr	r3, [r5, #20]
 80130e2:	616e      	str	r6, [r5, #20]
 80130e4:	9305      	str	r3, [sp, #20]
 80130e6:	6892      	ldr	r2, [r2, #8]
 80130e8:	a908      	add	r1, sp, #32
 80130ea:	4628      	mov	r0, r5
 80130ec:	4790      	blx	r2
 80130ee:	9b05      	ldr	r3, [sp, #20]
 80130f0:	616b      	str	r3, [r5, #20]
 80130f2:	4652      	mov	r2, sl
 80130f4:	f884 6058 	strb.w	r6, [r4, #88]	; 0x58
 80130f8:	4649      	mov	r1, r9
 80130fa:	4628      	mov	r0, r5
 80130fc:	f885 b025 	strb.w	fp, [r5, #37]	; 0x25
 8013100:	f7f8 fcb9 	bl	800ba76 <_ZN8touchgfx8Drawable5setXYEss>
 8013104:	4b23      	ldr	r3, [pc, #140]	; (8013194 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>)
 8013106:	9a01      	ldr	r2, [sp, #4]
 8013108:	801a      	strh	r2, [r3, #0]
 801310a:	4b23      	ldr	r3, [pc, #140]	; (8013198 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>)
 801310c:	9a02      	ldr	r2, [sp, #8]
 801310e:	801a      	strh	r2, [r3, #0]
 8013110:	4b1d      	ldr	r3, [pc, #116]	; (8013188 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 8013112:	9a03      	ldr	r2, [sp, #12]
 8013114:	801a      	strh	r2, [r3, #0]
 8013116:	4b1d      	ldr	r3, [pc, #116]	; (801318c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 8013118:	9a04      	ldr	r2, [sp, #16]
 801311a:	801a      	strh	r2, [r3, #0]
 801311c:	e9c4 870f 	strd	r8, r7, [r4, #60]	; 0x3c
 8013120:	6823      	ldr	r3, [r4, #0]
 8013122:	4620      	mov	r0, r4
 8013124:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8013126:	4798      	blx	r3
 8013128:	6823      	ldr	r3, [r4, #0]
 801312a:	4620      	mov	r0, r4
 801312c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801312e:	4798      	blx	r3
 8013130:	b00f      	add	sp, #60	; 0x3c
 8013132:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013136:	883b      	ldrh	r3, [r7, #0]
 8013138:	f8ab 0000 	strh.w	r0, [fp]
 801313c:	f8aa 3000 	strh.w	r3, [sl]
 8013140:	e789      	b.n	8013056 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x7a>
 8013142:	462a      	mov	r2, r5
 8013144:	ab0a      	add	r3, sp, #40	; 0x28
 8013146:	f852 0f04 	ldr.w	r0, [r2, #4]!
 801314a:	6851      	ldr	r1, [r2, #4]
 801314c:	c303      	stmia	r3!, {r0, r1}
 801314e:	e7a9      	b.n	80130a4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xc8>
 8013150:	a807      	add	r0, sp, #28
 8013152:	f009 fb49 	bl	801c7e8 <_ZNK8touchgfx6Bitmap9getFormatEv>
 8013156:	4606      	mov	r6, r0
 8013158:	6ce0      	ldr	r0, [r4, #76]	; 0x4c
 801315a:	6803      	ldr	r3, [r0, #0]
 801315c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801315e:	4798      	blx	r3
 8013160:	4286      	cmp	r6, r0
 8013162:	d1b8      	bne.n	80130d6 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfa>
 8013164:	f7f7 fed2 	bl	800af0c <_ZN8touchgfx3HAL3lcdEv>
 8013168:	6803      	ldr	r3, [r0, #0]
 801316a:	4606      	mov	r6, r0
 801316c:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 801316e:	9305      	str	r3, [sp, #20]
 8013170:	a807      	add	r0, sp, #28
 8013172:	f009 fb39 	bl	801c7e8 <_ZNK8touchgfx6Bitmap9getFormatEv>
 8013176:	9b05      	ldr	r3, [sp, #20]
 8013178:	4601      	mov	r1, r0
 801317a:	4630      	mov	r0, r6
 801317c:	4798      	blx	r3
 801317e:	f080 0001 	eor.w	r0, r0, #1
 8013182:	b2c0      	uxtb	r0, r0
 8013184:	e7a8      	b.n	80130d8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfc>
 8013186:	bf00      	nop
 8013188:	20006c28 	.word	0x20006c28
 801318c:	20006c2a 	.word	0x20006c2a
 8013190:	20006c2c 	.word	0x20006c2c
 8013194:	20006c2e 	.word	0x20006c2e
 8013198:	20006c30 	.word	0x20006c30

0801319c <_ZN8touchgfx3HAL20getClientFrameBufferEv>:
 801319c:	b510      	push	{r4, lr}
 801319e:	4b07      	ldr	r3, [pc, #28]	; (80131bc <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x20>)
 80131a0:	781b      	ldrb	r3, [r3, #0]
 80131a2:	4604      	mov	r4, r0
 80131a4:	b13b      	cbz	r3, 80131b6 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 80131a6:	6803      	ldr	r3, [r0, #0]
 80131a8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80131aa:	4798      	blx	r3
 80131ac:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 80131ae:	4283      	cmp	r3, r0
 80131b0:	d101      	bne.n	80131b6 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 80131b2:	6c20      	ldr	r0, [r4, #64]	; 0x40
 80131b4:	bd10      	pop	{r4, pc}
 80131b6:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 80131b8:	e7fc      	b.n	80131b4 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x18>
 80131ba:	bf00      	nop
 80131bc:	20006c32 	.word	0x20006c32

080131c0 <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt>:
 80131c0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80131c4:	b08a      	sub	sp, #40	; 0x28
 80131c6:	461d      	mov	r5, r3
 80131c8:	f44f 6380 	mov.w	r3, #1024	; 0x400
 80131cc:	e9cd 3101 	strd	r3, r1, [sp, #4]
 80131d0:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 80131d4:	f8ad 3018 	strh.w	r3, [sp, #24]
 80131d8:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 80131dc:	f8ad 301a 	strh.w	r3, [sp, #26]
 80131e0:	2400      	movs	r4, #0
 80131e2:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 80131e6:	f8bd 604c 	ldrh.w	r6, [sp, #76]	; 0x4c
 80131ea:	f8ad 301c 	strh.w	r3, [sp, #28]
 80131ee:	4690      	mov	r8, r2
 80131f0:	4607      	mov	r7, r0
 80131f2:	9404      	str	r4, [sp, #16]
 80131f4:	f88d 4020 	strb.w	r4, [sp, #32]
 80131f8:	f7ff ffd0 	bl	801319c <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 80131fc:	fb06 8505 	mla	r5, r6, r5, r8
 8013200:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 8013204:	6878      	ldr	r0, [r7, #4]
 8013206:	9505      	str	r5, [sp, #20]
 8013208:	f8ad 601e 	strh.w	r6, [sp, #30]
 801320c:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 8013210:	f88d 4021 	strb.w	r4, [sp, #33]	; 0x21
 8013214:	f88d 4023 	strb.w	r4, [sp, #35]	; 0x23
 8013218:	f88d 4024 	strb.w	r4, [sp, #36]	; 0x24
 801321c:	6803      	ldr	r3, [r0, #0]
 801321e:	a901      	add	r1, sp, #4
 8013220:	685b      	ldr	r3, [r3, #4]
 8013222:	4798      	blx	r3
 8013224:	b00a      	add	sp, #40	; 0x28
 8013226:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0801322a <_ZN8touchgfx3HAL12blitFillWordEtttttt>:
 801322a:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801322e:	b08b      	sub	sp, #44	; 0x2c
 8013230:	2400      	movs	r4, #0
 8013232:	461d      	mov	r5, r3
 8013234:	f44f 6300 	mov.w	r3, #2048	; 0x800
 8013238:	4688      	mov	r8, r1
 801323a:	4691      	mov	r9, r2
 801323c:	f8bd 6050 	ldrh.w	r6, [sp, #80]	; 0x50
 8013240:	9404      	str	r4, [sp, #16]
 8013242:	4607      	mov	r7, r0
 8013244:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8013248:	f7ff ffa8 	bl	801319c <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 801324c:	fb06 9505 	mla	r5, r6, r5, r9
 8013250:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8013254:	f8ad 3018 	strh.w	r3, [sp, #24]
 8013258:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 801325c:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 8013260:	6878      	ldr	r0, [r7, #4]
 8013262:	9505      	str	r5, [sp, #20]
 8013264:	f8ad 301a 	strh.w	r3, [sp, #26]
 8013268:	f8ad 401c 	strh.w	r4, [sp, #28]
 801326c:	f8ad 601e 	strh.w	r6, [sp, #30]
 8013270:	f8cd 8010 	str.w	r8, [sp, #16]
 8013274:	f8ad 4020 	strh.w	r4, [sp, #32]
 8013278:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 801327c:	f88d 4023 	strb.w	r4, [sp, #35]	; 0x23
 8013280:	f88d 4024 	strb.w	r4, [sp, #36]	; 0x24
 8013284:	6803      	ldr	r3, [r0, #0]
 8013286:	a901      	add	r1, sp, #4
 8013288:	685b      	ldr	r3, [r3, #4]
 801328a:	4798      	blx	r3
 801328c:	b00b      	add	sp, #44	; 0x2c
 801328e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	...

08013294 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b>:
 8013294:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8013298:	b08a      	sub	sp, #40	; 0x28
 801329a:	4698      	mov	r8, r3
 801329c:	f89d 505c 	ldrb.w	r5, [sp, #92]	; 0x5c
 80132a0:	f89d c054 	ldrb.w	ip, [sp, #84]	; 0x54
 80132a4:	f8bd 7058 	ldrh.w	r7, [sp, #88]	; 0x58
 80132a8:	f89d 4060 	ldrb.w	r4, [sp, #96]	; 0x60
 80132ac:	2300      	movs	r3, #0
 80132ae:	2d0b      	cmp	r5, #11
 80132b0:	4606      	mov	r6, r0
 80132b2:	9304      	str	r3, [sp, #16]
 80132b4:	f89d 0050 	ldrb.w	r0, [sp, #80]	; 0x50
 80132b8:	d138      	bne.n	801332c <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x98>
 80132ba:	2380      	movs	r3, #128	; 0x80
 80132bc:	e9cd 3101 	strd	r3, r1, [sp, #4]
 80132c0:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 80132c4:	f8ad 3018 	strh.w	r3, [sp, #24]
 80132c8:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 80132cc:	f8ad 301a 	strh.w	r3, [sp, #26]
 80132d0:	f88d 0020 	strb.w	r0, [sp, #32]
 80132d4:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 80132d8:	f8ad 301c 	strh.w	r3, [sp, #28]
 80132dc:	4630      	mov	r0, r6
 80132de:	9203      	str	r2, [sp, #12]
 80132e0:	f7ff ff5c 	bl	801319c <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 80132e4:	2c0b      	cmp	r4, #11
 80132e6:	bf98      	it	ls
 80132e8:	4b1b      	ldrls	r3, [pc, #108]	; (8013358 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xc4>)
 80132ea:	f8bd 2040 	ldrh.w	r2, [sp, #64]	; 0x40
 80132ee:	bf98      	it	ls
 80132f0:	5d19      	ldrbls	r1, [r3, r4]
 80132f2:	f8ad 701e 	strh.w	r7, [sp, #30]
 80132f6:	bf88      	it	hi
 80132f8:	2100      	movhi	r1, #0
 80132fa:	fb02 8307 	mla	r3, r2, r7, r8
 80132fe:	10c9      	asrs	r1, r1, #3
 8013300:	fb01 0003 	mla	r0, r1, r3, r0
 8013304:	f89d 3064 	ldrb.w	r3, [sp, #100]	; 0x64
 8013308:	9005      	str	r0, [sp, #20]
 801330a:	f88d 3023 	strb.w	r3, [sp, #35]	; 0x23
 801330e:	6870      	ldr	r0, [r6, #4]
 8013310:	f88d 5021 	strb.w	r5, [sp, #33]	; 0x21
 8013314:	2300      	movs	r3, #0
 8013316:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 801331a:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 801331e:	6803      	ldr	r3, [r0, #0]
 8013320:	a901      	add	r1, sp, #4
 8013322:	685b      	ldr	r3, [r3, #4]
 8013324:	4798      	blx	r3
 8013326:	b00a      	add	sp, #40	; 0x28
 8013328:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801332c:	2d02      	cmp	r5, #2
 801332e:	d109      	bne.n	8013344 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xb0>
 8013330:	28ff      	cmp	r0, #255	; 0xff
 8013332:	d105      	bne.n	8013340 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xac>
 8013334:	f1bc 0f00 	cmp.w	ip, #0
 8013338:	bf14      	ite	ne
 801333a:	2340      	movne	r3, #64	; 0x40
 801333c:	2320      	moveq	r3, #32
 801333e:	e7bd      	b.n	80132bc <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 8013340:	2340      	movs	r3, #64	; 0x40
 8013342:	e7bb      	b.n	80132bc <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 8013344:	28ff      	cmp	r0, #255	; 0xff
 8013346:	d105      	bne.n	8013354 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xc0>
 8013348:	f1bc 0f00 	cmp.w	ip, #0
 801334c:	bf14      	ite	ne
 801334e:	2304      	movne	r3, #4
 8013350:	2301      	moveq	r3, #1
 8013352:	e7b3      	b.n	80132bc <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 8013354:	2304      	movs	r3, #4
 8013356:	e7b1      	b.n	80132bc <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 8013358:	0802f65c 	.word	0x0802f65c

0801335c <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb>:
 801335c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013360:	b08b      	sub	sp, #44	; 0x2c
 8013362:	461d      	mov	r5, r3
 8013364:	f89d 9058 	ldrb.w	r9, [sp, #88]	; 0x58
 8013368:	f89d 6060 	ldrb.w	r6, [sp, #96]	; 0x60
 801336c:	f8bd a05c 	ldrh.w	sl, [sp, #92]	; 0x5c
 8013370:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8013374:	bf14      	ite	ne
 8013376:	2308      	movne	r3, #8
 8013378:	2302      	moveq	r3, #2
 801337a:	2400      	movs	r4, #0
 801337c:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8013380:	4688      	mov	r8, r1
 8013382:	4693      	mov	fp, r2
 8013384:	9404      	str	r4, [sp, #16]
 8013386:	4607      	mov	r7, r0
 8013388:	f7ff ff08 	bl	801319c <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 801338c:	2e0b      	cmp	r6, #11
 801338e:	bf98      	it	ls
 8013390:	4b15      	ldrls	r3, [pc, #84]	; (80133e8 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb+0x8c>)
 8013392:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8013396:	bf98      	it	ls
 8013398:	5d9c      	ldrbls	r4, [r3, r6]
 801339a:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
 801339e:	f8ad 3018 	strh.w	r3, [sp, #24]
 80133a2:	fb05 b50a 	mla	r5, r5, sl, fp
 80133a6:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 80133aa:	f8ad 301a 	strh.w	r3, [sp, #26]
 80133ae:	10e4      	asrs	r4, r4, #3
 80133b0:	fb04 0405 	mla	r4, r4, r5, r0
 80133b4:	2300      	movs	r3, #0
 80133b6:	6878      	ldr	r0, [r7, #4]
 80133b8:	9405      	str	r4, [sp, #20]
 80133ba:	f8ad 301c 	strh.w	r3, [sp, #28]
 80133be:	f8ad a01e 	strh.w	sl, [sp, #30]
 80133c2:	f8cd 8010 	str.w	r8, [sp, #16]
 80133c6:	f88d 9020 	strb.w	r9, [sp, #32]
 80133ca:	f88d 2023 	strb.w	r2, [sp, #35]	; 0x23
 80133ce:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 80133d2:	f88d 6021 	strb.w	r6, [sp, #33]	; 0x21
 80133d6:	f88d 6022 	strb.w	r6, [sp, #34]	; 0x22
 80133da:	6803      	ldr	r3, [r0, #0]
 80133dc:	a901      	add	r1, sp, #4
 80133de:	685b      	ldr	r3, [r3, #4]
 80133e0:	4798      	blx	r3
 80133e2:	b00b      	add	sp, #44	; 0x2c
 80133e4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80133e8:	0802f65c 	.word	0x0802f65c

080133ec <_ZNK8touchgfx3HAL13getDstAddressEttPt>:
 80133ec:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80133f0:	461e      	mov	r6, r3
 80133f2:	4b0a      	ldr	r3, [pc, #40]	; (801341c <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x30>)
 80133f4:	460f      	mov	r7, r1
 80133f6:	881d      	ldrh	r5, [r3, #0]
 80133f8:	4690      	mov	r8, r2
 80133fa:	f7f7 fd87 	bl	800af0c <_ZN8touchgfx3HAL3lcdEv>
 80133fe:	6803      	ldr	r3, [r0, #0]
 8013400:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8013402:	4798      	blx	r3
 8013404:	280b      	cmp	r0, #11
 8013406:	bf9a      	itte	ls
 8013408:	4b05      	ldrls	r3, [pc, #20]	; (8013420 <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x34>)
 801340a:	5c1c      	ldrbls	r4, [r3, r0]
 801340c:	2400      	movhi	r4, #0
 801340e:	fb08 7005 	mla	r0, r8, r5, r7
 8013412:	10e4      	asrs	r4, r4, #3
 8013414:	fb04 6000 	mla	r0, r4, r0, r6
 8013418:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801341c:	20006c2e 	.word	0x20006c2e
 8013420:	0802f65c 	.word	0x0802f65c

08013424 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb>:
 8013424:	b5f0      	push	{r4, r5, r6, r7, lr}
 8013426:	b08b      	sub	sp, #44	; 0x2c
 8013428:	461f      	mov	r7, r3
 801342a:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 801342e:	e9cd 3101 	strd	r3, r1, [sp, #4]
 8013432:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 8013436:	f8ad 3018 	strh.w	r3, [sp, #24]
 801343a:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 801343e:	f8ad 301a 	strh.w	r3, [sp, #26]
 8013442:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8013446:	f8ad 301c 	strh.w	r3, [sp, #28]
 801344a:	2500      	movs	r5, #0
 801344c:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 8013450:	f88d 3020 	strb.w	r3, [sp, #32]
 8013454:	4604      	mov	r4, r0
 8013456:	4616      	mov	r6, r2
 8013458:	9504      	str	r5, [sp, #16]
 801345a:	f7ff fe9f 	bl	801319c <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 801345e:	463a      	mov	r2, r7
 8013460:	4631      	mov	r1, r6
 8013462:	4603      	mov	r3, r0
 8013464:	4620      	mov	r0, r4
 8013466:	f7ff ffc1 	bl	80133ec <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 801346a:	4b0e      	ldr	r3, [pc, #56]	; (80134a4 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0x80>)
 801346c:	9005      	str	r0, [sp, #20]
 801346e:	881b      	ldrh	r3, [r3, #0]
 8013470:	f8ad 301e 	strh.w	r3, [sp, #30]
 8013474:	f7f7 fd4a 	bl	800af0c <_ZN8touchgfx3HAL3lcdEv>
 8013478:	6803      	ldr	r3, [r0, #0]
 801347a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801347c:	4798      	blx	r3
 801347e:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8013480:	f88d 0022 	strb.w	r0, [sp, #34]	; 0x22
 8013484:	f88d 0021 	strb.w	r0, [sp, #33]	; 0x21
 8013488:	9304      	str	r3, [sp, #16]
 801348a:	6860      	ldr	r0, [r4, #4]
 801348c:	f89d 3058 	ldrb.w	r3, [sp, #88]	; 0x58
 8013490:	f88d 3023 	strb.w	r3, [sp, #35]	; 0x23
 8013494:	f88d 5024 	strb.w	r5, [sp, #36]	; 0x24
 8013498:	6803      	ldr	r3, [r0, #0]
 801349a:	a901      	add	r1, sp, #4
 801349c:	685b      	ldr	r3, [r3, #4]
 801349e:	4798      	blx	r3
 80134a0:	b00b      	add	sp, #44	; 0x2c
 80134a2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80134a4:	20006c2e 	.word	0x20006c2e

080134a8 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE>:
 80134a8:	b5f0      	push	{r4, r5, r6, r7, lr}
 80134aa:	b08d      	sub	sp, #52	; 0x34
 80134ac:	466b      	mov	r3, sp
 80134ae:	e883 0006 	stmia.w	r3, {r1, r2}
 80134b2:	2300      	movs	r3, #0
 80134b4:	9306      	str	r3, [sp, #24]
 80134b6:	6803      	ldr	r3, [r0, #0]
 80134b8:	f8bd 6000 	ldrh.w	r6, [sp]
 80134bc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80134be:	f8bd 7002 	ldrh.w	r7, [sp, #2]
 80134c2:	2501      	movs	r5, #1
 80134c4:	9503      	str	r5, [sp, #12]
 80134c6:	4604      	mov	r4, r0
 80134c8:	4798      	blx	r3
 80134ca:	463a      	mov	r2, r7
 80134cc:	4631      	mov	r1, r6
 80134ce:	4603      	mov	r3, r0
 80134d0:	4620      	mov	r0, r4
 80134d2:	f7ff ff8b 	bl	80133ec <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 80134d6:	6c63      	ldr	r3, [r4, #68]	; 0x44
 80134d8:	9307      	str	r3, [sp, #28]
 80134da:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 80134de:	f8ad 3020 	strh.w	r3, [sp, #32]
 80134e2:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 80134e6:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 80134ea:	4b0f      	ldr	r3, [pc, #60]	; (8013528 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x80>)
 80134ec:	9004      	str	r0, [sp, #16]
 80134ee:	881b      	ldrh	r3, [r3, #0]
 80134f0:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 80134f4:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 80134f8:	f7f7 fd08 	bl	800af0c <_ZN8touchgfx3HAL3lcdEv>
 80134fc:	6803      	ldr	r3, [r0, #0]
 80134fe:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8013500:	4798      	blx	r3
 8013502:	23ff      	movs	r3, #255	; 0xff
 8013504:	f88d 0029 	strb.w	r0, [sp, #41]	; 0x29
 8013508:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
 801350c:	6860      	ldr	r0, [r4, #4]
 801350e:	f88d 3028 	strb.w	r3, [sp, #40]	; 0x28
 8013512:	f88d 502b 	strb.w	r5, [sp, #43]	; 0x2b
 8013516:	f88d 502c 	strb.w	r5, [sp, #44]	; 0x2c
 801351a:	6803      	ldr	r3, [r0, #0]
 801351c:	a903      	add	r1, sp, #12
 801351e:	685b      	ldr	r3, [r3, #4]
 8013520:	4798      	blx	r3
 8013522:	6c60      	ldr	r0, [r4, #68]	; 0x44
 8013524:	b00d      	add	sp, #52	; 0x34
 8013526:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8013528:	20006c2e 	.word	0x20006c2e

0801352c <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm>:
 801352c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8013530:	b08c      	sub	sp, #48	; 0x30
 8013532:	461e      	mov	r6, r3
 8013534:	466d      	mov	r5, sp
 8013536:	2300      	movs	r3, #0
 8013538:	e885 0006 	stmia.w	r5, {r1, r2}
 801353c:	9306      	str	r3, [sp, #24]
 801353e:	6803      	ldr	r3, [r0, #0]
 8013540:	f8bd 7000 	ldrh.w	r7, [sp]
 8013544:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8013546:	f8bd 8002 	ldrh.w	r8, [sp, #2]
 801354a:	2501      	movs	r5, #1
 801354c:	9503      	str	r5, [sp, #12]
 801354e:	4604      	mov	r4, r0
 8013550:	4798      	blx	r3
 8013552:	4642      	mov	r2, r8
 8013554:	4639      	mov	r1, r7
 8013556:	4603      	mov	r3, r0
 8013558:	4620      	mov	r0, r4
 801355a:	f7ff ff47 	bl	80133ec <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 801355e:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8013562:	f8ad 3020 	strh.w	r3, [sp, #32]
 8013566:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 801356a:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 801356e:	4b11      	ldr	r3, [pc, #68]	; (80135b4 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm+0x88>)
 8013570:	9004      	str	r0, [sp, #16]
 8013572:	881b      	ldrh	r3, [r3, #0]
 8013574:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8013578:	9b12      	ldr	r3, [sp, #72]	; 0x48
 801357a:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 801357e:	9607      	str	r6, [sp, #28]
 8013580:	f7f7 fcc4 	bl	800af0c <_ZN8touchgfx3HAL3lcdEv>
 8013584:	6803      	ldr	r3, [r0, #0]
 8013586:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8013588:	4798      	blx	r3
 801358a:	23ff      	movs	r3, #255	; 0xff
 801358c:	f88d 0029 	strb.w	r0, [sp, #41]	; 0x29
 8013590:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
 8013594:	6860      	ldr	r0, [r4, #4]
 8013596:	f88d 3028 	strb.w	r3, [sp, #40]	; 0x28
 801359a:	f88d 502b 	strb.w	r5, [sp, #43]	; 0x2b
 801359e:	f88d 502c 	strb.w	r5, [sp, #44]	; 0x2c
 80135a2:	6803      	ldr	r3, [r0, #0]
 80135a4:	a903      	add	r1, sp, #12
 80135a6:	685b      	ldr	r3, [r3, #4]
 80135a8:	4798      	blx	r3
 80135aa:	4630      	mov	r0, r6
 80135ac:	b00c      	add	sp, #48	; 0x30
 80135ae:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80135b2:	bf00      	nop
 80135b4:	20006c2e 	.word	0x20006c2e

080135b8 <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE>:
 80135b8:	b5f0      	push	{r4, r5, r6, r7, lr}
 80135ba:	b085      	sub	sp, #20
 80135bc:	ac02      	add	r4, sp, #8
 80135be:	e884 0006 	stmia.w	r4, {r1, r2}
 80135c2:	4605      	mov	r5, r0
 80135c4:	f8bd 6008 	ldrh.w	r6, [sp, #8]
 80135c8:	f8bd 700a 	ldrh.w	r7, [sp, #10]
 80135cc:	f7ff fde6 	bl	801319c <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 80135d0:	463a      	mov	r2, r7
 80135d2:	4603      	mov	r3, r0
 80135d4:	4631      	mov	r1, r6
 80135d6:	4628      	mov	r0, r5
 80135d8:	f7ff ff08 	bl	80133ec <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 80135dc:	4a05      	ldr	r2, [pc, #20]	; (80135f4 <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE+0x3c>)
 80135de:	682b      	ldr	r3, [r5, #0]
 80135e0:	8812      	ldrh	r2, [r2, #0]
 80135e2:	9200      	str	r2, [sp, #0]
 80135e4:	6ede      	ldr	r6, [r3, #108]	; 0x6c
 80135e6:	e894 0006 	ldmia.w	r4, {r1, r2}
 80135ea:	4603      	mov	r3, r0
 80135ec:	4628      	mov	r0, r5
 80135ee:	47b0      	blx	r6
 80135f0:	b005      	add	sp, #20
 80135f2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80135f4:	20006c2e 	.word	0x20006c2e

080135f8 <_ZN8touchgfx3HAL16swapFrameBuffersEv>:
 80135f8:	b570      	push	{r4, r5, r6, lr}
 80135fa:	f890 306e 	ldrb.w	r3, [r0, #110]	; 0x6e
 80135fe:	4604      	mov	r4, r0
 8013600:	b19b      	cbz	r3, 801362a <_ZN8touchgfx3HAL16swapFrameBuffersEv+0x32>
 8013602:	2002      	movs	r0, #2
 8013604:	f7fc f8f8 	bl	800f7f8 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>
 8013608:	2300      	movs	r3, #0
 801360a:	f884 306e 	strb.w	r3, [r4, #110]	; 0x6e
 801360e:	f884 306d 	strb.w	r3, [r4, #109]	; 0x6d
 8013612:	6823      	ldr	r3, [r4, #0]
 8013614:	4620      	mov	r0, r4
 8013616:	f8d3 50b8 	ldr.w	r5, [r3, #184]	; 0xb8
 801361a:	f7ff fdbf 	bl	801319c <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 801361e:	462b      	mov	r3, r5
 8013620:	4601      	mov	r1, r0
 8013622:	4620      	mov	r0, r4
 8013624:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8013628:	4718      	bx	r3
 801362a:	bd70      	pop	{r4, r5, r6, pc}

0801362c <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>:
 801362c:	b538      	push	{r3, r4, r5, lr}
 801362e:	f890 307b 	ldrb.w	r3, [r0, #123]	; 0x7b
 8013632:	428b      	cmp	r3, r1
 8013634:	4604      	mov	r4, r0
 8013636:	460d      	mov	r5, r1
 8013638:	d006      	beq.n	8013648 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1c>
 801363a:	6803      	ldr	r3, [r0, #0]
 801363c:	b929      	cbnz	r1, 801364a <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1e>
 801363e:	f8d3 30c8 	ldr.w	r3, [r3, #200]	; 0xc8
 8013642:	4798      	blx	r3
 8013644:	f884 507b 	strb.w	r5, [r4, #123]	; 0x7b
 8013648:	bd38      	pop	{r3, r4, r5, pc}
 801364a:	f8d3 30cc 	ldr.w	r3, [r3, #204]	; 0xcc
 801364e:	e7f8      	b.n	8013642 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x16>

08013650 <_ZN8touchgfx3HAL15lockFrameBufferEv>:
 8013650:	b510      	push	{r4, lr}
 8013652:	4b0d      	ldr	r3, [pc, #52]	; (8013688 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x38>)
 8013654:	781b      	ldrb	r3, [r3, #0]
 8013656:	4604      	mov	r4, r0
 8013658:	b95b      	cbnz	r3, 8013672 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 801365a:	f890 3048 	ldrb.w	r3, [r0, #72]	; 0x48
 801365e:	2b02      	cmp	r3, #2
 8013660:	d007      	beq.n	8013672 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 8013662:	6840      	ldr	r0, [r0, #4]
 8013664:	f000 f928 	bl	80138b8 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>
 8013668:	b118      	cbz	r0, 8013672 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 801366a:	6862      	ldr	r2, [r4, #4]
 801366c:	7a53      	ldrb	r3, [r2, #9]
 801366e:	2b00      	cmp	r3, #0
 8013670:	d0fc      	beq.n	801366c <_ZN8touchgfx3HAL15lockFrameBufferEv+0x1c>
 8013672:	f7fc fb9d 	bl	800fdb0 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 8013676:	4620      	mov	r0, r4
 8013678:	2100      	movs	r1, #0
 801367a:	f7ff ffd7 	bl	801362c <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 801367e:	4620      	mov	r0, r4
 8013680:	f7ff fd8c 	bl	801319c <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8013684:	bd10      	pop	{r4, pc}
 8013686:	bf00      	nop
 8013688:	20006c32 	.word	0x20006c32

0801368c <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE>:
 801368c:	b570      	push	{r4, r5, r6, lr}
 801368e:	4604      	mov	r4, r0
 8013690:	6803      	ldr	r3, [r0, #0]
 8013692:	b919      	cbnz	r1, 801369c <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE+0x10>
 8013694:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8013696:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801369a:	4718      	bx	r3
 801369c:	2200      	movs	r2, #0
 801369e:	f890 607b 	ldrb.w	r6, [r0, #123]	; 0x7b
 80136a2:	f880 207b 	strb.w	r2, [r0, #123]	; 0x7b
 80136a6:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80136a8:	4798      	blx	r3
 80136aa:	6863      	ldr	r3, [r4, #4]
 80136ac:	2101      	movs	r1, #1
 80136ae:	4605      	mov	r5, r0
 80136b0:	7299      	strb	r1, [r3, #10]
 80136b2:	4620      	mov	r0, r4
 80136b4:	f884 607b 	strb.w	r6, [r4, #123]	; 0x7b
 80136b8:	f7ff ffb8 	bl	801362c <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 80136bc:	4628      	mov	r0, r5
 80136be:	bd70      	pop	{r4, r5, r6, pc}

080136c0 <_ZN8touchgfx13DMA_Interface5flushEv>:
 80136c0:	6803      	ldr	r3, [r0, #0]
 80136c2:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80136c4:	4718      	bx	r3

080136c6 <_ZN8touchgfx17LockFreeDMA_Queue7isEmptyEv>:
 80136c6:	e9d0 2003 	ldrd	r2, r0, [r0, #12]
 80136ca:	1a13      	subs	r3, r2, r0
 80136cc:	4258      	negs	r0, r3
 80136ce:	4158      	adcs	r0, r3
 80136d0:	4770      	bx	lr

080136d2 <_ZN8touchgfx17LockFreeDMA_Queue6isFullEv>:
 80136d2:	e9d0 2303 	ldrd	r2, r3, [r0, #12]
 80136d6:	1a9b      	subs	r3, r3, r2
 80136d8:	2b00      	cmp	r3, #0
 80136da:	bfdc      	itt	le
 80136dc:	6882      	ldrle	r2, [r0, #8]
 80136de:	189b      	addle	r3, r3, r2
 80136e0:	2b01      	cmp	r3, #1
 80136e2:	bfcc      	ite	gt
 80136e4:	2000      	movgt	r0, #0
 80136e6:	2001      	movle	r0, #1
 80136e8:	4770      	bx	lr

080136ea <_ZN8touchgfx17LockFreeDMA_Queue5firstEv>:
 80136ea:	6902      	ldr	r2, [r0, #16]
 80136ec:	6843      	ldr	r3, [r0, #4]
 80136ee:	2024      	movs	r0, #36	; 0x24
 80136f0:	fb00 3002 	mla	r0, r0, r2, r3
 80136f4:	4770      	bx	lr

080136f6 <_ZN8touchgfx13DMA_Interface13seedExecutionEv>:
 80136f6:	6803      	ldr	r3, [r0, #0]
 80136f8:	691b      	ldr	r3, [r3, #16]
 80136fa:	4718      	bx	r3

080136fc <_ZN8touchgfx13DMA_Interface7executeEv>:
 80136fc:	b570      	push	{r4, r5, r6, lr}
 80136fe:	2301      	movs	r3, #1
 8013700:	7203      	strb	r3, [r0, #8]
 8013702:	4604      	mov	r4, r0
 8013704:	6840      	ldr	r0, [r0, #4]
 8013706:	6803      	ldr	r3, [r0, #0]
 8013708:	699b      	ldr	r3, [r3, #24]
 801370a:	4798      	blx	r3
 801370c:	6803      	ldr	r3, [r0, #0]
 801370e:	2b40      	cmp	r3, #64	; 0x40
 8013710:	4605      	mov	r5, r0
 8013712:	d00c      	beq.n	801372e <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 8013714:	d810      	bhi.n	8013738 <_ZN8touchgfx13DMA_Interface7executeEv+0x3c>
 8013716:	2b04      	cmp	r3, #4
 8013718:	d01d      	beq.n	8013756 <_ZN8touchgfx13DMA_Interface7executeEv+0x5a>
 801371a:	d804      	bhi.n	8013726 <_ZN8touchgfx13DMA_Interface7executeEv+0x2a>
 801371c:	2b01      	cmp	r3, #1
 801371e:	d006      	beq.n	801372e <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 8013720:	2b02      	cmp	r3, #2
 8013722:	d02c      	beq.n	801377e <_ZN8touchgfx13DMA_Interface7executeEv+0x82>
 8013724:	bd70      	pop	{r4, r5, r6, pc}
 8013726:	2b08      	cmp	r3, #8
 8013728:	d01d      	beq.n	8013766 <_ZN8touchgfx13DMA_Interface7executeEv+0x6a>
 801372a:	2b20      	cmp	r3, #32
 801372c:	d1fa      	bne.n	8013724 <_ZN8touchgfx13DMA_Interface7executeEv+0x28>
 801372e:	6823      	ldr	r3, [r4, #0]
 8013730:	4620      	mov	r0, r4
 8013732:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8013734:	4798      	blx	r3
 8013736:	e013      	b.n	8013760 <_ZN8touchgfx13DMA_Interface7executeEv+0x64>
 8013738:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 801373c:	d0f7      	beq.n	801372e <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 801373e:	d804      	bhi.n	801374a <_ZN8touchgfx13DMA_Interface7executeEv+0x4e>
 8013740:	2b80      	cmp	r3, #128	; 0x80
 8013742:	d0f4      	beq.n	801372e <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 8013744:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8013748:	e7f0      	b.n	801372c <_ZN8touchgfx13DMA_Interface7executeEv+0x30>
 801374a:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 801374e:	d0ee      	beq.n	801372e <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 8013750:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 8013754:	e7e5      	b.n	8013722 <_ZN8touchgfx13DMA_Interface7executeEv+0x26>
 8013756:	6823      	ldr	r3, [r4, #0]
 8013758:	7f01      	ldrb	r1, [r0, #28]
 801375a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801375c:	4620      	mov	r0, r4
 801375e:	4798      	blx	r3
 8013760:	6823      	ldr	r3, [r4, #0]
 8013762:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8013764:	e006      	b.n	8013774 <_ZN8touchgfx13DMA_Interface7executeEv+0x78>
 8013766:	6823      	ldr	r3, [r4, #0]
 8013768:	7f01      	ldrb	r1, [r0, #28]
 801376a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801376c:	4620      	mov	r0, r4
 801376e:	4798      	blx	r3
 8013770:	6823      	ldr	r3, [r4, #0]
 8013772:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8013774:	4629      	mov	r1, r5
 8013776:	4620      	mov	r0, r4
 8013778:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801377c:	4718      	bx	r3
 801377e:	6823      	ldr	r3, [r4, #0]
 8013780:	4620      	mov	r0, r4
 8013782:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8013784:	4798      	blx	r3
 8013786:	e7f3      	b.n	8013770 <_ZN8touchgfx13DMA_Interface7executeEv+0x74>

08013788 <_ZN8touchgfx13DMA_Interface11enableAlphaEh>:
 8013788:	4770      	bx	lr

0801378a <_ZN8touchgfx13DMA_Interface12disableAlphaEv>:
 801378a:	4770      	bx	lr

0801378c <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE>:
 801378c:	e9d0 3203 	ldrd	r3, r2, [r0, #12]
 8013790:	1ad2      	subs	r2, r2, r3
 8013792:	2a00      	cmp	r2, #0
 8013794:	b510      	push	{r4, lr}
 8013796:	bfdc      	itt	le
 8013798:	6884      	ldrle	r4, [r0, #8]
 801379a:	1912      	addle	r2, r2, r4
 801379c:	2a01      	cmp	r2, #1
 801379e:	dd16      	ble.n	80137ce <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x42>
 80137a0:	6842      	ldr	r2, [r0, #4]
 80137a2:	2424      	movs	r4, #36	; 0x24
 80137a4:	fb04 2303 	mla	r3, r4, r3, r2
 80137a8:	f101 0220 	add.w	r2, r1, #32
 80137ac:	f851 4b04 	ldr.w	r4, [r1], #4
 80137b0:	f843 4b04 	str.w	r4, [r3], #4
 80137b4:	4291      	cmp	r1, r2
 80137b6:	d1f9      	bne.n	80137ac <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x20>
 80137b8:	780a      	ldrb	r2, [r1, #0]
 80137ba:	701a      	strb	r2, [r3, #0]
 80137bc:	68c3      	ldr	r3, [r0, #12]
 80137be:	6882      	ldr	r2, [r0, #8]
 80137c0:	f3bf 8f5b 	dmb	ish
 80137c4:	3301      	adds	r3, #1
 80137c6:	429a      	cmp	r2, r3
 80137c8:	bfd8      	it	le
 80137ca:	1a9b      	suble	r3, r3, r2
 80137cc:	60c3      	str	r3, [r0, #12]
 80137ce:	bd10      	pop	{r4, pc}

080137d0 <_ZN8touchgfx17LockFreeDMA_Queue3popEv>:
 80137d0:	6903      	ldr	r3, [r0, #16]
 80137d2:	6882      	ldr	r2, [r0, #8]
 80137d4:	f3bf 8f5b 	dmb	ish
 80137d8:	3301      	adds	r3, #1
 80137da:	429a      	cmp	r2, r3
 80137dc:	bfd8      	it	le
 80137de:	1a9b      	suble	r3, r3, r2
 80137e0:	6103      	str	r3, [r0, #16]
 80137e2:	4770      	bx	lr

080137e4 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE>:
 80137e4:	b570      	push	{r4, r5, r6, lr}
 80137e6:	4604      	mov	r4, r0
 80137e8:	460e      	mov	r6, r1
 80137ea:	6860      	ldr	r0, [r4, #4]
 80137ec:	6803      	ldr	r3, [r0, #0]
 80137ee:	685b      	ldr	r3, [r3, #4]
 80137f0:	4798      	blx	r3
 80137f2:	2800      	cmp	r0, #0
 80137f4:	d1f9      	bne.n	80137ea <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x6>
 80137f6:	4d0d      	ldr	r5, [pc, #52]	; (801382c <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x48>)
 80137f8:	6828      	ldr	r0, [r5, #0]
 80137fa:	6803      	ldr	r3, [r0, #0]
 80137fc:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 80137fe:	4798      	blx	r3
 8013800:	f7fc faf8 	bl	800fdf4 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>
 8013804:	6828      	ldr	r0, [r5, #0]
 8013806:	2101      	movs	r1, #1
 8013808:	f7ff ff10 	bl	801362c <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 801380c:	6860      	ldr	r0, [r4, #4]
 801380e:	6803      	ldr	r3, [r0, #0]
 8013810:	4631      	mov	r1, r6
 8013812:	689b      	ldr	r3, [r3, #8]
 8013814:	4798      	blx	r3
 8013816:	6823      	ldr	r3, [r4, #0]
 8013818:	4620      	mov	r0, r4
 801381a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801381c:	4798      	blx	r3
 801381e:	6828      	ldr	r0, [r5, #0]
 8013820:	6803      	ldr	r3, [r0, #0]
 8013822:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8013826:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 8013828:	4718      	bx	r3
 801382a:	bf00      	nop
 801382c:	20006c34 	.word	0x20006c34

08013830 <_ZN8touchgfx13DMA_Interface27waitForFrameBufferSemaphoreEv>:
 8013830:	b508      	push	{r3, lr}
 8013832:	f7fc fabd 	bl	800fdb0 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 8013836:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 801383a:	f7fc bacf 	b.w	800fddc <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

0801383e <_ZN8touchgfx13DMA_Interface5startEv>:
 801383e:	b510      	push	{r4, lr}
 8013840:	4604      	mov	r4, r0
 8013842:	6840      	ldr	r0, [r0, #4]
 8013844:	6803      	ldr	r3, [r0, #0]
 8013846:	681b      	ldr	r3, [r3, #0]
 8013848:	4798      	blx	r3
 801384a:	b948      	cbnz	r0, 8013860 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 801384c:	7a63      	ldrb	r3, [r4, #9]
 801384e:	b13b      	cbz	r3, 8013860 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 8013850:	7a23      	ldrb	r3, [r4, #8]
 8013852:	b92b      	cbnz	r3, 8013860 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 8013854:	6823      	ldr	r3, [r4, #0]
 8013856:	4620      	mov	r0, r4
 8013858:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 801385a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801385e:	4718      	bx	r3
 8013860:	bd10      	pop	{r4, pc}

08013862 <_ZN8touchgfx13DMA_Interface16executeCompletedEv>:
 8013862:	b570      	push	{r4, r5, r6, lr}
 8013864:	4604      	mov	r4, r0
 8013866:	6840      	ldr	r0, [r0, #4]
 8013868:	6803      	ldr	r3, [r0, #0]
 801386a:	681b      	ldr	r3, [r3, #0]
 801386c:	4798      	blx	r3
 801386e:	4605      	mov	r5, r0
 8013870:	b930      	cbnz	r0, 8013880 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 8013872:	7a23      	ldrb	r3, [r4, #8]
 8013874:	b123      	cbz	r3, 8013880 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 8013876:	6860      	ldr	r0, [r4, #4]
 8013878:	6803      	ldr	r3, [r0, #0]
 801387a:	695b      	ldr	r3, [r3, #20]
 801387c:	4798      	blx	r3
 801387e:	7225      	strb	r5, [r4, #8]
 8013880:	6860      	ldr	r0, [r4, #4]
 8013882:	6803      	ldr	r3, [r0, #0]
 8013884:	681b      	ldr	r3, [r3, #0]
 8013886:	4798      	blx	r3
 8013888:	b928      	cbnz	r0, 8013896 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x34>
 801388a:	6823      	ldr	r3, [r4, #0]
 801388c:	4620      	mov	r0, r4
 801388e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8013890:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8013894:	4718      	bx	r3
 8013896:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801389a:	f7fc bab7 	b.w	800fe0c <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>
	...

080138a0 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>:
 80138a0:	b510      	push	{r4, lr}
 80138a2:	4c04      	ldr	r4, [pc, #16]	; (80138b4 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi+0x14>)
 80138a4:	6082      	str	r2, [r0, #8]
 80138a6:	2200      	movs	r2, #0
 80138a8:	e9c0 4100 	strd	r4, r1, [r0]
 80138ac:	e9c0 2203 	strd	r2, r2, [r0, #12]
 80138b0:	bd10      	pop	{r4, pc}
 80138b2:	bf00      	nop
 80138b4:	0802f798 	.word	0x0802f798

080138b8 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>:
 80138b8:	6840      	ldr	r0, [r0, #4]
 80138ba:	6803      	ldr	r3, [r0, #0]
 80138bc:	681b      	ldr	r3, [r3, #0]
 80138be:	4718      	bx	r3

080138c0 <_ZNK8touchgfx13PainterRGB56518getRenderingMethodEv>:
 80138c0:	b508      	push	{r3, lr}
 80138c2:	4b05      	ldr	r3, [pc, #20]	; (80138d8 <_ZNK8touchgfx13PainterRGB56518getRenderingMethodEv+0x18>)
 80138c4:	6818      	ldr	r0, [r3, #0]
 80138c6:	6803      	ldr	r3, [r0, #0]
 80138c8:	f8d3 30a0 	ldr.w	r3, [r3, #160]	; 0xa0
 80138cc:	4798      	blx	r3
 80138ce:	1e43      	subs	r3, r0, #1
 80138d0:	4258      	negs	r0, r3
 80138d2:	4158      	adcs	r0, r3
 80138d4:	bd08      	pop	{r3, pc}
 80138d6:	bf00      	nop
 80138d8:	20006c34 	.word	0x20006c34

080138dc <_ZNK8touchgfx13PainterRGB5655paintEPhssssh>:
 80138dc:	b430      	push	{r4, r5}
 80138de:	eb01 0442 	add.w	r4, r1, r2, lsl #1
 80138e2:	f9bd 500c 	ldrsh.w	r5, [sp, #12]
 80138e6:	8a02      	ldrh	r2, [r0, #16]
 80138e8:	9202      	str	r2, [sp, #8]
 80138ea:	f89d 3010 	ldrb.w	r3, [sp, #16]
 80138ee:	68c2      	ldr	r2, [r0, #12]
 80138f0:	4629      	mov	r1, r5
 80138f2:	4620      	mov	r0, r4
 80138f4:	bc30      	pop	{r4, r5}
 80138f6:	f7fd b973 	b.w	8010be0 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm>

080138fa <_ZNK8touchgfx13PainterRGB5658tearDownEv>:
 80138fa:	f7fd b969 	b.w	8010bd0 <_ZN8touchgfx5paint8tearDownEv>

080138fe <_ZN8touchgfx12CanvasWidget8setAlphaEh>:
 80138fe:	f880 1026 	strb.w	r1, [r0, #38]	; 0x26
 8013902:	4770      	bx	lr

08013904 <_ZNK8touchgfx12CanvasWidget8getAlphaEv>:
 8013904:	f890 0026 	ldrb.w	r0, [r0, #38]	; 0x26
 8013908:	4770      	bx	lr

0801390a <_ZNK8touchgfx12CanvasWidget12getSolidRectEv>:
 801390a:	2200      	movs	r2, #0
 801390c:	8002      	strh	r2, [r0, #0]
 801390e:	8042      	strh	r2, [r0, #2]
 8013910:	8082      	strh	r2, [r0, #4]
 8013912:	80c2      	strh	r2, [r0, #6]
 8013914:	4770      	bx	lr

08013916 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>:
 8013916:	b507      	push	{r0, r1, r2, lr}
 8013918:	f44f 4200 	mov.w	r2, #32768	; 0x8000
 801391c:	ab01      	add	r3, sp, #4
 801391e:	6809      	ldr	r1, [r1, #0]
 8013920:	6800      	ldr	r0, [r0, #0]
 8013922:	f006 f863 	bl	80199ec <_ZN8touchgfx6muldivElllRl>
 8013926:	b003      	add	sp, #12
 8013928:	f85d fb04 	ldr.w	pc, [sp], #4

0801392c <_ZN8touchgfx7CWRUtil4sineEi>:
 801392c:	f44f 73b4 	mov.w	r3, #360	; 0x168
 8013930:	fb90 f2f3 	sdiv	r2, r0, r3
 8013934:	fb02 0013 	mls	r0, r2, r3, r0
 8013938:	2800      	cmp	r0, #0
 801393a:	bfb8      	it	lt
 801393c:	18c0      	addlt	r0, r0, r3
 801393e:	285a      	cmp	r0, #90	; 0x5a
 8013940:	4b09      	ldr	r3, [pc, #36]	; (8013968 <_ZN8touchgfx7CWRUtil4sineEi+0x3c>)
 8013942:	dc02      	bgt.n	801394a <_ZN8touchgfx7CWRUtil4sineEi+0x1e>
 8013944:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 8013948:	4770      	bx	lr
 801394a:	28b4      	cmp	r0, #180	; 0xb4
 801394c:	dc02      	bgt.n	8013954 <_ZN8touchgfx7CWRUtil4sineEi+0x28>
 801394e:	f1c0 00b4 	rsb	r0, r0, #180	; 0xb4
 8013952:	e7f7      	b.n	8013944 <_ZN8touchgfx7CWRUtil4sineEi+0x18>
 8013954:	f5b0 7f87 	cmp.w	r0, #270	; 0x10e
 8013958:	bfd4      	ite	le
 801395a:	38b4      	suble	r0, #180	; 0xb4
 801395c:	f5c0 70b4 	rsbgt	r0, r0, #360	; 0x168
 8013960:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 8013964:	4240      	negs	r0, r0
 8013966:	4770      	bx	lr
 8013968:	0802f7ec 	.word	0x0802f7ec

0801396c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>:
 801396c:	f44f 5334 	mov.w	r3, #11520	; 0x2d00
 8013970:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8013972:	fb90 f2f3 	sdiv	r2, r0, r3
 8013976:	fb02 0013 	mls	r0, r2, r3, r0
 801397a:	2800      	cmp	r0, #0
 801397c:	bfb8      	it	lt
 801397e:	18c0      	addlt	r0, r0, r3
 8013980:	1144      	asrs	r4, r0, #5
 8013982:	f000 061f 	and.w	r6, r0, #31
 8013986:	4620      	mov	r0, r4
 8013988:	f7ff ffd0 	bl	801392c <_ZN8touchgfx7CWRUtil4sineEi>
 801398c:	4605      	mov	r5, r0
 801398e:	b90e      	cbnz	r6, 8013994 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E+0x28>
 8013990:	b002      	add	sp, #8
 8013992:	bd70      	pop	{r4, r5, r6, pc}
 8013994:	1c60      	adds	r0, r4, #1
 8013996:	f7ff ffc9 	bl	801392c <_ZN8touchgfx7CWRUtil4sineEi>
 801399a:	ab01      	add	r3, sp, #4
 801399c:	2220      	movs	r2, #32
 801399e:	4631      	mov	r1, r6
 80139a0:	1b40      	subs	r0, r0, r5
 80139a2:	f006 f823 	bl	80199ec <_ZN8touchgfx6muldivElllRl>
 80139a6:	4428      	add	r0, r5
 80139a8:	e7f2      	b.n	8013990 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E+0x24>

080139aa <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>:
 80139aa:	b508      	push	{r3, lr}
 80139ac:	f5c0 6034 	rsb	r0, r0, #2880	; 0xb40
 80139b0:	f7ff ffdc 	bl	801396c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 80139b4:	bd08      	pop	{r3, pc}
	...

080139b8 <_ZN8touchgfx6CircleC1Ev>:
 80139b8:	b510      	push	{r4, lr}
 80139ba:	4604      	mov	r4, r0
 80139bc:	f000 fd7e 	bl	80144bc <_ZN8touchgfx12CanvasWidgetC1Ev>
 80139c0:	4b08      	ldr	r3, [pc, #32]	; (80139e4 <_ZN8touchgfx6CircleC1Ev+0x2c>)
 80139c2:	6023      	str	r3, [r4, #0]
 80139c4:	f44f 5234 	mov.w	r2, #11520	; 0x2d00
 80139c8:	2300      	movs	r3, #0
 80139ca:	e9c4 230f 	strd	r2, r3, [r4, #60]	; 0x3c
 80139ce:	f24b 4205 	movw	r2, #46085	; 0xb405
 80139d2:	e9c4 330b 	strd	r3, r3, [r4, #44]	; 0x2c
 80139d6:	e9c4 330d 	strd	r3, r3, [r4, #52]	; 0x34
 80139da:	f8a4 2044 	strh.w	r2, [r4, #68]	; 0x44
 80139de:	60a3      	str	r3, [r4, #8]
 80139e0:	4620      	mov	r0, r4
 80139e2:	bd10      	pop	{r4, pc}
 80139e4:	0802f8ac 	.word	0x0802f8ac

080139e8 <_ZN8touchgfx6Circle15setCapPrecisionEi>:
 80139e8:	29b4      	cmp	r1, #180	; 0xb4
 80139ea:	bfa8      	it	ge
 80139ec:	21b4      	movge	r1, #180	; 0xb4
 80139ee:	2901      	cmp	r1, #1
 80139f0:	bfb8      	it	lt
 80139f2:	2101      	movlt	r1, #1
 80139f4:	f880 1045 	strb.w	r1, [r0, #69]	; 0x45
 80139f8:	4770      	bx	lr

080139fa <_ZNK8touchgfx6Circle15getCapPrecisionEv>:
 80139fa:	f890 0045 	ldrb.w	r0, [r0, #69]	; 0x45
 80139fe:	4770      	bx	lr

08013a00 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_>:
 8013a00:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013a04:	428a      	cmp	r2, r1
 8013a06:	4680      	mov	r8, r0
 8013a08:	4610      	mov	r0, r2
 8013a0a:	4699      	mov	r9, r3
 8013a0c:	bfa6      	itte	ge
 8013a0e:	460a      	movge	r2, r1
 8013a10:	4603      	movge	r3, r0
 8013a12:	460b      	movlt	r3, r1
 8013a14:	1a99      	subs	r1, r3, r2
 8013a16:	b085      	sub	sp, #20
 8013a18:	f5b1 5f34 	cmp.w	r1, #11520	; 0x2d00
 8013a1c:	f8d8 4040 	ldr.w	r4, [r8, #64]	; 0x40
 8013a20:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8013a22:	bfa4      	itt	ge
 8013a24:	f44f 5334 	movge.w	r3, #11520	; 0x2d00
 8013a28:	2200      	movge	r2, #0
 8013a2a:	e9dd 760e 	ldrd	r7, r6, [sp, #56]	; 0x38
 8013a2e:	9300      	str	r3, [sp, #0]
 8013a30:	f108 0a34 	add.w	sl, r8, #52	; 0x34
 8013a34:	f102 0b01 	add.w	fp, r2, #1
 8013a38:	2c00      	cmp	r4, #0
 8013a3a:	f040 80af 	bne.w	8013b9c <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x19c>
 8013a3e:	4610      	mov	r0, r2
 8013a40:	9201      	str	r2, [sp, #4]
 8013a42:	f7ff ff93 	bl	801396c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8013a46:	a903      	add	r1, sp, #12
 8013a48:	9003      	str	r0, [sp, #12]
 8013a4a:	4650      	mov	r0, sl
 8013a4c:	f7ff ff63 	bl	8013916 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8013a50:	f8d8 102c 	ldr.w	r1, [r8, #44]	; 0x2c
 8013a54:	9a01      	ldr	r2, [sp, #4]
 8013a56:	4408      	add	r0, r1
 8013a58:	f8d9 1000 	ldr.w	r1, [r9]
 8013a5c:	4281      	cmp	r1, r0
 8013a5e:	bfc8      	it	gt
 8013a60:	f8c9 0000 	strgt.w	r0, [r9]
 8013a64:	6839      	ldr	r1, [r7, #0]
 8013a66:	4288      	cmp	r0, r1
 8013a68:	bfc8      	it	gt
 8013a6a:	6038      	strgt	r0, [r7, #0]
 8013a6c:	4610      	mov	r0, r2
 8013a6e:	f7ff ff9c 	bl	80139aa <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8013a72:	a903      	add	r1, sp, #12
 8013a74:	9003      	str	r0, [sp, #12]
 8013a76:	4650      	mov	r0, sl
 8013a78:	f7ff ff4d 	bl	8013916 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8013a7c:	f8d8 2030 	ldr.w	r2, [r8, #48]	; 0x30
 8013a80:	1a10      	subs	r0, r2, r0
 8013a82:	6832      	ldr	r2, [r6, #0]
 8013a84:	4282      	cmp	r2, r0
 8013a86:	bfc8      	it	gt
 8013a88:	6030      	strgt	r0, [r6, #0]
 8013a8a:	682a      	ldr	r2, [r5, #0]
 8013a8c:	f44f 6134 	mov.w	r1, #2880	; 0xb40
 8013a90:	4290      	cmp	r0, r2
 8013a92:	fb9b f2f1 	sdiv	r2, fp, r1
 8013a96:	fb01 b212 	mls	r2, r1, r2, fp
 8013a9a:	eba1 0202 	sub.w	r2, r1, r2
 8013a9e:	bfc8      	it	gt
 8013aa0:	6028      	strgt	r0, [r5, #0]
 8013aa2:	fb92 f0f1 	sdiv	r0, r2, r1
 8013aa6:	fb01 2210 	mls	r2, r1, r0, r2
 8013aaa:	4493      	add	fp, r2
 8013aac:	9b00      	ldr	r3, [sp, #0]
 8013aae:	455b      	cmp	r3, fp
 8013ab0:	db2a      	blt.n	8013b08 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x108>
 8013ab2:	4658      	mov	r0, fp
 8013ab4:	f7ff ff5a 	bl	801396c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8013ab8:	a903      	add	r1, sp, #12
 8013aba:	9003      	str	r0, [sp, #12]
 8013abc:	4650      	mov	r0, sl
 8013abe:	f7ff ff2a 	bl	8013916 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8013ac2:	f8d8 202c 	ldr.w	r2, [r8, #44]	; 0x2c
 8013ac6:	4410      	add	r0, r2
 8013ac8:	f8d9 2000 	ldr.w	r2, [r9]
 8013acc:	4282      	cmp	r2, r0
 8013ace:	bfc8      	it	gt
 8013ad0:	f8c9 0000 	strgt.w	r0, [r9]
 8013ad4:	683a      	ldr	r2, [r7, #0]
 8013ad6:	4290      	cmp	r0, r2
 8013ad8:	bfc8      	it	gt
 8013ada:	6038      	strgt	r0, [r7, #0]
 8013adc:	4658      	mov	r0, fp
 8013ade:	f7ff ff64 	bl	80139aa <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8013ae2:	a903      	add	r1, sp, #12
 8013ae4:	9003      	str	r0, [sp, #12]
 8013ae6:	4650      	mov	r0, sl
 8013ae8:	f7ff ff15 	bl	8013916 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8013aec:	f8d8 2030 	ldr.w	r2, [r8, #48]	; 0x30
 8013af0:	1a10      	subs	r0, r2, r0
 8013af2:	6832      	ldr	r2, [r6, #0]
 8013af4:	4282      	cmp	r2, r0
 8013af6:	bfc8      	it	gt
 8013af8:	6030      	strgt	r0, [r6, #0]
 8013afa:	682a      	ldr	r2, [r5, #0]
 8013afc:	4290      	cmp	r0, r2
 8013afe:	bfc8      	it	gt
 8013b00:	6028      	strgt	r0, [r5, #0]
 8013b02:	f50b 6b34 	add.w	fp, fp, #2880	; 0xb40
 8013b06:	e7d1      	b.n	8013aac <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0xac>
 8013b08:	9b00      	ldr	r3, [sp, #0]
 8013b0a:	f5ab 6b34 	sub.w	fp, fp, #2880	; 0xb40
 8013b0e:	455b      	cmp	r3, fp
 8013b10:	dd27      	ble.n	8013b62 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x162>
 8013b12:	4618      	mov	r0, r3
 8013b14:	f7ff ff2a 	bl	801396c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8013b18:	a903      	add	r1, sp, #12
 8013b1a:	9003      	str	r0, [sp, #12]
 8013b1c:	4650      	mov	r0, sl
 8013b1e:	f7ff fefa 	bl	8013916 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8013b22:	f8d8 202c 	ldr.w	r2, [r8, #44]	; 0x2c
 8013b26:	4410      	add	r0, r2
 8013b28:	f8d9 2000 	ldr.w	r2, [r9]
 8013b2c:	4282      	cmp	r2, r0
 8013b2e:	bfc8      	it	gt
 8013b30:	f8c9 0000 	strgt.w	r0, [r9]
 8013b34:	683a      	ldr	r2, [r7, #0]
 8013b36:	4290      	cmp	r0, r2
 8013b38:	bfc8      	it	gt
 8013b3a:	6038      	strgt	r0, [r7, #0]
 8013b3c:	9800      	ldr	r0, [sp, #0]
 8013b3e:	f7ff ff34 	bl	80139aa <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8013b42:	a903      	add	r1, sp, #12
 8013b44:	9003      	str	r0, [sp, #12]
 8013b46:	4650      	mov	r0, sl
 8013b48:	f7ff fee5 	bl	8013916 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8013b4c:	f8d8 2030 	ldr.w	r2, [r8, #48]	; 0x30
 8013b50:	1a10      	subs	r0, r2, r0
 8013b52:	6832      	ldr	r2, [r6, #0]
 8013b54:	4282      	cmp	r2, r0
 8013b56:	bfc8      	it	gt
 8013b58:	6030      	strgt	r0, [r6, #0]
 8013b5a:	682a      	ldr	r2, [r5, #0]
 8013b5c:	4290      	cmp	r0, r2
 8013b5e:	bfc8      	it	gt
 8013b60:	6028      	strgt	r0, [r5, #0]
 8013b62:	f8d8 202c 	ldr.w	r2, [r8, #44]	; 0x2c
 8013b66:	f8d9 1000 	ldr.w	r1, [r9]
 8013b6a:	4291      	cmp	r1, r2
 8013b6c:	bfc8      	it	gt
 8013b6e:	f8c9 2000 	strgt.w	r2, [r9]
 8013b72:	683a      	ldr	r2, [r7, #0]
 8013b74:	f8d8 302c 	ldr.w	r3, [r8, #44]	; 0x2c
 8013b78:	429a      	cmp	r2, r3
 8013b7a:	bfb8      	it	lt
 8013b7c:	603b      	strlt	r3, [r7, #0]
 8013b7e:	6832      	ldr	r2, [r6, #0]
 8013b80:	f8d8 3030 	ldr.w	r3, [r8, #48]	; 0x30
 8013b84:	429a      	cmp	r2, r3
 8013b86:	bfc8      	it	gt
 8013b88:	6033      	strgt	r3, [r6, #0]
 8013b8a:	682a      	ldr	r2, [r5, #0]
 8013b8c:	f8d8 3030 	ldr.w	r3, [r8, #48]	; 0x30
 8013b90:	429a      	cmp	r2, r3
 8013b92:	da00      	bge.n	8013b96 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x196>
 8013b94:	602b      	str	r3, [r5, #0]
 8013b96:	b005      	add	sp, #20
 8013b98:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013b9c:	2002      	movs	r0, #2
 8013b9e:	3401      	adds	r4, #1
 8013ba0:	fb94 f4f0 	sdiv	r4, r4, r0
 8013ba4:	4610      	mov	r0, r2
 8013ba6:	9201      	str	r2, [sp, #4]
 8013ba8:	f7ff fee0 	bl	801396c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8013bac:	a903      	add	r1, sp, #12
 8013bae:	9003      	str	r0, [sp, #12]
 8013bb0:	4650      	mov	r0, sl
 8013bb2:	f7ff feb0 	bl	8013916 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8013bb6:	f8d8 102c 	ldr.w	r1, [r8, #44]	; 0x2c
 8013bba:	9a01      	ldr	r2, [sp, #4]
 8013bbc:	4408      	add	r0, r1
 8013bbe:	f8d9 1000 	ldr.w	r1, [r9]
 8013bc2:	1b03      	subs	r3, r0, r4
 8013bc4:	4299      	cmp	r1, r3
 8013bc6:	bfc8      	it	gt
 8013bc8:	f8c9 3000 	strgt.w	r3, [r9]
 8013bcc:	6839      	ldr	r1, [r7, #0]
 8013bce:	428b      	cmp	r3, r1
 8013bd0:	bfc8      	it	gt
 8013bd2:	603b      	strgt	r3, [r7, #0]
 8013bd4:	f8d9 1000 	ldr.w	r1, [r9]
 8013bd8:	4420      	add	r0, r4
 8013bda:	4281      	cmp	r1, r0
 8013bdc:	bfc8      	it	gt
 8013bde:	f8c9 0000 	strgt.w	r0, [r9]
 8013be2:	6839      	ldr	r1, [r7, #0]
 8013be4:	4288      	cmp	r0, r1
 8013be6:	bfc8      	it	gt
 8013be8:	6038      	strgt	r0, [r7, #0]
 8013bea:	4610      	mov	r0, r2
 8013bec:	f7ff fedd 	bl	80139aa <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8013bf0:	a903      	add	r1, sp, #12
 8013bf2:	9003      	str	r0, [sp, #12]
 8013bf4:	4650      	mov	r0, sl
 8013bf6:	f7ff fe8e 	bl	8013916 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8013bfa:	f8d8 2030 	ldr.w	r2, [r8, #48]	; 0x30
 8013bfe:	1a10      	subs	r0, r2, r0
 8013c00:	6832      	ldr	r2, [r6, #0]
 8013c02:	1b01      	subs	r1, r0, r4
 8013c04:	428a      	cmp	r2, r1
 8013c06:	bfc8      	it	gt
 8013c08:	6031      	strgt	r1, [r6, #0]
 8013c0a:	682a      	ldr	r2, [r5, #0]
 8013c0c:	4291      	cmp	r1, r2
 8013c0e:	bfc8      	it	gt
 8013c10:	6029      	strgt	r1, [r5, #0]
 8013c12:	6832      	ldr	r2, [r6, #0]
 8013c14:	4420      	add	r0, r4
 8013c16:	4282      	cmp	r2, r0
 8013c18:	bfc8      	it	gt
 8013c1a:	6030      	strgt	r0, [r6, #0]
 8013c1c:	682a      	ldr	r2, [r5, #0]
 8013c1e:	f44f 6134 	mov.w	r1, #2880	; 0xb40
 8013c22:	4290      	cmp	r0, r2
 8013c24:	fb9b f2f1 	sdiv	r2, fp, r1
 8013c28:	fb01 b212 	mls	r2, r1, r2, fp
 8013c2c:	eba1 0202 	sub.w	r2, r1, r2
 8013c30:	bfc8      	it	gt
 8013c32:	6028      	strgt	r0, [r5, #0]
 8013c34:	fb92 f0f1 	sdiv	r0, r2, r1
 8013c38:	fb01 2210 	mls	r2, r1, r0, r2
 8013c3c:	4493      	add	fp, r2
 8013c3e:	9b00      	ldr	r3, [sp, #0]
 8013c40:	455b      	cmp	r3, fp
 8013c42:	db40      	blt.n	8013cc6 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x2c6>
 8013c44:	4658      	mov	r0, fp
 8013c46:	f7ff fe91 	bl	801396c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8013c4a:	a903      	add	r1, sp, #12
 8013c4c:	9003      	str	r0, [sp, #12]
 8013c4e:	4650      	mov	r0, sl
 8013c50:	f7ff fe61 	bl	8013916 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8013c54:	f8d8 202c 	ldr.w	r2, [r8, #44]	; 0x2c
 8013c58:	4410      	add	r0, r2
 8013c5a:	f8d9 2000 	ldr.w	r2, [r9]
 8013c5e:	1b01      	subs	r1, r0, r4
 8013c60:	428a      	cmp	r2, r1
 8013c62:	bfc8      	it	gt
 8013c64:	f8c9 1000 	strgt.w	r1, [r9]
 8013c68:	683a      	ldr	r2, [r7, #0]
 8013c6a:	4291      	cmp	r1, r2
 8013c6c:	bfc8      	it	gt
 8013c6e:	6039      	strgt	r1, [r7, #0]
 8013c70:	f8d9 2000 	ldr.w	r2, [r9]
 8013c74:	4420      	add	r0, r4
 8013c76:	4282      	cmp	r2, r0
 8013c78:	bfc8      	it	gt
 8013c7a:	f8c9 0000 	strgt.w	r0, [r9]
 8013c7e:	683a      	ldr	r2, [r7, #0]
 8013c80:	4290      	cmp	r0, r2
 8013c82:	bfc8      	it	gt
 8013c84:	6038      	strgt	r0, [r7, #0]
 8013c86:	4658      	mov	r0, fp
 8013c88:	f7ff fe8f 	bl	80139aa <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8013c8c:	a903      	add	r1, sp, #12
 8013c8e:	9003      	str	r0, [sp, #12]
 8013c90:	4650      	mov	r0, sl
 8013c92:	f7ff fe40 	bl	8013916 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8013c96:	f8d8 2030 	ldr.w	r2, [r8, #48]	; 0x30
 8013c9a:	1a10      	subs	r0, r2, r0
 8013c9c:	6832      	ldr	r2, [r6, #0]
 8013c9e:	1b01      	subs	r1, r0, r4
 8013ca0:	428a      	cmp	r2, r1
 8013ca2:	bfc8      	it	gt
 8013ca4:	6031      	strgt	r1, [r6, #0]
 8013ca6:	682a      	ldr	r2, [r5, #0]
 8013ca8:	4291      	cmp	r1, r2
 8013caa:	bfc8      	it	gt
 8013cac:	6029      	strgt	r1, [r5, #0]
 8013cae:	6832      	ldr	r2, [r6, #0]
 8013cb0:	4420      	add	r0, r4
 8013cb2:	4282      	cmp	r2, r0
 8013cb4:	bfc8      	it	gt
 8013cb6:	6030      	strgt	r0, [r6, #0]
 8013cb8:	682a      	ldr	r2, [r5, #0]
 8013cba:	4290      	cmp	r0, r2
 8013cbc:	bfc8      	it	gt
 8013cbe:	6028      	strgt	r0, [r5, #0]
 8013cc0:	f50b 6b34 	add.w	fp, fp, #2880	; 0xb40
 8013cc4:	e7bb      	b.n	8013c3e <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x23e>
 8013cc6:	9b00      	ldr	r3, [sp, #0]
 8013cc8:	f5ab 6b34 	sub.w	fp, fp, #2880	; 0xb40
 8013ccc:	455b      	cmp	r3, fp
 8013cce:	f77f af62 	ble.w	8013b96 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x196>
 8013cd2:	4618      	mov	r0, r3
 8013cd4:	f7ff fe4a 	bl	801396c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8013cd8:	a903      	add	r1, sp, #12
 8013cda:	9003      	str	r0, [sp, #12]
 8013cdc:	4650      	mov	r0, sl
 8013cde:	f7ff fe1a 	bl	8013916 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8013ce2:	f8d8 202c 	ldr.w	r2, [r8, #44]	; 0x2c
 8013ce6:	4410      	add	r0, r2
 8013ce8:	f8d9 2000 	ldr.w	r2, [r9]
 8013cec:	1b01      	subs	r1, r0, r4
 8013cee:	428a      	cmp	r2, r1
 8013cf0:	bfc8      	it	gt
 8013cf2:	f8c9 1000 	strgt.w	r1, [r9]
 8013cf6:	683a      	ldr	r2, [r7, #0]
 8013cf8:	4291      	cmp	r1, r2
 8013cfa:	bfc8      	it	gt
 8013cfc:	6039      	strgt	r1, [r7, #0]
 8013cfe:	f8d9 2000 	ldr.w	r2, [r9]
 8013d02:	4420      	add	r0, r4
 8013d04:	4282      	cmp	r2, r0
 8013d06:	bfc8      	it	gt
 8013d08:	f8c9 0000 	strgt.w	r0, [r9]
 8013d0c:	683b      	ldr	r3, [r7, #0]
 8013d0e:	4298      	cmp	r0, r3
 8013d10:	bfc8      	it	gt
 8013d12:	6038      	strgt	r0, [r7, #0]
 8013d14:	9800      	ldr	r0, [sp, #0]
 8013d16:	f7ff fe48 	bl	80139aa <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8013d1a:	a903      	add	r1, sp, #12
 8013d1c:	9003      	str	r0, [sp, #12]
 8013d1e:	4650      	mov	r0, sl
 8013d20:	f7ff fdf9 	bl	8013916 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8013d24:	f8d8 3030 	ldr.w	r3, [r8, #48]	; 0x30
 8013d28:	6832      	ldr	r2, [r6, #0]
 8013d2a:	1a18      	subs	r0, r3, r0
 8013d2c:	1b03      	subs	r3, r0, r4
 8013d2e:	429a      	cmp	r2, r3
 8013d30:	bfc8      	it	gt
 8013d32:	6033      	strgt	r3, [r6, #0]
 8013d34:	682a      	ldr	r2, [r5, #0]
 8013d36:	4293      	cmp	r3, r2
 8013d38:	bfc8      	it	gt
 8013d3a:	602b      	strgt	r3, [r5, #0]
 8013d3c:	6833      	ldr	r3, [r6, #0]
 8013d3e:	4404      	add	r4, r0
 8013d40:	42a3      	cmp	r3, r4
 8013d42:	bfc8      	it	gt
 8013d44:	6034      	strgt	r4, [r6, #0]
 8013d46:	682b      	ldr	r3, [r5, #0]
 8013d48:	429c      	cmp	r4, r3
 8013d4a:	bfc8      	it	gt
 8013d4c:	602c      	strgt	r4, [r5, #0]
 8013d4e:	e722      	b.n	8013b96 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x196>

08013d50 <_ZNK8touchgfx6Circle14getMinimalRectENS_7CWRUtil2Q5ES2_>:
 8013d50:	b530      	push	{r4, r5, lr}
 8013d52:	4604      	mov	r4, r0
 8013d54:	4608      	mov	r0, r1
 8013d56:	4611      	mov	r1, r2
 8013d58:	461a      	mov	r2, r3
 8013d5a:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 8013d5e:	b089      	sub	sp, #36	; 0x24
 8013d60:	015b      	lsls	r3, r3, #5
 8013d62:	9304      	str	r3, [sp, #16]
 8013d64:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 8013d68:	2500      	movs	r5, #0
 8013d6a:	015b      	lsls	r3, r3, #5
 8013d6c:	e9cd 3506 	strd	r3, r5, [sp, #24]
 8013d70:	ab07      	add	r3, sp, #28
 8013d72:	9302      	str	r3, [sp, #8]
 8013d74:	ab06      	add	r3, sp, #24
 8013d76:	9301      	str	r3, [sp, #4]
 8013d78:	ab05      	add	r3, sp, #20
 8013d7a:	9300      	str	r3, [sp, #0]
 8013d7c:	ab04      	add	r3, sp, #16
 8013d7e:	9505      	str	r5, [sp, #20]
 8013d80:	f7ff fe3e 	bl	8013a00 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_>
 8013d84:	2520      	movs	r5, #32
 8013d86:	9a04      	ldr	r2, [sp, #16]
 8013d88:	9805      	ldr	r0, [sp, #20]
 8013d8a:	fb92 f2f5 	sdiv	r2, r2, r5
 8013d8e:	fb90 f0f5 	sdiv	r0, r0, r5
 8013d92:	b292      	uxth	r2, r2
 8013d94:	3002      	adds	r0, #2
 8013d96:	1a80      	subs	r0, r0, r2
 8013d98:	9b06      	ldr	r3, [sp, #24]
 8013d9a:	9907      	ldr	r1, [sp, #28]
 8013d9c:	fb93 f3f5 	sdiv	r3, r3, r5
 8013da0:	fb91 f1f5 	sdiv	r1, r1, r5
 8013da4:	b29b      	uxth	r3, r3
 8013da6:	3102      	adds	r1, #2
 8013da8:	1ac9      	subs	r1, r1, r3
 8013daa:	3a01      	subs	r2, #1
 8013dac:	3b01      	subs	r3, #1
 8013dae:	80a0      	strh	r0, [r4, #4]
 8013db0:	4620      	mov	r0, r4
 8013db2:	8022      	strh	r2, [r4, #0]
 8013db4:	8063      	strh	r3, [r4, #2]
 8013db6:	80e1      	strh	r1, [r4, #6]
 8013db8:	b009      	add	sp, #36	; 0x24
 8013dba:	bd30      	pop	{r4, r5, pc}

08013dbc <_ZNK8touchgfx6Circle14getMinimalRectEv>:
 8013dbc:	b510      	push	{r4, lr}
 8013dbe:	e9d1 230e 	ldrd	r2, r3, [r1, #56]	; 0x38
 8013dc2:	4604      	mov	r4, r0
 8013dc4:	f7ff ffc4 	bl	8013d50 <_ZNK8touchgfx6Circle14getMinimalRectENS_7CWRUtil2Q5ES2_>
 8013dc8:	4620      	mov	r0, r4
 8013dca:	bd10      	pop	{r4, pc}

08013dcc <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E>:
 8013dcc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8013dce:	e9d1 540e 	ldrd	r5, r4, [r1, #56]	; 0x38
 8013dd2:	4606      	mov	r6, r0
 8013dd4:	f891 0044 	ldrb.w	r0, [r1, #68]	; 0x44
 8013dd8:	6813      	ldr	r3, [r2, #0]
 8013dda:	42a5      	cmp	r5, r4
 8013ddc:	ea4f 1040 	mov.w	r0, r0, lsl #5
 8013de0:	da2b      	bge.n	8013e3a <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x6e>
 8013de2:	42a3      	cmp	r3, r4
 8013de4:	dd14      	ble.n	8013e10 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x44>
 8013de6:	b168      	cbz	r0, 8013e04 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>
 8013de8:	4267      	negs	r7, r4
 8013dea:	fb97 f2f0 	sdiv	r2, r7, r0
 8013dee:	fb00 7212 	mls	r2, r0, r2, r7
 8013df2:	1a82      	subs	r2, r0, r2
 8013df4:	fb92 f7f0 	sdiv	r7, r2, r0
 8013df8:	fb00 2017 	mls	r0, r0, r7, r2
 8013dfc:	1a24      	subs	r4, r4, r0
 8013dfe:	42ac      	cmp	r4, r5
 8013e00:	bfb8      	it	lt
 8013e02:	462c      	movlt	r4, r5
 8013e04:	4630      	mov	r0, r6
 8013e06:	4622      	mov	r2, r4
 8013e08:	f7ff ffa2 	bl	8013d50 <_ZNK8touchgfx6Circle14getMinimalRectENS_7CWRUtil2Q5ES2_>
 8013e0c:	4630      	mov	r0, r6
 8013e0e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8013e10:	42ab      	cmp	r3, r5
 8013e12:	dd0e      	ble.n	8013e32 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x66>
 8013e14:	b168      	cbz	r0, 8013e32 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x66>
 8013e16:	425f      	negs	r7, r3
 8013e18:	fb97 f2f0 	sdiv	r2, r7, r0
 8013e1c:	fb00 7212 	mls	r2, r0, r2, r7
 8013e20:	1a82      	subs	r2, r0, r2
 8013e22:	fb92 f7f0 	sdiv	r7, r2, r0
 8013e26:	fb00 2017 	mls	r0, r0, r7, r2
 8013e2a:	1a1b      	subs	r3, r3, r0
 8013e2c:	42ab      	cmp	r3, r5
 8013e2e:	bfb8      	it	lt
 8013e30:	462b      	movlt	r3, r5
 8013e32:	4622      	mov	r2, r4
 8013e34:	461c      	mov	r4, r3
 8013e36:	4613      	mov	r3, r2
 8013e38:	e7e4      	b.n	8013e04 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>
 8013e3a:	42a3      	cmp	r3, r4
 8013e3c:	da10      	bge.n	8013e60 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x94>
 8013e3e:	b148      	cbz	r0, 8013e54 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x88>
 8013e40:	fb94 f2f0 	sdiv	r2, r4, r0
 8013e44:	fb00 4212 	mls	r2, r0, r2, r4
 8013e48:	1a82      	subs	r2, r0, r2
 8013e4a:	fb92 f7f0 	sdiv	r7, r2, r0
 8013e4e:	fb00 2017 	mls	r0, r0, r7, r2
 8013e52:	4404      	add	r4, r0
 8013e54:	42a5      	cmp	r5, r4
 8013e56:	bfa8      	it	ge
 8013e58:	4625      	movge	r5, r4
 8013e5a:	461c      	mov	r4, r3
 8013e5c:	462b      	mov	r3, r5
 8013e5e:	e7d1      	b.n	8013e04 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>
 8013e60:	42ab      	cmp	r3, r5
 8013e62:	dacf      	bge.n	8013e04 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>
 8013e64:	2800      	cmp	r0, #0
 8013e66:	d0cd      	beq.n	8013e04 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>
 8013e68:	fb93 f2f0 	sdiv	r2, r3, r0
 8013e6c:	fb00 3212 	mls	r2, r0, r2, r3
 8013e70:	1a82      	subs	r2, r0, r2
 8013e72:	fb92 f7f0 	sdiv	r7, r2, r0
 8013e76:	fb00 2017 	mls	r0, r0, r7, r2
 8013e7a:	4403      	add	r3, r0
 8013e7c:	42ab      	cmp	r3, r5
 8013e7e:	bfa8      	it	ge
 8013e80:	462b      	movge	r3, r5
 8013e82:	e7bf      	b.n	8013e04 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>

08013e84 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE>:
 8013e84:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013e88:	e9d0 650e 	ldrd	r6, r5, [r0, #56]	; 0x38
 8013e8c:	42b5      	cmp	r5, r6
 8013e8e:	bfa2      	ittt	ge
 8013e90:	462b      	movge	r3, r5
 8013e92:	4635      	movge	r5, r6
 8013e94:	461e      	movge	r6, r3
 8013e96:	1b73      	subs	r3, r6, r5
 8013e98:	468a      	mov	sl, r1
 8013e9a:	6c01      	ldr	r1, [r0, #64]	; 0x40
 8013e9c:	f9b0 902c 	ldrsh.w	r9, [r0, #44]	; 0x2c
 8013ea0:	f9b0 b030 	ldrsh.w	fp, [r0, #48]	; 0x30
 8013ea4:	6b42      	ldr	r2, [r0, #52]	; 0x34
 8013ea6:	f5b3 5f34 	cmp.w	r3, #11520	; 0x2d00
 8013eaa:	b0af      	sub	sp, #188	; 0xbc
 8013eac:	f04f 0320 	mov.w	r3, #32
 8013eb0:	4604      	mov	r4, r0
 8013eb2:	bfa4      	itt	ge
 8013eb4:	f44f 5634 	movge.w	r6, #11520	; 0x2d00
 8013eb8:	2500      	movge	r5, #0
 8013eba:	fb99 f9f3 	sdiv	r9, r9, r3
 8013ebe:	fb9b fbf3 	sdiv	fp, fp, r3
 8013ec2:	2900      	cmp	r1, #0
 8013ec4:	f000 80ff 	beq.w	80140c6 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x242>
 8013ec8:	f9ba 0000 	ldrsh.w	r0, [sl]
 8013ecc:	f9ba 3002 	ldrsh.w	r3, [sl, #2]
 8013ed0:	eba9 0700 	sub.w	r7, r9, r0
 8013ed4:	ea87 7ce7 	eor.w	ip, r7, r7, asr #31
 8013ed8:	ebac 7ce7 	sub.w	ip, ip, r7, asr #31
 8013edc:	f8ba 7004 	ldrh.w	r7, [sl, #4]
 8013ee0:	ebab 0803 	sub.w	r8, fp, r3
 8013ee4:	4407      	add	r7, r0
 8013ee6:	ea88 70e8 	eor.w	r0, r8, r8, asr #31
 8013eea:	eba0 70e8 	sub.w	r0, r0, r8, asr #31
 8013eee:	f8ba 8006 	ldrh.w	r8, [sl, #6]
 8013ef2:	b23f      	sxth	r7, r7
 8013ef4:	4498      	add	r8, r3
 8013ef6:	eba9 0707 	sub.w	r7, r9, r7
 8013efa:	fa0f f888 	sxth.w	r8, r8
 8013efe:	ebab 0808 	sub.w	r8, fp, r8
 8013f02:	2f00      	cmp	r7, #0
 8013f04:	bfb8      	it	lt
 8013f06:	427f      	neglt	r7, r7
 8013f08:	f1b8 0f00 	cmp.w	r8, #0
 8013f0c:	bfb8      	it	lt
 8013f0e:	f1c8 0800 	rsblt	r8, r8, #0
 8013f12:	45bc      	cmp	ip, r7
 8013f14:	bfcc      	ite	gt
 8013f16:	f10c 0701 	addgt.w	r7, ip, #1
 8013f1a:	3701      	addle	r7, #1
 8013f1c:	4540      	cmp	r0, r8
 8013f1e:	bfc8      	it	gt
 8013f20:	f100 0801 	addgt.w	r8, r0, #1
 8013f24:	f894 0044 	ldrb.w	r0, [r4, #68]	; 0x44
 8013f28:	f100 0001 	add.w	r0, r0, #1
 8013f2c:	ea4f 0060 	mov.w	r0, r0, asr #1
 8013f30:	f04f 0302 	mov.w	r3, #2
 8013f34:	f1c0 005a 	rsb	r0, r0, #90	; 0x5a
 8013f38:	fb91 f1f3 	sdiv	r1, r1, r3
 8013f3c:	eba2 0201 	sub.w	r2, r2, r1
 8013f40:	bfd8      	it	le
 8013f42:	f108 0801 	addle.w	r8, r8, #1
 8013f46:	9303      	str	r3, [sp, #12]
 8013f48:	920f      	str	r2, [sp, #60]	; 0x3c
 8013f4a:	f7ff fcef 	bl	801392c <_ZN8touchgfx7CWRUtil4sineEi>
 8013f4e:	a92e      	add	r1, sp, #184	; 0xb8
 8013f50:	fb08 f808 	mul.w	r8, r8, r8
 8013f54:	f841 0d74 	str.w	r0, [r1, #-116]!
 8013f58:	a80f      	add	r0, sp, #60	; 0x3c
 8013f5a:	f7ff fcdc 	bl	8013916 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8013f5e:	fb07 8707 	mla	r7, r7, r7, r8
 8013f62:	f04f 0c20 	mov.w	ip, #32
 8013f66:	fb90 f0fc 	sdiv	r0, r0, ip
 8013f6a:	4340      	muls	r0, r0
 8013f6c:	4287      	cmp	r7, r0
 8013f6e:	9b03      	ldr	r3, [sp, #12]
 8013f70:	da04      	bge.n	8013f7c <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0xf8>
 8013f72:	2401      	movs	r4, #1
 8013f74:	4620      	mov	r0, r4
 8013f76:	b02f      	add	sp, #188	; 0xbc
 8013f78:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013f7c:	6b60      	ldr	r0, [r4, #52]	; 0x34
 8013f7e:	6c21      	ldr	r1, [r4, #64]	; 0x40
 8013f80:	fb91 f2f3 	sdiv	r2, r1, r3
 8013f84:	4402      	add	r2, r0
 8013f86:	fb92 f2fc 	sdiv	r2, r2, ip
 8013f8a:	f9ba 1000 	ldrsh.w	r1, [sl]
 8013f8e:	f8ba 3004 	ldrh.w	r3, [sl, #4]
 8013f92:	440b      	add	r3, r1
 8013f94:	b21b      	sxth	r3, r3
 8013f96:	454b      	cmp	r3, r9
 8013f98:	bfa8      	it	ge
 8013f9a:	464b      	movge	r3, r9
 8013f9c:	428b      	cmp	r3, r1
 8013f9e:	bfac      	ite	ge
 8013fa0:	eba9 0903 	subge.w	r9, r9, r3
 8013fa4:	eba9 0901 	sublt.w	r9, r9, r1
 8013fa8:	f8ba 3006 	ldrh.w	r3, [sl, #6]
 8013fac:	f9ba 1002 	ldrsh.w	r1, [sl, #2]
 8013fb0:	440b      	add	r3, r1
 8013fb2:	b21b      	sxth	r3, r3
 8013fb4:	455b      	cmp	r3, fp
 8013fb6:	bfa8      	it	ge
 8013fb8:	465b      	movge	r3, fp
 8013fba:	428b      	cmp	r3, r1
 8013fbc:	bfac      	ite	ge
 8013fbe:	ebab 0b03 	subge.w	fp, fp, r3
 8013fc2:	ebab 0b01 	sublt.w	fp, fp, r1
 8013fc6:	3201      	adds	r2, #1
 8013fc8:	fb0b fb0b 	mul.w	fp, fp, fp
 8013fcc:	fb09 b909 	mla	r9, r9, r9, fp
 8013fd0:	4352      	muls	r2, r2
 8013fd2:	4591      	cmp	r9, r2
 8013fd4:	dccd      	bgt.n	8013f72 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0xee>
 8013fd6:	f10d 093c 	add.w	r9, sp, #60	; 0x3c
 8013fda:	4621      	mov	r1, r4
 8013fdc:	4648      	mov	r0, r9
 8013fde:	6aa7      	ldr	r7, [r4, #40]	; 0x28
 8013fe0:	f005 fbf4 	bl	80197cc <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8013fe4:	6823      	ldr	r3, [r4, #0]
 8013fe6:	4620      	mov	r0, r4
 8013fe8:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8013fea:	4798      	blx	r3
 8013fec:	4653      	mov	r3, sl
 8013fee:	9000      	str	r0, [sp, #0]
 8013ff0:	464a      	mov	r2, r9
 8013ff2:	4639      	mov	r1, r7
 8013ff4:	a811      	add	r0, sp, #68	; 0x44
 8013ff6:	f015 ffa3 	bl	8029f40 <_ZN8touchgfx6CanvasC1EPKNS_15AbstractPainterERKNS_4RectES6_h>
 8013ffa:	6b62      	ldr	r2, [r4, #52]	; 0x34
 8013ffc:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8013ffe:	920b      	str	r2, [sp, #44]	; 0x2c
 8014000:	ebb3 0f42 	cmp.w	r3, r2, lsl #1
 8014004:	930c      	str	r3, [sp, #48]	; 0x30
 8014006:	dd07      	ble.n	8014018 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x194>
 8014008:	2102      	movs	r1, #2
 801400a:	fb93 f3f1 	sdiv	r3, r3, r1
 801400e:	4413      	add	r3, r2
 8014010:	930c      	str	r3, [sp, #48]	; 0x30
 8014012:	fb93 f3f1 	sdiv	r3, r3, r1
 8014016:	930b      	str	r3, [sp, #44]	; 0x2c
 8014018:	e9dd 230b 	ldrd	r2, r3, [sp, #44]	; 0x2c
 801401c:	4628      	mov	r0, r5
 801401e:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 8014022:	930d      	str	r3, [sp, #52]	; 0x34
 8014024:	f894 7044 	ldrb.w	r7, [r4, #68]	; 0x44
 8014028:	f7ff fca0 	bl	801396c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 801402c:	4649      	mov	r1, r9
 801402e:	900f      	str	r0, [sp, #60]	; 0x3c
 8014030:	a80d      	add	r0, sp, #52	; 0x34
 8014032:	f7ff fc70 	bl	8013916 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8014036:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8014038:	f04f 0a02 	mov.w	sl, #2
 801403c:	fb90 f0fa 	sdiv	r0, r0, sl
 8014040:	eb00 0b03 	add.w	fp, r0, r3
 8014044:	4628      	mov	r0, r5
 8014046:	f7ff fcb0 	bl	80139aa <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 801404a:	f10d 08b8 	add.w	r8, sp, #184	; 0xb8
 801404e:	017f      	lsls	r7, r7, #5
 8014050:	f848 0d80 	str.w	r0, [r8, #-128]!
 8014054:	a80d      	add	r0, sp, #52	; 0x34
 8014056:	4641      	mov	r1, r8
 8014058:	f7ff fc5d 	bl	8013916 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 801405c:	6b22      	ldr	r2, [r4, #48]	; 0x30
 801405e:	fb90 f0fa 	sdiv	r0, r0, sl
 8014062:	4659      	mov	r1, fp
 8014064:	1a12      	subs	r2, r2, r0
 8014066:	a811      	add	r0, sp, #68	; 0x44
 8014068:	f016 f8b6 	bl	802a1d8 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>
 801406c:	f105 0a20 	add.w	sl, r5, #32
 8014070:	bb67      	cbnz	r7, 80140cc <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x248>
 8014072:	46ab      	mov	fp, r5
 8014074:	45b2      	cmp	sl, r6
 8014076:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8014078:	dc33      	bgt.n	80140e2 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x25e>
 801407a:	990b      	ldr	r1, [sp, #44]	; 0x2c
 801407c:	4650      	mov	r0, sl
 801407e:	eb02 0241 	add.w	r2, r2, r1, lsl #1
 8014082:	920d      	str	r2, [sp, #52]	; 0x34
 8014084:	f7ff fc72 	bl	801396c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8014088:	4641      	mov	r1, r8
 801408a:	900e      	str	r0, [sp, #56]	; 0x38
 801408c:	a80d      	add	r0, sp, #52	; 0x34
 801408e:	f7ff fc42 	bl	8013916 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8014092:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8014094:	2302      	movs	r3, #2
 8014096:	fb90 f0f3 	sdiv	r0, r0, r3
 801409a:	eb00 0b02 	add.w	fp, r0, r2
 801409e:	4650      	mov	r0, sl
 80140a0:	f7ff fc83 	bl	80139aa <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 80140a4:	4649      	mov	r1, r9
 80140a6:	900f      	str	r0, [sp, #60]	; 0x3c
 80140a8:	a80d      	add	r0, sp, #52	; 0x34
 80140aa:	f7ff fc34 	bl	8013916 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80140ae:	6b22      	ldr	r2, [r4, #48]	; 0x30
 80140b0:	2302      	movs	r3, #2
 80140b2:	4659      	mov	r1, fp
 80140b4:	fb90 f0f3 	sdiv	r0, r0, r3
 80140b8:	1a12      	subs	r2, r2, r0
 80140ba:	a811      	add	r0, sp, #68	; 0x44
 80140bc:	46d3      	mov	fp, sl
 80140be:	f016 f8d8 	bl	802a272 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 80140c2:	44ba      	add	sl, r7
 80140c4:	e7d6      	b.n	8014074 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x1f0>
 80140c6:	fb92 f2f3 	sdiv	r2, r2, r3
 80140ca:	e75e      	b.n	8013f8a <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x106>
 80140cc:	fb9a f2f7 	sdiv	r2, sl, r7
 80140d0:	fb07 a212 	mls	r2, r7, r2, sl
 80140d4:	1aba      	subs	r2, r7, r2
 80140d6:	fb92 f1f7 	sdiv	r1, r2, r7
 80140da:	fb07 2211 	mls	r2, r7, r1, r2
 80140de:	4492      	add	sl, r2
 80140e0:	e7c7      	b.n	8014072 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x1ee>
 80140e2:	455e      	cmp	r6, fp
 80140e4:	dd23      	ble.n	801412e <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2aa>
 80140e6:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80140e8:	4630      	mov	r0, r6
 80140ea:	eb02 0243 	add.w	r2, r2, r3, lsl #1
 80140ee:	920d      	str	r2, [sp, #52]	; 0x34
 80140f0:	f7ff fc3c 	bl	801396c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 80140f4:	4641      	mov	r1, r8
 80140f6:	900e      	str	r0, [sp, #56]	; 0x38
 80140f8:	a80d      	add	r0, sp, #52	; 0x34
 80140fa:	f7ff fc0c 	bl	8013916 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80140fe:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8014100:	f04f 0a02 	mov.w	sl, #2
 8014104:	fb90 f0fa 	sdiv	r0, r0, sl
 8014108:	4403      	add	r3, r0
 801410a:	4630      	mov	r0, r6
 801410c:	9303      	str	r3, [sp, #12]
 801410e:	f7ff fc4c 	bl	80139aa <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8014112:	4649      	mov	r1, r9
 8014114:	900f      	str	r0, [sp, #60]	; 0x3c
 8014116:	a80d      	add	r0, sp, #52	; 0x34
 8014118:	f7ff fbfd 	bl	8013916 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 801411c:	6b22      	ldr	r2, [r4, #48]	; 0x30
 801411e:	9b03      	ldr	r3, [sp, #12]
 8014120:	fb90 f0fa 	sdiv	r0, r0, sl
 8014124:	4619      	mov	r1, r3
 8014126:	1a12      	subs	r2, r2, r0
 8014128:	a811      	add	r0, sp, #68	; 0x44
 801412a:	f016 f8a2 	bl	802a272 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 801412e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8014130:	b99b      	cbnz	r3, 801415a <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2d6>
 8014132:	1b75      	subs	r5, r6, r5
 8014134:	f5b5 5f34 	cmp.w	r5, #11520	; 0x2d00
 8014138:	da04      	bge.n	8014144 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2c0>
 801413a:	e9d4 120b 	ldrd	r1, r2, [r4, #44]	; 0x2c
 801413e:	a811      	add	r0, sp, #68	; 0x44
 8014140:	f016 f897 	bl	802a272 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8014144:	21ff      	movs	r1, #255	; 0xff
 8014146:	a811      	add	r0, sp, #68	; 0x44
 8014148:	f015 ff8e 	bl	802a068 <_ZN8touchgfx6Canvas6renderEh>
 801414c:	4604      	mov	r4, r0
 801414e:	4b8a      	ldr	r3, [pc, #552]	; (8014378 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x4f4>)
 8014150:	9311      	str	r3, [sp, #68]	; 0x44
 8014152:	a816      	add	r0, sp, #88	; 0x58
 8014154:	f001 fa84 	bl	8015660 <_ZN8touchgfx7OutlineD1Ev>
 8014158:	e70c      	b.n	8013f74 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0xf0>
 801415a:	e9dd 2317 	ldrd	r2, r3, [sp, #92]	; 0x5c
 801415e:	429a      	cmp	r2, r3
 8014160:	f0c0 8107 	bcc.w	8014372 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x4ee>
 8014164:	1b73      	subs	r3, r6, r5
 8014166:	f894 a045 	ldrb.w	sl, [r4, #69]	; 0x45
 801416a:	9303      	str	r3, [sp, #12]
 801416c:	f5b3 5f34 	cmp.w	r3, #11520	; 0x2d00
 8014170:	ea4f 1a4a 	mov.w	sl, sl, lsl #5
 8014174:	da43      	bge.n	80141fe <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x37a>
 8014176:	4630      	mov	r0, r6
 8014178:	f7ff fbf8 	bl	801396c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 801417c:	4649      	mov	r1, r9
 801417e:	900f      	str	r0, [sp, #60]	; 0x3c
 8014180:	a80b      	add	r0, sp, #44	; 0x2c
 8014182:	f7ff fbc8 	bl	8013916 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8014186:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8014188:	18c3      	adds	r3, r0, r3
 801418a:	4630      	mov	r0, r6
 801418c:	9305      	str	r3, [sp, #20]
 801418e:	f7ff fc0c 	bl	80139aa <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8014192:	4649      	mov	r1, r9
 8014194:	900f      	str	r0, [sp, #60]	; 0x3c
 8014196:	a80b      	add	r0, sp, #44	; 0x2c
 8014198:	f7ff fbbd 	bl	8013916 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 801419c:	6b23      	ldr	r3, [r4, #48]	; 0x30
 801419e:	f506 52b4 	add.w	r2, r6, #5760	; 0x1680
 80141a2:	1a1b      	subs	r3, r3, r0
 80141a4:	9304      	str	r3, [sp, #16]
 80141a6:	9206      	str	r2, [sp, #24]
 80141a8:	eb06 030a 	add.w	r3, r6, sl
 80141ac:	9a06      	ldr	r2, [sp, #24]
 80141ae:	4293      	cmp	r3, r2
 80141b0:	da25      	bge.n	80141fe <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x37a>
 80141b2:	4618      	mov	r0, r3
 80141b4:	9308      	str	r3, [sp, #32]
 80141b6:	f7ff fbd9 	bl	801396c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 80141ba:	4649      	mov	r1, r9
 80141bc:	900f      	str	r0, [sp, #60]	; 0x3c
 80141be:	a80c      	add	r0, sp, #48	; 0x30
 80141c0:	f7ff fba9 	bl	8013916 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80141c4:	9b05      	ldr	r3, [sp, #20]
 80141c6:	2202      	movs	r2, #2
 80141c8:	fb90 f0f2 	sdiv	r0, r0, r2
 80141cc:	18c3      	adds	r3, r0, r3
 80141ce:	9307      	str	r3, [sp, #28]
 80141d0:	9b08      	ldr	r3, [sp, #32]
 80141d2:	9209      	str	r2, [sp, #36]	; 0x24
 80141d4:	4618      	mov	r0, r3
 80141d6:	f7ff fbe8 	bl	80139aa <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 80141da:	a92e      	add	r1, sp, #184	; 0xb8
 80141dc:	f841 0d80 	str.w	r0, [r1, #-128]!
 80141e0:	a80c      	add	r0, sp, #48	; 0x30
 80141e2:	f7ff fb98 	bl	8013916 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80141e6:	9b04      	ldr	r3, [sp, #16]
 80141e8:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80141ea:	9907      	ldr	r1, [sp, #28]
 80141ec:	fb90 f2f2 	sdiv	r2, r0, r2
 80141f0:	a811      	add	r0, sp, #68	; 0x44
 80141f2:	1a9a      	subs	r2, r3, r2
 80141f4:	f016 f83d 	bl	802a272 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 80141f8:	9b08      	ldr	r3, [sp, #32]
 80141fa:	4453      	add	r3, sl
 80141fc:	e7d6      	b.n	80141ac <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x328>
 80141fe:	455e      	cmp	r6, fp
 8014200:	dd25      	ble.n	801424e <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x3ca>
 8014202:	e9dd 230b 	ldrd	r2, r3, [sp, #44]	; 0x2c
 8014206:	4630      	mov	r0, r6
 8014208:	ebc3 0342 	rsb	r3, r3, r2, lsl #1
 801420c:	930d      	str	r3, [sp, #52]	; 0x34
 801420e:	f7ff fbad 	bl	801396c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8014212:	4641      	mov	r1, r8
 8014214:	900e      	str	r0, [sp, #56]	; 0x38
 8014216:	a80d      	add	r0, sp, #52	; 0x34
 8014218:	f7ff fb7d 	bl	8013916 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 801421c:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 801421e:	2202      	movs	r2, #2
 8014220:	fb90 f0f2 	sdiv	r0, r0, r2
 8014224:	eb00 0903 	add.w	r9, r0, r3
 8014228:	4630      	mov	r0, r6
 801422a:	9204      	str	r2, [sp, #16]
 801422c:	f7ff fbbd 	bl	80139aa <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8014230:	a92e      	add	r1, sp, #184	; 0xb8
 8014232:	f841 0d7c 	str.w	r0, [r1, #-124]!
 8014236:	a80d      	add	r0, sp, #52	; 0x34
 8014238:	f7ff fb6d 	bl	8013916 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 801423c:	6b23      	ldr	r3, [r4, #48]	; 0x30
 801423e:	9a04      	ldr	r2, [sp, #16]
 8014240:	fb90 f2f2 	sdiv	r2, r0, r2
 8014244:	4649      	mov	r1, r9
 8014246:	1a9a      	subs	r2, r3, r2
 8014248:	a811      	add	r0, sp, #68	; 0x44
 801424a:	f016 f812 	bl	802a272 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 801424e:	46d9      	mov	r9, fp
 8014250:	2602      	movs	r6, #2
 8014252:	45a9      	cmp	r9, r5
 8014254:	db25      	blt.n	80142a2 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x41e>
 8014256:	e9dd 230b 	ldrd	r2, r3, [sp, #44]	; 0x2c
 801425a:	4648      	mov	r0, r9
 801425c:	ebc3 0342 	rsb	r3, r3, r2, lsl #1
 8014260:	930d      	str	r3, [sp, #52]	; 0x34
 8014262:	f7ff fb83 	bl	801396c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8014266:	4641      	mov	r1, r8
 8014268:	900e      	str	r0, [sp, #56]	; 0x38
 801426a:	a80d      	add	r0, sp, #52	; 0x34
 801426c:	f7ff fb53 	bl	8013916 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8014270:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8014272:	fb90 f0f6 	sdiv	r0, r0, r6
 8014276:	eb00 0b03 	add.w	fp, r0, r3
 801427a:	4648      	mov	r0, r9
 801427c:	f7ff fb95 	bl	80139aa <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8014280:	a90f      	add	r1, sp, #60	; 0x3c
 8014282:	900f      	str	r0, [sp, #60]	; 0x3c
 8014284:	a80d      	add	r0, sp, #52	; 0x34
 8014286:	f7ff fb46 	bl	8013916 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 801428a:	6b22      	ldr	r2, [r4, #48]	; 0x30
 801428c:	fb90 f0f6 	sdiv	r0, r0, r6
 8014290:	4659      	mov	r1, fp
 8014292:	1a12      	subs	r2, r2, r0
 8014294:	a811      	add	r0, sp, #68	; 0x44
 8014296:	46cb      	mov	fp, r9
 8014298:	f015 ffeb 	bl	802a272 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 801429c:	eba9 0907 	sub.w	r9, r9, r7
 80142a0:	e7d7      	b.n	8014252 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x3ce>
 80142a2:	455d      	cmp	r5, fp
 80142a4:	da22      	bge.n	80142ec <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x468>
 80142a6:	e9dd 230b 	ldrd	r2, r3, [sp, #44]	; 0x2c
 80142aa:	4628      	mov	r0, r5
 80142ac:	ebc3 0342 	rsb	r3, r3, r2, lsl #1
 80142b0:	930d      	str	r3, [sp, #52]	; 0x34
 80142b2:	f7ff fb5b 	bl	801396c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 80142b6:	4641      	mov	r1, r8
 80142b8:	900e      	str	r0, [sp, #56]	; 0x38
 80142ba:	a80d      	add	r0, sp, #52	; 0x34
 80142bc:	f7ff fb2b 	bl	8013916 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80142c0:	6ae7      	ldr	r7, [r4, #44]	; 0x2c
 80142c2:	2602      	movs	r6, #2
 80142c4:	fb90 f0f6 	sdiv	r0, r0, r6
 80142c8:	4407      	add	r7, r0
 80142ca:	4628      	mov	r0, r5
 80142cc:	f7ff fb6d 	bl	80139aa <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 80142d0:	a92e      	add	r1, sp, #184	; 0xb8
 80142d2:	f841 0d7c 	str.w	r0, [r1, #-124]!
 80142d6:	a80d      	add	r0, sp, #52	; 0x34
 80142d8:	f7ff fb1d 	bl	8013916 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80142dc:	6b22      	ldr	r2, [r4, #48]	; 0x30
 80142de:	fb90 f0f6 	sdiv	r0, r0, r6
 80142e2:	4639      	mov	r1, r7
 80142e4:	1a12      	subs	r2, r2, r0
 80142e6:	a811      	add	r0, sp, #68	; 0x44
 80142e8:	f015 ffc3 	bl	802a272 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 80142ec:	9b03      	ldr	r3, [sp, #12]
 80142ee:	f5b3 5f34 	cmp.w	r3, #11520	; 0x2d00
 80142f2:	f6bf af27 	bge.w	8014144 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2c0>
 80142f6:	4628      	mov	r0, r5
 80142f8:	f7ff fb38 	bl	801396c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 80142fc:	ae2e      	add	r6, sp, #184	; 0xb8
 80142fe:	f04f 0b02 	mov.w	fp, #2
 8014302:	f846 0d7c 	str.w	r0, [r6, #-124]!
 8014306:	a80b      	add	r0, sp, #44	; 0x2c
 8014308:	4631      	mov	r1, r6
 801430a:	f7ff fb04 	bl	8013916 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 801430e:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8014310:	eb00 0903 	add.w	r9, r0, r3
 8014314:	4628      	mov	r0, r5
 8014316:	f7ff fb48 	bl	80139aa <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 801431a:	4631      	mov	r1, r6
 801431c:	900f      	str	r0, [sp, #60]	; 0x3c
 801431e:	a80b      	add	r0, sp, #44	; 0x2c
 8014320:	f7ff faf9 	bl	8013916 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8014324:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8014326:	f5a5 54b4 	sub.w	r4, r5, #5760	; 0x1680
 801432a:	eba3 0800 	sub.w	r8, r3, r0
 801432e:	4454      	add	r4, sl
 8014330:	42a5      	cmp	r5, r4
 8014332:	f77f af07 	ble.w	8014144 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2c0>
 8014336:	4620      	mov	r0, r4
 8014338:	f7ff fb18 	bl	801396c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 801433c:	4631      	mov	r1, r6
 801433e:	900f      	str	r0, [sp, #60]	; 0x3c
 8014340:	a80c      	add	r0, sp, #48	; 0x30
 8014342:	f7ff fae8 	bl	8013916 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8014346:	fb90 f0fb 	sdiv	r0, r0, fp
 801434a:	eb00 0709 	add.w	r7, r0, r9
 801434e:	4620      	mov	r0, r4
 8014350:	f7ff fb2b 	bl	80139aa <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8014354:	a90e      	add	r1, sp, #56	; 0x38
 8014356:	900e      	str	r0, [sp, #56]	; 0x38
 8014358:	a80c      	add	r0, sp, #48	; 0x30
 801435a:	f7ff fadc 	bl	8013916 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 801435e:	4639      	mov	r1, r7
 8014360:	fb90 f2fb 	sdiv	r2, r0, fp
 8014364:	a811      	add	r0, sp, #68	; 0x44
 8014366:	eba8 0202 	sub.w	r2, r8, r2
 801436a:	f015 ff82 	bl	802a272 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 801436e:	4454      	add	r4, sl
 8014370:	e7de      	b.n	8014330 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x4ac>
 8014372:	2400      	movs	r4, #0
 8014374:	e6eb      	b.n	801414e <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2ca>
 8014376:	bf00      	nop
 8014378:	080301a4 	.word	0x080301a4

0801437c <_ZNK8touchgfx12CanvasWidget14getMinimalRectEv>:
 801437c:	b510      	push	{r4, lr}
 801437e:	2200      	movs	r2, #0
 8014380:	f9b1 4008 	ldrsh.w	r4, [r1, #8]
 8014384:	f9b1 100a 	ldrsh.w	r1, [r1, #10]
 8014388:	8002      	strh	r2, [r0, #0]
 801438a:	8042      	strh	r2, [r0, #2]
 801438c:	8084      	strh	r4, [r0, #4]
 801438e:	80c1      	strh	r1, [r0, #6]
 8014390:	bd10      	pop	{r4, pc}
	...

08014394 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE>:
 8014394:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8014396:	6803      	ldr	r3, [r0, #0]
 8014398:	460d      	mov	r5, r1
 801439a:	4604      	mov	r4, r0
 801439c:	4601      	mov	r1, r0
 801439e:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 80143a0:	a802      	add	r0, sp, #8
 80143a2:	4798      	blx	r3
 80143a4:	6828      	ldr	r0, [r5, #0]
 80143a6:	6869      	ldr	r1, [r5, #4]
 80143a8:	466b      	mov	r3, sp
 80143aa:	c303      	stmia	r3!, {r0, r1}
 80143ac:	4668      	mov	r0, sp
 80143ae:	4619      	mov	r1, r3
 80143b0:	f7fe fa70 	bl	8012894 <_ZN8touchgfx4RectaNERKS0_>
 80143b4:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 80143b6:	b188      	cbz	r0, 80143dc <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 80143b8:	6803      	ldr	r3, [r0, #0]
 80143ba:	1d21      	adds	r1, r4, #4
 80143bc:	68db      	ldr	r3, [r3, #12]
 80143be:	4798      	blx	r3
 80143c0:	b160      	cbz	r0, 80143dc <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 80143c2:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 80143c6:	2b00      	cmp	r3, #0
 80143c8:	dd08      	ble.n	80143dc <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 80143ca:	f9bd 5006 	ldrsh.w	r5, [sp, #6]
 80143ce:	2d00      	cmp	r5, #0
 80143d0:	dd04      	ble.n	80143dc <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 80143d2:	4a2b      	ldr	r2, [pc, #172]	; (8014480 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xec>)
 80143d4:	7812      	ldrb	r2, [r2, #0]
 80143d6:	b11a      	cbz	r2, 80143e0 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x4c>
 80143d8:	2a01      	cmp	r2, #1
 80143da:	d029      	beq.n	8014430 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x9c>
 80143dc:	b004      	add	sp, #16
 80143de:	bd70      	pop	{r4, r5, r6, pc}
 80143e0:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 80143e4:	441d      	add	r5, r3
 80143e6:	b2ad      	uxth	r5, r5
 80143e8:	b22e      	sxth	r6, r5
 80143ea:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 80143ee:	42b3      	cmp	r3, r6
 80143f0:	daf4      	bge.n	80143dc <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 80143f2:	6823      	ldr	r3, [r4, #0]
 80143f4:	4669      	mov	r1, sp
 80143f6:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 80143f8:	4620      	mov	r0, r4
 80143fa:	4798      	blx	r3
 80143fc:	b940      	cbnz	r0, 8014410 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x7c>
 80143fe:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
 8014402:	2b01      	cmp	r3, #1
 8014404:	d004      	beq.n	8014410 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x7c>
 8014406:	3301      	adds	r3, #1
 8014408:	105b      	asrs	r3, r3, #1
 801440a:	f8ad 3006 	strh.w	r3, [sp, #6]
 801440e:	e7f0      	b.n	80143f2 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x5e>
 8014410:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 8014414:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8014418:	4413      	add	r3, r2
 801441a:	b29b      	uxth	r3, r3
 801441c:	441a      	add	r2, r3
 801441e:	b212      	sxth	r2, r2
 8014420:	4296      	cmp	r6, r2
 8014422:	f8ad 3002 	strh.w	r3, [sp, #2]
 8014426:	dae0      	bge.n	80143ea <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x56>
 8014428:	1aeb      	subs	r3, r5, r3
 801442a:	f8ad 3006 	strh.w	r3, [sp, #6]
 801442e:	e7dc      	b.n	80143ea <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x56>
 8014430:	f8bd 5000 	ldrh.w	r5, [sp]
 8014434:	441d      	add	r5, r3
 8014436:	b2ad      	uxth	r5, r5
 8014438:	b22e      	sxth	r6, r5
 801443a:	f9bd 3000 	ldrsh.w	r3, [sp]
 801443e:	42b3      	cmp	r3, r6
 8014440:	dacc      	bge.n	80143dc <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 8014442:	6823      	ldr	r3, [r4, #0]
 8014444:	4669      	mov	r1, sp
 8014446:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8014448:	4620      	mov	r0, r4
 801444a:	4798      	blx	r3
 801444c:	b940      	cbnz	r0, 8014460 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xcc>
 801444e:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 8014452:	2b01      	cmp	r3, #1
 8014454:	d004      	beq.n	8014460 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xcc>
 8014456:	3301      	adds	r3, #1
 8014458:	105b      	asrs	r3, r3, #1
 801445a:	f8ad 3004 	strh.w	r3, [sp, #4]
 801445e:	e7f0      	b.n	8014442 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xae>
 8014460:	f8bd 2004 	ldrh.w	r2, [sp, #4]
 8014464:	f8bd 3000 	ldrh.w	r3, [sp]
 8014468:	4413      	add	r3, r2
 801446a:	b29b      	uxth	r3, r3
 801446c:	441a      	add	r2, r3
 801446e:	b212      	sxth	r2, r2
 8014470:	4296      	cmp	r6, r2
 8014472:	f8ad 3000 	strh.w	r3, [sp]
 8014476:	dae0      	bge.n	801443a <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xa6>
 8014478:	1aeb      	subs	r3, r5, r3
 801447a:	f8ad 3004 	strh.w	r3, [sp, #4]
 801447e:	e7dc      	b.n	801443a <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xa6>
 8014480:	20006c2c 	.word	0x20006c2c

08014484 <_ZNK8touchgfx12CanvasWidget10invalidateEv>:
 8014484:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8014486:	6803      	ldr	r3, [r0, #0]
 8014488:	4604      	mov	r4, r0
 801448a:	4601      	mov	r1, r0
 801448c:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 801448e:	4668      	mov	r0, sp
 8014490:	4798      	blx	r3
 8014492:	2100      	movs	r1, #0
 8014494:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 8014498:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 801449c:	9102      	str	r1, [sp, #8]
 801449e:	4668      	mov	r0, sp
 80144a0:	a902      	add	r1, sp, #8
 80144a2:	f8ad 200c 	strh.w	r2, [sp, #12]
 80144a6:	f8ad 300e 	strh.w	r3, [sp, #14]
 80144aa:	f7fe f9f3 	bl	8012894 <_ZN8touchgfx4RectaNERKS0_>
 80144ae:	6823      	ldr	r3, [r4, #0]
 80144b0:	4669      	mov	r1, sp
 80144b2:	691b      	ldr	r3, [r3, #16]
 80144b4:	4620      	mov	r0, r4
 80144b6:	4798      	blx	r3
 80144b8:	b004      	add	sp, #16
 80144ba:	bd10      	pop	{r4, pc}

080144bc <_ZN8touchgfx12CanvasWidgetC1Ev>:
 80144bc:	2101      	movs	r1, #1
 80144be:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
 80144c2:	490b      	ldr	r1, [pc, #44]	; (80144f0 <_ZN8touchgfx12CanvasWidgetC1Ev+0x34>)
 80144c4:	6001      	str	r1, [r0, #0]
 80144c6:	2200      	movs	r2, #0
 80144c8:	21ff      	movs	r1, #255	; 0xff
 80144ca:	8082      	strh	r2, [r0, #4]
 80144cc:	80c2      	strh	r2, [r0, #6]
 80144ce:	8102      	strh	r2, [r0, #8]
 80144d0:	8142      	strh	r2, [r0, #10]
 80144d2:	8182      	strh	r2, [r0, #12]
 80144d4:	81c2      	strh	r2, [r0, #14]
 80144d6:	8202      	strh	r2, [r0, #16]
 80144d8:	8242      	strh	r2, [r0, #18]
 80144da:	e9c0 2205 	strd	r2, r2, [r0, #20]
 80144de:	61c2      	str	r2, [r0, #28]
 80144e0:	8402      	strh	r2, [r0, #32]
 80144e2:	8442      	strh	r2, [r0, #34]	; 0x22
 80144e4:	f880 2024 	strb.w	r2, [r0, #36]	; 0x24
 80144e8:	f880 1026 	strb.w	r1, [r0, #38]	; 0x26
 80144ec:	6282      	str	r2, [r0, #40]	; 0x28
 80144ee:	4770      	bx	lr
 80144f0:	0802f924 	.word	0x0802f924

080144f4 <_ZNK8touchgfx4Line14getMinimalRectEv>:
 80144f4:	f101 0364 	add.w	r3, r1, #100	; 0x64
 80144f8:	4602      	mov	r2, r0
 80144fa:	cb03      	ldmia	r3!, {r0, r1}
 80144fc:	6010      	str	r0, [r2, #0]
 80144fe:	6051      	str	r1, [r2, #4]
 8014500:	4610      	mov	r0, r2
 8014502:	4770      	bx	lr

08014504 <_ZNK8touchgfx7CWRUtil2Q54ceilEv>:
 8014504:	6800      	ldr	r0, [r0, #0]
 8014506:	2800      	cmp	r0, #0
 8014508:	bfb9      	ittee	lt
 801450a:	2320      	movlt	r3, #32
 801450c:	fb90 f0f3 	sdivlt	r0, r0, r3
 8014510:	301f      	addge	r0, #31
 8014512:	1140      	asrge	r0, r0, #5
 8014514:	4770      	bx	lr

08014516 <_ZNK8touchgfx4Line17invalidateContentEv>:
 8014516:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801451a:	f890 3026 	ldrb.w	r3, [r0, #38]	; 0x26
 801451e:	b089      	sub	sp, #36	; 0x24
 8014520:	4604      	mov	r4, r0
 8014522:	b353      	cbz	r3, 801457a <_ZNK8touchgfx4Line17invalidateContentEv+0x64>
 8014524:	6803      	ldr	r3, [r0, #0]
 8014526:	4601      	mov	r1, r0
 8014528:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 801452a:	a802      	add	r0, sp, #8
 801452c:	4798      	blx	r3
 801452e:	2220      	movs	r2, #32
 8014530:	f8d4 a02c 	ldr.w	sl, [r4, #44]	; 0x2c
 8014534:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8014536:	fb9a f0f2 	sdiv	r0, sl, r2
 801453a:	fb91 f5f2 	sdiv	r5, r1, r2
 801453e:	1b40      	subs	r0, r0, r5
 8014540:	2800      	cmp	r0, #0
 8014542:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8014544:	fb93 f6f2 	sdiv	r6, r3, r2
 8014548:	bfb8      	it	lt
 801454a:	4240      	neglt	r0, r0
 801454c:	0076      	lsls	r6, r6, #1
 801454e:	4286      	cmp	r6, r0
 8014550:	f8d4 b000 	ldr.w	fp, [r4]
 8014554:	dc0c      	bgt.n	8014570 <_ZNK8touchgfx4Line17invalidateContentEv+0x5a>
 8014556:	6b25      	ldr	r5, [r4, #48]	; 0x30
 8014558:	f8d4 8038 	ldr.w	r8, [r4, #56]	; 0x38
 801455c:	fb95 f0f2 	sdiv	r0, r5, r2
 8014560:	fb98 f7f2 	sdiv	r7, r8, r2
 8014564:	1bc0      	subs	r0, r0, r7
 8014566:	2800      	cmp	r0, #0
 8014568:	bfb8      	it	lt
 801456a:	4240      	neglt	r0, r0
 801456c:	4286      	cmp	r6, r0
 801456e:	dd07      	ble.n	8014580 <_ZNK8touchgfx4Line17invalidateContentEv+0x6a>
 8014570:	f8db 3010 	ldr.w	r3, [fp, #16]
 8014574:	a902      	add	r1, sp, #8
 8014576:	4620      	mov	r0, r4
 8014578:	4798      	blx	r3
 801457a:	b009      	add	sp, #36	; 0x24
 801457c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8014580:	3301      	adds	r3, #1
 8014582:	2002      	movs	r0, #2
 8014584:	f10d 0920 	add.w	r9, sp, #32
 8014588:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 801458c:	4103      	asrs	r3, r0
 801458e:	f849 3d08 	str.w	r3, [r9, #-8]!
 8014592:	eb01 060a 	add.w	r6, r1, sl
 8014596:	eb08 0705 	add.w	r7, r8, r5
 801459a:	fb96 f6f0 	sdiv	r6, r6, r0
 801459e:	fb97 f7f0 	sdiv	r7, r7, r0
 80145a2:	4648      	mov	r0, r9
 80145a4:	9101      	str	r1, [sp, #4]
 80145a6:	b236      	sxth	r6, r6
 80145a8:	b23f      	sxth	r7, r7
 80145aa:	fb96 f6f2 	sdiv	r6, r6, r2
 80145ae:	fb97 f7f2 	sdiv	r7, r7, r2
 80145b2:	f7ff ffa7 	bl	8014504 <_ZNK8touchgfx7CWRUtil2Q54ceilEv>
 80145b6:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 80145ba:	f9bd 200e 	ldrsh.w	r2, [sp, #14]
 80145be:	9901      	ldr	r1, [sp, #4]
 80145c0:	4293      	cmp	r3, r2
 80145c2:	fa1f fe87 	uxth.w	lr, r7
 80145c6:	fa1f fc86 	uxth.w	ip, r6
 80145ca:	eba1 0a0a 	sub.w	sl, r1, sl
 80145ce:	b280      	uxth	r0, r0
 80145d0:	da54      	bge.n	801467c <_ZNK8touchgfx4Line17invalidateContentEv+0x166>
 80145d2:	ebac 0100 	sub.w	r1, ip, r0
 80145d6:	b289      	uxth	r1, r1
 80145d8:	4460      	add	r0, ip
 80145da:	f1ba 0f00 	cmp.w	sl, #0
 80145de:	b20e      	sxth	r6, r1
 80145e0:	b280      	uxth	r0, r0
 80145e2:	f9bd a008 	ldrsh.w	sl, [sp, #8]
 80145e6:	f9bd c00a 	ldrsh.w	ip, [sp, #10]
 80145ea:	da29      	bge.n	8014640 <_ZNK8touchgfx4Line17invalidateContentEv+0x12a>
 80145ec:	eba8 0505 	sub.w	r5, r8, r5
 80145f0:	2d00      	cmp	r5, #0
 80145f2:	da2a      	bge.n	801464a <_ZNK8touchgfx4Line17invalidateContentEv+0x134>
 80145f4:	fa1f f88a 	uxth.w	r8, sl
 80145f8:	eba0 0008 	sub.w	r0, r0, r8
 80145fc:	fa1f f58c 	uxth.w	r5, ip
 8014600:	4443      	add	r3, r8
 8014602:	f8ad 0014 	strh.w	r0, [sp, #20]
 8014606:	1a59      	subs	r1, r3, r1
 8014608:	ebae 0005 	sub.w	r0, lr, r5
 801460c:	f8ad a010 	strh.w	sl, [sp, #16]
 8014610:	f8ad c012 	strh.w	ip, [sp, #18]
 8014614:	f8ad 0016 	strh.w	r0, [sp, #22]
 8014618:	f8ad 6018 	strh.w	r6, [sp, #24]
 801461c:	f8ad 701a 	strh.w	r7, [sp, #26]
 8014620:	f8ad 101c 	strh.w	r1, [sp, #28]
 8014624:	442a      	add	r2, r5
 8014626:	eba2 0e0e 	sub.w	lr, r2, lr
 801462a:	f8ad e01e 	strh.w	lr, [sp, #30]
 801462e:	f8db 3010 	ldr.w	r3, [fp, #16]
 8014632:	a904      	add	r1, sp, #16
 8014634:	4620      	mov	r0, r4
 8014636:	4798      	blx	r3
 8014638:	6823      	ldr	r3, [r4, #0]
 801463a:	4649      	mov	r1, r9
 801463c:	691b      	ldr	r3, [r3, #16]
 801463e:	e79a      	b.n	8014576 <_ZNK8touchgfx4Line17invalidateContentEv+0x60>
 8014640:	d003      	beq.n	801464a <_ZNK8touchgfx4Line17invalidateContentEv+0x134>
 8014642:	eba8 0505 	sub.w	r5, r8, r5
 8014646:	2d00      	cmp	r5, #0
 8014648:	dcd4      	bgt.n	80145f4 <_ZNK8touchgfx4Line17invalidateContentEv+0xde>
 801464a:	fa1f f88a 	uxth.w	r8, sl
 801464e:	4443      	add	r3, r8
 8014650:	fa1f f58c 	uxth.w	r5, ip
 8014654:	1a59      	subs	r1, r3, r1
 8014656:	eba0 0008 	sub.w	r0, r0, r8
 801465a:	ebae 0305 	sub.w	r3, lr, r5
 801465e:	f8ad 6010 	strh.w	r6, [sp, #16]
 8014662:	f8ad c012 	strh.w	ip, [sp, #18]
 8014666:	f8ad 1014 	strh.w	r1, [sp, #20]
 801466a:	f8ad 3016 	strh.w	r3, [sp, #22]
 801466e:	f8ad a018 	strh.w	sl, [sp, #24]
 8014672:	f8ad 701a 	strh.w	r7, [sp, #26]
 8014676:	f8ad 001c 	strh.w	r0, [sp, #28]
 801467a:	e7d3      	b.n	8014624 <_ZNK8touchgfx4Line17invalidateContentEv+0x10e>
 801467c:	ebae 0100 	sub.w	r1, lr, r0
 8014680:	b289      	uxth	r1, r1
 8014682:	4470      	add	r0, lr
 8014684:	f1ba 0f00 	cmp.w	sl, #0
 8014688:	b20f      	sxth	r7, r1
 801468a:	b280      	uxth	r0, r0
 801468c:	f9bd e008 	ldrsh.w	lr, [sp, #8]
 8014690:	f9bd a00a 	ldrsh.w	sl, [sp, #10]
 8014694:	da20      	bge.n	80146d8 <_ZNK8touchgfx4Line17invalidateContentEv+0x1c2>
 8014696:	eba8 0505 	sub.w	r5, r8, r5
 801469a:	2d00      	cmp	r5, #0
 801469c:	da21      	bge.n	80146e2 <_ZNK8touchgfx4Line17invalidateContentEv+0x1cc>
 801469e:	fa1f f88e 	uxth.w	r8, lr
 80146a2:	fa1f f58a 	uxth.w	r5, sl
 80146a6:	4443      	add	r3, r8
 80146a8:	442a      	add	r2, r5
 80146aa:	f8ad e010 	strh.w	lr, [sp, #16]
 80146ae:	1b40      	subs	r0, r0, r5
 80146b0:	ebac 0e08 	sub.w	lr, ip, r8
 80146b4:	1a51      	subs	r1, r2, r1
 80146b6:	eba3 0c0c 	sub.w	ip, r3, ip
 80146ba:	f8ad a012 	strh.w	sl, [sp, #18]
 80146be:	f8ad e014 	strh.w	lr, [sp, #20]
 80146c2:	f8ad 0016 	strh.w	r0, [sp, #22]
 80146c6:	f8ad 6018 	strh.w	r6, [sp, #24]
 80146ca:	f8ad 701a 	strh.w	r7, [sp, #26]
 80146ce:	f8ad c01c 	strh.w	ip, [sp, #28]
 80146d2:	f8ad 101e 	strh.w	r1, [sp, #30]
 80146d6:	e7aa      	b.n	801462e <_ZNK8touchgfx4Line17invalidateContentEv+0x118>
 80146d8:	d003      	beq.n	80146e2 <_ZNK8touchgfx4Line17invalidateContentEv+0x1cc>
 80146da:	eba8 0505 	sub.w	r5, r8, r5
 80146de:	2d00      	cmp	r5, #0
 80146e0:	dcdd      	bgt.n	801469e <_ZNK8touchgfx4Line17invalidateContentEv+0x188>
 80146e2:	fa1f f58e 	uxth.w	r5, lr
 80146e6:	fa1f f88a 	uxth.w	r8, sl
 80146ea:	4442      	add	r2, r8
 80146ec:	442b      	add	r3, r5
 80146ee:	f8ad 7012 	strh.w	r7, [sp, #18]
 80146f2:	1a51      	subs	r1, r2, r1
 80146f4:	ebac 0705 	sub.w	r7, ip, r5
 80146f8:	eba0 0008 	sub.w	r0, r0, r8
 80146fc:	eba3 0c0c 	sub.w	ip, r3, ip
 8014700:	f8ad e010 	strh.w	lr, [sp, #16]
 8014704:	f8ad 7014 	strh.w	r7, [sp, #20]
 8014708:	f8ad 1016 	strh.w	r1, [sp, #22]
 801470c:	f8ad 6018 	strh.w	r6, [sp, #24]
 8014710:	f8ad a01a 	strh.w	sl, [sp, #26]
 8014714:	f8ad c01c 	strh.w	ip, [sp, #28]
 8014718:	f8ad 001e 	strh.w	r0, [sp, #30]
 801471c:	e787      	b.n	801462e <_ZNK8touchgfx4Line17invalidateContentEv+0x118>

0801471e <_ZN8touchgfx7CWRUtil5isqrtEm>:
 801471e:	f5b0 3f80 	cmp.w	r0, #65536	; 0x10000
 8014722:	bf2c      	ite	cs
 8014724:	f04f 4280 	movcs.w	r2, #1073741824	; 0x40000000
 8014728:	f44f 4280 	movcc.w	r2, #16384	; 0x4000
 801472c:	2300      	movs	r3, #0
 801472e:	1899      	adds	r1, r3, r2
 8014730:	4288      	cmp	r0, r1
 8014732:	bf24      	itt	cs
 8014734:	1853      	addcs	r3, r2, r1
 8014736:	1a40      	subcs	r0, r0, r1
 8014738:	0892      	lsrs	r2, r2, #2
 801473a:	ea4f 0353 	mov.w	r3, r3, lsr #1
 801473e:	d1f6      	bne.n	801472e <_ZN8touchgfx7CWRUtil5isqrtEm+0x10>
 8014740:	4618      	mov	r0, r3
 8014742:	4770      	bx	lr

08014744 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>:
 8014744:	b510      	push	{r4, lr}
 8014746:	ea80 73e0 	eor.w	r3, r0, r0, asr #31
 801474a:	ea81 74e1 	eor.w	r4, r1, r1, asr #31
 801474e:	eba4 74e1 	sub.w	r4, r4, r1, asr #31
 8014752:	eba3 73e0 	sub.w	r3, r3, r0, asr #31
 8014756:	13a4      	asrs	r4, r4, #14
 8014758:	139b      	asrs	r3, r3, #14
 801475a:	429c      	cmp	r4, r3
 801475c:	bfb8      	it	lt
 801475e:	461c      	movlt	r4, r3
 8014760:	2c01      	cmp	r4, #1
 8014762:	dd07      	ble.n	8014774 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_+0x30>
 8014764:	fb91 f1f4 	sdiv	r1, r1, r4
 8014768:	fb90 f0f4 	sdiv	r0, r0, r4
 801476c:	f7ff ffea 	bl	8014744 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>
 8014770:	4360      	muls	r0, r4
 8014772:	bd10      	pop	{r4, pc}
 8014774:	4340      	muls	r0, r0
 8014776:	fb01 0001 	mla	r0, r1, r1, r0
 801477a:	f7ff ffd0 	bl	801471e <_ZN8touchgfx7CWRUtil5isqrtEm>
 801477e:	e7f8      	b.n	8014772 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_+0x2e>

08014780 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E>:
 8014780:	2800      	cmp	r0, #0
 8014782:	b508      	push	{r3, lr}
 8014784:	da05      	bge.n	8014792 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x12>
 8014786:	4240      	negs	r0, r0
 8014788:	f7ff fffa 	bl	8014780 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E>
 801478c:	4240      	negs	r0, r0
 801478e:	b240      	sxtb	r0, r0
 8014790:	bd08      	pop	{r3, pc}
 8014792:	f5b0 6f80 	cmp.w	r0, #1024	; 0x400
 8014796:	dc11      	bgt.n	80147bc <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x3c>
 8014798:	f5b0 7f35 	cmp.w	r0, #724	; 0x2d4
 801479c:	dd09      	ble.n	80147b2 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x32>
 801479e:	4340      	muls	r0, r0
 80147a0:	f5c0 1080 	rsb	r0, r0, #1048576	; 0x100000
 80147a4:	f7ff ffbb 	bl	801471e <_ZN8touchgfx7CWRUtil5isqrtEm>
 80147a8:	f7ff ffea 	bl	8014780 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E>
 80147ac:	f1c0 005a 	rsb	r0, r0, #90	; 0x5a
 80147b0:	e7ed      	b.n	801478e <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0xe>
 80147b2:	3003      	adds	r0, #3
 80147b4:	10c0      	asrs	r0, r0, #3
 80147b6:	4b02      	ldr	r3, [pc, #8]	; (80147c0 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x40>)
 80147b8:	5618      	ldrsb	r0, [r3, r0]
 80147ba:	e7e9      	b.n	8014790 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x10>
 80147bc:	2000      	movs	r0, #0
 80147be:	e7e7      	b.n	8014790 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x10>
 80147c0:	0802f994 	.word	0x0802f994

080147c4 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>:
 80147c4:	4281      	cmp	r1, r0
 80147c6:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80147c8:	460c      	mov	r4, r1
 80147ca:	4615      	mov	r5, r2
 80147cc:	dd07      	ble.n	80147de <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_+0x1a>
 80147ce:	4601      	mov	r1, r0
 80147d0:	4620      	mov	r0, r4
 80147d2:	f7ff fff7 	bl	80147c4 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
 80147d6:	f1c0 005a 	rsb	r0, r0, #90	; 0x5a
 80147da:	b003      	add	sp, #12
 80147dc:	bd30      	pop	{r4, r5, pc}
 80147de:	f7ff ffb1 	bl	8014744 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>
 80147e2:	6028      	str	r0, [r5, #0]
 80147e4:	2800      	cmp	r0, #0
 80147e6:	d0f8      	beq.n	80147da <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_+0x16>
 80147e8:	4602      	mov	r2, r0
 80147ea:	ab01      	add	r3, sp, #4
 80147ec:	f44f 6180 	mov.w	r1, #1024	; 0x400
 80147f0:	4620      	mov	r0, r4
 80147f2:	f005 f8fb 	bl	80199ec <_ZN8touchgfx6muldivElllRl>
 80147f6:	f7ff ffc3 	bl	8014780 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E>
 80147fa:	e7ee      	b.n	80147da <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_+0x16>

080147fc <_ZN8touchgfx4LineC1Ev>:
 80147fc:	b510      	push	{r4, lr}
 80147fe:	4604      	mov	r4, r0
 8014800:	f7ff fe5c 	bl	80144bc <_ZN8touchgfx12CanvasWidgetC1Ev>
 8014804:	4b0c      	ldr	r3, [pc, #48]	; (8014838 <_ZN8touchgfx4LineC1Ev+0x3c>)
 8014806:	6023      	str	r3, [r4, #0]
 8014808:	2220      	movs	r2, #32
 801480a:	2300      	movs	r3, #0
 801480c:	63e2      	str	r2, [r4, #60]	; 0x3c
 801480e:	2212      	movs	r2, #18
 8014810:	e9c4 330b 	strd	r3, r3, [r4, #44]	; 0x2c
 8014814:	e9c4 330d 	strd	r3, r3, [r4, #52]	; 0x34
 8014818:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
 801481c:	e9c4 3311 	strd	r3, r3, [r4, #68]	; 0x44
 8014820:	e9c4 3313 	strd	r3, r3, [r4, #76]	; 0x4c
 8014824:	e9c4 3315 	strd	r3, r3, [r4, #84]	; 0x54
 8014828:	e9c4 3317 	strd	r3, r3, [r4, #92]	; 0x5c
 801482c:	e9c4 3319 	strd	r3, r3, [r4, #100]	; 0x64
 8014830:	66e2      	str	r2, [r4, #108]	; 0x6c
 8014832:	60a3      	str	r3, [r4, #8]
 8014834:	4620      	mov	r0, r4
 8014836:	bd10      	pop	{r4, pc}
 8014838:	0802f9f8 	.word	0x0802f9f8

0801483c <_ZNK8touchgfx4Line18getLineEndingStyleEv>:
 801483c:	f890 0040 	ldrb.w	r0, [r0, #64]	; 0x40
 8014840:	4770      	bx	lr

08014842 <_ZN8touchgfx4Line17updateCachedShapeEv>:
 8014842:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 8014846:	6b47      	ldr	r7, [r0, #52]	; 0x34
 8014848:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 801484a:	6b85      	ldr	r5, [r0, #56]	; 0x38
 801484c:	6b02      	ldr	r2, [r0, #48]	; 0x30
 801484e:	1aff      	subs	r7, r7, r3
 8014850:	4604      	mov	r4, r0
 8014852:	eba5 0502 	sub.w	r5, r5, r2
 8014856:	d142      	bne.n	80148de <_ZN8touchgfx4Line17updateCachedShapeEv+0x9c>
 8014858:	b955      	cbnz	r5, 8014870 <_ZN8touchgfx4Line17updateCachedShapeEv+0x2e>
 801485a:	e9c0 3313 	strd	r3, r3, [r0, #76]	; 0x4c
 801485e:	e9c0 3311 	strd	r3, r3, [r0, #68]	; 0x44
 8014862:	e9c0 2217 	strd	r2, r2, [r0, #92]	; 0x5c
 8014866:	e9c0 2215 	strd	r2, r2, [r0, #84]	; 0x54
 801486a:	b002      	add	sp, #8
 801486c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8014870:	ea85 78e5 	eor.w	r8, r5, r5, asr #31
 8014874:	eba8 78e5 	sub.w	r8, r8, r5, asr #31
 8014878:	4629      	mov	r1, r5
 801487a:	4642      	mov	r2, r8
 801487c:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 801487e:	f005 f8d4 	bl	8019a2a <_ZN8touchgfx6muldivElll>
 8014882:	2502      	movs	r5, #2
 8014884:	4642      	mov	r2, r8
 8014886:	fb90 f6f5 	sdiv	r6, r0, r5
 801488a:	4639      	mov	r1, r7
 801488c:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 801488e:	f005 f8cc 	bl	8019a2a <_ZN8touchgfx6muldivElll>
 8014892:	f894 9040 	ldrb.w	r9, [r4, #64]	; 0x40
 8014896:	fb90 f5f5 	sdiv	r5, r0, r5
 801489a:	f1b9 0f00 	cmp.w	r9, #0
 801489e:	d067      	beq.n	8014970 <_ZN8touchgfx4Line17updateCachedShapeEv+0x12e>
 80148a0:	f1b9 0f02 	cmp.w	r9, #2
 80148a4:	d878      	bhi.n	8014998 <_ZN8touchgfx4Line17updateCachedShapeEv+0x156>
 80148a6:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 80148a8:	6b60      	ldr	r0, [r4, #52]	; 0x34
 80148aa:	1b93      	subs	r3, r2, r6
 80148ac:	1b5b      	subs	r3, r3, r5
 80148ae:	6463      	str	r3, [r4, #68]	; 0x44
 80148b0:	6b23      	ldr	r3, [r4, #48]	; 0x30
 80148b2:	18e9      	adds	r1, r5, r3
 80148b4:	1b89      	subs	r1, r1, r6
 80148b6:	6561      	str	r1, [r4, #84]	; 0x54
 80148b8:	1b81      	subs	r1, r0, r6
 80148ba:	4429      	add	r1, r5
 80148bc:	64a1      	str	r1, [r4, #72]	; 0x48
 80148be:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 80148c0:	4430      	add	r0, r6
 80148c2:	186f      	adds	r7, r5, r1
 80148c4:	4432      	add	r2, r6
 80148c6:	1b49      	subs	r1, r1, r5
 80148c8:	4437      	add	r7, r6
 80148ca:	4428      	add	r0, r5
 80148cc:	4431      	add	r1, r6
 80148ce:	1b52      	subs	r2, r2, r5
 80148d0:	1b5b      	subs	r3, r3, r5
 80148d2:	65a7      	str	r7, [r4, #88]	; 0x58
 80148d4:	64e0      	str	r0, [r4, #76]	; 0x4c
 80148d6:	65e1      	str	r1, [r4, #92]	; 0x5c
 80148d8:	6522      	str	r2, [r4, #80]	; 0x50
 80148da:	1b9b      	subs	r3, r3, r6
 80148dc:	e05b      	b.n	8014996 <_ZN8touchgfx4Line17updateCachedShapeEv+0x154>
 80148de:	ea87 78e7 	eor.w	r8, r7, r7, asr #31
 80148e2:	eba8 78e7 	sub.w	r8, r8, r7, asr #31
 80148e6:	2d00      	cmp	r5, #0
 80148e8:	d0c6      	beq.n	8014878 <_ZN8touchgfx4Line17updateCachedShapeEv+0x36>
 80148ea:	ea85 73e5 	eor.w	r3, r5, r5, asr #31
 80148ee:	eba3 73e5 	sub.w	r3, r3, r5, asr #31
 80148f2:	fb93 f2f8 	sdiv	r2, r3, r8
 80148f6:	fb08 3312 	mls	r3, r8, r2, r3
 80148fa:	b353      	cbz	r3, 8014952 <_ZN8touchgfx4Line17updateCachedShapeEv+0x110>
 80148fc:	fb98 f2f3 	sdiv	r2, r8, r3
 8014900:	fb03 8812 	mls	r8, r3, r2, r8
 8014904:	f1b8 0f00 	cmp.w	r8, #0
 8014908:	d1f3      	bne.n	80148f2 <_ZN8touchgfx4Line17updateCachedShapeEv+0xb0>
 801490a:	2b01      	cmp	r3, #1
 801490c:	bf1c      	itt	ne
 801490e:	fb95 f5f3 	sdivne	r5, r5, r3
 8014912:	fb97 f7f3 	sdivne	r7, r7, r3
 8014916:	ea87 73e7 	eor.w	r3, r7, r7, asr #31
 801491a:	f24b 5104 	movw	r1, #46340	; 0xb504
 801491e:	eba3 73e7 	sub.w	r3, r3, r7, asr #31
 8014922:	ea85 72e5 	eor.w	r2, r5, r5, asr #31
 8014926:	428b      	cmp	r3, r1
 8014928:	eba2 72e5 	sub.w	r2, r2, r5, asr #31
 801492c:	4608      	mov	r0, r1
 801492e:	dd01      	ble.n	8014934 <_ZN8touchgfx4Line17updateCachedShapeEv+0xf2>
 8014930:	428a      	cmp	r2, r1
 8014932:	dc10      	bgt.n	8014956 <_ZN8touchgfx4Line17updateCachedShapeEv+0x114>
 8014934:	fb90 f3f3 	sdiv	r3, r0, r3
 8014938:	fb90 f2f2 	sdiv	r2, r0, r2
 801493c:	4293      	cmp	r3, r2
 801493e:	bfa8      	it	ge
 8014940:	4613      	movge	r3, r2
 8014942:	435f      	muls	r7, r3
 8014944:	435d      	muls	r5, r3
 8014946:	4629      	mov	r1, r5
 8014948:	4638      	mov	r0, r7
 801494a:	f7ff fefb 	bl	8014744 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>
 801494e:	4680      	mov	r8, r0
 8014950:	e792      	b.n	8014878 <_ZN8touchgfx4Line17updateCachedShapeEv+0x36>
 8014952:	4643      	mov	r3, r8
 8014954:	e7d9      	b.n	801490a <_ZN8touchgfx4Line17updateCachedShapeEv+0xc8>
 8014956:	fb93 f3f1 	sdiv	r3, r3, r1
 801495a:	fb92 f2f1 	sdiv	r2, r2, r1
 801495e:	4293      	cmp	r3, r2
 8014960:	bfcc      	ite	gt
 8014962:	3301      	addgt	r3, #1
 8014964:	1c53      	addle	r3, r2, #1
 8014966:	fb97 f7f3 	sdiv	r7, r7, r3
 801496a:	fb95 f5f3 	sdiv	r5, r5, r3
 801496e:	e7ea      	b.n	8014946 <_ZN8touchgfx4Line17updateCachedShapeEv+0x104>
 8014970:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8014972:	6b60      	ldr	r0, [r4, #52]	; 0x34
 8014974:	1b93      	subs	r3, r2, r6
 8014976:	6463      	str	r3, [r4, #68]	; 0x44
 8014978:	6b23      	ldr	r3, [r4, #48]	; 0x30
 801497a:	18e9      	adds	r1, r5, r3
 801497c:	6561      	str	r1, [r4, #84]	; 0x54
 801497e:	1b81      	subs	r1, r0, r6
 8014980:	64a1      	str	r1, [r4, #72]	; 0x48
 8014982:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 8014984:	4430      	add	r0, r6
 8014986:	186f      	adds	r7, r5, r1
 8014988:	4432      	add	r2, r6
 801498a:	1b49      	subs	r1, r1, r5
 801498c:	65a7      	str	r7, [r4, #88]	; 0x58
 801498e:	64e0      	str	r0, [r4, #76]	; 0x4c
 8014990:	65e1      	str	r1, [r4, #92]	; 0x5c
 8014992:	6522      	str	r2, [r4, #80]	; 0x50
 8014994:	1b5b      	subs	r3, r3, r5
 8014996:	6623      	str	r3, [r4, #96]	; 0x60
 8014998:	6c62      	ldr	r2, [r4, #68]	; 0x44
 801499a:	6d63      	ldr	r3, [r4, #84]	; 0x54
 801499c:	9200      	str	r2, [sp, #0]
 801499e:	9301      	str	r3, [sp, #4]
 80149a0:	f104 0148 	add.w	r1, r4, #72	; 0x48
 80149a4:	f104 0c54 	add.w	ip, r4, #84	; 0x54
 80149a8:	680f      	ldr	r7, [r1, #0]
 80149aa:	9800      	ldr	r0, [sp, #0]
 80149ac:	42ba      	cmp	r2, r7
 80149ae:	bfa8      	it	ge
 80149b0:	463a      	movge	r2, r7
 80149b2:	4287      	cmp	r7, r0
 80149b4:	bfc8      	it	gt
 80149b6:	9700      	strgt	r7, [sp, #0]
 80149b8:	690f      	ldr	r7, [r1, #16]
 80149ba:	9801      	ldr	r0, [sp, #4]
 80149bc:	42bb      	cmp	r3, r7
 80149be:	bfa8      	it	ge
 80149c0:	463b      	movge	r3, r7
 80149c2:	3104      	adds	r1, #4
 80149c4:	4287      	cmp	r7, r0
 80149c6:	bfc8      	it	gt
 80149c8:	9701      	strgt	r7, [sp, #4]
 80149ca:	458c      	cmp	ip, r1
 80149cc:	d1ec      	bne.n	80149a8 <_ZN8touchgfx4Line17updateCachedShapeEv+0x166>
 80149ce:	4668      	mov	r0, sp
 80149d0:	2720      	movs	r7, #32
 80149d2:	fb92 f8f7 	sdiv	r8, r2, r7
 80149d6:	fb93 f7f7 	sdiv	r7, r3, r7
 80149da:	f7ff fd93 	bl	8014504 <_ZNK8touchgfx7CWRUtil2Q54ceilEv>
 80149de:	4682      	mov	sl, r0
 80149e0:	a801      	add	r0, sp, #4
 80149e2:	f7ff fd8f 	bl	8014504 <_ZNK8touchgfx7CWRUtil2Q54ceilEv>
 80149e6:	ebaa 0208 	sub.w	r2, sl, r8
 80149ea:	1bc0      	subs	r0, r0, r7
 80149ec:	f1b9 0f01 	cmp.w	r9, #1
 80149f0:	f8a4 8064 	strh.w	r8, [r4, #100]	; 0x64
 80149f4:	f8a4 7066 	strh.w	r7, [r4, #102]	; 0x66
 80149f8:	f8a4 2068 	strh.w	r2, [r4, #104]	; 0x68
 80149fc:	f8a4 006a 	strh.w	r0, [r4, #106]	; 0x6a
 8014a00:	f47f af33 	bne.w	801486a <_ZN8touchgfx4Line17updateCachedShapeEv+0x28>
 8014a04:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
 8014a06:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8014a08:	1b83      	subs	r3, r0, r6
 8014a0a:	6463      	str	r3, [r4, #68]	; 0x44
 8014a0c:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8014a0e:	18ea      	adds	r2, r5, r3
 8014a10:	6562      	str	r2, [r4, #84]	; 0x54
 8014a12:	1b8a      	subs	r2, r1, r6
 8014a14:	64a2      	str	r2, [r4, #72]	; 0x48
 8014a16:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 8014a18:	4431      	add	r1, r6
 8014a1a:	18af      	adds	r7, r5, r2
 8014a1c:	4406      	add	r6, r0
 8014a1e:	1b52      	subs	r2, r2, r5
 8014a20:	1b5d      	subs	r5, r3, r5
 8014a22:	65a7      	str	r7, [r4, #88]	; 0x58
 8014a24:	64e1      	str	r1, [r4, #76]	; 0x4c
 8014a26:	65e2      	str	r2, [r4, #92]	; 0x5c
 8014a28:	6526      	str	r6, [r4, #80]	; 0x50
 8014a2a:	6625      	str	r5, [r4, #96]	; 0x60
 8014a2c:	e71d      	b.n	801486a <_ZN8touchgfx4Line17updateCachedShapeEv+0x28>

08014a2e <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>:
 8014a2e:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8014a30:	428b      	cmp	r3, r1
 8014a32:	d102      	bne.n	8014a3a <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_+0xc>
 8014a34:	6b03      	ldr	r3, [r0, #48]	; 0x30
 8014a36:	4293      	cmp	r3, r2
 8014a38:	d003      	beq.n	8014a42 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_+0x14>
 8014a3a:	e9c0 120b 	strd	r1, r2, [r0, #44]	; 0x2c
 8014a3e:	f7ff bf00 	b.w	8014842 <_ZN8touchgfx4Line17updateCachedShapeEv>
 8014a42:	4770      	bx	lr

08014a44 <_ZN8touchgfx4Line9updateEndENS_7CWRUtil2Q5ES2_>:
 8014a44:	b570      	push	{r4, r5, r6, lr}
 8014a46:	6b43      	ldr	r3, [r0, #52]	; 0x34
 8014a48:	428b      	cmp	r3, r1
 8014a4a:	4604      	mov	r4, r0
 8014a4c:	460e      	mov	r6, r1
 8014a4e:	4615      	mov	r5, r2
 8014a50:	d102      	bne.n	8014a58 <_ZN8touchgfx4Line9updateEndENS_7CWRUtil2Q5ES2_+0x14>
 8014a52:	6b83      	ldr	r3, [r0, #56]	; 0x38
 8014a54:	4293      	cmp	r3, r2
 8014a56:	d00e      	beq.n	8014a76 <_ZN8touchgfx4Line9updateEndENS_7CWRUtil2Q5ES2_+0x32>
 8014a58:	6823      	ldr	r3, [r4, #0]
 8014a5a:	4620      	mov	r0, r4
 8014a5c:	699b      	ldr	r3, [r3, #24]
 8014a5e:	4798      	blx	r3
 8014a60:	4620      	mov	r0, r4
 8014a62:	e9c4 650d 	strd	r6, r5, [r4, #52]	; 0x34
 8014a66:	f7ff feec 	bl	8014842 <_ZN8touchgfx4Line17updateCachedShapeEv>
 8014a6a:	6823      	ldr	r3, [r4, #0]
 8014a6c:	4620      	mov	r0, r4
 8014a6e:	699b      	ldr	r3, [r3, #24]
 8014a70:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8014a74:	4718      	bx	r3
 8014a76:	bd70      	pop	{r4, r5, r6, pc}

08014a78 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>:
 8014a78:	f880 1040 	strb.w	r1, [r0, #64]	; 0x40
 8014a7c:	f7ff bee1 	b.w	8014842 <_ZN8touchgfx4Line17updateCachedShapeEv>

08014a80 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE>:
 8014a80:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8014a84:	4604      	mov	r4, r0
 8014a86:	b0a4      	sub	sp, #144	; 0x90
 8014a88:	6a85      	ldr	r5, [r0, #40]	; 0x28
 8014a8a:	460e      	mov	r6, r1
 8014a8c:	4601      	mov	r1, r0
 8014a8e:	a805      	add	r0, sp, #20
 8014a90:	f004 fe9c 	bl	80197cc <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8014a94:	6823      	ldr	r3, [r4, #0]
 8014a96:	4620      	mov	r0, r4
 8014a98:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8014a9a:	4798      	blx	r3
 8014a9c:	4633      	mov	r3, r6
 8014a9e:	9000      	str	r0, [sp, #0]
 8014aa0:	aa05      	add	r2, sp, #20
 8014aa2:	4629      	mov	r1, r5
 8014aa4:	a807      	add	r0, sp, #28
 8014aa6:	f015 fa4b 	bl	8029f40 <_ZN8touchgfx6CanvasC1EPKNS_15AbstractPainterERKNS_4RectES6_h>
 8014aaa:	2300      	movs	r3, #0
 8014aac:	9303      	str	r3, [sp, #12]
 8014aae:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
 8014ab2:	2b01      	cmp	r3, #1
 8014ab4:	d17c      	bne.n	8014bb0 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x130>
 8014ab6:	6c60      	ldr	r0, [r4, #68]	; 0x44
 8014ab8:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8014aba:	6d61      	ldr	r1, [r4, #84]	; 0x54
 8014abc:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8014abe:	1ac0      	subs	r0, r0, r3
 8014ac0:	eba1 0102 	sub.w	r1, r1, r2
 8014ac4:	d437      	bmi.n	8014b36 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0xb6>
 8014ac6:	2900      	cmp	r1, #0
 8014ac8:	aa03      	add	r2, sp, #12
 8014aca:	db2e      	blt.n	8014b2a <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0xaa>
 8014acc:	f7ff fe7a 	bl	80147c4 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
 8014ad0:	f100 065a 	add.w	r6, r0, #90	; 0x5a
 8014ad4:	6d62      	ldr	r2, [r4, #84]	; 0x54
 8014ad6:	6c61      	ldr	r1, [r4, #68]	; 0x44
 8014ad8:	a807      	add	r0, sp, #28
 8014ada:	f015 fb7d 	bl	802a1d8 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>
 8014ade:	6da2      	ldr	r2, [r4, #88]	; 0x58
 8014ae0:	6ca1      	ldr	r1, [r4, #72]	; 0x48
 8014ae2:	a807      	add	r0, sp, #28
 8014ae4:	f015 fbc5 	bl	802a272 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8014ae8:	6ee5      	ldr	r5, [r4, #108]	; 0x6c
 8014aea:	2db3      	cmp	r5, #179	; 0xb3
 8014aec:	dc33      	bgt.n	8014b56 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0xd6>
 8014aee:	eba6 0805 	sub.w	r8, r6, r5
 8014af2:	4640      	mov	r0, r8
 8014af4:	f7fe ff1a 	bl	801392c <_ZN8touchgfx7CWRUtil4sineEi>
 8014af8:	a904      	add	r1, sp, #16
 8014afa:	9004      	str	r0, [sp, #16]
 8014afc:	a803      	add	r0, sp, #12
 8014afe:	f7fe ff0a 	bl	8013916 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8014b02:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8014b04:	1847      	adds	r7, r0, r1
 8014b06:	f1c8 005a 	rsb	r0, r8, #90	; 0x5a
 8014b0a:	f7fe ff0f 	bl	801392c <_ZN8touchgfx7CWRUtil4sineEi>
 8014b0e:	a905      	add	r1, sp, #20
 8014b10:	9005      	str	r0, [sp, #20]
 8014b12:	a803      	add	r0, sp, #12
 8014b14:	f7fe feff 	bl	8013916 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8014b18:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 8014b1a:	4639      	mov	r1, r7
 8014b1c:	1a12      	subs	r2, r2, r0
 8014b1e:	a807      	add	r0, sp, #28
 8014b20:	f015 fba7 	bl	802a272 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8014b24:	6ee3      	ldr	r3, [r4, #108]	; 0x6c
 8014b26:	441d      	add	r5, r3
 8014b28:	e7df      	b.n	8014aea <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x6a>
 8014b2a:	4249      	negs	r1, r1
 8014b2c:	f7ff fe4a 	bl	80147c4 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
 8014b30:	f1c0 065a 	rsb	r6, r0, #90	; 0x5a
 8014b34:	e7ce      	b.n	8014ad4 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x54>
 8014b36:	2900      	cmp	r1, #0
 8014b38:	f1c0 0000 	rsb	r0, r0, #0
 8014b3c:	aa03      	add	r2, sp, #12
 8014b3e:	db04      	blt.n	8014b4a <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0xca>
 8014b40:	f7ff fe40 	bl	80147c4 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
 8014b44:	f5c0 7687 	rsb	r6, r0, #270	; 0x10e
 8014b48:	e7c4      	b.n	8014ad4 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x54>
 8014b4a:	4249      	negs	r1, r1
 8014b4c:	f7ff fe3a 	bl	80147c4 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
 8014b50:	f500 7687 	add.w	r6, r0, #270	; 0x10e
 8014b54:	e7be      	b.n	8014ad4 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x54>
 8014b56:	6de2      	ldr	r2, [r4, #92]	; 0x5c
 8014b58:	6ce1      	ldr	r1, [r4, #76]	; 0x4c
 8014b5a:	a807      	add	r0, sp, #28
 8014b5c:	f015 fb89 	bl	802a272 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8014b60:	6e22      	ldr	r2, [r4, #96]	; 0x60
 8014b62:	6d21      	ldr	r1, [r4, #80]	; 0x50
 8014b64:	a807      	add	r0, sp, #28
 8014b66:	f015 fb84 	bl	802a272 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8014b6a:	6ee5      	ldr	r5, [r4, #108]	; 0x6c
 8014b6c:	f1c5 05b4 	rsb	r5, r5, #180	; 0xb4
 8014b70:	2d00      	cmp	r5, #0
 8014b72:	dd31      	ble.n	8014bd8 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x158>
 8014b74:	eb05 0806 	add.w	r8, r5, r6
 8014b78:	4640      	mov	r0, r8
 8014b7a:	f7fe fed7 	bl	801392c <_ZN8touchgfx7CWRUtil4sineEi>
 8014b7e:	a904      	add	r1, sp, #16
 8014b80:	9004      	str	r0, [sp, #16]
 8014b82:	a803      	add	r0, sp, #12
 8014b84:	f7fe fec7 	bl	8013916 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8014b88:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 8014b8a:	1847      	adds	r7, r0, r1
 8014b8c:	f1c8 005a 	rsb	r0, r8, #90	; 0x5a
 8014b90:	f7fe fecc 	bl	801392c <_ZN8touchgfx7CWRUtil4sineEi>
 8014b94:	a905      	add	r1, sp, #20
 8014b96:	9005      	str	r0, [sp, #20]
 8014b98:	a803      	add	r0, sp, #12
 8014b9a:	f7fe febc 	bl	8013916 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8014b9e:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8014ba0:	4639      	mov	r1, r7
 8014ba2:	1a12      	subs	r2, r2, r0
 8014ba4:	a807      	add	r0, sp, #28
 8014ba6:	f015 fb64 	bl	802a272 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8014baa:	6ee3      	ldr	r3, [r4, #108]	; 0x6c
 8014bac:	1aed      	subs	r5, r5, r3
 8014bae:	e7df      	b.n	8014b70 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0xf0>
 8014bb0:	6d62      	ldr	r2, [r4, #84]	; 0x54
 8014bb2:	6c61      	ldr	r1, [r4, #68]	; 0x44
 8014bb4:	a807      	add	r0, sp, #28
 8014bb6:	f015 fb0f 	bl	802a1d8 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>
 8014bba:	6da2      	ldr	r2, [r4, #88]	; 0x58
 8014bbc:	6ca1      	ldr	r1, [r4, #72]	; 0x48
 8014bbe:	a807      	add	r0, sp, #28
 8014bc0:	f015 fb57 	bl	802a272 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8014bc4:	6de2      	ldr	r2, [r4, #92]	; 0x5c
 8014bc6:	6ce1      	ldr	r1, [r4, #76]	; 0x4c
 8014bc8:	a807      	add	r0, sp, #28
 8014bca:	f015 fb52 	bl	802a272 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8014bce:	6e22      	ldr	r2, [r4, #96]	; 0x60
 8014bd0:	6d21      	ldr	r1, [r4, #80]	; 0x50
 8014bd2:	a807      	add	r0, sp, #28
 8014bd4:	f015 fb4d 	bl	802a272 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8014bd8:	21ff      	movs	r1, #255	; 0xff
 8014bda:	a807      	add	r0, sp, #28
 8014bdc:	f015 fa44 	bl	802a068 <_ZN8touchgfx6Canvas6renderEh>
 8014be0:	4b04      	ldr	r3, [pc, #16]	; (8014bf4 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x174>)
 8014be2:	9307      	str	r3, [sp, #28]
 8014be4:	4604      	mov	r4, r0
 8014be6:	a80c      	add	r0, sp, #48	; 0x30
 8014be8:	f000 fd3a 	bl	8015660 <_ZN8touchgfx7OutlineD1Ev>
 8014bec:	4620      	mov	r0, r4
 8014bee:	b024      	add	sp, #144	; 0x90
 8014bf0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8014bf4:	080301a4 	.word	0x080301a4

08014bf8 <_ZNK8touchgfx8TextArea12getWildcard1Ev>:
 8014bf8:	2000      	movs	r0, #0
 8014bfa:	4770      	bx	lr

08014bfc <_ZNK8touchgfx8TextArea12getAlignmentEv>:
 8014bfc:	4b07      	ldr	r3, [pc, #28]	; (8014c1c <_ZNK8touchgfx8TextArea12getAlignmentEv+0x20>)
 8014bfe:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 8014c00:	881b      	ldrh	r3, [r3, #0]
 8014c02:	4293      	cmp	r3, r2
 8014c04:	bf81      	itttt	hi
 8014c06:	4b06      	ldrhi	r3, [pc, #24]	; (8014c20 <_ZNK8touchgfx8TextArea12getAlignmentEv+0x24>)
 8014c08:	681b      	ldrhi	r3, [r3, #0]
 8014c0a:	eb03 0342 	addhi.w	r3, r3, r2, lsl #1
 8014c0e:	7858      	ldrbhi	r0, [r3, #1]
 8014c10:	bf8c      	ite	hi
 8014c12:	f000 0003 	andhi.w	r0, r0, #3
 8014c16:	2000      	movls	r0, #0
 8014c18:	4770      	bx	lr
 8014c1a:	bf00      	nop
 8014c1c:	20006c90 	.word	0x20006c90
 8014c20:	20006c8c 	.word	0x20006c8c

08014c24 <_ZNK8touchgfx8TextArea13getTextHeightEv>:
 8014c24:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8014c28:	4b10      	ldr	r3, [pc, #64]	; (8014c6c <_ZNK8touchgfx8TextArea13getTextHeightEv+0x48>)
 8014c2a:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 8014c2c:	881b      	ldrh	r3, [r3, #0]
 8014c2e:	428b      	cmp	r3, r1
 8014c30:	4604      	mov	r4, r0
 8014c32:	d918      	bls.n	8014c66 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x42>
 8014c34:	6803      	ldr	r3, [r0, #0]
 8014c36:	6f9d      	ldr	r5, [r3, #120]	; 0x78
 8014c38:	4b0d      	ldr	r3, [pc, #52]	; (8014c70 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x4c>)
 8014c3a:	6818      	ldr	r0, [r3, #0]
 8014c3c:	f7fa f9ec 	bl	800f018 <_ZNK8touchgfx5Texts7getTextEt>
 8014c40:	6823      	ldr	r3, [r4, #0]
 8014c42:	4606      	mov	r6, r0
 8014c44:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8014c46:	4620      	mov	r0, r4
 8014c48:	4798      	blx	r3
 8014c4a:	6823      	ldr	r3, [r4, #0]
 8014c4c:	4607      	mov	r7, r0
 8014c4e:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8014c52:	4620      	mov	r0, r4
 8014c54:	4798      	blx	r3
 8014c56:	463a      	mov	r2, r7
 8014c58:	4603      	mov	r3, r0
 8014c5a:	4631      	mov	r1, r6
 8014c5c:	4620      	mov	r0, r4
 8014c5e:	46ac      	mov	ip, r5
 8014c60:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8014c64:	4760      	bx	ip
 8014c66:	2000      	movs	r0, #0
 8014c68:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8014c6c:	20006c90 	.word	0x20006c90
 8014c70:	20006c98 	.word	0x20006c98

08014c74 <_ZNK8touchgfx8TextArea12getTextWidthEv>:
 8014c74:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8014c78:	4b17      	ldr	r3, [pc, #92]	; (8014cd8 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x64>)
 8014c7a:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 8014c7c:	881b      	ldrh	r3, [r3, #0]
 8014c7e:	428b      	cmp	r3, r1
 8014c80:	4604      	mov	r4, r0
 8014c82:	d926      	bls.n	8014cd2 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x5e>
 8014c84:	4b15      	ldr	r3, [pc, #84]	; (8014cdc <_ZNK8touchgfx8TextArea12getTextWidthEv+0x68>)
 8014c86:	681b      	ldr	r3, [r3, #0]
 8014c88:	eb03 0241 	add.w	r2, r3, r1, lsl #1
 8014c8c:	f813 0011 	ldrb.w	r0, [r3, r1, lsl #1]
 8014c90:	4b13      	ldr	r3, [pc, #76]	; (8014ce0 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x6c>)
 8014c92:	7855      	ldrb	r5, [r2, #1]
 8014c94:	681b      	ldr	r3, [r3, #0]
 8014c96:	f853 6020 	ldr.w	r6, [r3, r0, lsl #2]
 8014c9a:	6833      	ldr	r3, [r6, #0]
 8014c9c:	69df      	ldr	r7, [r3, #28]
 8014c9e:	4b11      	ldr	r3, [pc, #68]	; (8014ce4 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x70>)
 8014ca0:	6818      	ldr	r0, [r3, #0]
 8014ca2:	f7fa f9b9 	bl	800f018 <_ZNK8touchgfx5Texts7getTextEt>
 8014ca6:	6823      	ldr	r3, [r4, #0]
 8014ca8:	4680      	mov	r8, r0
 8014caa:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8014cac:	4620      	mov	r0, r4
 8014cae:	4798      	blx	r3
 8014cb0:	6823      	ldr	r3, [r4, #0]
 8014cb2:	4681      	mov	r9, r0
 8014cb4:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8014cb8:	4620      	mov	r0, r4
 8014cba:	4798      	blx	r3
 8014cbc:	f3c5 0581 	ubfx	r5, r5, #2, #2
 8014cc0:	9000      	str	r0, [sp, #0]
 8014cc2:	464b      	mov	r3, r9
 8014cc4:	4642      	mov	r2, r8
 8014cc6:	4629      	mov	r1, r5
 8014cc8:	4630      	mov	r0, r6
 8014cca:	47b8      	blx	r7
 8014ccc:	b003      	add	sp, #12
 8014cce:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8014cd2:	2000      	movs	r0, #0
 8014cd4:	e7fa      	b.n	8014ccc <_ZNK8touchgfx8TextArea12getTextWidthEv+0x58>
 8014cd6:	bf00      	nop
 8014cd8:	20006c90 	.word	0x20006c90
 8014cdc:	20006c8c 	.word	0x20006c8c
 8014ce0:	20006c94 	.word	0x20006c94
 8014ce4:	20006c98 	.word	0x20006c98

08014ce8 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz>:
 8014ce8:	b40e      	push	{r1, r2, r3}
 8014cea:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8014cee:	4b2f      	ldr	r3, [pc, #188]	; (8014dac <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc4>)
 8014cf0:	881a      	ldrh	r2, [r3, #0]
 8014cf2:	8d83      	ldrh	r3, [r0, #44]	; 0x2c
 8014cf4:	429a      	cmp	r2, r3
 8014cf6:	b09d      	sub	sp, #116	; 0x74
 8014cf8:	4604      	mov	r4, r0
 8014cfa:	d954      	bls.n	8014da6 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xbe>
 8014cfc:	f8df 90b0 	ldr.w	r9, [pc, #176]	; 8014db0 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc8>
 8014d00:	f8df 80b0 	ldr.w	r8, [pc, #176]	; 8014db4 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xcc>
 8014d04:	aa26      	add	r2, sp, #152	; 0x98
 8014d06:	9202      	str	r2, [sp, #8]
 8014d08:	f8d9 2000 	ldr.w	r2, [r9]
 8014d0c:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 8014d10:	f8d8 3000 	ldr.w	r3, [r8]
 8014d14:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 8014d18:	682b      	ldr	r3, [r5, #0]
 8014d1a:	4628      	mov	r0, r5
 8014d1c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8014d1e:	4798      	blx	r3
 8014d20:	b207      	sxth	r7, r0
 8014d22:	4606      	mov	r6, r0
 8014d24:	a803      	add	r0, sp, #12
 8014d26:	f005 fa02 	bl	801a12e <_ZN8touchgfx12TextProviderC1Ev>
 8014d2a:	682b      	ldr	r3, [r5, #0]
 8014d2c:	4628      	mov	r0, r5
 8014d2e:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8014d30:	4798      	blx	r3
 8014d32:	682b      	ldr	r3, [r5, #0]
 8014d34:	4682      	mov	sl, r0
 8014d36:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8014d38:	4628      	mov	r0, r5
 8014d3a:	4798      	blx	r3
 8014d3c:	4653      	mov	r3, sl
 8014d3e:	9000      	str	r0, [sp, #0]
 8014d40:	9a02      	ldr	r2, [sp, #8]
 8014d42:	9925      	ldr	r1, [sp, #148]	; 0x94
 8014d44:	a803      	add	r0, sp, #12
 8014d46:	f005 fa4d 	bl	801a1e4 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8014d4a:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 8014d4c:	f8d9 3000 	ldr.w	r3, [r9]
 8014d50:	f894 c037 	ldrb.w	ip, [r4, #55]	; 0x37
 8014d54:	8925      	ldrh	r5, [r4, #8]
 8014d56:	f813 0012 	ldrb.w	r0, [r3, r2, lsl #1]
 8014d5a:	eb03 0142 	add.w	r1, r3, r2, lsl #1
 8014d5e:	eba5 050c 	sub.w	r5, r5, ip
 8014d62:	784a      	ldrb	r2, [r1, #1]
 8014d64:	f8d8 3000 	ldr.w	r3, [r8]
 8014d68:	f894 1039 	ldrb.w	r1, [r4, #57]	; 0x39
 8014d6c:	b22d      	sxth	r5, r5
 8014d6e:	9500      	str	r5, [sp, #0]
 8014d70:	f853 3020 	ldr.w	r3, [r3, r0, lsl #2]
 8014d74:	f3c2 0281 	ubfx	r2, r2, #2, #2
 8014d78:	a803      	add	r0, sp, #12
 8014d7a:	f002 ff4f 	bl	8017c1c <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>
 8014d7e:	f9b4 2034 	ldrsh.w	r2, [r4, #52]	; 0x34
 8014d82:	18b9      	adds	r1, r7, r2
 8014d84:	2900      	cmp	r1, #0
 8014d86:	b203      	sxth	r3, r0
 8014d88:	dd0b      	ble.n	8014da2 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xba>
 8014d8a:	3b01      	subs	r3, #1
 8014d8c:	fb13 f302 	smulbb	r3, r3, r2
 8014d90:	fb16 3300 	smlabb	r3, r6, r0, r3
 8014d94:	b21f      	sxth	r7, r3
 8014d96:	4638      	mov	r0, r7
 8014d98:	b01d      	add	sp, #116	; 0x74
 8014d9a:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8014d9e:	b003      	add	sp, #12
 8014da0:	4770      	bx	lr
 8014da2:	2b00      	cmp	r3, #0
 8014da4:	dcf7      	bgt.n	8014d96 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xae>
 8014da6:	2700      	movs	r7, #0
 8014da8:	e7f5      	b.n	8014d96 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xae>
 8014daa:	bf00      	nop
 8014dac:	20006c90 	.word	0x20006c90
 8014db0:	20006c8c 	.word	0x20006c8c
 8014db4:	20006c94 	.word	0x20006c94

08014db8 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>:
 8014db8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014dbc:	4bbc      	ldr	r3, [pc, #752]	; (80150b0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2f8>)
 8014dbe:	460c      	mov	r4, r1
 8014dc0:	881b      	ldrh	r3, [r3, #0]
 8014dc2:	8d89      	ldrh	r1, [r1, #44]	; 0x2c
 8014dc4:	428b      	cmp	r3, r1
 8014dc6:	b0a9      	sub	sp, #164	; 0xa4
 8014dc8:	4680      	mov	r8, r0
 8014dca:	d809      	bhi.n	8014de0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x28>
 8014dcc:	2300      	movs	r3, #0
 8014dce:	f04f 32ff 	mov.w	r2, #4294967295
 8014dd2:	e9c0 3200 	strd	r3, r2, [r0]
 8014dd6:	6083      	str	r3, [r0, #8]
 8014dd8:	4640      	mov	r0, r8
 8014dda:	b029      	add	sp, #164	; 0xa4
 8014ddc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8014de0:	4eb4      	ldr	r6, [pc, #720]	; (80150b4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2fc>)
 8014de2:	6833      	ldr	r3, [r6, #0]
 8014de4:	f813 2011 	ldrb.w	r2, [r3, r1, lsl #1]
 8014de8:	4bb3      	ldr	r3, [pc, #716]	; (80150b8 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x300>)
 8014dea:	681b      	ldr	r3, [r3, #0]
 8014dec:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 8014df0:	4bb2      	ldr	r3, [pc, #712]	; (80150bc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x304>)
 8014df2:	6818      	ldr	r0, [r3, #0]
 8014df4:	f7fa f910 	bl	800f018 <_ZNK8touchgfx5Texts7getTextEt>
 8014df8:	682b      	ldr	r3, [r5, #0]
 8014dfa:	4681      	mov	r9, r0
 8014dfc:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8014dfe:	4628      	mov	r0, r5
 8014e00:	4798      	blx	r3
 8014e02:	8ea7      	ldrh	r7, [r4, #52]	; 0x34
 8014e04:	b203      	sxth	r3, r0
 8014e06:	4407      	add	r7, r0
 8014e08:	9304      	str	r3, [sp, #16]
 8014e0a:	b2bb      	uxth	r3, r7
 8014e0c:	9303      	str	r3, [sp, #12]
 8014e0e:	f894 3039 	ldrb.w	r3, [r4, #57]	; 0x39
 8014e12:	4682      	mov	sl, r0
 8014e14:	a80f      	add	r0, sp, #60	; 0x3c
 8014e16:	2b00      	cmp	r3, #0
 8014e18:	f040 80a6 	bne.w	8014f68 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x1b0>
 8014e1c:	f005 f987 	bl	801a12e <_ZN8touchgfx12TextProviderC1Ev>
 8014e20:	682b      	ldr	r3, [r5, #0]
 8014e22:	4628      	mov	r0, r5
 8014e24:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8014e26:	4798      	blx	r3
 8014e28:	682b      	ldr	r3, [r5, #0]
 8014e2a:	4606      	mov	r6, r0
 8014e2c:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8014e2e:	4628      	mov	r0, r5
 8014e30:	4798      	blx	r3
 8014e32:	6823      	ldr	r3, [r4, #0]
 8014e34:	4607      	mov	r7, r0
 8014e36:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8014e38:	4620      	mov	r0, r4
 8014e3a:	4798      	blx	r3
 8014e3c:	6823      	ldr	r3, [r4, #0]
 8014e3e:	4683      	mov	fp, r0
 8014e40:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8014e44:	4620      	mov	r0, r4
 8014e46:	4798      	blx	r3
 8014e48:	463b      	mov	r3, r7
 8014e4a:	e9cd b000 	strd	fp, r0, [sp]
 8014e4e:	4649      	mov	r1, r9
 8014e50:	4632      	mov	r2, r6
 8014e52:	a80f      	add	r0, sp, #60	; 0x3c
 8014e54:	f005 f9db 	bl	801a20e <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
 8014e58:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 8014e5c:	f8df b254 	ldr.w	fp, [pc, #596]	; 80150b4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2fc>
 8014e60:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 8014e64:	f04f 0600 	mov.w	r6, #0
 8014e68:	bf0c      	ite	eq
 8014e6a:	f9b4 900a 	ldrsheq.w	r9, [r4, #10]
 8014e6e:	f9b4 9008 	ldrshne.w	r9, [r4, #8]
 8014e72:	4637      	mov	r7, r6
 8014e74:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 8014e76:	f8db 3000 	ldr.w	r3, [fp]
 8014e7a:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 8014e7e:	4629      	mov	r1, r5
 8014e80:	785b      	ldrb	r3, [r3, #1]
 8014e82:	f647 72ff 	movw	r2, #32767	; 0x7fff
 8014e86:	f3c3 0381 	ubfx	r3, r3, #2, #2
 8014e8a:	a80f      	add	r0, sp, #60	; 0x3c
 8014e8c:	f001 fff1 	bl	8016e72 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
 8014e90:	9b03      	ldr	r3, [sp, #12]
 8014e92:	4286      	cmp	r6, r0
 8014e94:	bfb8      	it	lt
 8014e96:	4606      	movlt	r6, r0
 8014e98:	3701      	adds	r7, #1
 8014e9a:	eba9 0903 	sub.w	r9, r9, r3
 8014e9e:	a80f      	add	r0, sp, #60	; 0x3c
 8014ea0:	b236      	sxth	r6, r6
 8014ea2:	b2bf      	uxth	r7, r7
 8014ea4:	fa0f f989 	sxth.w	r9, r9
 8014ea8:	f005 f968 	bl	801a17c <_ZN8touchgfx12TextProvider11endOfStringEv>
 8014eac:	b918      	cbnz	r0, 8014eb6 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 8014eae:	7a2b      	ldrb	r3, [r5, #8]
 8014eb0:	444b      	add	r3, r9
 8014eb2:	2b00      	cmp	r3, #0
 8014eb4:	dcde      	bgt.n	8014e74 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xbc>
 8014eb6:	9b03      	ldr	r3, [sp, #12]
 8014eb8:	9a04      	ldr	r2, [sp, #16]
 8014eba:	f895 9009 	ldrb.w	r9, [r5, #9]
 8014ebe:	fb13 f707 	smulbb	r7, r3, r7
 8014ec2:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 8014ec4:	1aff      	subs	r7, r7, r3
 8014ec6:	b2bf      	uxth	r7, r7
 8014ec8:	b23b      	sxth	r3, r7
 8014eca:	429a      	cmp	r2, r3
 8014ecc:	bfa8      	it	ge
 8014ece:	4657      	movge	r7, sl
 8014ed0:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 8014ed4:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 8014ed8:	6823      	ldr	r3, [r4, #0]
 8014eda:	bf08      	it	eq
 8014edc:	f9b4 a008 	ldrsheq.w	sl, [r4, #8]
 8014ee0:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8014ee2:	bf18      	it	ne
 8014ee4:	f9b4 a00a 	ldrshne.w	sl, [r4, #10]
 8014ee8:	4620      	mov	r0, r4
 8014eea:	4798      	blx	r3
 8014eec:	444f      	add	r7, r9
 8014eee:	fa1f f987 	uxth.w	r9, r7
 8014ef2:	2801      	cmp	r0, #1
 8014ef4:	fa0f f789 	sxth.w	r7, r9
 8014ef8:	b2b3      	uxth	r3, r6
 8014efa:	f000 80e1 	beq.w	80150c0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x308>
 8014efe:	2802      	cmp	r0, #2
 8014f00:	f894 6037 	ldrb.w	r6, [r4, #55]	; 0x37
 8014f04:	f000 80e2 	beq.w	80150cc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x314>
 8014f08:	7aea      	ldrb	r2, [r5, #11]
 8014f0a:	7b2d      	ldrb	r5, [r5, #12]
 8014f0c:	b236      	sxth	r6, r6
 8014f0e:	1ab6      	subs	r6, r6, r2
 8014f10:	442a      	add	r2, r5
 8014f12:	4413      	add	r3, r2
 8014f14:	f894 2038 	ldrb.w	r2, [r4, #56]	; 0x38
 8014f18:	fa1f fa86 	uxth.w	sl, r6
 8014f1c:	b29b      	uxth	r3, r3
 8014f1e:	2a02      	cmp	r2, #2
 8014f20:	fa0f fb8a 	sxth.w	fp, sl
 8014f24:	b21e      	sxth	r6, r3
 8014f26:	f000 80d5 	beq.w	80150d4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x31c>
 8014f2a:	2a03      	cmp	r2, #3
 8014f2c:	f000 80dd 	beq.w	80150ea <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x332>
 8014f30:	2a01      	cmp	r2, #1
 8014f32:	f040 80e5 	bne.w	8015100 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x348>
 8014f36:	8925      	ldrh	r5, [r4, #8]
 8014f38:	4633      	mov	r3, r6
 8014f3a:	eba5 0909 	sub.w	r9, r5, r9
 8014f3e:	463e      	mov	r6, r7
 8014f40:	465d      	mov	r5, fp
 8014f42:	461f      	mov	r7, r3
 8014f44:	fa0f fb89 	sxth.w	fp, r9
 8014f48:	4b5c      	ldr	r3, [pc, #368]	; (80150bc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x304>)
 8014f4a:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 8014f4c:	6818      	ldr	r0, [r3, #0]
 8014f4e:	f7fa f863 	bl	800f018 <_ZNK8touchgfx5Texts7getTextEt>
 8014f52:	f8a8 b000 	strh.w	fp, [r8]
 8014f56:	f8a8 5002 	strh.w	r5, [r8, #2]
 8014f5a:	f8a8 6004 	strh.w	r6, [r8, #4]
 8014f5e:	f8a8 7006 	strh.w	r7, [r8, #6]
 8014f62:	f8c8 0008 	str.w	r0, [r8, #8]
 8014f66:	e737      	b.n	8014dd8 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x20>
 8014f68:	f005 f8e1 	bl	801a12e <_ZN8touchgfx12TextProviderC1Ev>
 8014f6c:	682b      	ldr	r3, [r5, #0]
 8014f6e:	4628      	mov	r0, r5
 8014f70:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8014f72:	4798      	blx	r3
 8014f74:	682b      	ldr	r3, [r5, #0]
 8014f76:	4607      	mov	r7, r0
 8014f78:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8014f7a:	4628      	mov	r0, r5
 8014f7c:	4798      	blx	r3
 8014f7e:	6823      	ldr	r3, [r4, #0]
 8014f80:	4683      	mov	fp, r0
 8014f82:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8014f84:	4620      	mov	r0, r4
 8014f86:	4798      	blx	r3
 8014f88:	6822      	ldr	r2, [r4, #0]
 8014f8a:	9005      	str	r0, [sp, #20]
 8014f8c:	f8d2 2080 	ldr.w	r2, [r2, #128]	; 0x80
 8014f90:	4620      	mov	r0, r4
 8014f92:	4790      	blx	r2
 8014f94:	9b05      	ldr	r3, [sp, #20]
 8014f96:	9001      	str	r0, [sp, #4]
 8014f98:	463a      	mov	r2, r7
 8014f9a:	4649      	mov	r1, r9
 8014f9c:	9300      	str	r3, [sp, #0]
 8014f9e:	a80f      	add	r0, sp, #60	; 0x3c
 8014fa0:	465b      	mov	r3, fp
 8014fa2:	f005 f934 	bl	801a20e <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
 8014fa6:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 8014faa:	f9b4 9008 	ldrsh.w	r9, [r4, #8]
 8014fae:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 8014fb0:	f894 0039 	ldrb.w	r0, [r4, #57]	; 0x39
 8014fb4:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 8014fb8:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 8014fbc:	bf0a      	itet	eq
 8014fbe:	464a      	moveq	r2, r9
 8014fc0:	461a      	movne	r2, r3
 8014fc2:	4699      	moveq	r9, r3
 8014fc4:	f894 3037 	ldrb.w	r3, [r4, #55]	; 0x37
 8014fc8:	1ad2      	subs	r2, r2, r3
 8014fca:	6833      	ldr	r3, [r6, #0]
 8014fcc:	f9b4 6034 	ldrsh.w	r6, [r4, #52]	; 0x34
 8014fd0:	eb03 0341 	add.w	r3, r3, r1, lsl #1
 8014fd4:	af0f      	add	r7, sp, #60	; 0x3c
 8014fd6:	7859      	ldrb	r1, [r3, #1]
 8014fd8:	9707      	str	r7, [sp, #28]
 8014fda:	2300      	movs	r3, #0
 8014fdc:	f3c1 0181 	ubfx	r1, r1, #2, #2
 8014fe0:	f8ad 3018 	strh.w	r3, [sp, #24]
 8014fe4:	f88d 1020 	strb.w	r1, [sp, #32]
 8014fe8:	f88d 0021 	strb.w	r0, [sp, #33]	; 0x21
 8014fec:	9509      	str	r5, [sp, #36]	; 0x24
 8014fee:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 8014ff2:	f8ad 902a 	strh.w	r9, [sp, #42]	; 0x2a
 8014ff6:	f8ad 602c 	strh.w	r6, [sp, #44]	; 0x2c
 8014ffa:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 8014ffe:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 8015002:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 8015006:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 801500a:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 801500e:	f8ad 3038 	strh.w	r3, [sp, #56]	; 0x38
 8015012:	f88d 303a 	strb.w	r3, [sp, #58]	; 0x3a
 8015016:	b350      	cbz	r0, 801506e <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 8015018:	682b      	ldr	r3, [r5, #0]
 801501a:	4628      	mov	r0, r5
 801501c:	695b      	ldr	r3, [r3, #20]
 801501e:	4798      	blx	r3
 8015020:	4607      	mov	r7, r0
 8015022:	b320      	cbz	r0, 801506e <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 8015024:	9809      	ldr	r0, [sp, #36]	; 0x24
 8015026:	6803      	ldr	r3, [r0, #0]
 8015028:	4639      	mov	r1, r7
 801502a:	68db      	ldr	r3, [r3, #12]
 801502c:	4798      	blx	r3
 801502e:	4606      	mov	r6, r0
 8015030:	b1e8      	cbz	r0, 801506e <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 8015032:	7b43      	ldrb	r3, [r0, #13]
 8015034:	7a82      	ldrb	r2, [r0, #10]
 8015036:	005b      	lsls	r3, r3, #1
 8015038:	f403 7380 	and.w	r3, r3, #256	; 0x100
 801503c:	4313      	orrs	r3, r2
 801503e:	f8ad 3038 	strh.w	r3, [sp, #56]	; 0x38
 8015042:	f89d 3021 	ldrb.w	r3, [sp, #33]	; 0x21
 8015046:	2b06      	cmp	r3, #6
 8015048:	d111      	bne.n	801506e <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 801504a:	9809      	ldr	r0, [sp, #36]	; 0x24
 801504c:	6803      	ldr	r3, [r0, #0]
 801504e:	4632      	mov	r2, r6
 8015050:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8015052:	4639      	mov	r1, r7
 8015054:	4798      	blx	r3
 8015056:	7b73      	ldrb	r3, [r6, #13]
 8015058:	005b      	lsls	r3, r3, #1
 801505a:	f403 7280 	and.w	r2, r3, #256	; 0x100
 801505e:	7ab3      	ldrb	r3, [r6, #10]
 8015060:	4313      	orrs	r3, r2
 8015062:	4418      	add	r0, r3
 8015064:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 8015068:	4418      	add	r0, r3
 801506a:	f8ad 0038 	strh.w	r0, [sp, #56]	; 0x38
 801506e:	2600      	movs	r6, #0
 8015070:	4637      	mov	r7, r6
 8015072:	a806      	add	r0, sp, #24
 8015074:	f002 fcce 	bl	8017a14 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 8015078:	f8bd 0036 	ldrh.w	r0, [sp, #54]	; 0x36
 801507c:	9b03      	ldr	r3, [sp, #12]
 801507e:	4286      	cmp	r6, r0
 8015080:	eba9 0903 	sub.w	r9, r9, r3
 8015084:	f8bd 3018 	ldrh.w	r3, [sp, #24]
 8015088:	bfb8      	it	lt
 801508a:	4606      	movlt	r6, r0
 801508c:	3701      	adds	r7, #1
 801508e:	b236      	sxth	r6, r6
 8015090:	b2bf      	uxth	r7, r7
 8015092:	fa0f f989 	sxth.w	r9, r9
 8015096:	2b00      	cmp	r3, #0
 8015098:	f43f af0d 	beq.w	8014eb6 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 801509c:	f89d 303a 	ldrb.w	r3, [sp, #58]	; 0x3a
 80150a0:	2b00      	cmp	r3, #0
 80150a2:	f47f af08 	bne.w	8014eb6 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 80150a6:	7a2b      	ldrb	r3, [r5, #8]
 80150a8:	444b      	add	r3, r9
 80150aa:	2b00      	cmp	r3, #0
 80150ac:	dce1      	bgt.n	8015072 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2ba>
 80150ae:	e702      	b.n	8014eb6 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 80150b0:	20006c90 	.word	0x20006c90
 80150b4:	20006c8c 	.word	0x20006c8c
 80150b8:	20006c94 	.word	0x20006c94
 80150bc:	20006c98 	.word	0x20006c98
 80150c0:	ebaa 0606 	sub.w	r6, sl, r6
 80150c4:	2002      	movs	r0, #2
 80150c6:	fb96 f6f0 	sdiv	r6, r6, r0
 80150ca:	e71d      	b.n	8014f08 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x150>
 80150cc:	441e      	add	r6, r3
 80150ce:	ebaa 0606 	sub.w	r6, sl, r6
 80150d2:	e719      	b.n	8014f08 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x150>
 80150d4:	8925      	ldrh	r5, [r4, #8]
 80150d6:	1aed      	subs	r5, r5, r3
 80150d8:	eba5 050a 	sub.w	r5, r5, sl
 80150dc:	fa0f fb85 	sxth.w	fp, r5
 80150e0:	8965      	ldrh	r5, [r4, #10]
 80150e2:	eba5 0509 	sub.w	r5, r5, r9
 80150e6:	b22d      	sxth	r5, r5
 80150e8:	e72e      	b.n	8014f48 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x190>
 80150ea:	8965      	ldrh	r5, [r4, #10]
 80150ec:	1aed      	subs	r5, r5, r3
 80150ee:	eba5 050a 	sub.w	r5, r5, sl
 80150f2:	4633      	mov	r3, r6
 80150f4:	b22d      	sxth	r5, r5
 80150f6:	463e      	mov	r6, r7
 80150f8:	f04f 0b00 	mov.w	fp, #0
 80150fc:	461f      	mov	r7, r3
 80150fe:	e723      	b.n	8014f48 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x190>
 8015100:	2500      	movs	r5, #0
 8015102:	e721      	b.n	8014f48 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x190>

08015104 <_ZNK8touchgfx8TextArea17invalidateContentEv>:
 8015104:	b513      	push	{r0, r1, r4, lr}
 8015106:	f890 3036 	ldrb.w	r3, [r0, #54]	; 0x36
 801510a:	4604      	mov	r4, r0
 801510c:	b1fb      	cbz	r3, 801514e <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 801510e:	4b16      	ldr	r3, [pc, #88]	; (8015168 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x64>)
 8015110:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 8015112:	881b      	ldrh	r3, [r3, #0]
 8015114:	428b      	cmp	r3, r1
 8015116:	d91a      	bls.n	801514e <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 8015118:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 801511c:	2b00      	cmp	r3, #0
 801511e:	dd16      	ble.n	801514e <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 8015120:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 8015124:	2b00      	cmp	r3, #0
 8015126:	dd12      	ble.n	801514e <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 8015128:	4b10      	ldr	r3, [pc, #64]	; (801516c <_ZNK8touchgfx8TextArea17invalidateContentEv+0x68>)
 801512a:	6818      	ldr	r0, [r3, #0]
 801512c:	f7f9 ff74 	bl	800f018 <_ZNK8touchgfx5Texts7getTextEt>
 8015130:	f9b4 3042 	ldrsh.w	r3, [r4, #66]	; 0x42
 8015134:	6822      	ldr	r2, [r4, #0]
 8015136:	2b00      	cmp	r3, #0
 8015138:	db06      	blt.n	8015148 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x44>
 801513a:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	; 0x40
 801513e:	2b00      	cmp	r3, #0
 8015140:	db02      	blt.n	8015148 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x44>
 8015142:	6c63      	ldr	r3, [r4, #68]	; 0x44
 8015144:	4298      	cmp	r0, r3
 8015146:	d004      	beq.n	8015152 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4e>
 8015148:	6953      	ldr	r3, [r2, #20]
 801514a:	4620      	mov	r0, r4
 801514c:	4798      	blx	r3
 801514e:	b002      	add	sp, #8
 8015150:	bd10      	pop	{r4, pc}
 8015152:	f104 013c 	add.w	r1, r4, #60	; 0x3c
 8015156:	c903      	ldmia	r1, {r0, r1}
 8015158:	466b      	mov	r3, sp
 801515a:	e883 0003 	stmia.w	r3, {r0, r1}
 801515e:	6912      	ldr	r2, [r2, #16]
 8015160:	4619      	mov	r1, r3
 8015162:	4620      	mov	r0, r4
 8015164:	4790      	blx	r2
 8015166:	e7f2      	b.n	801514e <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 8015168:	20006c90 	.word	0x20006c90
 801516c:	20006c98 	.word	0x20006c98

08015170 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE>:
 8015170:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8015174:	4b44      	ldr	r3, [pc, #272]	; (8015288 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x118>)
 8015176:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 8015178:	881b      	ldrh	r3, [r3, #0]
 801517a:	4293      	cmp	r3, r2
 801517c:	b08e      	sub	sp, #56	; 0x38
 801517e:	4604      	mov	r4, r0
 8015180:	d97e      	bls.n	8015280 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 8015182:	6808      	ldr	r0, [r1, #0]
 8015184:	4d41      	ldr	r5, [pc, #260]	; (801528c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x11c>)
 8015186:	6849      	ldr	r1, [r1, #4]
 8015188:	ab05      	add	r3, sp, #20
 801518a:	c303      	stmia	r3!, {r0, r1}
 801518c:	4611      	mov	r1, r2
 801518e:	6828      	ldr	r0, [r5, #0]
 8015190:	f7f9 ff42 	bl	800f018 <_ZNK8touchgfx5Texts7getTextEt>
 8015194:	f9b4 3042 	ldrsh.w	r3, [r4, #66]	; 0x42
 8015198:	2b00      	cmp	r3, #0
 801519a:	db11      	blt.n	80151c0 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 801519c:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	; 0x40
 80151a0:	2b00      	cmp	r3, #0
 80151a2:	db0d      	blt.n	80151c0 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 80151a4:	6c63      	ldr	r3, [r4, #68]	; 0x44
 80151a6:	4298      	cmp	r0, r3
 80151a8:	d10a      	bne.n	80151c0 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 80151aa:	f104 023c 	add.w	r2, r4, #60	; 0x3c
 80151ae:	e892 0003 	ldmia.w	r2, {r0, r1}
 80151b2:	ab09      	add	r3, sp, #36	; 0x24
 80151b4:	e883 0003 	stmia.w	r3, {r0, r1}
 80151b8:	4619      	mov	r1, r3
 80151ba:	a805      	add	r0, sp, #20
 80151bc:	f7fd fb6a 	bl	8012894 <_ZN8touchgfx4RectaNERKS0_>
 80151c0:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 80151c4:	2b00      	cmp	r3, #0
 80151c6:	dd5b      	ble.n	8015280 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 80151c8:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
 80151cc:	2b00      	cmp	r3, #0
 80151ce:	dd57      	ble.n	8015280 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 80151d0:	4f2f      	ldr	r7, [pc, #188]	; (8015290 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x120>)
 80151d2:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 80151d4:	683b      	ldr	r3, [r7, #0]
 80151d6:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
 80151da:	4b2e      	ldr	r3, [pc, #184]	; (8015294 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x124>)
 80151dc:	681b      	ldr	r3, [r3, #0]
 80151de:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 80151e2:	2e00      	cmp	r6, #0
 80151e4:	d04c      	beq.n	8015280 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 80151e6:	6823      	ldr	r3, [r4, #0]
 80151e8:	f894 8036 	ldrb.w	r8, [r4, #54]	; 0x36
 80151ec:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 80151ee:	4620      	mov	r0, r4
 80151f0:	4798      	blx	r3
 80151f2:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 80151f4:	683b      	ldr	r3, [r7, #0]
 80151f6:	f9b4 c034 	ldrsh.w	ip, [r4, #52]	; 0x34
 80151fa:	f894 e038 	ldrb.w	lr, [r4, #56]	; 0x38
 80151fe:	f894 7037 	ldrb.w	r7, [r4, #55]	; 0x37
 8015202:	6b21      	ldr	r1, [r4, #48]	; 0x30
 8015204:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 8015208:	f894 2039 	ldrb.w	r2, [r4, #57]	; 0x39
 801520c:	785b      	ldrb	r3, [r3, #1]
 801520e:	9609      	str	r6, [sp, #36]	; 0x24
 8015210:	f3c3 0381 	ubfx	r3, r3, #2, #2
 8015214:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8015218:	4b1f      	ldr	r3, [pc, #124]	; (8015298 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x128>)
 801521a:	f88d 0028 	strb.w	r0, [sp, #40]	; 0x28
 801521e:	681b      	ldr	r3, [r3, #0]
 8015220:	f88d e02a 	strb.w	lr, [sp, #42]	; 0x2a
 8015224:	910b      	str	r1, [sp, #44]	; 0x2c
 8015226:	f8ad c030 	strh.w	ip, [sp, #48]	; 0x30
 801522a:	f88d 8032 	strb.w	r8, [sp, #50]	; 0x32
 801522e:	f88d 7033 	strb.w	r7, [sp, #51]	; 0x33
 8015232:	f88d 2034 	strb.w	r2, [sp, #52]	; 0x34
 8015236:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 801523a:	b10a      	cbz	r2, 8015240 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd0>
 801523c:	6cde      	ldr	r6, [r3, #76]	; 0x4c
 801523e:	b906      	cbnz	r6, 8015242 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd2>
 8015240:	689e      	ldr	r6, [r3, #8]
 8015242:	af07      	add	r7, sp, #28
 8015244:	4621      	mov	r1, r4
 8015246:	4638      	mov	r0, r7
 8015248:	f004 fac0 	bl	80197cc <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801524c:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 801524e:	6828      	ldr	r0, [r5, #0]
 8015250:	f7f9 fee2 	bl	800f018 <_ZNK8touchgfx5Texts7getTextEt>
 8015254:	6823      	ldr	r3, [r4, #0]
 8015256:	4605      	mov	r5, r0
 8015258:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 801525a:	4620      	mov	r0, r4
 801525c:	4798      	blx	r3
 801525e:	6823      	ldr	r3, [r4, #0]
 8015260:	4680      	mov	r8, r0
 8015262:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8015266:	4620      	mov	r0, r4
 8015268:	4798      	blx	r3
 801526a:	e9cd 8002 	strd	r8, r0, [sp, #8]
 801526e:	ab09      	add	r3, sp, #36	; 0x24
 8015270:	9300      	str	r3, [sp, #0]
 8015272:	9501      	str	r5, [sp, #4]
 8015274:	ab05      	add	r3, sp, #20
 8015276:	e897 0006 	ldmia.w	r7, {r1, r2}
 801527a:	4630      	mov	r0, r6
 801527c:	f7f9 fe5c 	bl	800ef38 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 8015280:	b00e      	add	sp, #56	; 0x38
 8015282:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8015286:	bf00      	nop
 8015288:	20006c90 	.word	0x20006c90
 801528c:	20006c98 	.word	0x20006c98
 8015290:	20006c8c 	.word	0x20006c8c
 8015294:	20006c94 	.word	0x20006c94
 8015298:	20006c34 	.word	0x20006c34

0801529c <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>:
 801529c:	b538      	push	{r3, r4, r5, lr}
 801529e:	4b0e      	ldr	r3, [pc, #56]	; (80152d8 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x3c>)
 80152a0:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 80152a2:	881b      	ldrh	r3, [r3, #0]
 80152a4:	429a      	cmp	r2, r3
 80152a6:	4604      	mov	r4, r0
 80152a8:	d214      	bcs.n	80152d4 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x38>
 80152aa:	6803      	ldr	r3, [r0, #0]
 80152ac:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 80152ae:	4798      	blx	r3
 80152b0:	6823      	ldr	r3, [r4, #0]
 80152b2:	4605      	mov	r5, r0
 80152b4:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80152b6:	4620      	mov	r0, r4
 80152b8:	4798      	blx	r3
 80152ba:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 80152be:	b22d      	sxth	r5, r5
 80152c0:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 80152c4:	4601      	mov	r1, r0
 80152c6:	bf06      	itte	eq
 80152c8:	4602      	moveq	r2, r0
 80152ca:	4629      	moveq	r1, r5
 80152cc:	462a      	movne	r2, r5
 80152ce:	4620      	mov	r0, r4
 80152d0:	f7f6 fc2d 	bl	800bb2e <_ZN8touchgfx8Drawable14setWidthHeightEss>
 80152d4:	bd38      	pop	{r3, r4, r5, pc}
 80152d6:	bf00      	nop
 80152d8:	20006c90 	.word	0x20006c90

080152dc <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>:
 80152dc:	b530      	push	{r4, r5, lr}
 80152de:	888b      	ldrh	r3, [r1, #4]
 80152e0:	8583      	strh	r3, [r0, #44]	; 0x2c
 80152e2:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 80152e6:	b085      	sub	sp, #20
 80152e8:	4604      	mov	r4, r0
 80152ea:	b923      	cbnz	r3, 80152f6 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
 80152ec:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 80152f0:	b90b      	cbnz	r3, 80152f6 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
 80152f2:	f7ff ffd3 	bl	801529c <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
 80152f6:	6823      	ldr	r3, [r4, #0]
 80152f8:	466d      	mov	r5, sp
 80152fa:	4621      	mov	r1, r4
 80152fc:	4628      	mov	r0, r5
 80152fe:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8015302:	4798      	blx	r3
 8015304:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8015308:	343c      	adds	r4, #60	; 0x3c
 801530a:	e884 0007 	stmia.w	r4, {r0, r1, r2}
 801530e:	b005      	add	sp, #20
 8015310:	bd30      	pop	{r4, r5, pc}

08015312 <_ZNK8touchgfx3Box12getSolidRectEv>:
 8015312:	2300      	movs	r3, #0
 8015314:	8083      	strh	r3, [r0, #4]
 8015316:	80c3      	strh	r3, [r0, #6]
 8015318:	8003      	strh	r3, [r0, #0]
 801531a:	8043      	strh	r3, [r0, #2]
 801531c:	f891 3026 	ldrb.w	r3, [r1, #38]	; 0x26
 8015320:	2bff      	cmp	r3, #255	; 0xff
 8015322:	bf01      	itttt	eq
 8015324:	890b      	ldrheq	r3, [r1, #8]
 8015326:	8083      	strheq	r3, [r0, #4]
 8015328:	894b      	ldrheq	r3, [r1, #10]
 801532a:	80c3      	strheq	r3, [r0, #6]
 801532c:	4770      	bx	lr
	...

08015330 <_ZNK8touchgfx3Box4drawERKNS_4RectE>:
 8015330:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8015332:	4604      	mov	r4, r0
 8015334:	6808      	ldr	r0, [r1, #0]
 8015336:	6849      	ldr	r1, [r1, #4]
 8015338:	466b      	mov	r3, sp
 801533a:	c303      	stmia	r3!, {r0, r1}
 801533c:	6823      	ldr	r3, [r4, #0]
 801533e:	4669      	mov	r1, sp
 8015340:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8015342:	4620      	mov	r0, r4
 8015344:	4798      	blx	r3
 8015346:	4b08      	ldr	r3, [pc, #32]	; (8015368 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x38>)
 8015348:	681b      	ldr	r3, [r3, #0]
 801534a:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 801534e:	b10a      	cbz	r2, 8015354 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x24>
 8015350:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8015352:	b900      	cbnz	r0, 8015356 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x26>
 8015354:	6898      	ldr	r0, [r3, #8]
 8015356:	6803      	ldr	r3, [r0, #0]
 8015358:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 801535a:	6a1d      	ldr	r5, [r3, #32]
 801535c:	f894 3026 	ldrb.w	r3, [r4, #38]	; 0x26
 8015360:	4669      	mov	r1, sp
 8015362:	47a8      	blx	r5
 8015364:	b003      	add	sp, #12
 8015366:	bd30      	pop	{r4, r5, pc}
 8015368:	20006c34 	.word	0x20006c34

0801536c <_ZNK8touchgfx3Box17invalidateContentEv>:
 801536c:	f890 2026 	ldrb.w	r2, [r0, #38]	; 0x26
 8015370:	b12a      	cbz	r2, 801537e <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
 8015372:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 8015376:	b112      	cbz	r2, 801537e <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
 8015378:	6803      	ldr	r3, [r0, #0]
 801537a:	695b      	ldr	r3, [r3, #20]
 801537c:	4718      	bx	r3
 801537e:	4770      	bx	lr

08015380 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE>:
 8015380:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8015384:	4b2f      	ldr	r3, [pc, #188]	; (8015444 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xc4>)
 8015386:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 8015388:	881b      	ldrh	r3, [r3, #0]
 801538a:	4293      	cmp	r3, r2
 801538c:	b08d      	sub	sp, #52	; 0x34
 801538e:	4604      	mov	r4, r0
 8015390:	460f      	mov	r7, r1
 8015392:	d954      	bls.n	801543e <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xbe>
 8015394:	4b2c      	ldr	r3, [pc, #176]	; (8015448 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xc8>)
 8015396:	6819      	ldr	r1, [r3, #0]
 8015398:	eb01 0342 	add.w	r3, r1, r2, lsl #1
 801539c:	f811 1012 	ldrb.w	r1, [r1, r2, lsl #1]
 80153a0:	4a2a      	ldr	r2, [pc, #168]	; (801544c <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xcc>)
 80153a2:	6812      	ldr	r2, [r2, #0]
 80153a4:	f852 1021 	ldr.w	r1, [r2, r1, lsl #2]
 80153a8:	2900      	cmp	r1, #0
 80153aa:	d048      	beq.n	801543e <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xbe>
 80153ac:	785a      	ldrb	r2, [r3, #1]
 80153ae:	f894 3039 	ldrb.w	r3, [r4, #57]	; 0x39
 80153b2:	f88d 302c 	strb.w	r3, [sp, #44]	; 0x2c
 80153b6:	4b26      	ldr	r3, [pc, #152]	; (8015450 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xd0>)
 80153b8:	f890 5036 	ldrb.w	r5, [r0, #54]	; 0x36
 80153bc:	f9b0 c034 	ldrsh.w	ip, [r0, #52]	; 0x34
 80153c0:	f890 e038 	ldrb.w	lr, [r0, #56]	; 0x38
 80153c4:	6b26      	ldr	r6, [r4, #48]	; 0x30
 80153c6:	f890 0037 	ldrb.w	r0, [r0, #55]	; 0x37
 80153ca:	9107      	str	r1, [sp, #28]
 80153cc:	f3c2 0801 	ubfx	r8, r2, #0, #2
 80153d0:	f3c2 0281 	ubfx	r2, r2, #2, #2
 80153d4:	f88d 2021 	strb.w	r2, [sp, #33]	; 0x21
 80153d8:	681a      	ldr	r2, [r3, #0]
 80153da:	f88d 8020 	strb.w	r8, [sp, #32]
 80153de:	f892 3058 	ldrb.w	r3, [r2, #88]	; 0x58
 80153e2:	f88d e022 	strb.w	lr, [sp, #34]	; 0x22
 80153e6:	9609      	str	r6, [sp, #36]	; 0x24
 80153e8:	f8ad c028 	strh.w	ip, [sp, #40]	; 0x28
 80153ec:	f88d 502a 	strb.w	r5, [sp, #42]	; 0x2a
 80153f0:	f88d 002b 	strb.w	r0, [sp, #43]	; 0x2b
 80153f4:	b10b      	cbz	r3, 80153fa <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x7a>
 80153f6:	6cd5      	ldr	r5, [r2, #76]	; 0x4c
 80153f8:	b905      	cbnz	r5, 80153fc <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x7c>
 80153fa:	6895      	ldr	r5, [r2, #8]
 80153fc:	ae05      	add	r6, sp, #20
 80153fe:	4621      	mov	r1, r4
 8015400:	4630      	mov	r0, r6
 8015402:	f004 f9e3 	bl	80197cc <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8015406:	4b13      	ldr	r3, [pc, #76]	; (8015454 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xd4>)
 8015408:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 801540a:	6818      	ldr	r0, [r3, #0]
 801540c:	f7f9 fe04 	bl	800f018 <_ZNK8touchgfx5Texts7getTextEt>
 8015410:	6823      	ldr	r3, [r4, #0]
 8015412:	4680      	mov	r8, r0
 8015414:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8015416:	4620      	mov	r0, r4
 8015418:	4798      	blx	r3
 801541a:	6823      	ldr	r3, [r4, #0]
 801541c:	4681      	mov	r9, r0
 801541e:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8015422:	4620      	mov	r0, r4
 8015424:	4798      	blx	r3
 8015426:	e9cd 9002 	strd	r9, r0, [sp, #8]
 801542a:	ab07      	add	r3, sp, #28
 801542c:	9300      	str	r3, [sp, #0]
 801542e:	f8cd 8004 	str.w	r8, [sp, #4]
 8015432:	463b      	mov	r3, r7
 8015434:	e896 0006 	ldmia.w	r6, {r1, r2}
 8015438:	4628      	mov	r0, r5
 801543a:	f7f9 fd7d 	bl	800ef38 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 801543e:	b00d      	add	sp, #52	; 0x34
 8015440:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8015444:	20006c90 	.word	0x20006c90
 8015448:	20006c8c 	.word	0x20006c8c
 801544c:	20006c94 	.word	0x20006c94
 8015450:	20006c34 	.word	0x20006c34
 8015454:	20006c98 	.word	0x20006c98

08015458 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE>:
 8015458:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801545c:	4604      	mov	r4, r0
 801545e:	8e03      	ldrh	r3, [r0, #48]	; 0x30
 8015460:	8962      	ldrh	r2, [r4, #10]
 8015462:	b218      	sxth	r0, r3
 8015464:	460e      	mov	r6, r1
 8015466:	005b      	lsls	r3, r3, #1
 8015468:	8921      	ldrh	r1, [r4, #8]
 801546a:	b29b      	uxth	r3, r3
 801546c:	1ac9      	subs	r1, r1, r3
 801546e:	b08e      	sub	sp, #56	; 0x38
 8015470:	b209      	sxth	r1, r1
 8015472:	1ad3      	subs	r3, r2, r3
 8015474:	b21b      	sxth	r3, r3
 8015476:	2900      	cmp	r1, #0
 8015478:	f8ad 0000 	strh.w	r0, [sp]
 801547c:	f8ad 0002 	strh.w	r0, [sp, #2]
 8015480:	f8ad 1004 	strh.w	r1, [sp, #4]
 8015484:	f8ad 3006 	strh.w	r3, [sp, #6]
 8015488:	dd5e      	ble.n	8015548 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xf0>
 801548a:	2b00      	cmp	r3, #0
 801548c:	dd5c      	ble.n	8015548 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xf0>
 801548e:	6830      	ldr	r0, [r6, #0]
 8015490:	6871      	ldr	r1, [r6, #4]
 8015492:	ab02      	add	r3, sp, #8
 8015494:	c303      	stmia	r3!, {r0, r1}
 8015496:	4669      	mov	r1, sp
 8015498:	a802      	add	r0, sp, #8
 801549a:	f7fd f9fb 	bl	8012894 <_ZN8touchgfx4RectaNERKS0_>
 801549e:	4620      	mov	r0, r4
 80154a0:	a902      	add	r1, sp, #8
 80154a2:	f7ff ff45 	bl	8015330 <_ZNK8touchgfx3Box4drawERKNS_4RectE>
 80154a6:	8e20      	ldrh	r0, [r4, #48]	; 0x30
 80154a8:	2800      	cmp	r0, #0
 80154aa:	d05f      	beq.n	801556c <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0x114>
 80154ac:	8963      	ldrh	r3, [r4, #10]
 80154ae:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 80154b2:	f8ad 101c 	strh.w	r1, [sp, #28]
 80154b6:	1a1f      	subs	r7, r3, r0
 80154b8:	eba3 0340 	sub.w	r3, r3, r0, lsl #1
 80154bc:	b202      	sxth	r2, r0
 80154be:	2500      	movs	r5, #0
 80154c0:	b21b      	sxth	r3, r3
 80154c2:	f8ad 1024 	strh.w	r1, [sp, #36]	; 0x24
 80154c6:	1a09      	subs	r1, r1, r0
 80154c8:	f8ad 7022 	strh.w	r7, [sp, #34]	; 0x22
 80154cc:	9506      	str	r5, [sp, #24]
 80154ce:	f8ad 201e 	strh.w	r2, [sp, #30]
 80154d2:	f8ad 5020 	strh.w	r5, [sp, #32]
 80154d6:	f8ad 2026 	strh.w	r2, [sp, #38]	; 0x26
 80154da:	f8ad 5028 	strh.w	r5, [sp, #40]	; 0x28
 80154de:	f8ad 202a 	strh.w	r2, [sp, #42]	; 0x2a
 80154e2:	f8ad 202c 	strh.w	r2, [sp, #44]	; 0x2c
 80154e6:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 80154ea:	f8ad 1030 	strh.w	r1, [sp, #48]	; 0x30
 80154ee:	f8ad 2032 	strh.w	r2, [sp, #50]	; 0x32
 80154f2:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
 80154f6:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 80154fa:	af04      	add	r7, sp, #16
 80154fc:	ab06      	add	r3, sp, #24
 80154fe:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 8015502:	e893 0003 	ldmia.w	r3, {r0, r1}
 8015506:	e887 0003 	stmia.w	r7, {r0, r1}
 801550a:	4631      	mov	r1, r6
 801550c:	4638      	mov	r0, r7
 801550e:	f7fd f9c1 	bl	8012894 <_ZN8touchgfx4RectaNERKS0_>
 8015512:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 8015516:	2b00      	cmp	r3, #0
 8015518:	dd12      	ble.n	8015540 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xe8>
 801551a:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 801551e:	2b00      	cmp	r3, #0
 8015520:	dd0e      	ble.n	8015540 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xe8>
 8015522:	6823      	ldr	r3, [r4, #0]
 8015524:	4639      	mov	r1, r7
 8015526:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8015528:	4620      	mov	r0, r4
 801552a:	4798      	blx	r3
 801552c:	f7f5 fcee 	bl	800af0c <_ZN8touchgfx3HAL3lcdEv>
 8015530:	6803      	ldr	r3, [r0, #0]
 8015532:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8015534:	f8d3 8020 	ldr.w	r8, [r3, #32]
 8015538:	f894 3026 	ldrb.w	r3, [r4, #38]	; 0x26
 801553c:	4639      	mov	r1, r7
 801553e:	47c0      	blx	r8
 8015540:	3501      	adds	r5, #1
 8015542:	2d04      	cmp	r5, #4
 8015544:	d1da      	bne.n	80154fc <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xa4>
 8015546:	e011      	b.n	801556c <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0x114>
 8015548:	6830      	ldr	r0, [r6, #0]
 801554a:	6871      	ldr	r1, [r6, #4]
 801554c:	ab06      	add	r3, sp, #24
 801554e:	c303      	stmia	r3!, {r0, r1}
 8015550:	6823      	ldr	r3, [r4, #0]
 8015552:	a906      	add	r1, sp, #24
 8015554:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8015556:	4620      	mov	r0, r4
 8015558:	4798      	blx	r3
 801555a:	f7f5 fcd7 	bl	800af0c <_ZN8touchgfx3HAL3lcdEv>
 801555e:	6803      	ldr	r3, [r0, #0]
 8015560:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8015562:	6a1d      	ldr	r5, [r3, #32]
 8015564:	f894 3026 	ldrb.w	r3, [r4, #38]	; 0x26
 8015568:	a906      	add	r1, sp, #24
 801556a:	47a8      	blx	r5
 801556c:	b00e      	add	sp, #56	; 0x38
 801556e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08015572 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>:
 8015572:	b570      	push	{r4, r5, r6, lr}
 8015574:	880b      	ldrh	r3, [r1, #0]
 8015576:	84c3      	strh	r3, [r0, #38]	; 0x26
 8015578:	4604      	mov	r4, r0
 801557a:	4608      	mov	r0, r1
 801557c:	460d      	mov	r5, r1
 801557e:	f006 ffc3 	bl	801c508 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8015582:	4606      	mov	r6, r0
 8015584:	4628      	mov	r0, r5
 8015586:	f006 fff3 	bl	801c570 <_ZNK8touchgfx6Bitmap9getHeightEv>
 801558a:	6823      	ldr	r3, [r4, #0]
 801558c:	4605      	mov	r5, r0
 801558e:	4631      	mov	r1, r6
 8015590:	4620      	mov	r0, r4
 8015592:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8015594:	4798      	blx	r3
 8015596:	6823      	ldr	r3, [r4, #0]
 8015598:	4629      	mov	r1, r5
 801559a:	4620      	mov	r0, r4
 801559c:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 801559e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80155a2:	4718      	bx	r3

080155a4 <_ZNK8touchgfx5Image12getSolidRectEv>:
 80155a4:	b510      	push	{r4, lr}
 80155a6:	f891 3028 	ldrb.w	r3, [r1, #40]	; 0x28
 80155aa:	2bff      	cmp	r3, #255	; 0xff
 80155ac:	4604      	mov	r4, r0
 80155ae:	d006      	beq.n	80155be <_ZNK8touchgfx5Image12getSolidRectEv+0x1a>
 80155b0:	2300      	movs	r3, #0
 80155b2:	8003      	strh	r3, [r0, #0]
 80155b4:	8043      	strh	r3, [r0, #2]
 80155b6:	8083      	strh	r3, [r0, #4]
 80155b8:	80c3      	strh	r3, [r0, #6]
 80155ba:	4620      	mov	r0, r4
 80155bc:	bd10      	pop	{r4, pc}
 80155be:	3126      	adds	r1, #38	; 0x26
 80155c0:	f007 f80a 	bl	801c5d8 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 80155c4:	e7f9      	b.n	80155ba <_ZNK8touchgfx5Image12getSolidRectEv+0x16>

080155c6 <_ZNK8touchgfx5Image17invalidateContentEv>:
 80155c6:	f890 2028 	ldrb.w	r2, [r0, #40]	; 0x28
 80155ca:	b12a      	cbz	r2, 80155d8 <_ZNK8touchgfx5Image17invalidateContentEv+0x12>
 80155cc:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 80155d0:	b112      	cbz	r2, 80155d8 <_ZNK8touchgfx5Image17invalidateContentEv+0x12>
 80155d2:	6803      	ldr	r3, [r0, #0]
 80155d4:	695b      	ldr	r3, [r3, #20]
 80155d6:	4718      	bx	r3
 80155d8:	4770      	bx	lr
	...

080155dc <_ZNK8touchgfx5Image4drawERKNS_4RectE>:
 80155dc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80155e0:	4604      	mov	r4, r0
 80155e2:	b088      	sub	sp, #32
 80155e4:	f854 3b26 	ldr.w	r3, [r4], #38
 80155e8:	2500      	movs	r5, #0
 80155ea:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80155ec:	460f      	mov	r7, r1
 80155ee:	e9cd 5504 	strd	r5, r5, [sp, #16]
 80155f2:	a904      	add	r1, sp, #16
 80155f4:	4606      	mov	r6, r0
 80155f6:	4798      	blx	r3
 80155f8:	4620      	mov	r0, r4
 80155fa:	f006 ff85 	bl	801c508 <_ZNK8touchgfx6Bitmap8getWidthEv>
 80155fe:	4680      	mov	r8, r0
 8015600:	4620      	mov	r0, r4
 8015602:	f006 ffb5 	bl	801c570 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8015606:	9506      	str	r5, [sp, #24]
 8015608:	ad06      	add	r5, sp, #24
 801560a:	f8ad 001e 	strh.w	r0, [sp, #30]
 801560e:	4639      	mov	r1, r7
 8015610:	4628      	mov	r0, r5
 8015612:	f8ad 801c 	strh.w	r8, [sp, #28]
 8015616:	f7fd f93d 	bl	8012894 <_ZN8touchgfx4RectaNERKS0_>
 801561a:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 801561e:	2b00      	cmp	r3, #0
 8015620:	dd19      	ble.n	8015656 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
 8015622:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 8015626:	2b00      	cmp	r3, #0
 8015628:	dd15      	ble.n	8015656 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
 801562a:	4b0c      	ldr	r3, [pc, #48]	; (801565c <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x80>)
 801562c:	681b      	ldr	r3, [r3, #0]
 801562e:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 8015632:	b10a      	cbz	r2, 8015638 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5c>
 8015634:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8015636:	b900      	cbnz	r0, 801563a <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5e>
 8015638:	6898      	ldr	r0, [r3, #8]
 801563a:	6801      	ldr	r1, [r0, #0]
 801563c:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8015640:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 8015644:	2701      	movs	r7, #1
 8015646:	9702      	str	r7, [sp, #8]
 8015648:	f896 6028 	ldrb.w	r6, [r6, #40]	; 0x28
 801564c:	e9cd 5600 	strd	r5, r6, [sp]
 8015650:	688d      	ldr	r5, [r1, #8]
 8015652:	4621      	mov	r1, r4
 8015654:	47a8      	blx	r5
 8015656:	b008      	add	sp, #32
 8015658:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801565c:	20006c34 	.word	0x20006c34

08015660 <_ZN8touchgfx7OutlineD1Ev>:
 8015660:	4770      	bx	lr

08015662 <_ZN8touchgfx7OutlineD0Ev>:
 8015662:	b510      	push	{r4, lr}
 8015664:	2130      	movs	r1, #48	; 0x30
 8015666:	4604      	mov	r4, r0
 8015668:	f014 fe77 	bl	802a35a <_ZdlPvj>
 801566c:	4620      	mov	r0, r4
 801566e:	bd10      	pop	{r4, pc}

08015670 <_ZN8touchgfx7Outline5resetEv>:
 8015670:	b510      	push	{r4, lr}
 8015672:	4604      	mov	r4, r0
 8015674:	f000 fe96 	bl	80163a4 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv>
 8015678:	60e0      	str	r0, [r4, #12]
 801567a:	f000 fe99 	bl	80163b0 <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv>
 801567e:	68e3      	ldr	r3, [r4, #12]
 8015680:	6123      	str	r3, [r4, #16]
 8015682:	08c0      	lsrs	r0, r0, #3
 8015684:	2200      	movs	r2, #0
 8015686:	f647 71ff 	movw	r1, #32767	; 0x7fff
 801568a:	3801      	subs	r0, #1
 801568c:	6060      	str	r0, [r4, #4]
 801568e:	60a2      	str	r2, [r4, #8]
 8015690:	8019      	strh	r1, [r3, #0]
 8015692:	8059      	strh	r1, [r3, #2]
 8015694:	809a      	strh	r2, [r3, #4]
 8015696:	80da      	strh	r2, [r3, #6]
 8015698:	6a63      	ldr	r3, [r4, #36]	; 0x24
 801569a:	f023 0301 	bic.w	r3, r3, #1
 801569e:	f043 0302 	orr.w	r3, r3, #2
 80156a2:	6263      	str	r3, [r4, #36]	; 0x24
 80156a4:	bd10      	pop	{r4, pc}
	...

080156a8 <_ZN8touchgfx7OutlineC1Ev>:
 80156a8:	b510      	push	{r4, lr}
 80156aa:	4b0a      	ldr	r3, [pc, #40]	; (80156d4 <_ZN8touchgfx7OutlineC1Ev+0x2c>)
 80156ac:	6003      	str	r3, [r0, #0]
 80156ae:	2300      	movs	r3, #0
 80156b0:	e9c0 3301 	strd	r3, r3, [r0, #4]
 80156b4:	e9c0 3303 	strd	r3, r3, [r0, #12]
 80156b8:	e9c0 3305 	strd	r3, r3, [r0, #20]
 80156bc:	e9c0 3307 	strd	r3, r3, [r0, #28]
 80156c0:	6243      	str	r3, [r0, #36]	; 0x24
 80156c2:	f06f 4300 	mvn.w	r3, #2147483648	; 0x80000000
 80156c6:	4604      	mov	r4, r0
 80156c8:	e9c0 330a 	strd	r3, r3, [r0, #40]	; 0x28
 80156cc:	f7ff ffd0 	bl	8015670 <_ZN8touchgfx7Outline5resetEv>
 80156d0:	4620      	mov	r0, r4
 80156d2:	bd10      	pop	{r4, pc}
 80156d4:	0802fccc 	.word	0x0802fccc

080156d8 <_ZN8touchgfx7Outline10renderLineEiiii>:
 80156d8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80156dc:	b093      	sub	sp, #76	; 0x4c
 80156de:	1156      	asrs	r6, r2, #5
 80156e0:	9c1c      	ldr	r4, [sp, #112]	; 0x70
 80156e2:	9305      	str	r3, [sp, #20]
 80156e4:	f004 051f 	and.w	r5, r4, #31
 80156e8:	1153      	asrs	r3, r2, #5
 80156ea:	9504      	str	r5, [sp, #16]
 80156ec:	1165      	asrs	r5, r4, #5
 80156ee:	9303      	str	r3, [sp, #12]
 80156f0:	42ae      	cmp	r6, r5
 80156f2:	ea4f 1364 	mov.w	r3, r4, asr #5
 80156f6:	9306      	str	r3, [sp, #24]
 80156f8:	f002 031f 	and.w	r3, r2, #31
 80156fc:	f040 80f8 	bne.w	80158f0 <_ZN8touchgfx7Outline10renderLineEiiii+0x218>
 8015700:	9c04      	ldr	r4, [sp, #16]
 8015702:	9a05      	ldr	r2, [sp, #20]
 8015704:	42a3      	cmp	r3, r4
 8015706:	ea4f 1e62 	mov.w	lr, r2, asr #5
 801570a:	6902      	ldr	r2, [r0, #16]
 801570c:	d125      	bne.n	801575a <_ZN8touchgfx7Outline10renderLineEiiii+0x82>
 801570e:	f9b2 3000 	ldrsh.w	r3, [r2]
 8015712:	459e      	cmp	lr, r3
 8015714:	d103      	bne.n	801571e <_ZN8touchgfx7Outline10renderLineEiiii+0x46>
 8015716:	f9b2 3002 	ldrsh.w	r3, [r2, #2]
 801571a:	429e      	cmp	r6, r3
 801571c:	d035      	beq.n	801578a <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 801571e:	88d1      	ldrh	r1, [r2, #6]
 8015720:	8893      	ldrh	r3, [r2, #4]
 8015722:	430b      	orrs	r3, r1
 8015724:	d010      	beq.n	8015748 <_ZN8touchgfx7Outline10renderLineEiiii+0x70>
 8015726:	f9b2 3002 	ldrsh.w	r3, [r2, #2]
 801572a:	2b00      	cmp	r3, #0
 801572c:	db0c      	blt.n	8015748 <_ZN8touchgfx7Outline10renderLineEiiii+0x70>
 801572e:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
 8015730:	428b      	cmp	r3, r1
 8015732:	da09      	bge.n	8015748 <_ZN8touchgfx7Outline10renderLineEiiii+0x70>
 8015734:	e9d0 1301 	ldrd	r1, r3, [r0, #4]
 8015738:	428b      	cmp	r3, r1
 801573a:	bf38      	it	cc
 801573c:	3208      	addcc	r2, #8
 801573e:	f103 0301 	add.w	r3, r3, #1
 8015742:	bf38      	it	cc
 8015744:	6102      	strcc	r2, [r0, #16]
 8015746:	6083      	str	r3, [r0, #8]
 8015748:	6903      	ldr	r3, [r0, #16]
 801574a:	9a03      	ldr	r2, [sp, #12]
 801574c:	f8a3 e000 	strh.w	lr, [r3]
 8015750:	805a      	strh	r2, [r3, #2]
 8015752:	2200      	movs	r2, #0
 8015754:	809a      	strh	r2, [r3, #4]
 8015756:	80da      	strh	r2, [r3, #6]
 8015758:	e017      	b.n	801578a <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 801575a:	9c05      	ldr	r4, [sp, #20]
 801575c:	f8b2 8004 	ldrh.w	r8, [r2, #4]
 8015760:	f8b2 a006 	ldrh.w	sl, [r2, #6]
 8015764:	f004 041f 	and.w	r4, r4, #31
 8015768:	114e      	asrs	r6, r1, #5
 801576a:	9402      	str	r4, [sp, #8]
 801576c:	9c04      	ldr	r4, [sp, #16]
 801576e:	4576      	cmp	r6, lr
 8015770:	f001 0c1f 	and.w	ip, r1, #31
 8015774:	eba4 0403 	sub.w	r4, r4, r3
 8015778:	d10a      	bne.n	8015790 <_ZN8touchgfx7Outline10renderLineEiiii+0xb8>
 801577a:	9b02      	ldr	r3, [sp, #8]
 801577c:	449c      	add	ip, r3
 801577e:	44a0      	add	r8, r4
 8015780:	fb04 a40c 	mla	r4, r4, ip, sl
 8015784:	f8a2 8004 	strh.w	r8, [r2, #4]
 8015788:	80d4      	strh	r4, [r2, #6]
 801578a:	b013      	add	sp, #76	; 0x4c
 801578c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015790:	9d05      	ldr	r5, [sp, #20]
 8015792:	1a69      	subs	r1, r5, r1
 8015794:	bf5b      	ittet	pl
 8015796:	f1cc 0520 	rsbpl	r5, ip, #32
 801579a:	436c      	mulpl	r4, r5
 801579c:	2500      	movmi	r5, #0
 801579e:	2520      	movpl	r5, #32
 80157a0:	bf44      	itt	mi
 80157a2:	fb04 f40c 	mulmi.w	r4, r4, ip
 80157a6:	4249      	negmi	r1, r1
 80157a8:	9501      	str	r5, [sp, #4]
 80157aa:	9f01      	ldr	r7, [sp, #4]
 80157ac:	fb94 f5f1 	sdiv	r5, r4, r1
 80157b0:	fb01 4415 	mls	r4, r1, r5, r4
 80157b4:	bf54      	ite	pl
 80157b6:	f04f 0901 	movpl.w	r9, #1
 80157ba:	f04f 39ff 	movmi.w	r9, #4294967295
 80157be:	2c00      	cmp	r4, #0
 80157c0:	bfb8      	it	lt
 80157c2:	f105 35ff 	addlt.w	r5, r5, #4294967295
 80157c6:	44bc      	add	ip, r7
 80157c8:	44a8      	add	r8, r5
 80157ca:	fb05 ac0c 	mla	ip, r5, ip, sl
 80157ce:	f8a2 8004 	strh.w	r8, [r2, #4]
 80157d2:	f8a2 c006 	strh.w	ip, [r2, #6]
 80157d6:	f8d0 c010 	ldr.w	ip, [r0, #16]
 80157da:	f8bc 8006 	ldrh.w	r8, [ip, #6]
 80157de:	f8bc 2004 	ldrh.w	r2, [ip, #4]
 80157e2:	bfb8      	it	lt
 80157e4:	1864      	addlt	r4, r4, r1
 80157e6:	ea58 0202 	orrs.w	r2, r8, r2
 80157ea:	444e      	add	r6, r9
 80157ec:	d011      	beq.n	8015812 <_ZN8touchgfx7Outline10renderLineEiiii+0x13a>
 80157ee:	f9bc 8002 	ldrsh.w	r8, [ip, #2]
 80157f2:	f1b8 0f00 	cmp.w	r8, #0
 80157f6:	db0c      	blt.n	8015812 <_ZN8touchgfx7Outline10renderLineEiiii+0x13a>
 80157f8:	6ac2      	ldr	r2, [r0, #44]	; 0x2c
 80157fa:	4590      	cmp	r8, r2
 80157fc:	da09      	bge.n	8015812 <_ZN8touchgfx7Outline10renderLineEiiii+0x13a>
 80157fe:	e9d0 2801 	ldrd	r2, r8, [r0, #4]
 8015802:	4590      	cmp	r8, r2
 8015804:	bf3c      	itt	cc
 8015806:	f10c 0208 	addcc.w	r2, ip, #8
 801580a:	6102      	strcc	r2, [r0, #16]
 801580c:	f108 0201 	add.w	r2, r8, #1
 8015810:	6082      	str	r2, [r0, #8]
 8015812:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8015816:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 801581a:	f8ac 6000 	strh.w	r6, [ip]
 801581e:	2700      	movs	r7, #0
 8015820:	45b6      	cmp	lr, r6
 8015822:	f8ac 2002 	strh.w	r2, [ip, #2]
 8015826:	f8ac 7004 	strh.w	r7, [ip, #4]
 801582a:	f8ac 7006 	strh.w	r7, [ip, #6]
 801582e:	442b      	add	r3, r5
 8015830:	d04d      	beq.n	80158ce <_ZN8touchgfx7Outline10renderLineEiiii+0x1f6>
 8015832:	9f04      	ldr	r7, [sp, #16]
 8015834:	1aff      	subs	r7, r7, r3
 8015836:	443d      	add	r5, r7
 8015838:	016d      	lsls	r5, r5, #5
 801583a:	fb95 f8f1 	sdiv	r8, r5, r1
 801583e:	fb01 5518 	mls	r5, r1, r8, r5
 8015842:	2d00      	cmp	r5, #0
 8015844:	bfb8      	it	lt
 8015846:	f108 38ff 	addlt.w	r8, r8, #4294967295
 801584a:	f108 0701 	add.w	r7, r8, #1
 801584e:	bfb8      	it	lt
 8015850:	186d      	addlt	r5, r5, r1
 8015852:	1a64      	subs	r4, r4, r1
 8015854:	9703      	str	r7, [sp, #12]
 8015856:	f04f 0a00 	mov.w	sl, #0
 801585a:	f8d0 c010 	ldr.w	ip, [r0, #16]
 801585e:	1964      	adds	r4, r4, r5
 8015860:	bf58      	it	pl
 8015862:	9f03      	ldrpl	r7, [sp, #12]
 8015864:	f8bc b004 	ldrh.w	fp, [ip, #4]
 8015868:	bf48      	it	mi
 801586a:	4647      	movmi	r7, r8
 801586c:	44bb      	add	fp, r7
 801586e:	f8ac b004 	strh.w	fp, [ip, #4]
 8015872:	f8bc b006 	ldrh.w	fp, [ip, #6]
 8015876:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
 801587a:	f8ac b006 	strh.w	fp, [ip, #6]
 801587e:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8015882:	443b      	add	r3, r7
 8015884:	f8bc b006 	ldrh.w	fp, [ip, #6]
 8015888:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 801588c:	bf58      	it	pl
 801588e:	1a64      	subpl	r4, r4, r1
 8015890:	ea5b 0707 	orrs.w	r7, fp, r7
 8015894:	444e      	add	r6, r9
 8015896:	d011      	beq.n	80158bc <_ZN8touchgfx7Outline10renderLineEiiii+0x1e4>
 8015898:	f9bc b002 	ldrsh.w	fp, [ip, #2]
 801589c:	f1bb 0f00 	cmp.w	fp, #0
 80158a0:	db0c      	blt.n	80158bc <_ZN8touchgfx7Outline10renderLineEiiii+0x1e4>
 80158a2:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 80158a4:	45bb      	cmp	fp, r7
 80158a6:	da09      	bge.n	80158bc <_ZN8touchgfx7Outline10renderLineEiiii+0x1e4>
 80158a8:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
 80158ac:	45bb      	cmp	fp, r7
 80158ae:	bf3c      	itt	cc
 80158b0:	f10c 0708 	addcc.w	r7, ip, #8
 80158b4:	6107      	strcc	r7, [r0, #16]
 80158b6:	f10b 0701 	add.w	r7, fp, #1
 80158ba:	6087      	str	r7, [r0, #8]
 80158bc:	6907      	ldr	r7, [r0, #16]
 80158be:	45b6      	cmp	lr, r6
 80158c0:	803e      	strh	r6, [r7, #0]
 80158c2:	807a      	strh	r2, [r7, #2]
 80158c4:	f8a7 a004 	strh.w	sl, [r7, #4]
 80158c8:	f8a7 a006 	strh.w	sl, [r7, #6]
 80158cc:	d1c5      	bne.n	801585a <_ZN8touchgfx7Outline10renderLineEiiii+0x182>
 80158ce:	9a04      	ldr	r2, [sp, #16]
 80158d0:	1ad3      	subs	r3, r2, r3
 80158d2:	6902      	ldr	r2, [r0, #16]
 80158d4:	8891      	ldrh	r1, [r2, #4]
 80158d6:	88d6      	ldrh	r6, [r2, #6]
 80158d8:	4419      	add	r1, r3
 80158da:	8091      	strh	r1, [r2, #4]
 80158dc:	9902      	ldr	r1, [sp, #8]
 80158de:	f101 0c20 	add.w	ip, r1, #32
 80158e2:	9901      	ldr	r1, [sp, #4]
 80158e4:	ebac 0c01 	sub.w	ip, ip, r1
 80158e8:	fb03 630c 	mla	r3, r3, ip, r6
 80158ec:	80d3      	strh	r3, [r2, #6]
 80158ee:	e74c      	b.n	801578a <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 80158f0:	9d05      	ldr	r5, [sp, #20]
 80158f2:	1aa2      	subs	r2, r4, r2
 80158f4:	eba5 0501 	sub.w	r5, r5, r1
 80158f8:	9508      	str	r5, [sp, #32]
 80158fa:	9202      	str	r2, [sp, #8]
 80158fc:	f140 8128 	bpl.w	8015b50 <_ZN8touchgfx7Outline10renderLineEiiii+0x478>
 8015900:	9a03      	ldr	r2, [sp, #12]
 8015902:	2a00      	cmp	r2, #0
 8015904:	f6ff af41 	blt.w	801578a <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 8015908:	9a02      	ldr	r2, [sp, #8]
 801590a:	4252      	negs	r2, r2
 801590c:	9202      	str	r2, [sp, #8]
 801590e:	9a06      	ldr	r2, [sp, #24]
 8015910:	ea42 72e2 	orr.w	r2, r2, r2, asr #31
 8015914:	f04f 34ff 	mov.w	r4, #4294967295
 8015918:	9206      	str	r2, [sp, #24]
 801591a:	462a      	mov	r2, r5
 801591c:	940b      	str	r4, [sp, #44]	; 0x2c
 801591e:	435a      	muls	r2, r3
 8015920:	2400      	movs	r4, #0
 8015922:	9d02      	ldr	r5, [sp, #8]
 8015924:	9401      	str	r4, [sp, #4]
 8015926:	9c02      	ldr	r4, [sp, #8]
 8015928:	fb92 f4f4 	sdiv	r4, r2, r4
 801592c:	fb05 2214 	mls	r2, r5, r4, r2
 8015930:	2a00      	cmp	r2, #0
 8015932:	9207      	str	r2, [sp, #28]
 8015934:	bfbc      	itt	lt
 8015936:	1952      	addlt	r2, r2, r5
 8015938:	9207      	strlt	r2, [sp, #28]
 801593a:	9a01      	ldr	r2, [sp, #4]
 801593c:	6905      	ldr	r5, [r0, #16]
 801593e:	bfb8      	it	lt
 8015940:	f104 34ff 	addlt.w	r4, r4, #4294967295
 8015944:	eb04 0901 	add.w	r9, r4, r1
 8015948:	429a      	cmp	r2, r3
 801594a:	ea4f 1669 	mov.w	r6, r9, asr #5
 801594e:	f040 8112 	bne.w	8015b76 <_ZN8touchgfx7Outline10renderLineEiiii+0x49e>
 8015952:	f9b5 3000 	ldrsh.w	r3, [r5]
 8015956:	429e      	cmp	r6, r3
 8015958:	d104      	bne.n	8015964 <_ZN8touchgfx7Outline10renderLineEiiii+0x28c>
 801595a:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 801595e:	9a03      	ldr	r2, [sp, #12]
 8015960:	429a      	cmp	r2, r3
 8015962:	d01b      	beq.n	801599c <_ZN8touchgfx7Outline10renderLineEiiii+0x2c4>
 8015964:	88ea      	ldrh	r2, [r5, #6]
 8015966:	88ab      	ldrh	r3, [r5, #4]
 8015968:	4313      	orrs	r3, r2
 801596a:	d010      	beq.n	801598e <_ZN8touchgfx7Outline10renderLineEiiii+0x2b6>
 801596c:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 8015970:	2a00      	cmp	r2, #0
 8015972:	db0c      	blt.n	801598e <_ZN8touchgfx7Outline10renderLineEiiii+0x2b6>
 8015974:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8015976:	429a      	cmp	r2, r3
 8015978:	da09      	bge.n	801598e <_ZN8touchgfx7Outline10renderLineEiiii+0x2b6>
 801597a:	e9d0 3201 	ldrd	r3, r2, [r0, #4]
 801597e:	429a      	cmp	r2, r3
 8015980:	bf38      	it	cc
 8015982:	3508      	addcc	r5, #8
 8015984:	f102 0201 	add.w	r2, r2, #1
 8015988:	bf38      	it	cc
 801598a:	6105      	strcc	r5, [r0, #16]
 801598c:	6082      	str	r2, [r0, #8]
 801598e:	6903      	ldr	r3, [r0, #16]
 8015990:	9a03      	ldr	r2, [sp, #12]
 8015992:	805a      	strh	r2, [r3, #2]
 8015994:	2200      	movs	r2, #0
 8015996:	801e      	strh	r6, [r3, #0]
 8015998:	809a      	strh	r2, [r3, #4]
 801599a:	80da      	strh	r2, [r3, #6]
 801599c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801599e:	9a03      	ldr	r2, [sp, #12]
 80159a0:	6901      	ldr	r1, [r0, #16]
 80159a2:	441a      	add	r2, r3
 80159a4:	f9b1 3000 	ldrsh.w	r3, [r1]
 80159a8:	42b3      	cmp	r3, r6
 80159aa:	d103      	bne.n	80159b4 <_ZN8touchgfx7Outline10renderLineEiiii+0x2dc>
 80159ac:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
 80159b0:	429a      	cmp	r2, r3
 80159b2:	d01a      	beq.n	80159ea <_ZN8touchgfx7Outline10renderLineEiiii+0x312>
 80159b4:	88cc      	ldrh	r4, [r1, #6]
 80159b6:	888b      	ldrh	r3, [r1, #4]
 80159b8:	4323      	orrs	r3, r4
 80159ba:	d010      	beq.n	80159de <_ZN8touchgfx7Outline10renderLineEiiii+0x306>
 80159bc:	f9b1 4002 	ldrsh.w	r4, [r1, #2]
 80159c0:	2c00      	cmp	r4, #0
 80159c2:	db0c      	blt.n	80159de <_ZN8touchgfx7Outline10renderLineEiiii+0x306>
 80159c4:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 80159c6:	429c      	cmp	r4, r3
 80159c8:	da09      	bge.n	80159de <_ZN8touchgfx7Outline10renderLineEiiii+0x306>
 80159ca:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
 80159ce:	429c      	cmp	r4, r3
 80159d0:	bf38      	it	cc
 80159d2:	3108      	addcc	r1, #8
 80159d4:	f104 0401 	add.w	r4, r4, #1
 80159d8:	bf38      	it	cc
 80159da:	6101      	strcc	r1, [r0, #16]
 80159dc:	6084      	str	r4, [r0, #8]
 80159de:	6903      	ldr	r3, [r0, #16]
 80159e0:	2100      	movs	r1, #0
 80159e2:	801e      	strh	r6, [r3, #0]
 80159e4:	805a      	strh	r2, [r3, #2]
 80159e6:	8099      	strh	r1, [r3, #4]
 80159e8:	80d9      	strh	r1, [r3, #6]
 80159ea:	9b06      	ldr	r3, [sp, #24]
 80159ec:	4293      	cmp	r3, r2
 80159ee:	f000 8082 	beq.w	8015af6 <_ZN8touchgfx7Outline10renderLineEiiii+0x41e>
 80159f2:	9b08      	ldr	r3, [sp, #32]
 80159f4:	9c02      	ldr	r4, [sp, #8]
 80159f6:	9902      	ldr	r1, [sp, #8]
 80159f8:	015b      	lsls	r3, r3, #5
 80159fa:	fb93 f1f1 	sdiv	r1, r3, r1
 80159fe:	fb04 3311 	mls	r3, r4, r1, r3
 8015a02:	2b00      	cmp	r3, #0
 8015a04:	9103      	str	r1, [sp, #12]
 8015a06:	9308      	str	r3, [sp, #32]
 8015a08:	da04      	bge.n	8015a14 <_ZN8touchgfx7Outline10renderLineEiiii+0x33c>
 8015a0a:	1e4b      	subs	r3, r1, #1
 8015a0c:	9303      	str	r3, [sp, #12]
 8015a0e:	9b08      	ldr	r3, [sp, #32]
 8015a10:	4423      	add	r3, r4
 8015a12:	9308      	str	r3, [sp, #32]
 8015a14:	9b07      	ldr	r3, [sp, #28]
 8015a16:	9902      	ldr	r1, [sp, #8]
 8015a18:	1a5b      	subs	r3, r3, r1
 8015a1a:	9307      	str	r3, [sp, #28]
 8015a1c:	9b01      	ldr	r3, [sp, #4]
 8015a1e:	f1c3 0320 	rsb	r3, r3, #32
 8015a22:	930e      	str	r3, [sp, #56]	; 0x38
 8015a24:	990e      	ldr	r1, [sp, #56]	; 0x38
 8015a26:	9b01      	ldr	r3, [sp, #4]
 8015a28:	1a5b      	subs	r3, r3, r1
 8015a2a:	464f      	mov	r7, r9
 8015a2c:	930a      	str	r3, [sp, #40]	; 0x28
 8015a2e:	2600      	movs	r6, #0
 8015a30:	e9dd 3107 	ldrd	r3, r1, [sp, #28]
 8015a34:	185b      	adds	r3, r3, r1
 8015a36:	bf58      	it	pl
 8015a38:	9902      	ldrpl	r1, [sp, #8]
 8015a3a:	9307      	str	r3, [sp, #28]
 8015a3c:	bf5d      	ittte	pl
 8015a3e:	1a5b      	subpl	r3, r3, r1
 8015a40:	9307      	strpl	r3, [sp, #28]
 8015a42:	9b03      	ldrpl	r3, [sp, #12]
 8015a44:	9903      	ldrmi	r1, [sp, #12]
 8015a46:	bf58      	it	pl
 8015a48:	1c59      	addpl	r1, r3, #1
 8015a4a:	4489      	add	r9, r1
 8015a4c:	2a00      	cmp	r2, #0
 8015a4e:	ea4f 1a69 	mov.w	sl, r9, asr #5
 8015a52:	db2e      	blt.n	8015ab2 <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 8015a54:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8015a56:	4293      	cmp	r3, r2
 8015a58:	dd2b      	ble.n	8015ab2 <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 8015a5a:	9c01      	ldr	r4, [sp, #4]
 8015a5c:	6905      	ldr	r5, [r0, #16]
 8015a5e:	46a0      	mov	r8, r4
 8015a60:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8015a62:	f9b5 c004 	ldrsh.w	ip, [r5, #4]
 8015a66:	f9b5 e006 	ldrsh.w	lr, [r5, #6]
 8015a6a:	45a0      	cmp	r8, r4
 8015a6c:	f040 814f 	bne.w	8015d0e <_ZN8touchgfx7Outline10renderLineEiiii+0x636>
 8015a70:	f9b5 1000 	ldrsh.w	r1, [r5]
 8015a74:	4551      	cmp	r1, sl
 8015a76:	d103      	bne.n	8015a80 <_ZN8touchgfx7Outline10renderLineEiiii+0x3a8>
 8015a78:	f9b5 1002 	ldrsh.w	r1, [r5, #2]
 8015a7c:	4291      	cmp	r1, r2
 8015a7e:	d018      	beq.n	8015ab2 <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 8015a80:	ea5c 010e 	orrs.w	r1, ip, lr
 8015a84:	d00f      	beq.n	8015aa6 <_ZN8touchgfx7Outline10renderLineEiiii+0x3ce>
 8015a86:	f9b5 1002 	ldrsh.w	r1, [r5, #2]
 8015a8a:	2900      	cmp	r1, #0
 8015a8c:	db0b      	blt.n	8015aa6 <_ZN8touchgfx7Outline10renderLineEiiii+0x3ce>
 8015a8e:	428b      	cmp	r3, r1
 8015a90:	dd09      	ble.n	8015aa6 <_ZN8touchgfx7Outline10renderLineEiiii+0x3ce>
 8015a92:	e9d0 3101 	ldrd	r3, r1, [r0, #4]
 8015a96:	4299      	cmp	r1, r3
 8015a98:	bf38      	it	cc
 8015a9a:	3508      	addcc	r5, #8
 8015a9c:	f101 0101 	add.w	r1, r1, #1
 8015aa0:	bf38      	it	cc
 8015aa2:	6105      	strcc	r5, [r0, #16]
 8015aa4:	6081      	str	r1, [r0, #8]
 8015aa6:	6903      	ldr	r3, [r0, #16]
 8015aa8:	f8a3 a000 	strh.w	sl, [r3]
 8015aac:	805a      	strh	r2, [r3, #2]
 8015aae:	809e      	strh	r6, [r3, #4]
 8015ab0:	80de      	strh	r6, [r3, #6]
 8015ab2:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8015ab4:	6901      	ldr	r1, [r0, #16]
 8015ab6:	441a      	add	r2, r3
 8015ab8:	88cc      	ldrh	r4, [r1, #6]
 8015aba:	888b      	ldrh	r3, [r1, #4]
 8015abc:	4323      	orrs	r3, r4
 8015abe:	d010      	beq.n	8015ae2 <_ZN8touchgfx7Outline10renderLineEiiii+0x40a>
 8015ac0:	f9b1 4002 	ldrsh.w	r4, [r1, #2]
 8015ac4:	2c00      	cmp	r4, #0
 8015ac6:	db0c      	blt.n	8015ae2 <_ZN8touchgfx7Outline10renderLineEiiii+0x40a>
 8015ac8:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8015aca:	429c      	cmp	r4, r3
 8015acc:	da09      	bge.n	8015ae2 <_ZN8touchgfx7Outline10renderLineEiiii+0x40a>
 8015ace:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
 8015ad2:	429c      	cmp	r4, r3
 8015ad4:	bf38      	it	cc
 8015ad6:	3108      	addcc	r1, #8
 8015ad8:	f104 0401 	add.w	r4, r4, #1
 8015adc:	bf38      	it	cc
 8015ade:	6101      	strcc	r1, [r0, #16]
 8015ae0:	6084      	str	r4, [r0, #8]
 8015ae2:	6903      	ldr	r3, [r0, #16]
 8015ae4:	f8a3 a000 	strh.w	sl, [r3]
 8015ae8:	805a      	strh	r2, [r3, #2]
 8015aea:	809e      	strh	r6, [r3, #4]
 8015aec:	80de      	strh	r6, [r3, #6]
 8015aee:	9b06      	ldr	r3, [sp, #24]
 8015af0:	4293      	cmp	r3, r2
 8015af2:	464f      	mov	r7, r9
 8015af4:	d19c      	bne.n	8015a30 <_ZN8touchgfx7Outline10renderLineEiiii+0x358>
 8015af6:	9b01      	ldr	r3, [sp, #4]
 8015af8:	6907      	ldr	r7, [r0, #16]
 8015afa:	f1c3 0620 	rsb	r6, r3, #32
 8015afe:	9b05      	ldr	r3, [sp, #20]
 8015b00:	ea4f 1e63 	mov.w	lr, r3, asr #5
 8015b04:	9b04      	ldr	r3, [sp, #16]
 8015b06:	429e      	cmp	r6, r3
 8015b08:	f040 81cc 	bne.w	8015ea4 <_ZN8touchgfx7Outline10renderLineEiiii+0x7cc>
 8015b0c:	f9b7 3000 	ldrsh.w	r3, [r7]
 8015b10:	459e      	cmp	lr, r3
 8015b12:	d104      	bne.n	8015b1e <_ZN8touchgfx7Outline10renderLineEiiii+0x446>
 8015b14:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
 8015b18:	429a      	cmp	r2, r3
 8015b1a:	f43f ae36 	beq.w	801578a <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 8015b1e:	88f9      	ldrh	r1, [r7, #6]
 8015b20:	88bb      	ldrh	r3, [r7, #4]
 8015b22:	430b      	orrs	r3, r1
 8015b24:	d010      	beq.n	8015b48 <_ZN8touchgfx7Outline10renderLineEiiii+0x470>
 8015b26:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
 8015b2a:	2b00      	cmp	r3, #0
 8015b2c:	db0c      	blt.n	8015b48 <_ZN8touchgfx7Outline10renderLineEiiii+0x470>
 8015b2e:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
 8015b30:	428b      	cmp	r3, r1
 8015b32:	da09      	bge.n	8015b48 <_ZN8touchgfx7Outline10renderLineEiiii+0x470>
 8015b34:	e9d0 1301 	ldrd	r1, r3, [r0, #4]
 8015b38:	428b      	cmp	r3, r1
 8015b3a:	bf38      	it	cc
 8015b3c:	3708      	addcc	r7, #8
 8015b3e:	f103 0301 	add.w	r3, r3, #1
 8015b42:	bf38      	it	cc
 8015b44:	6107      	strcc	r7, [r0, #16]
 8015b46:	6083      	str	r3, [r0, #8]
 8015b48:	6903      	ldr	r3, [r0, #16]
 8015b4a:	f8a3 e000 	strh.w	lr, [r3]
 8015b4e:	e5ff      	b.n	8015750 <_ZN8touchgfx7Outline10renderLineEiiii+0x78>
 8015b50:	6ac2      	ldr	r2, [r0, #44]	; 0x2c
 8015b52:	9c03      	ldr	r4, [sp, #12]
 8015b54:	42a2      	cmp	r2, r4
 8015b56:	f6ff ae18 	blt.w	801578a <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 8015b5a:	9c06      	ldr	r4, [sp, #24]
 8015b5c:	42a2      	cmp	r2, r4
 8015b5e:	bfb8      	it	lt
 8015b60:	3201      	addlt	r2, #1
 8015b62:	9c08      	ldr	r4, [sp, #32]
 8015b64:	bfb8      	it	lt
 8015b66:	9206      	strlt	r2, [sp, #24]
 8015b68:	f1c3 0220 	rsb	r2, r3, #32
 8015b6c:	4362      	muls	r2, r4
 8015b6e:	2401      	movs	r4, #1
 8015b70:	940b      	str	r4, [sp, #44]	; 0x2c
 8015b72:	2420      	movs	r4, #32
 8015b74:	e6d5      	b.n	8015922 <_ZN8touchgfx7Outline10renderLineEiiii+0x24a>
 8015b76:	f009 021f 	and.w	r2, r9, #31
 8015b7a:	ea4f 1861 	mov.w	r8, r1, asr #5
 8015b7e:	920c      	str	r2, [sp, #48]	; 0x30
 8015b80:	9a01      	ldr	r2, [sp, #4]
 8015b82:	f8b5 e004 	ldrh.w	lr, [r5, #4]
 8015b86:	f8b5 a006 	ldrh.w	sl, [r5, #6]
 8015b8a:	45b0      	cmp	r8, r6
 8015b8c:	f001 011f 	and.w	r1, r1, #31
 8015b90:	eba2 0203 	sub.w	r2, r2, r3
 8015b94:	d108      	bne.n	8015ba8 <_ZN8touchgfx7Outline10renderLineEiiii+0x4d0>
 8015b96:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8015b98:	4419      	add	r1, r3
 8015b9a:	4496      	add	lr, r2
 8015b9c:	fb02 a101 	mla	r1, r2, r1, sl
 8015ba0:	f8a5 e004 	strh.w	lr, [r5, #4]
 8015ba4:	80e9      	strh	r1, [r5, #6]
 8015ba6:	e6f9      	b.n	801599c <_ZN8touchgfx7Outline10renderLineEiiii+0x2c4>
 8015ba8:	2c00      	cmp	r4, #0
 8015baa:	f2c0 80a9 	blt.w	8015d00 <_ZN8touchgfx7Outline10renderLineEiiii+0x628>
 8015bae:	2701      	movs	r7, #1
 8015bb0:	f1c1 0c20 	rsb	ip, r1, #32
 8015bb4:	970a      	str	r7, [sp, #40]	; 0x28
 8015bb6:	fb02 f20c 	mul.w	r2, r2, ip
 8015bba:	2720      	movs	r7, #32
 8015bbc:	9709      	str	r7, [sp, #36]	; 0x24
 8015bbe:	fb92 fcf4 	sdiv	ip, r2, r4
 8015bc2:	9f09      	ldr	r7, [sp, #36]	; 0x24
 8015bc4:	fb04 221c 	mls	r2, r4, ip, r2
 8015bc8:	2a00      	cmp	r2, #0
 8015bca:	bfb8      	it	lt
 8015bcc:	f10c 3cff 	addlt.w	ip, ip, #4294967295
 8015bd0:	4439      	add	r1, r7
 8015bd2:	fb0c a101 	mla	r1, ip, r1, sl
 8015bd6:	80e9      	strh	r1, [r5, #6]
 8015bd8:	44e6      	add	lr, ip
 8015bda:	990a      	ldr	r1, [sp, #40]	; 0x28
 8015bdc:	f8a5 e004 	strh.w	lr, [r5, #4]
 8015be0:	eb08 0501 	add.w	r5, r8, r1
 8015be4:	6901      	ldr	r1, [r0, #16]
 8015be6:	f8b1 8006 	ldrh.w	r8, [r1, #6]
 8015bea:	f8b1 e004 	ldrh.w	lr, [r1, #4]
 8015bee:	bfb8      	it	lt
 8015bf0:	1912      	addlt	r2, r2, r4
 8015bf2:	ea58 070e 	orrs.w	r7, r8, lr
 8015bf6:	d010      	beq.n	8015c1a <_ZN8touchgfx7Outline10renderLineEiiii+0x542>
 8015bf8:	f9b1 e002 	ldrsh.w	lr, [r1, #2]
 8015bfc:	f1be 0f00 	cmp.w	lr, #0
 8015c00:	db0b      	blt.n	8015c1a <_ZN8touchgfx7Outline10renderLineEiiii+0x542>
 8015c02:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 8015c04:	45be      	cmp	lr, r7
 8015c06:	da08      	bge.n	8015c1a <_ZN8touchgfx7Outline10renderLineEiiii+0x542>
 8015c08:	e9d0 7e01 	ldrd	r7, lr, [r0, #4]
 8015c0c:	45be      	cmp	lr, r7
 8015c0e:	bf3c      	itt	cc
 8015c10:	3108      	addcc	r1, #8
 8015c12:	6101      	strcc	r1, [r0, #16]
 8015c14:	f10e 0101 	add.w	r1, lr, #1
 8015c18:	6081      	str	r1, [r0, #8]
 8015c1a:	6901      	ldr	r1, [r0, #16]
 8015c1c:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
 8015c20:	800d      	strh	r5, [r1, #0]
 8015c22:	f04f 0e00 	mov.w	lr, #0
 8015c26:	42ae      	cmp	r6, r5
 8015c28:	f8a1 8002 	strh.w	r8, [r1, #2]
 8015c2c:	f8a1 e004 	strh.w	lr, [r1, #4]
 8015c30:	f8a1 e006 	strh.w	lr, [r1, #6]
 8015c34:	4463      	add	r3, ip
 8015c36:	d054      	beq.n	8015ce2 <_ZN8touchgfx7Outline10renderLineEiiii+0x60a>
 8015c38:	9901      	ldr	r1, [sp, #4]
 8015c3a:	1ac9      	subs	r1, r1, r3
 8015c3c:	4461      	add	r1, ip
 8015c3e:	0149      	lsls	r1, r1, #5
 8015c40:	fb91 fef4 	sdiv	lr, r1, r4
 8015c44:	fb04 111e 	mls	r1, r4, lr, r1
 8015c48:	2900      	cmp	r1, #0
 8015c4a:	bfb8      	it	lt
 8015c4c:	f10e 3eff 	addlt.w	lr, lr, #4294967295
 8015c50:	f10e 0701 	add.w	r7, lr, #1
 8015c54:	bfb8      	it	lt
 8015c56:	1909      	addlt	r1, r1, r4
 8015c58:	1b12      	subs	r2, r2, r4
 8015c5a:	970d      	str	r7, [sp, #52]	; 0x34
 8015c5c:	f8d0 a010 	ldr.w	sl, [r0, #16]
 8015c60:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 8015c62:	f8ba b004 	ldrh.w	fp, [sl, #4]
 8015c66:	1852      	adds	r2, r2, r1
 8015c68:	bf54      	ite	pl
 8015c6a:	f8dd c034 	ldrpl.w	ip, [sp, #52]	; 0x34
 8015c6e:	46f4      	movmi	ip, lr
 8015c70:	44e3      	add	fp, ip
 8015c72:	f8aa b004 	strh.w	fp, [sl, #4]
 8015c76:	f8ba b006 	ldrh.w	fp, [sl, #6]
 8015c7a:	eb0b 1b4c 	add.w	fp, fp, ip, lsl #5
 8015c7e:	f8aa b006 	strh.w	fp, [sl, #6]
 8015c82:	4463      	add	r3, ip
 8015c84:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8015c88:	f8bc b006 	ldrh.w	fp, [ip, #6]
 8015c8c:	f8bc a004 	ldrh.w	sl, [ip, #4]
 8015c90:	bf58      	it	pl
 8015c92:	1b12      	subpl	r2, r2, r4
 8015c94:	443d      	add	r5, r7
 8015c96:	ea5b 070a 	orrs.w	r7, fp, sl
 8015c9a:	d014      	beq.n	8015cc6 <_ZN8touchgfx7Outline10renderLineEiiii+0x5ee>
 8015c9c:	f9bc a002 	ldrsh.w	sl, [ip, #2]
 8015ca0:	f1ba 0f00 	cmp.w	sl, #0
 8015ca4:	db0f      	blt.n	8015cc6 <_ZN8touchgfx7Outline10renderLineEiiii+0x5ee>
 8015ca6:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 8015ca8:	45ba      	cmp	sl, r7
 8015caa:	da0c      	bge.n	8015cc6 <_ZN8touchgfx7Outline10renderLineEiiii+0x5ee>
 8015cac:	e9d0 7a01 	ldrd	r7, sl, [r0, #4]
 8015cb0:	45ba      	cmp	sl, r7
 8015cb2:	bf38      	it	cc
 8015cb4:	f10c 0c08 	addcc.w	ip, ip, #8
 8015cb8:	f10a 0a01 	add.w	sl, sl, #1
 8015cbc:	bf38      	it	cc
 8015cbe:	f8c0 c010 	strcc.w	ip, [r0, #16]
 8015cc2:	f8c0 a008 	str.w	sl, [r0, #8]
 8015cc6:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8015cca:	f04f 0700 	mov.w	r7, #0
 8015cce:	42ae      	cmp	r6, r5
 8015cd0:	f8ac 5000 	strh.w	r5, [ip]
 8015cd4:	f8ac 8002 	strh.w	r8, [ip, #2]
 8015cd8:	f8ac 7004 	strh.w	r7, [ip, #4]
 8015cdc:	f8ac 7006 	strh.w	r7, [ip, #6]
 8015ce0:	d1bc      	bne.n	8015c5c <_ZN8touchgfx7Outline10renderLineEiiii+0x584>
 8015ce2:	6904      	ldr	r4, [r0, #16]
 8015ce4:	9a01      	ldr	r2, [sp, #4]
 8015ce6:	990c      	ldr	r1, [sp, #48]	; 0x30
 8015ce8:	1ad3      	subs	r3, r2, r3
 8015cea:	88a2      	ldrh	r2, [r4, #4]
 8015cec:	441a      	add	r2, r3
 8015cee:	80a2      	strh	r2, [r4, #4]
 8015cf0:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8015cf2:	3120      	adds	r1, #32
 8015cf4:	1a89      	subs	r1, r1, r2
 8015cf6:	88e2      	ldrh	r2, [r4, #6]
 8015cf8:	fb03 2301 	mla	r3, r3, r1, r2
 8015cfc:	80e3      	strh	r3, [r4, #6]
 8015cfe:	e64d      	b.n	801599c <_ZN8touchgfx7Outline10renderLineEiiii+0x2c4>
 8015d00:	f04f 37ff 	mov.w	r7, #4294967295
 8015d04:	970a      	str	r7, [sp, #40]	; 0x28
 8015d06:	434a      	muls	r2, r1
 8015d08:	4264      	negs	r4, r4
 8015d0a:	2700      	movs	r7, #0
 8015d0c:	e756      	b.n	8015bbc <_ZN8touchgfx7Outline10renderLineEiiii+0x4e4>
 8015d0e:	ea4f 1867 	mov.w	r8, r7, asr #5
 8015d12:	f009 031f 	and.w	r3, r9, #31
 8015d16:	45d0      	cmp	r8, sl
 8015d18:	f007 071f 	and.w	r7, r7, #31
 8015d1c:	930f      	str	r3, [sp, #60]	; 0x3c
 8015d1e:	fa1f fc8c 	uxth.w	ip, ip
 8015d22:	fa1f fe8e 	uxth.w	lr, lr
 8015d26:	d10a      	bne.n	8015d3e <_ZN8touchgfx7Outline10renderLineEiiii+0x666>
 8015d28:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8015d2a:	449c      	add	ip, r3
 8015d2c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8015d2e:	f8a5 c004 	strh.w	ip, [r5, #4]
 8015d32:	441f      	add	r7, r3
 8015d34:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8015d36:	fb03 e707 	mla	r7, r3, r7, lr
 8015d3a:	80ef      	strh	r7, [r5, #6]
 8015d3c:	e6b9      	b.n	8015ab2 <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 8015d3e:	2900      	cmp	r1, #0
 8015d40:	f2c0 80a8 	blt.w	8015e94 <_ZN8touchgfx7Outline10renderLineEiiii+0x7bc>
 8015d44:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8015d46:	f1c7 0320 	rsb	r3, r7, #32
 8015d4a:	4363      	muls	r3, r4
 8015d4c:	2401      	movs	r4, #1
 8015d4e:	940d      	str	r4, [sp, #52]	; 0x34
 8015d50:	2420      	movs	r4, #32
 8015d52:	940c      	str	r4, [sp, #48]	; 0x30
 8015d54:	fb93 f4f1 	sdiv	r4, r3, r1
 8015d58:	fb01 3b14 	mls	fp, r1, r4, r3
 8015d5c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8015d5e:	f1bb 0f00 	cmp.w	fp, #0
 8015d62:	bfb8      	it	lt
 8015d64:	f104 34ff 	addlt.w	r4, r4, #4294967295
 8015d68:	441f      	add	r7, r3
 8015d6a:	fb04 e707 	mla	r7, r4, r7, lr
 8015d6e:	44a4      	add	ip, r4
 8015d70:	f8a5 c004 	strh.w	ip, [r5, #4]
 8015d74:	80ef      	strh	r7, [r5, #6]
 8015d76:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8015d7a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8015d7c:	f8bc e006 	ldrh.w	lr, [ip, #6]
 8015d80:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 8015d84:	bfb8      	it	lt
 8015d86:	448b      	addlt	fp, r1
 8015d88:	eb08 0503 	add.w	r5, r8, r3
 8015d8c:	ea5e 0307 	orrs.w	r3, lr, r7
 8015d90:	d011      	beq.n	8015db6 <_ZN8touchgfx7Outline10renderLineEiiii+0x6de>
 8015d92:	f9bc e002 	ldrsh.w	lr, [ip, #2]
 8015d96:	f1be 0f00 	cmp.w	lr, #0
 8015d9a:	db0c      	blt.n	8015db6 <_ZN8touchgfx7Outline10renderLineEiiii+0x6de>
 8015d9c:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 8015d9e:	45be      	cmp	lr, r7
 8015da0:	da09      	bge.n	8015db6 <_ZN8touchgfx7Outline10renderLineEiiii+0x6de>
 8015da2:	e9d0 7e01 	ldrd	r7, lr, [r0, #4]
 8015da6:	45be      	cmp	lr, r7
 8015da8:	bf3c      	itt	cc
 8015daa:	f10c 0708 	addcc.w	r7, ip, #8
 8015dae:	6107      	strcc	r7, [r0, #16]
 8015db0:	f10e 0701 	add.w	r7, lr, #1
 8015db4:	6087      	str	r7, [r0, #8]
 8015db6:	6907      	ldr	r7, [r0, #16]
 8015db8:	b213      	sxth	r3, r2
 8015dba:	9310      	str	r3, [sp, #64]	; 0x40
 8015dbc:	807b      	strh	r3, [r7, #2]
 8015dbe:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8015dc0:	803d      	strh	r5, [r7, #0]
 8015dc2:	4555      	cmp	r5, sl
 8015dc4:	80be      	strh	r6, [r7, #4]
 8015dc6:	80fe      	strh	r6, [r7, #6]
 8015dc8:	eb04 0c03 	add.w	ip, r4, r3
 8015dcc:	d051      	beq.n	8015e72 <_ZN8touchgfx7Outline10renderLineEiiii+0x79a>
 8015dce:	9b01      	ldr	r3, [sp, #4]
 8015dd0:	eba3 070c 	sub.w	r7, r3, ip
 8015dd4:	443c      	add	r4, r7
 8015dd6:	0164      	lsls	r4, r4, #5
 8015dd8:	fb94 f8f1 	sdiv	r8, r4, r1
 8015ddc:	fb01 4418 	mls	r4, r1, r8, r4
 8015de0:	2c00      	cmp	r4, #0
 8015de2:	bfb8      	it	lt
 8015de4:	f108 38ff 	addlt.w	r8, r8, #4294967295
 8015de8:	ebab 0301 	sub.w	r3, fp, r1
 8015dec:	f108 0701 	add.w	r7, r8, #1
 8015df0:	bfb8      	it	lt
 8015df2:	1864      	addlt	r4, r4, r1
 8015df4:	9309      	str	r3, [sp, #36]	; 0x24
 8015df6:	9711      	str	r7, [sp, #68]	; 0x44
 8015df8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8015dfa:	f8d0 e010 	ldr.w	lr, [r0, #16]
 8015dfe:	191b      	adds	r3, r3, r4
 8015e00:	bf58      	it	pl
 8015e02:	9f11      	ldrpl	r7, [sp, #68]	; 0x44
 8015e04:	f8be b004 	ldrh.w	fp, [lr, #4]
 8015e08:	9309      	str	r3, [sp, #36]	; 0x24
 8015e0a:	bf48      	it	mi
 8015e0c:	4647      	movmi	r7, r8
 8015e0e:	44bb      	add	fp, r7
 8015e10:	f8ae b004 	strh.w	fp, [lr, #4]
 8015e14:	f8be b006 	ldrh.w	fp, [lr, #6]
 8015e18:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
 8015e1c:	f8ae b006 	strh.w	fp, [lr, #6]
 8015e20:	f8d0 e010 	ldr.w	lr, [r0, #16]
 8015e24:	44bc      	add	ip, r7
 8015e26:	9f0d      	ldr	r7, [sp, #52]	; 0x34
 8015e28:	f8be b006 	ldrh.w	fp, [lr, #6]
 8015e2c:	443d      	add	r5, r7
 8015e2e:	f8be 7004 	ldrh.w	r7, [lr, #4]
 8015e32:	bf5c      	itt	pl
 8015e34:	1a5b      	subpl	r3, r3, r1
 8015e36:	9309      	strpl	r3, [sp, #36]	; 0x24
 8015e38:	ea5b 0307 	orrs.w	r3, fp, r7
 8015e3c:	d011      	beq.n	8015e62 <_ZN8touchgfx7Outline10renderLineEiiii+0x78a>
 8015e3e:	f9be b002 	ldrsh.w	fp, [lr, #2]
 8015e42:	f1bb 0f00 	cmp.w	fp, #0
 8015e46:	db0c      	blt.n	8015e62 <_ZN8touchgfx7Outline10renderLineEiiii+0x78a>
 8015e48:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 8015e4a:	45bb      	cmp	fp, r7
 8015e4c:	da09      	bge.n	8015e62 <_ZN8touchgfx7Outline10renderLineEiiii+0x78a>
 8015e4e:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
 8015e52:	45bb      	cmp	fp, r7
 8015e54:	bf3c      	itt	cc
 8015e56:	f10e 0708 	addcc.w	r7, lr, #8
 8015e5a:	6107      	strcc	r7, [r0, #16]
 8015e5c:	f10b 0701 	add.w	r7, fp, #1
 8015e60:	6087      	str	r7, [r0, #8]
 8015e62:	6907      	ldr	r7, [r0, #16]
 8015e64:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8015e66:	803d      	strh	r5, [r7, #0]
 8015e68:	4555      	cmp	r5, sl
 8015e6a:	807b      	strh	r3, [r7, #2]
 8015e6c:	80be      	strh	r6, [r7, #4]
 8015e6e:	80fe      	strh	r6, [r7, #6]
 8015e70:	d1c2      	bne.n	8015df8 <_ZN8touchgfx7Outline10renderLineEiiii+0x720>
 8015e72:	9b01      	ldr	r3, [sp, #4]
 8015e74:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 8015e76:	eba3 0c0c 	sub.w	ip, r3, ip
 8015e7a:	6903      	ldr	r3, [r0, #16]
 8015e7c:	8899      	ldrh	r1, [r3, #4]
 8015e7e:	4461      	add	r1, ip
 8015e80:	8099      	strh	r1, [r3, #4]
 8015e82:	990c      	ldr	r1, [sp, #48]	; 0x30
 8015e84:	3720      	adds	r7, #32
 8015e86:	1a7f      	subs	r7, r7, r1
 8015e88:	88d9      	ldrh	r1, [r3, #6]
 8015e8a:	fb0c 1c07 	mla	ip, ip, r7, r1
 8015e8e:	f8a3 c006 	strh.w	ip, [r3, #6]
 8015e92:	e60e      	b.n	8015ab2 <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 8015e94:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8015e96:	f04f 34ff 	mov.w	r4, #4294967295
 8015e9a:	940d      	str	r4, [sp, #52]	; 0x34
 8015e9c:	437b      	muls	r3, r7
 8015e9e:	4249      	negs	r1, r1
 8015ea0:	2400      	movs	r4, #0
 8015ea2:	e756      	b.n	8015d52 <_ZN8touchgfx7Outline10renderLineEiiii+0x67a>
 8015ea4:	9905      	ldr	r1, [sp, #20]
 8015ea6:	f8b7 8004 	ldrh.w	r8, [r7, #4]
 8015eaa:	f8b7 a006 	ldrh.w	sl, [r7, #6]
 8015eae:	f001 011f 	and.w	r1, r1, #31
 8015eb2:	ea4f 1b69 	mov.w	fp, r9, asr #5
 8015eb6:	9102      	str	r1, [sp, #8]
 8015eb8:	9904      	ldr	r1, [sp, #16]
 8015eba:	45f3      	cmp	fp, lr
 8015ebc:	f009 0c1f 	and.w	ip, r9, #31
 8015ec0:	eba1 0406 	sub.w	r4, r1, r6
 8015ec4:	d108      	bne.n	8015ed8 <_ZN8touchgfx7Outline10renderLineEiiii+0x800>
 8015ec6:	9b02      	ldr	r3, [sp, #8]
 8015ec8:	449c      	add	ip, r3
 8015eca:	44a0      	add	r8, r4
 8015ecc:	fb04 a40c 	mla	r4, r4, ip, sl
 8015ed0:	f8a7 8004 	strh.w	r8, [r7, #4]
 8015ed4:	80fc      	strh	r4, [r7, #6]
 8015ed6:	e458      	b.n	801578a <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 8015ed8:	9905      	ldr	r1, [sp, #20]
 8015eda:	ebb1 0109 	subs.w	r1, r1, r9
 8015ede:	bf5b      	ittet	pl
 8015ee0:	f1cc 0520 	rsbpl	r5, ip, #32
 8015ee4:	436c      	mulpl	r4, r5
 8015ee6:	2500      	movmi	r5, #0
 8015ee8:	2520      	movpl	r5, #32
 8015eea:	bf44      	itt	mi
 8015eec:	fb04 f40c 	mulmi.w	r4, r4, ip
 8015ef0:	4249      	negmi	r1, r1
 8015ef2:	9501      	str	r5, [sp, #4]
 8015ef4:	9b01      	ldr	r3, [sp, #4]
 8015ef6:	fb94 f5f1 	sdiv	r5, r4, r1
 8015efa:	fb01 4415 	mls	r4, r1, r5, r4
 8015efe:	bf54      	ite	pl
 8015f00:	f04f 0901 	movpl.w	r9, #1
 8015f04:	f04f 39ff 	movmi.w	r9, #4294967295
 8015f08:	2c00      	cmp	r4, #0
 8015f0a:	bfb8      	it	lt
 8015f0c:	f105 35ff 	addlt.w	r5, r5, #4294967295
 8015f10:	449c      	add	ip, r3
 8015f12:	44a8      	add	r8, r5
 8015f14:	fb05 ac0c 	mla	ip, r5, ip, sl
 8015f18:	f8a7 8004 	strh.w	r8, [r7, #4]
 8015f1c:	f8a7 c006 	strh.w	ip, [r7, #6]
 8015f20:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8015f24:	f8bc 8006 	ldrh.w	r8, [ip, #6]
 8015f28:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 8015f2c:	bfb8      	it	lt
 8015f2e:	1864      	addlt	r4, r4, r1
 8015f30:	ea58 0707 	orrs.w	r7, r8, r7
 8015f34:	eb0b 0309 	add.w	r3, fp, r9
 8015f38:	d011      	beq.n	8015f5e <_ZN8touchgfx7Outline10renderLineEiiii+0x886>
 8015f3a:	f9bc 8002 	ldrsh.w	r8, [ip, #2]
 8015f3e:	f1b8 0f00 	cmp.w	r8, #0
 8015f42:	db0c      	blt.n	8015f5e <_ZN8touchgfx7Outline10renderLineEiiii+0x886>
 8015f44:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 8015f46:	45b8      	cmp	r8, r7
 8015f48:	da09      	bge.n	8015f5e <_ZN8touchgfx7Outline10renderLineEiiii+0x886>
 8015f4a:	e9d0 7801 	ldrd	r7, r8, [r0, #4]
 8015f4e:	45b8      	cmp	r8, r7
 8015f50:	bf3c      	itt	cc
 8015f52:	f10c 0708 	addcc.w	r7, ip, #8
 8015f56:	6107      	strcc	r7, [r0, #16]
 8015f58:	f108 0701 	add.w	r7, r8, #1
 8015f5c:	6087      	str	r7, [r0, #8]
 8015f5e:	6907      	ldr	r7, [r0, #16]
 8015f60:	f04f 0c00 	mov.w	ip, #0
 8015f64:	b212      	sxth	r2, r2
 8015f66:	459e      	cmp	lr, r3
 8015f68:	803b      	strh	r3, [r7, #0]
 8015f6a:	807a      	strh	r2, [r7, #2]
 8015f6c:	f8a7 c004 	strh.w	ip, [r7, #4]
 8015f70:	f8a7 c006 	strh.w	ip, [r7, #6]
 8015f74:	442e      	add	r6, r5
 8015f76:	d04d      	beq.n	8016014 <_ZN8touchgfx7Outline10renderLineEiiii+0x93c>
 8015f78:	9f04      	ldr	r7, [sp, #16]
 8015f7a:	1bbf      	subs	r7, r7, r6
 8015f7c:	443d      	add	r5, r7
 8015f7e:	016d      	lsls	r5, r5, #5
 8015f80:	fb95 f8f1 	sdiv	r8, r5, r1
 8015f84:	fb01 5518 	mls	r5, r1, r8, r5
 8015f88:	4565      	cmp	r5, ip
 8015f8a:	bfb8      	it	lt
 8015f8c:	f108 38ff 	addlt.w	r8, r8, #4294967295
 8015f90:	f108 0701 	add.w	r7, r8, #1
 8015f94:	bfb8      	it	lt
 8015f96:	186d      	addlt	r5, r5, r1
 8015f98:	1a64      	subs	r4, r4, r1
 8015f9a:	9703      	str	r7, [sp, #12]
 8015f9c:	f04f 0a00 	mov.w	sl, #0
 8015fa0:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8015fa4:	1964      	adds	r4, r4, r5
 8015fa6:	bf58      	it	pl
 8015fa8:	9f03      	ldrpl	r7, [sp, #12]
 8015faa:	f8bc b004 	ldrh.w	fp, [ip, #4]
 8015fae:	bf48      	it	mi
 8015fb0:	4647      	movmi	r7, r8
 8015fb2:	44bb      	add	fp, r7
 8015fb4:	f8ac b004 	strh.w	fp, [ip, #4]
 8015fb8:	f8bc b006 	ldrh.w	fp, [ip, #6]
 8015fbc:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
 8015fc0:	f8ac b006 	strh.w	fp, [ip, #6]
 8015fc4:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8015fc8:	443e      	add	r6, r7
 8015fca:	f8bc b006 	ldrh.w	fp, [ip, #6]
 8015fce:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 8015fd2:	bf58      	it	pl
 8015fd4:	1a64      	subpl	r4, r4, r1
 8015fd6:	ea5b 0707 	orrs.w	r7, fp, r7
 8015fda:	444b      	add	r3, r9
 8015fdc:	d011      	beq.n	8016002 <_ZN8touchgfx7Outline10renderLineEiiii+0x92a>
 8015fde:	f9bc b002 	ldrsh.w	fp, [ip, #2]
 8015fe2:	f1bb 0f00 	cmp.w	fp, #0
 8015fe6:	db0c      	blt.n	8016002 <_ZN8touchgfx7Outline10renderLineEiiii+0x92a>
 8015fe8:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 8015fea:	45bb      	cmp	fp, r7
 8015fec:	da09      	bge.n	8016002 <_ZN8touchgfx7Outline10renderLineEiiii+0x92a>
 8015fee:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
 8015ff2:	45bb      	cmp	fp, r7
 8015ff4:	bf3c      	itt	cc
 8015ff6:	f10c 0708 	addcc.w	r7, ip, #8
 8015ffa:	6107      	strcc	r7, [r0, #16]
 8015ffc:	f10b 0701 	add.w	r7, fp, #1
 8016000:	6087      	str	r7, [r0, #8]
 8016002:	6907      	ldr	r7, [r0, #16]
 8016004:	459e      	cmp	lr, r3
 8016006:	803b      	strh	r3, [r7, #0]
 8016008:	807a      	strh	r2, [r7, #2]
 801600a:	f8a7 a004 	strh.w	sl, [r7, #4]
 801600e:	f8a7 a006 	strh.w	sl, [r7, #6]
 8016012:	d1c5      	bne.n	8015fa0 <_ZN8touchgfx7Outline10renderLineEiiii+0x8c8>
 8016014:	9b04      	ldr	r3, [sp, #16]
 8016016:	1b9e      	subs	r6, r3, r6
 8016018:	6903      	ldr	r3, [r0, #16]
 801601a:	889a      	ldrh	r2, [r3, #4]
 801601c:	4432      	add	r2, r6
 801601e:	809a      	strh	r2, [r3, #4]
 8016020:	9a02      	ldr	r2, [sp, #8]
 8016022:	f102 0c20 	add.w	ip, r2, #32
 8016026:	9a01      	ldr	r2, [sp, #4]
 8016028:	ebac 0c02 	sub.w	ip, ip, r2
 801602c:	88da      	ldrh	r2, [r3, #6]
 801602e:	fb06 260c 	mla	r6, r6, ip, r2
 8016032:	80de      	strh	r6, [r3, #6]
 8016034:	f7ff bba9 	b.w	801578a <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>

08016038 <_ZN8touchgfx7Outline6lineToEii>:
 8016038:	6a43      	ldr	r3, [r0, #36]	; 0x24
 801603a:	079b      	lsls	r3, r3, #30
 801603c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 801603e:	460e      	mov	r6, r1
 8016040:	4615      	mov	r5, r2
 8016042:	d511      	bpl.n	8016068 <_ZN8touchgfx7Outline6lineToEii+0x30>
 8016044:	e9d0 1205 	ldrd	r1, r2, [r0, #20]
 8016048:	ea86 0701 	eor.w	r7, r6, r1
 801604c:	ea85 0302 	eor.w	r3, r5, r2
 8016050:	433b      	orrs	r3, r7
 8016052:	d009      	beq.n	8016068 <_ZN8touchgfx7Outline6lineToEii+0x30>
 8016054:	4633      	mov	r3, r6
 8016056:	9500      	str	r5, [sp, #0]
 8016058:	f7ff fb3e 	bl	80156d8 <_ZN8touchgfx7Outline10renderLineEiiii>
 801605c:	6a43      	ldr	r3, [r0, #36]	; 0x24
 801605e:	e9c0 6505 	strd	r6, r5, [r0, #20]
 8016062:	f043 0301 	orr.w	r3, r3, #1
 8016066:	6243      	str	r3, [r0, #36]	; 0x24
 8016068:	b003      	add	sp, #12
 801606a:	bdf0      	pop	{r4, r5, r6, r7, pc}

0801606c <_ZN8touchgfx7Outline6moveToEii>:
 801606c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801606e:	6a43      	ldr	r3, [r0, #36]	; 0x24
 8016070:	4615      	mov	r5, r2
 8016072:	079a      	lsls	r2, r3, #30
 8016074:	4604      	mov	r4, r0
 8016076:	460e      	mov	r6, r1
 8016078:	d401      	bmi.n	801607e <_ZN8touchgfx7Outline6moveToEii+0x12>
 801607a:	f7ff faf9 	bl	8015670 <_ZN8touchgfx7Outline5resetEv>
 801607e:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8016080:	07db      	lsls	r3, r3, #31
 8016082:	d504      	bpl.n	801608e <_ZN8touchgfx7Outline6moveToEii+0x22>
 8016084:	e9d4 1207 	ldrd	r1, r2, [r4, #28]
 8016088:	4620      	mov	r0, r4
 801608a:	f7ff ffd5 	bl	8016038 <_ZN8touchgfx7Outline6lineToEii>
 801608e:	6923      	ldr	r3, [r4, #16]
 8016090:	f9b3 2000 	ldrsh.w	r2, [r3]
 8016094:	1170      	asrs	r0, r6, #5
 8016096:	4290      	cmp	r0, r2
 8016098:	ea4f 1165 	mov.w	r1, r5, asr #5
 801609c:	d103      	bne.n	80160a6 <_ZN8touchgfx7Outline6moveToEii+0x3a>
 801609e:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 80160a2:	4291      	cmp	r1, r2
 80160a4:	d01a      	beq.n	80160dc <_ZN8touchgfx7Outline6moveToEii+0x70>
 80160a6:	88df      	ldrh	r7, [r3, #6]
 80160a8:	889a      	ldrh	r2, [r3, #4]
 80160aa:	433a      	orrs	r2, r7
 80160ac:	d010      	beq.n	80160d0 <_ZN8touchgfx7Outline6moveToEii+0x64>
 80160ae:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 80160b2:	2a00      	cmp	r2, #0
 80160b4:	db0c      	blt.n	80160d0 <_ZN8touchgfx7Outline6moveToEii+0x64>
 80160b6:	6ae7      	ldr	r7, [r4, #44]	; 0x2c
 80160b8:	42ba      	cmp	r2, r7
 80160ba:	da09      	bge.n	80160d0 <_ZN8touchgfx7Outline6moveToEii+0x64>
 80160bc:	e9d4 7201 	ldrd	r7, r2, [r4, #4]
 80160c0:	42ba      	cmp	r2, r7
 80160c2:	bf38      	it	cc
 80160c4:	3308      	addcc	r3, #8
 80160c6:	f102 0201 	add.w	r2, r2, #1
 80160ca:	bf38      	it	cc
 80160cc:	6123      	strcc	r3, [r4, #16]
 80160ce:	60a2      	str	r2, [r4, #8]
 80160d0:	6923      	ldr	r3, [r4, #16]
 80160d2:	2200      	movs	r2, #0
 80160d4:	8018      	strh	r0, [r3, #0]
 80160d6:	8059      	strh	r1, [r3, #2]
 80160d8:	809a      	strh	r2, [r3, #4]
 80160da:	80da      	strh	r2, [r3, #6]
 80160dc:	6166      	str	r6, [r4, #20]
 80160de:	e9c4 5606 	strd	r5, r6, [r4, #24]
 80160e2:	6225      	str	r5, [r4, #32]
 80160e4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

080160e6 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj>:
 80160e6:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80160ea:	b0d0      	sub	sp, #320	; 0x140
 80160ec:	466c      	mov	r4, sp
 80160ee:	eb00 01c1 	add.w	r1, r0, r1, lsl #3
 80160f2:	4627      	mov	r7, r4
 80160f4:	1a0d      	subs	r5, r1, r0
 80160f6:	2d48      	cmp	r5, #72	; 0x48
 80160f8:	f100 0308 	add.w	r3, r0, #8
 80160fc:	f340 80d5 	ble.w	80162aa <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1c4>
 8016100:	112d      	asrs	r5, r5, #4
 8016102:	eb00 02c5 	add.w	r2, r0, r5, lsl #3
 8016106:	f9b0 9000 	ldrsh.w	r9, [r0]
 801610a:	6816      	ldr	r6, [r2, #0]
 801610c:	f9b0 8002 	ldrsh.w	r8, [r0, #2]
 8016110:	6006      	str	r6, [r0, #0]
 8016112:	6856      	ldr	r6, [r2, #4]
 8016114:	f9b0 c006 	ldrsh.w	ip, [r0, #6]
 8016118:	f9b0 e004 	ldrsh.w	lr, [r0, #4]
 801611c:	6046      	str	r6, [r0, #4]
 801611e:	f820 9035 	strh.w	r9, [r0, r5, lsl #3]
 8016122:	f8a2 8002 	strh.w	r8, [r2, #2]
 8016126:	f8a2 e004 	strh.w	lr, [r2, #4]
 801612a:	f8a2 c006 	strh.w	ip, [r2, #6]
 801612e:	f931 5c06 	ldrsh.w	r5, [r1, #-6]
 8016132:	f9b0 c00a 	ldrsh.w	ip, [r0, #10]
 8016136:	4565      	cmp	r5, ip
 8016138:	f1a1 0208 	sub.w	r2, r1, #8
 801613c:	db06      	blt.n	801614c <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x66>
 801613e:	d119      	bne.n	8016174 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x8e>
 8016140:	f9b0 6008 	ldrsh.w	r6, [r0, #8]
 8016144:	f931 5c08 	ldrsh.w	r5, [r1, #-8]
 8016148:	42ae      	cmp	r6, r5
 801614a:	dd13      	ble.n	8016174 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x8e>
 801614c:	460e      	mov	r6, r1
 801614e:	f9b0 9008 	ldrsh.w	r9, [r0, #8]
 8016152:	f856 5d08 	ldr.w	r5, [r6, #-8]!
 8016156:	f9b0 800c 	ldrsh.w	r8, [r0, #12]
 801615a:	f9b0 e00e 	ldrsh.w	lr, [r0, #14]
 801615e:	601d      	str	r5, [r3, #0]
 8016160:	6875      	ldr	r5, [r6, #4]
 8016162:	605d      	str	r5, [r3, #4]
 8016164:	f821 9c08 	strh.w	r9, [r1, #-8]
 8016168:	f821 cc06 	strh.w	ip, [r1, #-6]
 801616c:	f821 8c04 	strh.w	r8, [r1, #-4]
 8016170:	f821 ec02 	strh.w	lr, [r1, #-2]
 8016174:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 8016178:	f9b0 500a 	ldrsh.w	r5, [r0, #10]
 801617c:	42ae      	cmp	r6, r5
 801617e:	db06      	blt.n	801618e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xa8>
 8016180:	d116      	bne.n	80161b0 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xca>
 8016182:	f9b0 c000 	ldrsh.w	ip, [r0]
 8016186:	f9b0 5008 	ldrsh.w	r5, [r0, #8]
 801618a:	45ac      	cmp	ip, r5
 801618c:	da10      	bge.n	80161b0 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xca>
 801618e:	681d      	ldr	r5, [r3, #0]
 8016190:	f9b0 8000 	ldrsh.w	r8, [r0]
 8016194:	6005      	str	r5, [r0, #0]
 8016196:	685d      	ldr	r5, [r3, #4]
 8016198:	f9b0 e004 	ldrsh.w	lr, [r0, #4]
 801619c:	f9b0 c006 	ldrsh.w	ip, [r0, #6]
 80161a0:	f8a0 8008 	strh.w	r8, [r0, #8]
 80161a4:	6045      	str	r5, [r0, #4]
 80161a6:	8146      	strh	r6, [r0, #10]
 80161a8:	f8a0 e00c 	strh.w	lr, [r0, #12]
 80161ac:	f8a0 c00e 	strh.w	ip, [r0, #14]
 80161b0:	f931 5c06 	ldrsh.w	r5, [r1, #-6]
 80161b4:	f9b0 c002 	ldrsh.w	ip, [r0, #2]
 80161b8:	4565      	cmp	r5, ip
 80161ba:	db06      	blt.n	80161ca <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe4>
 80161bc:	d119      	bne.n	80161f2 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 80161be:	f931 6c08 	ldrsh.w	r6, [r1, #-8]
 80161c2:	f9b0 5000 	ldrsh.w	r5, [r0]
 80161c6:	42ae      	cmp	r6, r5
 80161c8:	da13      	bge.n	80161f2 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 80161ca:	460e      	mov	r6, r1
 80161cc:	f9b0 9000 	ldrsh.w	r9, [r0]
 80161d0:	f856 5d08 	ldr.w	r5, [r6, #-8]!
 80161d4:	6005      	str	r5, [r0, #0]
 80161d6:	f9b0 8004 	ldrsh.w	r8, [r0, #4]
 80161da:	f9b0 e006 	ldrsh.w	lr, [r0, #6]
 80161de:	6875      	ldr	r5, [r6, #4]
 80161e0:	6045      	str	r5, [r0, #4]
 80161e2:	f821 9c08 	strh.w	r9, [r1, #-8]
 80161e6:	f821 cc06 	strh.w	ip, [r1, #-6]
 80161ea:	f821 8c04 	strh.w	r8, [r1, #-4]
 80161ee:	f821 ec02 	strh.w	lr, [r1, #-2]
 80161f2:	3308      	adds	r3, #8
 80161f4:	f9b0 c002 	ldrsh.w	ip, [r0, #2]
 80161f8:	f9b3 e002 	ldrsh.w	lr, [r3, #2]
 80161fc:	45e6      	cmp	lr, ip
 80161fe:	dbf8      	blt.n	80161f2 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 8016200:	d105      	bne.n	801620e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
 8016202:	f9b3 6000 	ldrsh.w	r6, [r3]
 8016206:	f9b0 5000 	ldrsh.w	r5, [r0]
 801620a:	42ae      	cmp	r6, r5
 801620c:	dbf1      	blt.n	80161f2 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 801620e:	4615      	mov	r5, r2
 8016210:	3a08      	subs	r2, #8
 8016212:	f9b2 6002 	ldrsh.w	r6, [r2, #2]
 8016216:	45b4      	cmp	ip, r6
 8016218:	dbf9      	blt.n	801620e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
 801621a:	d105      	bne.n	8016228 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x142>
 801621c:	f9b0 8000 	ldrsh.w	r8, [r0]
 8016220:	f9b2 6000 	ldrsh.w	r6, [r2]
 8016224:	45b0      	cmp	r8, r6
 8016226:	dbf2      	blt.n	801620e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
 8016228:	4293      	cmp	r3, r2
 801622a:	f1a5 0608 	sub.w	r6, r5, #8
 801622e:	d816      	bhi.n	801625e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x178>
 8016230:	f8d6 c000 	ldr.w	ip, [r6]
 8016234:	f9b3 a000 	ldrsh.w	sl, [r3]
 8016238:	f8c3 c000 	str.w	ip, [r3]
 801623c:	f9b3 9004 	ldrsh.w	r9, [r3, #4]
 8016240:	f9b3 8006 	ldrsh.w	r8, [r3, #6]
 8016244:	f8d6 c004 	ldr.w	ip, [r6, #4]
 8016248:	f8c3 c004 	str.w	ip, [r3, #4]
 801624c:	f825 ac08 	strh.w	sl, [r5, #-8]
 8016250:	f825 ec06 	strh.w	lr, [r5, #-6]
 8016254:	f825 9c04 	strh.w	r9, [r5, #-4]
 8016258:	f825 8c02 	strh.w	r8, [r5, #-2]
 801625c:	e7c9      	b.n	80161f2 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 801625e:	f8d6 e000 	ldr.w	lr, [r6]
 8016262:	f9b0 a000 	ldrsh.w	sl, [r0]
 8016266:	f8c0 e000 	str.w	lr, [r0]
 801626a:	f9b0 9004 	ldrsh.w	r9, [r0, #4]
 801626e:	f9b0 8006 	ldrsh.w	r8, [r0, #6]
 8016272:	f8d6 e004 	ldr.w	lr, [r6, #4]
 8016276:	f8c0 e004 	str.w	lr, [r0, #4]
 801627a:	f825 ac08 	strh.w	sl, [r5, #-8]
 801627e:	f825 cc06 	strh.w	ip, [r5, #-6]
 8016282:	f825 9c04 	strh.w	r9, [r5, #-4]
 8016286:	f825 8c02 	strh.w	r8, [r5, #-2]
 801628a:	1acd      	subs	r5, r1, r3
 801628c:	1a16      	subs	r6, r2, r0
 801628e:	10ed      	asrs	r5, r5, #3
 8016290:	ebb5 0fe6 	cmp.w	r5, r6, asr #3
 8016294:	bfb5      	itete	lt
 8016296:	e9c4 0200 	strdlt	r0, r2, [r4]
 801629a:	e9c4 3100 	strdge	r3, r1, [r4]
 801629e:	460a      	movlt	r2, r1
 80162a0:	4603      	movge	r3, r0
 80162a2:	3408      	adds	r4, #8
 80162a4:	4618      	mov	r0, r3
 80162a6:	4611      	mov	r1, r2
 80162a8:	e724      	b.n	80160f4 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe>
 80162aa:	4299      	cmp	r1, r3
 80162ac:	d928      	bls.n	8016300 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x21a>
 80162ae:	f1a3 0210 	sub.w	r2, r3, #16
 80162b2:	f9b2 c012 	ldrsh.w	ip, [r2, #18]
 80162b6:	f9b2 500a 	ldrsh.w	r5, [r2, #10]
 80162ba:	45ac      	cmp	ip, r5
 80162bc:	db06      	blt.n	80162cc <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1e6>
 80162be:	d11d      	bne.n	80162fc <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x216>
 80162c0:	f9b2 6010 	ldrsh.w	r6, [r2, #16]
 80162c4:	f9b2 5008 	ldrsh.w	r5, [r2, #8]
 80162c8:	42ae      	cmp	r6, r5
 80162ca:	da17      	bge.n	80162fc <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x216>
 80162cc:	4615      	mov	r5, r2
 80162ce:	f9b2 9010 	ldrsh.w	r9, [r2, #16]
 80162d2:	f855 6f08 	ldr.w	r6, [r5, #8]!
 80162d6:	6116      	str	r6, [r2, #16]
 80162d8:	686e      	ldr	r6, [r5, #4]
 80162da:	f9b2 8014 	ldrsh.w	r8, [r2, #20]
 80162de:	f9b2 e016 	ldrsh.w	lr, [r2, #22]
 80162e2:	f8a2 9008 	strh.w	r9, [r2, #8]
 80162e6:	42a8      	cmp	r0, r5
 80162e8:	6156      	str	r6, [r2, #20]
 80162ea:	f8a2 c00a 	strh.w	ip, [r2, #10]
 80162ee:	f8a2 800c 	strh.w	r8, [r2, #12]
 80162f2:	f8a2 e00e 	strh.w	lr, [r2, #14]
 80162f6:	f1a2 0208 	sub.w	r2, r2, #8
 80162fa:	d1da      	bne.n	80162b2 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1cc>
 80162fc:	3308      	adds	r3, #8
 80162fe:	e7d4      	b.n	80162aa <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1c4>
 8016300:	42bc      	cmp	r4, r7
 8016302:	d903      	bls.n	801630c <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x226>
 8016304:	e954 0102 	ldrd	r0, r1, [r4, #-8]
 8016308:	3c08      	subs	r4, #8
 801630a:	e6f3      	b.n	80160f4 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe>
 801630c:	b050      	add	sp, #320	; 0x140
 801630e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

08016312 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv>:
 8016312:	b510      	push	{r4, lr}
 8016314:	6a43      	ldr	r3, [r0, #36]	; 0x24
 8016316:	07da      	lsls	r2, r3, #31
 8016318:	4604      	mov	r4, r0
 801631a:	d507      	bpl.n	801632c <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x1a>
 801631c:	e9d0 1207 	ldrd	r1, r2, [r0, #28]
 8016320:	f7ff fe8a 	bl	8016038 <_ZN8touchgfx7Outline6lineToEii>
 8016324:	6a43      	ldr	r3, [r0, #36]	; 0x24
 8016326:	f023 0301 	bic.w	r3, r3, #1
 801632a:	6243      	str	r3, [r0, #36]	; 0x24
 801632c:	6a63      	ldr	r3, [r4, #36]	; 0x24
 801632e:	079b      	lsls	r3, r3, #30
 8016330:	d521      	bpl.n	8016376 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x64>
 8016332:	6923      	ldr	r3, [r4, #16]
 8016334:	88d9      	ldrh	r1, [r3, #6]
 8016336:	889a      	ldrh	r2, [r3, #4]
 8016338:	430a      	orrs	r2, r1
 801633a:	d010      	beq.n	801635e <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
 801633c:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 8016340:	2a00      	cmp	r2, #0
 8016342:	db0c      	blt.n	801635e <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
 8016344:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 8016346:	428a      	cmp	r2, r1
 8016348:	da09      	bge.n	801635e <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
 801634a:	e9d4 1201 	ldrd	r1, r2, [r4, #4]
 801634e:	4291      	cmp	r1, r2
 8016350:	bf88      	it	hi
 8016352:	3308      	addhi	r3, #8
 8016354:	f102 0201 	add.w	r2, r2, #1
 8016358:	bf88      	it	hi
 801635a:	6123      	strhi	r3, [r4, #16]
 801635c:	60a2      	str	r2, [r4, #8]
 801635e:	68a1      	ldr	r1, [r4, #8]
 8016360:	b129      	cbz	r1, 801636e <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x5c>
 8016362:	6863      	ldr	r3, [r4, #4]
 8016364:	4299      	cmp	r1, r3
 8016366:	d802      	bhi.n	801636e <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x5c>
 8016368:	68e0      	ldr	r0, [r4, #12]
 801636a:	f7ff febc 	bl	80160e6 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj>
 801636e:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8016370:	f023 0302 	bic.w	r3, r3, #2
 8016374:	6263      	str	r3, [r4, #36]	; 0x24
 8016376:	68e0      	ldr	r0, [r4, #12]
 8016378:	bd10      	pop	{r4, pc}
	...

0801637c <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>:
 801637c:	4b02      	ldr	r3, [pc, #8]	; (8016388 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj+0xc>)
 801637e:	6018      	str	r0, [r3, #0]
 8016380:	4b02      	ldr	r3, [pc, #8]	; (801638c <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj+0x10>)
 8016382:	6019      	str	r1, [r3, #0]
 8016384:	4770      	bx	lr
 8016386:	bf00      	nop
 8016388:	20006c3c 	.word	0x20006c3c
 801638c:	20006c40 	.word	0x20006c40

08016390 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>:
 8016390:	4a02      	ldr	r2, [pc, #8]	; (801639c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv+0xc>)
 8016392:	2300      	movs	r3, #0
 8016394:	6013      	str	r3, [r2, #0]
 8016396:	4a02      	ldr	r2, [pc, #8]	; (80163a0 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv+0x10>)
 8016398:	6013      	str	r3, [r2, #0]
 801639a:	4770      	bx	lr
 801639c:	20006c3c 	.word	0x20006c3c
 80163a0:	20006c40 	.word	0x20006c40

080163a4 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv>:
 80163a4:	4b01      	ldr	r3, [pc, #4]	; (80163ac <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv+0x8>)
 80163a6:	6818      	ldr	r0, [r3, #0]
 80163a8:	4770      	bx	lr
 80163aa:	bf00      	nop
 80163ac:	20006c3c 	.word	0x20006c3c

080163b0 <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv>:
 80163b0:	4b01      	ldr	r3, [pc, #4]	; (80163b8 <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv+0x8>)
 80163b2:	6818      	ldr	r0, [r3, #0]
 80163b4:	4770      	bx	lr
 80163b6:	bf00      	nop
 80163b8:	20006c40 	.word	0x20006c40

080163bc <_ZN8touchgfx3LCD27supportDynamicBitmapDrawingENS_6Bitmap12BitmapFormatE>:
 80163bc:	b510      	push	{r4, lr}
 80163be:	6803      	ldr	r3, [r0, #0]
 80163c0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80163c2:	460c      	mov	r4, r1
 80163c4:	4798      	blx	r3
 80163c6:	1b03      	subs	r3, r0, r4
 80163c8:	4258      	negs	r0, r3
 80163ca:	4158      	adcs	r0, r3
 80163cc:	bd10      	pop	{r4, pc}
	...

080163d0 <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE>:
 80163d0:	4b01      	ldr	r3, [pc, #4]	; (80163d8 <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE+0x8>)
 80163d2:	6019      	str	r1, [r3, #0]
 80163d4:	4770      	bx	lr
 80163d6:	bf00      	nop
 80163d8:	20006c44 	.word	0x20006c44

080163dc <_ZN8touchgfx3LCD18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 80163dc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80163e0:	4696      	mov	lr, r2
 80163e2:	4605      	mov	r5, r0
 80163e4:	4614      	mov	r4, r2
 80163e6:	460e      	mov	r6, r1
 80163e8:	461f      	mov	r7, r3
 80163ea:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 80163ee:	b097      	sub	sp, #92	; 0x5c
 80163f0:	f10d 0c1c 	add.w	ip, sp, #28
 80163f4:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 80163f8:	f8de 3000 	ldr.w	r3, [lr]
 80163fc:	f8cc 3000 	str.w	r3, [ip]
 8016400:	f104 0e14 	add.w	lr, r4, #20
 8016404:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 8016408:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 801640c:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8016410:	f8de 3000 	ldr.w	r3, [lr]
 8016414:	f8cc 3000 	str.w	r3, [ip]
 8016418:	f104 0e28 	add.w	lr, r4, #40	; 0x28
 801641c:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 8016420:	f10d 0c44 	add.w	ip, sp, #68	; 0x44
 8016424:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8016428:	f89d 908c 	ldrb.w	r9, [sp, #140]	; 0x8c
 801642c:	f8bd a090 	ldrh.w	sl, [sp, #144]	; 0x90
 8016430:	f8bd 8088 	ldrh.w	r8, [sp, #136]	; 0x88
 8016434:	f8de 3000 	ldr.w	r3, [lr]
 8016438:	f8cc 3000 	str.w	r3, [ip]
 801643c:	9a21      	ldr	r2, [sp, #132]	; 0x84
 801643e:	682b      	ldr	r3, [r5, #0]
 8016440:	9201      	str	r2, [sp, #4]
 8016442:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 8016446:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8016448:	9200      	str	r2, [sp, #0]
 801644a:	f8cd 8008 	str.w	r8, [sp, #8]
 801644e:	f8d3 b03c 	ldr.w	fp, [r3, #60]	; 0x3c
 8016452:	aa07      	add	r2, sp, #28
 8016454:	463b      	mov	r3, r7
 8016456:	4631      	mov	r1, r6
 8016458:	4628      	mov	r0, r5
 801645a:	47d8      	blx	fp
 801645c:	46a6      	mov	lr, r4
 801645e:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 8016462:	f10d 0c1c 	add.w	ip, sp, #28
 8016466:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 801646a:	f8de 3000 	ldr.w	r3, [lr]
 801646e:	f8cc 3000 	str.w	r3, [ip]
 8016472:	f104 0e28 	add.w	lr, r4, #40	; 0x28
 8016476:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 801647a:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 801647e:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8016482:	343c      	adds	r4, #60	; 0x3c
 8016484:	f8de 3000 	ldr.w	r3, [lr]
 8016488:	f8cc 3000 	str.w	r3, [ip]
 801648c:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 801648e:	f10d 0c44 	add.w	ip, sp, #68	; 0x44
 8016492:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8016496:	6823      	ldr	r3, [r4, #0]
 8016498:	f8cc 3000 	str.w	r3, [ip]
 801649c:	682b      	ldr	r3, [r5, #0]
 801649e:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 80164a2:	9a21      	ldr	r2, [sp, #132]	; 0x84
 80164a4:	9201      	str	r2, [sp, #4]
 80164a6:	9a20      	ldr	r2, [sp, #128]	; 0x80
 80164a8:	9200      	str	r2, [sp, #0]
 80164aa:	f8cd 8008 	str.w	r8, [sp, #8]
 80164ae:	6bdc      	ldr	r4, [r3, #60]	; 0x3c
 80164b0:	aa07      	add	r2, sp, #28
 80164b2:	463b      	mov	r3, r7
 80164b4:	4631      	mov	r1, r6
 80164b6:	4628      	mov	r0, r5
 80164b8:	47a0      	blx	r4
 80164ba:	b017      	add	sp, #92	; 0x5c
 80164bc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080164c0 <_ZN8touchgfx3LCD28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth>:
 80164c0:	2000      	movs	r0, #0
 80164c2:	4770      	bx	lr

080164c4 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht>:
 80164c4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80164c8:	b08d      	sub	sp, #52	; 0x34
 80164ca:	4688      	mov	r8, r1
 80164cc:	9916      	ldr	r1, [sp, #88]	; 0x58
 80164ce:	f8d3 c000 	ldr.w	ip, [r3]
 80164d2:	680f      	ldr	r7, [r1, #0]
 80164d4:	f8bd 4070 	ldrh.w	r4, [sp, #112]	; 0x70
 80164d8:	ed92 4a09 	vldr	s8, [r2, #36]	; 0x24
 80164dc:	edd2 4a0b 	vldr	s9, [r2, #44]	; 0x2c
 80164e0:	edd3 6a07 	vldr	s13, [r3, #28]
 80164e4:	9918      	ldr	r1, [sp, #96]	; 0x60
 80164e6:	f8dd a064 	ldr.w	sl, [sp, #100]	; 0x64
 80164ea:	f9b1 9000 	ldrsh.w	r9, [r1]
 80164ee:	f9ba 1000 	ldrsh.w	r1, [sl]
 80164f2:	edd3 1a0a 	vldr	s3, [r3, #40]	; 0x28
 80164f6:	ed93 2a0d 	vldr	s4, [r3, #52]	; 0x34
 80164fa:	eba7 070c 	sub.w	r7, r7, ip
 80164fe:	42bc      	cmp	r4, r7
 8016500:	bfa8      	it	ge
 8016502:	463c      	movge	r4, r7
 8016504:	ee07 4a90 	vmov	s15, r4
 8016508:	eeb8 5ae7 	vcvt.f32.s32	s10, s15
 801650c:	edd2 7a0d 	vldr	s15, [r2, #52]	; 0x34
 8016510:	ee25 4a04 	vmul.f32	s8, s10, s8
 8016514:	ee65 4a24 	vmul.f32	s9, s10, s9
 8016518:	ee25 5a27 	vmul.f32	s10, s10, s15
 801651c:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 8016520:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 8016524:	eb09 0e0c 	add.w	lr, r9, ip
 8016528:	4571      	cmp	r1, lr
 801652a:	ee71 0aa4 	vadd.f32	s1, s3, s9
 801652e:	ee32 1a05 	vadd.f32	s2, s4, s10
 8016532:	ee36 0a84 	vadd.f32	s0, s13, s8
 8016536:	ee61 1a87 	vmul.f32	s3, s3, s14
 801653a:	ee22 2a07 	vmul.f32	s4, s4, s14
 801653e:	f340 808d 	ble.w	801665c <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x198>
 8016542:	eba1 060e 	sub.w	r6, r1, lr
 8016546:	fb96 f5f4 	sdiv	r5, r6, r4
 801654a:	ee07 5a10 	vmov	s14, r5
 801654e:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8016552:	2d00      	cmp	r5, #0
 8016554:	fb04 6615 	mls	r6, r4, r5, r6
 8016558:	eea7 0a04 	vfma.f32	s0, s14, s8
 801655c:	eee7 0a24 	vfma.f32	s1, s14, s9
 8016560:	eea7 1a05 	vfma.f32	s2, s14, s10
 8016564:	dd13      	ble.n	801658e <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xca>
 8016566:	ee70 6a44 	vsub.f32	s13, s0, s8
 801656a:	ee70 1ae4 	vsub.f32	s3, s1, s9
 801656e:	eef5 6a40 	vcmp.f32	s13, #0.0
 8016572:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016576:	bf18      	it	ne
 8016578:	ee87 7aa6 	vdivne.f32	s14, s15, s13
 801657c:	ee31 2a45 	vsub.f32	s4, s2, s10
 8016580:	bf08      	it	eq
 8016582:	eeb0 7a67 	vmoveq.f32	s14, s15
 8016586:	ee61 1a87 	vmul.f32	s3, s3, s14
 801658a:	ee22 2a07 	vmul.f32	s4, s4, s14
 801658e:	fb05 f204 	mul.w	r2, r5, r4
 8016592:	1abf      	subs	r7, r7, r2
 8016594:	4494      	add	ip, r2
 8016596:	f8ba 2004 	ldrh.w	r2, [sl, #4]
 801659a:	4411      	add	r1, r2
 801659c:	eb09 020c 	add.w	r2, r9, ip
 80165a0:	443a      	add	r2, r7
 80165a2:	b209      	sxth	r1, r1
 80165a4:	428a      	cmp	r2, r1
 80165a6:	bfc4      	itt	gt
 80165a8:	eba1 0209 	subgt.w	r2, r1, r9
 80165ac:	eba2 070c 	subgt.w	r7, r2, ip
 80165b0:	2f00      	cmp	r7, #0
 80165b2:	dd50      	ble.n	8016656 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x192>
 80165b4:	fb97 f1f4 	sdiv	r1, r7, r4
 80165b8:	fb04 7211 	mls	r2, r4, r1, r7
 80165bc:	b90a      	cbnz	r2, 80165c2 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xfe>
 80165be:	3901      	subs	r1, #1
 80165c0:	4622      	mov	r2, r4
 80165c2:	eec7 3a80 	vdiv.f32	s7, s15, s0
 80165c6:	6840      	ldr	r0, [r0, #4]
 80165c8:	900b      	str	r0, [sp, #44]	; 0x2c
 80165ca:	f8d0 a000 	ldr.w	sl, [r0]
 80165ce:	9817      	ldr	r0, [sp, #92]	; 0x5c
 80165d0:	9008      	str	r0, [sp, #32]
 80165d2:	f89d b06c 	ldrb.w	fp, [sp, #108]	; 0x6c
 80165d6:	9818      	ldr	r0, [sp, #96]	; 0x60
 80165d8:	f8cd b024 	str.w	fp, [sp, #36]	; 0x24
 80165dc:	f9b0 b002 	ldrsh.w	fp, [r0, #2]
 80165e0:	695b      	ldr	r3, [r3, #20]
 80165e2:	980b      	ldr	r0, [sp, #44]	; 0x2c
 80165e4:	445b      	add	r3, fp
 80165e6:	eef0 6a42 	vmov.f32	s13, s4
 80165ea:	ee60 2aa3 	vmul.f32	s5, s1, s7
 80165ee:	ee21 3a23 	vmul.f32	s6, s2, s7
 80165f2:	ee72 7ae1 	vsub.f32	s15, s5, s3
 80165f6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80165fa:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 80165fe:	9307      	str	r3, [sp, #28]
 8016600:	ee17 7a90 	vmov	r7, s15
 8016604:	ee73 7a42 	vsub.f32	s15, s6, s4
 8016608:	eeb0 7a61 	vmov.f32	s14, s3
 801660c:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 8016610:	ee16 3a90 	vmov	r3, s13
 8016614:	fb97 f7f4 	sdiv	r7, r7, r4
 8016618:	ee17 ca90 	vmov	ip, s15
 801661c:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 8016620:	fb9c fcf4 	sdiv	ip, ip, r4
 8016624:	fb0c 3306 	mla	r3, ip, r6, r3
 8016628:	9302      	str	r3, [sp, #8]
 801662a:	ee17 3a10 	vmov	r3, s14
 801662e:	44b6      	add	lr, r6
 8016630:	fb04 e505 	mla	r5, r4, r5, lr
 8016634:	e9cd 7c03 	strd	r7, ip, [sp, #12]
 8016638:	fb07 3706 	mla	r7, r7, r6, r3
 801663c:	e9cd 8505 	strd	r8, r5, [sp, #20]
 8016640:	e9cd 4700 	strd	r4, r7, [sp]
 8016644:	2900      	cmp	r1, #0
 8016646:	bfcc      	ite	gt
 8016648:	46a1      	movgt	r9, r4
 801664a:	4691      	movle	r9, r2
 801664c:	eba9 0306 	sub.w	r3, r9, r6
 8016650:	f8da 4008 	ldr.w	r4, [sl, #8]
 8016654:	47a0      	blx	r4
 8016656:	b00d      	add	sp, #52	; 0x34
 8016658:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801665c:	2500      	movs	r5, #0
 801665e:	462e      	mov	r6, r5
 8016660:	e799      	b.n	8016596 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xd2>
	...

08016664 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 8016664:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016668:	b0db      	sub	sp, #364	; 0x16c
 801666a:	461d      	mov	r5, r3
 801666c:	f8bd 3198 	ldrh.w	r3, [sp, #408]	; 0x198
 8016670:	930a      	str	r3, [sp, #40]	; 0x28
 8016672:	f89d 319c 	ldrb.w	r3, [sp, #412]	; 0x19c
 8016676:	930b      	str	r3, [sp, #44]	; 0x2c
 8016678:	f8bd 31a0 	ldrh.w	r3, [sp, #416]	; 0x1a0
 801667c:	9310      	str	r3, [sp, #64]	; 0x40
 801667e:	6803      	ldr	r3, [r0, #0]
 8016680:	910f      	str	r1, [sp, #60]	; 0x3c
 8016682:	6c5f      	ldr	r7, [r3, #68]	; 0x44
 8016684:	9009      	str	r0, [sp, #36]	; 0x24
 8016686:	4614      	mov	r4, r2
 8016688:	4629      	mov	r1, r5
 801668a:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
 801668e:	f8dd b194 	ldr.w	fp, [sp, #404]	; 0x194
 8016692:	47b8      	blx	r7
 8016694:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8016696:	6058      	str	r0, [r3, #4]
 8016698:	2800      	cmp	r0, #0
 801669a:	f000 83a1 	beq.w	8016de0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 801669e:	682b      	ldr	r3, [r5, #0]
 80166a0:	9314      	str	r3, [sp, #80]	; 0x50
 80166a2:	686b      	ldr	r3, [r5, #4]
 80166a4:	9315      	str	r3, [sp, #84]	; 0x54
 80166a6:	4bc4      	ldr	r3, [pc, #784]	; (80169b8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x354>)
 80166a8:	ed94 7a02 	vldr	s14, [r4, #8]
 80166ac:	7819      	ldrb	r1, [r3, #0]
 80166ae:	e9d5 2302 	ldrd	r2, r3, [r5, #8]
 80166b2:	eef2 7a04 	vmov.f32	s15, #36	; 0x41200000  10.0
 80166b6:	2900      	cmp	r1, #0
 80166b8:	eeb4 7ae7 	vcmpe.f32	s14, s15
 80166bc:	bf16      	itet	ne
 80166be:	4619      	movne	r1, r3
 80166c0:	4611      	moveq	r1, r2
 80166c2:	4613      	movne	r3, r2
 80166c4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80166c8:	9116      	str	r1, [sp, #88]	; 0x58
 80166ca:	e9cd 3217 	strd	r3, r2, [sp, #92]	; 0x5c
 80166ce:	f240 8387 	bls.w	8016de0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 80166d2:	ed94 7a07 	vldr	s14, [r4, #28]
 80166d6:	eeb4 7ae7 	vcmpe.f32	s14, s15
 80166da:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80166de:	f240 837f 	bls.w	8016de0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 80166e2:	ed94 7a0c 	vldr	s14, [r4, #48]	; 0x30
 80166e6:	eeb4 7ae7 	vcmpe.f32	s14, s15
 80166ea:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80166ee:	f240 8377 	bls.w	8016de0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 80166f2:	6822      	ldr	r2, [r4, #0]
 80166f4:	4bb1      	ldr	r3, [pc, #708]	; (80169bc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x358>)
 80166f6:	429a      	cmp	r2, r3
 80166f8:	f2c0 8372 	blt.w	8016de0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 80166fc:	49b0      	ldr	r1, [pc, #704]	; (80169c0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x35c>)
 80166fe:	6963      	ldr	r3, [r4, #20]
 8016700:	428a      	cmp	r2, r1
 8016702:	f300 836d 	bgt.w	8016de0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8016706:	f503 331c 	add.w	r3, r3, #159744	; 0x27000
 801670a:	48ae      	ldr	r0, [pc, #696]	; (80169c4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x360>)
 801670c:	33ff      	adds	r3, #255	; 0xff
 801670e:	4283      	cmp	r3, r0
 8016710:	f200 8366 	bhi.w	8016de0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8016714:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 8016716:	4dac      	ldr	r5, [pc, #688]	; (80169c8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x364>)
 8016718:	f503 331c 	add.w	r3, r3, #159744	; 0x27000
 801671c:	33ff      	adds	r3, #255	; 0xff
 801671e:	42ab      	cmp	r3, r5
 8016720:	f200 835e 	bhi.w	8016de0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8016724:	6862      	ldr	r2, [r4, #4]
 8016726:	f502 331c 	add.w	r3, r2, #159744	; 0x27000
 801672a:	33ff      	adds	r3, #255	; 0xff
 801672c:	4283      	cmp	r3, r0
 801672e:	f200 8357 	bhi.w	8016de0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8016732:	69a1      	ldr	r1, [r4, #24]
 8016734:	f501 331c 	add.w	r3, r1, #159744	; 0x27000
 8016738:	33ff      	adds	r3, #255	; 0xff
 801673a:	4283      	cmp	r3, r0
 801673c:	f200 8350 	bhi.w	8016de0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8016740:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8016742:	f503 301c 	add.w	r0, r3, #159744	; 0x27000
 8016746:	30ff      	adds	r0, #255	; 0xff
 8016748:	42a8      	cmp	r0, r5
 801674a:	f200 8349 	bhi.w	8016de0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 801674e:	428a      	cmp	r2, r1
 8016750:	f280 8110 	bge.w	8016974 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x310>
 8016754:	429a      	cmp	r2, r3
 8016756:	f300 8119 	bgt.w	801698c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x328>
 801675a:	4299      	cmp	r1, r3
 801675c:	f280 811d 	bge.w	801699a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x336>
 8016760:	2502      	movs	r5, #2
 8016762:	2701      	movs	r7, #1
 8016764:	46a9      	mov	r9, r5
 8016766:	46b8      	mov	r8, r7
 8016768:	f04f 0a00 	mov.w	sl, #0
 801676c:	4621      	mov	r1, r4
 801676e:	a849      	add	r0, sp, #292	; 0x124
 8016770:	f004 fe7e 	bl	801b470 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>
 8016774:	4622      	mov	r2, r4
 8016776:	4653      	mov	r3, sl
 8016778:	a949      	add	r1, sp, #292	; 0x124
 801677a:	f8cd 9000 	str.w	r9, [sp]
 801677e:	a819      	add	r0, sp, #100	; 0x64
 8016780:	f004 ffa6 	bl	801b6d0 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 8016784:	4622      	mov	r2, r4
 8016786:	4653      	mov	r3, sl
 8016788:	a949      	add	r1, sp, #292	; 0x124
 801678a:	f8cd 8000 	str.w	r8, [sp]
 801678e:	a829      	add	r0, sp, #164	; 0xa4
 8016790:	f004 ff9e 	bl	801b6d0 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 8016794:	4643      	mov	r3, r8
 8016796:	4622      	mov	r2, r4
 8016798:	a949      	add	r1, sp, #292	; 0x124
 801679a:	f8cd 9000 	str.w	r9, [sp]
 801679e:	a839      	add	r0, sp, #228	; 0xe4
 80167a0:	f004 ff96 	bl	801b6d0 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 80167a4:	42af      	cmp	r7, r5
 80167a6:	bfb5      	itete	lt
 80167a8:	2300      	movlt	r3, #0
 80167aa:	2301      	movge	r3, #1
 80167ac:	930e      	strlt	r3, [sp, #56]	; 0x38
 80167ae:	930e      	strge	r3, [sp, #56]	; 0x38
 80167b0:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80167b2:	e893 0003 	ldmia.w	r3, {r0, r1}
 80167b6:	af12      	add	r7, sp, #72	; 0x48
 80167b8:	bfb9      	ittee	lt
 80167ba:	ad29      	addlt	r5, sp, #164	; 0xa4
 80167bc:	ac19      	addlt	r4, sp, #100	; 0x64
 80167be:	ad19      	addge	r5, sp, #100	; 0x64
 80167c0:	ac29      	addge	r4, sp, #164	; 0xa4
 80167c2:	e887 0003 	stmia.w	r7, {r0, r1}
 80167c6:	b928      	cbnz	r0, 80167d4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x170>
 80167c8:	4b80      	ldr	r3, [pc, #512]	; (80169cc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x368>)
 80167ca:	6818      	ldr	r0, [r3, #0]
 80167cc:	6803      	ldr	r3, [r0, #0]
 80167ce:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80167d0:	4798      	blx	r3
 80167d2:	6038      	str	r0, [r7, #0]
 80167d4:	9b64      	ldr	r3, [sp, #400]	; 0x190
 80167d6:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 80167da:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 80167de:	930c      	str	r3, [sp, #48]	; 0x30
 80167e0:	990c      	ldr	r1, [sp, #48]	; 0x30
 80167e2:	6963      	ldr	r3, [r4, #20]
 80167e4:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
 80167e6:	440b      	add	r3, r1
 80167e8:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 80167ec:	4408      	add	r0, r1
 80167ee:	b200      	sxth	r0, r0
 80167f0:	4283      	cmp	r3, r0
 80167f2:	900d      	str	r0, [sp, #52]	; 0x34
 80167f4:	f280 80dd 	bge.w	80169b2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x34e>
 80167f8:	428b      	cmp	r3, r1
 80167fa:	da08      	bge.n	801680e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 80167fc:	2a00      	cmp	r2, #0
 80167fe:	dd06      	ble.n	801680e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 8016800:	1acb      	subs	r3, r1, r3
 8016802:	429a      	cmp	r2, r3
 8016804:	f2c0 80e4 	blt.w	80169d0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36c>
 8016808:	2b00      	cmp	r3, #0
 801680a:	f300 80e2 	bgt.w	80169d2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36e>
 801680e:	6967      	ldr	r7, [r4, #20]
 8016810:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8016812:	443b      	add	r3, r7
 8016814:	461f      	mov	r7, r3
 8016816:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8016818:	1bdf      	subs	r7, r3, r7
 801681a:	4297      	cmp	r7, r2
 801681c:	bfa8      	it	ge
 801681e:	4617      	movge	r7, r2
 8016820:	f10d 0850 	add.w	r8, sp, #80	; 0x50
 8016824:	2f00      	cmp	r7, #0
 8016826:	f340 8166 	ble.w	8016af6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x492>
 801682a:	9b64      	ldr	r3, [sp, #400]	; 0x190
 801682c:	6829      	ldr	r1, [r5, #0]
 801682e:	f9b3 2000 	ldrsh.w	r2, [r3]
 8016832:	f9bb 3000 	ldrsh.w	r3, [fp]
 8016836:	6820      	ldr	r0, [r4, #0]
 8016838:	4411      	add	r1, r2
 801683a:	4299      	cmp	r1, r3
 801683c:	dd1a      	ble.n	8016874 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 801683e:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 8016842:	440b      	add	r3, r1
 8016844:	4402      	add	r2, r0
 8016846:	b21b      	sxth	r3, r3
 8016848:	429a      	cmp	r2, r3
 801684a:	dc13      	bgt.n	8016874 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 801684c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801684e:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8016850:	681b      	ldr	r3, [r3, #0]
 8016852:	9206      	str	r2, [sp, #24]
 8016854:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8016856:	9205      	str	r2, [sp, #20]
 8016858:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801685a:	9500      	str	r5, [sp, #0]
 801685c:	e9cd b203 	strd	fp, r2, [sp, #12]
 8016860:	9a64      	ldr	r2, [sp, #400]	; 0x190
 8016862:	9809      	ldr	r0, [sp, #36]	; 0x24
 8016864:	e9cd 8201 	strd	r8, r2, [sp, #4]
 8016868:	a912      	add	r1, sp, #72	; 0x48
 801686a:	f8d3 9048 	ldr.w	r9, [r3, #72]	; 0x48
 801686e:	aa49      	add	r2, sp, #292	; 0x124
 8016870:	4623      	mov	r3, r4
 8016872:	47c8      	blx	r9
 8016874:	e9d4 2300 	ldrd	r2, r3, [r4]
 8016878:	441a      	add	r2, r3
 801687a:	6963      	ldr	r3, [r4, #20]
 801687c:	ed94 7a0a 	vldr	s14, [r4, #40]	; 0x28
 8016880:	edd4 7a0b 	vldr	s15, [r4, #44]	; 0x2c
 8016884:	edd4 6a0e 	vldr	s13, [r4, #56]	; 0x38
 8016888:	68a1      	ldr	r1, [r4, #8]
 801688a:	ed94 6a08 	vldr	s12, [r4, #32]
 801688e:	6022      	str	r2, [r4, #0]
 8016890:	3301      	adds	r3, #1
 8016892:	6163      	str	r3, [r4, #20]
 8016894:	69a3      	ldr	r3, [r4, #24]
 8016896:	ee37 7a27 	vadd.f32	s14, s14, s15
 801689a:	3b01      	subs	r3, #1
 801689c:	edd4 7a0d 	vldr	s15, [r4, #52]	; 0x34
 80168a0:	61a3      	str	r3, [r4, #24]
 80168a2:	6923      	ldr	r3, [r4, #16]
 80168a4:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 80168a8:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80168ac:	edd4 6a07 	vldr	s13, [r4, #28]
 80168b0:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 80168b4:	440b      	add	r3, r1
 80168b6:	68e1      	ldr	r1, [r4, #12]
 80168b8:	6123      	str	r3, [r4, #16]
 80168ba:	ee76 6a86 	vadd.f32	s13, s13, s12
 80168be:	428b      	cmp	r3, r1
 80168c0:	edc4 6a07 	vstr	s13, [r4, #28]
 80168c4:	db15      	blt.n	80168f2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x28e>
 80168c6:	ed94 6a09 	vldr	s12, [r4, #36]	; 0x24
 80168ca:	ee76 6a26 	vadd.f32	s13, s12, s13
 80168ce:	3201      	adds	r2, #1
 80168d0:	edc4 6a07 	vstr	s13, [r4, #28]
 80168d4:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 80168d8:	6022      	str	r2, [r4, #0]
 80168da:	ee36 7a87 	vadd.f32	s14, s13, s14
 80168de:	1a5b      	subs	r3, r3, r1
 80168e0:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 80168e4:	ed94 7a0f 	vldr	s14, [r4, #60]	; 0x3c
 80168e8:	6123      	str	r3, [r4, #16]
 80168ea:	ee77 7a27 	vadd.f32	s15, s14, s15
 80168ee:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 80168f2:	e9d5 2300 	ldrd	r2, r3, [r5]
 80168f6:	441a      	add	r2, r3
 80168f8:	696b      	ldr	r3, [r5, #20]
 80168fa:	ed95 7a0a 	vldr	s14, [r5, #40]	; 0x28
 80168fe:	edd5 7a0b 	vldr	s15, [r5, #44]	; 0x2c
 8016902:	edd5 6a0e 	vldr	s13, [r5, #56]	; 0x38
 8016906:	68a9      	ldr	r1, [r5, #8]
 8016908:	ed95 6a08 	vldr	s12, [r5, #32]
 801690c:	602a      	str	r2, [r5, #0]
 801690e:	3301      	adds	r3, #1
 8016910:	616b      	str	r3, [r5, #20]
 8016912:	69ab      	ldr	r3, [r5, #24]
 8016914:	ee37 7a27 	vadd.f32	s14, s14, s15
 8016918:	3b01      	subs	r3, #1
 801691a:	edd5 7a0d 	vldr	s15, [r5, #52]	; 0x34
 801691e:	61ab      	str	r3, [r5, #24]
 8016920:	692b      	ldr	r3, [r5, #16]
 8016922:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 8016926:	ee77 7aa6 	vadd.f32	s15, s15, s13
 801692a:	edd5 6a07 	vldr	s13, [r5, #28]
 801692e:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 8016932:	440b      	add	r3, r1
 8016934:	68e9      	ldr	r1, [r5, #12]
 8016936:	612b      	str	r3, [r5, #16]
 8016938:	ee76 6a86 	vadd.f32	s13, s13, s12
 801693c:	428b      	cmp	r3, r1
 801693e:	edc5 6a07 	vstr	s13, [r5, #28]
 8016942:	db15      	blt.n	8016970 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x30c>
 8016944:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
 8016948:	ee76 6a26 	vadd.f32	s13, s12, s13
 801694c:	3201      	adds	r2, #1
 801694e:	edc5 6a07 	vstr	s13, [r5, #28]
 8016952:	edd5 6a0c 	vldr	s13, [r5, #48]	; 0x30
 8016956:	602a      	str	r2, [r5, #0]
 8016958:	ee36 7a87 	vadd.f32	s14, s13, s14
 801695c:	1a5b      	subs	r3, r3, r1
 801695e:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 8016962:	ed95 7a0f 	vldr	s14, [r5, #60]	; 0x3c
 8016966:	612b      	str	r3, [r5, #16]
 8016968:	ee77 7a27 	vadd.f32	s15, s14, s15
 801696c:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 8016970:	3f01      	subs	r7, #1
 8016972:	e757      	b.n	8016824 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1c0>
 8016974:	4299      	cmp	r1, r3
 8016976:	dc13      	bgt.n	80169a0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x33c>
 8016978:	429a      	cmp	r2, r3
 801697a:	da14      	bge.n	80169a6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x342>
 801697c:	2502      	movs	r5, #2
 801697e:	2703      	movs	r7, #3
 8016980:	46a9      	mov	r9, r5
 8016982:	f04f 0800 	mov.w	r8, #0
 8016986:	f04f 0a01 	mov.w	sl, #1
 801698a:	e6ef      	b.n	801676c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 801698c:	2501      	movs	r5, #1
 801698e:	2700      	movs	r7, #0
 8016990:	46a9      	mov	r9, r5
 8016992:	46b8      	mov	r8, r7
 8016994:	f04f 0a02 	mov.w	sl, #2
 8016998:	e6e8      	b.n	801676c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 801699a:	2501      	movs	r5, #1
 801699c:	2702      	movs	r7, #2
 801699e:	e6e1      	b.n	8016764 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x100>
 80169a0:	2500      	movs	r5, #0
 80169a2:	2701      	movs	r7, #1
 80169a4:	e7f4      	b.n	8016990 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x32c>
 80169a6:	2702      	movs	r7, #2
 80169a8:	2503      	movs	r5, #3
 80169aa:	f04f 0900 	mov.w	r9, #0
 80169ae:	46b8      	mov	r8, r7
 80169b0:	e7e9      	b.n	8016986 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x322>
 80169b2:	4613      	mov	r3, r2
 80169b4:	e728      	b.n	8016808 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1a4>
 80169b6:	bf00      	nop
 80169b8:	20006c2c 	.word	0x20006c2c
 80169bc:	fffd8f01 	.word	0xfffd8f01
 80169c0:	00027100 	.word	0x00027100
 80169c4:	0004e1ff 	.word	0x0004e1ff
 80169c8:	0004e1fe 	.word	0x0004e1fe
 80169cc:	20006c34 	.word	0x20006c34
 80169d0:	4613      	mov	r3, r2
 80169d2:	992b      	ldr	r1, [sp, #172]	; 0xac
 80169d4:	9111      	str	r1, [sp, #68]	; 0x44
 80169d6:	e9dd 0a29 	ldrd	r0, sl, [sp, #164]	; 0xa4
 80169da:	e9dd 812c 	ldrd	r8, r1, [sp, #176]	; 0xb0
 80169de:	9f2e      	ldr	r7, [sp, #184]	; 0xb8
 80169e0:	eddd 4a34 	vldr	s9, [sp, #208]	; 0xd0
 80169e4:	ed9d 7a33 	vldr	s14, [sp, #204]	; 0xcc
 80169e8:	ed9d 4a37 	vldr	s8, [sp, #220]	; 0xdc
 80169ec:	eddd 7a36 	vldr	s15, [sp, #216]	; 0xd8
 80169f0:	eddd 3a31 	vldr	s7, [sp, #196]	; 0xc4
 80169f4:	eddd 6a30 	vldr	s13, [sp, #192]	; 0xc0
 80169f8:	ed9d 5a32 	vldr	s10, [sp, #200]	; 0xc8
 80169fc:	eddd 5a35 	vldr	s11, [sp, #212]	; 0xd4
 8016a00:	ed9d 6a38 	vldr	s12, [sp, #224]	; 0xe0
 8016a04:	469e      	mov	lr, r3
 8016a06:	469c      	mov	ip, r3
 8016a08:	f04f 0900 	mov.w	r9, #0
 8016a0c:	f1bc 0f00 	cmp.w	ip, #0
 8016a10:	d147      	bne.n	8016aa2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x43e>
 8016a12:	eb03 0c07 	add.w	ip, r3, r7
 8016a16:	1ad7      	subs	r7, r2, r3
 8016a18:	f1b9 0f00 	cmp.w	r9, #0
 8016a1c:	d009      	beq.n	8016a32 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3ce>
 8016a1e:	e9cd c72e 	strd	ip, r7, [sp, #184]	; 0xb8
 8016a22:	9029      	str	r0, [sp, #164]	; 0xa4
 8016a24:	ed8d 7a33 	vstr	s14, [sp, #204]	; 0xcc
 8016a28:	edcd 7a36 	vstr	s15, [sp, #216]	; 0xd8
 8016a2c:	edcd 6a30 	vstr	s13, [sp, #192]	; 0xc0
 8016a30:	912d      	str	r1, [sp, #180]	; 0xb4
 8016a32:	991b      	ldr	r1, [sp, #108]	; 0x6c
 8016a34:	9111      	str	r1, [sp, #68]	; 0x44
 8016a36:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	; 0x64
 8016a3a:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	; 0x78
 8016a3e:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	; 0x70
 8016a42:	eddd 4a24 	vldr	s9, [sp, #144]	; 0x90
 8016a46:	eddd 6a23 	vldr	s13, [sp, #140]	; 0x8c
 8016a4a:	ed9d 4a27 	vldr	s8, [sp, #156]	; 0x9c
 8016a4e:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 8016a52:	eddd 3a21 	vldr	s7, [sp, #132]	; 0x84
 8016a56:	eddd 7a20 	vldr	s15, [sp, #128]	; 0x80
 8016a5a:	ed9d 5a22 	vldr	s10, [sp, #136]	; 0x88
 8016a5e:	eddd 5a25 	vldr	s11, [sp, #148]	; 0x94
 8016a62:	ed9d 6a28 	vldr	s12, [sp, #160]	; 0xa0
 8016a66:	f04f 0800 	mov.w	r8, #0
 8016a6a:	f1be 0f00 	cmp.w	lr, #0
 8016a6e:	d031      	beq.n	8016ad4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x470>
 8016a70:	9e11      	ldr	r6, [sp, #68]	; 0x44
 8016a72:	4431      	add	r1, r6
 8016a74:	4549      	cmp	r1, r9
 8016a76:	4450      	add	r0, sl
 8016a78:	ee76 6aa4 	vadd.f32	s13, s13, s9
 8016a7c:	ee37 7a04 	vadd.f32	s14, s14, s8
 8016a80:	ee77 7aa3 	vadd.f32	s15, s15, s7
 8016a84:	db08      	blt.n	8016a98 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x434>
 8016a86:	ee77 7a85 	vadd.f32	s15, s15, s10
 8016a8a:	ee76 6aa5 	vadd.f32	s13, s13, s11
 8016a8e:	ee37 7a06 	vadd.f32	s14, s14, s12
 8016a92:	3001      	adds	r0, #1
 8016a94:	eba1 0109 	sub.w	r1, r1, r9
 8016a98:	f10e 3eff 	add.w	lr, lr, #4294967295
 8016a9c:	f04f 0801 	mov.w	r8, #1
 8016aa0:	e7e3      	b.n	8016a6a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x406>
 8016aa2:	9e11      	ldr	r6, [sp, #68]	; 0x44
 8016aa4:	4431      	add	r1, r6
 8016aa6:	4541      	cmp	r1, r8
 8016aa8:	4450      	add	r0, sl
 8016aaa:	ee37 7a24 	vadd.f32	s14, s14, s9
 8016aae:	ee77 7a84 	vadd.f32	s15, s15, s8
 8016ab2:	ee76 6aa3 	vadd.f32	s13, s13, s7
 8016ab6:	db08      	blt.n	8016aca <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x466>
 8016ab8:	ee76 6a85 	vadd.f32	s13, s13, s10
 8016abc:	ee37 7a25 	vadd.f32	s14, s14, s11
 8016ac0:	ee77 7a86 	vadd.f32	s15, s15, s12
 8016ac4:	3001      	adds	r0, #1
 8016ac6:	eba1 0108 	sub.w	r1, r1, r8
 8016aca:	f10c 3cff 	add.w	ip, ip, #4294967295
 8016ace:	f04f 0901 	mov.w	r9, #1
 8016ad2:	e79b      	b.n	8016a0c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3a8>
 8016ad4:	449c      	add	ip, r3
 8016ad6:	1aff      	subs	r7, r7, r3
 8016ad8:	f1b8 0f00 	cmp.w	r8, #0
 8016adc:	d009      	beq.n	8016af2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x48e>
 8016ade:	e9cd c71e 	strd	ip, r7, [sp, #120]	; 0x78
 8016ae2:	9019      	str	r0, [sp, #100]	; 0x64
 8016ae4:	edcd 6a23 	vstr	s13, [sp, #140]	; 0x8c
 8016ae8:	ed8d 7a26 	vstr	s14, [sp, #152]	; 0x98
 8016aec:	edcd 7a20 	vstr	s15, [sp, #128]	; 0x80
 8016af0:	911d      	str	r1, [sp, #116]	; 0x74
 8016af2:	1ad2      	subs	r2, r2, r3
 8016af4:	e68b      	b.n	801680e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 8016af6:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8016af8:	9a3f      	ldr	r2, [sp, #252]	; 0xfc
 8016afa:	2b00      	cmp	r3, #0
 8016afc:	f000 80d1 	beq.w	8016ca2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63e>
 8016b00:	ad19      	add	r5, sp, #100	; 0x64
 8016b02:	ac39      	add	r4, sp, #228	; 0xe4
 8016b04:	9b64      	ldr	r3, [sp, #400]	; 0x190
 8016b06:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 8016b0a:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 8016b0e:	930c      	str	r3, [sp, #48]	; 0x30
 8016b10:	990c      	ldr	r1, [sp, #48]	; 0x30
 8016b12:	6963      	ldr	r3, [r4, #20]
 8016b14:	440b      	add	r3, r1
 8016b16:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 8016b1a:	4408      	add	r0, r1
 8016b1c:	b200      	sxth	r0, r0
 8016b1e:	4283      	cmp	r3, r0
 8016b20:	900d      	str	r0, [sp, #52]	; 0x34
 8016b22:	f280 80c1 	bge.w	8016ca8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x644>
 8016b26:	428b      	cmp	r3, r1
 8016b28:	da08      	bge.n	8016b3c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 8016b2a:	2a00      	cmp	r2, #0
 8016b2c:	dd06      	ble.n	8016b3c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 8016b2e:	1acb      	subs	r3, r1, r3
 8016b30:	429a      	cmp	r2, r3
 8016b32:	f2c0 80bb 	blt.w	8016cac <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x648>
 8016b36:	2b00      	cmp	r3, #0
 8016b38:	f300 80b9 	bgt.w	8016cae <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x64a>
 8016b3c:	6967      	ldr	r7, [r4, #20]
 8016b3e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8016b40:	443b      	add	r3, r7
 8016b42:	461f      	mov	r7, r3
 8016b44:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8016b46:	1bdf      	subs	r7, r3, r7
 8016b48:	4297      	cmp	r7, r2
 8016b4a:	bfa8      	it	ge
 8016b4c:	4617      	movge	r7, r2
 8016b4e:	f10d 0850 	add.w	r8, sp, #80	; 0x50
 8016b52:	2f00      	cmp	r7, #0
 8016b54:	f340 813c 	ble.w	8016dd0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x76c>
 8016b58:	9b64      	ldr	r3, [sp, #400]	; 0x190
 8016b5a:	6829      	ldr	r1, [r5, #0]
 8016b5c:	f9b3 2000 	ldrsh.w	r2, [r3]
 8016b60:	f9bb 3000 	ldrsh.w	r3, [fp]
 8016b64:	6820      	ldr	r0, [r4, #0]
 8016b66:	4411      	add	r1, r2
 8016b68:	4299      	cmp	r1, r3
 8016b6a:	dd1a      	ble.n	8016ba2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 8016b6c:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 8016b70:	440b      	add	r3, r1
 8016b72:	4402      	add	r2, r0
 8016b74:	b21b      	sxth	r3, r3
 8016b76:	429a      	cmp	r2, r3
 8016b78:	dc13      	bgt.n	8016ba2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 8016b7a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8016b7c:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8016b7e:	681b      	ldr	r3, [r3, #0]
 8016b80:	9206      	str	r2, [sp, #24]
 8016b82:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8016b84:	9205      	str	r2, [sp, #20]
 8016b86:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8016b88:	9500      	str	r5, [sp, #0]
 8016b8a:	e9cd b203 	strd	fp, r2, [sp, #12]
 8016b8e:	9a64      	ldr	r2, [sp, #400]	; 0x190
 8016b90:	9809      	ldr	r0, [sp, #36]	; 0x24
 8016b92:	e9cd 8201 	strd	r8, r2, [sp, #4]
 8016b96:	a912      	add	r1, sp, #72	; 0x48
 8016b98:	f8d3 9048 	ldr.w	r9, [r3, #72]	; 0x48
 8016b9c:	aa49      	add	r2, sp, #292	; 0x124
 8016b9e:	4623      	mov	r3, r4
 8016ba0:	47c8      	blx	r9
 8016ba2:	e9d4 2300 	ldrd	r2, r3, [r4]
 8016ba6:	441a      	add	r2, r3
 8016ba8:	6963      	ldr	r3, [r4, #20]
 8016baa:	ed94 7a0a 	vldr	s14, [r4, #40]	; 0x28
 8016bae:	edd4 7a0b 	vldr	s15, [r4, #44]	; 0x2c
 8016bb2:	edd4 6a0e 	vldr	s13, [r4, #56]	; 0x38
 8016bb6:	68a1      	ldr	r1, [r4, #8]
 8016bb8:	ed94 6a08 	vldr	s12, [r4, #32]
 8016bbc:	6022      	str	r2, [r4, #0]
 8016bbe:	3301      	adds	r3, #1
 8016bc0:	6163      	str	r3, [r4, #20]
 8016bc2:	69a3      	ldr	r3, [r4, #24]
 8016bc4:	ee37 7a27 	vadd.f32	s14, s14, s15
 8016bc8:	3b01      	subs	r3, #1
 8016bca:	edd4 7a0d 	vldr	s15, [r4, #52]	; 0x34
 8016bce:	61a3      	str	r3, [r4, #24]
 8016bd0:	6923      	ldr	r3, [r4, #16]
 8016bd2:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 8016bd6:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8016bda:	edd4 6a07 	vldr	s13, [r4, #28]
 8016bde:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 8016be2:	440b      	add	r3, r1
 8016be4:	68e1      	ldr	r1, [r4, #12]
 8016be6:	6123      	str	r3, [r4, #16]
 8016be8:	ee76 6a86 	vadd.f32	s13, s13, s12
 8016bec:	428b      	cmp	r3, r1
 8016bee:	edc4 6a07 	vstr	s13, [r4, #28]
 8016bf2:	db15      	blt.n	8016c20 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x5bc>
 8016bf4:	ed94 6a09 	vldr	s12, [r4, #36]	; 0x24
 8016bf8:	ee76 6a26 	vadd.f32	s13, s12, s13
 8016bfc:	3201      	adds	r2, #1
 8016bfe:	edc4 6a07 	vstr	s13, [r4, #28]
 8016c02:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 8016c06:	6022      	str	r2, [r4, #0]
 8016c08:	ee36 7a87 	vadd.f32	s14, s13, s14
 8016c0c:	1a5b      	subs	r3, r3, r1
 8016c0e:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 8016c12:	ed94 7a0f 	vldr	s14, [r4, #60]	; 0x3c
 8016c16:	6123      	str	r3, [r4, #16]
 8016c18:	ee77 7a27 	vadd.f32	s15, s14, s15
 8016c1c:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 8016c20:	e9d5 2300 	ldrd	r2, r3, [r5]
 8016c24:	441a      	add	r2, r3
 8016c26:	696b      	ldr	r3, [r5, #20]
 8016c28:	ed95 7a0a 	vldr	s14, [r5, #40]	; 0x28
 8016c2c:	edd5 7a0b 	vldr	s15, [r5, #44]	; 0x2c
 8016c30:	edd5 6a0e 	vldr	s13, [r5, #56]	; 0x38
 8016c34:	68a9      	ldr	r1, [r5, #8]
 8016c36:	ed95 6a08 	vldr	s12, [r5, #32]
 8016c3a:	602a      	str	r2, [r5, #0]
 8016c3c:	3301      	adds	r3, #1
 8016c3e:	616b      	str	r3, [r5, #20]
 8016c40:	69ab      	ldr	r3, [r5, #24]
 8016c42:	ee37 7a27 	vadd.f32	s14, s14, s15
 8016c46:	3b01      	subs	r3, #1
 8016c48:	edd5 7a0d 	vldr	s15, [r5, #52]	; 0x34
 8016c4c:	61ab      	str	r3, [r5, #24]
 8016c4e:	692b      	ldr	r3, [r5, #16]
 8016c50:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 8016c54:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8016c58:	edd5 6a07 	vldr	s13, [r5, #28]
 8016c5c:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 8016c60:	440b      	add	r3, r1
 8016c62:	68e9      	ldr	r1, [r5, #12]
 8016c64:	612b      	str	r3, [r5, #16]
 8016c66:	ee76 6a86 	vadd.f32	s13, s13, s12
 8016c6a:	428b      	cmp	r3, r1
 8016c6c:	edc5 6a07 	vstr	s13, [r5, #28]
 8016c70:	db15      	blt.n	8016c9e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63a>
 8016c72:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
 8016c76:	ee76 6a26 	vadd.f32	s13, s12, s13
 8016c7a:	3201      	adds	r2, #1
 8016c7c:	edc5 6a07 	vstr	s13, [r5, #28]
 8016c80:	edd5 6a0c 	vldr	s13, [r5, #48]	; 0x30
 8016c84:	602a      	str	r2, [r5, #0]
 8016c86:	ee36 7a87 	vadd.f32	s14, s13, s14
 8016c8a:	1a5b      	subs	r3, r3, r1
 8016c8c:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 8016c90:	ed95 7a0f 	vldr	s14, [r5, #60]	; 0x3c
 8016c94:	612b      	str	r3, [r5, #16]
 8016c96:	ee77 7a27 	vadd.f32	s15, s14, s15
 8016c9a:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 8016c9e:	3f01      	subs	r7, #1
 8016ca0:	e757      	b.n	8016b52 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4ee>
 8016ca2:	ad39      	add	r5, sp, #228	; 0xe4
 8016ca4:	ac19      	add	r4, sp, #100	; 0x64
 8016ca6:	e72d      	b.n	8016b04 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4a0>
 8016ca8:	4613      	mov	r3, r2
 8016caa:	e744      	b.n	8016b36 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d2>
 8016cac:	4613      	mov	r3, r2
 8016cae:	e9dd 0a39 	ldrd	r0, sl, [sp, #228]	; 0xe4
 8016cb2:	9e3b      	ldr	r6, [sp, #236]	; 0xec
 8016cb4:	f8dd c0f8 	ldr.w	ip, [sp, #248]	; 0xf8
 8016cb8:	ed9d 7a43 	vldr	s14, [sp, #268]	; 0x10c
 8016cbc:	eddd 4a44 	vldr	s9, [sp, #272]	; 0x110
 8016cc0:	eddd 7a46 	vldr	s15, [sp, #280]	; 0x118
 8016cc4:	ed9d 4a47 	vldr	s8, [sp, #284]	; 0x11c
 8016cc8:	eddd 6a40 	vldr	s13, [sp, #256]	; 0x100
 8016ccc:	eddd 3a41 	vldr	s7, [sp, #260]	; 0x104
 8016cd0:	993d      	ldr	r1, [sp, #244]	; 0xf4
 8016cd2:	f8dd 80f0 	ldr.w	r8, [sp, #240]	; 0xf0
 8016cd6:	ed9d 5a42 	vldr	s10, [sp, #264]	; 0x108
 8016cda:	eddd 5a45 	vldr	s11, [sp, #276]	; 0x114
 8016cde:	ed9d 6a48 	vldr	s12, [sp, #288]	; 0x120
 8016ce2:	960e      	str	r6, [sp, #56]	; 0x38
 8016ce4:	469e      	mov	lr, r3
 8016ce6:	461f      	mov	r7, r3
 8016ce8:	f04f 0900 	mov.w	r9, #0
 8016cec:	2f00      	cmp	r7, #0
 8016cee:	d146      	bne.n	8016d7e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x71a>
 8016cf0:	449c      	add	ip, r3
 8016cf2:	1ad7      	subs	r7, r2, r3
 8016cf4:	f1b9 0f00 	cmp.w	r9, #0
 8016cf8:	d009      	beq.n	8016d0e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6aa>
 8016cfa:	e9cd c73e 	strd	ip, r7, [sp, #248]	; 0xf8
 8016cfe:	9039      	str	r0, [sp, #228]	; 0xe4
 8016d00:	913d      	str	r1, [sp, #244]	; 0xf4
 8016d02:	edcd 6a40 	vstr	s13, [sp, #256]	; 0x100
 8016d06:	ed8d 7a43 	vstr	s14, [sp, #268]	; 0x10c
 8016d0a:	edcd 7a46 	vstr	s15, [sp, #280]	; 0x118
 8016d0e:	991b      	ldr	r1, [sp, #108]	; 0x6c
 8016d10:	910e      	str	r1, [sp, #56]	; 0x38
 8016d12:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	; 0x64
 8016d16:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	; 0x78
 8016d1a:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	; 0x70
 8016d1e:	eddd 4a24 	vldr	s9, [sp, #144]	; 0x90
 8016d22:	eddd 6a23 	vldr	s13, [sp, #140]	; 0x8c
 8016d26:	ed9d 4a27 	vldr	s8, [sp, #156]	; 0x9c
 8016d2a:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 8016d2e:	eddd 3a21 	vldr	s7, [sp, #132]	; 0x84
 8016d32:	eddd 7a20 	vldr	s15, [sp, #128]	; 0x80
 8016d36:	ed9d 5a22 	vldr	s10, [sp, #136]	; 0x88
 8016d3a:	eddd 5a25 	vldr	s11, [sp, #148]	; 0x94
 8016d3e:	ed9d 6a28 	vldr	s12, [sp, #160]	; 0xa0
 8016d42:	f04f 0800 	mov.w	r8, #0
 8016d46:	f1be 0f00 	cmp.w	lr, #0
 8016d4a:	d030      	beq.n	8016dae <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x74a>
 8016d4c:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 8016d4e:	4431      	add	r1, r6
 8016d50:	4549      	cmp	r1, r9
 8016d52:	4450      	add	r0, sl
 8016d54:	ee76 6aa4 	vadd.f32	s13, s13, s9
 8016d58:	ee37 7a04 	vadd.f32	s14, s14, s8
 8016d5c:	ee77 7aa3 	vadd.f32	s15, s15, s7
 8016d60:	db08      	blt.n	8016d74 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x710>
 8016d62:	ee77 7a85 	vadd.f32	s15, s15, s10
 8016d66:	ee76 6aa5 	vadd.f32	s13, s13, s11
 8016d6a:	ee37 7a06 	vadd.f32	s14, s14, s12
 8016d6e:	3001      	adds	r0, #1
 8016d70:	eba1 0109 	sub.w	r1, r1, r9
 8016d74:	f10e 3eff 	add.w	lr, lr, #4294967295
 8016d78:	f04f 0801 	mov.w	r8, #1
 8016d7c:	e7e3      	b.n	8016d46 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6e2>
 8016d7e:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 8016d80:	4431      	add	r1, r6
 8016d82:	4541      	cmp	r1, r8
 8016d84:	4450      	add	r0, sl
 8016d86:	ee37 7a24 	vadd.f32	s14, s14, s9
 8016d8a:	ee77 7a84 	vadd.f32	s15, s15, s8
 8016d8e:	ee76 6aa3 	vadd.f32	s13, s13, s7
 8016d92:	db08      	blt.n	8016da6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x742>
 8016d94:	ee76 6a85 	vadd.f32	s13, s13, s10
 8016d98:	ee37 7a25 	vadd.f32	s14, s14, s11
 8016d9c:	ee77 7a86 	vadd.f32	s15, s15, s12
 8016da0:	3001      	adds	r0, #1
 8016da2:	eba1 0108 	sub.w	r1, r1, r8
 8016da6:	3f01      	subs	r7, #1
 8016da8:	f04f 0901 	mov.w	r9, #1
 8016dac:	e79e      	b.n	8016cec <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x688>
 8016dae:	449c      	add	ip, r3
 8016db0:	1aff      	subs	r7, r7, r3
 8016db2:	f1b8 0f00 	cmp.w	r8, #0
 8016db6:	d009      	beq.n	8016dcc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x768>
 8016db8:	e9cd c71e 	strd	ip, r7, [sp, #120]	; 0x78
 8016dbc:	9019      	str	r0, [sp, #100]	; 0x64
 8016dbe:	edcd 6a23 	vstr	s13, [sp, #140]	; 0x8c
 8016dc2:	ed8d 7a26 	vstr	s14, [sp, #152]	; 0x98
 8016dc6:	edcd 7a20 	vstr	s15, [sp, #128]	; 0x80
 8016dca:	911d      	str	r1, [sp, #116]	; 0x74
 8016dcc:	1ad2      	subs	r2, r2, r3
 8016dce:	e6b5      	b.n	8016b3c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 8016dd0:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8016dd2:	681b      	ldr	r3, [r3, #0]
 8016dd4:	b923      	cbnz	r3, 8016de0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8016dd6:	4b04      	ldr	r3, [pc, #16]	; (8016de8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x784>)
 8016dd8:	6818      	ldr	r0, [r3, #0]
 8016dda:	6803      	ldr	r3, [r0, #0]
 8016ddc:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8016dde:	4798      	blx	r3
 8016de0:	b05b      	add	sp, #364	; 0x16c
 8016de2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016de6:	bf00      	nop
 8016de8:	20006c34 	.word	0x20006c34

08016dec <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>:
 8016dec:	b570      	push	{r4, r5, r6, lr}
 8016dee:	4604      	mov	r4, r0
 8016df0:	f89d 601c 	ldrb.w	r6, [sp, #28]
 8016df4:	9805      	ldr	r0, [sp, #20]
 8016df6:	6061      	str	r1, [r4, #4]
 8016df8:	2500      	movs	r5, #0
 8016dfa:	f89d 1010 	ldrb.w	r1, [sp, #16]
 8016dfe:	8263      	strh	r3, [r4, #18]
 8016e00:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8016e04:	8025      	strh	r5, [r4, #0]
 8016e06:	7221      	strb	r1, [r4, #8]
 8016e08:	7266      	strb	r6, [r4, #9]
 8016e0a:	60e0      	str	r0, [r4, #12]
 8016e0c:	8222      	strh	r2, [r4, #16]
 8016e0e:	82a3      	strh	r3, [r4, #20]
 8016e10:	82e5      	strh	r5, [r4, #22]
 8016e12:	8325      	strh	r5, [r4, #24]
 8016e14:	8365      	strh	r5, [r4, #26]
 8016e16:	83a5      	strh	r5, [r4, #28]
 8016e18:	83e5      	strh	r5, [r4, #30]
 8016e1a:	8425      	strh	r5, [r4, #32]
 8016e1c:	f884 5022 	strb.w	r5, [r4, #34]	; 0x22
 8016e20:	b32e      	cbz	r6, 8016e6e <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 8016e22:	6803      	ldr	r3, [r0, #0]
 8016e24:	695b      	ldr	r3, [r3, #20]
 8016e26:	4798      	blx	r3
 8016e28:	4606      	mov	r6, r0
 8016e2a:	b300      	cbz	r0, 8016e6e <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 8016e2c:	68e0      	ldr	r0, [r4, #12]
 8016e2e:	6803      	ldr	r3, [r0, #0]
 8016e30:	4631      	mov	r1, r6
 8016e32:	68db      	ldr	r3, [r3, #12]
 8016e34:	4798      	blx	r3
 8016e36:	4605      	mov	r5, r0
 8016e38:	b1c8      	cbz	r0, 8016e6e <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 8016e3a:	7b43      	ldrb	r3, [r0, #13]
 8016e3c:	7a82      	ldrb	r2, [r0, #10]
 8016e3e:	005b      	lsls	r3, r3, #1
 8016e40:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8016e44:	4313      	orrs	r3, r2
 8016e46:	8423      	strh	r3, [r4, #32]
 8016e48:	7a63      	ldrb	r3, [r4, #9]
 8016e4a:	2b06      	cmp	r3, #6
 8016e4c:	d10f      	bne.n	8016e6e <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 8016e4e:	68e0      	ldr	r0, [r4, #12]
 8016e50:	6803      	ldr	r3, [r0, #0]
 8016e52:	462a      	mov	r2, r5
 8016e54:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8016e56:	4631      	mov	r1, r6
 8016e58:	4798      	blx	r3
 8016e5a:	7b6b      	ldrb	r3, [r5, #13]
 8016e5c:	005b      	lsls	r3, r3, #1
 8016e5e:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8016e62:	7aab      	ldrb	r3, [r5, #10]
 8016e64:	4313      	orrs	r3, r2
 8016e66:	4418      	add	r0, r3
 8016e68:	8c23      	ldrh	r3, [r4, #32]
 8016e6a:	4418      	add	r0, r3
 8016e6c:	8420      	strh	r0, [r4, #32]
 8016e6e:	4620      	mov	r0, r4
 8016e70:	bd70      	pop	{r4, r5, r6, pc}

08016e72 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>:
 8016e72:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016e76:	2400      	movs	r4, #0
 8016e78:	b085      	sub	sp, #20
 8016e7a:	4681      	mov	r9, r0
 8016e7c:	4688      	mov	r8, r1
 8016e7e:	4692      	mov	sl, r2
 8016e80:	469b      	mov	fp, r3
 8016e82:	4627      	mov	r7, r4
 8016e84:	4625      	mov	r5, r4
 8016e86:	4626      	mov	r6, r4
 8016e88:	4554      	cmp	r4, sl
 8016e8a:	da2a      	bge.n	8016ee2 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 8016e8c:	2300      	movs	r3, #0
 8016e8e:	9303      	str	r3, [sp, #12]
 8016e90:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8016e94:	429d      	cmp	r5, r3
 8016e96:	d004      	beq.n	8016ea2 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x30>
 8016e98:	f242 030b 	movw	r3, #8203	; 0x200b
 8016e9c:	429d      	cmp	r5, r3
 8016e9e:	bf18      	it	ne
 8016ea0:	462f      	movne	r7, r5
 8016ea2:	ab03      	add	r3, sp, #12
 8016ea4:	4642      	mov	r2, r8
 8016ea6:	4659      	mov	r1, fp
 8016ea8:	4648      	mov	r0, r9
 8016eaa:	f004 f8f7 	bl	801b09c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8016eae:	4605      	mov	r5, r0
 8016eb0:	b1b8      	cbz	r0, 8016ee2 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 8016eb2:	280a      	cmp	r0, #10
 8016eb4:	d015      	beq.n	8016ee2 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 8016eb6:	9a03      	ldr	r2, [sp, #12]
 8016eb8:	b18a      	cbz	r2, 8016ede <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x6c>
 8016eba:	7b50      	ldrb	r0, [r2, #13]
 8016ebc:	7a93      	ldrb	r3, [r2, #10]
 8016ebe:	8895      	ldrh	r5, [r2, #4]
 8016ec0:	0040      	lsls	r0, r0, #1
 8016ec2:	f400 7080 	and.w	r0, r0, #256	; 0x100
 8016ec6:	4303      	orrs	r3, r0
 8016ec8:	9301      	str	r3, [sp, #4]
 8016eca:	f8d8 3000 	ldr.w	r3, [r8]
 8016ece:	4639      	mov	r1, r7
 8016ed0:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8016ed2:	4640      	mov	r0, r8
 8016ed4:	4798      	blx	r3
 8016ed6:	9b01      	ldr	r3, [sp, #4]
 8016ed8:	4418      	add	r0, r3
 8016eda:	4406      	add	r6, r0
 8016edc:	b2b6      	uxth	r6, r6
 8016ede:	3401      	adds	r4, #1
 8016ee0:	e7d2      	b.n	8016e88 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x16>
 8016ee2:	4630      	mov	r0, r6
 8016ee4:	b005      	add	sp, #20
 8016ee6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08016eea <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>:
 8016eea:	2a02      	cmp	r2, #2
 8016eec:	b530      	push	{r4, r5, lr}
 8016eee:	d011      	beq.n	8016f14 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x2a>
 8016ef0:	2a03      	cmp	r2, #3
 8016ef2:	d01c      	beq.n	8016f2e <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x44>
 8016ef4:	2a01      	cmp	r2, #1
 8016ef6:	d10c      	bne.n	8016f12 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 8016ef8:	888b      	ldrh	r3, [r1, #4]
 8016efa:	8801      	ldrh	r1, [r0, #0]
 8016efc:	f9b0 2004 	ldrsh.w	r2, [r0, #4]
 8016f00:	8844      	ldrh	r4, [r0, #2]
 8016f02:	8004      	strh	r4, [r0, #0]
 8016f04:	1a5b      	subs	r3, r3, r1
 8016f06:	1a9b      	subs	r3, r3, r2
 8016f08:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 8016f0c:	8043      	strh	r3, [r0, #2]
 8016f0e:	8081      	strh	r1, [r0, #4]
 8016f10:	80c2      	strh	r2, [r0, #6]
 8016f12:	bd30      	pop	{r4, r5, pc}
 8016f14:	88cb      	ldrh	r3, [r1, #6]
 8016f16:	8842      	ldrh	r2, [r0, #2]
 8016f18:	1a9b      	subs	r3, r3, r2
 8016f1a:	88c2      	ldrh	r2, [r0, #6]
 8016f1c:	1a9b      	subs	r3, r3, r2
 8016f1e:	888a      	ldrh	r2, [r1, #4]
 8016f20:	8801      	ldrh	r1, [r0, #0]
 8016f22:	8043      	strh	r3, [r0, #2]
 8016f24:	1a52      	subs	r2, r2, r1
 8016f26:	8881      	ldrh	r1, [r0, #4]
 8016f28:	1a52      	subs	r2, r2, r1
 8016f2a:	8002      	strh	r2, [r0, #0]
 8016f2c:	e7f1      	b.n	8016f12 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 8016f2e:	88cb      	ldrh	r3, [r1, #6]
 8016f30:	8841      	ldrh	r1, [r0, #2]
 8016f32:	f9b0 2006 	ldrsh.w	r2, [r0, #6]
 8016f36:	f9b0 5000 	ldrsh.w	r5, [r0]
 8016f3a:	f9b0 4004 	ldrsh.w	r4, [r0, #4]
 8016f3e:	8045      	strh	r5, [r0, #2]
 8016f40:	1a5b      	subs	r3, r3, r1
 8016f42:	1a9b      	subs	r3, r3, r2
 8016f44:	8003      	strh	r3, [r0, #0]
 8016f46:	8082      	strh	r2, [r0, #4]
 8016f48:	80c4      	strh	r4, [r0, #6]
 8016f4a:	e7e2      	b.n	8016f12 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>

08016f4c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>:
 8016f4c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016f50:	b09f      	sub	sp, #124	; 0x7c
 8016f52:	920f      	str	r2, [sp, #60]	; 0x3c
 8016f54:	9312      	str	r3, [sp, #72]	; 0x48
 8016f56:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8016f58:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8016f5a:	9d2a      	ldr	r5, [sp, #168]	; 0xa8
 8016f5c:	8812      	ldrh	r2, [r2, #0]
 8016f5e:	889b      	ldrh	r3, [r3, #4]
 8016f60:	900e      	str	r0, [sp, #56]	; 0x38
 8016f62:	4413      	add	r3, r2
 8016f64:	6828      	ldr	r0, [r5, #0]
 8016f66:	9117      	str	r1, [sp, #92]	; 0x5c
 8016f68:	b21b      	sxth	r3, r3
 8016f6a:	9311      	str	r3, [sp, #68]	; 0x44
 8016f6c:	6803      	ldr	r3, [r0, #0]
 8016f6e:	f89d b0ac 	ldrb.w	fp, [sp, #172]	; 0xac
 8016f72:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8016f74:	f89d 40b8 	ldrb.w	r4, [sp, #184]	; 0xb8
 8016f78:	4798      	blx	r3
 8016f7a:	682b      	ldr	r3, [r5, #0]
 8016f7c:	9013      	str	r0, [sp, #76]	; 0x4c
 8016f7e:	7b1a      	ldrb	r2, [r3, #12]
 8016f80:	7adb      	ldrb	r3, [r3, #11]
 8016f82:	9215      	str	r2, [sp, #84]	; 0x54
 8016f84:	9316      	str	r3, [sp, #88]	; 0x58
 8016f86:	f9bd 60a0 	ldrsh.w	r6, [sp, #160]	; 0xa0
 8016f8a:	2c00      	cmp	r4, #0
 8016f8c:	d067      	beq.n	801705e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x112>
 8016f8e:	7c2b      	ldrb	r3, [r5, #16]
 8016f90:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 8016f92:	2b06      	cmp	r3, #6
 8016f94:	bf14      	ite	ne
 8016f96:	2301      	movne	r3, #1
 8016f98:	2302      	moveq	r3, #2
 8016f9a:	4413      	add	r3, r2
 8016f9c:	f04f 0900 	mov.w	r9, #0
 8016fa0:	9310      	str	r3, [sp, #64]	; 0x40
 8016fa2:	f8cd 9034 	str.w	r9, [sp, #52]	; 0x34
 8016fa6:	464c      	mov	r4, r9
 8016fa8:	f8cd 9030 	str.w	r9, [sp, #48]	; 0x30
 8016fac:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8016fae:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8016fb0:	4293      	cmp	r3, r2
 8016fb2:	f280 808b 	bge.w	80170cc <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x180>
 8016fb6:	2300      	movs	r3, #0
 8016fb8:	e9cd 331c 	strd	r3, r3, [sp, #112]	; 0x70
 8016fbc:	f88d 306f 	strb.w	r3, [sp, #111]	; 0x6f
 8016fc0:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8016fc4:	429c      	cmp	r4, r3
 8016fc6:	d006      	beq.n	8016fd6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x8a>
 8016fc8:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8016fca:	f242 020b 	movw	r2, #8203	; 0x200b
 8016fce:	4294      	cmp	r4, r2
 8016fd0:	bf18      	it	ne
 8016fd2:	4623      	movne	r3, r4
 8016fd4:	930c      	str	r3, [sp, #48]	; 0x30
 8016fd6:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8016fd8:	992d      	ldr	r1, [sp, #180]	; 0xb4
 8016fda:	682a      	ldr	r2, [r5, #0]
 8016fdc:	428b      	cmp	r3, r1
 8016fde:	db40      	blt.n	8017062 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x116>
 8016fe0:	6813      	ldr	r3, [r2, #0]
 8016fe2:	4610      	mov	r0, r2
 8016fe4:	695b      	ldr	r3, [r3, #20]
 8016fe6:	4798      	blx	r3
 8016fe8:	4604      	mov	r4, r0
 8016fea:	6828      	ldr	r0, [r5, #0]
 8016fec:	6803      	ldr	r3, [r0, #0]
 8016fee:	aa1d      	add	r2, sp, #116	; 0x74
 8016ff0:	689f      	ldr	r7, [r3, #8]
 8016ff2:	4621      	mov	r1, r4
 8016ff4:	f10d 036f 	add.w	r3, sp, #111	; 0x6f
 8016ff8:	47b8      	blx	r7
 8016ffa:	901c      	str	r0, [sp, #112]	; 0x70
 8016ffc:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8017000:	429c      	cmp	r4, r3
 8017002:	f000 80ea 	beq.w	80171da <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28e>
 8017006:	f242 030b 	movw	r3, #8203	; 0x200b
 801700a:	429c      	cmp	r4, r3
 801700c:	f000 80e5 	beq.w	80171da <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28e>
 8017010:	2c00      	cmp	r4, #0
 8017012:	f000 810c 	beq.w	801722e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2e2>
 8017016:	2c0a      	cmp	r4, #10
 8017018:	d05e      	beq.n	80170d8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18c>
 801701a:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 801701c:	b36a      	cbz	r2, 801707a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x12e>
 801701e:	8894      	ldrh	r4, [r2, #4]
 8017020:	f1bb 0f00 	cmp.w	fp, #0
 8017024:	d03a      	beq.n	801709c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x150>
 8017026:	f892 900d 	ldrb.w	r9, [r2, #13]
 801702a:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801702e:	f409 7380 	and.w	r3, r9, #256	; 0x100
 8017032:	f892 900a 	ldrb.w	r9, [r2, #10]
 8017036:	f1bb 0f01 	cmp.w	fp, #1
 801703a:	ea49 0903 	orr.w	r9, r9, r3
 801703e:	d133      	bne.n	80170a8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x15c>
 8017040:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8017042:	eba6 0609 	sub.w	r6, r6, r9
 8017046:	2b00      	cmp	r3, #0
 8017048:	d14d      	bne.n	80170e6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19a>
 801704a:	9a15      	ldr	r2, [sp, #84]	; 0x54
 801704c:	eb09 0306 	add.w	r3, r9, r6
 8017050:	4413      	add	r3, r2
 8017052:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8017054:	f9b2 2000 	ldrsh.w	r2, [r2]
 8017058:	4293      	cmp	r3, r2
 801705a:	da4e      	bge.n	80170fa <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1ae>
 801705c:	e036      	b.n	80170cc <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x180>
 801705e:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 8017060:	e79c      	b.n	8016f9c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x50>
 8017062:	f10d 036f 	add.w	r3, sp, #111	; 0x6f
 8017066:	9301      	str	r3, [sp, #4]
 8017068:	ab1d      	add	r3, sp, #116	; 0x74
 801706a:	9300      	str	r3, [sp, #0]
 801706c:	4659      	mov	r1, fp
 801706e:	ab1c      	add	r3, sp, #112	; 0x70
 8017070:	982c      	ldr	r0, [sp, #176]	; 0xb0
 8017072:	f004 f85c 	bl	801b12e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>
 8017076:	4604      	mov	r4, r0
 8017078:	e7c0      	b.n	8016ffc <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xb0>
 801707a:	6828      	ldr	r0, [r5, #0]
 801707c:	6803      	ldr	r3, [r0, #0]
 801707e:	691b      	ldr	r3, [r3, #16]
 8017080:	4798      	blx	r3
 8017082:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8017086:	4298      	cmp	r0, r3
 8017088:	f000 80a7 	beq.w	80171da <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28e>
 801708c:	f242 030b 	movw	r3, #8203	; 0x200b
 8017090:	4298      	cmp	r0, r3
 8017092:	f000 80a2 	beq.w	80171da <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28e>
 8017096:	f1bb 0f00 	cmp.w	fp, #0
 801709a:	d100      	bne.n	801709e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x152>
 801709c:	444e      	add	r6, r9
 801709e:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 80170a0:	2a00      	cmp	r2, #0
 80170a2:	d1c0      	bne.n	8017026 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xda>
 80170a4:	4691      	mov	r9, r2
 80170a6:	e098      	b.n	80171da <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28e>
 80170a8:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80170aa:	2b00      	cmp	r3, #0
 80170ac:	f000 80c1 	beq.w	8017232 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2e6>
 80170b0:	f1bb 0f00 	cmp.w	fp, #0
 80170b4:	d117      	bne.n	80170e6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19a>
 80170b6:	6828      	ldr	r0, [r5, #0]
 80170b8:	990c      	ldr	r1, [sp, #48]	; 0x30
 80170ba:	6803      	ldr	r3, [r0, #0]
 80170bc:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80170be:	4798      	blx	r3
 80170c0:	4406      	add	r6, r0
 80170c2:	9b16      	ldr	r3, [sp, #88]	; 0x58
 80170c4:	9a11      	ldr	r2, [sp, #68]	; 0x44
 80170c6:	1af3      	subs	r3, r6, r3
 80170c8:	4293      	cmp	r3, r2
 80170ca:	dd16      	ble.n	80170fa <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1ae>
 80170cc:	2c00      	cmp	r4, #0
 80170ce:	f000 80ae 	beq.w	801722e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2e2>
 80170d2:	2c0a      	cmp	r4, #10
 80170d4:	f040 809c 	bne.w	8017210 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2c4>
 80170d8:	240a      	movs	r4, #10
 80170da:	fab4 f084 	clz	r0, r4
 80170de:	0940      	lsrs	r0, r0, #5
 80170e0:	b01f      	add	sp, #124	; 0x7c
 80170e2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80170e6:	6828      	ldr	r0, [r5, #0]
 80170e8:	990c      	ldr	r1, [sp, #48]	; 0x30
 80170ea:	6803      	ldr	r3, [r0, #0]
 80170ec:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80170ee:	4798      	blx	r3
 80170f0:	f1bb 0f01 	cmp.w	fp, #1
 80170f4:	eba6 0600 	sub.w	r6, r6, r0
 80170f8:	d0a7      	beq.n	801704a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xfe>
 80170fa:	981c      	ldr	r0, [sp, #112]	; 0x70
 80170fc:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 80170fe:	f990 1009 	ldrsb.w	r1, [r0, #9]
 8017102:	f9b3 8000 	ldrsh.w	r8, [r3]
 8017106:	7b43      	ldrb	r3, [r0, #13]
 8017108:	015b      	lsls	r3, r3, #5
 801710a:	f403 7280 	and.w	r2, r3, #256	; 0x100
 801710e:	7983      	ldrb	r3, [r0, #6]
 8017110:	4431      	add	r1, r6
 8017112:	4313      	orrs	r3, r2
 8017114:	440b      	add	r3, r1
 8017116:	4543      	cmp	r3, r8
 8017118:	db5f      	blt.n	80171da <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28e>
 801711a:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801711c:	4299      	cmp	r1, r3
 801711e:	da5c      	bge.n	80171da <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28e>
 8017120:	6828      	ldr	r0, [r5, #0]
 8017122:	6803      	ldr	r3, [r0, #0]
 8017124:	45b0      	cmp	r8, r6
 8017126:	bfc8      	it	gt
 8017128:	eba8 0806 	subgt.w	r8, r8, r6
 801712c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801712e:	bfcc      	ite	gt
 8017130:	fa1f f888 	uxthgt.w	r8, r8
 8017134:	f04f 0800 	movle.w	r8, #0
 8017138:	4798      	blx	r3
 801713a:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 801713c:	7b53      	ldrb	r3, [r2, #13]
 801713e:	00d9      	lsls	r1, r3, #3
 8017140:	f401 7780 	and.w	r7, r1, #256	; 0x100
 8017144:	7a11      	ldrb	r1, [r2, #8]
 8017146:	4339      	orrs	r1, r7
 8017148:	065f      	lsls	r7, r3, #25
 801714a:	9f12      	ldr	r7, [sp, #72]	; 0x48
 801714c:	bf44      	itt	mi
 801714e:	f5a1 7100 	submi.w	r1, r1, #512	; 0x200
 8017152:	b209      	sxthmi	r1, r1
 8017154:	19c7      	adds	r7, r0, r7
 8017156:	1a7f      	subs	r7, r7, r1
 8017158:	9929      	ldr	r1, [sp, #164]	; 0xa4
 801715a:	b2bf      	uxth	r7, r7
 801715c:	f9b1 1002 	ldrsh.w	r1, [r1, #2]
 8017160:	fa0f fa87 	sxth.w	sl, r7
 8017164:	4551      	cmp	r1, sl
 8017166:	dd3c      	ble.n	80171e2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x296>
 8017168:	011b      	lsls	r3, r3, #4
 801716a:	79d0      	ldrb	r0, [r2, #7]
 801716c:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8017170:	4303      	orrs	r3, r0
 8017172:	449a      	add	sl, r3
 8017174:	4551      	cmp	r1, sl
 8017176:	dc30      	bgt.n	80171da <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28e>
 8017178:	1bcf      	subs	r7, r1, r7
 801717a:	b23f      	sxth	r7, r7
 801717c:	468a      	mov	sl, r1
 801717e:	9219      	str	r2, [sp, #100]	; 0x64
 8017180:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8017182:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8017184:	6828      	ldr	r0, [r5, #0]
 8017186:	2a00      	cmp	r2, #0
 8017188:	d12d      	bne.n	80171e6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x29a>
 801718a:	9318      	str	r3, [sp, #96]	; 0x60
 801718c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801718e:	6819      	ldr	r1, [r3, #0]
 8017190:	6ccb      	ldr	r3, [r1, #76]	; 0x4c
 8017192:	6801      	ldr	r1, [r0, #0]
 8017194:	9314      	str	r3, [sp, #80]	; 0x50
 8017196:	6c09      	ldr	r1, [r1, #64]	; 0x40
 8017198:	4788      	blx	r1
 801719a:	79a9      	ldrb	r1, [r5, #6]
 801719c:	910b      	str	r1, [sp, #44]	; 0x2c
 801719e:	7ba9      	ldrb	r1, [r5, #14]
 80171a0:	910a      	str	r1, [sp, #40]	; 0x28
 80171a2:	f89d 106f 	ldrb.w	r1, [sp, #111]	; 0x6f
 80171a6:	9109      	str	r1, [sp, #36]	; 0x24
 80171a8:	68a9      	ldr	r1, [r5, #8]
 80171aa:	9b18      	ldr	r3, [sp, #96]	; 0x60
 80171ac:	9306      	str	r3, [sp, #24]
 80171ae:	b2bf      	uxth	r7, r7
 80171b0:	e9cd 8702 	strd	r8, r7, [sp, #8]
 80171b4:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 80171b6:	9304      	str	r3, [sp, #16]
 80171b8:	44b0      	add	r8, r6
 80171ba:	e9cd 0107 	strd	r0, r1, [sp, #28]
 80171be:	fa0f f388 	sxth.w	r3, r8
 80171c2:	9300      	str	r3, [sp, #0]
 80171c4:	9a19      	ldr	r2, [sp, #100]	; 0x64
 80171c6:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80171c8:	9205      	str	r2, [sp, #20]
 80171ca:	f8cd a004 	str.w	sl, [sp, #4]
 80171ce:	681a      	ldr	r2, [r3, #0]
 80171d0:	9917      	ldr	r1, [sp, #92]	; 0x5c
 80171d2:	685b      	ldr	r3, [r3, #4]
 80171d4:	980e      	ldr	r0, [sp, #56]	; 0x38
 80171d6:	9f14      	ldr	r7, [sp, #80]	; 0x50
 80171d8:	47b8      	blx	r7
 80171da:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80171dc:	3301      	adds	r3, #1
 80171de:	930d      	str	r3, [sp, #52]	; 0x34
 80171e0:	e6e4      	b.n	8016fac <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x60>
 80171e2:	2700      	movs	r7, #0
 80171e4:	e7cb      	b.n	801717e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x232>
 80171e6:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 80171e8:	f8d2 c008 	ldr.w	ip, [r2, #8]
 80171ec:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80171ee:	f8dc 1000 	ldr.w	r1, [ip]
 80171f2:	e9cd 6204 	strd	r6, r2, [sp, #16]
 80171f6:	79aa      	ldrb	r2, [r5, #6]
 80171f8:	9203      	str	r2, [sp, #12]
 80171fa:	7baa      	ldrb	r2, [r5, #14]
 80171fc:	9202      	str	r2, [sp, #8]
 80171fe:	68aa      	ldr	r2, [r5, #8]
 8017200:	e9cd 0200 	strd	r0, r2, [sp]
 8017204:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8017206:	688f      	ldr	r7, [r1, #8]
 8017208:	990f      	ldr	r1, [sp, #60]	; 0x3c
 801720a:	4660      	mov	r0, ip
 801720c:	47b8      	blx	r7
 801720e:	e7e4      	b.n	80171da <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28e>
 8017210:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8017212:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 8017214:	3501      	adds	r5, #1
 8017216:	429d      	cmp	r5, r3
 8017218:	f6bf af5f 	bge.w	80170da <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18e>
 801721c:	4659      	mov	r1, fp
 801721e:	982c      	ldr	r0, [sp, #176]	; 0xb0
 8017220:	f7f7 fdc4 	bl	800edac <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 8017224:	4604      	mov	r4, r0
 8017226:	b110      	cbz	r0, 801722e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2e2>
 8017228:	280a      	cmp	r0, #10
 801722a:	d1f2      	bne.n	8017212 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2c6>
 801722c:	e754      	b.n	80170d8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18c>
 801722e:	2400      	movs	r4, #0
 8017230:	e753      	b.n	80170da <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18e>
 8017232:	f1bb 0f00 	cmp.w	fp, #0
 8017236:	f43f af44 	beq.w	80170c2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x176>
 801723a:	e75e      	b.n	80170fa <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1ae>

0801723c <_ZN8touchgfx3LCD21drawStringRTLInternalERsPKNS_4FontEhRNS_12TextProviderEitPKNS0_24DrawStringInternalStructE>:
 801723c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017240:	b089      	sub	sp, #36	; 0x24
 8017242:	4699      	mov	r9, r3
 8017244:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8017246:	f8bd 4050 	ldrh.w	r4, [sp, #80]	; 0x50
 801724a:	9e15      	ldr	r6, [sp, #84]	; 0x54
 801724c:	4683      	mov	fp, r0
 801724e:	460d      	mov	r5, r1
 8017250:	4690      	mov	r8, r2
 8017252:	bb1b      	cbnz	r3, 801729c <_ZN8touchgfx3LCD21drawStringRTLInternalERsPKNS_4FontEhRNS_12TextProviderEitPKNS0_24DrawStringInternalStructE+0x60>
 8017254:	6813      	ldr	r3, [r2, #0]
 8017256:	4610      	mov	r0, r2
 8017258:	695b      	ldr	r3, [r3, #20]
 801725a:	4798      	blx	r3
 801725c:	4682      	mov	sl, r0
 801725e:	b1e8      	cbz	r0, 801729c <_ZN8touchgfx3LCD21drawStringRTLInternalERsPKNS_4FontEhRNS_12TextProviderEitPKNS0_24DrawStringInternalStructE+0x60>
 8017260:	f8d8 3000 	ldr.w	r3, [r8]
 8017264:	4601      	mov	r1, r0
 8017266:	68db      	ldr	r3, [r3, #12]
 8017268:	4640      	mov	r0, r8
 801726a:	4798      	blx	r3
 801726c:	4602      	mov	r2, r0
 801726e:	2800      	cmp	r0, #0
 8017270:	d03f      	beq.n	80172f2 <_ZN8touchgfx3LCD21drawStringRTLInternalERsPKNS_4FontEhRNS_12TextProviderEitPKNS0_24DrawStringInternalStructE+0xb6>
 8017272:	7b47      	ldrb	r7, [r0, #13]
 8017274:	007f      	lsls	r7, r7, #1
 8017276:	f407 7380 	and.w	r3, r7, #256	; 0x100
 801727a:	7a87      	ldrb	r7, [r0, #10]
 801727c:	431f      	orrs	r7, r3
 801727e:	6933      	ldr	r3, [r6, #16]
 8017280:	7c1b      	ldrb	r3, [r3, #16]
 8017282:	443c      	add	r4, r7
 8017284:	2b06      	cmp	r3, #6
 8017286:	b2a4      	uxth	r4, r4
 8017288:	d108      	bne.n	801729c <_ZN8touchgfx3LCD21drawStringRTLInternalERsPKNS_4FontEhRNS_12TextProviderEitPKNS0_24DrawStringInternalStructE+0x60>
 801728a:	f8d8 3000 	ldr.w	r3, [r8]
 801728e:	4651      	mov	r1, sl
 8017290:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8017292:	4640      	mov	r0, r8
 8017294:	4798      	blx	r3
 8017296:	4438      	add	r0, r7
 8017298:	4404      	add	r4, r0
 801729a:	b2a4      	uxth	r4, r4
 801729c:	6933      	ldr	r3, [r6, #16]
 801729e:	795a      	ldrb	r2, [r3, #5]
 80172a0:	f9b5 3000 	ldrsh.w	r3, [r5]
 80172a4:	bb42      	cbnz	r2, 80172f8 <_ZN8touchgfx3LCD21drawStringRTLInternalERsPKNS_4FontEhRNS_12TextProviderEitPKNS0_24DrawStringInternalStructE+0xbc>
 80172a6:	f1b9 0f01 	cmp.w	r9, #1
 80172aa:	d101      	bne.n	80172b0 <_ZN8touchgfx3LCD21drawStringRTLInternalERsPKNS_4FontEhRNS_12TextProviderEitPKNS0_24DrawStringInternalStructE+0x74>
 80172ac:	4423      	add	r3, r4
 80172ae:	802b      	strh	r3, [r5, #0]
 80172b0:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80172b2:	f9b6 3008 	ldrsh.w	r3, [r6, #8]
 80172b6:	fab2 f282 	clz	r2, r2
 80172ba:	0952      	lsrs	r2, r2, #5
 80172bc:	9206      	str	r2, [sp, #24]
 80172be:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80172c0:	9205      	str	r2, [sp, #20]
 80172c2:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80172c4:	e9cd 9203 	strd	r9, r2, [sp, #12]
 80172c8:	6932      	ldr	r2, [r6, #16]
 80172ca:	9202      	str	r2, [sp, #8]
 80172cc:	68f2      	ldr	r2, [r6, #12]
 80172ce:	9201      	str	r2, [sp, #4]
 80172d0:	f9b5 2000 	ldrsh.w	r2, [r5]
 80172d4:	9200      	str	r2, [sp, #0]
 80172d6:	e9d6 1200 	ldrd	r1, r2, [r6]
 80172da:	4658      	mov	r0, fp
 80172dc:	f7ff fe36 	bl	8016f4c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>
 80172e0:	6933      	ldr	r3, [r6, #16]
 80172e2:	795b      	ldrb	r3, [r3, #5]
 80172e4:	b97b      	cbnz	r3, 8017306 <_ZN8touchgfx3LCD21drawStringRTLInternalERsPKNS_4FontEhRNS_12TextProviderEitPKNS0_24DrawStringInternalStructE+0xca>
 80172e6:	f1b9 0f00 	cmp.w	r9, #0
 80172ea:	d102      	bne.n	80172f2 <_ZN8touchgfx3LCD21drawStringRTLInternalERsPKNS_4FontEhRNS_12TextProviderEitPKNS0_24DrawStringInternalStructE+0xb6>
 80172ec:	8828      	ldrh	r0, [r5, #0]
 80172ee:	4404      	add	r4, r0
 80172f0:	802c      	strh	r4, [r5, #0]
 80172f2:	b009      	add	sp, #36	; 0x24
 80172f4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80172f8:	2a01      	cmp	r2, #1
 80172fa:	d1d9      	bne.n	80172b0 <_ZN8touchgfx3LCD21drawStringRTLInternalERsPKNS_4FontEhRNS_12TextProviderEitPKNS0_24DrawStringInternalStructE+0x74>
 80172fc:	f1b9 0f00 	cmp.w	r9, #0
 8017300:	d1d6      	bne.n	80172b0 <_ZN8touchgfx3LCD21drawStringRTLInternalERsPKNS_4FontEhRNS_12TextProviderEitPKNS0_24DrawStringInternalStructE+0x74>
 8017302:	1b1b      	subs	r3, r3, r4
 8017304:	e7d3      	b.n	80172ae <_ZN8touchgfx3LCD21drawStringRTLInternalERsPKNS_4FontEhRNS_12TextProviderEitPKNS0_24DrawStringInternalStructE+0x72>
 8017306:	2b01      	cmp	r3, #1
 8017308:	d1f3      	bne.n	80172f2 <_ZN8touchgfx3LCD21drawStringRTLInternalERsPKNS_4FontEhRNS_12TextProviderEitPKNS0_24DrawStringInternalStructE+0xb6>
 801730a:	f1b9 0f01 	cmp.w	r9, #1
 801730e:	d1f0      	bne.n	80172f2 <_ZN8touchgfx3LCD21drawStringRTLInternalERsPKNS_4FontEhRNS_12TextProviderEitPKNS0_24DrawStringInternalStructE+0xb6>
 8017310:	8828      	ldrh	r0, [r5, #0]
 8017312:	1b04      	subs	r4, r0, r4
 8017314:	e7ec      	b.n	80172f0 <_ZN8touchgfx3LCD21drawStringRTLInternalERsPKNS_4FontEhRNS_12TextProviderEitPKNS0_24DrawStringInternalStructE+0xb4>
	...

08017318 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE>:
 8017318:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801731c:	b0a9      	sub	sp, #164	; 0xa4
 801731e:	4683      	mov	fp, r0
 8017320:	9105      	str	r1, [sp, #20]
 8017322:	930b      	str	r3, [sp, #44]	; 0x2c
 8017324:	4615      	mov	r5, r2
 8017326:	f89d 30d0 	ldrb.w	r3, [sp, #208]	; 0xd0
 801732a:	9932      	ldr	r1, [sp, #200]	; 0xc8
 801732c:	930d      	str	r3, [sp, #52]	; 0x34
 801732e:	2264      	movs	r2, #100	; 0x64
 8017330:	a80f      	add	r0, sp, #60	; 0x3c
 8017332:	f013 ffa0 	bl	802b276 <memcpy>
 8017336:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8017338:	2300      	movs	r3, #0
 801733a:	930e      	str	r3, [sp, #56]	; 0x38
 801733c:	2a00      	cmp	r2, #0
 801733e:	f040 815c 	bne.w	80175fa <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x2e2>
 8017342:	9207      	str	r2, [sp, #28]
 8017344:	9209      	str	r2, [sp, #36]	; 0x24
 8017346:	4690      	mov	r8, r2
 8017348:	4616      	mov	r6, r2
 801734a:	9208      	str	r2, [sp, #32]
 801734c:	4614      	mov	r4, r2
 801734e:	920a      	str	r2, [sp, #40]	; 0x28
 8017350:	4691      	mov	r9, r2
 8017352:	9b07      	ldr	r3, [sp, #28]
 8017354:	9a33      	ldr	r2, [sp, #204]	; 0xcc
 8017356:	4293      	cmp	r3, r2
 8017358:	f280 8101 	bge.w	801755e <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x246>
 801735c:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8017360:	4599      	cmp	r9, r3
 8017362:	d006      	beq.n	8017372 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x5a>
 8017364:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8017366:	f242 030b 	movw	r3, #8203	; 0x200b
 801736a:	4599      	cmp	r9, r3
 801736c:	bf18      	it	ne
 801736e:	464a      	movne	r2, r9
 8017370:	920a      	str	r2, [sp, #40]	; 0x28
 8017372:	462a      	mov	r2, r5
 8017374:	ab0e      	add	r3, sp, #56	; 0x38
 8017376:	2100      	movs	r1, #0
 8017378:	9832      	ldr	r0, [sp, #200]	; 0xc8
 801737a:	f003 fe8f 	bl	801b09c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 801737e:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8017380:	4681      	mov	r9, r0
 8017382:	2a00      	cmp	r2, #0
 8017384:	d06c      	beq.n	8017460 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x148>
 8017386:	f892 a00d 	ldrb.w	sl, [r2, #13]
 801738a:	682b      	ldr	r3, [r5, #0]
 801738c:	990a      	ldr	r1, [sp, #40]	; 0x28
 801738e:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8017390:	f8b2 9004 	ldrh.w	r9, [r2, #4]
 8017394:	ea4f 0a4a 	mov.w	sl, sl, lsl #1
 8017398:	f40a 7080 	and.w	r0, sl, #256	; 0x100
 801739c:	f892 a00a 	ldrb.w	sl, [r2, #10]
 80173a0:	ea4a 0a00 	orr.w	sl, sl, r0
 80173a4:	4628      	mov	r0, r5
 80173a6:	4798      	blx	r3
 80173a8:	4450      	add	r0, sl
 80173aa:	b287      	uxth	r7, r0
 80173ac:	f1b9 0f00 	cmp.w	r9, #0
 80173b0:	f000 80d5 	beq.w	801755e <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x246>
 80173b4:	f1b9 0f0a 	cmp.w	r9, #10
 80173b8:	f000 80d1 	beq.w	801755e <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x246>
 80173bc:	f1a9 0328 	sub.w	r3, r9, #40	; 0x28
 80173c0:	b29b      	uxth	r3, r3
 80173c2:	f029 0120 	bic.w	r1, r9, #32
 80173c6:	2b01      	cmp	r3, #1
 80173c8:	b289      	uxth	r1, r1
 80173ca:	d94b      	bls.n	8017464 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x14c>
 80173cc:	295b      	cmp	r1, #91	; 0x5b
 80173ce:	d049      	beq.n	8017464 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x14c>
 80173d0:	295d      	cmp	r1, #93	; 0x5d
 80173d2:	d047      	beq.n	8017464 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x14c>
 80173d4:	f029 0202 	bic.w	r2, r9, #2
 80173d8:	b292      	uxth	r2, r2
 80173da:	f1a2 033c 	sub.w	r3, r2, #60	; 0x3c
 80173de:	425a      	negs	r2, r3
 80173e0:	415a      	adcs	r2, r3
 80173e2:	f1a9 0330 	sub.w	r3, r9, #48	; 0x30
 80173e6:	b29b      	uxth	r3, r3
 80173e8:	2b09      	cmp	r3, #9
 80173ea:	d93d      	bls.n	8017468 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x150>
 80173ec:	f5a9 6acc 	sub.w	sl, r9, #1632	; 0x660
 80173f0:	fa1f fa8a 	uxth.w	sl, sl
 80173f4:	f1ba 0f09 	cmp.w	sl, #9
 80173f8:	bf8c      	ite	hi
 80173fa:	2300      	movhi	r3, #0
 80173fc:	2301      	movls	r3, #1
 80173fe:	9306      	str	r3, [sp, #24]
 8017400:	f5a9 63b2 	sub.w	r3, r9, #1424	; 0x590
 8017404:	b29b      	uxth	r3, r3
 8017406:	f5b3 7fb8 	cmp.w	r3, #368	; 0x170
 801740a:	d305      	bcc.n	8017418 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x100>
 801740c:	f509 6396 	add.w	r3, r9, #1200	; 0x4b0
 8017410:	b29b      	uxth	r3, r3
 8017412:	f5b3 7f6c 	cmp.w	r3, #944	; 0x3b0
 8017416:	d229      	bcs.n	801746c <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x154>
 8017418:	9b06      	ldr	r3, [sp, #24]
 801741a:	f083 0301 	eor.w	r3, r3, #1
 801741e:	b2db      	uxtb	r3, r3
 8017420:	f64f 60ff 	movw	r0, #65279	; 0xfeff
 8017424:	4581      	cmp	r9, r0
 8017426:	d023      	beq.n	8017470 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x158>
 8017428:	f242 000b 	movw	r0, #8203	; 0x200b
 801742c:	eba9 0a00 	sub.w	sl, r9, r0
 8017430:	f1da 0000 	rsbs	r0, sl, #0
 8017434:	eb40 000a 	adc.w	r0, r0, sl
 8017438:	3941      	subs	r1, #65	; 0x41
 801743a:	2919      	cmp	r1, #25
 801743c:	f240 82a2 	bls.w	8017984 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x66c>
 8017440:	f1b9 0f7f 	cmp.w	r9, #127	; 0x7f
 8017444:	f240 828b 	bls.w	801795e <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x646>
 8017448:	2b00      	cmp	r3, #0
 801744a:	f040 8288 	bne.w	801795e <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x646>
 801744e:	2800      	cmp	r0, #0
 8017450:	f040 8285 	bne.w	801795e <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x646>
 8017454:	2e03      	cmp	r6, #3
 8017456:	d850      	bhi.n	80174fa <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x1e2>
 8017458:	e8df f006 	tbb	[pc, r6]
 801745c:	62392b13 	.word	0x62392b13
 8017460:	4617      	mov	r7, r2
 8017462:	e7a3      	b.n	80173ac <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x94>
 8017464:	2201      	movs	r2, #1
 8017466:	e7bc      	b.n	80173e2 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0xca>
 8017468:	2301      	movs	r3, #1
 801746a:	e7c8      	b.n	80173fe <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0xe6>
 801746c:	2300      	movs	r3, #0
 801746e:	e7d7      	b.n	8017420 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x108>
 8017470:	2001      	movs	r0, #1
 8017472:	e7e1      	b.n	8017438 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x120>
 8017474:	2e03      	cmp	r6, #3
 8017476:	d840      	bhi.n	80174fa <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x1e2>
 8017478:	e8df f006 	tbb	[pc, r6]
 801747c:	46290902 	.word	0x46290902
 8017480:	b99b      	cbnz	r3, 80174aa <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x192>
 8017482:	f04f 0a01 	mov.w	sl, #1
 8017486:	4656      	mov	r6, sl
 8017488:	f8cd a018 	str.w	sl, [sp, #24]
 801748c:	e017      	b.n	80174be <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x1a6>
 801748e:	b183      	cbz	r3, 80174b2 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x19a>
 8017490:	9b35      	ldr	r3, [sp, #212]	; 0xd4
 8017492:	f8cd 8004 	str.w	r8, [sp, #4]
 8017496:	e9cd 4302 	strd	r4, r3, [sp, #8]
 801749a:	ab0f      	add	r3, sp, #60	; 0x3c
 801749c:	9300      	str	r3, [sp, #0]
 801749e:	462a      	mov	r2, r5
 80174a0:	2300      	movs	r3, #0
 80174a2:	9905      	ldr	r1, [sp, #20]
 80174a4:	4658      	mov	r0, fp
 80174a6:	f7ff fec9 	bl	801723c <_ZN8touchgfx3LCD21drawStringRTLInternalERsPKNS_4FontEhRNS_12TextProviderEitPKNS0_24DrawStringInternalStructE>
 80174aa:	463c      	mov	r4, r7
 80174ac:	f04f 0801 	mov.w	r8, #1
 80174b0:	e034      	b.n	801751c <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x204>
 80174b2:	443c      	add	r4, r7
 80174b4:	2601      	movs	r6, #1
 80174b6:	f108 0a01 	add.w	sl, r8, #1
 80174ba:	b2a7      	uxth	r7, r4
 80174bc:	9606      	str	r6, [sp, #24]
 80174be:	9b07      	ldr	r3, [sp, #28]
 80174c0:	3301      	adds	r3, #1
 80174c2:	9307      	str	r3, [sp, #28]
 80174c4:	9b06      	ldr	r3, [sp, #24]
 80174c6:	930b      	str	r3, [sp, #44]	; 0x2c
 80174c8:	46d0      	mov	r8, sl
 80174ca:	463c      	mov	r4, r7
 80174cc:	e741      	b.n	8017352 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x3a>
 80174ce:	9b35      	ldr	r3, [sp, #212]	; 0xd4
 80174d0:	f8cd 8004 	str.w	r8, [sp, #4]
 80174d4:	e9cd 4302 	strd	r4, r3, [sp, #8]
 80174d8:	ab0f      	add	r3, sp, #60	; 0x3c
 80174da:	9300      	str	r3, [sp, #0]
 80174dc:	462a      	mov	r2, r5
 80174de:	2301      	movs	r3, #1
 80174e0:	9905      	ldr	r1, [sp, #20]
 80174e2:	4658      	mov	r0, fp
 80174e4:	f7ff feaa 	bl	801723c <_ZN8touchgfx3LCD21drawStringRTLInternalERsPKNS_4FontEhRNS_12TextProviderEitPKNS0_24DrawStringInternalStructE>
 80174e8:	e7cb      	b.n	8017482 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x16a>
 80174ea:	b913      	cbnz	r3, 80174f2 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x1da>
 80174ec:	2800      	cmp	r0, #0
 80174ee:	f000 8257 	beq.w	80179a0 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x688>
 80174f2:	443c      	add	r4, r7
 80174f4:	f108 0801 	add.w	r8, r8, #1
 80174f8:	b2a4      	uxth	r4, r4
 80174fa:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80174fc:	9306      	str	r3, [sp, #24]
 80174fe:	46c2      	mov	sl, r8
 8017500:	4627      	mov	r7, r4
 8017502:	e7dc      	b.n	80174be <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x1a6>
 8017504:	2200      	movs	r2, #0
 8017506:	9206      	str	r2, [sp, #24]
 8017508:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801750a:	f102 0a01 	add.w	sl, r2, #1
 801750e:	b14b      	cbz	r3, 8017524 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x20c>
 8017510:	9b08      	ldr	r3, [sp, #32]
 8017512:	441c      	add	r4, r3
 8017514:	fa17 f484 	uxtah	r4, r7, r4
 8017518:	44d0      	add	r8, sl
 801751a:	b2a4      	uxth	r4, r4
 801751c:	2602      	movs	r6, #2
 801751e:	e7ec      	b.n	80174fa <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x1e2>
 8017520:	2201      	movs	r2, #1
 8017522:	e7f0      	b.n	8017506 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x1ee>
 8017524:	9b06      	ldr	r3, [sp, #24]
 8017526:	b19b      	cbz	r3, 8017550 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x238>
 8017528:	9b35      	ldr	r3, [sp, #212]	; 0xd4
 801752a:	f8cd 8004 	str.w	r8, [sp, #4]
 801752e:	e9cd 4302 	strd	r4, r3, [sp, #8]
 8017532:	ab0f      	add	r3, sp, #60	; 0x3c
 8017534:	9300      	str	r3, [sp, #0]
 8017536:	462a      	mov	r2, r5
 8017538:	2301      	movs	r3, #1
 801753a:	9905      	ldr	r1, [sp, #20]
 801753c:	4658      	mov	r0, fp
 801753e:	f7ff fe7d 	bl	801723c <_ZN8touchgfx3LCD21drawStringRTLInternalERsPKNS_4FontEhRNS_12TextProviderEitPKNS0_24DrawStringInternalStructE>
 8017542:	9b08      	ldr	r3, [sp, #32]
 8017544:	441c      	add	r4, r3
 8017546:	fa17 f484 	uxtah	r4, r7, r4
 801754a:	b2a7      	uxth	r7, r4
 801754c:	2601      	movs	r6, #1
 801754e:	e7b6      	b.n	80174be <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x1a6>
 8017550:	9b08      	ldr	r3, [sp, #32]
 8017552:	443b      	add	r3, r7
 8017554:	b29b      	uxth	r3, r3
 8017556:	e9cd 3a08 	strd	r3, sl, [sp, #32]
 801755a:	2603      	movs	r6, #3
 801755c:	e7cd      	b.n	80174fa <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x1e2>
 801755e:	2e01      	cmp	r6, #1
 8017560:	d107      	bne.n	8017572 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x25a>
 8017562:	9b35      	ldr	r3, [sp, #212]	; 0xd4
 8017564:	f8cd 8004 	str.w	r8, [sp, #4]
 8017568:	e9cd 4302 	strd	r4, r3, [sp, #8]
 801756c:	ab0f      	add	r3, sp, #60	; 0x3c
 801756e:	9300      	str	r3, [sp, #0]
 8017570:	e021      	b.n	80175b6 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x29e>
 8017572:	2e02      	cmp	r6, #2
 8017574:	d108      	bne.n	8017588 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x270>
 8017576:	9b35      	ldr	r3, [sp, #212]	; 0xd4
 8017578:	f8cd 8004 	str.w	r8, [sp, #4]
 801757c:	e9cd 4302 	strd	r4, r3, [sp, #8]
 8017580:	ab0f      	add	r3, sp, #60	; 0x3c
 8017582:	9300      	str	r3, [sp, #0]
 8017584:	2301      	movs	r3, #1
 8017586:	e017      	b.n	80175b8 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x2a0>
 8017588:	2e03      	cmp	r6, #3
 801758a:	d11a      	bne.n	80175c2 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x2aa>
 801758c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801758e:	ae0f      	add	r6, sp, #60	; 0x3c
 8017590:	b343      	cbz	r3, 80175e4 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x2cc>
 8017592:	9b35      	ldr	r3, [sp, #212]	; 0xd4
 8017594:	9905      	ldr	r1, [sp, #20]
 8017596:	e9cd 4302 	strd	r4, r3, [sp, #8]
 801759a:	e9cd 6800 	strd	r6, r8, [sp]
 801759e:	2301      	movs	r3, #1
 80175a0:	462a      	mov	r2, r5
 80175a2:	4658      	mov	r0, fp
 80175a4:	f7ff fe4a 	bl	801723c <_ZN8touchgfx3LCD21drawStringRTLInternalERsPKNS_4FontEhRNS_12TextProviderEitPKNS0_24DrawStringInternalStructE>
 80175a8:	9b35      	ldr	r3, [sp, #212]	; 0xd4
 80175aa:	9303      	str	r3, [sp, #12]
 80175ac:	9b08      	ldr	r3, [sp, #32]
 80175ae:	9302      	str	r3, [sp, #8]
 80175b0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80175b2:	e9cd 6300 	strd	r6, r3, [sp]
 80175b6:	2300      	movs	r3, #0
 80175b8:	462a      	mov	r2, r5
 80175ba:	9905      	ldr	r1, [sp, #20]
 80175bc:	4658      	mov	r0, fp
 80175be:	f7ff fe3d 	bl	801723c <_ZN8touchgfx3LCD21drawStringRTLInternalERsPKNS_4FontEhRNS_12TextProviderEitPKNS0_24DrawStringInternalStructE>
 80175c2:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80175c4:	b15b      	cbz	r3, 80175de <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x2c6>
 80175c6:	9b35      	ldr	r3, [sp, #212]	; 0xd4
 80175c8:	9303      	str	r3, [sp, #12]
 80175ca:	aa0f      	add	r2, sp, #60	; 0x3c
 80175cc:	2300      	movs	r3, #0
 80175ce:	9200      	str	r2, [sp, #0]
 80175d0:	e9cd 3301 	strd	r3, r3, [sp, #4]
 80175d4:	462a      	mov	r2, r5
 80175d6:	9905      	ldr	r1, [sp, #20]
 80175d8:	4658      	mov	r0, fp
 80175da:	f7ff fe2f 	bl	801723c <_ZN8touchgfx3LCD21drawStringRTLInternalERsPKNS_4FontEhRNS_12TextProviderEitPKNS0_24DrawStringInternalStructE>
 80175de:	b029      	add	sp, #164	; 0xa4
 80175e0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80175e4:	9b35      	ldr	r3, [sp, #212]	; 0xd4
 80175e6:	9303      	str	r3, [sp, #12]
 80175e8:	9b08      	ldr	r3, [sp, #32]
 80175ea:	441c      	add	r4, r3
 80175ec:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80175ee:	b2a4      	uxth	r4, r4
 80175f0:	9402      	str	r4, [sp, #8]
 80175f2:	4443      	add	r3, r8
 80175f4:	e9cd 6300 	strd	r6, r3, [sp]
 80175f8:	e7c4      	b.n	8017584 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x26c>
 80175fa:	e9cd 3308 	strd	r3, r3, [sp, #32]
 80175fe:	9307      	str	r3, [sp, #28]
 8017600:	461f      	mov	r7, r3
 8017602:	4698      	mov	r8, r3
 8017604:	9306      	str	r3, [sp, #24]
 8017606:	461c      	mov	r4, r3
 8017608:	930a      	str	r3, [sp, #40]	; 0x28
 801760a:	4699      	mov	r9, r3
 801760c:	9b08      	ldr	r3, [sp, #32]
 801760e:	9a33      	ldr	r2, [sp, #204]	; 0xcc
 8017610:	4293      	cmp	r3, r2
 8017612:	f280 816e 	bge.w	80178f2 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x5da>
 8017616:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 801761a:	4599      	cmp	r9, r3
 801761c:	d006      	beq.n	801762c <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x314>
 801761e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8017620:	f242 020b 	movw	r2, #8203	; 0x200b
 8017624:	4591      	cmp	r9, r2
 8017626:	bf18      	it	ne
 8017628:	464b      	movne	r3, r9
 801762a:	930a      	str	r3, [sp, #40]	; 0x28
 801762c:	462a      	mov	r2, r5
 801762e:	ab0e      	add	r3, sp, #56	; 0x38
 8017630:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8017632:	9832      	ldr	r0, [sp, #200]	; 0xc8
 8017634:	f003 fd32 	bl	801b09c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8017638:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801763a:	4681      	mov	r9, r0
 801763c:	2a00      	cmp	r2, #0
 801763e:	d073      	beq.n	8017728 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x410>
 8017640:	f892 a00d 	ldrb.w	sl, [r2, #13]
 8017644:	682b      	ldr	r3, [r5, #0]
 8017646:	990a      	ldr	r1, [sp, #40]	; 0x28
 8017648:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 801764a:	f8b2 9004 	ldrh.w	r9, [r2, #4]
 801764e:	ea4f 0a4a 	mov.w	sl, sl, lsl #1
 8017652:	f40a 7080 	and.w	r0, sl, #256	; 0x100
 8017656:	f892 a00a 	ldrb.w	sl, [r2, #10]
 801765a:	ea4a 0a00 	orr.w	sl, sl, r0
 801765e:	4628      	mov	r0, r5
 8017660:	4798      	blx	r3
 8017662:	4450      	add	r0, sl
 8017664:	b286      	uxth	r6, r0
 8017666:	f1b9 0f00 	cmp.w	r9, #0
 801766a:	f000 8142 	beq.w	80178f2 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x5da>
 801766e:	f1b9 0f0a 	cmp.w	r9, #10
 8017672:	f000 813e 	beq.w	80178f2 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x5da>
 8017676:	f1a9 0328 	sub.w	r3, r9, #40	; 0x28
 801767a:	b29b      	uxth	r3, r3
 801767c:	f029 0220 	bic.w	r2, r9, #32
 8017680:	2b01      	cmp	r3, #1
 8017682:	b292      	uxth	r2, r2
 8017684:	d952      	bls.n	801772c <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x414>
 8017686:	2a5b      	cmp	r2, #91	; 0x5b
 8017688:	d050      	beq.n	801772c <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x414>
 801768a:	2a5d      	cmp	r2, #93	; 0x5d
 801768c:	d04e      	beq.n	801772c <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x414>
 801768e:	f029 0a02 	bic.w	sl, r9, #2
 8017692:	fa1f fa8a 	uxth.w	sl, sl
 8017696:	f1aa 0c3c 	sub.w	ip, sl, #60	; 0x3c
 801769a:	f1dc 0a00 	rsbs	sl, ip, #0
 801769e:	eb4a 0a0c 	adc.w	sl, sl, ip
 80176a2:	f1a9 0330 	sub.w	r3, r9, #48	; 0x30
 80176a6:	b29b      	uxth	r3, r3
 80176a8:	2b09      	cmp	r3, #9
 80176aa:	d942      	bls.n	8017732 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x41a>
 80176ac:	f5a9 63cc 	sub.w	r3, r9, #1632	; 0x660
 80176b0:	b29b      	uxth	r3, r3
 80176b2:	2b09      	cmp	r3, #9
 80176b4:	bf8c      	ite	hi
 80176b6:	2300      	movhi	r3, #0
 80176b8:	2301      	movls	r3, #1
 80176ba:	f5a9 61b2 	sub.w	r1, r9, #1424	; 0x590
 80176be:	b289      	uxth	r1, r1
 80176c0:	f5b1 7fb8 	cmp.w	r1, #368	; 0x170
 80176c4:	d308      	bcc.n	80176d8 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x3c0>
 80176c6:	f509 6196 	add.w	r1, r9, #1200	; 0x4b0
 80176ca:	b289      	uxth	r1, r1
 80176cc:	f5b1 7f6c 	cmp.w	r1, #944	; 0x3b0
 80176d0:	d302      	bcc.n	80176d8 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x3c0>
 80176d2:	f1ba 0f00 	cmp.w	sl, #0
 80176d6:	d001      	beq.n	80176dc <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x3c4>
 80176d8:	f083 0a01 	eor.w	sl, r3, #1
 80176dc:	f64f 61ff 	movw	r1, #65279	; 0xfeff
 80176e0:	4589      	cmp	r9, r1
 80176e2:	d028      	beq.n	8017736 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x41e>
 80176e4:	f242 010b 	movw	r1, #8203	; 0x200b
 80176e8:	eba9 0001 	sub.w	r0, r9, r1
 80176ec:	4241      	negs	r1, r0
 80176ee:	4141      	adcs	r1, r0
 80176f0:	3a41      	subs	r2, #65	; 0x41
 80176f2:	2a19      	cmp	r2, #25
 80176f4:	d90a      	bls.n	801770c <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x3f4>
 80176f6:	f1b9 0f7f 	cmp.w	r9, #127	; 0x7f
 80176fa:	f240 8155 	bls.w	80179a8 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x690>
 80176fe:	f1ba 0f00 	cmp.w	sl, #0
 8017702:	f040 8151 	bne.w	80179a8 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x690>
 8017706:	2900      	cmp	r1, #0
 8017708:	f040 814e 	bne.w	80179a8 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x690>
 801770c:	f1b8 0f07 	cmp.w	r8, #7
 8017710:	f200 80e5 	bhi.w	80178de <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x5c6>
 8017714:	e8df f018 	tbh	[pc, r8, lsl #1]
 8017718:	00e3001d 	.word	0x00e3001d
 801771c:	00e30030 	.word	0x00e30030
 8017720:	00830055 	.word	0x00830055
 8017724:	00c20068 	.word	0x00c20068
 8017728:	4616      	mov	r6, r2
 801772a:	e79c      	b.n	8017666 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x34e>
 801772c:	f04f 0a01 	mov.w	sl, #1
 8017730:	e7b7      	b.n	80176a2 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x38a>
 8017732:	2301      	movs	r3, #1
 8017734:	e7c1      	b.n	80176ba <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x3a2>
 8017736:	2101      	movs	r1, #1
 8017738:	e7da      	b.n	80176f0 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x3d8>
 801773a:	2200      	movs	r2, #0
 801773c:	b9cb      	cbnz	r3, 8017772 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x45a>
 801773e:	bb52      	cbnz	r2, 8017796 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x47e>
 8017740:	2701      	movs	r7, #1
 8017742:	f04f 0802 	mov.w	r8, #2
 8017746:	9709      	str	r7, [sp, #36]	; 0x24
 8017748:	9b08      	ldr	r3, [sp, #32]
 801774a:	3301      	adds	r3, #1
 801774c:	9308      	str	r3, [sp, #32]
 801774e:	4634      	mov	r4, r6
 8017750:	e75c      	b.n	801760c <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x2f4>
 8017752:	2201      	movs	r2, #1
 8017754:	e7f2      	b.n	801773c <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x424>
 8017756:	2200      	movs	r2, #0
 8017758:	b183      	cbz	r3, 801777c <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x464>
 801775a:	9b35      	ldr	r3, [sp, #212]	; 0xd4
 801775c:	9701      	str	r7, [sp, #4]
 801775e:	e9cd 4302 	strd	r4, r3, [sp, #8]
 8017762:	ab0f      	add	r3, sp, #60	; 0x3c
 8017764:	9300      	str	r3, [sp, #0]
 8017766:	462a      	mov	r2, r5
 8017768:	2301      	movs	r3, #1
 801776a:	9905      	ldr	r1, [sp, #20]
 801776c:	4658      	mov	r0, fp
 801776e:	f7ff fd65 	bl	801723c <_ZN8touchgfx3LCD21drawStringRTLInternalERsPKNS_4FontEhRNS_12TextProviderEitPKNS0_24DrawStringInternalStructE>
 8017772:	4634      	mov	r4, r6
 8017774:	2701      	movs	r7, #1
 8017776:	e020      	b.n	80177ba <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x4a2>
 8017778:	2201      	movs	r2, #1
 801777a:	e7ed      	b.n	8017758 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x440>
 801777c:	b182      	cbz	r2, 80177a0 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x488>
 801777e:	9b35      	ldr	r3, [sp, #212]	; 0xd4
 8017780:	9701      	str	r7, [sp, #4]
 8017782:	e9cd 4302 	strd	r4, r3, [sp, #8]
 8017786:	ab0f      	add	r3, sp, #60	; 0x3c
 8017788:	9300      	str	r3, [sp, #0]
 801778a:	2301      	movs	r3, #1
 801778c:	462a      	mov	r2, r5
 801778e:	9905      	ldr	r1, [sp, #20]
 8017790:	4658      	mov	r0, fp
 8017792:	f7ff fd53 	bl	801723c <_ZN8touchgfx3LCD21drawStringRTLInternalERsPKNS_4FontEhRNS_12TextProviderEitPKNS0_24DrawStringInternalStructE>
 8017796:	4634      	mov	r4, r6
 8017798:	2701      	movs	r7, #1
 801779a:	f04f 0806 	mov.w	r8, #6
 801779e:	e00e      	b.n	80177be <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x4a6>
 80177a0:	3701      	adds	r7, #1
 80177a2:	4434      	add	r4, r6
 80177a4:	2301      	movs	r3, #1
 80177a6:	b2a6      	uxth	r6, r4
 80177a8:	f04f 0802 	mov.w	r8, #2
 80177ac:	9309      	str	r3, [sp, #36]	; 0x24
 80177ae:	e7cb      	b.n	8017748 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x430>
 80177b0:	2200      	movs	r2, #0
 80177b2:	b143      	cbz	r3, 80177c6 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x4ae>
 80177b4:	3701      	adds	r7, #1
 80177b6:	4434      	add	r4, r6
 80177b8:	b2a4      	uxth	r4, r4
 80177ba:	f04f 0804 	mov.w	r8, #4
 80177be:	4626      	mov	r6, r4
 80177c0:	e7c2      	b.n	8017748 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x430>
 80177c2:	2201      	movs	r2, #1
 80177c4:	e7f5      	b.n	80177b2 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x49a>
 80177c6:	f029 0302 	bic.w	r3, r9, #2
 80177ca:	b29b      	uxth	r3, r3
 80177cc:	2b2c      	cmp	r3, #44	; 0x2c
 80177ce:	f000 8101 	beq.w	80179d4 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x6bc>
 80177d2:	f1b9 0f3a 	cmp.w	r9, #58	; 0x3a
 80177d6:	f000 80fd 	beq.w	80179d4 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x6bc>
 80177da:	f2a9 636b 	subw	r3, r9, #1643	; 0x66b
 80177de:	b29b      	uxth	r3, r3
 80177e0:	2b01      	cmp	r3, #1
 80177e2:	f240 80f7 	bls.w	80179d4 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x6bc>
 80177e6:	b11a      	cbz	r2, 80177f0 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x4d8>
 80177e8:	3701      	adds	r7, #1
 80177ea:	4434      	add	r4, r6
 80177ec:	b2a4      	uxth	r4, r4
 80177ee:	e7d4      	b.n	801779a <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x482>
 80177f0:	9b35      	ldr	r3, [sp, #212]	; 0xd4
 80177f2:	9701      	str	r7, [sp, #4]
 80177f4:	e9cd 4302 	strd	r4, r3, [sp, #8]
 80177f8:	ab0f      	add	r3, sp, #60	; 0x3c
 80177fa:	9300      	str	r3, [sp, #0]
 80177fc:	9905      	ldr	r1, [sp, #20]
 80177fe:	4613      	mov	r3, r2
 8017800:	4658      	mov	r0, fp
 8017802:	462a      	mov	r2, r5
 8017804:	f7ff fd1a 	bl	801723c <_ZN8touchgfx3LCD21drawStringRTLInternalERsPKNS_4FontEhRNS_12TextProviderEitPKNS0_24DrawStringInternalStructE>
 8017808:	e79a      	b.n	8017740 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x428>
 801780a:	2200      	movs	r2, #0
 801780c:	b14b      	cbz	r3, 8017822 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x50a>
 801780e:	9b07      	ldr	r3, [sp, #28]
 8017810:	3301      	adds	r3, #1
 8017812:	441f      	add	r7, r3
 8017814:	9b06      	ldr	r3, [sp, #24]
 8017816:	441c      	add	r4, r3
 8017818:	fa16 f484 	uxtah	r4, r6, r4
 801781c:	e7cc      	b.n	80177b8 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x4a0>
 801781e:	2201      	movs	r2, #1
 8017820:	e7f4      	b.n	801780c <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x4f4>
 8017822:	f10d 083c 	add.w	r8, sp, #60	; 0x3c
 8017826:	b18a      	cbz	r2, 801784c <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x534>
 8017828:	9a35      	ldr	r2, [sp, #212]	; 0xd4
 801782a:	9905      	ldr	r1, [sp, #20]
 801782c:	e9cd 4202 	strd	r4, r2, [sp, #8]
 8017830:	e9cd 8700 	strd	r8, r7, [sp]
 8017834:	462a      	mov	r2, r5
 8017836:	4658      	mov	r0, fp
 8017838:	f7ff fd00 	bl	801723c <_ZN8touchgfx3LCD21drawStringRTLInternalERsPKNS_4FontEhRNS_12TextProviderEitPKNS0_24DrawStringInternalStructE>
 801783c:	9b35      	ldr	r3, [sp, #212]	; 0xd4
 801783e:	9303      	str	r3, [sp, #12]
 8017840:	9b06      	ldr	r3, [sp, #24]
 8017842:	9302      	str	r3, [sp, #8]
 8017844:	9b07      	ldr	r3, [sp, #28]
 8017846:	e9cd 8300 	strd	r8, r3, [sp]
 801784a:	e79e      	b.n	801778a <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x472>
 801784c:	9b35      	ldr	r3, [sp, #212]	; 0xd4
 801784e:	9905      	ldr	r1, [sp, #20]
 8017850:	e9cd 4302 	strd	r4, r3, [sp, #8]
 8017854:	e9cd 8700 	strd	r8, r7, [sp]
 8017858:	4613      	mov	r3, r2
 801785a:	4658      	mov	r0, fp
 801785c:	462a      	mov	r2, r5
 801785e:	f7ff fced 	bl	801723c <_ZN8touchgfx3LCD21drawStringRTLInternalERsPKNS_4FontEhRNS_12TextProviderEitPKNS0_24DrawStringInternalStructE>
 8017862:	9b07      	ldr	r3, [sp, #28]
 8017864:	1c5f      	adds	r7, r3, #1
 8017866:	9b06      	ldr	r3, [sp, #24]
 8017868:	199c      	adds	r4, r3, r6
 801786a:	e79b      	b.n	80177a4 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x48c>
 801786c:	2b00      	cmp	r3, #0
 801786e:	d1bb      	bne.n	80177e8 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x4d0>
 8017870:	f1ba 0f00 	cmp.w	sl, #0
 8017874:	f000 80b4 	beq.w	80179e0 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x6c8>
 8017878:	9a35      	ldr	r2, [sp, #212]	; 0xd4
 801787a:	9701      	str	r7, [sp, #4]
 801787c:	e9cd 4202 	strd	r4, r2, [sp, #8]
 8017880:	aa0f      	add	r2, sp, #60	; 0x3c
 8017882:	9200      	str	r2, [sp, #0]
 8017884:	9905      	ldr	r1, [sp, #20]
 8017886:	462a      	mov	r2, r5
 8017888:	4658      	mov	r0, fp
 801788a:	f7ff fcd7 	bl	801723c <_ZN8touchgfx3LCD21drawStringRTLInternalERsPKNS_4FontEhRNS_12TextProviderEitPKNS0_24DrawStringInternalStructE>
 801788e:	2701      	movs	r7, #1
 8017890:	f8cd a024 	str.w	sl, [sp, #36]	; 0x24
 8017894:	f04f 0802 	mov.w	r8, #2
 8017898:	e756      	b.n	8017748 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x430>
 801789a:	b13b      	cbz	r3, 80178ac <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x594>
 801789c:	9b07      	ldr	r3, [sp, #28]
 801789e:	3301      	adds	r3, #1
 80178a0:	441f      	add	r7, r3
 80178a2:	9b06      	ldr	r3, [sp, #24]
 80178a4:	441c      	add	r4, r3
 80178a6:	fa16 f484 	uxtah	r4, r6, r4
 80178aa:	e79f      	b.n	80177ec <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x4d4>
 80178ac:	9a07      	ldr	r2, [sp, #28]
 80178ae:	3201      	adds	r2, #1
 80178b0:	920c      	str	r2, [sp, #48]	; 0x30
 80178b2:	9a06      	ldr	r2, [sp, #24]
 80178b4:	4416      	add	r6, r2
 80178b6:	b2b6      	uxth	r6, r6
 80178b8:	f1ba 0f00 	cmp.w	sl, #0
 80178bc:	f000 8096 	beq.w	80179ec <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x6d4>
 80178c0:	9a35      	ldr	r2, [sp, #212]	; 0xd4
 80178c2:	9701      	str	r7, [sp, #4]
 80178c4:	e9cd 4202 	strd	r4, r2, [sp, #8]
 80178c8:	aa0f      	add	r2, sp, #60	; 0x3c
 80178ca:	9200      	str	r2, [sp, #0]
 80178cc:	9905      	ldr	r1, [sp, #20]
 80178ce:	462a      	mov	r2, r5
 80178d0:	4658      	mov	r0, fp
 80178d2:	f7ff fcb3 	bl	801723c <_ZN8touchgfx3LCD21drawStringRTLInternalERsPKNS_4FontEhRNS_12TextProviderEitPKNS0_24DrawStringInternalStructE>
 80178d6:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 80178d8:	f8cd a024 	str.w	sl, [sp, #36]	; 0x24
 80178dc:	e7da      	b.n	8017894 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x57c>
 80178de:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80178e0:	2b00      	cmp	r3, #0
 80178e2:	f47f af6c 	bne.w	80177be <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x4a6>
 80178e6:	f1a8 0202 	sub.w	r2, r8, #2
 80178ea:	4253      	negs	r3, r2
 80178ec:	4153      	adcs	r3, r2
 80178ee:	9309      	str	r3, [sp, #36]	; 0x24
 80178f0:	e765      	b.n	80177be <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x4a6>
 80178f2:	f1b8 0f02 	cmp.w	r8, #2
 80178f6:	d104      	bne.n	8017902 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x5ea>
 80178f8:	9b35      	ldr	r3, [sp, #212]	; 0xd4
 80178fa:	9701      	str	r7, [sp, #4]
 80178fc:	e9cd 4302 	strd	r4, r3, [sp, #8]
 8017900:	e63e      	b.n	8017580 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x268>
 8017902:	f008 0805 	and.w	r8, r8, #5
 8017906:	f1b8 0f04 	cmp.w	r8, #4
 801790a:	d104      	bne.n	8017916 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x5fe>
 801790c:	9b35      	ldr	r3, [sp, #212]	; 0xd4
 801790e:	9701      	str	r7, [sp, #4]
 8017910:	e9cd 4302 	strd	r4, r3, [sp, #8]
 8017914:	e62a      	b.n	801756c <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x254>
 8017916:	f1b8 0f05 	cmp.w	r8, #5
 801791a:	f47f ae52 	bne.w	80175c2 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x2aa>
 801791e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8017920:	ae0f      	add	r6, sp, #60	; 0x3c
 8017922:	b183      	cbz	r3, 8017946 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x62e>
 8017924:	9b35      	ldr	r3, [sp, #212]	; 0xd4
 8017926:	9905      	ldr	r1, [sp, #20]
 8017928:	e9cd 4302 	strd	r4, r3, [sp, #8]
 801792c:	e9cd 6700 	strd	r6, r7, [sp]
 8017930:	2300      	movs	r3, #0
 8017932:	462a      	mov	r2, r5
 8017934:	4658      	mov	r0, fp
 8017936:	f7ff fc81 	bl	801723c <_ZN8touchgfx3LCD21drawStringRTLInternalERsPKNS_4FontEhRNS_12TextProviderEitPKNS0_24DrawStringInternalStructE>
 801793a:	9b35      	ldr	r3, [sp, #212]	; 0xd4
 801793c:	9303      	str	r3, [sp, #12]
 801793e:	9b06      	ldr	r3, [sp, #24]
 8017940:	9302      	str	r3, [sp, #8]
 8017942:	9b07      	ldr	r3, [sp, #28]
 8017944:	e656      	b.n	80175f4 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x2dc>
 8017946:	9b35      	ldr	r3, [sp, #212]	; 0xd4
 8017948:	9303      	str	r3, [sp, #12]
 801794a:	9b06      	ldr	r3, [sp, #24]
 801794c:	441c      	add	r4, r3
 801794e:	9b07      	ldr	r3, [sp, #28]
 8017950:	b2a4      	uxth	r4, r4
 8017952:	441f      	add	r7, r3
 8017954:	9402      	str	r4, [sp, #8]
 8017956:	e9cd 6700 	strd	r6, r7, [sp]
 801795a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801795c:	e62c      	b.n	80175b8 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x2a0>
 801795e:	9906      	ldr	r1, [sp, #24]
 8017960:	2900      	cmp	r1, #0
 8017962:	f47f ad87 	bne.w	8017474 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x15c>
 8017966:	b96a      	cbnz	r2, 8017984 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x66c>
 8017968:	2e03      	cmp	r6, #3
 801796a:	f63f adc6 	bhi.w	80174fa <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x1e2>
 801796e:	a201      	add	r2, pc, #4	; (adr r2, 8017974 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x65c>)
 8017970:	f852 f026 	ldr.w	pc, [r2, r6, lsl #2]
 8017974:	08017481 	.word	0x08017481
 8017978:	0801748f 	.word	0x0801748f
 801797c:	080174eb 	.word	0x080174eb
 8017980:	08017505 	.word	0x08017505
 8017984:	2e03      	cmp	r6, #3
 8017986:	f63f adb8 	bhi.w	80174fa <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x1e2>
 801798a:	a201      	add	r2, pc, #4	; (adr r2, 8017990 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x678>)
 801798c:	f852 f026 	ldr.w	pc, [r2, r6, lsl #2]
 8017990:	08017481 	.word	0x08017481
 8017994:	0801748f 	.word	0x0801748f
 8017998:	080174cf 	.word	0x080174cf
 801799c:	08017521 	.word	0x08017521
 80179a0:	2301      	movs	r3, #1
 80179a2:	9708      	str	r7, [sp, #32]
 80179a4:	9309      	str	r3, [sp, #36]	; 0x24
 80179a6:	e5d8      	b.n	801755a <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x242>
 80179a8:	f1b8 0f07 	cmp.w	r8, #7
 80179ac:	d897      	bhi.n	80178de <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x5c6>
 80179ae:	a201      	add	r2, pc, #4	; (adr r2, 80179b4 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x69c>)
 80179b0:	f852 f028 	ldr.w	pc, [r2, r8, lsl #2]
 80179b4:	0801773b 	.word	0x0801773b
 80179b8:	080178df 	.word	0x080178df
 80179bc:	08017757 	.word	0x08017757
 80179c0:	080178df 	.word	0x080178df
 80179c4:	080177b1 	.word	0x080177b1
 80179c8:	0801780b 	.word	0x0801780b
 80179cc:	0801786d 	.word	0x0801786d
 80179d0:	0801789b 	.word	0x0801789b
 80179d4:	2301      	movs	r3, #1
 80179d6:	9606      	str	r6, [sp, #24]
 80179d8:	9307      	str	r3, [sp, #28]
 80179da:	f04f 0805 	mov.w	r8, #5
 80179de:	e6ee      	b.n	80177be <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x4a6>
 80179e0:	2301      	movs	r3, #1
 80179e2:	9606      	str	r6, [sp, #24]
 80179e4:	9307      	str	r3, [sp, #28]
 80179e6:	f04f 0807 	mov.w	r8, #7
 80179ea:	e6e8      	b.n	80177be <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x4a6>
 80179ec:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80179ee:	e9cd 6306 	strd	r6, r3, [sp, #24]
 80179f2:	e6e4      	b.n	80177be <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x4a6>

080179f4 <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>:
 80179f4:	b530      	push	{r4, r5, lr}
 80179f6:	8ac4      	ldrh	r4, [r0, #22]
 80179f8:	8b45      	ldrh	r5, [r0, #26]
 80179fa:	8343      	strh	r3, [r0, #26]
 80179fc:	442c      	add	r4, r5
 80179fe:	1ae4      	subs	r4, r4, r3
 8017a00:	82c4      	strh	r4, [r0, #22]
 8017a02:	8b83      	ldrh	r3, [r0, #28]
 8017a04:	8b04      	ldrh	r4, [r0, #24]
 8017a06:	4422      	add	r2, r4
 8017a08:	440c      	add	r4, r1
 8017a0a:	1a59      	subs	r1, r3, r1
 8017a0c:	83c2      	strh	r2, [r0, #30]
 8017a0e:	8304      	strh	r4, [r0, #24]
 8017a10:	8381      	strh	r1, [r0, #28]
 8017a12:	bd30      	pop	{r4, r5, pc}

08017a14 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>:
 8017a14:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017a18:	4604      	mov	r4, r0
 8017a1a:	8a47      	ldrh	r7, [r0, #18]
 8017a1c:	68c0      	ldr	r0, [r0, #12]
 8017a1e:	6803      	ldr	r3, [r0, #0]
 8017a20:	b085      	sub	sp, #20
 8017a22:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8017a24:	4798      	blx	r3
 8017a26:	f9b4 6014 	ldrsh.w	r6, [r4, #20]
 8017a2a:	7a63      	ldrb	r3, [r4, #9]
 8017a2c:	eb06 0640 	add.w	r6, r6, r0, lsl #1
 8017a30:	42b7      	cmp	r7, r6
 8017a32:	f103 33ff 	add.w	r3, r3, #4294967295
 8017a36:	bfac      	ite	ge
 8017a38:	f04f 0900 	movge.w	r9, #0
 8017a3c:	f04f 0901 	movlt.w	r9, #1
 8017a40:	2b05      	cmp	r3, #5
 8017a42:	d804      	bhi.n	8017a4e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x3a>
 8017a44:	e8df f003 	tbb	[pc, r3]
 8017a48:	470e0854 	.word	0x470e0854
 8017a4c:	4c4c      	.short	0x4c4c
 8017a4e:	2500      	movs	r5, #0
 8017a50:	46a9      	mov	r9, r5
 8017a52:	462e      	mov	r6, r5
 8017a54:	462f      	mov	r7, r5
 8017a56:	e00d      	b.n	8017a74 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 8017a58:	42b7      	cmp	r7, r6
 8017a5a:	bfb4      	ite	lt
 8017a5c:	2600      	movlt	r6, #0
 8017a5e:	2601      	movge	r6, #1
 8017a60:	2500      	movs	r5, #0
 8017a62:	e7f7      	b.n	8017a54 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x40>
 8017a64:	42b7      	cmp	r7, r6
 8017a66:	464d      	mov	r5, r9
 8017a68:	f04f 0900 	mov.w	r9, #0
 8017a6c:	bfb4      	ite	lt
 8017a6e:	2600      	movlt	r6, #0
 8017a70:	2601      	movge	r6, #1
 8017a72:	464f      	mov	r7, r9
 8017a74:	f04f 0800 	mov.w	r8, #0
 8017a78:	f8a4 8016 	strh.w	r8, [r4, #22]
 8017a7c:	f8a4 8018 	strh.w	r8, [r4, #24]
 8017a80:	f8cd 8004 	str.w	r8, [sp, #4]
 8017a84:	2300      	movs	r3, #0
 8017a86:	9303      	str	r3, [sp, #12]
 8017a88:	8823      	ldrh	r3, [r4, #0]
 8017a8a:	2b20      	cmp	r3, #32
 8017a8c:	d034      	beq.n	8017af8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xe4>
 8017a8e:	f242 010b 	movw	r1, #8203	; 0x200b
 8017a92:	1a5a      	subs	r2, r3, r1
 8017a94:	f1d2 0a00 	rsbs	sl, r2, #0
 8017a98:	eb4a 0a02 	adc.w	sl, sl, r2
 8017a9c:	f64f 62ff 	movw	r2, #65279	; 0xfeff
 8017aa0:	4293      	cmp	r3, r2
 8017aa2:	d009      	beq.n	8017ab8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xa4>
 8017aa4:	428b      	cmp	r3, r1
 8017aa6:	9a01      	ldr	r2, [sp, #4]
 8017aa8:	bf18      	it	ne
 8017aaa:	461a      	movne	r2, r3
 8017aac:	9201      	str	r2, [sp, #4]
 8017aae:	bf0c      	ite	eq
 8017ab0:	f04f 0a01 	moveq.w	sl, #1
 8017ab4:	f04f 0a00 	movne.w	sl, #0
 8017ab8:	ab03      	add	r3, sp, #12
 8017aba:	68e2      	ldr	r2, [r4, #12]
 8017abc:	7a21      	ldrb	r1, [r4, #8]
 8017abe:	6860      	ldr	r0, [r4, #4]
 8017ac0:	f003 faec 	bl	801b09c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8017ac4:	8020      	strh	r0, [r4, #0]
 8017ac6:	b9d8      	cbnz	r0, 8017b00 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xec>
 8017ac8:	8ba2      	ldrh	r2, [r4, #28]
 8017aca:	2300      	movs	r3, #0
 8017acc:	4611      	mov	r1, r2
 8017ace:	4620      	mov	r0, r4
 8017ad0:	f7ff ff90 	bl	80179f4 <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 8017ad4:	e06e      	b.n	8017bb4 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1a0>
 8017ad6:	2500      	movs	r5, #0
 8017ad8:	46a9      	mov	r9, r5
 8017ada:	462e      	mov	r6, r5
 8017adc:	2701      	movs	r7, #1
 8017ade:	e7c9      	b.n	8017a74 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 8017ae0:	42b7      	cmp	r7, r6
 8017ae2:	f04f 0500 	mov.w	r5, #0
 8017ae6:	bfb4      	ite	lt
 8017ae8:	2700      	movlt	r7, #0
 8017aea:	2701      	movge	r7, #1
 8017aec:	462e      	mov	r6, r5
 8017aee:	e7c1      	b.n	8017a74 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 8017af0:	2500      	movs	r5, #0
 8017af2:	46a9      	mov	r9, r5
 8017af4:	2601      	movs	r6, #1
 8017af6:	e7ad      	b.n	8017a54 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x40>
 8017af8:	9301      	str	r3, [sp, #4]
 8017afa:	f04f 0a01 	mov.w	sl, #1
 8017afe:	e7db      	b.n	8017ab8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xa4>
 8017b00:	8b63      	ldrh	r3, [r4, #26]
 8017b02:	280a      	cmp	r0, #10
 8017b04:	f103 0301 	add.w	r3, r3, #1
 8017b08:	8363      	strh	r3, [r4, #26]
 8017b0a:	d0dd      	beq.n	8017ac8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb4>
 8017b0c:	9a03      	ldr	r2, [sp, #12]
 8017b0e:	bb62      	cbnz	r2, 8017b6a <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x156>
 8017b10:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8017b14:	4298      	cmp	r0, r3
 8017b16:	d003      	beq.n	8017b20 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x10c>
 8017b18:	f242 030b 	movw	r3, #8203	; 0x200b
 8017b1c:	4298      	cmp	r0, r3
 8017b1e:	d1b1      	bne.n	8017a84 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8017b20:	8823      	ldrh	r3, [r4, #0]
 8017b22:	8ba1      	ldrh	r1, [r4, #28]
 8017b24:	2b20      	cmp	r3, #32
 8017b26:	d003      	beq.n	8017b30 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x11c>
 8017b28:	f242 000b 	movw	r0, #8203	; 0x200b
 8017b2c:	4283      	cmp	r3, r0
 8017b2e:	d131      	bne.n	8017b94 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x180>
 8017b30:	f1ba 0f00 	cmp.w	sl, #0
 8017b34:	bf0a      	itet	eq
 8017b36:	4688      	moveq	r8, r1
 8017b38:	4650      	movne	r0, sl
 8017b3a:	2001      	moveq	r0, #1
 8017b3c:	440a      	add	r2, r1
 8017b3e:	8b23      	ldrh	r3, [r4, #24]
 8017b40:	f8b4 c010 	ldrh.w	ip, [r4, #16]
 8017b44:	b292      	uxth	r2, r2
 8017b46:	83a2      	strh	r2, [r4, #28]
 8017b48:	4413      	add	r3, r2
 8017b4a:	f1b9 0f00 	cmp.w	r9, #0
 8017b4e:	d102      	bne.n	8017b56 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x142>
 8017b50:	2d00      	cmp	r5, #0
 8017b52:	d042      	beq.n	8017bda <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1c6>
 8017b54:	b300      	cbz	r0, 8017b98 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x184>
 8017b56:	8c21      	ldrh	r1, [r4, #32]
 8017b58:	4419      	add	r1, r3
 8017b5a:	458c      	cmp	ip, r1
 8017b5c:	da37      	bge.n	8017bce <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1ba>
 8017b5e:	8ae1      	ldrh	r1, [r4, #22]
 8017b60:	2900      	cmp	r1, #0
 8017b62:	d034      	beq.n	8017bce <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1ba>
 8017b64:	4563      	cmp	r3, ip
 8017b66:	dd8d      	ble.n	8017a84 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8017b68:	e01d      	b.n	8017ba6 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x192>
 8017b6a:	8893      	ldrh	r3, [r2, #4]
 8017b6c:	8023      	strh	r3, [r4, #0]
 8017b6e:	f892 b00d 	ldrb.w	fp, [r2, #13]
 8017b72:	9901      	ldr	r1, [sp, #4]
 8017b74:	ea4f 0b4b 	mov.w	fp, fp, lsl #1
 8017b78:	f40b 7080 	and.w	r0, fp, #256	; 0x100
 8017b7c:	f892 b00a 	ldrb.w	fp, [r2, #10]
 8017b80:	ea4b 0b00 	orr.w	fp, fp, r0
 8017b84:	68e0      	ldr	r0, [r4, #12]
 8017b86:	6803      	ldr	r3, [r0, #0]
 8017b88:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8017b8a:	4798      	blx	r3
 8017b8c:	eb0b 0200 	add.w	r2, fp, r0
 8017b90:	b292      	uxth	r2, r2
 8017b92:	e7c5      	b.n	8017b20 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x10c>
 8017b94:	2000      	movs	r0, #0
 8017b96:	e7d1      	b.n	8017b3c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x128>
 8017b98:	4563      	cmp	r3, ip
 8017b9a:	f77f af73 	ble.w	8017a84 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8017b9e:	8ae3      	ldrh	r3, [r4, #22]
 8017ba0:	2b00      	cmp	r3, #0
 8017ba2:	f43f af6f 	beq.w	8017a84 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8017ba6:	2301      	movs	r3, #1
 8017ba8:	f884 3022 	strb.w	r3, [r4, #34]	; 0x22
 8017bac:	8c22      	ldrh	r2, [r4, #32]
 8017bae:	8be3      	ldrh	r3, [r4, #30]
 8017bb0:	4413      	add	r3, r2
 8017bb2:	83e3      	strh	r3, [r4, #30]
 8017bb4:	68e0      	ldr	r0, [r4, #12]
 8017bb6:	6803      	ldr	r3, [r0, #0]
 8017bb8:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8017bba:	4798      	blx	r3
 8017bbc:	f9b4 3014 	ldrsh.w	r3, [r4, #20]
 8017bc0:	4418      	add	r0, r3
 8017bc2:	8a63      	ldrh	r3, [r4, #18]
 8017bc4:	1a18      	subs	r0, r3, r0
 8017bc6:	8260      	strh	r0, [r4, #18]
 8017bc8:	b005      	add	sp, #20
 8017bca:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017bce:	2300      	movs	r3, #0
 8017bd0:	4611      	mov	r1, r2
 8017bd2:	4620      	mov	r0, r4
 8017bd4:	f7ff ff0e 	bl	80179f4 <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 8017bd8:	e754      	b.n	8017a84 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8017bda:	4563      	cmp	r3, ip
 8017bdc:	dd14      	ble.n	8017c08 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1f4>
 8017bde:	b117      	cbz	r7, 8017be6 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1d2>
 8017be0:	2301      	movs	r3, #1
 8017be2:	460a      	mov	r2, r1
 8017be4:	e772      	b.n	8017acc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb8>
 8017be6:	2e00      	cmp	r6, #0
 8017be8:	f43f af4c 	beq.w	8017a84 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8017bec:	2800      	cmp	r0, #0
 8017bee:	f47f af49 	bne.w	8017a84 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8017bf2:	f1ba 0f00 	cmp.w	sl, #0
 8017bf6:	d002      	beq.n	8017bfe <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1ea>
 8017bf8:	2301      	movs	r3, #1
 8017bfa:	4642      	mov	r2, r8
 8017bfc:	e767      	b.n	8017ace <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xba>
 8017bfe:	8ae3      	ldrh	r3, [r4, #22]
 8017c00:	2b00      	cmp	r3, #0
 8017c02:	f43f af3f 	beq.w	8017a84 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8017c06:	e7d5      	b.n	8017bb4 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1a0>
 8017c08:	2800      	cmp	r0, #0
 8017c0a:	f47f af3b 	bne.w	8017a84 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8017c0e:	f1ba 0f00 	cmp.w	sl, #0
 8017c12:	f43f af37 	beq.w	8017a84 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8017c16:	2301      	movs	r3, #1
 8017c18:	4642      	mov	r2, r8
 8017c1a:	e7da      	b.n	8017bd2 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1be>

08017c1c <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>:
 8017c1c:	b5f0      	push	{r4, r5, r6, r7, lr}
 8017c1e:	4605      	mov	r5, r0
 8017c20:	b08f      	sub	sp, #60	; 0x3c
 8017c22:	4617      	mov	r7, r2
 8017c24:	461c      	mov	r4, r3
 8017c26:	460e      	mov	r6, r1
 8017c28:	b1d1      	cbz	r1, 8017c60 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x44>
 8017c2a:	681b      	ldr	r3, [r3, #0]
 8017c2c:	4620      	mov	r0, r4
 8017c2e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8017c30:	4798      	blx	r3
 8017c32:	4240      	negs	r0, r0
 8017c34:	b200      	sxth	r0, r0
 8017c36:	e9cd 4001 	strd	r4, r0, [sp, #4]
 8017c3a:	9603      	str	r6, [sp, #12]
 8017c3c:	9700      	str	r7, [sp, #0]
 8017c3e:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8017c42:	f8bd 2050 	ldrh.w	r2, [sp, #80]	; 0x50
 8017c46:	4629      	mov	r1, r5
 8017c48:	a805      	add	r0, sp, #20
 8017c4a:	f7ff f8cf 	bl	8016dec <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>
 8017c4e:	2401      	movs	r4, #1
 8017c50:	a805      	add	r0, sp, #20
 8017c52:	f7ff fedf 	bl	8017a14 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 8017c56:	f8bd 3014 	ldrh.w	r3, [sp, #20]
 8017c5a:	b163      	cbz	r3, 8017c76 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x5a>
 8017c5c:	3401      	adds	r4, #1
 8017c5e:	e7f7      	b.n	8017c50 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x34>
 8017c60:	f003 faea 	bl	801b238 <_ZN8touchgfx12TextProvider11getNextCharEv>
 8017c64:	2401      	movs	r4, #1
 8017c66:	280a      	cmp	r0, #10
 8017c68:	4628      	mov	r0, r5
 8017c6a:	bf08      	it	eq
 8017c6c:	3401      	addeq	r4, #1
 8017c6e:	f003 fae3 	bl	801b238 <_ZN8touchgfx12TextProvider11getNextCharEv>
 8017c72:	2800      	cmp	r0, #0
 8017c74:	d1f7      	bne.n	8017c66 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x4a>
 8017c76:	b2a0      	uxth	r0, r4
 8017c78:	b00f      	add	sp, #60	; 0x3c
 8017c7a:	bdf0      	pop	{r4, r5, r6, r7, pc}

08017c7c <_ZN8touchgfx3LCD13drawStringRTLERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>:
 8017c7c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017c80:	b0e7      	sub	sp, #412	; 0x19c
 8017c82:	468a      	mov	sl, r1
 8017c84:	f8dd 91c0 	ldr.w	r9, [sp, #448]	; 0x1c0
 8017c88:	9006      	str	r0, [sp, #24]
 8017c8a:	461c      	mov	r4, r3
 8017c8c:	f1b9 0f00 	cmp.w	r9, #0
 8017c90:	f000 80c6 	beq.w	8017e20 <_ZN8touchgfx3LCD13drawStringRTLERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1a4>
 8017c94:	681b      	ldr	r3, [r3, #0]
 8017c96:	2b00      	cmp	r3, #0
 8017c98:	f000 80c2 	beq.w	8017e20 <_ZN8touchgfx3LCD13drawStringRTLERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1a4>
 8017c9c:	7ba3      	ldrb	r3, [r4, #14]
 8017c9e:	2b00      	cmp	r3, #0
 8017ca0:	f000 80be 	beq.w	8017e20 <_ZN8touchgfx3LCD13drawStringRTLERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1a4>
 8017ca4:	6810      	ldr	r0, [r2, #0]
 8017ca6:	6851      	ldr	r1, [r2, #4]
 8017ca8:	f9ba 2004 	ldrsh.w	r2, [sl, #4]
 8017cac:	f8ad 2030 	strh.w	r2, [sp, #48]	; 0x30
 8017cb0:	af09      	add	r7, sp, #36	; 0x24
 8017cb2:	463b      	mov	r3, r7
 8017cb4:	c303      	stmia	r3!, {r0, r1}
 8017cb6:	79a2      	ldrb	r2, [r4, #6]
 8017cb8:	f9ba 3006 	ldrsh.w	r3, [sl, #6]
 8017cbc:	7966      	ldrb	r6, [r4, #5]
 8017cbe:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 8017cc2:	a90b      	add	r1, sp, #44	; 0x2c
 8017cc4:	4638      	mov	r0, r7
 8017cc6:	2500      	movs	r5, #0
 8017cc8:	950b      	str	r5, [sp, #44]	; 0x2c
 8017cca:	f7ff f90e 	bl	8016eea <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 8017cce:	a90b      	add	r1, sp, #44	; 0x2c
 8017cd0:	79a2      	ldrb	r2, [r4, #6]
 8017cd2:	4608      	mov	r0, r1
 8017cd4:	f7ff f909 	bl	8016eea <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 8017cd8:	2e00      	cmp	r6, #0
 8017cda:	d16a      	bne.n	8017db2 <_ZN8touchgfx3LCD13drawStringRTLERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x136>
 8017cdc:	f894 8004 	ldrb.w	r8, [r4, #4]
 8017ce0:	ebb8 0805 	subs.w	r8, r8, r5
 8017ce4:	bf18      	it	ne
 8017ce6:	f04f 0801 	movne.w	r8, #1
 8017cea:	4645      	mov	r5, r8
 8017cec:	a81b      	add	r0, sp, #108	; 0x6c
 8017cee:	f002 fa1e 	bl	801a12e <_ZN8touchgfx12TextProviderC1Ev>
 8017cf2:	6820      	ldr	r0, [r4, #0]
 8017cf4:	6803      	ldr	r3, [r0, #0]
 8017cf6:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8017cf8:	4798      	blx	r3
 8017cfa:	4683      	mov	fp, r0
 8017cfc:	6820      	ldr	r0, [r4, #0]
 8017cfe:	6803      	ldr	r3, [r0, #0]
 8017d00:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8017d02:	4798      	blx	r3
 8017d04:	465b      	mov	r3, fp
 8017d06:	9a71      	ldr	r2, [sp, #452]	; 0x1c4
 8017d08:	9000      	str	r0, [sp, #0]
 8017d0a:	4649      	mov	r1, r9
 8017d0c:	a81b      	add	r0, sp, #108	; 0x6c
 8017d0e:	f002 fa69 	bl	801a1e4 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8017d12:	6820      	ldr	r0, [r4, #0]
 8017d14:	6803      	ldr	r3, [r0, #0]
 8017d16:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8017d18:	4798      	blx	r3
 8017d1a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8017d1e:	4403      	add	r3, r0
 8017d20:	9305      	str	r3, [sp, #20]
 8017d22:	6823      	ldr	r3, [r4, #0]
 8017d24:	f893 b009 	ldrb.w	fp, [r3, #9]
 8017d28:	4483      	add	fp, r0
 8017d2a:	a834      	add	r0, sp, #208	; 0xd0
 8017d2c:	f002 f9ff 	bl	801a12e <_ZN8touchgfx12TextProviderC1Ev>
 8017d30:	7c23      	ldrb	r3, [r4, #16]
 8017d32:	b17b      	cbz	r3, 8017d54 <_ZN8touchgfx3LCD13drawStringRTLERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xd8>
 8017d34:	6820      	ldr	r0, [r4, #0]
 8017d36:	6803      	ldr	r3, [r0, #0]
 8017d38:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8017d3a:	4798      	blx	r3
 8017d3c:	9007      	str	r0, [sp, #28]
 8017d3e:	6820      	ldr	r0, [r4, #0]
 8017d40:	6802      	ldr	r2, [r0, #0]
 8017d42:	6d12      	ldr	r2, [r2, #80]	; 0x50
 8017d44:	4790      	blx	r2
 8017d46:	9b07      	ldr	r3, [sp, #28]
 8017d48:	9000      	str	r0, [sp, #0]
 8017d4a:	9a71      	ldr	r2, [sp, #452]	; 0x1c4
 8017d4c:	4649      	mov	r1, r9
 8017d4e:	a834      	add	r0, sp, #208	; 0xd0
 8017d50:	f002 fa48 	bl	801a1e4 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8017d54:	f8bd 1030 	ldrh.w	r1, [sp, #48]	; 0x30
 8017d58:	7be2      	ldrb	r2, [r4, #15]
 8017d5a:	f8bd 3032 	ldrh.w	r3, [sp, #50]	; 0x32
 8017d5e:	1a8a      	subs	r2, r1, r2
 8017d60:	7c21      	ldrb	r1, [r4, #16]
 8017d62:	9103      	str	r1, [sp, #12]
 8017d64:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
 8017d68:	9102      	str	r1, [sp, #8]
 8017d6a:	6821      	ldr	r1, [r4, #0]
 8017d6c:	9101      	str	r1, [sp, #4]
 8017d6e:	7961      	ldrb	r1, [r4, #5]
 8017d70:	9100      	str	r1, [sp, #0]
 8017d72:	b292      	uxth	r2, r2
 8017d74:	a934      	add	r1, sp, #208	; 0xd0
 8017d76:	a812      	add	r0, sp, #72	; 0x48
 8017d78:	f7ff f838 	bl	8016dec <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>
 8017d7c:	7c23      	ldrb	r3, [r4, #16]
 8017d7e:	b30b      	cbz	r3, 8017dc4 <_ZN8touchgfx3LCD13drawStringRTLERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x148>
 8017d80:	f64f 79ff 	movw	r9, #65535	; 0xffff
 8017d84:	f9bd 302e 	ldrsh.w	r3, [sp, #46]	; 0x2e
 8017d88:	f9b7 2002 	ldrsh.w	r2, [r7, #2]
 8017d8c:	445b      	add	r3, fp
 8017d8e:	4293      	cmp	r3, r2
 8017d90:	da49      	bge.n	8017e26 <_ZN8touchgfx3LCD13drawStringRTLERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1aa>
 8017d92:	a812      	add	r0, sp, #72	; 0x48
 8017d94:	f7ff fe3e 	bl	8017a14 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 8017d98:	f8bd 305e 	ldrh.w	r3, [sp, #94]	; 0x5e
 8017d9c:	3b01      	subs	r3, #1
 8017d9e:	b29b      	uxth	r3, r3
 8017da0:	454b      	cmp	r3, r9
 8017da2:	9307      	str	r3, [sp, #28]
 8017da4:	d029      	beq.n	8017dfa <_ZN8touchgfx3LCD13drawStringRTLERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x17e>
 8017da6:	4631      	mov	r1, r6
 8017da8:	a81b      	add	r0, sp, #108	; 0x6c
 8017daa:	f7f6 ffff 	bl	800edac <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 8017dae:	9b07      	ldr	r3, [sp, #28]
 8017db0:	e7f4      	b.n	8017d9c <_ZN8touchgfx3LCD13drawStringRTLERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x120>
 8017db2:	2e01      	cmp	r6, #1
 8017db4:	d103      	bne.n	8017dbe <_ZN8touchgfx3LCD13drawStringRTLERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x142>
 8017db6:	7925      	ldrb	r5, [r4, #4]
 8017db8:	3d02      	subs	r5, #2
 8017dba:	bf18      	it	ne
 8017dbc:	2501      	movne	r5, #1
 8017dbe:	f04f 0801 	mov.w	r8, #1
 8017dc2:	e793      	b.n	8017cec <_ZN8touchgfx3LCD13drawStringRTLERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x70>
 8017dc4:	f8bd 9014 	ldrh.w	r9, [sp, #20]
 8017dc8:	f9bd 302e 	ldrsh.w	r3, [sp, #46]	; 0x2e
 8017dcc:	f9b7 2002 	ldrsh.w	r2, [r7, #2]
 8017dd0:	445b      	add	r3, fp
 8017dd2:	4293      	cmp	r3, r2
 8017dd4:	da27      	bge.n	8017e26 <_ZN8touchgfx3LCD13drawStringRTLERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1aa>
 8017dd6:	a81b      	add	r0, sp, #108	; 0x6c
 8017dd8:	f003 fa2e 	bl	801b238 <_ZN8touchgfx12TextProvider11getNextCharEv>
 8017ddc:	b300      	cbz	r0, 8017e20 <_ZN8touchgfx3LCD13drawStringRTLERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1a4>
 8017dde:	280a      	cmp	r0, #10
 8017de0:	d1f2      	bne.n	8017dc8 <_ZN8touchgfx3LCD13drawStringRTLERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x14c>
 8017de2:	f8bd 302e 	ldrh.w	r3, [sp, #46]	; 0x2e
 8017de6:	444b      	add	r3, r9
 8017de8:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 8017dec:	f8bd 3032 	ldrh.w	r3, [sp, #50]	; 0x32
 8017df0:	eba3 0309 	sub.w	r3, r3, r9
 8017df4:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 8017df8:	e7e6      	b.n	8017dc8 <_ZN8touchgfx3LCD13drawStringRTLERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x14c>
 8017dfa:	f8bd 3014 	ldrh.w	r3, [sp, #20]
 8017dfe:	f8bd 202e 	ldrh.w	r2, [sp, #46]	; 0x2e
 8017e02:	441a      	add	r2, r3
 8017e04:	f8ad 202e 	strh.w	r2, [sp, #46]	; 0x2e
 8017e08:	f8bd 2032 	ldrh.w	r2, [sp, #50]	; 0x32
 8017e0c:	1ad3      	subs	r3, r2, r3
 8017e0e:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 8017e12:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8017e16:	b11b      	cbz	r3, 8017e20 <_ZN8touchgfx3LCD13drawStringRTLERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1a4>
 8017e18:	f89d 306a 	ldrb.w	r3, [sp, #106]	; 0x6a
 8017e1c:	2b00      	cmp	r3, #0
 8017e1e:	d0b1      	beq.n	8017d84 <_ZN8touchgfx3LCD13drawStringRTLERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x108>
 8017e20:	b067      	add	sp, #412	; 0x19c
 8017e22:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017e26:	2300      	movs	r3, #0
 8017e28:	e9cd 3a0d 	strd	r3, sl, [sp, #52]	; 0x34
 8017e2c:	e9cd 7410 	strd	r7, r4, [sp, #64]	; 0x40
 8017e30:	f8bd 202e 	ldrh.w	r2, [sp, #46]	; 0x2e
 8017e34:	f8ad 203c 	strh.w	r2, [sp, #60]	; 0x3c
 8017e38:	4699      	mov	r9, r3
 8017e3a:	7c23      	ldrb	r3, [r4, #16]
 8017e3c:	f8ad 9022 	strh.w	r9, [sp, #34]	; 0x22
 8017e40:	b113      	cbz	r3, 8017e48 <_ZN8touchgfx3LCD13drawStringRTLERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1cc>
 8017e42:	a812      	add	r0, sp, #72	; 0x48
 8017e44:	f7ff fde6 	bl	8017a14 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 8017e48:	f1b8 0f00 	cmp.w	r8, #0
 8017e4c:	d068      	beq.n	8017f20 <_ZN8touchgfx3LCD13drawStringRTLERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x2a4>
 8017e4e:	2d00      	cmp	r5, #0
 8017e50:	d061      	beq.n	8017f16 <_ZN8touchgfx3LCD13drawStringRTLERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x29a>
 8017e52:	7c23      	ldrb	r3, [r4, #16]
 8017e54:	b9c3      	cbnz	r3, 8017e88 <_ZN8touchgfx3LCD13drawStringRTLERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x20c>
 8017e56:	2264      	movs	r2, #100	; 0x64
 8017e58:	a91b      	add	r1, sp, #108	; 0x6c
 8017e5a:	a84d      	add	r0, sp, #308	; 0x134
 8017e5c:	f013 fa0b 	bl	802b276 <memcpy>
 8017e60:	4633      	mov	r3, r6
 8017e62:	f647 72ff 	movw	r2, #32767	; 0x7fff
 8017e66:	6821      	ldr	r1, [r4, #0]
 8017e68:	a84d      	add	r0, sp, #308	; 0x134
 8017e6a:	f7ff f802 	bl	8016e72 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
 8017e6e:	b200      	sxth	r0, r0
 8017e70:	7922      	ldrb	r2, [r4, #4]
 8017e72:	2e00      	cmp	r6, #0
 8017e74:	d144      	bne.n	8017f00 <_ZN8touchgfx3LCD13drawStringRTLERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x284>
 8017e76:	2a01      	cmp	r2, #1
 8017e78:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	; 0x30
 8017e7c:	d107      	bne.n	8017e8e <_ZN8touchgfx3LCD13drawStringRTLERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x212>
 8017e7e:	1a1b      	subs	r3, r3, r0
 8017e80:	2002      	movs	r0, #2
 8017e82:	fb93 f3f0 	sdiv	r3, r3, r0
 8017e86:	e005      	b.n	8017e94 <_ZN8touchgfx3LCD13drawStringRTLERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x218>
 8017e88:	f9bd 0066 	ldrsh.w	r0, [sp, #102]	; 0x66
 8017e8c:	e7f0      	b.n	8017e70 <_ZN8touchgfx3LCD13drawStringRTLERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1f4>
 8017e8e:	7be2      	ldrb	r2, [r4, #15]
 8017e90:	1a9b      	subs	r3, r3, r2
 8017e92:	1a1b      	subs	r3, r3, r0
 8017e94:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 8017e98:	7c23      	ldrb	r3, [r4, #16]
 8017e9a:	2b00      	cmp	r3, #0
 8017e9c:	d042      	beq.n	8017f24 <_ZN8touchgfx3LCD13drawStringRTLERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x2a8>
 8017e9e:	f8bd 205e 	ldrh.w	r2, [sp, #94]	; 0x5e
 8017ea2:	f89d 306a 	ldrb.w	r3, [sp, #106]	; 0x6a
 8017ea6:	9201      	str	r2, [sp, #4]
 8017ea8:	f10d 0a34 	add.w	sl, sp, #52	; 0x34
 8017eac:	f10d 0b6c 	add.w	fp, sp, #108	; 0x6c
 8017eb0:	e9cd 3a02 	strd	r3, sl, [sp, #8]
 8017eb4:	6822      	ldr	r2, [r4, #0]
 8017eb6:	f8cd b000 	str.w	fp, [sp]
 8017eba:	4633      	mov	r3, r6
 8017ebc:	f10d 0122 	add.w	r1, sp, #34	; 0x22
 8017ec0:	9806      	ldr	r0, [sp, #24]
 8017ec2:	f7ff fa29 	bl	8017318 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE>
 8017ec6:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 8017eca:	f8ba 3008 	ldrh.w	r3, [sl, #8]
 8017ece:	f8bd 1032 	ldrh.w	r1, [sp, #50]	; 0x32
 8017ed2:	4413      	add	r3, r2
 8017ed4:	1a8a      	subs	r2, r1, r2
 8017ed6:	f8ad 2032 	strh.w	r2, [sp, #50]	; 0x32
 8017eda:	f89d 206a 	ldrb.w	r2, [sp, #106]	; 0x6a
 8017ede:	b21b      	sxth	r3, r3
 8017ee0:	f8aa 3008 	strh.w	r3, [sl, #8]
 8017ee4:	2a00      	cmp	r2, #0
 8017ee6:	d19b      	bne.n	8017e20 <_ZN8touchgfx3LCD13drawStringRTLERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1a4>
 8017ee8:	88fa      	ldrh	r2, [r7, #6]
 8017eea:	8879      	ldrh	r1, [r7, #2]
 8017eec:	440a      	add	r2, r1
 8017eee:	b212      	sxth	r2, r2
 8017ef0:	4293      	cmp	r3, r2
 8017ef2:	dc95      	bgt.n	8017e20 <_ZN8touchgfx3LCD13drawStringRTLERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1a4>
 8017ef4:	4658      	mov	r0, fp
 8017ef6:	f002 f941 	bl	801a17c <_ZN8touchgfx12TextProvider11endOfStringEv>
 8017efa:	2800      	cmp	r0, #0
 8017efc:	d09d      	beq.n	8017e3a <_ZN8touchgfx3LCD13drawStringRTLERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1be>
 8017efe:	e78f      	b.n	8017e20 <_ZN8touchgfx3LCD13drawStringRTLERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1a4>
 8017f00:	2a01      	cmp	r2, #1
 8017f02:	d103      	bne.n	8017f0c <_ZN8touchgfx3LCD13drawStringRTLERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x290>
 8017f04:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	; 0x30
 8017f08:	4403      	add	r3, r0
 8017f0a:	e7b9      	b.n	8017e80 <_ZN8touchgfx3LCD13drawStringRTLERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x204>
 8017f0c:	2a00      	cmp	r2, #0
 8017f0e:	d1c3      	bne.n	8017e98 <_ZN8touchgfx3LCD13drawStringRTLERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x21c>
 8017f10:	7be3      	ldrb	r3, [r4, #15]
 8017f12:	4403      	add	r3, r0
 8017f14:	e7be      	b.n	8017e94 <_ZN8touchgfx3LCD13drawStringRTLERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x218>
 8017f16:	7be2      	ldrb	r2, [r4, #15]
 8017f18:	f8bd 3030 	ldrh.w	r3, [sp, #48]	; 0x30
 8017f1c:	1a9b      	subs	r3, r3, r2
 8017f1e:	e7b9      	b.n	8017e94 <_ZN8touchgfx3LCD13drawStringRTLERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x218>
 8017f20:	7be3      	ldrb	r3, [r4, #15]
 8017f22:	e7b7      	b.n	8017e94 <_ZN8touchgfx3LCD13drawStringRTLERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x218>
 8017f24:	f647 72ff 	movw	r2, #32767	; 0x7fff
 8017f28:	e7bd      	b.n	8017ea6 <_ZN8touchgfx3LCD13drawStringRTLERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x22a>

08017f2a <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>:
 8017f2a:	2b03      	cmp	r3, #3
 8017f2c:	d818      	bhi.n	8017f60 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x36>
 8017f2e:	e8df f003 	tbb	[pc, r3]
 8017f32:	0602      	.short	0x0602
 8017f34:	130d      	.short	0x130d
 8017f36:	f9b0 2000 	ldrsh.w	r2, [r0]
 8017f3a:	1850      	adds	r0, r2, r1
 8017f3c:	4770      	bx	lr
 8017f3e:	8803      	ldrh	r3, [r0, #0]
 8017f40:	8880      	ldrh	r0, [r0, #4]
 8017f42:	4418      	add	r0, r3
 8017f44:	b200      	sxth	r0, r0
 8017f46:	1a80      	subs	r0, r0, r2
 8017f48:	3801      	subs	r0, #1
 8017f4a:	4770      	bx	lr
 8017f4c:	8803      	ldrh	r3, [r0, #0]
 8017f4e:	8880      	ldrh	r0, [r0, #4]
 8017f50:	4418      	add	r0, r3
 8017f52:	b200      	sxth	r0, r0
 8017f54:	1a40      	subs	r0, r0, r1
 8017f56:	e7f7      	b.n	8017f48 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x1e>
 8017f58:	f9b0 0000 	ldrsh.w	r0, [r0]
 8017f5c:	4410      	add	r0, r2
 8017f5e:	4770      	bx	lr
 8017f60:	2000      	movs	r0, #0
 8017f62:	4770      	bx	lr

08017f64 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>:
 8017f64:	2b03      	cmp	r3, #3
 8017f66:	d817      	bhi.n	8017f98 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x34>
 8017f68:	e8df f003 	tbb	[pc, r3]
 8017f6c:	10090602 	.word	0x10090602
 8017f70:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 8017f74:	1850      	adds	r0, r2, r1
 8017f76:	4770      	bx	lr
 8017f78:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 8017f7c:	e7fa      	b.n	8017f74 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x10>
 8017f7e:	8843      	ldrh	r3, [r0, #2]
 8017f80:	88c0      	ldrh	r0, [r0, #6]
 8017f82:	4418      	add	r0, r3
 8017f84:	b200      	sxth	r0, r0
 8017f86:	1a80      	subs	r0, r0, r2
 8017f88:	3801      	subs	r0, #1
 8017f8a:	4770      	bx	lr
 8017f8c:	8843      	ldrh	r3, [r0, #2]
 8017f8e:	88c0      	ldrh	r0, [r0, #6]
 8017f90:	4418      	add	r0, r3
 8017f92:	b200      	sxth	r0, r0
 8017f94:	1a40      	subs	r0, r0, r1
 8017f96:	e7f7      	b.n	8017f88 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x24>
 8017f98:	2000      	movs	r0, #0
 8017f9a:	4770      	bx	lr

08017f9c <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE>:
 8017f9c:	4b01      	ldr	r3, [pc, #4]	; (8017fa4 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE+0x8>)
 8017f9e:	2200      	movs	r2, #0
 8017fa0:	601a      	str	r2, [r3, #0]
 8017fa2:	4770      	bx	lr
 8017fa4:	20006c44 	.word	0x20006c44

08017fa8 <_ZN8touchgfx16TouchCalibration4clzuEm>:
 8017fa8:	4603      	mov	r3, r0
 8017faa:	b1c8      	cbz	r0, 8017fe0 <_ZN8touchgfx16TouchCalibration4clzuEm+0x38>
 8017fac:	0c02      	lsrs	r2, r0, #16
 8017fae:	0412      	lsls	r2, r2, #16
 8017fb0:	b9a2      	cbnz	r2, 8017fdc <_ZN8touchgfx16TouchCalibration4clzuEm+0x34>
 8017fb2:	0403      	lsls	r3, r0, #16
 8017fb4:	2010      	movs	r0, #16
 8017fb6:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
 8017fba:	bf04      	itt	eq
 8017fbc:	021b      	lsleq	r3, r3, #8
 8017fbe:	3008      	addeq	r0, #8
 8017fc0:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
 8017fc4:	bf04      	itt	eq
 8017fc6:	011b      	lsleq	r3, r3, #4
 8017fc8:	3004      	addeq	r0, #4
 8017fca:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
 8017fce:	bf04      	itt	eq
 8017fd0:	009b      	lsleq	r3, r3, #2
 8017fd2:	3002      	addeq	r0, #2
 8017fd4:	2b00      	cmp	r3, #0
 8017fd6:	db04      	blt.n	8017fe2 <_ZN8touchgfx16TouchCalibration4clzuEm+0x3a>
 8017fd8:	3001      	adds	r0, #1
 8017fda:	4770      	bx	lr
 8017fdc:	2000      	movs	r0, #0
 8017fde:	e7ea      	b.n	8017fb6 <_ZN8touchgfx16TouchCalibration4clzuEm+0xe>
 8017fe0:	2020      	movs	r0, #32
 8017fe2:	4770      	bx	lr

08017fe4 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>:
 8017fe4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017fe8:	b087      	sub	sp, #28
 8017fea:	460d      	mov	r5, r1
 8017fec:	4616      	mov	r6, r2
 8017fee:	4698      	mov	r8, r3
 8017ff0:	e9dd 4710 	ldrd	r4, r7, [sp, #64]	; 0x40
 8017ff4:	4601      	mov	r1, r0
 8017ff6:	b120      	cbz	r0, 8018002 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 8017ff8:	b11a      	cbz	r2, 8018002 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 8017ffa:	2d1f      	cmp	r5, #31
 8017ffc:	d801      	bhi.n	8018002 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 8017ffe:	2b1f      	cmp	r3, #31
 8018000:	d904      	bls.n	801800c <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x28>
 8018002:	2000      	movs	r0, #0
 8018004:	6038      	str	r0, [r7, #0]
 8018006:	b007      	add	sp, #28
 8018008:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801800c:	b97d      	cbnz	r5, 801802e <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x4a>
 801800e:	b143      	cbz	r3, 8018022 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x3e>
 8018010:	4602      	mov	r2, r0
 8018012:	e9cd 4700 	strd	r4, r7, [sp]
 8018016:	462b      	mov	r3, r5
 8018018:	4641      	mov	r1, r8
 801801a:	4630      	mov	r0, r6
 801801c:	f7ff ffe2 	bl	8017fe4 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 8018020:	e7f1      	b.n	8018006 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 8018022:	f04f 33ff 	mov.w	r3, #4294967295
 8018026:	603b      	str	r3, [r7, #0]
 8018028:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 801802c:	e7eb      	b.n	8018006 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 801802e:	fa32 fa05 	lsrs.w	sl, r2, r5
 8018032:	d106      	bne.n	8018042 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x5e>
 8018034:	4346      	muls	r6, r0
 8018036:	fbb6 f0f4 	udiv	r0, r6, r4
 801803a:	fb04 6610 	mls	r6, r4, r0, r6
 801803e:	603e      	str	r6, [r7, #0]
 8018040:	e7e1      	b.n	8018006 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 8018042:	2201      	movs	r2, #1
 8018044:	40aa      	lsls	r2, r5
 8018046:	3a01      	subs	r2, #1
 8018048:	4016      	ands	r6, r2
 801804a:	fa00 fb05 	lsl.w	fp, r0, r5
 801804e:	4630      	mov	r0, r6
 8018050:	fbbb f9f4 	udiv	r9, fp, r4
 8018054:	fb0a f309 	mul.w	r3, sl, r9
 8018058:	9303      	str	r3, [sp, #12]
 801805a:	f7ff ffa5 	bl	8017fa8 <_ZN8touchgfx16TouchCalibration4clzuEm>
 801805e:	462b      	mov	r3, r5
 8018060:	460a      	mov	r2, r1
 8018062:	e9cd 4700 	strd	r4, r7, [sp]
 8018066:	4601      	mov	r1, r0
 8018068:	4630      	mov	r0, r6
 801806a:	f7ff ffbb 	bl	8017fe4 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 801806e:	fb04 b919 	mls	r9, r4, r9, fp
 8018072:	4606      	mov	r6, r0
 8018074:	4648      	mov	r0, r9
 8018076:	eb05 0108 	add.w	r1, r5, r8
 801807a:	f7ff ff95 	bl	8017fa8 <_ZN8touchgfx16TouchCalibration4clzuEm>
 801807e:	ab05      	add	r3, sp, #20
 8018080:	e9cd 4300 	strd	r4, r3, [sp]
 8018084:	464a      	mov	r2, r9
 8018086:	4603      	mov	r3, r0
 8018088:	4650      	mov	r0, sl
 801808a:	f7ff ffab 	bl	8017fe4 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 801808e:	6839      	ldr	r1, [r7, #0]
 8018090:	9a05      	ldr	r2, [sp, #20]
 8018092:	9b03      	ldr	r3, [sp, #12]
 8018094:	4411      	add	r1, r2
 8018096:	fbb1 f2f4 	udiv	r2, r1, r4
 801809a:	18d3      	adds	r3, r2, r3
 801809c:	441e      	add	r6, r3
 801809e:	fb04 1412 	mls	r4, r4, r2, r1
 80180a2:	4430      	add	r0, r6
 80180a4:	603c      	str	r4, [r7, #0]
 80180a6:	e7ae      	b.n	8018006 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>

080180a8 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>:
 80180a8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80180ac:	b085      	sub	sp, #20
 80180ae:	f1b0 0900 	subs.w	r9, r0, #0
 80180b2:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 80180b4:	461d      	mov	r5, r3
 80180b6:	bfbf      	itttt	lt
 80180b8:	6823      	ldrlt	r3, [r4, #0]
 80180ba:	425b      	neglt	r3, r3
 80180bc:	f1c9 0900 	rsblt	r9, r9, #0
 80180c0:	6023      	strlt	r3, [r4, #0]
 80180c2:	bfb4      	ite	lt
 80180c4:	f04f 36ff 	movlt.w	r6, #4294967295
 80180c8:	2601      	movge	r6, #1
 80180ca:	2a00      	cmp	r2, #0
 80180cc:	4617      	mov	r7, r2
 80180ce:	da04      	bge.n	80180da <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x32>
 80180d0:	6823      	ldr	r3, [r4, #0]
 80180d2:	425b      	negs	r3, r3
 80180d4:	4257      	negs	r7, r2
 80180d6:	4276      	negs	r6, r6
 80180d8:	6023      	str	r3, [r4, #0]
 80180da:	2d00      	cmp	r5, #0
 80180dc:	4638      	mov	r0, r7
 80180de:	bfba      	itte	lt
 80180e0:	426d      	neglt	r5, r5
 80180e2:	f04f 38ff 	movlt.w	r8, #4294967295
 80180e6:	f04f 0801 	movge.w	r8, #1
 80180ea:	f7ff ff5d 	bl	8017fa8 <_ZN8touchgfx16TouchCalibration4clzuEm>
 80180ee:	ab03      	add	r3, sp, #12
 80180f0:	e9cd 5300 	strd	r5, r3, [sp]
 80180f4:	463a      	mov	r2, r7
 80180f6:	4603      	mov	r3, r0
 80180f8:	4648      	mov	r0, r9
 80180fa:	f7ff ff73 	bl	8017fe4 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 80180fe:	6823      	ldr	r3, [r4, #0]
 8018100:	9a03      	ldr	r2, [sp, #12]
 8018102:	4546      	cmp	r6, r8
 8018104:	441a      	add	r2, r3
 8018106:	fb92 f3f5 	sdiv	r3, r2, r5
 801810a:	4418      	add	r0, r3
 801810c:	bf18      	it	ne
 801810e:	4240      	negne	r0, r0
 8018110:	fb05 2313 	mls	r3, r5, r3, r2
 8018114:	1c72      	adds	r2, r6, #1
 8018116:	6023      	str	r3, [r4, #0]
 8018118:	d105      	bne.n	8018126 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7e>
 801811a:	2b00      	cmp	r3, #0
 801811c:	f1c3 0200 	rsb	r2, r3, #0
 8018120:	db0b      	blt.n	801813a <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x92>
 8018122:	6022      	str	r2, [r4, #0]
 8018124:	e006      	b.n	8018134 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 8018126:	2e01      	cmp	r6, #1
 8018128:	d104      	bne.n	8018134 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 801812a:	2b00      	cmp	r3, #0
 801812c:	da02      	bge.n	8018134 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 801812e:	442b      	add	r3, r5
 8018130:	3801      	subs	r0, #1
 8018132:	6023      	str	r3, [r4, #0]
 8018134:	b005      	add	sp, #20
 8018136:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801813a:	3801      	subs	r0, #1
 801813c:	1b52      	subs	r2, r2, r5
 801813e:	e7f0      	b.n	8018122 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7a>

08018140 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>:
 8018140:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8018144:	4c1c      	ldr	r4, [pc, #112]	; (80181b8 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x78>)
 8018146:	6807      	ldr	r7, [r0, #0]
 8018148:	69a3      	ldr	r3, [r4, #24]
 801814a:	4605      	mov	r5, r0
 801814c:	b92b      	cbnz	r3, 801815a <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x1a>
 801814e:	6840      	ldr	r0, [r0, #4]
 8018150:	e9c5 7000 	strd	r7, r0, [r5]
 8018154:	b004      	add	sp, #16
 8018156:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801815a:	68a2      	ldr	r2, [r4, #8]
 801815c:	6820      	ldr	r0, [r4, #0]
 801815e:	ae04      	add	r6, sp, #16
 8018160:	f04f 0802 	mov.w	r8, #2
 8018164:	fb93 f1f8 	sdiv	r1, r3, r8
 8018168:	440a      	add	r2, r1
 801816a:	f846 2d04 	str.w	r2, [r6, #-4]!
 801816e:	69e1      	ldr	r1, [r4, #28]
 8018170:	9600      	str	r6, [sp, #0]
 8018172:	463a      	mov	r2, r7
 8018174:	f7ff ff98 	bl	80180a8 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 8018178:	69a3      	ldr	r3, [r4, #24]
 801817a:	686a      	ldr	r2, [r5, #4]
 801817c:	6a21      	ldr	r1, [r4, #32]
 801817e:	9600      	str	r6, [sp, #0]
 8018180:	4607      	mov	r7, r0
 8018182:	6860      	ldr	r0, [r4, #4]
 8018184:	f7ff ff90 	bl	80180a8 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 8018188:	6962      	ldr	r2, [r4, #20]
 801818a:	69a3      	ldr	r3, [r4, #24]
 801818c:	fb93 f8f8 	sdiv	r8, r3, r8
 8018190:	4442      	add	r2, r8
 8018192:	9203      	str	r2, [sp, #12]
 8018194:	6a61      	ldr	r1, [r4, #36]	; 0x24
 8018196:	682a      	ldr	r2, [r5, #0]
 8018198:	9600      	str	r6, [sp, #0]
 801819a:	4407      	add	r7, r0
 801819c:	68e0      	ldr	r0, [r4, #12]
 801819e:	f7ff ff83 	bl	80180a8 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 80181a2:	9600      	str	r6, [sp, #0]
 80181a4:	4680      	mov	r8, r0
 80181a6:	69a3      	ldr	r3, [r4, #24]
 80181a8:	686a      	ldr	r2, [r5, #4]
 80181aa:	6aa1      	ldr	r1, [r4, #40]	; 0x28
 80181ac:	6920      	ldr	r0, [r4, #16]
 80181ae:	f7ff ff7b 	bl	80180a8 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 80181b2:	4440      	add	r0, r8
 80181b4:	e7cc      	b.n	8018150 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x10>
 80181b6:	bf00      	nop
 80181b8:	20006c48 	.word	0x20006c48

080181bc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>:
 80181bc:	4b07      	ldr	r3, [pc, #28]	; (80181dc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x20>)
 80181be:	781b      	ldrb	r3, [r3, #0]
 80181c0:	2b01      	cmp	r3, #1
 80181c2:	d109      	bne.n	80181d8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x1c>
 80181c4:	f9b1 3000 	ldrsh.w	r3, [r1]
 80181c8:	f9b0 2000 	ldrsh.w	r2, [r0]
 80181cc:	8003      	strh	r3, [r0, #0]
 80181ce:	4b04      	ldr	r3, [pc, #16]	; (80181e0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x24>)
 80181d0:	881b      	ldrh	r3, [r3, #0]
 80181d2:	3b01      	subs	r3, #1
 80181d4:	1a9b      	subs	r3, r3, r2
 80181d6:	800b      	strh	r3, [r1, #0]
 80181d8:	4770      	bx	lr
 80181da:	bf00      	nop
 80181dc:	20006c2c 	.word	0x20006c2c
 80181e0:	20006c28 	.word	0x20006c28

080181e4 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>:
 80181e4:	b510      	push	{r4, lr}
 80181e6:	4b07      	ldr	r3, [pc, #28]	; (8018204 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x20>)
 80181e8:	781b      	ldrb	r3, [r3, #0]
 80181ea:	2b01      	cmp	r3, #1
 80181ec:	d108      	bne.n	8018200 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x1c>
 80181ee:	4b06      	ldr	r3, [pc, #24]	; (8018208 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x24>)
 80181f0:	880c      	ldrh	r4, [r1, #0]
 80181f2:	881b      	ldrh	r3, [r3, #0]
 80181f4:	f9b0 2000 	ldrsh.w	r2, [r0]
 80181f8:	3b01      	subs	r3, #1
 80181fa:	1b1b      	subs	r3, r3, r4
 80181fc:	8003      	strh	r3, [r0, #0]
 80181fe:	800a      	strh	r2, [r1, #0]
 8018200:	bd10      	pop	{r4, pc}
 8018202:	bf00      	nop
 8018204:	20006c2c 	.word	0x20006c2c
 8018208:	20006c28 	.word	0x20006c28

0801820c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>:
 801820c:	b510      	push	{r4, lr}
 801820e:	4b0a      	ldr	r3, [pc, #40]	; (8018238 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x2c>)
 8018210:	781b      	ldrb	r3, [r3, #0]
 8018212:	2b01      	cmp	r3, #1
 8018214:	d10e      	bne.n	8018234 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x28>
 8018216:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 801821a:	8843      	ldrh	r3, [r0, #2]
 801821c:	f9b0 4000 	ldrsh.w	r4, [r0]
 8018220:	8044      	strh	r4, [r0, #2]
 8018222:	18ca      	adds	r2, r1, r3
 8018224:	4b05      	ldr	r3, [pc, #20]	; (801823c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x30>)
 8018226:	881b      	ldrh	r3, [r3, #0]
 8018228:	1a9b      	subs	r3, r3, r2
 801822a:	8003      	strh	r3, [r0, #0]
 801822c:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8018230:	80c3      	strh	r3, [r0, #6]
 8018232:	8081      	strh	r1, [r0, #4]
 8018234:	bd10      	pop	{r4, pc}
 8018236:	bf00      	nop
 8018238:	20006c2c 	.word	0x20006c2c
 801823c:	20006c28 	.word	0x20006c28

08018240 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>:
 8018240:	4b08      	ldr	r3, [pc, #32]	; (8018264 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x24>)
 8018242:	781b      	ldrb	r3, [r3, #0]
 8018244:	2b01      	cmp	r3, #1
 8018246:	d10c      	bne.n	8018262 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x22>
 8018248:	8803      	ldrh	r3, [r0, #0]
 801824a:	f9b0 1004 	ldrsh.w	r1, [r0, #4]
 801824e:	8842      	ldrh	r2, [r0, #2]
 8018250:	8002      	strh	r2, [r0, #0]
 8018252:	185a      	adds	r2, r3, r1
 8018254:	4b04      	ldr	r3, [pc, #16]	; (8018268 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x28>)
 8018256:	881b      	ldrh	r3, [r3, #0]
 8018258:	1a9b      	subs	r3, r3, r2
 801825a:	8043      	strh	r3, [r0, #2]
 801825c:	88c3      	ldrh	r3, [r0, #6]
 801825e:	8083      	strh	r3, [r0, #4]
 8018260:	80c1      	strh	r1, [r0, #6]
 8018262:	4770      	bx	lr
 8018264:	20006c2c 	.word	0x20006c2c
 8018268:	20006c28 	.word	0x20006c28

0801826c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>:
 801826c:	b510      	push	{r4, lr}
 801826e:	4b07      	ldr	r3, [pc, #28]	; (801828c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x20>)
 8018270:	781b      	ldrb	r3, [r3, #0]
 8018272:	2b01      	cmp	r3, #1
 8018274:	d108      	bne.n	8018288 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x1c>
 8018276:	f9b1 3000 	ldrsh.w	r3, [r1]
 801827a:	f9b0 4000 	ldrsh.w	r4, [r0]
 801827e:	8003      	strh	r3, [r0, #0]
 8018280:	8893      	ldrh	r3, [r2, #4]
 8018282:	3b01      	subs	r3, #1
 8018284:	1b1b      	subs	r3, r3, r4
 8018286:	800b      	strh	r3, [r1, #0]
 8018288:	bd10      	pop	{r4, pc}
 801828a:	bf00      	nop
 801828c:	20006c2c 	.word	0x20006c2c

08018290 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>:
 8018290:	b510      	push	{r4, lr}
 8018292:	4b0a      	ldr	r3, [pc, #40]	; (80182bc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x2c>)
 8018294:	781b      	ldrb	r3, [r3, #0]
 8018296:	2b01      	cmp	r3, #1
 8018298:	460a      	mov	r2, r1
 801829a:	d10d      	bne.n	80182b8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x28>
 801829c:	8881      	ldrh	r1, [r0, #4]
 801829e:	8803      	ldrh	r3, [r0, #0]
 80182a0:	440b      	add	r3, r1
 80182a2:	4601      	mov	r1, r0
 80182a4:	3b01      	subs	r3, #1
 80182a6:	f821 3b02 	strh.w	r3, [r1], #2
 80182aa:	f7ff ffdf 	bl	801826c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>
 80182ae:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 80182b2:	88c2      	ldrh	r2, [r0, #6]
 80182b4:	8082      	strh	r2, [r0, #4]
 80182b6:	80c3      	strh	r3, [r0, #6]
 80182b8:	bd10      	pop	{r4, pc}
 80182ba:	bf00      	nop
 80182bc:	20006c2c 	.word	0x20006c2c

080182c0 <_ZN8touchgfx11Application13requestRedrawEv>:
 80182c0:	4b06      	ldr	r3, [pc, #24]	; (80182dc <_ZN8touchgfx11Application13requestRedrawEv+0x1c>)
 80182c2:	f9b3 2000 	ldrsh.w	r2, [r3]
 80182c6:	4b06      	ldr	r3, [pc, #24]	; (80182e0 <_ZN8touchgfx11Application13requestRedrawEv+0x20>)
 80182c8:	f8a0 2134 	strh.w	r2, [r0, #308]	; 0x134
 80182cc:	f9b3 3000 	ldrsh.w	r3, [r3]
 80182d0:	f8a0 3136 	strh.w	r3, [r0, #310]	; 0x136
 80182d4:	2100      	movs	r1, #0
 80182d6:	f8c0 1130 	str.w	r1, [r0, #304]	; 0x130
 80182da:	4770      	bx	lr
 80182dc:	20006c28 	.word	0x20006c28
 80182e0:	20006c2a 	.word	0x20006c2a

080182e4 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE>:
 80182e4:	4b03      	ldr	r3, [pc, #12]	; (80182f4 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0x10>)
 80182e6:	6818      	ldr	r0, [r3, #0]
 80182e8:	b110      	cbz	r0, 80182f0 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0xc>
 80182ea:	6803      	ldr	r3, [r0, #0]
 80182ec:	699b      	ldr	r3, [r3, #24]
 80182ee:	4718      	bx	r3
 80182f0:	4770      	bx	lr
 80182f2:	bf00      	nop
 80182f4:	20006c78 	.word	0x20006c78

080182f8 <_ZN8touchgfx11Application29handlePendingScreenTransitionEv>:
 80182f8:	4770      	bx	lr
	...

080182fc <_ZN8touchgfx11Application4drawEv>:
 80182fc:	b507      	push	{r0, r1, r2, lr}
 80182fe:	4b09      	ldr	r3, [pc, #36]	; (8018324 <_ZN8touchgfx11Application4drawEv+0x28>)
 8018300:	f9b3 2000 	ldrsh.w	r2, [r3]
 8018304:	4b08      	ldr	r3, [pc, #32]	; (8018328 <_ZN8touchgfx11Application4drawEv+0x2c>)
 8018306:	f8ad 2004 	strh.w	r2, [sp, #4]
 801830a:	f9b3 3000 	ldrsh.w	r3, [r3]
 801830e:	f8ad 3006 	strh.w	r3, [sp, #6]
 8018312:	6803      	ldr	r3, [r0, #0]
 8018314:	2100      	movs	r1, #0
 8018316:	9100      	str	r1, [sp, #0]
 8018318:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 801831a:	4669      	mov	r1, sp
 801831c:	4798      	blx	r3
 801831e:	b003      	add	sp, #12
 8018320:	f85d fb04 	ldr.w	pc, [sp], #4
 8018324:	20006c28 	.word	0x20006c28
 8018328:	20006c2a 	.word	0x20006c2a

0801832c <_ZN8touchgfx11Application10invalidateEv>:
 801832c:	4b09      	ldr	r3, [pc, #36]	; (8018354 <_ZN8touchgfx11Application10invalidateEv+0x28>)
 801832e:	f9b3 2000 	ldrsh.w	r2, [r3]
 8018332:	4b09      	ldr	r3, [pc, #36]	; (8018358 <_ZN8touchgfx11Application10invalidateEv+0x2c>)
 8018334:	b082      	sub	sp, #8
 8018336:	f9b3 3000 	ldrsh.w	r3, [r3]
 801833a:	f8ad 2004 	strh.w	r2, [sp, #4]
 801833e:	2100      	movs	r1, #0
 8018340:	f8ad 3006 	strh.w	r3, [sp, #6]
 8018344:	9100      	str	r1, [sp, #0]
 8018346:	6803      	ldr	r3, [r0, #0]
 8018348:	aa02      	add	r2, sp, #8
 801834a:	e912 0006 	ldmdb	r2, {r1, r2}
 801834e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8018350:	b002      	add	sp, #8
 8018352:	4718      	bx	r3
 8018354:	20006c28 	.word	0x20006c28
 8018358:	20006c2a 	.word	0x20006c2a

0801835c <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE>:
 801835c:	4b03      	ldr	r3, [pc, #12]	; (801836c <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0x10>)
 801835e:	6818      	ldr	r0, [r3, #0]
 8018360:	b110      	cbz	r0, 8018368 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0xc>
 8018362:	6803      	ldr	r3, [r0, #0]
 8018364:	69db      	ldr	r3, [r3, #28]
 8018366:	4718      	bx	r3
 8018368:	4770      	bx	lr
 801836a:	bf00      	nop
 801836c:	20006c78 	.word	0x20006c78

08018370 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE>:
 8018370:	4b03      	ldr	r3, [pc, #12]	; (8018380 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0x10>)
 8018372:	6818      	ldr	r0, [r3, #0]
 8018374:	b110      	cbz	r0, 801837c <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0xc>
 8018376:	6803      	ldr	r3, [r0, #0]
 8018378:	6a1b      	ldr	r3, [r3, #32]
 801837a:	4718      	bx	r3
 801837c:	4770      	bx	lr
 801837e:	bf00      	nop
 8018380:	20006c78 	.word	0x20006c78

08018384 <_ZN8touchgfx11Application16clearCachedAreasEv>:
 8018384:	2300      	movs	r3, #0
 8018386:	f8a0 30ec 	strh.w	r3, [r0, #236]	; 0xec
 801838a:	4770      	bx	lr

0801838c <_ZN8touchgfx11Application14handleKeyEventEh>:
 801838c:	4b03      	ldr	r3, [pc, #12]	; (801839c <_ZN8touchgfx11Application14handleKeyEventEh+0x10>)
 801838e:	6818      	ldr	r0, [r3, #0]
 8018390:	b110      	cbz	r0, 8018398 <_ZN8touchgfx11Application14handleKeyEventEh+0xc>
 8018392:	6803      	ldr	r3, [r0, #0]
 8018394:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8018396:	4718      	bx	r3
 8018398:	4770      	bx	lr
 801839a:	bf00      	nop
 801839c:	20006c78 	.word	0x20006c78

080183a0 <_ZNK8touchgfx4Rect9intersectERKS0_>:
 80183a0:	b510      	push	{r4, lr}
 80183a2:	f9b1 4000 	ldrsh.w	r4, [r1]
 80183a6:	888a      	ldrh	r2, [r1, #4]
 80183a8:	f9b0 3000 	ldrsh.w	r3, [r0]
 80183ac:	4422      	add	r2, r4
 80183ae:	b212      	sxth	r2, r2
 80183b0:	4293      	cmp	r3, r2
 80183b2:	da15      	bge.n	80183e0 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 80183b4:	8882      	ldrh	r2, [r0, #4]
 80183b6:	4413      	add	r3, r2
 80183b8:	b21b      	sxth	r3, r3
 80183ba:	429c      	cmp	r4, r3
 80183bc:	da10      	bge.n	80183e0 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 80183be:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
 80183c2:	88c9      	ldrh	r1, [r1, #6]
 80183c4:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 80183c8:	4419      	add	r1, r3
 80183ca:	b209      	sxth	r1, r1
 80183cc:	428a      	cmp	r2, r1
 80183ce:	da07      	bge.n	80183e0 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 80183d0:	88c0      	ldrh	r0, [r0, #6]
 80183d2:	4410      	add	r0, r2
 80183d4:	b200      	sxth	r0, r0
 80183d6:	4283      	cmp	r3, r0
 80183d8:	bfac      	ite	ge
 80183da:	2000      	movge	r0, #0
 80183dc:	2001      	movlt	r0, #1
 80183de:	bd10      	pop	{r4, pc}
 80183e0:	2000      	movs	r0, #0
 80183e2:	e7fc      	b.n	80183de <_ZNK8touchgfx4Rect9intersectERKS0_+0x3e>

080183e4 <_ZN8touchgfx4Rect10restrictToEss>:
 80183e4:	f9b0 3000 	ldrsh.w	r3, [r0]
 80183e8:	2b00      	cmp	r3, #0
 80183ea:	b510      	push	{r4, lr}
 80183ec:	da04      	bge.n	80183f8 <_ZN8touchgfx4Rect10restrictToEss+0x14>
 80183ee:	8884      	ldrh	r4, [r0, #4]
 80183f0:	4423      	add	r3, r4
 80183f2:	8083      	strh	r3, [r0, #4]
 80183f4:	2300      	movs	r3, #0
 80183f6:	8003      	strh	r3, [r0, #0]
 80183f8:	f9b0 4000 	ldrsh.w	r4, [r0]
 80183fc:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8018400:	1b09      	subs	r1, r1, r4
 8018402:	428b      	cmp	r3, r1
 8018404:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 8018408:	bfc8      	it	gt
 801840a:	8081      	strhgt	r1, [r0, #4]
 801840c:	2b00      	cmp	r3, #0
 801840e:	da04      	bge.n	801841a <_ZN8touchgfx4Rect10restrictToEss+0x36>
 8018410:	88c1      	ldrh	r1, [r0, #6]
 8018412:	440b      	add	r3, r1
 8018414:	80c3      	strh	r3, [r0, #6]
 8018416:	2300      	movs	r3, #0
 8018418:	8043      	strh	r3, [r0, #2]
 801841a:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 801841e:	f9b0 3006 	ldrsh.w	r3, [r0, #6]
 8018422:	1a52      	subs	r2, r2, r1
 8018424:	4293      	cmp	r3, r2
 8018426:	bfc8      	it	gt
 8018428:	80c2      	strhgt	r2, [r0, #6]
 801842a:	bd10      	pop	{r4, pc}

0801842c <_ZN8touchgfx11Application4drawERNS_4RectE>:
 801842c:	b510      	push	{r4, lr}
 801842e:	4b10      	ldr	r3, [pc, #64]	; (8018470 <_ZN8touchgfx11Application4drawERNS_4RectE+0x44>)
 8018430:	f9b3 2000 	ldrsh.w	r2, [r3]
 8018434:	4b0f      	ldr	r3, [pc, #60]	; (8018474 <_ZN8touchgfx11Application4drawERNS_4RectE+0x48>)
 8018436:	460c      	mov	r4, r1
 8018438:	4620      	mov	r0, r4
 801843a:	f9b3 1000 	ldrsh.w	r1, [r3]
 801843e:	f7ff ffd1 	bl	80183e4 <_ZN8touchgfx4Rect10restrictToEss>
 8018442:	4b0d      	ldr	r3, [pc, #52]	; (8018478 <_ZN8touchgfx11Application4drawERNS_4RectE+0x4c>)
 8018444:	6818      	ldr	r0, [r3, #0]
 8018446:	b190      	cbz	r0, 801846e <_ZN8touchgfx11Application4drawERNS_4RectE+0x42>
 8018448:	6803      	ldr	r3, [r0, #0]
 801844a:	4621      	mov	r1, r4
 801844c:	689b      	ldr	r3, [r3, #8]
 801844e:	4798      	blx	r3
 8018450:	4b0a      	ldr	r3, [pc, #40]	; (801847c <_ZN8touchgfx11Application4drawERNS_4RectE+0x50>)
 8018452:	6818      	ldr	r0, [r3, #0]
 8018454:	b118      	cbz	r0, 801845e <_ZN8touchgfx11Application4drawERNS_4RectE+0x32>
 8018456:	6803      	ldr	r3, [r0, #0]
 8018458:	4621      	mov	r1, r4
 801845a:	689b      	ldr	r3, [r3, #8]
 801845c:	4798      	blx	r3
 801845e:	4b08      	ldr	r3, [pc, #32]	; (8018480 <_ZN8touchgfx11Application4drawERNS_4RectE+0x54>)
 8018460:	6818      	ldr	r0, [r3, #0]
 8018462:	6803      	ldr	r3, [r0, #0]
 8018464:	4621      	mov	r1, r4
 8018466:	69db      	ldr	r3, [r3, #28]
 8018468:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801846c:	4718      	bx	r3
 801846e:	bd10      	pop	{r4, pc}
 8018470:	20006c2a 	.word	0x20006c2a
 8018474:	20006c28 	.word	0x20006c28
 8018478:	20006c78 	.word	0x20006c78
 801847c:	20006c74 	.word	0x20006c74
 8018480:	20006c34 	.word	0x20006c34

08018484 <_ZNK8touchgfx4Rect8includesERKS0_>:
 8018484:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8018486:	4606      	mov	r6, r0
 8018488:	4608      	mov	r0, r1
 801848a:	460f      	mov	r7, r1
 801848c:	f7fa fa45 	bl	801291a <_ZNK8touchgfx4Rect7isEmptyEv>
 8018490:	b9e8      	cbnz	r0, 80184ce <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 8018492:	f9b7 5000 	ldrsh.w	r5, [r7]
 8018496:	f9b6 4000 	ldrsh.w	r4, [r6]
 801849a:	42a5      	cmp	r5, r4
 801849c:	db17      	blt.n	80184ce <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 801849e:	f9b7 2002 	ldrsh.w	r2, [r7, #2]
 80184a2:	f9b6 3002 	ldrsh.w	r3, [r6, #2]
 80184a6:	429a      	cmp	r2, r3
 80184a8:	db11      	blt.n	80184ce <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 80184aa:	88b9      	ldrh	r1, [r7, #4]
 80184ac:	440d      	add	r5, r1
 80184ae:	88b1      	ldrh	r1, [r6, #4]
 80184b0:	440c      	add	r4, r1
 80184b2:	b22d      	sxth	r5, r5
 80184b4:	b224      	sxth	r4, r4
 80184b6:	42a5      	cmp	r5, r4
 80184b8:	dc09      	bgt.n	80184ce <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 80184ba:	88f8      	ldrh	r0, [r7, #6]
 80184bc:	4410      	add	r0, r2
 80184be:	88f2      	ldrh	r2, [r6, #6]
 80184c0:	4413      	add	r3, r2
 80184c2:	b200      	sxth	r0, r0
 80184c4:	b21b      	sxth	r3, r3
 80184c6:	4298      	cmp	r0, r3
 80184c8:	bfcc      	ite	gt
 80184ca:	2000      	movgt	r0, #0
 80184cc:	2001      	movle	r0, #1
 80184ce:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

080184d0 <_ZN8touchgfx4Rect11expandToFitERKS0_>:
 80184d0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80184d2:	4604      	mov	r4, r0
 80184d4:	4608      	mov	r0, r1
 80184d6:	460d      	mov	r5, r1
 80184d8:	f7fa fa1f 	bl	801291a <_ZNK8touchgfx4Rect7isEmptyEv>
 80184dc:	b978      	cbnz	r0, 80184fe <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
 80184de:	4620      	mov	r0, r4
 80184e0:	f7fa fa1b 	bl	801291a <_ZNK8touchgfx4Rect7isEmptyEv>
 80184e4:	f9b5 6000 	ldrsh.w	r6, [r5]
 80184e8:	b150      	cbz	r0, 8018500 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x30>
 80184ea:	8026      	strh	r6, [r4, #0]
 80184ec:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 80184f0:	8063      	strh	r3, [r4, #2]
 80184f2:	f9b5 3004 	ldrsh.w	r3, [r5, #4]
 80184f6:	80a3      	strh	r3, [r4, #4]
 80184f8:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 80184fc:	80e3      	strh	r3, [r4, #6]
 80184fe:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8018500:	f9b4 1000 	ldrsh.w	r1, [r4]
 8018504:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 8018508:	f9b4 3002 	ldrsh.w	r3, [r4, #2]
 801850c:	f8b5 c004 	ldrh.w	ip, [r5, #4]
 8018510:	88ed      	ldrh	r5, [r5, #6]
 8018512:	42b1      	cmp	r1, r6
 8018514:	460f      	mov	r7, r1
 8018516:	bfa8      	it	ge
 8018518:	4637      	movge	r7, r6
 801851a:	4293      	cmp	r3, r2
 801851c:	4618      	mov	r0, r3
 801851e:	4466      	add	r6, ip
 8018520:	bfa8      	it	ge
 8018522:	4610      	movge	r0, r2
 8018524:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 8018528:	8027      	strh	r7, [r4, #0]
 801852a:	442a      	add	r2, r5
 801852c:	88e5      	ldrh	r5, [r4, #6]
 801852e:	8060      	strh	r0, [r4, #2]
 8018530:	4461      	add	r1, ip
 8018532:	442b      	add	r3, r5
 8018534:	b236      	sxth	r6, r6
 8018536:	b209      	sxth	r1, r1
 8018538:	b212      	sxth	r2, r2
 801853a:	b21b      	sxth	r3, r3
 801853c:	428e      	cmp	r6, r1
 801853e:	bfac      	ite	ge
 8018540:	ebc7 0106 	rsbge	r1, r7, r6
 8018544:	ebc7 0101 	rsblt	r1, r7, r1
 8018548:	429a      	cmp	r2, r3
 801854a:	bfac      	ite	ge
 801854c:	ebc0 0202 	rsbge	r2, r0, r2
 8018550:	ebc0 0203 	rsblt	r2, r0, r3
 8018554:	80a1      	strh	r1, [r4, #4]
 8018556:	80e2      	strh	r2, [r4, #6]
 8018558:	e7d1      	b.n	80184fe <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
	...

0801855c <_ZN8touchgfx11Application11getInstanceEv>:
 801855c:	4b01      	ldr	r3, [pc, #4]	; (8018564 <_ZN8touchgfx11Application11getInstanceEv+0x8>)
 801855e:	6818      	ldr	r0, [r3, #0]
 8018560:	4770      	bx	lr
 8018562:	bf00      	nop
 8018564:	20006c88 	.word	0x20006c88

08018568 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>:
 8018568:	b510      	push	{r4, lr}
 801856a:	2300      	movs	r3, #0
 801856c:	f8a0 30a4 	strh.w	r3, [r0, #164]	; 0xa4
 8018570:	f8b0 3080 	ldrh.w	r3, [r0, #128]	; 0x80
 8018574:	f8a0 30a6 	strh.w	r3, [r0, #166]	; 0xa6
 8018578:	4604      	mov	r4, r0
 801857a:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	; 0xa4
 801857e:	f8b4 20a6 	ldrh.w	r2, [r4, #166]	; 0xa6
 8018582:	429a      	cmp	r2, r3
 8018584:	d90e      	bls.n	80185a4 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x3c>
 8018586:	18e2      	adds	r2, r4, r3
 8018588:	f892 2084 	ldrb.w	r2, [r2, #132]	; 0x84
 801858c:	b122      	cbz	r2, 8018598 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x30>
 801858e:	f854 0023 	ldr.w	r0, [r4, r3, lsl #2]
 8018592:	6803      	ldr	r3, [r0, #0]
 8018594:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8018596:	4798      	blx	r3
 8018598:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	; 0xa4
 801859c:	3301      	adds	r3, #1
 801859e:	f8a4 30a4 	strh.w	r3, [r4, #164]	; 0xa4
 80185a2:	e7ea      	b.n	801857a <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x12>
 80185a4:	bd10      	pop	{r4, pc}

080185a6 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE>:
 80185a6:	b530      	push	{r4, r5, lr}
 80185a8:	f8b0 5080 	ldrh.w	r5, [r0, #128]	; 0x80
 80185ac:	2200      	movs	r2, #0
 80185ae:	b293      	uxth	r3, r2
 80185b0:	429d      	cmp	r5, r3
 80185b2:	d90e      	bls.n	80185d2 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x2c>
 80185b4:	f850 3022 	ldr.w	r3, [r0, r2, lsl #2]
 80185b8:	428b      	cmp	r3, r1
 80185ba:	d10b      	bne.n	80185d4 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x2e>
 80185bc:	1884      	adds	r4, r0, r2
 80185be:	f894 3084 	ldrb.w	r3, [r4, #132]	; 0x84
 80185c2:	b13b      	cbz	r3, 80185d4 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x2e>
 80185c4:	3b01      	subs	r3, #1
 80185c6:	b2db      	uxtb	r3, r3
 80185c8:	f884 3084 	strb.w	r3, [r4, #132]	; 0x84
 80185cc:	b90b      	cbnz	r3, 80185d2 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x2c>
 80185ce:	f840 3022 	str.w	r3, [r0, r2, lsl #2]
 80185d2:	bd30      	pop	{r4, r5, pc}
 80185d4:	3201      	adds	r2, #1
 80185d6:	e7ea      	b.n	80185ae <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x8>

080185d8 <_ZN8touchgfx11Application12TimerWidgets5clearEv>:
 80185d8:	2300      	movs	r3, #0
 80185da:	f8a0 3080 	strh.w	r3, [r0, #128]	; 0x80
 80185de:	f100 0284 	add.w	r2, r0, #132	; 0x84
 80185e2:	30a4      	adds	r0, #164	; 0xa4
 80185e4:	f802 3b01 	strb.w	r3, [r2], #1
 80185e8:	4282      	cmp	r2, r0
 80185ea:	d1fb      	bne.n	80185e4 <_ZN8touchgfx11Application12TimerWidgets5clearEv+0xc>
 80185ec:	4770      	bx	lr
	...

080185f0 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE>:
 80185f0:	b570      	push	{r4, r5, r6, lr}
 80185f2:	4c0b      	ldr	r4, [pc, #44]	; (8018620 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x30>)
 80185f4:	4605      	mov	r5, r0
 80185f6:	6820      	ldr	r0, [r4, #0]
 80185f8:	460e      	mov	r6, r1
 80185fa:	b110      	cbz	r0, 8018602 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x12>
 80185fc:	6803      	ldr	r3, [r0, #0]
 80185fe:	695b      	ldr	r3, [r3, #20]
 8018600:	4798      	blx	r3
 8018602:	1d28      	adds	r0, r5, #4
 8018604:	f7ff ffe8 	bl	80185d8 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8018608:	6026      	str	r6, [r4, #0]
 801860a:	6833      	ldr	r3, [r6, #0]
 801860c:	4630      	mov	r0, r6
 801860e:	68db      	ldr	r3, [r3, #12]
 8018610:	4798      	blx	r3
 8018612:	682b      	ldr	r3, [r5, #0]
 8018614:	4628      	mov	r0, r5
 8018616:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8018618:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801861c:	4718      	bx	r3
 801861e:	bf00      	nop
 8018620:	20006c78 	.word	0x20006c78

08018624 <_ZN8touchgfx11Application12TimerWidgets7compactEv>:
 8018624:	2300      	movs	r3, #0
 8018626:	f8b0 c080 	ldrh.w	ip, [r0, #128]	; 0x80
 801862a:	f8b0 10a4 	ldrh.w	r1, [r0, #164]	; 0xa4
 801862e:	b5f0      	push	{r4, r5, r6, r7, lr}
 8018630:	461a      	mov	r2, r3
 8018632:	461c      	mov	r4, r3
 8018634:	461d      	mov	r5, r3
 8018636:	459c      	cmp	ip, r3
 8018638:	dd1a      	ble.n	8018670 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x4c>
 801863a:	18c6      	adds	r6, r0, r3
 801863c:	f896 6084 	ldrb.w	r6, [r6, #132]	; 0x84
 8018640:	b16e      	cbz	r6, 801865e <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x3a>
 8018642:	429a      	cmp	r2, r3
 8018644:	d008      	beq.n	8018658 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x34>
 8018646:	fa1f fe82 	uxth.w	lr, r2
 801864a:	f850 7023 	ldr.w	r7, [r0, r3, lsl #2]
 801864e:	f840 702e 	str.w	r7, [r0, lr, lsl #2]
 8018652:	1887      	adds	r7, r0, r2
 8018654:	f887 6084 	strb.w	r6, [r7, #132]	; 0x84
 8018658:	3201      	adds	r2, #1
 801865a:	3301      	adds	r3, #1
 801865c:	e7eb      	b.n	8018636 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x12>
 801865e:	f8b0 60a6 	ldrh.w	r6, [r0, #166]	; 0xa6
 8018662:	4299      	cmp	r1, r3
 8018664:	bfa8      	it	ge
 8018666:	3501      	addge	r5, #1
 8018668:	429e      	cmp	r6, r3
 801866a:	bfc8      	it	gt
 801866c:	3401      	addgt	r4, #1
 801866e:	e7f4      	b.n	801865a <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x36>
 8018670:	f8b0 30a6 	ldrh.w	r3, [r0, #166]	; 0xa6
 8018674:	1b49      	subs	r1, r1, r5
 8018676:	1b1b      	subs	r3, r3, r4
 8018678:	f8a0 10a4 	strh.w	r1, [r0, #164]	; 0xa4
 801867c:	f8a0 30a6 	strh.w	r3, [r0, #166]	; 0xa6
 8018680:	f8b0 3080 	ldrh.w	r3, [r0, #128]	; 0x80
 8018684:	4293      	cmp	r3, r2
 8018686:	dd03      	ble.n	8018690 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x6c>
 8018688:	3b01      	subs	r3, #1
 801868a:	f8a0 3080 	strh.w	r3, [r0, #128]	; 0x80
 801868e:	e7f7      	b.n	8018680 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x5c>
 8018690:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

08018694 <_ZN8touchgfx11Application15handleTickEventEv>:
 8018694:	b570      	push	{r4, r5, r6, lr}
 8018696:	4d16      	ldr	r5, [pc, #88]	; (80186f0 <_ZN8touchgfx11Application15handleTickEventEv+0x5c>)
 8018698:	4604      	mov	r4, r0
 801869a:	6828      	ldr	r0, [r5, #0]
 801869c:	b140      	cbz	r0, 80186b0 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 801869e:	7a03      	ldrb	r3, [r0, #8]
 80186a0:	b933      	cbnz	r3, 80186b0 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 80186a2:	f884 3138 	strb.w	r3, [r4, #312]	; 0x138
 80186a6:	6803      	ldr	r3, [r0, #0]
 80186a8:	689b      	ldr	r3, [r3, #8]
 80186aa:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80186ae:	4718      	bx	r3
 80186b0:	f894 3138 	ldrb.w	r3, [r4, #312]	; 0x138
 80186b4:	4e0f      	ldr	r6, [pc, #60]	; (80186f4 <_ZN8touchgfx11Application15handleTickEventEv+0x60>)
 80186b6:	b973      	cbnz	r3, 80186d6 <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 80186b8:	b168      	cbz	r0, 80186d6 <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 80186ba:	7a03      	ldrb	r3, [r0, #8]
 80186bc:	b15b      	cbz	r3, 80186d6 <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 80186be:	6830      	ldr	r0, [r6, #0]
 80186c0:	b110      	cbz	r0, 80186c8 <_ZN8touchgfx11Application15handleTickEventEv+0x34>
 80186c2:	6803      	ldr	r3, [r0, #0]
 80186c4:	691b      	ldr	r3, [r3, #16]
 80186c6:	4798      	blx	r3
 80186c8:	6828      	ldr	r0, [r5, #0]
 80186ca:	6803      	ldr	r3, [r0, #0]
 80186cc:	68db      	ldr	r3, [r3, #12]
 80186ce:	4798      	blx	r3
 80186d0:	2301      	movs	r3, #1
 80186d2:	f884 3138 	strb.w	r3, [r4, #312]	; 0x138
 80186d6:	3404      	adds	r4, #4
 80186d8:	4620      	mov	r0, r4
 80186da:	f7ff ff45 	bl	8018568 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>
 80186de:	4620      	mov	r0, r4
 80186e0:	f7ff ffa0 	bl	8018624 <_ZN8touchgfx11Application12TimerWidgets7compactEv>
 80186e4:	6830      	ldr	r0, [r6, #0]
 80186e6:	b110      	cbz	r0, 80186ee <_ZN8touchgfx11Application15handleTickEventEv+0x5a>
 80186e8:	6803      	ldr	r3, [r0, #0]
 80186ea:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80186ec:	e7dd      	b.n	80186aa <_ZN8touchgfx11Application15handleTickEventEv+0x16>
 80186ee:	bd70      	pop	{r4, r5, r6, pc}
 80186f0:	20006c7c 	.word	0x20006c7c
 80186f4:	20006c78 	.word	0x20006c78

080186f8 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE>:
 80186f8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80186fa:	2300      	movs	r3, #0
 80186fc:	4604      	mov	r4, r0
 80186fe:	460d      	mov	r5, r1
 8018700:	f8b0 1080 	ldrh.w	r1, [r0, #128]	; 0x80
 8018704:	4618      	mov	r0, r3
 8018706:	b29a      	uxth	r2, r3
 8018708:	4291      	cmp	r1, r2
 801870a:	d911      	bls.n	8018730 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x38>
 801870c:	f854 7023 	ldr.w	r7, [r4, r3, lsl #2]
 8018710:	18e6      	adds	r6, r4, r3
 8018712:	42af      	cmp	r7, r5
 8018714:	f896 2084 	ldrb.w	r2, [r6, #132]	; 0x84
 8018718:	d105      	bne.n	8018726 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x2e>
 801871a:	2aff      	cmp	r2, #255	; 0xff
 801871c:	d002      	beq.n	8018724 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x2c>
 801871e:	3201      	adds	r2, #1
 8018720:	f886 2084 	strb.w	r2, [r6, #132]	; 0x84
 8018724:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8018726:	2a00      	cmp	r2, #0
 8018728:	bf08      	it	eq
 801872a:	2001      	moveq	r0, #1
 801872c:	3301      	adds	r3, #1
 801872e:	e7ea      	b.n	8018706 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0xe>
 8018730:	b120      	cbz	r0, 801873c <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x44>
 8018732:	2920      	cmp	r1, #32
 8018734:	d102      	bne.n	801873c <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x44>
 8018736:	4620      	mov	r0, r4
 8018738:	f7ff ff74 	bl	8018624 <_ZN8touchgfx11Application12TimerWidgets7compactEv>
 801873c:	f8b4 3080 	ldrh.w	r3, [r4, #128]	; 0x80
 8018740:	2b1f      	cmp	r3, #31
 8018742:	d8ef      	bhi.n	8018724 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x2c>
 8018744:	18e2      	adds	r2, r4, r3
 8018746:	2101      	movs	r1, #1
 8018748:	f882 1084 	strb.w	r1, [r2, #132]	; 0x84
 801874c:	185a      	adds	r2, r3, r1
 801874e:	f8a4 2080 	strh.w	r2, [r4, #128]	; 0x80
 8018752:	f844 5023 	str.w	r5, [r4, r3, lsl #2]
 8018756:	e7e5      	b.n	8018724 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x2c>

08018758 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>:
 8018758:	4603      	mov	r3, r0
 801875a:	f100 0140 	add.w	r1, r0, #64	; 0x40
 801875e:	2200      	movs	r2, #0
 8018760:	801a      	strh	r2, [r3, #0]
 8018762:	805a      	strh	r2, [r3, #2]
 8018764:	809a      	strh	r2, [r3, #4]
 8018766:	80da      	strh	r2, [r3, #6]
 8018768:	3308      	adds	r3, #8
 801876a:	428b      	cmp	r3, r1
 801876c:	d1f8      	bne.n	8018760 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev+0x8>
 801876e:	f8a0 2040 	strh.w	r2, [r0, #64]	; 0x40
 8018772:	4770      	bx	lr

08018774 <_ZN8touchgfx11ApplicationC1Ev>:
 8018774:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8018776:	4606      	mov	r6, r0
 8018778:	4b1c      	ldr	r3, [pc, #112]	; (80187ec <_ZN8touchgfx11ApplicationC1Ev+0x78>)
 801877a:	f846 3b04 	str.w	r3, [r6], #4
 801877e:	4604      	mov	r4, r0
 8018780:	2500      	movs	r5, #0
 8018782:	22a8      	movs	r2, #168	; 0xa8
 8018784:	2100      	movs	r1, #0
 8018786:	4630      	mov	r0, r6
 8018788:	f012 fca1 	bl	802b0ce <memset>
 801878c:	f8a4 5084 	strh.w	r5, [r4, #132]	; 0x84
 8018790:	f104 00ac 	add.w	r0, r4, #172	; 0xac
 8018794:	f7ff ffe0 	bl	8018758 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 8018798:	f104 00ee 	add.w	r0, r4, #238	; 0xee
 801879c:	f7ff ffdc 	bl	8018758 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 80187a0:	f8a4 5130 	strh.w	r5, [r4, #304]	; 0x130
 80187a4:	f8a4 5132 	strh.w	r5, [r4, #306]	; 0x132
 80187a8:	f8a4 5134 	strh.w	r5, [r4, #308]	; 0x134
 80187ac:	f8a4 5136 	strh.w	r5, [r4, #310]	; 0x136
 80187b0:	f884 5138 	strb.w	r5, [r4, #312]	; 0x138
 80187b4:	490e      	ldr	r1, [pc, #56]	; (80187f0 <_ZN8touchgfx11ApplicationC1Ev+0x7c>)
 80187b6:	480f      	ldr	r0, [pc, #60]	; (80187f4 <_ZN8touchgfx11ApplicationC1Ev+0x80>)
 80187b8:	4f0f      	ldr	r7, [pc, #60]	; (80187f8 <_ZN8touchgfx11ApplicationC1Ev+0x84>)
 80187ba:	f011 f9cf 	bl	8029b5c <CRC_Lock>
 80187be:	4b0f      	ldr	r3, [pc, #60]	; (80187fc <_ZN8touchgfx11ApplicationC1Ev+0x88>)
 80187c0:	b158      	cbz	r0, 80187da <_ZN8touchgfx11ApplicationC1Ev+0x66>
 80187c2:	801d      	strh	r5, [r3, #0]
 80187c4:	4a0e      	ldr	r2, [pc, #56]	; (8018800 <_ZN8touchgfx11ApplicationC1Ev+0x8c>)
 80187c6:	2300      	movs	r3, #0
 80187c8:	6013      	str	r3, [r2, #0]
 80187ca:	4a0e      	ldr	r2, [pc, #56]	; (8018804 <_ZN8touchgfx11ApplicationC1Ev+0x90>)
 80187cc:	603b      	str	r3, [r7, #0]
 80187ce:	4630      	mov	r0, r6
 80187d0:	6013      	str	r3, [r2, #0]
 80187d2:	f7ff ff01 	bl	80185d8 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 80187d6:	4620      	mov	r0, r4
 80187d8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80187da:	f44f 6280 	mov.w	r2, #1024	; 0x400
 80187de:	2002      	movs	r0, #2
 80187e0:	801a      	strh	r2, [r3, #0]
 80187e2:	6038      	str	r0, [r7, #0]
 80187e4:	f001 fafc 	bl	8019de0 <_ZN8touchgfx6Screen4drawEv>
 80187e8:	e7ec      	b.n	80187c4 <_ZN8touchgfx11ApplicationC1Ev+0x50>
 80187ea:	bf00      	nop
 80187ec:	0802fd34 	.word	0x0802fd34
 80187f0:	b5e8b5cd 	.word	0xb5e8b5cd
 80187f4:	f407a5c2 	.word	0xf407a5c2
 80187f8:	20006c78 	.word	0x20006c78
 80187fc:	2000010e 	.word	0x2000010e
 8018800:	20006c88 	.word	0x20006c88
 8018804:	20006c7c 	.word	0x20006c7c

08018808 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>:
 8018808:	f8b0 3040 	ldrh.w	r3, [r0, #64]	; 0x40
 801880c:	3b01      	subs	r3, #1
 801880e:	b29b      	uxth	r3, r3
 8018810:	428b      	cmp	r3, r1
 8018812:	b510      	push	{r4, lr}
 8018814:	f8a0 3040 	strh.w	r3, [r0, #64]	; 0x40
 8018818:	d908      	bls.n	801882c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x24>
 801881a:	eb00 03c3 	add.w	r3, r0, r3, lsl #3
 801881e:	eb00 04c1 	add.w	r4, r0, r1, lsl #3
 8018822:	681a      	ldr	r2, [r3, #0]
 8018824:	f840 2031 	str.w	r2, [r0, r1, lsl #3]
 8018828:	685a      	ldr	r2, [r3, #4]
 801882a:	6062      	str	r2, [r4, #4]
 801882c:	bd10      	pop	{r4, pc}
	...

08018830 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>:
 8018830:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018834:	4b8f      	ldr	r3, [pc, #572]	; (8018a74 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x244>)
 8018836:	b08f      	sub	sp, #60	; 0x3c
 8018838:	ac0a      	add	r4, sp, #40	; 0x28
 801883a:	e884 0006 	stmia.w	r4, {r1, r2}
 801883e:	f9b3 2000 	ldrsh.w	r2, [r3]
 8018842:	4b8d      	ldr	r3, [pc, #564]	; (8018a78 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x248>)
 8018844:	4683      	mov	fp, r0
 8018846:	f9b3 1000 	ldrsh.w	r1, [r3]
 801884a:	4620      	mov	r0, r4
 801884c:	f7ff fdca 	bl	80183e4 <_ZN8touchgfx4Rect10restrictToEss>
 8018850:	4620      	mov	r0, r4
 8018852:	f7fa f862 	bl	801291a <_ZNK8touchgfx4Rect7isEmptyEv>
 8018856:	2800      	cmp	r0, #0
 8018858:	d16a      	bne.n	8018930 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 801885a:	9403      	str	r4, [sp, #12]
 801885c:	f8bb 40ec 	ldrh.w	r4, [fp, #236]	; 0xec
 8018860:	f10b 03ac 	add.w	r3, fp, #172	; 0xac
 8018864:	eb0b 05c4 	add.w	r5, fp, r4, lsl #3
 8018868:	35a4      	adds	r5, #164	; 0xa4
 801886a:	9301      	str	r3, [sp, #4]
 801886c:	b15c      	cbz	r4, 8018886 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x56>
 801886e:	4629      	mov	r1, r5
 8018870:	9803      	ldr	r0, [sp, #12]
 8018872:	f7ff fe07 	bl	8018484 <_ZNK8touchgfx4Rect8includesERKS0_>
 8018876:	3c01      	subs	r4, #1
 8018878:	b118      	cbz	r0, 8018882 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52>
 801887a:	b2a1      	uxth	r1, r4
 801887c:	9801      	ldr	r0, [sp, #4]
 801887e:	f7ff ffc3 	bl	8018808 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8018882:	3d08      	subs	r5, #8
 8018884:	e7f2      	b.n	801886c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3c>
 8018886:	f8bb a0ec 	ldrh.w	sl, [fp, #236]	; 0xec
 801888a:	f8cd a010 	str.w	sl, [sp, #16]
 801888e:	f10a 33ff 	add.w	r3, sl, #4294967295
 8018892:	9302      	str	r3, [sp, #8]
 8018894:	ea4f 03ca 	mov.w	r3, sl, lsl #3
 8018898:	f103 04a4 	add.w	r4, r3, #164	; 0xa4
 801889c:	9306      	str	r3, [sp, #24]
 801889e:	445c      	add	r4, fp
 80188a0:	2500      	movs	r5, #0
 80188a2:	4626      	mov	r6, r4
 80188a4:	f8cd a014 	str.w	sl, [sp, #20]
 80188a8:	462f      	mov	r7, r5
 80188aa:	9b05      	ldr	r3, [sp, #20]
 80188ac:	2b00      	cmp	r3, #0
 80188ae:	d073      	beq.n	8018998 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x168>
 80188b0:	9903      	ldr	r1, [sp, #12]
 80188b2:	4630      	mov	r0, r6
 80188b4:	f7ff fd74 	bl	80183a0 <_ZNK8touchgfx4Rect9intersectERKS0_>
 80188b8:	b350      	cbz	r0, 8018910 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
 80188ba:	f9bd e028 	ldrsh.w	lr, [sp, #40]	; 0x28
 80188be:	f9b6 c000 	ldrsh.w	ip, [r6]
 80188c2:	f9bd 802a 	ldrsh.w	r8, [sp, #42]	; 0x2a
 80188c6:	f9b6 9002 	ldrsh.w	r9, [r6, #2]
 80188ca:	45e6      	cmp	lr, ip
 80188cc:	db33      	blt.n	8018936 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
 80188ce:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 80188d2:	88b3      	ldrh	r3, [r6, #4]
 80188d4:	4472      	add	r2, lr
 80188d6:	4463      	add	r3, ip
 80188d8:	b212      	sxth	r2, r2
 80188da:	b21b      	sxth	r3, r3
 80188dc:	429a      	cmp	r2, r3
 80188de:	dc2a      	bgt.n	8018936 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
 80188e0:	88f3      	ldrh	r3, [r6, #6]
 80188e2:	f8bd 102e 	ldrh.w	r1, [sp, #46]	; 0x2e
 80188e6:	fa1f f289 	uxth.w	r2, r9
 80188ea:	4413      	add	r3, r2
 80188ec:	b29b      	uxth	r3, r3
 80188ee:	45c8      	cmp	r8, r9
 80188f0:	fa1f fc88 	uxth.w	ip, r8
 80188f4:	fa0f fe83 	sxth.w	lr, r3
 80188f8:	db0f      	blt.n	801891a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xea>
 80188fa:	eba3 030c 	sub.w	r3, r3, ip
 80188fe:	1ac9      	subs	r1, r1, r3
 8018900:	b209      	sxth	r1, r1
 8018902:	2900      	cmp	r1, #0
 8018904:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 8018908:	dd12      	ble.n	8018930 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 801890a:	f8ad e02a 	strh.w	lr, [sp, #42]	; 0x2a
 801890e:	4605      	mov	r5, r0
 8018910:	9b05      	ldr	r3, [sp, #20]
 8018912:	3b01      	subs	r3, #1
 8018914:	9305      	str	r3, [sp, #20]
 8018916:	3e08      	subs	r6, #8
 8018918:	e7c7      	b.n	80188aa <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x7a>
 801891a:	4461      	add	r1, ip
 801891c:	b209      	sxth	r1, r1
 801891e:	4571      	cmp	r1, lr
 8018920:	dc38      	bgt.n	8018994 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 8018922:	eba2 020c 	sub.w	r2, r2, ip
 8018926:	b212      	sxth	r2, r2
 8018928:	f8ad 202e 	strh.w	r2, [sp, #46]	; 0x2e
 801892c:	2a00      	cmp	r2, #0
 801892e:	dcee      	bgt.n	801890e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
 8018930:	b00f      	add	sp, #60	; 0x3c
 8018932:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018936:	45c8      	cmp	r8, r9
 8018938:	db2c      	blt.n	8018994 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 801893a:	88f3      	ldrh	r3, [r6, #6]
 801893c:	4499      	add	r9, r3
 801893e:	f8bd 302e 	ldrh.w	r3, [sp, #46]	; 0x2e
 8018942:	4498      	add	r8, r3
 8018944:	fa0f f989 	sxth.w	r9, r9
 8018948:	fa0f f888 	sxth.w	r8, r8
 801894c:	45c1      	cmp	r9, r8
 801894e:	db21      	blt.n	8018994 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 8018950:	88b3      	ldrh	r3, [r6, #4]
 8018952:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 8018956:	fa1f f28c 	uxth.w	r2, ip
 801895a:	4413      	add	r3, r2
 801895c:	b29b      	uxth	r3, r3
 801895e:	45e6      	cmp	lr, ip
 8018960:	fa1f f88e 	uxth.w	r8, lr
 8018964:	fa0f f983 	sxth.w	r9, r3
 8018968:	db0a      	blt.n	8018980 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x150>
 801896a:	eba3 0308 	sub.w	r3, r3, r8
 801896e:	1ac9      	subs	r1, r1, r3
 8018970:	b209      	sxth	r1, r1
 8018972:	2900      	cmp	r1, #0
 8018974:	f8ad 102c 	strh.w	r1, [sp, #44]	; 0x2c
 8018978:	ddda      	ble.n	8018930 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 801897a:	f8ad 9028 	strh.w	r9, [sp, #40]	; 0x28
 801897e:	e7c6      	b.n	801890e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
 8018980:	4441      	add	r1, r8
 8018982:	b209      	sxth	r1, r1
 8018984:	4549      	cmp	r1, r9
 8018986:	dc05      	bgt.n	8018994 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 8018988:	eba2 0208 	sub.w	r2, r2, r8
 801898c:	b212      	sxth	r2, r2
 801898e:	f8ad 202c 	strh.w	r2, [sp, #44]	; 0x2c
 8018992:	e7cb      	b.n	801892c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xfc>
 8018994:	4607      	mov	r7, r0
 8018996:	e7bb      	b.n	8018910 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
 8018998:	2d00      	cmp	r5, #0
 801899a:	d181      	bne.n	80188a0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x70>
 801899c:	2f00      	cmp	r7, #0
 801899e:	f000 81dd 	beq.w	8018d5c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
 80189a2:	f9bd 6028 	ldrsh.w	r6, [sp, #40]	; 0x28
 80189a6:	f9bd 702a 	ldrsh.w	r7, [sp, #42]	; 0x2a
 80189aa:	f8bd a02e 	ldrh.w	sl, [sp, #46]	; 0x2e
 80189ae:	b2b3      	uxth	r3, r6
 80189b0:	9305      	str	r3, [sp, #20]
 80189b2:	9a05      	ldr	r2, [sp, #20]
 80189b4:	f8bd 302c 	ldrh.w	r3, [sp, #44]	; 0x2c
 80189b8:	4413      	add	r3, r2
 80189ba:	b2ba      	uxth	r2, r7
 80189bc:	4492      	add	sl, r2
 80189be:	b29b      	uxth	r3, r3
 80189c0:	fa1f fa8a 	uxth.w	sl, sl
 80189c4:	fa0f f883 	sxth.w	r8, r3
 80189c8:	fa0f f98a 	sxth.w	r9, sl
 80189cc:	e9cd 2307 	strd	r2, r3, [sp, #28]
 80189d0:	9b04      	ldr	r3, [sp, #16]
 80189d2:	2b00      	cmp	r3, #0
 80189d4:	d052      	beq.n	8018a7c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x24c>
 80189d6:	9903      	ldr	r1, [sp, #12]
 80189d8:	4620      	mov	r0, r4
 80189da:	f7ff fce1 	bl	80183a0 <_ZNK8touchgfx4Rect9intersectERKS0_>
 80189de:	e9dd 2307 	ldrd	r2, r3, [sp, #28]
 80189e2:	b1c0      	cbz	r0, 8018a16 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 80189e4:	f9b4 e000 	ldrsh.w	lr, [r4]
 80189e8:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 80189ec:	4576      	cmp	r6, lr
 80189ee:	dc22      	bgt.n	8018a36 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x206>
 80189f0:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 80189f4:	44f4      	add	ip, lr
 80189f6:	fa0f fc8c 	sxth.w	ip, ip
 80189fa:	45e0      	cmp	r8, ip
 80189fc:	db1b      	blt.n	8018a36 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x206>
 80189fe:	428f      	cmp	r7, r1
 8018a00:	fa1f fc81 	uxth.w	ip, r1
 8018a04:	88e1      	ldrh	r1, [r4, #6]
 8018a06:	dc0d      	bgt.n	8018a24 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f4>
 8018a08:	ebaa 0c0c 	sub.w	ip, sl, ip
 8018a0c:	eba1 010c 	sub.w	r1, r1, ip
 8018a10:	f8a4 9002 	strh.w	r9, [r4, #2]
 8018a14:	80e1      	strh	r1, [r4, #6]
 8018a16:	4628      	mov	r0, r5
 8018a18:	9904      	ldr	r1, [sp, #16]
 8018a1a:	3901      	subs	r1, #1
 8018a1c:	9104      	str	r1, [sp, #16]
 8018a1e:	3c08      	subs	r4, #8
 8018a20:	4605      	mov	r5, r0
 8018a22:	e7d3      	b.n	80189cc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x19c>
 8018a24:	4461      	add	r1, ip
 8018a26:	b209      	sxth	r1, r1
 8018a28:	4549      	cmp	r1, r9
 8018a2a:	dcf5      	bgt.n	8018a18 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 8018a2c:	eba2 0c0c 	sub.w	ip, r2, ip
 8018a30:	f8a4 c006 	strh.w	ip, [r4, #6]
 8018a34:	e7ef      	b.n	8018a16 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 8018a36:	428f      	cmp	r7, r1
 8018a38:	dcee      	bgt.n	8018a18 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 8018a3a:	f8b4 c006 	ldrh.w	ip, [r4, #6]
 8018a3e:	4461      	add	r1, ip
 8018a40:	b209      	sxth	r1, r1
 8018a42:	4589      	cmp	r9, r1
 8018a44:	dbe8      	blt.n	8018a18 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 8018a46:	4576      	cmp	r6, lr
 8018a48:	fa1f fc8e 	uxth.w	ip, lr
 8018a4c:	88a1      	ldrh	r1, [r4, #4]
 8018a4e:	dc07      	bgt.n	8018a60 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x230>
 8018a50:	eba3 0c0c 	sub.w	ip, r3, ip
 8018a54:	eba1 010c 	sub.w	r1, r1, ip
 8018a58:	f8a4 8000 	strh.w	r8, [r4]
 8018a5c:	80a1      	strh	r1, [r4, #4]
 8018a5e:	e7da      	b.n	8018a16 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 8018a60:	4461      	add	r1, ip
 8018a62:	b209      	sxth	r1, r1
 8018a64:	4588      	cmp	r8, r1
 8018a66:	dbd7      	blt.n	8018a18 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 8018a68:	9905      	ldr	r1, [sp, #20]
 8018a6a:	eba1 0c0c 	sub.w	ip, r1, ip
 8018a6e:	f8a4 c004 	strh.w	ip, [r4, #4]
 8018a72:	e7d0      	b.n	8018a16 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 8018a74:	20006c2a 	.word	0x20006c2a
 8018a78:	20006c28 	.word	0x20006c28
 8018a7c:	2d00      	cmp	r5, #0
 8018a7e:	f000 816d 	beq.w	8018d5c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
 8018a82:	9b06      	ldr	r3, [sp, #24]
 8018a84:	445b      	add	r3, fp
 8018a86:	461c      	mov	r4, r3
 8018a88:	9b02      	ldr	r3, [sp, #8]
 8018a8a:	3301      	adds	r3, #1
 8018a8c:	f000 8166 	beq.w	8018d5c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
 8018a90:	f104 05a4 	add.w	r5, r4, #164	; 0xa4
 8018a94:	4629      	mov	r1, r5
 8018a96:	9803      	ldr	r0, [sp, #12]
 8018a98:	f7ff fcf4 	bl	8018484 <_ZNK8touchgfx4Rect8includesERKS0_>
 8018a9c:	b120      	cbz	r0, 8018aa8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x278>
 8018a9e:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 8018aa2:	9801      	ldr	r0, [sp, #4]
 8018aa4:	f7ff feb0 	bl	8018808 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8018aa8:	9903      	ldr	r1, [sp, #12]
 8018aaa:	4628      	mov	r0, r5
 8018aac:	f7ff fc78 	bl	80183a0 <_ZNK8touchgfx4Rect9intersectERKS0_>
 8018ab0:	2800      	cmp	r0, #0
 8018ab2:	f000 809c 	beq.w	8018bee <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3be>
 8018ab6:	f9b4 90a4 	ldrsh.w	r9, [r4, #164]	; 0xa4
 8018aba:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	; 0xa8
 8018abe:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	; 0x28
 8018ac2:	9309      	str	r3, [sp, #36]	; 0x24
 8018ac4:	fa1f f189 	uxth.w	r1, r9
 8018ac8:	eb01 0c03 	add.w	ip, r1, r3
 8018acc:	fa1f fa8c 	uxth.w	sl, ip
 8018ad0:	f8bd c02c 	ldrh.w	ip, [sp, #44]	; 0x2c
 8018ad4:	f9bd e02a 	ldrsh.w	lr, [sp, #42]	; 0x2a
 8018ad8:	f9b4 20a6 	ldrsh.w	r2, [r4, #166]	; 0xa6
 8018adc:	b283      	uxth	r3, r0
 8018ade:	eb03 050c 	add.w	r5, r3, ip
 8018ae2:	b2ad      	uxth	r5, r5
 8018ae4:	9505      	str	r5, [sp, #20]
 8018ae6:	f9bd 5014 	ldrsh.w	r5, [sp, #20]
 8018aea:	9504      	str	r5, [sp, #16]
 8018aec:	4548      	cmp	r0, r9
 8018aee:	f8bb 50ec 	ldrh.w	r5, [fp, #236]	; 0xec
 8018af2:	f340 8099 	ble.w	8018c28 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3f8>
 8018af6:	1a5b      	subs	r3, r3, r1
 8018af8:	b29b      	uxth	r3, r3
 8018afa:	4596      	cmp	lr, r2
 8018afc:	fa0f f08a 	sxth.w	r0, sl
 8018b00:	b21e      	sxth	r6, r3
 8018b02:	dd2e      	ble.n	8018b62 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x332>
 8018b04:	9f02      	ldr	r7, [sp, #8]
 8018b06:	f8bd 402e 	ldrh.w	r4, [sp, #46]	; 0x2e
 8018b0a:	eb0b 08c7 	add.w	r8, fp, r7, lsl #3
 8018b0e:	9f04      	ldr	r7, [sp, #16]
 8018b10:	1a3f      	subs	r7, r7, r0
 8018b12:	f8b8 00b2 	ldrh.w	r0, [r8, #178]	; 0xb2
 8018b16:	fa1f fe8e 	uxth.w	lr, lr
 8018b1a:	b292      	uxth	r2, r2
 8018b1c:	ebae 0102 	sub.w	r1, lr, r2
 8018b20:	44a6      	add	lr, r4
 8018b22:	4402      	add	r2, r0
 8018b24:	b289      	uxth	r1, r1
 8018b26:	fa0f fe8e 	sxth.w	lr, lr
 8018b2a:	b212      	sxth	r2, r2
 8018b2c:	b20d      	sxth	r5, r1
 8018b2e:	ebae 0202 	sub.w	r2, lr, r2
 8018b32:	436f      	muls	r7, r5
 8018b34:	4372      	muls	r2, r6
 8018b36:	4297      	cmp	r7, r2
 8018b38:	db09      	blt.n	8018b4e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x31e>
 8018b3a:	f8b8 20ac 	ldrh.w	r2, [r8, #172]	; 0xac
 8018b3e:	f8a8 50b2 	strh.w	r5, [r8, #178]	; 0xb2
 8018b42:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 8018b46:	449c      	add	ip, r3
 8018b48:	f8ad c02c 	strh.w	ip, [sp, #44]	; 0x2c
 8018b4c:	e686      	b.n	801885c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8018b4e:	4421      	add	r1, r4
 8018b50:	f8b8 30ae 	ldrh.w	r3, [r8, #174]	; 0xae
 8018b54:	f8a8 60b0 	strh.w	r6, [r8, #176]	; 0xb0
 8018b58:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 8018b5c:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 8018b60:	e67c      	b.n	801885c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8018b62:	9f04      	ldr	r7, [sp, #16]
 8018b64:	42b8      	cmp	r0, r7
 8018b66:	da27      	bge.n	8018bb8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x388>
 8018b68:	9902      	ldr	r1, [sp, #8]
 8018b6a:	f8bd 502e 	ldrh.w	r5, [sp, #46]	; 0x2e
 8018b6e:	eb0b 04c1 	add.w	r4, fp, r1, lsl #3
 8018b72:	eb05 010e 	add.w	r1, r5, lr
 8018b76:	fa1f f881 	uxth.w	r8, r1
 8018b7a:	f8b4 10b2 	ldrh.w	r1, [r4, #178]	; 0xb2
 8018b7e:	4411      	add	r1, r2
 8018b80:	eba1 0108 	sub.w	r1, r1, r8
 8018b84:	b289      	uxth	r1, r1
 8018b86:	fa0f f988 	sxth.w	r9, r8
 8018b8a:	eba2 020e 	sub.w	r2, r2, lr
 8018b8e:	fa0f f881 	sxth.w	r8, r1
 8018b92:	1a3f      	subs	r7, r7, r0
 8018b94:	4372      	muls	r2, r6
 8018b96:	fb08 f707 	mul.w	r7, r8, r7
 8018b9a:	42ba      	cmp	r2, r7
 8018b9c:	dc06      	bgt.n	8018bac <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x37c>
 8018b9e:	f8a4 90ae 	strh.w	r9, [r4, #174]	; 0xae
 8018ba2:	f8a4 80b2 	strh.w	r8, [r4, #178]	; 0xb2
 8018ba6:	f8b4 20ac 	ldrh.w	r2, [r4, #172]	; 0xac
 8018baa:	e7ca      	b.n	8018b42 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x312>
 8018bac:	f8a4 60b0 	strh.w	r6, [r4, #176]	; 0xb0
 8018bb0:	4429      	add	r1, r5
 8018bb2:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 8018bb6:	e651      	b.n	801885c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8018bb8:	9805      	ldr	r0, [sp, #20]
 8018bba:	ebaa 0000 	sub.w	r0, sl, r0
 8018bbe:	b280      	uxth	r0, r0
 8018bc0:	2d06      	cmp	r5, #6
 8018bc2:	fa0f fe80 	sxth.w	lr, r0
 8018bc6:	d817      	bhi.n	8018bf8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3c8>
 8018bc8:	9b04      	ldr	r3, [sp, #16]
 8018bca:	f8a4 30a4 	strh.w	r3, [r4, #164]	; 0xa4
 8018bce:	1c6b      	adds	r3, r5, #1
 8018bd0:	f9b4 10aa 	ldrsh.w	r1, [r4, #170]	; 0xaa
 8018bd4:	f8a4 e0a8 	strh.w	lr, [r4, #168]	; 0xa8
 8018bd8:	f8ab 30ec 	strh.w	r3, [fp, #236]	; 0xec
 8018bdc:	9b01      	ldr	r3, [sp, #4]
 8018bde:	9801      	ldr	r0, [sp, #4]
 8018be0:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 8018be4:	f820 9035 	strh.w	r9, [r0, r5, lsl #3]
 8018be8:	805a      	strh	r2, [r3, #2]
 8018bea:	809e      	strh	r6, [r3, #4]
 8018bec:	80d9      	strh	r1, [r3, #6]
 8018bee:	9b02      	ldr	r3, [sp, #8]
 8018bf0:	3b01      	subs	r3, #1
 8018bf2:	9302      	str	r3, [sp, #8]
 8018bf4:	3c08      	subs	r4, #8
 8018bf6:	e747      	b.n	8018a88 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x258>
 8018bf8:	9a02      	ldr	r2, [sp, #8]
 8018bfa:	45b6      	cmp	lr, r6
 8018bfc:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8018c00:	db0d      	blt.n	8018c1e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3ee>
 8018c02:	449c      	add	ip, r3
 8018c04:	fa1f fc8c 	uxth.w	ip, ip
 8018c08:	445a      	add	r2, fp
 8018c0a:	f8ad c02c 	strh.w	ip, [sp, #44]	; 0x2c
 8018c0e:	448c      	add	ip, r1
 8018c10:	f8ad 9028 	strh.w	r9, [sp, #40]	; 0x28
 8018c14:	f8a2 c0ac 	strh.w	ip, [r2, #172]	; 0xac
 8018c18:	f8a2 e0b0 	strh.w	lr, [r2, #176]	; 0xb0
 8018c1c:	e61e      	b.n	801885c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8018c1e:	445a      	add	r2, fp
 8018c20:	4484      	add	ip, r0
 8018c22:	f8a2 60b0 	strh.w	r6, [r2, #176]	; 0xb0
 8018c26:	e78f      	b.n	8018b48 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 8018c28:	f8bd 602e 	ldrh.w	r6, [sp, #46]	; 0x2e
 8018c2c:	fa1f f18e 	uxth.w	r1, lr
 8018c30:	eb01 0806 	add.w	r8, r1, r6
 8018c34:	b293      	uxth	r3, r2
 8018c36:	fa1f f888 	uxth.w	r8, r8
 8018c3a:	9306      	str	r3, [sp, #24]
 8018c3c:	fa0f f388 	sxth.w	r3, r8
 8018c40:	9307      	str	r3, [sp, #28]
 8018c42:	9f06      	ldr	r7, [sp, #24]
 8018c44:	f8b4 30aa 	ldrh.w	r3, [r4, #170]	; 0xaa
 8018c48:	443b      	add	r3, r7
 8018c4a:	b29b      	uxth	r3, r3
 8018c4c:	4596      	cmp	lr, r2
 8018c4e:	9308      	str	r3, [sp, #32]
 8018c50:	da24      	bge.n	8018c9c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x46c>
 8018c52:	9905      	ldr	r1, [sp, #20]
 8018c54:	eba3 0308 	sub.w	r3, r3, r8
 8018c58:	ebaa 0401 	sub.w	r4, sl, r1
 8018c5c:	b2a4      	uxth	r4, r4
 8018c5e:	b29b      	uxth	r3, r3
 8018c60:	b225      	sxth	r5, r4
 8018c62:	b219      	sxth	r1, r3
 8018c64:	eba2 020e 	sub.w	r2, r2, lr
 8018c68:	eba9 0000 	sub.w	r0, r9, r0
 8018c6c:	436a      	muls	r2, r5
 8018c6e:	4348      	muls	r0, r1
 8018c70:	4282      	cmp	r2, r0
 8018c72:	9a02      	ldr	r2, [sp, #8]
 8018c74:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8018c78:	445a      	add	r2, fp
 8018c7a:	dc06      	bgt.n	8018c8a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x45a>
 8018c7c:	9b07      	ldr	r3, [sp, #28]
 8018c7e:	f8a2 10b2 	strh.w	r1, [r2, #178]	; 0xb2
 8018c82:	f8a2 30ae 	strh.w	r3, [r2, #174]	; 0xae
 8018c86:	44a4      	add	ip, r4
 8018c88:	e75e      	b.n	8018b48 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 8018c8a:	9904      	ldr	r1, [sp, #16]
 8018c8c:	f8a2 50b0 	strh.w	r5, [r2, #176]	; 0xb0
 8018c90:	f8a2 10ac 	strh.w	r1, [r2, #172]	; 0xac
 8018c94:	4433      	add	r3, r6
 8018c96:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 8018c9a:	e5df      	b.n	801885c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8018c9c:	9f06      	ldr	r7, [sp, #24]
 8018c9e:	9b04      	ldr	r3, [sp, #16]
 8018ca0:	1bc9      	subs	r1, r1, r7
 8018ca2:	fa0f f78a 	sxth.w	r7, sl
 8018ca6:	b289      	uxth	r1, r1
 8018ca8:	429f      	cmp	r7, r3
 8018caa:	fa0f fe81 	sxth.w	lr, r1
 8018cae:	dd23      	ble.n	8018cf8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4c8>
 8018cb0:	9a05      	ldr	r2, [sp, #20]
 8018cb2:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 8018cb6:	9d07      	ldr	r5, [sp, #28]
 8018cb8:	ebaa 0202 	sub.w	r2, sl, r2
 8018cbc:	b292      	uxth	r2, r2
 8018cbe:	eba5 0a03 	sub.w	sl, r5, r3
 8018cc2:	b214      	sxth	r4, r2
 8018cc4:	eba9 0000 	sub.w	r0, r9, r0
 8018cc8:	9b02      	ldr	r3, [sp, #8]
 8018cca:	fb0e f000 	mul.w	r0, lr, r0
 8018cce:	fb04 fa0a 	mul.w	sl, r4, sl
 8018cd2:	00db      	lsls	r3, r3, #3
 8018cd4:	4550      	cmp	r0, sl
 8018cd6:	445b      	add	r3, fp
 8018cd8:	db03      	blt.n	8018ce2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4b2>
 8018cda:	f8a3 e0b2 	strh.w	lr, [r3, #178]	; 0xb2
 8018cde:	4494      	add	ip, r2
 8018ce0:	e732      	b.n	8018b48 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 8018ce2:	9a04      	ldr	r2, [sp, #16]
 8018ce4:	f8a3 20ac 	strh.w	r2, [r3, #172]	; 0xac
 8018ce8:	f8a3 40b0 	strh.w	r4, [r3, #176]	; 0xb0
 8018cec:	f8b3 30ae 	ldrh.w	r3, [r3, #174]	; 0xae
 8018cf0:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 8018cf4:	4431      	add	r1, r6
 8018cf6:	e75c      	b.n	8018bb2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x382>
 8018cf8:	9b08      	ldr	r3, [sp, #32]
 8018cfa:	eba3 0308 	sub.w	r3, r3, r8
 8018cfe:	b29b      	uxth	r3, r3
 8018d00:	2d06      	cmp	r5, #6
 8018d02:	b218      	sxth	r0, r3
 8018d04:	d813      	bhi.n	8018d2e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4fe>
 8018d06:	9b07      	ldr	r3, [sp, #28]
 8018d08:	f8a4 30a6 	strh.w	r3, [r4, #166]	; 0xa6
 8018d0c:	1c6b      	adds	r3, r5, #1
 8018d0e:	f8a4 00aa 	strh.w	r0, [r4, #170]	; 0xaa
 8018d12:	f8ab 30ec 	strh.w	r3, [fp, #236]	; 0xec
 8018d16:	9b01      	ldr	r3, [sp, #4]
 8018d18:	9901      	ldr	r1, [sp, #4]
 8018d1a:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 8018d1e:	f821 9035 	strh.w	r9, [r1, r5, lsl #3]
 8018d22:	805a      	strh	r2, [r3, #2]
 8018d24:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8018d26:	809a      	strh	r2, [r3, #4]
 8018d28:	f8a3 e006 	strh.w	lr, [r3, #6]
 8018d2c:	e75f      	b.n	8018bee <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3be>
 8018d2e:	9c02      	ldr	r4, [sp, #8]
 8018d30:	4570      	cmp	r0, lr
 8018d32:	ea4f 04c4 	mov.w	r4, r4, lsl #3
 8018d36:	db0d      	blt.n	8018d54 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x524>
 8018d38:	4431      	add	r1, r6
 8018d3a:	9b06      	ldr	r3, [sp, #24]
 8018d3c:	f8ad 202a 	strh.w	r2, [sp, #42]	; 0x2a
 8018d40:	b289      	uxth	r1, r1
 8018d42:	445c      	add	r4, fp
 8018d44:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 8018d48:	4419      	add	r1, r3
 8018d4a:	f8a4 10ae 	strh.w	r1, [r4, #174]	; 0xae
 8018d4e:	f8a4 00b2 	strh.w	r0, [r4, #178]	; 0xb2
 8018d52:	e583      	b.n	801885c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8018d54:	445c      	add	r4, fp
 8018d56:	f8a4 e0b2 	strh.w	lr, [r4, #178]	; 0xb2
 8018d5a:	e79b      	b.n	8018c94 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x464>
 8018d5c:	f8bb 40ec 	ldrh.w	r4, [fp, #236]	; 0xec
 8018d60:	1e65      	subs	r5, r4, #1
 8018d62:	b2ad      	uxth	r5, r5
 8018d64:	eb0b 04c4 	add.w	r4, fp, r4, lsl #3
 8018d68:	f64f 76ff 	movw	r6, #65535	; 0xffff
 8018d6c:	42b5      	cmp	r5, r6
 8018d6e:	d044      	beq.n	8018dfa <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5ca>
 8018d70:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 8018d74:	f9b4 00a6 	ldrsh.w	r0, [r4, #166]	; 0xa6
 8018d78:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	; 0x28
 8018d7c:	f9b4 70a4 	ldrsh.w	r7, [r4, #164]	; 0xa4
 8018d80:	4282      	cmp	r2, r0
 8018d82:	d11f      	bne.n	8018dc4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x594>
 8018d84:	f9bd c02e 	ldrsh.w	ip, [sp, #46]	; 0x2e
 8018d88:	f9b4 30aa 	ldrsh.w	r3, [r4, #170]	; 0xaa
 8018d8c:	459c      	cmp	ip, r3
 8018d8e:	d119      	bne.n	8018dc4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x594>
 8018d90:	f8b4 30a8 	ldrh.w	r3, [r4, #168]	; 0xa8
 8018d94:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 8018d98:	19d8      	adds	r0, r3, r7
 8018d9a:	b200      	sxth	r0, r0
 8018d9c:	4288      	cmp	r0, r1
 8018d9e:	d109      	bne.n	8018db4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x584>
 8018da0:	f8ad 7028 	strh.w	r7, [sp, #40]	; 0x28
 8018da4:	4413      	add	r3, r2
 8018da6:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8018daa:	4629      	mov	r1, r5
 8018dac:	9801      	ldr	r0, [sp, #4]
 8018dae:	f7ff fd2b 	bl	8018808 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8018db2:	e003      	b.n	8018dbc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 8018db4:	4411      	add	r1, r2
 8018db6:	b209      	sxth	r1, r1
 8018db8:	42b9      	cmp	r1, r7
 8018dba:	d0f3      	beq.n	8018da4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x574>
 8018dbc:	3d01      	subs	r5, #1
 8018dbe:	b2ad      	uxth	r5, r5
 8018dc0:	3c08      	subs	r4, #8
 8018dc2:	e7d3      	b.n	8018d6c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x53c>
 8018dc4:	42b9      	cmp	r1, r7
 8018dc6:	d1f9      	bne.n	8018dbc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 8018dc8:	f9bd 102c 	ldrsh.w	r1, [sp, #44]	; 0x2c
 8018dcc:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	; 0xa8
 8018dd0:	4299      	cmp	r1, r3
 8018dd2:	d1f3      	bne.n	8018dbc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 8018dd4:	f8b4 30aa 	ldrh.w	r3, [r4, #170]	; 0xaa
 8018dd8:	f8bd 102e 	ldrh.w	r1, [sp, #46]	; 0x2e
 8018ddc:	181f      	adds	r7, r3, r0
 8018dde:	b23f      	sxth	r7, r7
 8018de0:	42ba      	cmp	r2, r7
 8018de2:	d105      	bne.n	8018df0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5c0>
 8018de4:	f8ad 002a 	strh.w	r0, [sp, #42]	; 0x2a
 8018de8:	440b      	add	r3, r1
 8018dea:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 8018dee:	e7dc      	b.n	8018daa <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x57a>
 8018df0:	440a      	add	r2, r1
 8018df2:	b212      	sxth	r2, r2
 8018df4:	4290      	cmp	r0, r2
 8018df6:	d1e1      	bne.n	8018dbc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 8018df8:	e7f6      	b.n	8018de8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5b8>
 8018dfa:	f8bb 60ec 	ldrh.w	r6, [fp, #236]	; 0xec
 8018dfe:	2e07      	cmp	r6, #7
 8018e00:	ea4f 04c6 	mov.w	r4, r6, lsl #3
 8018e04:	d812      	bhi.n	8018e2c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5fc>
 8018e06:	1c75      	adds	r5, r6, #1
 8018e08:	f8ab 50ec 	strh.w	r5, [fp, #236]	; 0xec
 8018e0c:	9d01      	ldr	r5, [sp, #4]
 8018e0e:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	; 0x28
 8018e12:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	; 0x2a
 8018e16:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
 8018e1a:	f9bd 302e 	ldrsh.w	r3, [sp, #46]	; 0x2e
 8018e1e:	f825 0036 	strh.w	r0, [r5, r6, lsl #3]
 8018e22:	442c      	add	r4, r5
 8018e24:	8061      	strh	r1, [r4, #2]
 8018e26:	80a2      	strh	r2, [r4, #4]
 8018e28:	80e3      	strh	r3, [r4, #6]
 8018e2a:	e581      	b.n	8018930 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 8018e2c:	f10b 03ac 	add.w	r3, fp, #172	; 0xac
 8018e30:	3e01      	subs	r6, #1
 8018e32:	445c      	add	r4, fp
 8018e34:	f06f 4a00 	mvn.w	sl, #2147483648	; 0x80000000
 8018e38:	f04f 37ff 	mov.w	r7, #4294967295
 8018e3c:	2500      	movs	r5, #0
 8018e3e:	9305      	str	r3, [sp, #20]
 8018e40:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	; 0xa8
 8018e44:	9302      	str	r3, [sp, #8]
 8018e46:	1e72      	subs	r2, r6, #1
 8018e48:	f9b4 30aa 	ldrsh.w	r3, [r4, #170]	; 0xaa
 8018e4c:	9304      	str	r3, [sp, #16]
 8018e4e:	4691      	mov	r9, r2
 8018e50:	f104 03a4 	add.w	r3, r4, #164	; 0xa4
 8018e54:	f1b9 3fff 	cmp.w	r9, #4294967295
 8018e58:	bf14      	ite	ne
 8018e5a:	9905      	ldrne	r1, [sp, #20]
 8018e5c:	f8dd e00c 	ldreq.w	lr, [sp, #12]
 8018e60:	6818      	ldr	r0, [r3, #0]
 8018e62:	9207      	str	r2, [sp, #28]
 8018e64:	bf18      	it	ne
 8018e66:	eb01 0ec9 	addne.w	lr, r1, r9, lsl #3
 8018e6a:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 8018e6e:	f8be 1006 	ldrh.w	r1, [lr, #6]
 8018e72:	f8be 8004 	ldrh.w	r8, [lr, #4]
 8018e76:	9306      	str	r3, [sp, #24]
 8018e78:	fb18 f801 	smulbb	r8, r8, r1
 8018e7c:	6859      	ldr	r1, [r3, #4]
 8018e7e:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 8018e82:	4671      	mov	r1, lr
 8018e84:	a80c      	add	r0, sp, #48	; 0x30
 8018e86:	f7ff fb23 	bl	80184d0 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 8018e8a:	f8bd 1036 	ldrh.w	r1, [sp, #54]	; 0x36
 8018e8e:	f8bd 0034 	ldrh.w	r0, [sp, #52]	; 0x34
 8018e92:	9b04      	ldr	r3, [sp, #16]
 8018e94:	9a02      	ldr	r2, [sp, #8]
 8018e96:	fb10 f001 	smulbb	r0, r0, r1
 8018e9a:	fb02 8803 	mla	r8, r2, r3, r8
 8018e9e:	eba0 0108 	sub.w	r1, r0, r8
 8018ea2:	f04f 0c08 	mov.w	ip, #8
 8018ea6:	fb90 f0fc 	sdiv	r0, r0, ip
 8018eaa:	4288      	cmp	r0, r1
 8018eac:	dc20      	bgt.n	8018ef0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c0>
 8018eae:	4551      	cmp	r1, sl
 8018eb0:	e9dd 3206 	ldrd	r3, r2, [sp, #24]
 8018eb4:	da03      	bge.n	8018ebe <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x68e>
 8018eb6:	b1d9      	cbz	r1, 8018ef0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c0>
 8018eb8:	468a      	mov	sl, r1
 8018eba:	464f      	mov	r7, r9
 8018ebc:	4635      	mov	r5, r6
 8018ebe:	f109 39ff 	add.w	r9, r9, #4294967295
 8018ec2:	f119 0f02 	cmn.w	r9, #2
 8018ec6:	d1c5      	bne.n	8018e54 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x624>
 8018ec8:	4616      	mov	r6, r2
 8018eca:	3201      	adds	r2, #1
 8018ecc:	f1a4 0408 	sub.w	r4, r4, #8
 8018ed0:	d1b6      	bne.n	8018e40 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x610>
 8018ed2:	9b01      	ldr	r3, [sp, #4]
 8018ed4:	b2ac      	uxth	r4, r5
 8018ed6:	00ed      	lsls	r5, r5, #3
 8018ed8:	1958      	adds	r0, r3, r5
 8018eda:	1c7b      	adds	r3, r7, #1
 8018edc:	d10b      	bne.n	8018ef6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c6>
 8018ede:	4601      	mov	r1, r0
 8018ee0:	9803      	ldr	r0, [sp, #12]
 8018ee2:	f7ff faf5 	bl	80184d0 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 8018ee6:	4621      	mov	r1, r4
 8018ee8:	9801      	ldr	r0, [sp, #4]
 8018eea:	f7ff fc8d 	bl	8018808 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8018eee:	e4b5      	b.n	801885c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8018ef0:	464f      	mov	r7, r9
 8018ef2:	4635      	mov	r5, r6
 8018ef4:	e7ed      	b.n	8018ed2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6a2>
 8018ef6:	9b01      	ldr	r3, [sp, #4]
 8018ef8:	00ff      	lsls	r7, r7, #3
 8018efa:	19d9      	adds	r1, r3, r7
 8018efc:	f7ff fae8 	bl	80184d0 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 8018f00:	9b03      	ldr	r3, [sp, #12]
 8018f02:	cb03      	ldmia	r3!, {r0, r1}
 8018f04:	445f      	add	r7, fp
 8018f06:	445d      	add	r5, fp
 8018f08:	f8c7 00ac 	str.w	r0, [r7, #172]	; 0xac
 8018f0c:	f8c7 10b0 	str.w	r1, [r7, #176]	; 0xb0
 8018f10:	f855 0fac 	ldr.w	r0, [r5, #172]!
 8018f14:	9b03      	ldr	r3, [sp, #12]
 8018f16:	6869      	ldr	r1, [r5, #4]
 8018f18:	c303      	stmia	r3!, {r0, r1}
 8018f1a:	e7e4      	b.n	8018ee6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6b6>

08018f1c <_ZN8touchgfx11Application15drawCachedAreasEv>:
 8018f1c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018f20:	f500 7698 	add.w	r6, r0, #304	; 0x130
 8018f24:	b09b      	sub	sp, #108	; 0x6c
 8018f26:	4604      	mov	r4, r0
 8018f28:	4630      	mov	r0, r6
 8018f2a:	f7f9 fcf6 	bl	801291a <_ZNK8touchgfx4Rect7isEmptyEv>
 8018f2e:	4605      	mov	r5, r0
 8018f30:	b948      	cbnz	r0, 8018f46 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2a>
 8018f32:	6823      	ldr	r3, [r4, #0]
 8018f34:	e896 0006 	ldmia.w	r6, {r1, r2}
 8018f38:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8018f3a:	4620      	mov	r0, r4
 8018f3c:	4798      	blx	r3
 8018f3e:	f8c4 5130 	str.w	r5, [r4, #304]	; 0x130
 8018f42:	f8c4 5134 	str.w	r5, [r4, #308]	; 0x134
 8018f46:	4bc6      	ldr	r3, [pc, #792]	; (8019260 <_ZN8touchgfx11Application15drawCachedAreasEv+0x344>)
 8018f48:	681b      	ldr	r3, [r3, #0]
 8018f4a:	2b00      	cmp	r3, #0
 8018f4c:	d03f      	beq.n	8018fce <_ZN8touchgfx11Application15drawCachedAreasEv+0xb2>
 8018f4e:	4dc5      	ldr	r5, [pc, #788]	; (8019264 <_ZN8touchgfx11Application15drawCachedAreasEv+0x348>)
 8018f50:	4628      	mov	r0, r5
 8018f52:	f7f9 fce2 	bl	801291a <_ZNK8touchgfx4Rect7isEmptyEv>
 8018f56:	4606      	mov	r6, r0
 8018f58:	2800      	cmp	r0, #0
 8018f5a:	d138      	bne.n	8018fce <_ZN8touchgfx11Application15drawCachedAreasEv+0xb2>
 8018f5c:	4628      	mov	r0, r5
 8018f5e:	f7ff f955 	bl	801820c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 8018f62:	6823      	ldr	r3, [r4, #0]
 8018f64:	6829      	ldr	r1, [r5, #0]
 8018f66:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8018f68:	686a      	ldr	r2, [r5, #4]
 8018f6a:	4620      	mov	r0, r4
 8018f6c:	4798      	blx	r3
 8018f6e:	802e      	strh	r6, [r5, #0]
 8018f70:	806e      	strh	r6, [r5, #2]
 8018f72:	80ae      	strh	r6, [r5, #4]
 8018f74:	80ee      	strh	r6, [r5, #6]
 8018f76:	f10d 0824 	add.w	r8, sp, #36	; 0x24
 8018f7a:	4dbb      	ldr	r5, [pc, #748]	; (8019268 <_ZN8touchgfx11Application15drawCachedAreasEv+0x34c>)
 8018f7c:	4640      	mov	r0, r8
 8018f7e:	f7ff fbeb 	bl	8018758 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 8018f82:	882e      	ldrh	r6, [r5, #0]
 8018f84:	f8b4 70ec 	ldrh.w	r7, [r4, #236]	; 0xec
 8018f88:	4633      	mov	r3, r6
 8018f8a:	f104 00ac 	add.w	r0, r4, #172	; 0xac
 8018f8e:	42bb      	cmp	r3, r7
 8018f90:	d224      	bcs.n	8018fdc <_ZN8touchgfx11Application15drawCachedAreasEv+0xc0>
 8018f92:	f8bd 1064 	ldrh.w	r1, [sp, #100]	; 0x64
 8018f96:	2907      	cmp	r1, #7
 8018f98:	d816      	bhi.n	8018fc8 <_ZN8touchgfx11Application15drawCachedAreasEv+0xac>
 8018f9a:	eb00 02c3 	add.w	r2, r0, r3, lsl #3
 8018f9e:	f930 9033 	ldrsh.w	r9, [r0, r3, lsl #3]
 8018fa2:	f9b2 a002 	ldrsh.w	sl, [r2, #2]
 8018fa6:	f9b2 e004 	ldrsh.w	lr, [r2, #4]
 8018faa:	f9b2 c006 	ldrsh.w	ip, [r2, #6]
 8018fae:	1c4a      	adds	r2, r1, #1
 8018fb0:	f8ad 2064 	strh.w	r2, [sp, #100]	; 0x64
 8018fb4:	eb08 02c1 	add.w	r2, r8, r1, lsl #3
 8018fb8:	f828 9031 	strh.w	r9, [r8, r1, lsl #3]
 8018fbc:	f8a2 a002 	strh.w	sl, [r2, #2]
 8018fc0:	f8a2 e004 	strh.w	lr, [r2, #4]
 8018fc4:	f8a2 c006 	strh.w	ip, [r2, #6]
 8018fc8:	3301      	adds	r3, #1
 8018fca:	b29b      	uxth	r3, r3
 8018fcc:	e7df      	b.n	8018f8e <_ZN8touchgfx11Application15drawCachedAreasEv+0x72>
 8018fce:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	; 0xec
 8018fd2:	2b00      	cmp	r3, #0
 8018fd4:	d1cf      	bne.n	8018f76 <_ZN8touchgfx11Application15drawCachedAreasEv+0x5a>
 8018fd6:	b01b      	add	sp, #108	; 0x6c
 8018fd8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018fdc:	f8b4 312e 	ldrh.w	r3, [r4, #302]	; 0x12e
 8018fe0:	42b3      	cmp	r3, r6
 8018fe2:	d90c      	bls.n	8018ffe <_ZN8touchgfx11Application15drawCachedAreasEv+0xe2>
 8018fe4:	eb04 03c6 	add.w	r3, r4, r6, lsl #3
 8018fe8:	6822      	ldr	r2, [r4, #0]
 8018fea:	f8d3 10ee 	ldr.w	r1, [r3, #238]	; 0xee
 8018fee:	6c17      	ldr	r7, [r2, #64]	; 0x40
 8018ff0:	f8d3 20f2 	ldr.w	r2, [r3, #242]	; 0xf2
 8018ff4:	4620      	mov	r0, r4
 8018ff6:	3601      	adds	r6, #1
 8018ff8:	47b8      	blx	r7
 8018ffa:	b2b6      	uxth	r6, r6
 8018ffc:	e7ee      	b.n	8018fdc <_ZN8touchgfx11Application15drawCachedAreasEv+0xc0>
 8018ffe:	4a9b      	ldr	r2, [pc, #620]	; (801926c <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>)
 8019000:	6813      	ldr	r3, [r2, #0]
 8019002:	f893 3048 	ldrb.w	r3, [r3, #72]	; 0x48
 8019006:	2b01      	cmp	r3, #1
 8019008:	4691      	mov	r9, r2
 801900a:	f040 80e2 	bne.w	80191d2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2b6>
 801900e:	8829      	ldrh	r1, [r5, #0]
 8019010:	f8b4 70ec 	ldrh.w	r7, [r4, #236]	; 0xec
 8019014:	eb04 03c1 	add.w	r3, r4, r1, lsl #3
 8019018:	33ae      	adds	r3, #174	; 0xae
 801901a:	2600      	movs	r6, #0
 801901c:	428f      	cmp	r7, r1
 801901e:	f103 0308 	add.w	r3, r3, #8
 8019022:	dd0a      	ble.n	801903a <_ZN8touchgfx11Application15drawCachedAreasEv+0x11e>
 8019024:	f833 2c04 	ldrh.w	r2, [r3, #-4]
 8019028:	f833 0c08 	ldrh.w	r0, [r3, #-8]
 801902c:	4402      	add	r2, r0
 801902e:	b212      	sxth	r2, r2
 8019030:	4296      	cmp	r6, r2
 8019032:	bfb8      	it	lt
 8019034:	4616      	movlt	r6, r2
 8019036:	3101      	adds	r1, #1
 8019038:	e7f0      	b.n	801901c <_ZN8touchgfx11Application15drawCachedAreasEv+0x100>
 801903a:	4b8d      	ldr	r3, [pc, #564]	; (8019270 <_ZN8touchgfx11Application15drawCachedAreasEv+0x354>)
 801903c:	f8df 922c 	ldr.w	r9, [pc, #556]	; 801926c <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>
 8019040:	881b      	ldrh	r3, [r3, #0]
 8019042:	2b0f      	cmp	r3, #15
 8019044:	bf88      	it	hi
 8019046:	ea4f 0bd3 	movhi.w	fp, r3, lsr #3
 801904a:	f04f 0300 	mov.w	r3, #0
 801904e:	e9cd 3305 	strd	r3, r3, [sp, #20]
 8019052:	bf98      	it	ls
 8019054:	f04f 0b01 	movls.w	fp, #1
 8019058:	f8bd 7016 	ldrh.w	r7, [sp, #22]
 801905c:	f8bd 001a 	ldrh.w	r0, [sp, #26]
 8019060:	4b82      	ldr	r3, [pc, #520]	; (801926c <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>)
 8019062:	4438      	add	r0, r7
 8019064:	b207      	sxth	r7, r0
 8019066:	6818      	ldr	r0, [r3, #0]
 8019068:	42b7      	cmp	r7, r6
 801906a:	6803      	ldr	r3, [r0, #0]
 801906c:	f280 8083 	bge.w	8019176 <_ZN8touchgfx11Application15drawCachedAreasEv+0x25a>
 8019070:	f8d3 309c 	ldr.w	r3, [r3, #156]	; 0x9c
 8019074:	4798      	blx	r3
 8019076:	eb07 030b 	add.w	r3, r7, fp
 801907a:	4298      	cmp	r0, r3
 801907c:	da07      	bge.n	801908e <_ZN8touchgfx11Application15drawCachedAreasEv+0x172>
 801907e:	42b0      	cmp	r0, r6
 8019080:	da05      	bge.n	801908e <_ZN8touchgfx11Application15drawCachedAreasEv+0x172>
 8019082:	4287      	cmp	r7, r0
 8019084:	dd6c      	ble.n	8019160 <_ZN8touchgfx11Application15drawCachedAreasEv+0x244>
 8019086:	2f00      	cmp	r7, #0
 8019088:	dd6a      	ble.n	8019160 <_ZN8touchgfx11Application15drawCachedAreasEv+0x244>
 801908a:	4630      	mov	r0, r6
 801908c:	e004      	b.n	8019098 <_ZN8touchgfx11Application15drawCachedAreasEv+0x17c>
 801908e:	4287      	cmp	r7, r0
 8019090:	dcfb      	bgt.n	801908a <_ZN8touchgfx11Application15drawCachedAreasEv+0x16e>
 8019092:	42b0      	cmp	r0, r6
 8019094:	bfa8      	it	ge
 8019096:	4630      	movge	r0, r6
 8019098:	4b76      	ldr	r3, [pc, #472]	; (8019274 <_ZN8touchgfx11Application15drawCachedAreasEv+0x358>)
 801909a:	f8ad 7016 	strh.w	r7, [sp, #22]
 801909e:	1bc0      	subs	r0, r0, r7
 80190a0:	f9b3 3000 	ldrsh.w	r3, [r3]
 80190a4:	882f      	ldrh	r7, [r5, #0]
 80190a6:	f8ad 3018 	strh.w	r3, [sp, #24]
 80190aa:	2200      	movs	r2, #0
 80190ac:	f8ad 2014 	strh.w	r2, [sp, #20]
 80190b0:	f8ad 001a 	strh.w	r0, [sp, #26]
 80190b4:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	; 0xec
 80190b8:	42bb      	cmp	r3, r7
 80190ba:	d9cd      	bls.n	8019058 <_ZN8touchgfx11Application15drawCachedAreasEv+0x13c>
 80190bc:	eb04 02c7 	add.w	r2, r4, r7, lsl #3
 80190c0:	ab07      	add	r3, sp, #28
 80190c2:	f852 0fac 	ldr.w	r0, [r2, #172]!
 80190c6:	6851      	ldr	r1, [r2, #4]
 80190c8:	c303      	stmia	r3!, {r0, r1}
 80190ca:	a905      	add	r1, sp, #20
 80190cc:	a807      	add	r0, sp, #28
 80190ce:	f7ff f967 	bl	80183a0 <_ZNK8touchgfx4Rect9intersectERKS0_>
 80190d2:	2800      	cmp	r0, #0
 80190d4:	d04c      	beq.n	8019170 <_ZN8touchgfx11Application15drawCachedAreasEv+0x254>
 80190d6:	f9bd 001c 	ldrsh.w	r0, [sp, #28]
 80190da:	f9bd 2014 	ldrsh.w	r2, [sp, #20]
 80190de:	f8bd a020 	ldrh.w	sl, [sp, #32]
 80190e2:	f9bd 101e 	ldrsh.w	r1, [sp, #30]
 80190e6:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 80190ea:	9302      	str	r3, [sp, #8]
 80190ec:	4686      	mov	lr, r0
 80190ee:	4290      	cmp	r0, r2
 80190f0:	4450      	add	r0, sl
 80190f2:	f8bd a018 	ldrh.w	sl, [sp, #24]
 80190f6:	bfb8      	it	lt
 80190f8:	4696      	movlt	lr, r2
 80190fa:	4452      	add	r2, sl
 80190fc:	4299      	cmp	r1, r3
 80190fe:	b280      	uxth	r0, r0
 8019100:	b292      	uxth	r2, r2
 8019102:	468c      	mov	ip, r1
 8019104:	fa0f fa82 	sxth.w	sl, r2
 8019108:	bfb8      	it	lt
 801910a:	469c      	movlt	ip, r3
 801910c:	b203      	sxth	r3, r0
 801910e:	4553      	cmp	r3, sl
 8019110:	bfb8      	it	lt
 8019112:	4602      	movlt	r2, r0
 8019114:	eba2 020e 	sub.w	r2, r2, lr
 8019118:	f8ad 2020 	strh.w	r2, [sp, #32]
 801911c:	f8bd 2022 	ldrh.w	r2, [sp, #34]	; 0x22
 8019120:	9b02      	ldr	r3, [sp, #8]
 8019122:	f8ad e01c 	strh.w	lr, [sp, #28]
 8019126:	4411      	add	r1, r2
 8019128:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 801912c:	f8ad c01e 	strh.w	ip, [sp, #30]
 8019130:	4413      	add	r3, r2
 8019132:	b289      	uxth	r1, r1
 8019134:	b29b      	uxth	r3, r3
 8019136:	b208      	sxth	r0, r1
 8019138:	b21a      	sxth	r2, r3
 801913a:	4290      	cmp	r0, r2
 801913c:	bfb8      	it	lt
 801913e:	460b      	movlt	r3, r1
 8019140:	eba3 030c 	sub.w	r3, r3, ip
 8019144:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 8019148:	a807      	add	r0, sp, #28
 801914a:	f7f9 fbe6 	bl	801291a <_ZNK8touchgfx4Rect7isEmptyEv>
 801914e:	b920      	cbnz	r0, 801915a <_ZN8touchgfx11Application15drawCachedAreasEv+0x23e>
 8019150:	6823      	ldr	r3, [r4, #0]
 8019152:	a907      	add	r1, sp, #28
 8019154:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8019156:	4620      	mov	r0, r4
 8019158:	4798      	blx	r3
 801915a:	3701      	adds	r7, #1
 801915c:	b2bf      	uxth	r7, r7
 801915e:	e7a9      	b.n	80190b4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x198>
 8019160:	f8d9 0000 	ldr.w	r0, [r9]
 8019164:	6803      	ldr	r3, [r0, #0]
 8019166:	2101      	movs	r1, #1
 8019168:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
 801916c:	4798      	blx	r3
 801916e:	e773      	b.n	8019058 <_ZN8touchgfx11Application15drawCachedAreasEv+0x13c>
 8019170:	e9cd 0007 	strd	r0, r0, [sp, #28]
 8019174:	e7e8      	b.n	8019148 <_ZN8touchgfx11Application15drawCachedAreasEv+0x22c>
 8019176:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8019178:	4798      	blx	r3
 801917a:	4b3f      	ldr	r3, [pc, #252]	; (8019278 <_ZN8touchgfx11Application15drawCachedAreasEv+0x35c>)
 801917c:	781b      	ldrb	r3, [r3, #0]
 801917e:	2b00      	cmp	r3, #0
 8019180:	f43f af29 	beq.w	8018fd6 <_ZN8touchgfx11Application15drawCachedAreasEv+0xba>
 8019184:	2300      	movs	r3, #0
 8019186:	f8a4 312e 	strh.w	r3, [r4, #302]	; 0x12e
 801918a:	882b      	ldrh	r3, [r5, #0]
 801918c:	f8bd 5064 	ldrh.w	r5, [sp, #100]	; 0x64
 8019190:	f104 00ee 	add.w	r0, r4, #238	; 0xee
 8019194:	42ab      	cmp	r3, r5
 8019196:	f4bf af1e 	bcs.w	8018fd6 <_ZN8touchgfx11Application15drawCachedAreasEv+0xba>
 801919a:	f8b4 112e 	ldrh.w	r1, [r4, #302]	; 0x12e
 801919e:	2907      	cmp	r1, #7
 80191a0:	d814      	bhi.n	80191cc <_ZN8touchgfx11Application15drawCachedAreasEv+0x2b0>
 80191a2:	eb08 02c3 	add.w	r2, r8, r3, lsl #3
 80191a6:	f938 e033 	ldrsh.w	lr, [r8, r3, lsl #3]
 80191aa:	f9b2 c002 	ldrsh.w	ip, [r2, #2]
 80191ae:	f9b2 7004 	ldrsh.w	r7, [r2, #4]
 80191b2:	f9b2 6006 	ldrsh.w	r6, [r2, #6]
 80191b6:	1c4a      	adds	r2, r1, #1
 80191b8:	f8a4 212e 	strh.w	r2, [r4, #302]	; 0x12e
 80191bc:	eb00 02c1 	add.w	r2, r0, r1, lsl #3
 80191c0:	f820 e031 	strh.w	lr, [r0, r1, lsl #3]
 80191c4:	f8a2 c002 	strh.w	ip, [r2, #2]
 80191c8:	8097      	strh	r7, [r2, #4]
 80191ca:	80d6      	strh	r6, [r2, #6]
 80191cc:	3301      	adds	r3, #1
 80191ce:	b29b      	uxth	r3, r3
 80191d0:	e7e0      	b.n	8019194 <_ZN8touchgfx11Application15drawCachedAreasEv+0x278>
 80191d2:	2b02      	cmp	r3, #2
 80191d4:	f040 8133 	bne.w	801943e <_ZN8touchgfx11Application15drawCachedAreasEv+0x522>
 80191d8:	4b28      	ldr	r3, [pc, #160]	; (801927c <_ZN8touchgfx11Application15drawCachedAreasEv+0x360>)
 80191da:	781b      	ldrb	r3, [r3, #0]
 80191dc:	2b01      	cmp	r3, #1
 80191de:	f104 0aac 	add.w	sl, r4, #172	; 0xac
 80191e2:	f000 8098 	beq.w	8019316 <_ZN8touchgfx11Application15drawCachedAreasEv+0x3fa>
 80191e6:	882a      	ldrh	r2, [r5, #0]
 80191e8:	f8b4 10ec 	ldrh.w	r1, [r4, #236]	; 0xec
 80191ec:	3201      	adds	r2, #1
 80191ee:	b292      	uxth	r2, r2
 80191f0:	2900      	cmp	r1, #0
 80191f2:	d0c2      	beq.n	801917a <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 80191f4:	f8b4 60ae 	ldrh.w	r6, [r4, #174]	; 0xae
 80191f8:	f8b4 30b2 	ldrh.w	r3, [r4, #178]	; 0xb2
 80191fc:	441e      	add	r6, r3
 80191fe:	b236      	sxth	r6, r6
 8019200:	4694      	mov	ip, r2
 8019202:	f04f 0900 	mov.w	r9, #0
 8019206:	fa1f f38c 	uxth.w	r3, ip
 801920a:	4299      	cmp	r1, r3
 801920c:	ea4f 07c9 	mov.w	r7, r9, lsl #3
 8019210:	f240 80bf 	bls.w	8019392 <_ZN8touchgfx11Application15drawCachedAreasEv+0x476>
 8019214:	4427      	add	r7, r4
 8019216:	eb04 0ecc 	add.w	lr, r4, ip, lsl #3
 801921a:	f9b7 30ae 	ldrsh.w	r3, [r7, #174]	; 0xae
 801921e:	f9be 00ae 	ldrsh.w	r0, [lr, #174]	; 0xae
 8019222:	4283      	cmp	r3, r0
 8019224:	f340 80a1 	ble.w	801936a <_ZN8touchgfx11Application15drawCachedAreasEv+0x44e>
 8019228:	f8be 60b2 	ldrh.w	r6, [lr, #178]	; 0xb2
 801922c:	4406      	add	r6, r0
 801922e:	b236      	sxth	r6, r6
 8019230:	429e      	cmp	r6, r3
 8019232:	bfa8      	it	ge
 8019234:	461e      	movge	r6, r3
 8019236:	46e1      	mov	r9, ip
 8019238:	f10c 0c01 	add.w	ip, ip, #1
 801923c:	e7e3      	b.n	8019206 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ea>
 801923e:	d10a      	bne.n	8019256 <_ZN8touchgfx11Application15drawCachedAreasEv+0x33a>
 8019240:	f9b6 00b2 	ldrsh.w	r0, [r6, #178]	; 0xb2
 8019244:	f9be 10b2 	ldrsh.w	r1, [lr, #178]	; 0xb2
 8019248:	4562      	cmp	r2, ip
 801924a:	bfb8      	it	lt
 801924c:	4662      	movlt	r2, ip
 801924e:	4288      	cmp	r0, r1
 8019250:	bfb8      	it	lt
 8019252:	461f      	movlt	r7, r3
 8019254:	e087      	b.n	8019366 <_ZN8touchgfx11Application15drawCachedAreasEv+0x44a>
 8019256:	428a      	cmp	r2, r1
 8019258:	bfb8      	it	lt
 801925a:	460a      	movlt	r2, r1
 801925c:	e083      	b.n	8019366 <_ZN8touchgfx11Application15drawCachedAreasEv+0x44a>
 801925e:	bf00      	nop
 8019260:	20006c74 	.word	0x20006c74
 8019264:	20006c80 	.word	0x20006c80
 8019268:	2000010e 	.word	0x2000010e
 801926c:	20006c34 	.word	0x20006c34
 8019270:	20006c2a 	.word	0x20006c2a
 8019274:	20006c28 	.word	0x20006c28
 8019278:	20006c32 	.word	0x20006c32
 801927c:	20006c2c 	.word	0x20006c2c
 8019280:	19a1      	adds	r1, r4, r6
 8019282:	ab07      	add	r3, sp, #28
 8019284:	f851 0fac 	ldr.w	r0, [r1, #172]!
 8019288:	6849      	ldr	r1, [r1, #4]
 801928a:	c303      	stmia	r3!, {r0, r1}
 801928c:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 8019290:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 8019294:	2b13      	cmp	r3, #19
 8019296:	bfd8      	it	le
 8019298:	f9bd 201c 	ldrshle.w	r2, [sp, #28]
 801929c:	f8ad 201c 	strh.w	r2, [sp, #28]
 80192a0:	440b      	add	r3, r1
 80192a2:	1a9b      	subs	r3, r3, r2
 80192a4:	a807      	add	r0, sp, #28
 80192a6:	f8ad 3020 	strh.w	r3, [sp, #32]
 80192aa:	f7fe ffc9 	bl	8018240 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80192ae:	a807      	add	r0, sp, #28
 80192b0:	f7f9 fb33 	bl	801291a <_ZNK8touchgfx4Rect7isEmptyEv>
 80192b4:	bb78      	cbnz	r0, 8019316 <_ZN8touchgfx11Application15drawCachedAreasEv+0x3fa>
 80192b6:	f9bd c022 	ldrsh.w	ip, [sp, #34]	; 0x22
 80192ba:	f8d9 0000 	ldr.w	r0, [r9]
 80192be:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 80192c2:	f8d0 e000 	ldr.w	lr, [r0]
 80192c6:	f8bd 201e 	ldrh.w	r2, [sp, #30]
 80192ca:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 80192ce:	f1bc 0f14 	cmp.w	ip, #20
 80192d2:	bfa8      	it	ge
 80192d4:	f04f 0c14 	movge.w	ip, #20
 80192d8:	fa1f fc8c 	uxth.w	ip, ip
 80192dc:	f8cd c000 	str.w	ip, [sp]
 80192e0:	f8de b090 	ldr.w	fp, [lr, #144]	; 0x90
 80192e4:	47d8      	blx	fp
 80192e6:	4683      	mov	fp, r0
 80192e8:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 80192ec:	a807      	add	r0, sp, #28
 80192ee:	f7fe ff8d 	bl	801820c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 80192f2:	6823      	ldr	r3, [r4, #0]
 80192f4:	4426      	add	r6, r4
 80192f6:	4620      	mov	r0, r4
 80192f8:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 80192fa:	a907      	add	r1, sp, #28
 80192fc:	4798      	blx	r3
 80192fe:	f8b6 00b0 	ldrh.w	r0, [r6, #176]	; 0xb0
 8019302:	eba0 000b 	sub.w	r0, r0, fp
 8019306:	b200      	sxth	r0, r0
 8019308:	f8a6 00b0 	strh.w	r0, [r6, #176]	; 0xb0
 801930c:	b918      	cbnz	r0, 8019316 <_ZN8touchgfx11Application15drawCachedAreasEv+0x3fa>
 801930e:	b2b9      	uxth	r1, r7
 8019310:	4650      	mov	r0, sl
 8019312:	f7ff fa79 	bl	8018808 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8019316:	f8b4 b0ec 	ldrh.w	fp, [r4, #236]	; 0xec
 801931a:	f1bb 0f00 	cmp.w	fp, #0
 801931e:	f43f af2c 	beq.w	801917a <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 8019322:	882b      	ldrh	r3, [r5, #0]
 8019324:	f9b4 20ac 	ldrsh.w	r2, [r4, #172]	; 0xac
 8019328:	3301      	adds	r3, #1
 801932a:	b29b      	uxth	r3, r3
 801932c:	2700      	movs	r7, #0
 801932e:	b299      	uxth	r1, r3
 8019330:	458b      	cmp	fp, r1
 8019332:	ea4f 06c7 	mov.w	r6, r7, lsl #3
 8019336:	d9a3      	bls.n	8019280 <_ZN8touchgfx11Application15drawCachedAreasEv+0x364>
 8019338:	4426      	add	r6, r4
 801933a:	eb04 0ec3 	add.w	lr, r4, r3, lsl #3
 801933e:	f8b6 10ac 	ldrh.w	r1, [r6, #172]	; 0xac
 8019342:	f8b6 00b0 	ldrh.w	r0, [r6, #176]	; 0xb0
 8019346:	f9be c0ac 	ldrsh.w	ip, [lr, #172]	; 0xac
 801934a:	4408      	add	r0, r1
 801934c:	f8be 10b0 	ldrh.w	r1, [lr, #176]	; 0xb0
 8019350:	4461      	add	r1, ip
 8019352:	b200      	sxth	r0, r0
 8019354:	b209      	sxth	r1, r1
 8019356:	4288      	cmp	r0, r1
 8019358:	f6bf af71 	bge.w	801923e <_ZN8touchgfx11Application15drawCachedAreasEv+0x322>
 801935c:	4584      	cmp	ip, r0
 801935e:	4662      	mov	r2, ip
 8019360:	461f      	mov	r7, r3
 8019362:	bfb8      	it	lt
 8019364:	4602      	movlt	r2, r0
 8019366:	3301      	adds	r3, #1
 8019368:	e7e1      	b.n	801932e <_ZN8touchgfx11Application15drawCachedAreasEv+0x412>
 801936a:	d10e      	bne.n	801938a <_ZN8touchgfx11Application15drawCachedAreasEv+0x46e>
 801936c:	f9be 00b0 	ldrsh.w	r0, [lr, #176]	; 0xb0
 8019370:	f8be e0b2 	ldrh.w	lr, [lr, #178]	; 0xb2
 8019374:	f9b7 70b0 	ldrsh.w	r7, [r7, #176]	; 0xb0
 8019378:	4473      	add	r3, lr
 801937a:	b21b      	sxth	r3, r3
 801937c:	429e      	cmp	r6, r3
 801937e:	bfa8      	it	ge
 8019380:	461e      	movge	r6, r3
 8019382:	4287      	cmp	r7, r0
 8019384:	bfb8      	it	lt
 8019386:	46e1      	movlt	r9, ip
 8019388:	e756      	b.n	8019238 <_ZN8touchgfx11Application15drawCachedAreasEv+0x31c>
 801938a:	4286      	cmp	r6, r0
 801938c:	bfa8      	it	ge
 801938e:	4606      	movge	r6, r0
 8019390:	e752      	b.n	8019238 <_ZN8touchgfx11Application15drawCachedAreasEv+0x31c>
 8019392:	eb0a 0007 	add.w	r0, sl, r7
 8019396:	4427      	add	r7, r4
 8019398:	e9cd 2102 	strd	r2, r1, [sp, #8]
 801939c:	f9b7 b0b2 	ldrsh.w	fp, [r7, #178]	; 0xb2
 80193a0:	f1bb 0f13 	cmp.w	fp, #19
 80193a4:	bfde      	ittt	le
 80193a6:	f8b7 60ae 	ldrhle.w	r6, [r7, #174]	; 0xae
 80193aa:	445e      	addle	r6, fp
 80193ac:	b236      	sxthle	r6, r6
 80193ae:	f7f9 fab4 	bl	801291a <_ZNK8touchgfx4Rect7isEmptyEv>
 80193b2:	e9dd 2102 	ldrd	r2, r1, [sp, #8]
 80193b6:	2800      	cmp	r0, #0
 80193b8:	f47f af1a 	bne.w	80191f0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2d4>
 80193bc:	f9b7 20ae 	ldrsh.w	r2, [r7, #174]	; 0xae
 80193c0:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 80193c4:	482a      	ldr	r0, [pc, #168]	; (8019470 <_ZN8touchgfx11Application15drawCachedAreasEv+0x554>)
 80193c6:	f9b7 10ac 	ldrsh.w	r1, [r7, #172]	; 0xac
 80193ca:	f9b7 30b0 	ldrsh.w	r3, [r7, #176]	; 0xb0
 80193ce:	6800      	ldr	r0, [r0, #0]
 80193d0:	f8ad 101c 	strh.w	r1, [sp, #28]
 80193d4:	1ab6      	subs	r6, r6, r2
 80193d6:	2e14      	cmp	r6, #20
 80193d8:	f8ad 201e 	strh.w	r2, [sp, #30]
 80193dc:	f8ad 3020 	strh.w	r3, [sp, #32]
 80193e0:	bfa8      	it	ge
 80193e2:	2614      	movge	r6, #20
 80193e4:	f8d0 c000 	ldr.w	ip, [r0]
 80193e8:	b2b6      	uxth	r6, r6
 80193ea:	fa1f fb8b 	uxth.w	fp, fp
 80193ee:	455e      	cmp	r6, fp
 80193f0:	bf94      	ite	ls
 80193f2:	9600      	strls	r6, [sp, #0]
 80193f4:	f8cd b000 	strhi.w	fp, [sp]
 80193f8:	b292      	uxth	r2, r2
 80193fa:	f8dc 6090 	ldr.w	r6, [ip, #144]	; 0x90
 80193fe:	b29b      	uxth	r3, r3
 8019400:	b289      	uxth	r1, r1
 8019402:	47b0      	blx	r6
 8019404:	6823      	ldr	r3, [r4, #0]
 8019406:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 801940a:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 801940c:	a907      	add	r1, sp, #28
 801940e:	4620      	mov	r0, r4
 8019410:	4798      	blx	r3
 8019412:	f8bd 1022 	ldrh.w	r1, [sp, #34]	; 0x22
 8019416:	f8b7 30b2 	ldrh.w	r3, [r7, #178]	; 0xb2
 801941a:	f8b7 20ae 	ldrh.w	r2, [r7, #174]	; 0xae
 801941e:	1a5b      	subs	r3, r3, r1
 8019420:	440a      	add	r2, r1
 8019422:	b21b      	sxth	r3, r3
 8019424:	f8a7 20ae 	strh.w	r2, [r7, #174]	; 0xae
 8019428:	f8a7 30b2 	strh.w	r3, [r7, #178]	; 0xb2
 801942c:	2b00      	cmp	r3, #0
 801942e:	f47f aeda 	bne.w	80191e6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ca>
 8019432:	fa1f f189 	uxth.w	r1, r9
 8019436:	4650      	mov	r0, sl
 8019438:	f7ff f9e6 	bl	8018808 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 801943c:	e6d3      	b.n	80191e6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ca>
 801943e:	882e      	ldrh	r6, [r5, #0]
 8019440:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	; 0xec
 8019444:	42b3      	cmp	r3, r6
 8019446:	f67f ae98 	bls.w	801917a <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 801944a:	eb04 02c6 	add.w	r2, r4, r6, lsl #3
 801944e:	ab07      	add	r3, sp, #28
 8019450:	f852 0fac 	ldr.w	r0, [r2, #172]!
 8019454:	6851      	ldr	r1, [r2, #4]
 8019456:	c303      	stmia	r3!, {r0, r1}
 8019458:	a807      	add	r0, sp, #28
 801945a:	f7f9 fa5e 	bl	801291a <_ZNK8touchgfx4Rect7isEmptyEv>
 801945e:	b920      	cbnz	r0, 801946a <_ZN8touchgfx11Application15drawCachedAreasEv+0x54e>
 8019460:	6823      	ldr	r3, [r4, #0]
 8019462:	a907      	add	r1, sp, #28
 8019464:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8019466:	4620      	mov	r0, r4
 8019468:	4798      	blx	r3
 801946a:	3601      	adds	r6, #1
 801946c:	b2b6      	uxth	r6, r6
 801946e:	e7e7      	b.n	8019440 <_ZN8touchgfx11Application15drawCachedAreasEv+0x524>
 8019470:	20006c34 	.word	0x20006c34

08019474 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE>:
 8019474:	4b03      	ldr	r3, [pc, #12]	; (8019484 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE+0x10>)
 8019476:	2200      	movs	r2, #0
 8019478:	801a      	strh	r2, [r3, #0]
 801947a:	805a      	strh	r2, [r3, #2]
 801947c:	809a      	strh	r2, [r3, #4]
 801947e:	80da      	strh	r2, [r3, #6]
 8019480:	4770      	bx	lr
 8019482:	bf00      	nop
 8019484:	20006c80 	.word	0x20006c80

08019488 <_ZNK8touchgfx4Font17getStringWidthRTLEhPKtSt9__va_list>:
 8019488:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801948c:	4604      	mov	r4, r0
 801948e:	b09c      	sub	sp, #112	; 0x70
 8019490:	a803      	add	r0, sp, #12
 8019492:	4615      	mov	r5, r2
 8019494:	460e      	mov	r6, r1
 8019496:	461f      	mov	r7, r3
 8019498:	f000 fe49 	bl	801a12e <_ZN8touchgfx12TextProviderC1Ev>
 801949c:	6823      	ldr	r3, [r4, #0]
 801949e:	4620      	mov	r0, r4
 80194a0:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80194a2:	4798      	blx	r3
 80194a4:	6823      	ldr	r3, [r4, #0]
 80194a6:	4680      	mov	r8, r0
 80194a8:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 80194aa:	4620      	mov	r0, r4
 80194ac:	4798      	blx	r3
 80194ae:	4629      	mov	r1, r5
 80194b0:	9000      	str	r0, [sp, #0]
 80194b2:	4643      	mov	r3, r8
 80194b4:	463a      	mov	r2, r7
 80194b6:	a803      	add	r0, sp, #12
 80194b8:	f000 fe94 	bl	801a1e4 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 80194bc:	2500      	movs	r5, #0
 80194be:	a803      	add	r0, sp, #12
 80194c0:	f000 fe5c 	bl	801a17c <_ZN8touchgfx12TextProvider11endOfStringEv>
 80194c4:	b958      	cbnz	r0, 80194de <_ZNK8touchgfx4Font17getStringWidthRTLEhPKtSt9__va_list+0x56>
 80194c6:	4633      	mov	r3, r6
 80194c8:	f647 72ff 	movw	r2, #32767	; 0x7fff
 80194cc:	4621      	mov	r1, r4
 80194ce:	a803      	add	r0, sp, #12
 80194d0:	f7fd fccf 	bl	8016e72 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
 80194d4:	b203      	sxth	r3, r0
 80194d6:	42ab      	cmp	r3, r5
 80194d8:	bfc8      	it	gt
 80194da:	4605      	movgt	r5, r0
 80194dc:	e7ef      	b.n	80194be <_ZNK8touchgfx4Font17getStringWidthRTLEhPKtSt9__va_list+0x36>
 80194de:	4628      	mov	r0, r5
 80194e0:	b01c      	add	sp, #112	; 0x70
 80194e2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080194e6 <_ZNK8touchgfx4Font12getCharWidthEt>:
 80194e6:	b508      	push	{r3, lr}
 80194e8:	6803      	ldr	r3, [r0, #0]
 80194ea:	68db      	ldr	r3, [r3, #12]
 80194ec:	4798      	blx	r3
 80194ee:	b128      	cbz	r0, 80194fc <_ZNK8touchgfx4Font12getCharWidthEt+0x16>
 80194f0:	7b43      	ldrb	r3, [r0, #13]
 80194f2:	7a80      	ldrb	r0, [r0, #10]
 80194f4:	005b      	lsls	r3, r3, #1
 80194f6:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80194fa:	4318      	orrs	r0, r3
 80194fc:	bd08      	pop	{r3, pc}

080194fe <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz>:
 80194fe:	b40e      	push	{r1, r2, r3}
 8019500:	b5f0      	push	{r4, r5, r6, r7, lr}
 8019502:	b09e      	sub	sp, #120	; 0x78
 8019504:	ab23      	add	r3, sp, #140	; 0x8c
 8019506:	4605      	mov	r5, r0
 8019508:	f853 4b04 	ldr.w	r4, [r3], #4
 801950c:	9303      	str	r3, [sp, #12]
 801950e:	a805      	add	r0, sp, #20
 8019510:	f000 fe0d 	bl	801a12e <_ZN8touchgfx12TextProviderC1Ev>
 8019514:	682b      	ldr	r3, [r5, #0]
 8019516:	4628      	mov	r0, r5
 8019518:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 801951a:	4798      	blx	r3
 801951c:	682b      	ldr	r3, [r5, #0]
 801951e:	4606      	mov	r6, r0
 8019520:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8019522:	4628      	mov	r0, r5
 8019524:	4798      	blx	r3
 8019526:	4633      	mov	r3, r6
 8019528:	ae1e      	add	r6, sp, #120	; 0x78
 801952a:	4621      	mov	r1, r4
 801952c:	9000      	str	r0, [sp, #0]
 801952e:	9a03      	ldr	r2, [sp, #12]
 8019530:	2400      	movs	r4, #0
 8019532:	a805      	add	r0, sp, #20
 8019534:	f000 fe56 	bl	801a1e4 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8019538:	f846 4d68 	str.w	r4, [r6, #-104]!
 801953c:	462a      	mov	r2, r5
 801953e:	4633      	mov	r3, r6
 8019540:	4621      	mov	r1, r4
 8019542:	a805      	add	r0, sp, #20
 8019544:	f001 fdaa 	bl	801b09c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8019548:	b1f0      	cbz	r0, 8019588 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x8a>
 801954a:	280a      	cmp	r0, #10
 801954c:	d018      	beq.n	8019580 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x82>
 801954e:	9f04      	ldr	r7, [sp, #16]
 8019550:	b1b7      	cbz	r7, 8019580 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x82>
 8019552:	7b78      	ldrb	r0, [r7, #13]
 8019554:	7a3b      	ldrb	r3, [r7, #8]
 8019556:	88ea      	ldrh	r2, [r5, #6]
 8019558:	00c1      	lsls	r1, r0, #3
 801955a:	f401 7180 	and.w	r1, r1, #256	; 0x100
 801955e:	4319      	orrs	r1, r3
 8019560:	0643      	lsls	r3, r0, #25
 8019562:	bf44      	itt	mi
 8019564:	f5a1 7300 	submi.w	r3, r1, #512	; 0x200
 8019568:	b219      	sxthmi	r1, r3
 801956a:	0100      	lsls	r0, r0, #4
 801956c:	79fb      	ldrb	r3, [r7, #7]
 801956e:	f400 7080 	and.w	r0, r0, #256	; 0x100
 8019572:	4303      	orrs	r3, r0
 8019574:	4413      	add	r3, r2
 8019576:	1a5b      	subs	r3, r3, r1
 8019578:	b21b      	sxth	r3, r3
 801957a:	429c      	cmp	r4, r3
 801957c:	bfb8      	it	lt
 801957e:	461c      	movlt	r4, r3
 8019580:	4633      	mov	r3, r6
 8019582:	462a      	mov	r2, r5
 8019584:	2100      	movs	r1, #0
 8019586:	e7dc      	b.n	8019542 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x44>
 8019588:	b2a0      	uxth	r0, r4
 801958a:	b01e      	add	sp, #120	; 0x78
 801958c:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 8019590:	b003      	add	sp, #12
 8019592:	4770      	bx	lr

08019594 <_ZNK8touchgfx4Font20getMinimumTextHeightEv>:
 8019594:	7a43      	ldrb	r3, [r0, #9]
 8019596:	8880      	ldrh	r0, [r0, #4]
 8019598:	4418      	add	r0, r3
 801959a:	b280      	uxth	r0, r0
 801959c:	4770      	bx	lr

0801959e <_ZNK8touchgfx4Font13getFontHeightEv>:
 801959e:	6803      	ldr	r3, [r0, #0]
 80195a0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80195a2:	4718      	bx	r3

080195a4 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz>:
 80195a4:	b40e      	push	{r1, r2, r3}
 80195a6:	b570      	push	{r4, r5, r6, lr}
 80195a8:	b09d      	sub	sp, #116	; 0x74
 80195aa:	ab21      	add	r3, sp, #132	; 0x84
 80195ac:	4604      	mov	r4, r0
 80195ae:	f853 5b04 	ldr.w	r5, [r3], #4
 80195b2:	9302      	str	r3, [sp, #8]
 80195b4:	a803      	add	r0, sp, #12
 80195b6:	f000 fdba 	bl	801a12e <_ZN8touchgfx12TextProviderC1Ev>
 80195ba:	6823      	ldr	r3, [r4, #0]
 80195bc:	4620      	mov	r0, r4
 80195be:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80195c0:	4798      	blx	r3
 80195c2:	6823      	ldr	r3, [r4, #0]
 80195c4:	4606      	mov	r6, r0
 80195c6:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 80195c8:	4620      	mov	r0, r4
 80195ca:	4798      	blx	r3
 80195cc:	4633      	mov	r3, r6
 80195ce:	9000      	str	r0, [sp, #0]
 80195d0:	9a02      	ldr	r2, [sp, #8]
 80195d2:	4629      	mov	r1, r5
 80195d4:	a803      	add	r0, sp, #12
 80195d6:	f000 fe05 	bl	801a1e4 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 80195da:	a803      	add	r0, sp, #12
 80195dc:	f001 fe2c 	bl	801b238 <_ZN8touchgfx12TextProvider11getNextCharEv>
 80195e0:	2401      	movs	r4, #1
 80195e2:	b2a3      	uxth	r3, r4
 80195e4:	b140      	cbz	r0, 80195f8 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x54>
 80195e6:	280a      	cmp	r0, #10
 80195e8:	bf08      	it	eq
 80195ea:	3301      	addeq	r3, #1
 80195ec:	a803      	add	r0, sp, #12
 80195ee:	bf08      	it	eq
 80195f0:	b21c      	sxtheq	r4, r3
 80195f2:	f001 fe21 	bl	801b238 <_ZN8touchgfx12TextProvider11getNextCharEv>
 80195f6:	e7f4      	b.n	80195e2 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x3e>
 80195f8:	4618      	mov	r0, r3
 80195fa:	b01d      	add	sp, #116	; 0x74
 80195fc:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8019600:	b003      	add	sp, #12
 8019602:	4770      	bx	lr

08019604 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz>:
 8019604:	b40e      	push	{r1, r2, r3}
 8019606:	b5f0      	push	{r4, r5, r6, r7, lr}
 8019608:	b09e      	sub	sp, #120	; 0x78
 801960a:	ab23      	add	r3, sp, #140	; 0x8c
 801960c:	4604      	mov	r4, r0
 801960e:	f853 5b04 	ldr.w	r5, [r3], #4
 8019612:	9303      	str	r3, [sp, #12]
 8019614:	a805      	add	r0, sp, #20
 8019616:	f000 fd8a 	bl	801a12e <_ZN8touchgfx12TextProviderC1Ev>
 801961a:	6823      	ldr	r3, [r4, #0]
 801961c:	4620      	mov	r0, r4
 801961e:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8019620:	4798      	blx	r3
 8019622:	6823      	ldr	r3, [r4, #0]
 8019624:	4606      	mov	r6, r0
 8019626:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8019628:	4620      	mov	r0, r4
 801962a:	4798      	blx	r3
 801962c:	4633      	mov	r3, r6
 801962e:	4629      	mov	r1, r5
 8019630:	9000      	str	r0, [sp, #0]
 8019632:	9a03      	ldr	r2, [sp, #12]
 8019634:	a805      	add	r0, sp, #20
 8019636:	ad1e      	add	r5, sp, #120	; 0x78
 8019638:	f000 fdd4 	bl	801a1e4 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 801963c:	2100      	movs	r1, #0
 801963e:	f845 1d68 	str.w	r1, [r5, #-104]!
 8019642:	4622      	mov	r2, r4
 8019644:	462b      	mov	r3, r5
 8019646:	a805      	add	r0, sp, #20
 8019648:	f001 fd28 	bl	801b09c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 801964c:	f647 76ff 	movw	r6, #32767	; 0x7fff
 8019650:	b1d8      	cbz	r0, 801968a <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x86>
 8019652:	280a      	cmp	r0, #10
 8019654:	d012      	beq.n	801967c <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
 8019656:	9804      	ldr	r0, [sp, #16]
 8019658:	b180      	cbz	r0, 801967c <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
 801965a:	7b47      	ldrb	r7, [r0, #13]
 801965c:	88e2      	ldrh	r2, [r4, #6]
 801965e:	00fb      	lsls	r3, r7, #3
 8019660:	f403 7180 	and.w	r1, r3, #256	; 0x100
 8019664:	7a03      	ldrb	r3, [r0, #8]
 8019666:	430b      	orrs	r3, r1
 8019668:	0679      	lsls	r1, r7, #25
 801966a:	bf44      	itt	mi
 801966c:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8019670:	b21b      	sxthmi	r3, r3
 8019672:	1ad3      	subs	r3, r2, r3
 8019674:	b21b      	sxth	r3, r3
 8019676:	429e      	cmp	r6, r3
 8019678:	bfa8      	it	ge
 801967a:	461e      	movge	r6, r3
 801967c:	462b      	mov	r3, r5
 801967e:	4622      	mov	r2, r4
 8019680:	2100      	movs	r1, #0
 8019682:	a805      	add	r0, sp, #20
 8019684:	f001 fd0a 	bl	801b09c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8019688:	e7e2      	b.n	8019650 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x4c>
 801968a:	4630      	mov	r0, r6
 801968c:	b01e      	add	sp, #120	; 0x78
 801968e:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 8019692:	b003      	add	sp, #12
 8019694:	4770      	bx	lr

08019696 <_ZNK8touchgfx8Drawable10invalidateEv>:
 8019696:	b513      	push	{r0, r1, r4, lr}
 8019698:	6803      	ldr	r3, [r0, #0]
 801969a:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 801969e:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 80196a2:	f8ad 1004 	strh.w	r1, [sp, #4]
 80196a6:	2400      	movs	r4, #0
 80196a8:	9400      	str	r4, [sp, #0]
 80196aa:	f8ad 2006 	strh.w	r2, [sp, #6]
 80196ae:	691b      	ldr	r3, [r3, #16]
 80196b0:	4669      	mov	r1, sp
 80196b2:	4798      	blx	r3
 80196b4:	b002      	add	sp, #8
 80196b6:	bd10      	pop	{r4, pc}

080196b8 <_ZN8touchgfx8Drawable20getSolidRectAbsoluteEv>:
 80196b8:	b538      	push	{r3, r4, r5, lr}
 80196ba:	680b      	ldr	r3, [r1, #0]
 80196bc:	460c      	mov	r4, r1
 80196be:	68db      	ldr	r3, [r3, #12]
 80196c0:	4605      	mov	r5, r0
 80196c2:	4798      	blx	r3
 80196c4:	6823      	ldr	r3, [r4, #0]
 80196c6:	4620      	mov	r0, r4
 80196c8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80196ca:	4629      	mov	r1, r5
 80196cc:	4798      	blx	r3
 80196ce:	4628      	mov	r0, r5
 80196d0:	bd38      	pop	{r3, r4, r5, pc}

080196d2 <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE>:
 80196d2:	b410      	push	{r4}
 80196d4:	880a      	ldrh	r2, [r1, #0]
 80196d6:	8884      	ldrh	r4, [r0, #4]
 80196d8:	4422      	add	r2, r4
 80196da:	800a      	strh	r2, [r1, #0]
 80196dc:	88c4      	ldrh	r4, [r0, #6]
 80196de:	884a      	ldrh	r2, [r1, #2]
 80196e0:	4422      	add	r2, r4
 80196e2:	804a      	strh	r2, [r1, #2]
 80196e4:	6940      	ldr	r0, [r0, #20]
 80196e6:	b120      	cbz	r0, 80196f2 <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE+0x20>
 80196e8:	6803      	ldr	r3, [r0, #0]
 80196ea:	f85d 4b04 	ldr.w	r4, [sp], #4
 80196ee:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80196f0:	4718      	bx	r3
 80196f2:	f85d 4b04 	ldr.w	r4, [sp], #4
 80196f6:	4770      	bx	lr

080196f8 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE>:
 80196f8:	b570      	push	{r4, r5, r6, lr}
 80196fa:	8882      	ldrh	r2, [r0, #4]
 80196fc:	880b      	ldrh	r3, [r1, #0]
 80196fe:	4413      	add	r3, r2
 8019700:	800b      	strh	r3, [r1, #0]
 8019702:	88c2      	ldrh	r2, [r0, #6]
 8019704:	884b      	ldrh	r3, [r1, #2]
 8019706:	460c      	mov	r4, r1
 8019708:	4413      	add	r3, r2
 801970a:	804b      	strh	r3, [r1, #2]
 801970c:	4605      	mov	r5, r0
 801970e:	1d01      	adds	r1, r0, #4
 8019710:	4620      	mov	r0, r4
 8019712:	f7f9 f8bf 	bl	8012894 <_ZN8touchgfx4RectaNERKS0_>
 8019716:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 801971a:	2b00      	cmp	r3, #0
 801971c:	dd0b      	ble.n	8019736 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 801971e:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8019722:	2b00      	cmp	r3, #0
 8019724:	dd07      	ble.n	8019736 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 8019726:	6968      	ldr	r0, [r5, #20]
 8019728:	b128      	cbz	r0, 8019736 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 801972a:	6803      	ldr	r3, [r0, #0]
 801972c:	4621      	mov	r1, r4
 801972e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8019730:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8019734:	4718      	bx	r3
 8019736:	bd70      	pop	{r4, r5, r6, pc}

08019738 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE>:
 8019738:	b570      	push	{r4, r5, r6, lr}
 801973a:	8882      	ldrh	r2, [r0, #4]
 801973c:	880b      	ldrh	r3, [r1, #0]
 801973e:	4413      	add	r3, r2
 8019740:	800b      	strh	r3, [r1, #0]
 8019742:	88c2      	ldrh	r2, [r0, #6]
 8019744:	884b      	ldrh	r3, [r1, #2]
 8019746:	460c      	mov	r4, r1
 8019748:	4413      	add	r3, r2
 801974a:	804b      	strh	r3, [r1, #2]
 801974c:	4605      	mov	r5, r0
 801974e:	1d01      	adds	r1, r0, #4
 8019750:	4620      	mov	r0, r4
 8019752:	f7f9 f89f 	bl	8012894 <_ZN8touchgfx4RectaNERKS0_>
 8019756:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 801975a:	2b00      	cmp	r3, #0
 801975c:	dd19      	ble.n	8019792 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 801975e:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8019762:	2b00      	cmp	r3, #0
 8019764:	dd15      	ble.n	8019792 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 8019766:	6968      	ldr	r0, [r5, #20]
 8019768:	b128      	cbz	r0, 8019776 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x3e>
 801976a:	6803      	ldr	r3, [r0, #0]
 801976c:	4621      	mov	r1, r4
 801976e:	691b      	ldr	r3, [r3, #16]
 8019770:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8019774:	4718      	bx	r3
 8019776:	4b07      	ldr	r3, [pc, #28]	; (8019794 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5c>)
 8019778:	681b      	ldr	r3, [r3, #0]
 801977a:	3304      	adds	r3, #4
 801977c:	429d      	cmp	r5, r3
 801977e:	d108      	bne.n	8019792 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 8019780:	f7fe feec 	bl	801855c <_ZN8touchgfx11Application11getInstanceEv>
 8019784:	6803      	ldr	r3, [r0, #0]
 8019786:	6821      	ldr	r1, [r4, #0]
 8019788:	6862      	ldr	r2, [r4, #4]
 801978a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 801978c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8019790:	4718      	bx	r3
 8019792:	bd70      	pop	{r4, r5, r6, pc}
 8019794:	20006c78 	.word	0x20006c78

08019798 <_ZN8touchgfx8Drawable12moveRelativeEss>:
 8019798:	b570      	push	{r4, r5, r6, lr}
 801979a:	4604      	mov	r4, r0
 801979c:	4616      	mov	r6, r2
 801979e:	460d      	mov	r5, r1
 80197a0:	b901      	cbnz	r1, 80197a4 <_ZN8touchgfx8Drawable12moveRelativeEss+0xc>
 80197a2:	b192      	cbz	r2, 80197ca <_ZN8touchgfx8Drawable12moveRelativeEss+0x32>
 80197a4:	6823      	ldr	r3, [r4, #0]
 80197a6:	4620      	mov	r0, r4
 80197a8:	699b      	ldr	r3, [r3, #24]
 80197aa:	4798      	blx	r3
 80197ac:	88e2      	ldrh	r2, [r4, #6]
 80197ae:	88a1      	ldrh	r1, [r4, #4]
 80197b0:	4432      	add	r2, r6
 80197b2:	4429      	add	r1, r5
 80197b4:	4620      	mov	r0, r4
 80197b6:	b212      	sxth	r2, r2
 80197b8:	b209      	sxth	r1, r1
 80197ba:	f7f2 f95c 	bl	800ba76 <_ZN8touchgfx8Drawable5setXYEss>
 80197be:	6823      	ldr	r3, [r4, #0]
 80197c0:	4620      	mov	r0, r4
 80197c2:	699b      	ldr	r3, [r3, #24]
 80197c4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80197c8:	4718      	bx	r3
 80197ca:	bd70      	pop	{r4, r5, r6, pc}

080197cc <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>:
 80197cc:	b510      	push	{r4, lr}
 80197ce:	4604      	mov	r4, r0
 80197d0:	4608      	mov	r0, r1
 80197d2:	2300      	movs	r3, #0
 80197d4:	8023      	strh	r3, [r4, #0]
 80197d6:	8063      	strh	r3, [r4, #2]
 80197d8:	6803      	ldr	r3, [r0, #0]
 80197da:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 80197de:	f9b1 1008 	ldrsh.w	r1, [r1, #8]
 80197e2:	80a1      	strh	r1, [r4, #4]
 80197e4:	80e2      	strh	r2, [r4, #6]
 80197e6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80197e8:	4621      	mov	r1, r4
 80197ea:	4798      	blx	r3
 80197ec:	4620      	mov	r0, r4
 80197ee:	bd10      	pop	{r4, pc}

080197f0 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt>:
 80197f0:	b530      	push	{r4, r5, lr}
 80197f2:	8083      	strh	r3, [r0, #4]
 80197f4:	f8bd 300c 	ldrh.w	r3, [sp, #12]
 80197f8:	80c3      	strh	r3, [r0, #6]
 80197fa:	f89d 3010 	ldrb.w	r3, [sp, #16]
 80197fe:	7203      	strb	r3, [r0, #8]
 8019800:	f89d 3014 	ldrb.w	r3, [sp, #20]
 8019804:	f89d 5018 	ldrb.w	r5, [sp, #24]
 8019808:	7243      	strb	r3, [r0, #9]
 801980a:	7a83      	ldrb	r3, [r0, #10]
 801980c:	6141      	str	r1, [r0, #20]
 801980e:	f365 0306 	bfi	r3, r5, #0, #7
 8019812:	f89d 501c 	ldrb.w	r5, [sp, #28]
 8019816:	8302      	strh	r2, [r0, #24]
 8019818:	f365 13c7 	bfi	r3, r5, #7, #1
 801981c:	7283      	strb	r3, [r0, #10]
 801981e:	f89d 3020 	ldrb.w	r3, [sp, #32]
 8019822:	72c3      	strb	r3, [r0, #11]
 8019824:	f89d 3024 	ldrb.w	r3, [sp, #36]	; 0x24
 8019828:	7303      	strb	r3, [r0, #12]
 801982a:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 801982e:	81c3      	strh	r3, [r0, #14]
 8019830:	f8bd 302c 	ldrh.w	r3, [sp, #44]	; 0x2c
 8019834:	8203      	strh	r3, [r0, #16]
 8019836:	4b01      	ldr	r3, [pc, #4]	; (801983c <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt+0x4c>)
 8019838:	6003      	str	r3, [r0, #0]
 801983a:	bd30      	pop	{r4, r5, pc}
 801983c:	0802fdf0 	.word	0x0802fdf0

08019840 <_ZNK8touchgfx9ConstFont4findEt>:
 8019840:	b5f0      	push	{r4, r5, r6, r7, lr}
 8019842:	6944      	ldr	r4, [r0, #20]
 8019844:	b3bc      	cbz	r4, 80198b6 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8019846:	88a3      	ldrh	r3, [r4, #4]
 8019848:	8b02      	ldrh	r2, [r0, #24]
 801984a:	1acb      	subs	r3, r1, r3
 801984c:	f102 32ff 	add.w	r2, r2, #4294967295
 8019850:	d431      	bmi.n	80198b6 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8019852:	4293      	cmp	r3, r2
 8019854:	dd0c      	ble.n	8019870 <_ZNK8touchgfx9ConstFont4findEt+0x30>
 8019856:	230e      	movs	r3, #14
 8019858:	fb03 4302 	mla	r3, r3, r2, r4
 801985c:	889b      	ldrh	r3, [r3, #4]
 801985e:	1a5b      	subs	r3, r3, r1
 8019860:	1ad3      	subs	r3, r2, r3
 8019862:	429a      	cmp	r2, r3
 8019864:	db27      	blt.n	80198b6 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8019866:	2b00      	cmp	r3, #0
 8019868:	bfbc      	itt	lt
 801986a:	2302      	movlt	r3, #2
 801986c:	fb92 f3f3 	sdivlt	r3, r2, r3
 8019870:	2500      	movs	r5, #0
 8019872:	260e      	movs	r6, #14
 8019874:	4295      	cmp	r5, r2
 8019876:	dc1e      	bgt.n	80198b6 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8019878:	fb06 4003 	mla	r0, r6, r3, r4
 801987c:	8887      	ldrh	r7, [r0, #4]
 801987e:	42b9      	cmp	r1, r7
 8019880:	d01a      	beq.n	80198b8 <_ZNK8touchgfx9ConstFont4findEt+0x78>
 8019882:	d20d      	bcs.n	80198a0 <_ZNK8touchgfx9ConstFont4findEt+0x60>
 8019884:	1e5a      	subs	r2, r3, #1
 8019886:	4295      	cmp	r5, r2
 8019888:	dc15      	bgt.n	80198b6 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 801988a:	f830 3c0a 	ldrh.w	r3, [r0, #-10]
 801988e:	1a5b      	subs	r3, r3, r1
 8019890:	1ad3      	subs	r3, r2, r3
 8019892:	429a      	cmp	r2, r3
 8019894:	db0f      	blt.n	80198b6 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8019896:	429d      	cmp	r5, r3
 8019898:	ddec      	ble.n	8019874 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 801989a:	1953      	adds	r3, r2, r5
 801989c:	105b      	asrs	r3, r3, #1
 801989e:	e7e9      	b.n	8019874 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 80198a0:	1c5d      	adds	r5, r3, #1
 80198a2:	42aa      	cmp	r2, r5
 80198a4:	db07      	blt.n	80198b6 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 80198a6:	8a43      	ldrh	r3, [r0, #18]
 80198a8:	1acb      	subs	r3, r1, r3
 80198aa:	442b      	add	r3, r5
 80198ac:	429d      	cmp	r5, r3
 80198ae:	dc02      	bgt.n	80198b6 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 80198b0:	429a      	cmp	r2, r3
 80198b2:	dadf      	bge.n	8019874 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 80198b4:	e7f1      	b.n	801989a <_ZNK8touchgfx9ConstFont4findEt+0x5a>
 80198b6:	2000      	movs	r0, #0
 80198b8:	bdf0      	pop	{r4, r5, r6, r7, pc}

080198ba <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh>:
 80198ba:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80198bc:	4604      	mov	r4, r0
 80198be:	4617      	mov	r7, r2
 80198c0:	461e      	mov	r6, r3
 80198c2:	b911      	cbnz	r1, 80198ca <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x10>
 80198c4:	2500      	movs	r5, #0
 80198c6:	4628      	mov	r0, r5
 80198c8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80198ca:	290a      	cmp	r1, #10
 80198cc:	d0fa      	beq.n	80198c4 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 80198ce:	f64f 62ff 	movw	r2, #65279	; 0xfeff
 80198d2:	4291      	cmp	r1, r2
 80198d4:	d0f6      	beq.n	80198c4 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 80198d6:	f242 020b 	movw	r2, #8203	; 0x200b
 80198da:	4291      	cmp	r1, r2
 80198dc:	d0f2      	beq.n	80198c4 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 80198de:	f7ff ffaf 	bl	8019840 <_ZNK8touchgfx9ConstFont4findEt>
 80198e2:	4605      	mov	r5, r0
 80198e4:	b950      	cbnz	r0, 80198fc <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x42>
 80198e6:	6823      	ldr	r3, [r4, #0]
 80198e8:	4620      	mov	r0, r4
 80198ea:	691b      	ldr	r3, [r3, #16]
 80198ec:	4798      	blx	r3
 80198ee:	4601      	mov	r1, r0
 80198f0:	4620      	mov	r0, r4
 80198f2:	f7ff ffa5 	bl	8019840 <_ZNK8touchgfx9ConstFont4findEt>
 80198f6:	4605      	mov	r5, r0
 80198f8:	2800      	cmp	r0, #0
 80198fa:	d0e3      	beq.n	80198c4 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 80198fc:	6823      	ldr	r3, [r4, #0]
 80198fe:	4629      	mov	r1, r5
 8019900:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8019902:	4620      	mov	r0, r4
 8019904:	4798      	blx	r3
 8019906:	6038      	str	r0, [r7, #0]
 8019908:	6823      	ldr	r3, [r4, #0]
 801990a:	4620      	mov	r0, r4
 801990c:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 801990e:	4798      	blx	r3
 8019910:	7030      	strb	r0, [r6, #0]
 8019912:	e7d8      	b.n	80198c6 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xc>

08019914 <_ZN8touchgfx4clzuEm>:
 8019914:	4603      	mov	r3, r0
 8019916:	b1c8      	cbz	r0, 801994c <_ZN8touchgfx4clzuEm+0x38>
 8019918:	0c02      	lsrs	r2, r0, #16
 801991a:	0412      	lsls	r2, r2, #16
 801991c:	b9a2      	cbnz	r2, 8019948 <_ZN8touchgfx4clzuEm+0x34>
 801991e:	0403      	lsls	r3, r0, #16
 8019920:	2010      	movs	r0, #16
 8019922:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
 8019926:	bf04      	itt	eq
 8019928:	021b      	lsleq	r3, r3, #8
 801992a:	3008      	addeq	r0, #8
 801992c:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
 8019930:	bf04      	itt	eq
 8019932:	011b      	lsleq	r3, r3, #4
 8019934:	3004      	addeq	r0, #4
 8019936:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
 801993a:	bf04      	itt	eq
 801993c:	009b      	lsleq	r3, r3, #2
 801993e:	3002      	addeq	r0, #2
 8019940:	2b00      	cmp	r3, #0
 8019942:	db04      	blt.n	801994e <_ZN8touchgfx4clzuEm+0x3a>
 8019944:	3001      	adds	r0, #1
 8019946:	4770      	bx	lr
 8019948:	2000      	movs	r0, #0
 801994a:	e7ea      	b.n	8019922 <_ZN8touchgfx4clzuEm+0xe>
 801994c:	2020      	movs	r0, #32
 801994e:	4770      	bx	lr

08019950 <_ZN8touchgfx7muldivuEmmmRm>:
 8019950:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 8019954:	460f      	mov	r7, r1
 8019956:	4615      	mov	r5, r2
 8019958:	461e      	mov	r6, r3
 801995a:	4601      	mov	r1, r0
 801995c:	b100      	cbz	r0, 8019960 <_ZN8touchgfx7muldivuEmmmRm+0x10>
 801995e:	b927      	cbnz	r7, 801996a <_ZN8touchgfx7muldivuEmmmRm+0x1a>
 8019960:	2000      	movs	r0, #0
 8019962:	6030      	str	r0, [r6, #0]
 8019964:	b002      	add	sp, #8
 8019966:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801996a:	f7ff ffd3 	bl	8019914 <_ZN8touchgfx4clzuEm>
 801996e:	b980      	cbnz	r0, 8019992 <_ZN8touchgfx7muldivuEmmmRm+0x42>
 8019970:	4638      	mov	r0, r7
 8019972:	f7ff ffcf 	bl	8019914 <_ZN8touchgfx4clzuEm>
 8019976:	2800      	cmp	r0, #0
 8019978:	dd05      	ble.n	8019986 <_ZN8touchgfx7muldivuEmmmRm+0x36>
 801997a:	4633      	mov	r3, r6
 801997c:	462a      	mov	r2, r5
 801997e:	4638      	mov	r0, r7
 8019980:	f7ff ffe6 	bl	8019950 <_ZN8touchgfx7muldivuEmmmRm>
 8019984:	e7ee      	b.n	8019964 <_ZN8touchgfx7muldivuEmmmRm+0x14>
 8019986:	f04f 33ff 	mov.w	r3, #4294967295
 801998a:	6033      	str	r3, [r6, #0]
 801998c:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 8019990:	e7e8      	b.n	8019964 <_ZN8touchgfx7muldivuEmmmRm+0x14>
 8019992:	fa37 f800 	lsrs.w	r8, r7, r0
 8019996:	fb07 f301 	mul.w	r3, r7, r1
 801999a:	d105      	bne.n	80199a8 <_ZN8touchgfx7muldivuEmmmRm+0x58>
 801999c:	fbb3 f0f5 	udiv	r0, r3, r5
 80199a0:	fb05 3510 	mls	r5, r5, r0, r3
 80199a4:	6035      	str	r5, [r6, #0]
 80199a6:	e7dd      	b.n	8019964 <_ZN8touchgfx7muldivuEmmmRm+0x14>
 80199a8:	2301      	movs	r3, #1
 80199aa:	fa01 fa00 	lsl.w	sl, r1, r0
 80199ae:	fa03 f000 	lsl.w	r0, r3, r0
 80199b2:	3801      	subs	r0, #1
 80199b4:	462a      	mov	r2, r5
 80199b6:	4633      	mov	r3, r6
 80199b8:	4038      	ands	r0, r7
 80199ba:	f7ff ffc9 	bl	8019950 <_ZN8touchgfx7muldivuEmmmRm>
 80199be:	fbba f9f5 	udiv	r9, sl, r5
 80199c2:	462a      	mov	r2, r5
 80199c4:	4607      	mov	r7, r0
 80199c6:	ab01      	add	r3, sp, #4
 80199c8:	fb05 a119 	mls	r1, r5, r9, sl
 80199cc:	4640      	mov	r0, r8
 80199ce:	f7ff ffbf 	bl	8019950 <_ZN8touchgfx7muldivuEmmmRm>
 80199d2:	9b01      	ldr	r3, [sp, #4]
 80199d4:	6832      	ldr	r2, [r6, #0]
 80199d6:	fb08 f409 	mul.w	r4, r8, r9
 80199da:	441a      	add	r2, r3
 80199dc:	fbb2 f3f5 	udiv	r3, r2, r5
 80199e0:	441c      	add	r4, r3
 80199e2:	443c      	add	r4, r7
 80199e4:	4420      	add	r0, r4
 80199e6:	fb05 2513 	mls	r5, r5, r3, r2
 80199ea:	e7db      	b.n	80199a4 <_ZN8touchgfx7muldivuEmmmRm+0x54>

080199ec <_ZN8touchgfx6muldivElllRl>:
 80199ec:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80199ee:	2800      	cmp	r0, #0
 80199f0:	bfba      	itte	lt
 80199f2:	4240      	neglt	r0, r0
 80199f4:	f04f 34ff 	movlt.w	r4, #4294967295
 80199f8:	2401      	movge	r4, #1
 80199fa:	2900      	cmp	r1, #0
 80199fc:	bfbc      	itt	lt
 80199fe:	4249      	neglt	r1, r1
 8019a00:	4264      	neglt	r4, r4
 8019a02:	2a00      	cmp	r2, #0
 8019a04:	bfb6      	itet	lt
 8019a06:	4265      	neglt	r5, r4
 8019a08:	4625      	movge	r5, r4
 8019a0a:	4252      	neglt	r2, r2
 8019a0c:	4288      	cmp	r0, r1
 8019a0e:	461e      	mov	r6, r3
 8019a10:	bfc2      	ittt	gt
 8019a12:	4603      	movgt	r3, r0
 8019a14:	4608      	movgt	r0, r1
 8019a16:	4619      	movgt	r1, r3
 8019a18:	ab01      	add	r3, sp, #4
 8019a1a:	f7ff ff99 	bl	8019950 <_ZN8touchgfx7muldivuEmmmRm>
 8019a1e:	9b01      	ldr	r3, [sp, #4]
 8019a20:	4368      	muls	r0, r5
 8019a22:	435c      	muls	r4, r3
 8019a24:	6034      	str	r4, [r6, #0]
 8019a26:	b002      	add	sp, #8
 8019a28:	bd70      	pop	{r4, r5, r6, pc}

08019a2a <_ZN8touchgfx6muldivElll>:
 8019a2a:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8019a2c:	4606      	mov	r6, r0
 8019a2e:	ab01      	add	r3, sp, #4
 8019a30:	460d      	mov	r5, r1
 8019a32:	4614      	mov	r4, r2
 8019a34:	f7ff ffda 	bl	80199ec <_ZN8touchgfx6muldivElllRl>
 8019a38:	2e00      	cmp	r6, #0
 8019a3a:	db20      	blt.n	8019a7e <_ZN8touchgfx6muldivElll+0x54>
 8019a3c:	bf14      	ite	ne
 8019a3e:	2301      	movne	r3, #1
 8019a40:	2300      	moveq	r3, #0
 8019a42:	2d00      	cmp	r5, #0
 8019a44:	db1e      	blt.n	8019a84 <_ZN8touchgfx6muldivElll+0x5a>
 8019a46:	bf14      	ite	ne
 8019a48:	2201      	movne	r2, #1
 8019a4a:	2200      	moveq	r2, #0
 8019a4c:	2c00      	cmp	r4, #0
 8019a4e:	fb03 f202 	mul.w	r2, r3, r2
 8019a52:	db1a      	blt.n	8019a8a <_ZN8touchgfx6muldivElll+0x60>
 8019a54:	bf14      	ite	ne
 8019a56:	2301      	movne	r3, #1
 8019a58:	2300      	moveq	r3, #0
 8019a5a:	4353      	muls	r3, r2
 8019a5c:	2b01      	cmp	r3, #1
 8019a5e:	d117      	bne.n	8019a90 <_ZN8touchgfx6muldivElll+0x66>
 8019a60:	9b01      	ldr	r3, [sp, #4]
 8019a62:	2c00      	cmp	r4, #0
 8019a64:	bfb8      	it	lt
 8019a66:	4264      	neglt	r4, r4
 8019a68:	2b00      	cmp	r3, #0
 8019a6a:	f104 0401 	add.w	r4, r4, #1
 8019a6e:	bfb8      	it	lt
 8019a70:	425b      	neglt	r3, r3
 8019a72:	ebb3 0f64 	cmp.w	r3, r4, asr #1
 8019a76:	db00      	blt.n	8019a7a <_ZN8touchgfx6muldivElll+0x50>
 8019a78:	3001      	adds	r0, #1
 8019a7a:	b002      	add	sp, #8
 8019a7c:	bd70      	pop	{r4, r5, r6, pc}
 8019a7e:	f04f 33ff 	mov.w	r3, #4294967295
 8019a82:	e7de      	b.n	8019a42 <_ZN8touchgfx6muldivElll+0x18>
 8019a84:	f04f 32ff 	mov.w	r2, #4294967295
 8019a88:	e7e0      	b.n	8019a4c <_ZN8touchgfx6muldivElll+0x22>
 8019a8a:	f04f 33ff 	mov.w	r3, #4294967295
 8019a8e:	e7e4      	b.n	8019a5a <_ZN8touchgfx6muldivElll+0x30>
 8019a90:	3301      	adds	r3, #1
 8019a92:	d1f2      	bne.n	8019a7a <_ZN8touchgfx6muldivElll+0x50>
 8019a94:	9b01      	ldr	r3, [sp, #4]
 8019a96:	2c00      	cmp	r4, #0
 8019a98:	bfb8      	it	lt
 8019a9a:	4264      	neglt	r4, r4
 8019a9c:	2b00      	cmp	r3, #0
 8019a9e:	bfb8      	it	lt
 8019aa0:	425b      	neglt	r3, r3
 8019aa2:	ebb3 0f64 	cmp.w	r3, r4, asr #1
 8019aa6:	bfc8      	it	gt
 8019aa8:	f100 30ff 	addgt.w	r0, r0, #4294967295
 8019aac:	e7e5      	b.n	8019a7a <_ZN8touchgfx6muldivElll+0x50>

08019aae <_ZNK8touchgfx10ClickEvent12getEventTypeEv>:
 8019aae:	2000      	movs	r0, #0
 8019ab0:	4770      	bx	lr

08019ab2 <_ZNK8touchgfx9DragEvent12getEventTypeEv>:
 8019ab2:	2001      	movs	r0, #1
 8019ab4:	4770      	bx	lr

08019ab6 <_ZNK8touchgfx12GestureEvent12getEventTypeEv>:
 8019ab6:	2002      	movs	r0, #2
 8019ab8:	4770      	bx	lr

08019aba <_ZN8touchgfx12GestureEventD1Ev>:
 8019aba:	4770      	bx	lr

08019abc <_ZN8touchgfx9DragEventD1Ev>:
 8019abc:	4770      	bx	lr

08019abe <_ZN8touchgfx10ClickEventD1Ev>:
 8019abe:	4770      	bx	lr

08019ac0 <_ZN8touchgfx10ClickEventD0Ev>:
 8019ac0:	b510      	push	{r4, lr}
 8019ac2:	210c      	movs	r1, #12
 8019ac4:	4604      	mov	r4, r0
 8019ac6:	f010 fc48 	bl	802a35a <_ZdlPvj>
 8019aca:	4620      	mov	r0, r4
 8019acc:	bd10      	pop	{r4, pc}

08019ace <_ZN8touchgfx9DragEventD0Ev>:
 8019ace:	b510      	push	{r4, lr}
 8019ad0:	2110      	movs	r1, #16
 8019ad2:	4604      	mov	r4, r0
 8019ad4:	f010 fc41 	bl	802a35a <_ZdlPvj>
 8019ad8:	4620      	mov	r0, r4
 8019ada:	bd10      	pop	{r4, pc}

08019adc <_ZN8touchgfx12GestureEventD0Ev>:
 8019adc:	b510      	push	{r4, lr}
 8019ade:	210c      	movs	r1, #12
 8019ae0:	4604      	mov	r4, r0
 8019ae2:	f010 fc3a 	bl	802a35a <_ZdlPvj>
 8019ae6:	4620      	mov	r0, r4
 8019ae8:	bd10      	pop	{r4, pc}
	...

08019aec <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE>:
 8019aec:	b530      	push	{r4, r5, lr}
 8019aee:	460d      	mov	r5, r1
 8019af0:	6b01      	ldr	r1, [r0, #48]	; 0x30
 8019af2:	b087      	sub	sp, #28
 8019af4:	4604      	mov	r4, r0
 8019af6:	b301      	cbz	r1, 8019b3a <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x4e>
 8019af8:	a801      	add	r0, sp, #4
 8019afa:	f7ff fe67 	bl	80197cc <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8019afe:	892a      	ldrh	r2, [r5, #8]
 8019b00:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8019b04:	7928      	ldrb	r0, [r5, #4]
 8019b06:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
 8019b0a:	f88d 0010 	strb.w	r0, [sp, #16]
 8019b0e:	1ad2      	subs	r2, r2, r3
 8019b10:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 8019b12:	6b20      	ldr	r0, [r4, #48]	; 0x30
 8019b14:	f8ad 1012 	strh.w	r1, [sp, #18]
 8019b18:	441a      	add	r2, r3
 8019b1a:	896b      	ldrh	r3, [r5, #10]
 8019b1c:	f8bd 5006 	ldrh.w	r5, [sp, #6]
 8019b20:	f8ad 2014 	strh.w	r2, [sp, #20]
 8019b24:	1b5b      	subs	r3, r3, r5
 8019b26:	8ee5      	ldrh	r5, [r4, #54]	; 0x36
 8019b28:	442b      	add	r3, r5
 8019b2a:	4d05      	ldr	r5, [pc, #20]	; (8019b40 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x54>)
 8019b2c:	9503      	str	r5, [sp, #12]
 8019b2e:	f8ad 3016 	strh.w	r3, [sp, #22]
 8019b32:	6803      	ldr	r3, [r0, #0]
 8019b34:	a903      	add	r1, sp, #12
 8019b36:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8019b38:	4798      	blx	r3
 8019b3a:	b007      	add	sp, #28
 8019b3c:	bd30      	pop	{r4, r5, pc}
 8019b3e:	bf00      	nop
 8019b40:	0802fe80 	.word	0x0802fe80

08019b44 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE>:
 8019b44:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8019b48:	6b03      	ldr	r3, [r0, #48]	; 0x30
 8019b4a:	b08a      	sub	sp, #40	; 0x28
 8019b4c:	4604      	mov	r4, r0
 8019b4e:	460d      	mov	r5, r1
 8019b50:	b113      	cbz	r3, 8019b58 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x14>
 8019b52:	790b      	ldrb	r3, [r1, #4]
 8019b54:	2b00      	cmp	r3, #0
 8019b56:	d044      	beq.n	8019be2 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 8019b58:	f104 0804 	add.w	r8, r4, #4
 8019b5c:	4641      	mov	r1, r8
 8019b5e:	a803      	add	r0, sp, #12
 8019b60:	f7ff fe34 	bl	80197cc <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8019b64:	792b      	ldrb	r3, [r5, #4]
 8019b66:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 8019b6a:	f9bd 600e 	ldrsh.w	r6, [sp, #14]
 8019b6e:	b983      	cbnz	r3, 8019b92 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x4e>
 8019b70:	892a      	ldrh	r2, [r5, #8]
 8019b72:	88e9      	ldrh	r1, [r5, #6]
 8019b74:	f104 0336 	add.w	r3, r4, #54	; 0x36
 8019b78:	1b92      	subs	r2, r2, r6
 8019b7a:	1bc9      	subs	r1, r1, r7
 8019b7c:	9301      	str	r3, [sp, #4]
 8019b7e:	f104 0334 	add.w	r3, r4, #52	; 0x34
 8019b82:	9300      	str	r3, [sp, #0]
 8019b84:	b212      	sxth	r2, r2
 8019b86:	f104 0330 	add.w	r3, r4, #48	; 0x30
 8019b8a:	b209      	sxth	r1, r1
 8019b8c:	4640      	mov	r0, r8
 8019b8e:	f7f8 fd9d 	bl	80126cc <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>
 8019b92:	6b21      	ldr	r1, [r4, #48]	; 0x30
 8019b94:	b329      	cbz	r1, 8019be2 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 8019b96:	a805      	add	r0, sp, #20
 8019b98:	f7ff fe18 	bl	80197cc <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8019b9c:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 8019ba0:	792b      	ldrb	r3, [r5, #4]
 8019ba2:	6b20      	ldr	r0, [r4, #48]	; 0x30
 8019ba4:	f88d 3020 	strb.w	r3, [sp, #32]
 8019ba8:	1abf      	subs	r7, r7, r2
 8019baa:	88ea      	ldrh	r2, [r5, #6]
 8019bac:	4417      	add	r7, r2
 8019bae:	8ea2      	ldrh	r2, [r4, #52]	; 0x34
 8019bb0:	4417      	add	r7, r2
 8019bb2:	f8bd 2016 	ldrh.w	r2, [sp, #22]
 8019bb6:	f8ad 7022 	strh.w	r7, [sp, #34]	; 0x22
 8019bba:	1ab6      	subs	r6, r6, r2
 8019bbc:	892a      	ldrh	r2, [r5, #8]
 8019bbe:	4416      	add	r6, r2
 8019bc0:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 8019bc2:	4416      	add	r6, r2
 8019bc4:	f8ad 6024 	strh.w	r6, [sp, #36]	; 0x24
 8019bc8:	4a07      	ldr	r2, [pc, #28]	; (8019be8 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0xa4>)
 8019bca:	9207      	str	r2, [sp, #28]
 8019bcc:	2600      	movs	r6, #0
 8019bce:	f8ad 6026 	strh.w	r6, [sp, #38]	; 0x26
 8019bd2:	6803      	ldr	r3, [r0, #0]
 8019bd4:	a907      	add	r1, sp, #28
 8019bd6:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8019bd8:	4798      	blx	r3
 8019bda:	792b      	ldrb	r3, [r5, #4]
 8019bdc:	b10b      	cbz	r3, 8019be2 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 8019bde:	e9c4 660c 	strd	r6, r6, [r4, #48]	; 0x30
 8019be2:	b00a      	add	sp, #40	; 0x28
 8019be4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8019be8:	0802fe58 	.word	0x0802fe58

08019bec <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE>:
 8019bec:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8019bf0:	460c      	mov	r4, r1
 8019bf2:	6b01      	ldr	r1, [r0, #48]	; 0x30
 8019bf4:	b088      	sub	sp, #32
 8019bf6:	4605      	mov	r5, r0
 8019bf8:	2900      	cmp	r1, #0
 8019bfa:	d06d      	beq.n	8019cd8 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xec>
 8019bfc:	4668      	mov	r0, sp
 8019bfe:	f7ff fde5 	bl	80197cc <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8019c02:	8ea9      	ldrh	r1, [r5, #52]	; 0x34
 8019c04:	88e3      	ldrh	r3, [r4, #6]
 8019c06:	f9bd 8000 	ldrsh.w	r8, [sp]
 8019c0a:	f9bd 7002 	ldrsh.w	r7, [sp, #2]
 8019c0e:	440b      	add	r3, r1
 8019c10:	b21b      	sxth	r3, r3
 8019c12:	4543      	cmp	r3, r8
 8019c14:	db31      	blt.n	8019c7a <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8019c16:	f8bd c004 	ldrh.w	ip, [sp, #4]
 8019c1a:	44c4      	add	ip, r8
 8019c1c:	fa0f fc8c 	sxth.w	ip, ip
 8019c20:	4563      	cmp	r3, ip
 8019c22:	da2a      	bge.n	8019c7a <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8019c24:	8eea      	ldrh	r2, [r5, #54]	; 0x36
 8019c26:	8926      	ldrh	r6, [r4, #8]
 8019c28:	4416      	add	r6, r2
 8019c2a:	b236      	sxth	r6, r6
 8019c2c:	42be      	cmp	r6, r7
 8019c2e:	db24      	blt.n	8019c7a <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8019c30:	f8bd 0006 	ldrh.w	r0, [sp, #6]
 8019c34:	4438      	add	r0, r7
 8019c36:	b200      	sxth	r0, r0
 8019c38:	4286      	cmp	r6, r0
 8019c3a:	da1e      	bge.n	8019c7a <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8019c3c:	8963      	ldrh	r3, [r4, #10]
 8019c3e:	4419      	add	r1, r3
 8019c40:	b209      	sxth	r1, r1
 8019c42:	4541      	cmp	r1, r8
 8019c44:	db08      	blt.n	8019c58 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 8019c46:	4561      	cmp	r1, ip
 8019c48:	da06      	bge.n	8019c58 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 8019c4a:	89a3      	ldrh	r3, [r4, #12]
 8019c4c:	441a      	add	r2, r3
 8019c4e:	b212      	sxth	r2, r2
 8019c50:	42ba      	cmp	r2, r7
 8019c52:	db01      	blt.n	8019c58 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 8019c54:	4282      	cmp	r2, r0
 8019c56:	db10      	blt.n	8019c7a <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8019c58:	4b21      	ldr	r3, [pc, #132]	; (8019ce0 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf4>)
 8019c5a:	9304      	str	r3, [sp, #16]
 8019c5c:	2302      	movs	r3, #2
 8019c5e:	f88d 3014 	strb.w	r3, [sp, #20]
 8019c62:	6b28      	ldr	r0, [r5, #48]	; 0x30
 8019c64:	2300      	movs	r3, #0
 8019c66:	f8ad 3016 	strh.w	r3, [sp, #22]
 8019c6a:	f8ad 3018 	strh.w	r3, [sp, #24]
 8019c6e:	f8ad 301a 	strh.w	r3, [sp, #26]
 8019c72:	6803      	ldr	r3, [r0, #0]
 8019c74:	a904      	add	r1, sp, #16
 8019c76:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8019c78:	4798      	blx	r3
 8019c7a:	1d29      	adds	r1, r5, #4
 8019c7c:	a802      	add	r0, sp, #8
 8019c7e:	f7ff fda5 	bl	80197cc <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8019c82:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 8019c86:	88e0      	ldrh	r0, [r4, #6]
 8019c88:	7921      	ldrb	r1, [r4, #4]
 8019c8a:	f8b5 c034 	ldrh.w	ip, [r5, #52]	; 0x34
 8019c8e:	8922      	ldrh	r2, [r4, #8]
 8019c90:	8eee      	ldrh	r6, [r5, #54]	; 0x36
 8019c92:	f88d 1014 	strb.w	r1, [sp, #20]
 8019c96:	eba3 0808 	sub.w	r8, r3, r8
 8019c9a:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 8019c9e:	1bdf      	subs	r7, r3, r7
 8019ca0:	b2bb      	uxth	r3, r7
 8019ca2:	fa1f f888 	uxth.w	r8, r8
 8019ca6:	8967      	ldrh	r7, [r4, #10]
 8019ca8:	89a4      	ldrh	r4, [r4, #12]
 8019caa:	4440      	add	r0, r8
 8019cac:	4460      	add	r0, ip
 8019cae:	441a      	add	r2, r3
 8019cb0:	44b8      	add	r8, r7
 8019cb2:	4423      	add	r3, r4
 8019cb4:	f8ad 0016 	strh.w	r0, [sp, #22]
 8019cb8:	4433      	add	r3, r6
 8019cba:	4432      	add	r2, r6
 8019cbc:	44e0      	add	r8, ip
 8019cbe:	4c09      	ldr	r4, [pc, #36]	; (8019ce4 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf8>)
 8019cc0:	6b28      	ldr	r0, [r5, #48]	; 0x30
 8019cc2:	9404      	str	r4, [sp, #16]
 8019cc4:	f8ad 2018 	strh.w	r2, [sp, #24]
 8019cc8:	f8ad 801a 	strh.w	r8, [sp, #26]
 8019ccc:	f8ad 301c 	strh.w	r3, [sp, #28]
 8019cd0:	6803      	ldr	r3, [r0, #0]
 8019cd2:	a904      	add	r1, sp, #16
 8019cd4:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8019cd6:	4798      	blx	r3
 8019cd8:	b008      	add	sp, #32
 8019cda:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8019cde:	bf00      	nop
 8019ce0:	0802fe58 	.word	0x0802fe58
 8019ce4:	0802fe6c 	.word	0x0802fe6c

08019ce8 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>:
 8019ce8:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8019cea:	4604      	mov	r4, r0
 8019cec:	f934 2f0c 	ldrsh.w	r2, [r4, #12]!
 8019cf0:	3201      	adds	r2, #1
 8019cf2:	d112      	bne.n	8019d1a <_ZN8touchgfx8Drawable20getCachedVisibleRectEv+0x32>
 8019cf4:	6803      	ldr	r3, [r0, #0]
 8019cf6:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 8019cfa:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8019cfe:	f8ad 1004 	strh.w	r1, [sp, #4]
 8019d02:	2500      	movs	r5, #0
 8019d04:	9500      	str	r5, [sp, #0]
 8019d06:	466d      	mov	r5, sp
 8019d08:	4629      	mov	r1, r5
 8019d0a:	f8ad 2006 	strh.w	r2, [sp, #6]
 8019d0e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8019d10:	4798      	blx	r3
 8019d12:	e895 0003 	ldmia.w	r5, {r0, r1}
 8019d16:	e884 0003 	stmia.w	r4, {r0, r1}
 8019d1a:	4620      	mov	r0, r4
 8019d1c:	b003      	add	sp, #12
 8019d1e:	bd30      	pop	{r4, r5, pc}

08019d20 <_ZN8touchgfx8Drawable13getCachedAbsXEv>:
 8019d20:	b513      	push	{r0, r1, r4, lr}
 8019d22:	f9b0 3020 	ldrsh.w	r3, [r0, #32]
 8019d26:	3301      	adds	r3, #1
 8019d28:	4604      	mov	r4, r0
 8019d2a:	d109      	bne.n	8019d40 <_ZN8touchgfx8Drawable13getCachedAbsXEv+0x20>
 8019d2c:	4601      	mov	r1, r0
 8019d2e:	4668      	mov	r0, sp
 8019d30:	f7ff fd4c 	bl	80197cc <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8019d34:	f8bd 3000 	ldrh.w	r3, [sp]
 8019d38:	8423      	strh	r3, [r4, #32]
 8019d3a:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8019d3e:	8463      	strh	r3, [r4, #34]	; 0x22
 8019d40:	f9b4 0020 	ldrsh.w	r0, [r4, #32]
 8019d44:	b002      	add	sp, #8
 8019d46:	bd10      	pop	{r4, pc}

08019d48 <_ZN8touchgfx8Drawable13getCachedAbsYEv>:
 8019d48:	b513      	push	{r0, r1, r4, lr}
 8019d4a:	f9b0 3022 	ldrsh.w	r3, [r0, #34]	; 0x22
 8019d4e:	3301      	adds	r3, #1
 8019d50:	4604      	mov	r4, r0
 8019d52:	d109      	bne.n	8019d68 <_ZN8touchgfx8Drawable13getCachedAbsYEv+0x20>
 8019d54:	4601      	mov	r1, r0
 8019d56:	4668      	mov	r0, sp
 8019d58:	f7ff fd38 	bl	80197cc <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8019d5c:	f8bd 3000 	ldrh.w	r3, [sp]
 8019d60:	8423      	strh	r3, [r4, #32]
 8019d62:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8019d66:	8463      	strh	r3, [r4, #34]	; 0x22
 8019d68:	f9b4 0022 	ldrsh.w	r0, [r4, #34]	; 0x22
 8019d6c:	b002      	add	sp, #8
 8019d6e:	bd10      	pop	{r4, pc}

08019d70 <_ZN8touchgfx6ScreenC1Ev>:
 8019d70:	b570      	push	{r4, r5, r6, lr}
 8019d72:	4605      	mov	r5, r0
 8019d74:	4b16      	ldr	r3, [pc, #88]	; (8019dd0 <_ZN8touchgfx6ScreenC1Ev+0x60>)
 8019d76:	f845 3b04 	str.w	r3, [r5], #4
 8019d7a:	2300      	movs	r3, #0
 8019d7c:	8103      	strh	r3, [r0, #8]
 8019d7e:	8143      	strh	r3, [r0, #10]
 8019d80:	8183      	strh	r3, [r0, #12]
 8019d82:	81c3      	strh	r3, [r0, #14]
 8019d84:	8203      	strh	r3, [r0, #16]
 8019d86:	8243      	strh	r3, [r0, #18]
 8019d88:	8283      	strh	r3, [r0, #20]
 8019d8a:	82c3      	strh	r3, [r0, #22]
 8019d8c:	e9c0 3306 	strd	r3, r3, [r0, #24]
 8019d90:	6203      	str	r3, [r0, #32]
 8019d92:	8483      	strh	r3, [r0, #36]	; 0x24
 8019d94:	84c3      	strh	r3, [r0, #38]	; 0x26
 8019d96:	f880 3028 	strb.w	r3, [r0, #40]	; 0x28
 8019d9a:	4a0e      	ldr	r2, [pc, #56]	; (8019dd4 <_ZN8touchgfx6ScreenC1Ev+0x64>)
 8019d9c:	6343      	str	r3, [r0, #52]	; 0x34
 8019d9e:	e9c0 330b 	strd	r3, r3, [r0, #44]	; 0x2c
 8019da2:	4b0d      	ldr	r3, [pc, #52]	; (8019dd8 <_ZN8touchgfx6ScreenC1Ev+0x68>)
 8019da4:	6042      	str	r2, [r0, #4]
 8019da6:	f9b3 6000 	ldrsh.w	r6, [r3]
 8019daa:	6b93      	ldr	r3, [r2, #56]	; 0x38
 8019dac:	4a0b      	ldr	r2, [pc, #44]	; (8019ddc <_ZN8touchgfx6ScreenC1Ev+0x6c>)
 8019dae:	4604      	mov	r4, r0
 8019db0:	2101      	movs	r1, #1
 8019db2:	f880 1029 	strb.w	r1, [r0, #41]	; 0x29
 8019db6:	f880 1038 	strb.w	r1, [r0, #56]	; 0x38
 8019dba:	f9b2 1000 	ldrsh.w	r1, [r2]
 8019dbe:	4628      	mov	r0, r5
 8019dc0:	4798      	blx	r3
 8019dc2:	6863      	ldr	r3, [r4, #4]
 8019dc4:	4628      	mov	r0, r5
 8019dc6:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8019dc8:	4631      	mov	r1, r6
 8019dca:	4798      	blx	r3
 8019dcc:	4620      	mov	r0, r4
 8019dce:	bd70      	pop	{r4, r5, r6, pc}
 8019dd0:	0802fe94 	.word	0x0802fe94
 8019dd4:	0802f5d4 	.word	0x0802f5d4
 8019dd8:	20006c2a 	.word	0x20006c2a
 8019ddc:	20006c28 	.word	0x20006c28

08019de0 <_ZN8touchgfx6Screen4drawEv>:
 8019de0:	b507      	push	{r0, r1, r2, lr}
 8019de2:	4b09      	ldr	r3, [pc, #36]	; (8019e08 <_ZN8touchgfx6Screen4drawEv+0x28>)
 8019de4:	f9b3 2000 	ldrsh.w	r2, [r3]
 8019de8:	4b08      	ldr	r3, [pc, #32]	; (8019e0c <_ZN8touchgfx6Screen4drawEv+0x2c>)
 8019dea:	f8ad 2004 	strh.w	r2, [sp, #4]
 8019dee:	f9b3 3000 	ldrsh.w	r3, [r3]
 8019df2:	f8ad 3006 	strh.w	r3, [sp, #6]
 8019df6:	6803      	ldr	r3, [r0, #0]
 8019df8:	2100      	movs	r1, #0
 8019dfa:	9100      	str	r1, [sp, #0]
 8019dfc:	689b      	ldr	r3, [r3, #8]
 8019dfe:	4669      	mov	r1, sp
 8019e00:	4798      	blx	r3
 8019e02:	b003      	add	sp, #12
 8019e04:	f85d fb04 	ldr.w	pc, [sp], #4
 8019e08:	20006c28 	.word	0x20006c28
 8019e0c:	20006c2a 	.word	0x20006c2a

08019e10 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>:
 8019e10:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019e14:	f9b1 3004 	ldrsh.w	r3, [r1, #4]
 8019e18:	2b00      	cmp	r3, #0
 8019e1a:	b089      	sub	sp, #36	; 0x24
 8019e1c:	4680      	mov	r8, r0
 8019e1e:	460c      	mov	r4, r1
 8019e20:	4615      	mov	r5, r2
 8019e22:	dd0e      	ble.n	8019e42 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8019e24:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
 8019e28:	2b00      	cmp	r3, #0
 8019e2a:	dd0a      	ble.n	8019e42 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8019e2c:	4628      	mov	r0, r5
 8019e2e:	f7ff ff5b 	bl	8019ce8 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 8019e32:	4621      	mov	r1, r4
 8019e34:	f7fe fab4 	bl	80183a0 <_ZNK8touchgfx4Rect9intersectERKS0_>
 8019e38:	69eb      	ldr	r3, [r5, #28]
 8019e3a:	b928      	cbnz	r0, 8019e48 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x38>
 8019e3c:	461d      	mov	r5, r3
 8019e3e:	2b00      	cmp	r3, #0
 8019e40:	d1f4      	bne.n	8019e2c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1c>
 8019e42:	b009      	add	sp, #36	; 0x24
 8019e44:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8019e48:	ae04      	add	r6, sp, #16
 8019e4a:	2b00      	cmp	r3, #0
 8019e4c:	f000 80b5 	beq.w	8019fba <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 8019e50:	682b      	ldr	r3, [r5, #0]
 8019e52:	4629      	mov	r1, r5
 8019e54:	68db      	ldr	r3, [r3, #12]
 8019e56:	a802      	add	r0, sp, #8
 8019e58:	4798      	blx	r3
 8019e5a:	4628      	mov	r0, r5
 8019e5c:	f7ff ff60 	bl	8019d20 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 8019e60:	f8bd 7008 	ldrh.w	r7, [sp, #8]
 8019e64:	4407      	add	r7, r0
 8019e66:	4628      	mov	r0, r5
 8019e68:	f7ff ff6e 	bl	8019d48 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 8019e6c:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 8019e70:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 8019e74:	f8ad 2014 	strh.w	r2, [sp, #20]
 8019e78:	4418      	add	r0, r3
 8019e7a:	4621      	mov	r1, r4
 8019e7c:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 8019e80:	f8ad 0012 	strh.w	r0, [sp, #18]
 8019e84:	b23f      	sxth	r7, r7
 8019e86:	4630      	mov	r0, r6
 8019e88:	f8ad 3016 	strh.w	r3, [sp, #22]
 8019e8c:	f8ad 7010 	strh.w	r7, [sp, #16]
 8019e90:	f7f8 fd00 	bl	8012894 <_ZN8touchgfx4RectaNERKS0_>
 8019e94:	4628      	mov	r0, r5
 8019e96:	f7ff ff27 	bl	8019ce8 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 8019e9a:	4602      	mov	r2, r0
 8019e9c:	e896 0003 	ldmia.w	r6, {r0, r1}
 8019ea0:	ab06      	add	r3, sp, #24
 8019ea2:	e883 0003 	stmia.w	r3, {r0, r1}
 8019ea6:	4611      	mov	r1, r2
 8019ea8:	4618      	mov	r0, r3
 8019eaa:	f7f8 fcf3 	bl	8012894 <_ZN8touchgfx4RectaNERKS0_>
 8019eae:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8019eb2:	f9b4 1000 	ldrsh.w	r1, [r4]
 8019eb6:	f9bd a01a 	ldrsh.w	sl, [sp, #26]
 8019eba:	f9bd b01c 	ldrsh.w	fp, [sp, #28]
 8019ebe:	f9bd 901e 	ldrsh.w	r9, [sp, #30]
 8019ec2:	4299      	cmp	r1, r3
 8019ec4:	d10b      	bne.n	8019ede <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 8019ec6:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 8019eca:	4552      	cmp	r2, sl
 8019ecc:	d107      	bne.n	8019ede <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 8019ece:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 8019ed2:	455a      	cmp	r2, fp
 8019ed4:	d103      	bne.n	8019ede <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 8019ed6:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 8019eda:	454a      	cmp	r2, r9
 8019edc:	d06d      	beq.n	8019fba <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 8019ede:	f1bb 0f00 	cmp.w	fp, #0
 8019ee2:	dd65      	ble.n	8019fb0 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 8019ee4:	f1b9 0f00 	cmp.w	r9, #0
 8019ee8:	dd62      	ble.n	8019fb0 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 8019eea:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 8019eee:	fa1f f08a 	uxth.w	r0, sl
 8019ef2:	4552      	cmp	r2, sl
 8019ef4:	9000      	str	r0, [sp, #0]
 8019ef6:	da12      	bge.n	8019f1e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x10e>
 8019ef8:	9301      	str	r3, [sp, #4]
 8019efa:	9b00      	ldr	r3, [sp, #0]
 8019efc:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8019f00:	f8ad 2012 	strh.w	r2, [sp, #18]
 8019f04:	1a9a      	subs	r2, r3, r2
 8019f06:	f8ad 1010 	strh.w	r1, [sp, #16]
 8019f0a:	f8ad 0014 	strh.w	r0, [sp, #20]
 8019f0e:	f8ad 2016 	strh.w	r2, [sp, #22]
 8019f12:	69ea      	ldr	r2, [r5, #28]
 8019f14:	4631      	mov	r1, r6
 8019f16:	4640      	mov	r0, r8
 8019f18:	f7ff ff7a 	bl	8019e10 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8019f1c:	9b01      	ldr	r3, [sp, #4]
 8019f1e:	f9b4 2000 	ldrsh.w	r2, [r4]
 8019f22:	429a      	cmp	r2, r3
 8019f24:	b29f      	uxth	r7, r3
 8019f26:	da0d      	bge.n	8019f44 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x134>
 8019f28:	f8ad 2010 	strh.w	r2, [sp, #16]
 8019f2c:	1aba      	subs	r2, r7, r2
 8019f2e:	f8ad a012 	strh.w	sl, [sp, #18]
 8019f32:	f8ad 2014 	strh.w	r2, [sp, #20]
 8019f36:	f8ad 9016 	strh.w	r9, [sp, #22]
 8019f3a:	69ea      	ldr	r2, [r5, #28]
 8019f3c:	4631      	mov	r1, r6
 8019f3e:	4640      	mov	r0, r8
 8019f40:	f7ff ff66 	bl	8019e10 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8019f44:	8822      	ldrh	r2, [r4, #0]
 8019f46:	88a3      	ldrh	r3, [r4, #4]
 8019f48:	445f      	add	r7, fp
 8019f4a:	4413      	add	r3, r2
 8019f4c:	b29b      	uxth	r3, r3
 8019f4e:	b2bf      	uxth	r7, r7
 8019f50:	b23a      	sxth	r2, r7
 8019f52:	b219      	sxth	r1, r3
 8019f54:	4291      	cmp	r1, r2
 8019f56:	dd0d      	ble.n	8019f74 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x164>
 8019f58:	1bdb      	subs	r3, r3, r7
 8019f5a:	f8ad 2010 	strh.w	r2, [sp, #16]
 8019f5e:	f8ad a012 	strh.w	sl, [sp, #18]
 8019f62:	f8ad 3014 	strh.w	r3, [sp, #20]
 8019f66:	f8ad 9016 	strh.w	r9, [sp, #22]
 8019f6a:	69ea      	ldr	r2, [r5, #28]
 8019f6c:	4631      	mov	r1, r6
 8019f6e:	4640      	mov	r0, r8
 8019f70:	f7ff ff4e 	bl	8019e10 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8019f74:	88e2      	ldrh	r2, [r4, #6]
 8019f76:	8863      	ldrh	r3, [r4, #2]
 8019f78:	4413      	add	r3, r2
 8019f7a:	9a00      	ldr	r2, [sp, #0]
 8019f7c:	444a      	add	r2, r9
 8019f7e:	b29b      	uxth	r3, r3
 8019f80:	fa1f f982 	uxth.w	r9, r2
 8019f84:	fa0f f289 	sxth.w	r2, r9
 8019f88:	b219      	sxth	r1, r3
 8019f8a:	428a      	cmp	r2, r1
 8019f8c:	da15      	bge.n	8019fba <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 8019f8e:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8019f92:	f9b4 0000 	ldrsh.w	r0, [r4]
 8019f96:	f8ad 1014 	strh.w	r1, [sp, #20]
 8019f9a:	eba3 0309 	sub.w	r3, r3, r9
 8019f9e:	f8ad 0010 	strh.w	r0, [sp, #16]
 8019fa2:	f8ad 2012 	strh.w	r2, [sp, #18]
 8019fa6:	f8ad 3016 	strh.w	r3, [sp, #22]
 8019faa:	69ea      	ldr	r2, [r5, #28]
 8019fac:	4631      	mov	r1, r6
 8019fae:	e001      	b.n	8019fb4 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a4>
 8019fb0:	69ea      	ldr	r2, [r5, #28]
 8019fb2:	4621      	mov	r1, r4
 8019fb4:	4640      	mov	r0, r8
 8019fb6:	f7ff ff2b 	bl	8019e10 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8019fba:	4628      	mov	r0, r5
 8019fbc:	f7ff fe94 	bl	8019ce8 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 8019fc0:	6861      	ldr	r1, [r4, #4]
 8019fc2:	4602      	mov	r2, r0
 8019fc4:	6820      	ldr	r0, [r4, #0]
 8019fc6:	4633      	mov	r3, r6
 8019fc8:	c303      	stmia	r3!, {r0, r1}
 8019fca:	4611      	mov	r1, r2
 8019fcc:	4630      	mov	r0, r6
 8019fce:	f7f8 fc61 	bl	8012894 <_ZN8touchgfx4RectaNERKS0_>
 8019fd2:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 8019fd6:	2b00      	cmp	r3, #0
 8019fd8:	f77f af33 	ble.w	8019e42 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8019fdc:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 8019fe0:	2b00      	cmp	r3, #0
 8019fe2:	f77f af2e 	ble.w	8019e42 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8019fe6:	4628      	mov	r0, r5
 8019fe8:	f7ff fe9a 	bl	8019d20 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 8019fec:	f8bd 3010 	ldrh.w	r3, [sp, #16]
 8019ff0:	1a18      	subs	r0, r3, r0
 8019ff2:	f8ad 0010 	strh.w	r0, [sp, #16]
 8019ff6:	4628      	mov	r0, r5
 8019ff8:	f7ff fea6 	bl	8019d48 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 8019ffc:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 801a000:	1a18      	subs	r0, r3, r0
 801a002:	f8ad 0012 	strh.w	r0, [sp, #18]
 801a006:	682b      	ldr	r3, [r5, #0]
 801a008:	4631      	mov	r1, r6
 801a00a:	689b      	ldr	r3, [r3, #8]
 801a00c:	4628      	mov	r0, r5
 801a00e:	4798      	blx	r3
 801a010:	e717      	b.n	8019e42 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>

0801a012 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>:
 801a012:	b570      	push	{r4, r5, r6, lr}
 801a014:	460c      	mov	r4, r1
 801a016:	b086      	sub	sp, #24
 801a018:	1d06      	adds	r6, r0, #4
 801a01a:	2300      	movs	r3, #0
 801a01c:	4631      	mov	r1, r6
 801a01e:	4605      	mov	r5, r0
 801a020:	a802      	add	r0, sp, #8
 801a022:	9301      	str	r3, [sp, #4]
 801a024:	f7ff fbd2 	bl	80197cc <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801a028:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 801a02c:	8822      	ldrh	r2, [r4, #0]
 801a02e:	f8bd 100a 	ldrh.w	r1, [sp, #10]
 801a032:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 801a036:	f8ad 0014 	strh.w	r0, [sp, #20]
 801a03a:	1ad2      	subs	r2, r2, r3
 801a03c:	8863      	ldrh	r3, [r4, #2]
 801a03e:	f8ad 2010 	strh.w	r2, [sp, #16]
 801a042:	1a5b      	subs	r3, r3, r1
 801a044:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 801a048:	f8ad 1016 	strh.w	r1, [sp, #22]
 801a04c:	aa01      	add	r2, sp, #4
 801a04e:	a904      	add	r1, sp, #16
 801a050:	4630      	mov	r0, r6
 801a052:	f8ad 3012 	strh.w	r3, [sp, #18]
 801a056:	f7f8 fcf5 	bl	8012a44 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>
 801a05a:	9a01      	ldr	r2, [sp, #4]
 801a05c:	b11a      	cbz	r2, 801a066 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE+0x54>
 801a05e:	4621      	mov	r1, r4
 801a060:	4628      	mov	r0, r5
 801a062:	f7ff fed5 	bl	8019e10 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 801a066:	b006      	add	sp, #24
 801a068:	bd70      	pop	{r4, r5, r6, pc}

0801a06a <_ZN8touchgfx6Screen4drawERNS_4RectE>:
 801a06a:	b530      	push	{r4, r5, lr}
 801a06c:	4602      	mov	r2, r0
 801a06e:	4604      	mov	r4, r0
 801a070:	f852 0f08 	ldr.w	r0, [r2, #8]!
 801a074:	b085      	sub	sp, #20
 801a076:	460d      	mov	r5, r1
 801a078:	6851      	ldr	r1, [r2, #4]
 801a07a:	466b      	mov	r3, sp
 801a07c:	c303      	stmia	r3!, {r0, r1}
 801a07e:	4629      	mov	r1, r5
 801a080:	4668      	mov	r0, sp
 801a082:	f7f8 fc07 	bl	8012894 <_ZN8touchgfx4RectaNERKS0_>
 801a086:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 801a08a:	b12b      	cbz	r3, 801a098 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2e>
 801a08c:	4669      	mov	r1, sp
 801a08e:	4620      	mov	r0, r4
 801a090:	f7ff ffbf 	bl	801a012 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>
 801a094:	b005      	add	sp, #20
 801a096:	bd30      	pop	{r4, r5, pc}
 801a098:	3404      	adds	r4, #4
 801a09a:	4621      	mov	r1, r4
 801a09c:	a802      	add	r0, sp, #8
 801a09e:	f7ff fb95 	bl	80197cc <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801a0a2:	f8bd 3000 	ldrh.w	r3, [sp]
 801a0a6:	f8bd 2008 	ldrh.w	r2, [sp, #8]
 801a0aa:	1a9b      	subs	r3, r3, r2
 801a0ac:	f8ad 3000 	strh.w	r3, [sp]
 801a0b0:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 801a0b4:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 801a0b8:	4669      	mov	r1, sp
 801a0ba:	1a9b      	subs	r3, r3, r2
 801a0bc:	4620      	mov	r0, r4
 801a0be:	f8ad 3002 	strh.w	r3, [sp, #2]
 801a0c2:	f7f8 fc86 	bl	80129d2 <_ZNK8touchgfx9Container4drawERKNS_4RectE>
 801a0c6:	e7e5      	b.n	801a094 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2a>

0801a0c8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>:
 801a0c8:	680a      	ldr	r2, [r1, #0]
 801a0ca:	460b      	mov	r3, r1
 801a0cc:	6992      	ldr	r2, [r2, #24]
 801a0ce:	1d01      	adds	r1, r0, #4
 801a0d0:	4618      	mov	r0, r3
 801a0d2:	4710      	bx	r2

0801a0d4 <_ZN8touchgfx15EasingEquations14linearEaseNoneEtsst>:
 801a0d4:	4298      	cmp	r0, r3
 801a0d6:	d200      	bcs.n	801a0da <_ZN8touchgfx15EasingEquations14linearEaseNoneEtsst+0x6>
 801a0d8:	b913      	cbnz	r3, 801a0e0 <_ZN8touchgfx15EasingEquations14linearEaseNoneEtsst+0xc>
 801a0da:	440a      	add	r2, r1
 801a0dc:	b210      	sxth	r0, r2
 801a0de:	4770      	bx	lr
 801a0e0:	ee07 2a90 	vmov	s15, r2
 801a0e4:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 801a0e8:	ee07 0a90 	vmov	s15, r0
 801a0ec:	eef8 7a67 	vcvt.f32.u32	s15, s15
 801a0f0:	ee67 7a27 	vmul.f32	s15, s14, s15
 801a0f4:	ee07 3a10 	vmov	s14, r3
 801a0f8:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 801a0fc:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 801a100:	ee07 1a90 	vmov	s15, r1
 801a104:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801a108:	ee77 7a27 	vadd.f32	s15, s14, s15
 801a10c:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 801a110:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 801a114:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a118:	bfcc      	ite	gt
 801a11a:	ee77 7a87 	vaddgt.f32	s15, s15, s14
 801a11e:	ee77 7ac7 	vsuble.f32	s15, s15, s14
 801a122:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 801a126:	ee17 3a90 	vmov	r3, s15
 801a12a:	b218      	sxth	r0, r3
 801a12c:	4770      	bx	lr

0801a12e <_ZN8touchgfx12TextProviderC1Ev>:
 801a12e:	b538      	push	{r3, r4, r5, lr}
 801a130:	2500      	movs	r5, #0
 801a132:	2302      	movs	r3, #2
 801a134:	4604      	mov	r4, r0
 801a136:	e9c0 5500 	strd	r5, r5, [r0]
 801a13a:	7403      	strb	r3, [r0, #16]
 801a13c:	6145      	str	r5, [r0, #20]
 801a13e:	7605      	strb	r5, [r0, #24]
 801a140:	83c5      	strh	r5, [r0, #30]
 801a142:	8405      	strh	r5, [r0, #32]
 801a144:	86c5      	strh	r5, [r0, #54]	; 0x36
 801a146:	8705      	strh	r5, [r0, #56]	; 0x38
 801a148:	87c5      	strh	r5, [r0, #62]	; 0x3e
 801a14a:	f8a0 5040 	strh.w	r5, [r0, #64]	; 0x40
 801a14e:	e9c0 5511 	strd	r5, r5, [r0, #68]	; 0x44
 801a152:	220e      	movs	r2, #14
 801a154:	4629      	mov	r1, r5
 801a156:	304c      	adds	r0, #76	; 0x4c
 801a158:	f010 ffb9 	bl	802b0ce <memset>
 801a15c:	2301      	movs	r3, #1
 801a15e:	4620      	mov	r0, r4
 801a160:	f8a4 505a 	strh.w	r5, [r4, #90]	; 0x5a
 801a164:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 801a168:	f8a4 505e 	strh.w	r5, [r4, #94]	; 0x5e
 801a16c:	f884 3060 	strb.w	r3, [r4, #96]	; 0x60
 801a170:	f884 5061 	strb.w	r5, [r4, #97]	; 0x61
 801a174:	f7f4 fed2 	bl	800ef1c <_ZN8touchgfx12TextProvider18initializeInternalEv>
 801a178:	4620      	mov	r0, r4
 801a17a:	bd38      	pop	{r3, r4, r5, pc}

0801a17c <_ZN8touchgfx12TextProvider11endOfStringEv>:
 801a17c:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 801a17e:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801a182:	8c40      	ldrh	r0, [r0, #34]	; 0x22
 801a184:	fab0 f080 	clz	r0, r0
 801a188:	0940      	lsrs	r0, r0, #5
 801a18a:	4770      	bx	lr

0801a18c <_ZN8touchgfx12TextProvider19getNextCharInternalEv>:
 801a18c:	b530      	push	{r4, r5, lr}
 801a18e:	2500      	movs	r5, #0
 801a190:	2401      	movs	r4, #1
 801a192:	6843      	ldr	r3, [r0, #4]
 801a194:	b913      	cbnz	r3, 801a19c <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x10>
 801a196:	6803      	ldr	r3, [r0, #0]
 801a198:	b313      	cbz	r3, 801a1e0 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 801a19a:	6043      	str	r3, [r0, #4]
 801a19c:	7e03      	ldrb	r3, [r0, #24]
 801a19e:	b143      	cbz	r3, 801a1b2 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x26>
 801a1a0:	6943      	ldr	r3, [r0, #20]
 801a1a2:	b12b      	cbz	r3, 801a1b0 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 801a1a4:	881a      	ldrh	r2, [r3, #0]
 801a1a6:	b11a      	cbz	r2, 801a1b0 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 801a1a8:	1c9a      	adds	r2, r3, #2
 801a1aa:	6142      	str	r2, [r0, #20]
 801a1ac:	8818      	ldrh	r0, [r3, #0]
 801a1ae:	bd30      	pop	{r4, r5, pc}
 801a1b0:	7605      	strb	r5, [r0, #24]
 801a1b2:	6843      	ldr	r3, [r0, #4]
 801a1b4:	8819      	ldrh	r1, [r3, #0]
 801a1b6:	b199      	cbz	r1, 801a1e0 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 801a1b8:	1c9a      	adds	r2, r3, #2
 801a1ba:	2902      	cmp	r1, #2
 801a1bc:	6042      	str	r2, [r0, #4]
 801a1be:	d1f5      	bne.n	801a1ac <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x20>
 801a1c0:	7c03      	ldrb	r3, [r0, #16]
 801a1c2:	2b01      	cmp	r3, #1
 801a1c4:	d8e5      	bhi.n	801a192 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 801a1c6:	1c5a      	adds	r2, r3, #1
 801a1c8:	3302      	adds	r3, #2
 801a1ca:	7402      	strb	r2, [r0, #16]
 801a1cc:	f850 3023 	ldr.w	r3, [r0, r3, lsl #2]
 801a1d0:	6143      	str	r3, [r0, #20]
 801a1d2:	2b00      	cmp	r3, #0
 801a1d4:	d0dd      	beq.n	801a192 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 801a1d6:	881b      	ldrh	r3, [r3, #0]
 801a1d8:	2b00      	cmp	r3, #0
 801a1da:	d0da      	beq.n	801a192 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 801a1dc:	7604      	strb	r4, [r0, #24]
 801a1de:	e7d8      	b.n	801a192 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 801a1e0:	2000      	movs	r0, #0
 801a1e2:	e7e4      	b.n	801a1ae <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x22>

0801a1e4 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>:
 801a1e4:	b430      	push	{r4, r5}
 801a1e6:	6001      	str	r1, [r0, #0]
 801a1e8:	2100      	movs	r1, #0
 801a1ea:	6041      	str	r1, [r0, #4]
 801a1ec:	6815      	ldr	r5, [r2, #0]
 801a1ee:	6085      	str	r5, [r0, #8]
 801a1f0:	6852      	ldr	r2, [r2, #4]
 801a1f2:	6443      	str	r3, [r0, #68]	; 0x44
 801a1f4:	9b02      	ldr	r3, [sp, #8]
 801a1f6:	60c2      	str	r2, [r0, #12]
 801a1f8:	7401      	strb	r1, [r0, #16]
 801a1fa:	6141      	str	r1, [r0, #20]
 801a1fc:	7601      	strb	r1, [r0, #24]
 801a1fe:	8701      	strh	r1, [r0, #56]	; 0x38
 801a200:	8401      	strh	r1, [r0, #32]
 801a202:	f8a0 1040 	strh.w	r1, [r0, #64]	; 0x40
 801a206:	6483      	str	r3, [r0, #72]	; 0x48
 801a208:	bc30      	pop	{r4, r5}
 801a20a:	f7f4 be87 	b.w	800ef1c <_ZN8touchgfx12TextProvider18initializeInternalEv>

0801a20e <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>:
 801a20e:	b408      	push	{r3}
 801a210:	b510      	push	{r4, lr}
 801a212:	b085      	sub	sp, #20
 801a214:	ac07      	add	r4, sp, #28
 801a216:	f854 3b04 	ldr.w	r3, [r4], #4
 801a21a:	9300      	str	r3, [sp, #0]
 801a21c:	4613      	mov	r3, r2
 801a21e:	4622      	mov	r2, r4
 801a220:	9403      	str	r4, [sp, #12]
 801a222:	f7ff ffdf 	bl	801a1e4 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 801a226:	b005      	add	sp, #20
 801a228:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801a22c:	b001      	add	sp, #4
 801a22e:	4770      	bx	lr

0801a230 <_ZN8touchgfx12TextProvider20unicodeConverterInitEv>:
 801a230:	2301      	movs	r3, #1
 801a232:	f880 3060 	strb.w	r3, [r0, #96]	; 0x60
 801a236:	4770      	bx	lr

0801a238 <_ZN8touchgfx12TextProvider16unicodeConverterEh>:
 801a238:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a23c:	f8b0 b036 	ldrh.w	fp, [r0, #54]	; 0x36
 801a240:	eb00 064b 	add.w	r6, r0, fp, lsl #1
 801a244:	b087      	sub	sp, #28
 801a246:	8c73      	ldrh	r3, [r6, #34]	; 0x22
 801a248:	2b00      	cmp	r3, #0
 801a24a:	f000 813e 	beq.w	801a4ca <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x292>
 801a24e:	2b7f      	cmp	r3, #127	; 0x7f
 801a250:	d819      	bhi.n	801a286 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x4e>
 801a252:	2901      	cmp	r1, #1
 801a254:	d117      	bne.n	801a286 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x4e>
 801a256:	2b3c      	cmp	r3, #60	; 0x3c
 801a258:	f000 83d2 	beq.w	801aa00 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x7c8>
 801a25c:	2b3e      	cmp	r3, #62	; 0x3e
 801a25e:	f000 83d1 	beq.w	801aa04 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x7cc>
 801a262:	2b28      	cmp	r3, #40	; 0x28
 801a264:	f000 83d0 	beq.w	801aa08 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x7d0>
 801a268:	2b29      	cmp	r3, #41	; 0x29
 801a26a:	f000 83cf 	beq.w	801aa0c <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x7d4>
 801a26e:	2b5b      	cmp	r3, #91	; 0x5b
 801a270:	f000 83ce 	beq.w	801aa10 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x7d8>
 801a274:	2b5d      	cmp	r3, #93	; 0x5d
 801a276:	f000 83cd 	beq.w	801aa14 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x7dc>
 801a27a:	2b7b      	cmp	r3, #123	; 0x7b
 801a27c:	f000 83cc 	beq.w	801aa18 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x7e0>
 801a280:	2b7d      	cmp	r3, #125	; 0x7d
 801a282:	f000 83cb 	beq.w	801aa1c <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x7e4>
 801a286:	f10b 0201 	add.w	r2, fp, #1
 801a28a:	b292      	uxth	r2, r2
 801a28c:	2a09      	cmp	r2, #9
 801a28e:	4611      	mov	r1, r2
 801a290:	bf88      	it	hi
 801a292:	f1a2 010a 	subhi.w	r1, r2, #10
 801a296:	eb00 0141 	add.w	r1, r0, r1, lsl #1
 801a29a:	9102      	str	r1, [sp, #8]
 801a29c:	8c4d      	ldrh	r5, [r1, #34]	; 0x22
 801a29e:	f10b 0102 	add.w	r1, fp, #2
 801a2a2:	b289      	uxth	r1, r1
 801a2a4:	2909      	cmp	r1, #9
 801a2a6:	bf88      	it	hi
 801a2a8:	390a      	subhi	r1, #10
 801a2aa:	eb00 0141 	add.w	r1, r0, r1, lsl #1
 801a2ae:	8c4c      	ldrh	r4, [r1, #34]	; 0x22
 801a2b0:	f240 6151 	movw	r1, #1617	; 0x651
 801a2b4:	428d      	cmp	r5, r1
 801a2b6:	d125      	bne.n	801a304 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0xcc>
 801a2b8:	f2a3 614b 	subw	r1, r3, #1611	; 0x64b
 801a2bc:	b289      	uxth	r1, r1
 801a2be:	2914      	cmp	r1, #20
 801a2c0:	d914      	bls.n	801a2ec <_ZN8touchgfx12TextProvider16unicodeConverterEh+0xb4>
 801a2c2:	f023 0104 	bic.w	r1, r3, #4
 801a2c6:	b289      	uxth	r1, r1
 801a2c8:	f5b1 6fce 	cmp.w	r1, #1648	; 0x670
 801a2cc:	d00e      	beq.n	801a2ec <_ZN8touchgfx12TextProvider16unicodeConverterEh+0xb4>
 801a2ce:	f2a3 61d6 	subw	r1, r3, #1750	; 0x6d6
 801a2d2:	b289      	uxth	r1, r1
 801a2d4:	2917      	cmp	r1, #23
 801a2d6:	d804      	bhi.n	801a2e2 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0xaa>
 801a2d8:	4fad      	ldr	r7, [pc, #692]	; (801a590 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x358>)
 801a2da:	fa27 f101 	lsr.w	r1, r7, r1
 801a2de:	07c9      	lsls	r1, r1, #31
 801a2e0:	d404      	bmi.n	801a2ec <_ZN8touchgfx12TextProvider16unicodeConverterEh+0xb4>
 801a2e2:	f6a3 01e4 	subw	r1, r3, #2276	; 0x8e4
 801a2e6:	b289      	uxth	r1, r1
 801a2e8:	291a      	cmp	r1, #26
 801a2ea:	d80b      	bhi.n	801a304 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0xcc>
 801a2ec:	2a0a      	cmp	r2, #10
 801a2ee:	bf28      	it	cs
 801a2f0:	2200      	movcs	r2, #0
 801a2f2:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 801a2f6:	f240 6151 	movw	r1, #1617	; 0x651
 801a2fa:	8471      	strh	r1, [r6, #34]	; 0x22
 801a2fc:	8453      	strh	r3, [r2, #34]	; 0x22
 801a2fe:	461a      	mov	r2, r3
 801a300:	462b      	mov	r3, r5
 801a302:	4615      	mov	r5, r2
 801a304:	f2a3 6222 	subw	r2, r3, #1570	; 0x622
 801a308:	b292      	uxth	r2, r2
 801a30a:	2a18      	cmp	r2, #24
 801a30c:	d90d      	bls.n	801a32a <_ZN8touchgfx12TextProvider16unicodeConverterEh+0xf2>
 801a30e:	f5a3 62c8 	sub.w	r2, r3, #1600	; 0x640
 801a312:	b292      	uxth	r2, r2
 801a314:	2a0a      	cmp	r2, #10
 801a316:	d908      	bls.n	801a32a <_ZN8touchgfx12TextProvider16unicodeConverterEh+0xf2>
 801a318:	f46f 67ce 	mvn.w	r7, #1648	; 0x670
 801a31c:	19da      	adds	r2, r3, r7
 801a31e:	b292      	uxth	r2, r2
 801a320:	2a62      	cmp	r2, #98	; 0x62
 801a322:	d902      	bls.n	801a32a <_ZN8touchgfx12TextProvider16unicodeConverterEh+0xf2>
 801a324:	2b20      	cmp	r3, #32
 801a326:	f040 80d0 	bne.w	801a4ca <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x292>
 801a32a:	f10b 0103 	add.w	r1, fp, #3
 801a32e:	b289      	uxth	r1, r1
 801a330:	2909      	cmp	r1, #9
 801a332:	460a      	mov	r2, r1
 801a334:	bf88      	it	hi
 801a336:	f1a1 020a 	subhi.w	r2, r1, #10
 801a33a:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 801a33e:	f8b2 c022 	ldrh.w	ip, [r2, #34]	; 0x22
 801a342:	f10b 0204 	add.w	r2, fp, #4
 801a346:	b292      	uxth	r2, r2
 801a348:	2a09      	cmp	r2, #9
 801a34a:	bf88      	it	hi
 801a34c:	3a0a      	subhi	r2, #10
 801a34e:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 801a352:	8c52      	ldrh	r2, [r2, #34]	; 0x22
 801a354:	f2a2 6622 	subw	r6, r2, #1570	; 0x622
 801a358:	2e18      	cmp	r6, #24
 801a35a:	f240 80ba 	bls.w	801a4d2 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x29a>
 801a35e:	f5a2 66c8 	sub.w	r6, r2, #1600	; 0x640
 801a362:	2e0a      	cmp	r6, #10
 801a364:	f240 80b5 	bls.w	801a4d2 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x29a>
 801a368:	f46f 66ce 	mvn.w	r6, #1648	; 0x670
 801a36c:	4432      	add	r2, r6
 801a36e:	2a62      	cmp	r2, #98	; 0x62
 801a370:	f240 80af 	bls.w	801a4d2 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x29a>
 801a374:	f2a3 6227 	subw	r2, r3, #1575	; 0x627
 801a378:	b292      	uxth	r2, r2
 801a37a:	2a21      	cmp	r2, #33	; 0x21
 801a37c:	f200 80a9 	bhi.w	801a4d2 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x29a>
 801a380:	f2a4 6227 	subw	r2, r4, #1575	; 0x627
 801a384:	b292      	uxth	r2, r2
 801a386:	2a23      	cmp	r2, #35	; 0x23
 801a388:	d82e      	bhi.n	801a3e8 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x1b0>
 801a38a:	f2ac 622f 	subw	r2, ip, #1583	; 0x62f
 801a38e:	b292      	uxth	r2, r2
 801a390:	2a18      	cmp	r2, #24
 801a392:	d829      	bhi.n	801a3e8 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x1b0>
 801a394:	eb04 0284 	add.w	r2, r4, r4, lsl #2
 801a398:	eb02 0282 	add.w	r2, r2, r2, lsl #2
 801a39c:	f5a2 4282 	sub.w	r2, r2, #16640	; 0x4100
 801a3a0:	ebc3 1603 	rsb	r6, r3, r3, lsl #4
 801a3a4:	3a1a      	subs	r2, #26
 801a3a6:	ebc6 1606 	rsb	r6, r6, r6, lsl #4
 801a3aa:	eb02 0286 	add.w	r2, r2, r6, lsl #2
 801a3ae:	6c87      	ldr	r7, [r0, #72]	; 0x48
 801a3b0:	4462      	add	r2, ip
 801a3b2:	b292      	uxth	r2, r2
 801a3b4:	b1c7      	cbz	r7, 801a3e8 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x1b0>
 801a3b6:	8b3e      	ldrh	r6, [r7, #24]
 801a3b8:	b1b6      	cbz	r6, 801a3e8 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x1b0>
 801a3ba:	f8d7 9000 	ldr.w	r9, [r7]
 801a3be:	f04f 0e00 	mov.w	lr, #0
 801a3c2:	eb06 070e 	add.w	r7, r6, lr
 801a3c6:	f04f 080a 	mov.w	r8, #10
 801a3ca:	107f      	asrs	r7, r7, #1
 801a3cc:	fb08 fa07 	mul.w	sl, r8, r7
 801a3d0:	eb09 080a 	add.w	r8, r9, sl
 801a3d4:	f839 a00a 	ldrh.w	sl, [r9, sl]
 801a3d8:	4552      	cmp	r2, sl
 801a3da:	d961      	bls.n	801a4a0 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x268>
 801a3dc:	f107 0e01 	add.w	lr, r7, #1
 801a3e0:	e000      	b.n	801a3e4 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x1ac>
 801a3e2:	463e      	mov	r6, r7
 801a3e4:	45b6      	cmp	lr, r6
 801a3e6:	dbec      	blt.n	801a3c2 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x18a>
 801a3e8:	f5a3 62c5 	sub.w	r2, r3, #1576	; 0x628
 801a3ec:	b292      	uxth	r2, r2
 801a3ee:	2a22      	cmp	r2, #34	; 0x22
 801a3f0:	d971      	bls.n	801a4d6 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x29e>
 801a3f2:	f2a5 624b 	subw	r2, r5, #1611	; 0x64b
 801a3f6:	b292      	uxth	r2, r2
 801a3f8:	2a14      	cmp	r2, #20
 801a3fa:	d918      	bls.n	801a42e <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x1f6>
 801a3fc:	f5b5 6fce 	cmp.w	r5, #1648	; 0x670
 801a400:	d015      	beq.n	801a42e <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x1f6>
 801a402:	f240 6274 	movw	r2, #1652	; 0x674
 801a406:	4295      	cmp	r5, r2
 801a408:	d011      	beq.n	801a42e <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x1f6>
 801a40a:	f2a5 62d6 	subw	r2, r5, #1750	; 0x6d6
 801a40e:	b292      	uxth	r2, r2
 801a410:	2a17      	cmp	r2, #23
 801a412:	d804      	bhi.n	801a41e <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x1e6>
 801a414:	495e      	ldr	r1, [pc, #376]	; (801a590 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x358>)
 801a416:	fa21 f202 	lsr.w	r2, r1, r2
 801a41a:	07d2      	lsls	r2, r2, #31
 801a41c:	d407      	bmi.n	801a42e <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x1f6>
 801a41e:	f6a5 02e4 	subw	r2, r5, #2276	; 0x8e4
 801a422:	b292      	uxth	r2, r2
 801a424:	2a1a      	cmp	r2, #26
 801a426:	d902      	bls.n	801a42e <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x1f6>
 801a428:	46a4      	mov	ip, r4
 801a42a:	462c      	mov	r4, r5
 801a42c:	2500      	movs	r5, #0
 801a42e:	2b20      	cmp	r3, #32
 801a430:	d005      	beq.n	801a43e <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x206>
 801a432:	f2a3 6226 	subw	r2, r3, #1574	; 0x626
 801a436:	b292      	uxth	r2, r2
 801a438:	2a24      	cmp	r2, #36	; 0x24
 801a43a:	f200 8136 	bhi.w	801a6aa <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x472>
 801a43e:	f2a4 6222 	subw	r2, r4, #1570	; 0x622
 801a442:	b292      	uxth	r2, r2
 801a444:	2ab3      	cmp	r2, #179	; 0xb3
 801a446:	f200 8130 	bhi.w	801a6aa <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x472>
 801a44a:	f240 6244 	movw	r2, #1604	; 0x644
 801a44e:	4294      	cmp	r4, r2
 801a450:	d104      	bne.n	801a45c <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x224>
 801a452:	f240 6227 	movw	r2, #1575	; 0x627
 801a456:	4594      	cmp	ip, r2
 801a458:	f000 8127 	beq.w	801a6aa <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x472>
 801a45c:	f240 624f 	movw	r2, #1615	; 0x64f
 801a460:	4295      	cmp	r5, r2
 801a462:	f000 8122 	beq.w	801a6aa <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x472>
 801a466:	6c81      	ldr	r1, [r0, #72]	; 0x48
 801a468:	2900      	cmp	r1, #0
 801a46a:	f000 811e 	beq.w	801a6aa <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x472>
 801a46e:	8b8a      	ldrh	r2, [r1, #28]
 801a470:	2a00      	cmp	r2, #0
 801a472:	f000 811b 	beq.w	801a6ac <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x474>
 801a476:	b2e4      	uxtb	r4, r4
 801a478:	ea44 2403 	orr.w	r4, r4, r3, lsl #8
 801a47c:	6889      	ldr	r1, [r1, #8]
 801a47e:	b2a4      	uxth	r4, r4
 801a480:	2700      	movs	r7, #0
 801a482:	f04f 080a 	mov.w	r8, #10
 801a486:	19d6      	adds	r6, r2, r7
 801a488:	1076      	asrs	r6, r6, #1
 801a48a:	fb08 fc06 	mul.w	ip, r8, r6
 801a48e:	eb01 0e0c 	add.w	lr, r1, ip
 801a492:	f831 c00c 	ldrh.w	ip, [r1, ip]
 801a496:	4564      	cmp	r4, ip
 801a498:	f240 810a 	bls.w	801a6b0 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x478>
 801a49c:	1c77      	adds	r7, r6, #1
 801a49e:	e101      	b.n	801a6a4 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x46c>
 801a4a0:	d39f      	bcc.n	801a3e2 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x1aa>
 801a4a2:	f8b8 2004 	ldrh.w	r2, [r8, #4]
 801a4a6:	42aa      	cmp	r2, r5
 801a4a8:	d19e      	bne.n	801a3e8 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x1b0>
 801a4aa:	8f03      	ldrh	r3, [r0, #56]	; 0x38
 801a4ac:	86c1      	strh	r1, [r0, #54]	; 0x36
 801a4ae:	3b03      	subs	r3, #3
 801a4b0:	2909      	cmp	r1, #9
 801a4b2:	8703      	strh	r3, [r0, #56]	; 0x38
 801a4b4:	bf88      	it	hi
 801a4b6:	f1ab 0207 	subhi.w	r2, fp, #7
 801a4ba:	f04f 0301 	mov.w	r3, #1
 801a4be:	bf88      	it	hi
 801a4c0:	86c2      	strhhi	r2, [r0, #54]	; 0x36
 801a4c2:	f880 3060 	strb.w	r3, [r0, #96]	; 0x60
 801a4c6:	f8b8 3002 	ldrh.w	r3, [r8, #2]
 801a4ca:	4618      	mov	r0, r3
 801a4cc:	b007      	add	sp, #28
 801a4ce:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801a4d2:	2b20      	cmp	r3, #32
 801a4d4:	d188      	bne.n	801a3e8 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x1b0>
 801a4d6:	f2a5 622c 	subw	r2, r5, #1580	; 0x62c
 801a4da:	b292      	uxth	r2, r2
 801a4dc:	2a25      	cmp	r2, #37	; 0x25
 801a4de:	d888      	bhi.n	801a3f2 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x1ba>
 801a4e0:	f2a4 622c 	subw	r2, r4, #1580	; 0x62c
 801a4e4:	b291      	uxth	r1, r2
 801a4e6:	2925      	cmp	r1, #37	; 0x25
 801a4e8:	d914      	bls.n	801a514 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x2dc>
 801a4ea:	f5b4 6fce 	cmp.w	r4, #1648	; 0x670
 801a4ee:	f000 82ec 	beq.w	801aaca <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x892>
 801a4f2:	f240 62d2 	movw	r2, #1746	; 0x6d2
 801a4f6:	4294      	cmp	r4, r2
 801a4f8:	f47f af7b 	bne.w	801a3f2 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x1ba>
 801a4fc:	eb05 0285 	add.w	r2, r5, r5, lsl #2
 801a500:	00d2      	lsls	r2, r2, #3
 801a502:	2b20      	cmp	r3, #32
 801a504:	b292      	uxth	r2, r2
 801a506:	d107      	bne.n	801a518 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x2e0>
 801a508:	f5a2 5240 	sub.w	r2, r2, #12288	; 0x3000
 801a50c:	3a30      	subs	r2, #48	; 0x30
 801a50e:	b292      	uxth	r2, r2
 801a510:	2127      	movs	r1, #39	; 0x27
 801a512:	e017      	b.n	801a544 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x30c>
 801a514:	2b20      	cmp	r3, #32
 801a516:	d034      	beq.n	801a582 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x34a>
 801a518:	eb03 0243 	add.w	r2, r3, r3, lsl #1
 801a51c:	ebc3 1242 	rsb	r2, r3, r2, lsl #5
 801a520:	0112      	lsls	r2, r2, #4
 801a522:	f502 42e5 	add.w	r2, r2, #29312	; 0x7280
 801a526:	b292      	uxth	r2, r2
 801a528:	eb05 0685 	add.w	r6, r5, r5, lsl #2
 801a52c:	eb02 02c6 	add.w	r2, r2, r6, lsl #3
 801a530:	f5b4 6fce 	cmp.w	r4, #1648	; 0x670
 801a534:	b292      	uxth	r2, r2
 801a536:	f000 82d2 	beq.w	801aade <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x8a6>
 801a53a:	f240 66d2 	movw	r6, #1746	; 0x6d2
 801a53e:	42b4      	cmp	r4, r6
 801a540:	bf08      	it	eq
 801a542:	2127      	moveq	r1, #39	; 0x27
 801a544:	6c87      	ldr	r7, [r0, #72]	; 0x48
 801a546:	2f00      	cmp	r7, #0
 801a548:	f43f af53 	beq.w	801a3f2 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x1ba>
 801a54c:	8b7e      	ldrh	r6, [r7, #26]
 801a54e:	2e00      	cmp	r6, #0
 801a550:	f43f af4f 	beq.w	801a3f2 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x1ba>
 801a554:	440a      	add	r2, r1
 801a556:	f502 6212 	add.w	r2, r2, #2336	; 0x920
 801a55a:	6879      	ldr	r1, [r7, #4]
 801a55c:	b292      	uxth	r2, r2
 801a55e:	f04f 0e00 	mov.w	lr, #0
 801a562:	f04f 0a0a 	mov.w	sl, #10
 801a566:	eb06 070e 	add.w	r7, r6, lr
 801a56a:	107f      	asrs	r7, r7, #1
 801a56c:	fb0a f807 	mul.w	r8, sl, r7
 801a570:	eb01 0908 	add.w	r9, r1, r8
 801a574:	f831 8008 	ldrh.w	r8, [r1, r8]
 801a578:	4542      	cmp	r2, r8
 801a57a:	d90b      	bls.n	801a594 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x35c>
 801a57c:	f107 0e01 	add.w	lr, r7, #1
 801a580:	e003      	b.n	801a58a <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x352>
 801a582:	f64c 72d0 	movw	r2, #53200	; 0xcfd0
 801a586:	e7cf      	b.n	801a528 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x2f0>
 801a588:	463e      	mov	r6, r7
 801a58a:	4576      	cmp	r6, lr
 801a58c:	dceb      	bgt.n	801a566 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x32e>
 801a58e:	e730      	b.n	801a3f2 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x1ba>
 801a590:	00f67e7f 	.word	0x00f67e7f
 801a594:	d3f8      	bcc.n	801a588 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x350>
 801a596:	f109 0102 	add.w	r1, r9, #2
 801a59a:	2500      	movs	r5, #0
 801a59c:	2202      	movs	r2, #2
 801a59e:	2d00      	cmp	r5, #0
 801a5a0:	bf0c      	ite	eq
 801a5a2:	4614      	moveq	r4, r2
 801a5a4:	1c54      	addne	r4, r2, #1
 801a5a6:	3401      	adds	r4, #1
 801a5a8:	445c      	add	r4, fp
 801a5aa:	f8df c388 	ldr.w	ip, [pc, #904]	; 801a934 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x6fc>
 801a5ae:	b2a4      	uxth	r4, r4
 801a5b0:	2c09      	cmp	r4, #9
 801a5b2:	4626      	mov	r6, r4
 801a5b4:	bf88      	it	hi
 801a5b6:	f1a4 060a 	subhi.w	r6, r4, #10
 801a5ba:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 801a5be:	8c76      	ldrh	r6, [r6, #34]	; 0x22
 801a5c0:	f2a6 674b 	subw	r7, r6, #1611	; 0x64b
 801a5c4:	2f14      	cmp	r7, #20
 801a5c6:	d978      	bls.n	801a6ba <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x482>
 801a5c8:	f026 0704 	bic.w	r7, r6, #4
 801a5cc:	f5b7 6fce 	cmp.w	r7, #1648	; 0x670
 801a5d0:	d073      	beq.n	801a6ba <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x482>
 801a5d2:	f2a6 67d6 	subw	r7, r6, #1750	; 0x6d6
 801a5d6:	b2bf      	uxth	r7, r7
 801a5d8:	2f17      	cmp	r7, #23
 801a5da:	d803      	bhi.n	801a5e4 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x3ac>
 801a5dc:	fa2c f707 	lsr.w	r7, ip, r7
 801a5e0:	07ff      	lsls	r7, r7, #31
 801a5e2:	d46a      	bmi.n	801a6ba <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x482>
 801a5e4:	f6a6 07e4 	subw	r7, r6, #2276	; 0x8e4
 801a5e8:	2f1a      	cmp	r7, #26
 801a5ea:	d966      	bls.n	801a6ba <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x482>
 801a5ec:	f2a6 6422 	subw	r4, r6, #1570	; 0x622
 801a5f0:	2c18      	cmp	r4, #24
 801a5f2:	d965      	bls.n	801a6c0 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x488>
 801a5f4:	f5a6 64c8 	sub.w	r4, r6, #1600	; 0x640
 801a5f8:	2c0a      	cmp	r4, #10
 801a5fa:	d961      	bls.n	801a6c0 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x488>
 801a5fc:	f46f 6cce 	mvn.w	ip, #1648	; 0x670
 801a600:	4466      	add	r6, ip
 801a602:	2e62      	cmp	r6, #98	; 0x62
 801a604:	bf94      	ite	ls
 801a606:	2400      	movls	r4, #0
 801a608:	2401      	movhi	r4, #1
 801a60a:	9401      	str	r4, [sp, #4]
 801a60c:	f890 4060 	ldrb.w	r4, [r0, #96]	; 0x60
 801a610:	f084 0401 	eor.w	r4, r4, #1
 801a614:	9404      	str	r4, [sp, #16]
 801a616:	9c01      	ldr	r4, [sp, #4]
 801a618:	2c00      	cmp	r4, #0
 801a61a:	9c04      	ldr	r4, [sp, #16]
 801a61c:	bf0c      	ite	eq
 801a61e:	2702      	moveq	r7, #2
 801a620:	2700      	movne	r7, #0
 801a622:	193c      	adds	r4, r7, r4
 801a624:	9400      	str	r4, [sp, #0]
 801a626:	2900      	cmp	r1, #0
 801a628:	f000 8186 	beq.w	801a938 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x700>
 801a62c:	f831 4014 	ldrh.w	r4, [r1, r4, lsl #1]
 801a630:	2c00      	cmp	r4, #0
 801a632:	f040 8221 	bne.w	801aa78 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x840>
 801a636:	2a00      	cmp	r2, #0
 801a638:	f000 821e 	beq.w	801aa78 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x840>
 801a63c:	eb0b 0402 	add.w	r4, fp, r2
 801a640:	b2a4      	uxth	r4, r4
 801a642:	2c09      	cmp	r4, #9
 801a644:	bf88      	it	hi
 801a646:	3c0a      	subhi	r4, #10
 801a648:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 801a64c:	4eb9      	ldr	r6, [pc, #740]	; (801a934 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x6fc>)
 801a64e:	8c64      	ldrh	r4, [r4, #34]	; 0x22
 801a650:	f102 0e01 	add.w	lr, r2, #1
 801a654:	f2a4 6c4b 	subw	ip, r4, #1611	; 0x64b
 801a658:	f1bc 0f14 	cmp.w	ip, #20
 801a65c:	d915      	bls.n	801a68a <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x452>
 801a65e:	f024 0c04 	bic.w	ip, r4, #4
 801a662:	f5bc 6fce 	cmp.w	ip, #1648	; 0x670
 801a666:	d010      	beq.n	801a68a <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x452>
 801a668:	f2a4 6cd6 	subw	ip, r4, #1750	; 0x6d6
 801a66c:	fa1f fc8c 	uxth.w	ip, ip
 801a670:	f1bc 0f17 	cmp.w	ip, #23
 801a674:	d804      	bhi.n	801a680 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x448>
 801a676:	fa26 fc0c 	lsr.w	ip, r6, ip
 801a67a:	f01c 0f01 	tst.w	ip, #1
 801a67e:	d104      	bne.n	801a68a <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x452>
 801a680:	f6a4 0ce4 	subw	ip, r4, #2276	; 0x8e4
 801a684:	f1bc 0f1a 	cmp.w	ip, #26
 801a688:	d81c      	bhi.n	801a6c4 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x48c>
 801a68a:	eb0b 040e 	add.w	r4, fp, lr
 801a68e:	b2a4      	uxth	r4, r4
 801a690:	2c09      	cmp	r4, #9
 801a692:	bf88      	it	hi
 801a694:	3c0a      	subhi	r4, #10
 801a696:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 801a69a:	f10e 0e01 	add.w	lr, lr, #1
 801a69e:	8c64      	ldrh	r4, [r4, #34]	; 0x22
 801a6a0:	e7d8      	b.n	801a654 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x41c>
 801a6a2:	4632      	mov	r2, r6
 801a6a4:	4297      	cmp	r7, r2
 801a6a6:	f6ff aeee 	blt.w	801a486 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x24e>
 801a6aa:	2200      	movs	r2, #0
 801a6ac:	4611      	mov	r1, r2
 801a6ae:	e776      	b.n	801a59e <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x366>
 801a6b0:	d3f7      	bcc.n	801a6a2 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x46a>
 801a6b2:	f10e 0102 	add.w	r1, lr, #2
 801a6b6:	2201      	movs	r2, #1
 801a6b8:	e771      	b.n	801a59e <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x366>
 801a6ba:	3401      	adds	r4, #1
 801a6bc:	b2a4      	uxth	r4, r4
 801a6be:	e777      	b.n	801a5b0 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x378>
 801a6c0:	2400      	movs	r4, #0
 801a6c2:	e7a2      	b.n	801a60a <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x3d2>
 801a6c4:	6c86      	ldr	r6, [r0, #72]	; 0x48
 801a6c6:	2e00      	cmp	r6, #0
 801a6c8:	d07a      	beq.n	801a7c0 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x588>
 801a6ca:	f46f 6ac4 	mvn.w	sl, #1568	; 0x620
 801a6ce:	eb04 0c0a 	add.w	ip, r4, sl
 801a6d2:	f1bc 0f19 	cmp.w	ip, #25
 801a6d6:	d840      	bhi.n	801a75a <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x522>
 801a6d8:	f104 5400 	add.w	r4, r4, #536870912	; 0x20000000
 801a6dc:	f46f 69c4 	mvn.w	r9, #1568	; 0x620
 801a6e0:	68f7      	ldr	r7, [r6, #12]
 801a6e2:	444c      	add	r4, r9
 801a6e4:	eb07 0cc4 	add.w	ip, r7, r4, lsl #3
 801a6e8:	f10e 0401 	add.w	r4, lr, #1
 801a6ec:	44de      	add	lr, fp
 801a6ee:	fa1f fe8e 	uxth.w	lr, lr
 801a6f2:	f1be 0f09 	cmp.w	lr, #9
 801a6f6:	bf88      	it	hi
 801a6f8:	f1ae 0e0a 	subhi.w	lr, lr, #10
 801a6fc:	eb00 0e4e 	add.w	lr, r0, lr, lsl #1
 801a700:	445c      	add	r4, fp
 801a702:	f8be e022 	ldrh.w	lr, [lr, #34]	; 0x22
 801a706:	f8df 922c 	ldr.w	r9, [pc, #556]	; 801a934 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x6fc>
 801a70a:	b2a4      	uxth	r4, r4
 801a70c:	f2ae 684b 	subw	r8, lr, #1611	; 0x64b
 801a710:	f1b8 0f14 	cmp.w	r8, #20
 801a714:	d915      	bls.n	801a742 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x50a>
 801a716:	f02e 0804 	bic.w	r8, lr, #4
 801a71a:	f5b8 6fce 	cmp.w	r8, #1648	; 0x670
 801a71e:	d010      	beq.n	801a742 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x50a>
 801a720:	f2ae 68d6 	subw	r8, lr, #1750	; 0x6d6
 801a724:	fa1f f888 	uxth.w	r8, r8
 801a728:	f1b8 0f17 	cmp.w	r8, #23
 801a72c:	d804      	bhi.n	801a738 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x500>
 801a72e:	fa29 f808 	lsr.w	r8, r9, r8
 801a732:	f018 0f01 	tst.w	r8, #1
 801a736:	d104      	bne.n	801a742 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x50a>
 801a738:	f6ae 08e4 	subw	r8, lr, #2276	; 0x8e4
 801a73c:	f1b8 0f1a 	cmp.w	r8, #26
 801a740:	d846      	bhi.n	801a7d0 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x598>
 801a742:	2c09      	cmp	r4, #9
 801a744:	46a6      	mov	lr, r4
 801a746:	bf88      	it	hi
 801a748:	f1a4 0e0a 	subhi.w	lr, r4, #10
 801a74c:	eb00 0e4e 	add.w	lr, r0, lr, lsl #1
 801a750:	3401      	adds	r4, #1
 801a752:	b2a4      	uxth	r4, r4
 801a754:	f8be e022 	ldrh.w	lr, [lr, #34]	; 0x22
 801a758:	e7d8      	b.n	801a70c <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x4d4>
 801a75a:	f46f 68c8 	mvn.w	r8, #1600	; 0x640
 801a75e:	eb04 0c08 	add.w	ip, r4, r8
 801a762:	f1bc 0f09 	cmp.w	ip, #9
 801a766:	d806      	bhi.n	801a776 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x53e>
 801a768:	f104 5400 	add.w	r4, r4, #536870912	; 0x20000000
 801a76c:	f46f 6cc8 	mvn.w	ip, #1600	; 0x640
 801a770:	4464      	add	r4, ip
 801a772:	6937      	ldr	r7, [r6, #16]
 801a774:	e7b6      	b.n	801a6e4 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x4ac>
 801a776:	f46f 67ce 	mvn.w	r7, #1648	; 0x670
 801a77a:	eb04 0c07 	add.w	ip, r4, r7
 801a77e:	f1bc 0f62 	cmp.w	ip, #98	; 0x62
 801a782:	d81d      	bhi.n	801a7c0 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x588>
 801a784:	f8b6 c01e 	ldrh.w	ip, [r6, #30]
 801a788:	f1bc 0f00 	cmp.w	ip, #0
 801a78c:	d0ac      	beq.n	801a6e8 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x4b0>
 801a78e:	6977      	ldr	r7, [r6, #20]
 801a790:	9703      	str	r7, [sp, #12]
 801a792:	f04f 0900 	mov.w	r9, #0
 801a796:	eb0c 0809 	add.w	r8, ip, r9
 801a79a:	270a      	movs	r7, #10
 801a79c:	ea4f 0868 	mov.w	r8, r8, asr #1
 801a7a0:	fb07 fa08 	mul.w	sl, r7, r8
 801a7a4:	9f03      	ldr	r7, [sp, #12]
 801a7a6:	4457      	add	r7, sl
 801a7a8:	9705      	str	r7, [sp, #20]
 801a7aa:	9f03      	ldr	r7, [sp, #12]
 801a7ac:	f837 a00a 	ldrh.w	sl, [r7, sl]
 801a7b0:	45a2      	cmp	sl, r4
 801a7b2:	d208      	bcs.n	801a7c6 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x58e>
 801a7b4:	f108 0901 	add.w	r9, r8, #1
 801a7b8:	e000      	b.n	801a7bc <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x584>
 801a7ba:	46c4      	mov	ip, r8
 801a7bc:	45cc      	cmp	ip, r9
 801a7be:	dcea      	bgt.n	801a796 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x55e>
 801a7c0:	f04f 0c00 	mov.w	ip, #0
 801a7c4:	e790      	b.n	801a6e8 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x4b0>
 801a7c6:	d8f8      	bhi.n	801a7ba <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x582>
 801a7c8:	9c05      	ldr	r4, [sp, #20]
 801a7ca:	f104 0c02 	add.w	ip, r4, #2
 801a7ce:	e78b      	b.n	801a6e8 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x4b0>
 801a7d0:	2e00      	cmp	r6, #0
 801a7d2:	d05d      	beq.n	801a890 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x658>
 801a7d4:	f46f 6ac4 	mvn.w	sl, #1568	; 0x620
 801a7d8:	eb0e 040a 	add.w	r4, lr, sl
 801a7dc:	2c19      	cmp	r4, #25
 801a7de:	d829      	bhi.n	801a834 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x5fc>
 801a7e0:	f10e 5400 	add.w	r4, lr, #536870912	; 0x20000000
 801a7e4:	f46f 69c4 	mvn.w	r9, #1568	; 0x620
 801a7e8:	68f7      	ldr	r7, [r6, #12]
 801a7ea:	444c      	add	r4, r9
 801a7ec:	eb07 04c4 	add.w	r4, r7, r4, lsl #3
 801a7f0:	f1bc 0f00 	cmp.w	ip, #0
 801a7f4:	d00f      	beq.n	801a816 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x5de>
 801a7f6:	f8bc c006 	ldrh.w	ip, [ip, #6]
 801a7fa:	f1bc 0f00 	cmp.w	ip, #0
 801a7fe:	d00a      	beq.n	801a816 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x5de>
 801a800:	b14c      	cbz	r4, 801a816 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x5de>
 801a802:	f8b4 c002 	ldrh.w	ip, [r4, #2]
 801a806:	f1bc 0f00 	cmp.w	ip, #0
 801a80a:	f040 8109 	bne.w	801aa20 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x7e8>
 801a80e:	88e4      	ldrh	r4, [r4, #6]
 801a810:	2c00      	cmp	r4, #0
 801a812:	f040 8105 	bne.w	801aa20 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x7e8>
 801a816:	9c00      	ldr	r4, [sp, #0]
 801a818:	2c02      	cmp	r4, #2
 801a81a:	d13f      	bne.n	801a89c <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x664>
 801a81c:	880c      	ldrh	r4, [r1, #0]
 801a81e:	2c00      	cmp	r4, #0
 801a820:	f000 80fe 	beq.w	801aa20 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x7e8>
 801a824:	f240 6444 	movw	r4, #1604	; 0x644
 801a828:	42a3      	cmp	r3, r4
 801a82a:	f040 80f9 	bne.w	801aa20 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x7e8>
 801a82e:	2401      	movs	r4, #1
 801a830:	9401      	str	r4, [sp, #4]
 801a832:	e0dc      	b.n	801a9ee <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x7b6>
 801a834:	f46f 68c8 	mvn.w	r8, #1600	; 0x640
 801a838:	eb0e 0408 	add.w	r4, lr, r8
 801a83c:	2c09      	cmp	r4, #9
 801a83e:	d806      	bhi.n	801a84e <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x616>
 801a840:	f46f 67c8 	mvn.w	r7, #1600	; 0x640
 801a844:	f10e 5400 	add.w	r4, lr, #536870912	; 0x20000000
 801a848:	443c      	add	r4, r7
 801a84a:	6937      	ldr	r7, [r6, #16]
 801a84c:	e7ce      	b.n	801a7ec <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x5b4>
 801a84e:	f46f 64ce 	mvn.w	r4, #1648	; 0x670
 801a852:	4474      	add	r4, lr
 801a854:	2c62      	cmp	r4, #98	; 0x62
 801a856:	d81b      	bhi.n	801a890 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x658>
 801a858:	8bf4      	ldrh	r4, [r6, #30]
 801a85a:	2c00      	cmp	r4, #0
 801a85c:	d0c8      	beq.n	801a7f0 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x5b8>
 801a85e:	6977      	ldr	r7, [r6, #20]
 801a860:	9703      	str	r7, [sp, #12]
 801a862:	f04f 0900 	mov.w	r9, #0
 801a866:	eb04 0809 	add.w	r8, r4, r9
 801a86a:	270a      	movs	r7, #10
 801a86c:	ea4f 0868 	mov.w	r8, r8, asr #1
 801a870:	fb07 fa08 	mul.w	sl, r7, r8
 801a874:	9f03      	ldr	r7, [sp, #12]
 801a876:	4457      	add	r7, sl
 801a878:	9705      	str	r7, [sp, #20]
 801a87a:	9f03      	ldr	r7, [sp, #12]
 801a87c:	f837 a00a 	ldrh.w	sl, [r7, sl]
 801a880:	45f2      	cmp	sl, lr
 801a882:	d207      	bcs.n	801a894 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x65c>
 801a884:	f108 0901 	add.w	r9, r8, #1
 801a888:	e000      	b.n	801a88c <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x654>
 801a88a:	4644      	mov	r4, r8
 801a88c:	45a1      	cmp	r9, r4
 801a88e:	dbea      	blt.n	801a866 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x62e>
 801a890:	2400      	movs	r4, #0
 801a892:	e7ad      	b.n	801a7f0 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x5b8>
 801a894:	d8f9      	bhi.n	801a88a <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x652>
 801a896:	9c05      	ldr	r4, [sp, #20]
 801a898:	3402      	adds	r4, #2
 801a89a:	e7a9      	b.n	801a7f0 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x5b8>
 801a89c:	9c00      	ldr	r4, [sp, #0]
 801a89e:	2c03      	cmp	r4, #3
 801a8a0:	f040 80be 	bne.w	801aa20 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x7e8>
 801a8a4:	884c      	ldrh	r4, [r1, #2]
 801a8a6:	2c00      	cmp	r4, #0
 801a8a8:	f000 80ba 	beq.w	801aa20 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x7e8>
 801a8ac:	f240 6444 	movw	r4, #1604	; 0x644
 801a8b0:	42a3      	cmp	r3, r4
 801a8b2:	f040 80b5 	bne.w	801aa20 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x7e8>
 801a8b6:	2401      	movs	r4, #1
 801a8b8:	9401      	str	r4, [sp, #4]
 801a8ba:	884c      	ldrh	r4, [r1, #2]
 801a8bc:	2c00      	cmp	r4, #0
 801a8be:	f000 8096 	beq.w	801a9ee <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x7b6>
 801a8c2:	2401      	movs	r4, #1
 801a8c4:	9400      	str	r4, [sp, #0]
 801a8c6:	e0de      	b.n	801aa86 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x84e>
 801a8c8:	f46f 68c8 	mvn.w	r8, #1600	; 0x640
 801a8cc:	eb03 0408 	add.w	r4, r3, r8
 801a8d0:	b2a4      	uxth	r4, r4
 801a8d2:	2c09      	cmp	r4, #9
 801a8d4:	d806      	bhi.n	801a8e4 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x6ac>
 801a8d6:	f103 5400 	add.w	r4, r3, #536870912	; 0x20000000
 801a8da:	f46f 67c8 	mvn.w	r7, #1600	; 0x640
 801a8de:	443c      	add	r4, r7
 801a8e0:	6936      	ldr	r6, [r6, #16]
 801a8e2:	e0ac      	b.n	801aa3e <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x806>
 801a8e4:	f46f 6ace 	mvn.w	sl, #1648	; 0x670
 801a8e8:	eb03 040a 	add.w	r4, r3, sl
 801a8ec:	b2a4      	uxth	r4, r4
 801a8ee:	2c62      	cmp	r4, #98	; 0x62
 801a8f0:	d819      	bhi.n	801a926 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x6ee>
 801a8f2:	8bf4      	ldrh	r4, [r6, #30]
 801a8f4:	b1bc      	cbz	r4, 801a926 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x6ee>
 801a8f6:	f8d6 e014 	ldr.w	lr, [r6, #20]
 801a8fa:	f04f 0c00 	mov.w	ip, #0
 801a8fe:	4626      	mov	r6, r4
 801a900:	f04f 0a0a 	mov.w	sl, #10
 801a904:	eb06 040c 	add.w	r4, r6, ip
 801a908:	1064      	asrs	r4, r4, #1
 801a90a:	fb0a f804 	mul.w	r8, sl, r4
 801a90e:	eb0e 0908 	add.w	r9, lr, r8
 801a912:	f83e 8008 	ldrh.w	r8, [lr, r8]
 801a916:	4598      	cmp	r8, r3
 801a918:	d207      	bcs.n	801a92a <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x6f2>
 801a91a:	f104 0c01 	add.w	ip, r4, #1
 801a91e:	e000      	b.n	801a922 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x6ea>
 801a920:	4626      	mov	r6, r4
 801a922:	45b4      	cmp	ip, r6
 801a924:	dbee      	blt.n	801a904 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x6cc>
 801a926:	2600      	movs	r6, #0
 801a928:	e08b      	b.n	801aa42 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x80a>
 801a92a:	d8f9      	bhi.n	801a920 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x6e8>
 801a92c:	f109 0602 	add.w	r6, r9, #2
 801a930:	e087      	b.n	801aa42 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x80a>
 801a932:	bf00      	nop
 801a934:	00f67e7f 	.word	0x00f67e7f
 801a938:	6c84      	ldr	r4, [r0, #72]	; 0x48
 801a93a:	b18c      	cbz	r4, 801a960 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x728>
 801a93c:	f46f 69c4 	mvn.w	r9, #1568	; 0x620
 801a940:	eb03 0609 	add.w	r6, r3, r9
 801a944:	b2b6      	uxth	r6, r6
 801a946:	2e19      	cmp	r6, #25
 801a948:	d812      	bhi.n	801a970 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x738>
 801a94a:	f103 5100 	add.w	r1, r3, #536870912	; 0x20000000
 801a94e:	f46f 68c4 	mvn.w	r8, #1568	; 0x620
 801a952:	68e4      	ldr	r4, [r4, #12]
 801a954:	4441      	add	r1, r8
 801a956:	eb04 01c1 	add.w	r1, r4, r1, lsl #3
 801a95a:	2900      	cmp	r1, #0
 801a95c:	f040 808c 	bne.w	801aa78 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x840>
 801a960:	f5b3 6fc8 	cmp.w	r3, #1600	; 0x640
 801a964:	f47f adb1 	bne.w	801a4ca <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x292>
 801a968:	2200      	movs	r2, #0
 801a96a:	f880 2060 	strb.w	r2, [r0, #96]	; 0x60
 801a96e:	e5ac      	b.n	801a4ca <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x292>
 801a970:	f46f 6cc8 	mvn.w	ip, #1600	; 0x640
 801a974:	eb03 060c 	add.w	r6, r3, ip
 801a978:	b2b6      	uxth	r6, r6
 801a97a:	2e09      	cmp	r6, #9
 801a97c:	d806      	bhi.n	801a98c <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x754>
 801a97e:	f103 5100 	add.w	r1, r3, #536870912	; 0x20000000
 801a982:	f46f 67c8 	mvn.w	r7, #1600	; 0x640
 801a986:	4439      	add	r1, r7
 801a988:	6924      	ldr	r4, [r4, #16]
 801a98a:	e7e4      	b.n	801a956 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x71e>
 801a98c:	f46f 66ce 	mvn.w	r6, #1648	; 0x670
 801a990:	199e      	adds	r6, r3, r6
 801a992:	b2b6      	uxth	r6, r6
 801a994:	2e62      	cmp	r6, #98	; 0x62
 801a996:	d8e3      	bhi.n	801a960 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x728>
 801a998:	8be6      	ldrh	r6, [r4, #30]
 801a99a:	2e00      	cmp	r6, #0
 801a99c:	d0e0      	beq.n	801a960 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x728>
 801a99e:	f8d4 e014 	ldr.w	lr, [r4, #20]
 801a9a2:	f04f 090a 	mov.w	r9, #10
 801a9a6:	4634      	mov	r4, r6
 801a9a8:	1866      	adds	r6, r4, r1
 801a9aa:	1076      	asrs	r6, r6, #1
 801a9ac:	fb09 fc06 	mul.w	ip, r9, r6
 801a9b0:	eb0e 080c 	add.w	r8, lr, ip
 801a9b4:	f83e c00c 	ldrh.w	ip, [lr, ip]
 801a9b8:	459c      	cmp	ip, r3
 801a9ba:	d205      	bcs.n	801a9c8 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x790>
 801a9bc:	1c71      	adds	r1, r6, #1
 801a9be:	e000      	b.n	801a9c2 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x78a>
 801a9c0:	4634      	mov	r4, r6
 801a9c2:	428c      	cmp	r4, r1
 801a9c4:	dcf0      	bgt.n	801a9a8 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x770>
 801a9c6:	e7cb      	b.n	801a960 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x728>
 801a9c8:	d8fa      	bhi.n	801a9c0 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x788>
 801a9ca:	f108 0102 	add.w	r1, r8, #2
 801a9ce:	e053      	b.n	801aa78 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x840>
 801a9d0:	9c00      	ldr	r4, [sp, #0]
 801a9d2:	2c03      	cmp	r4, #3
 801a9d4:	d104      	bne.n	801a9e0 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x7a8>
 801a9d6:	88cc      	ldrh	r4, [r1, #6]
 801a9d8:	2c00      	cmp	r4, #0
 801a9da:	f43f af6c 	beq.w	801a8b6 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x67e>
 801a9de:	e052      	b.n	801aa86 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x84e>
 801a9e0:	9c00      	ldr	r4, [sp, #0]
 801a9e2:	2c01      	cmp	r4, #1
 801a9e4:	f43f af69 	beq.w	801a8ba <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x682>
 801a9e8:	9c00      	ldr	r4, [sp, #0]
 801a9ea:	2c00      	cmp	r4, #0
 801a9ec:	d14b      	bne.n	801aa86 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x84e>
 801a9ee:	880c      	ldrh	r4, [r1, #0]
 801a9f0:	b924      	cbnz	r4, 801a9fc <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x7c4>
 801a9f2:	884f      	ldrh	r7, [r1, #2]
 801a9f4:	1c3c      	adds	r4, r7, #0
 801a9f6:	bf18      	it	ne
 801a9f8:	2401      	movne	r4, #1
 801a9fa:	e763      	b.n	801a8c4 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x68c>
 801a9fc:	2400      	movs	r4, #0
 801a9fe:	e761      	b.n	801a8c4 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x68c>
 801aa00:	233e      	movs	r3, #62	; 0x3e
 801aa02:	e562      	b.n	801a4ca <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x292>
 801aa04:	233c      	movs	r3, #60	; 0x3c
 801aa06:	e560      	b.n	801a4ca <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x292>
 801aa08:	2329      	movs	r3, #41	; 0x29
 801aa0a:	e55e      	b.n	801a4ca <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x292>
 801aa0c:	2328      	movs	r3, #40	; 0x28
 801aa0e:	e55c      	b.n	801a4ca <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x292>
 801aa10:	235d      	movs	r3, #93	; 0x5d
 801aa12:	e55a      	b.n	801a4ca <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x292>
 801aa14:	235b      	movs	r3, #91	; 0x5b
 801aa16:	e558      	b.n	801a4ca <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x292>
 801aa18:	237d      	movs	r3, #125	; 0x7d
 801aa1a:	e556      	b.n	801a4ca <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x292>
 801aa1c:	237b      	movs	r3, #123	; 0x7b
 801aa1e:	e554      	b.n	801a4ca <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x292>
 801aa20:	b17e      	cbz	r6, 801aa42 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x80a>
 801aa22:	f46f 6ac4 	mvn.w	sl, #1568	; 0x620
 801aa26:	eb03 040a 	add.w	r4, r3, sl
 801aa2a:	b2a4      	uxth	r4, r4
 801aa2c:	2c19      	cmp	r4, #25
 801aa2e:	f63f af4b 	bhi.w	801a8c8 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x690>
 801aa32:	f103 5400 	add.w	r4, r3, #536870912	; 0x20000000
 801aa36:	f46f 69c4 	mvn.w	r9, #1568	; 0x620
 801aa3a:	68f6      	ldr	r6, [r6, #12]
 801aa3c:	444c      	add	r4, r9
 801aa3e:	eb06 06c4 	add.w	r6, r6, r4, lsl #3
 801aa42:	9c02      	ldr	r4, [sp, #8]
 801aa44:	9f04      	ldr	r7, [sp, #16]
 801aa46:	8c64      	ldrh	r4, [r4, #34]	; 0x22
 801aa48:	f2a4 6422 	subw	r4, r4, #1570	; 0x622
 801aa4c:	b2a4      	uxth	r4, r4
 801aa4e:	2cb1      	cmp	r4, #177	; 0xb1
 801aa50:	bf8c      	ite	hi
 801aa52:	f04f 0c00 	movhi.w	ip, #0
 801aa56:	f04f 0c02 	movls.w	ip, #2
 801aa5a:	44bc      	add	ip, r7
 801aa5c:	b166      	cbz	r6, 801aa78 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x840>
 801aa5e:	f836 e01c 	ldrh.w	lr, [r6, ip, lsl #1]
 801aa62:	f1be 0f00 	cmp.w	lr, #0
 801aa66:	d007      	beq.n	801aa78 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x840>
 801aa68:	2cb1      	cmp	r4, #177	; 0xb1
 801aa6a:	bf94      	ite	ls
 801aa6c:	2200      	movls	r2, #0
 801aa6e:	2201      	movhi	r2, #1
 801aa70:	e9cd c200 	strd	ip, r2, [sp]
 801aa74:	4631      	mov	r1, r6
 801aa76:	2200      	movs	r2, #0
 801aa78:	9c00      	ldr	r4, [sp, #0]
 801aa7a:	2c02      	cmp	r4, #2
 801aa7c:	d1a8      	bne.n	801a9d0 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x798>
 801aa7e:	888c      	ldrh	r4, [r1, #4]
 801aa80:	2c00      	cmp	r4, #0
 801aa82:	f43f aed4 	beq.w	801a82e <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x5f6>
 801aa86:	9c00      	ldr	r4, [sp, #0]
 801aa88:	9e00      	ldr	r6, [sp, #0]
 801aa8a:	eb01 0444 	add.w	r4, r1, r4, lsl #1
 801aa8e:	f831 1016 	ldrh.w	r1, [r1, r6, lsl #1]
 801aa92:	2900      	cmp	r1, #0
 801aa94:	f43f ad19 	beq.w	801a4ca <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x292>
 801aa98:	9b01      	ldr	r3, [sp, #4]
 801aa9a:	f880 3060 	strb.w	r3, [r0, #96]	; 0x60
 801aa9e:	8f03      	ldrh	r3, [r0, #56]	; 0x38
 801aaa0:	b292      	uxth	r2, r2
 801aaa2:	1a9b      	subs	r3, r3, r2
 801aaa4:	445a      	add	r2, fp
 801aaa6:	b292      	uxth	r2, r2
 801aaa8:	2a09      	cmp	r2, #9
 801aaaa:	bf88      	it	hi
 801aaac:	3a0a      	subhi	r2, #10
 801aaae:	8703      	strh	r3, [r0, #56]	; 0x38
 801aab0:	86c2      	strh	r2, [r0, #54]	; 0x36
 801aab2:	b145      	cbz	r5, 801aac6 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x88e>
 801aab4:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 801aab6:	3301      	adds	r3, #1
 801aab8:	b29b      	uxth	r3, r3
 801aaba:	2b0a      	cmp	r3, #10
 801aabc:	bf28      	it	cs
 801aabe:	2300      	movcs	r3, #0
 801aac0:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801aac4:	8445      	strh	r5, [r0, #34]	; 0x22
 801aac6:	8823      	ldrh	r3, [r4, #0]
 801aac8:	e4ff      	b.n	801a4ca <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x292>
 801aaca:	2b20      	cmp	r3, #32
 801aacc:	f47f ad24 	bne.w	801a518 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x2e0>
 801aad0:	eb05 0285 	add.w	r2, r5, r5, lsl #2
 801aad4:	00d2      	lsls	r2, r2, #3
 801aad6:	f5a2 5240 	sub.w	r2, r2, #12288	; 0x3000
 801aada:	3a30      	subs	r2, #48	; 0x30
 801aadc:	b292      	uxth	r2, r2
 801aade:	f240 6152 	movw	r1, #1618	; 0x652
 801aae2:	e52f      	b.n	801a544 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x30c>

0801aae4 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>:
 801aae4:	b5f0      	push	{r4, r5, r6, r7, lr}
 801aae6:	4605      	mov	r5, r0
 801aae8:	4608      	mov	r0, r1
 801aaea:	b1e9      	cbz	r1, 801ab28 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x44>
 801aaec:	f105 044c 	add.w	r4, r5, #76	; 0x4c
 801aaf0:	460b      	mov	r3, r1
 801aaf2:	f101 0708 	add.w	r7, r1, #8
 801aaf6:	4622      	mov	r2, r4
 801aaf8:	6818      	ldr	r0, [r3, #0]
 801aafa:	6859      	ldr	r1, [r3, #4]
 801aafc:	4626      	mov	r6, r4
 801aafe:	c603      	stmia	r6!, {r0, r1}
 801ab00:	3308      	adds	r3, #8
 801ab02:	42bb      	cmp	r3, r7
 801ab04:	4634      	mov	r4, r6
 801ab06:	d1f7      	bne.n	801aaf8 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x14>
 801ab08:	6818      	ldr	r0, [r3, #0]
 801ab0a:	6030      	str	r0, [r6, #0]
 801ab0c:	889b      	ldrh	r3, [r3, #4]
 801ab0e:	80b3      	strh	r3, [r6, #4]
 801ab10:	f895 3059 	ldrb.w	r3, [r5, #89]	; 0x59
 801ab14:	015b      	lsls	r3, r3, #5
 801ab16:	f403 7180 	and.w	r1, r3, #256	; 0x100
 801ab1a:	f895 3052 	ldrb.w	r3, [r5, #82]	; 0x52
 801ab1e:	430b      	orrs	r3, r1
 801ab20:	425b      	negs	r3, r3
 801ab22:	f885 3055 	strb.w	r3, [r5, #85]	; 0x55
 801ab26:	4610      	mov	r0, r2
 801ab28:	bdf0      	pop	{r4, r5, r6, r7, pc}

0801ab2a <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>:
 801ab2a:	b538      	push	{r3, r4, r5, lr}
 801ab2c:	460c      	mov	r4, r1
 801ab2e:	6811      	ldr	r1, [r2, #0]
 801ab30:	4610      	mov	r0, r2
 801ab32:	68cd      	ldr	r5, [r1, #12]
 801ab34:	4619      	mov	r1, r3
 801ab36:	47a8      	blx	r5
 801ab38:	2800      	cmp	r0, #0
 801ab3a:	bf08      	it	eq
 801ab3c:	4620      	moveq	r0, r4
 801ab3e:	bd38      	pop	{r3, r4, r5, pc}

0801ab40 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>:
 801ab40:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801ab42:	4604      	mov	r4, r0
 801ab44:	4615      	mov	r5, r2
 801ab46:	4608      	mov	r0, r1
 801ab48:	b93a      	cbnz	r2, 801ab5a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1a>
 801ab4a:	f8a4 205a 	strh.w	r2, [r4, #90]	; 0x5a
 801ab4e:	f8a4 205c 	strh.w	r2, [r4, #92]	; 0x5c
 801ab52:	f8a4 205e 	strh.w	r2, [r4, #94]	; 0x5e
 801ab56:	4628      	mov	r0, r5
 801ab58:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801ab5a:	f892 c00d 	ldrb.w	ip, [r2, #13]
 801ab5e:	8893      	ldrh	r3, [r2, #4]
 801ab60:	ea4f 160c 	mov.w	r6, ip, lsl #4
 801ab64:	f406 7280 	and.w	r2, r6, #256	; 0x100
 801ab68:	79ee      	ldrb	r6, [r5, #7]
 801ab6a:	f46f 6763 	mvn.w	r7, #3632	; 0xe30
 801ab6e:	4316      	orrs	r6, r2
 801ab70:	19da      	adds	r2, r3, r7
 801ab72:	b291      	uxth	r1, r2
 801ab74:	291d      	cmp	r1, #29
 801ab76:	b2b7      	uxth	r7, r6
 801ab78:	d87a      	bhi.n	801ac70 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x130>
 801ab7a:	2201      	movs	r2, #1
 801ab7c:	408a      	lsls	r2, r1
 801ab7e:	4975      	ldr	r1, [pc, #468]	; (801ad54 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x214>)
 801ab80:	420a      	tst	r2, r1
 801ab82:	ea4f 06e6 	mov.w	r6, r6, asr #3
 801ab86:	d12d      	bne.n	801abe4 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xa4>
 801ab88:	f412 7f60 	tst.w	r2, #896	; 0x380
 801ab8c:	d070      	beq.n	801ac70 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x130>
 801ab8e:	f104 024c 	add.w	r2, r4, #76	; 0x4c
 801ab92:	462b      	mov	r3, r5
 801ab94:	f105 0e08 	add.w	lr, r5, #8
 801ab98:	4615      	mov	r5, r2
 801ab9a:	6818      	ldr	r0, [r3, #0]
 801ab9c:	6859      	ldr	r1, [r3, #4]
 801ab9e:	4694      	mov	ip, r2
 801aba0:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 801aba4:	3308      	adds	r3, #8
 801aba6:	4573      	cmp	r3, lr
 801aba8:	4662      	mov	r2, ip
 801abaa:	d1f6      	bne.n	801ab9a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x5a>
 801abac:	6818      	ldr	r0, [r3, #0]
 801abae:	f8cc 0000 	str.w	r0, [ip]
 801abb2:	889b      	ldrh	r3, [r3, #4]
 801abb4:	f8ac 3004 	strh.w	r3, [ip, #4]
 801abb8:	f8b4 105c 	ldrh.w	r1, [r4, #92]	; 0x5c
 801abbc:	f894 0059 	ldrb.w	r0, [r4, #89]	; 0x59
 801abc0:	b2b3      	uxth	r3, r6
 801abc2:	1aca      	subs	r2, r1, r3
 801abc4:	b292      	uxth	r2, r2
 801abc6:	f884 2054 	strb.w	r2, [r4, #84]	; 0x54
 801abca:	10d2      	asrs	r2, r2, #3
 801abcc:	f020 0060 	bic.w	r0, r0, #96	; 0x60
 801abd0:	f002 0260 	and.w	r2, r2, #96	; 0x60
 801abd4:	4302      	orrs	r2, r0
 801abd6:	1bcf      	subs	r7, r1, r7
 801abd8:	f884 2059 	strb.w	r2, [r4, #89]	; 0x59
 801abdc:	1afb      	subs	r3, r7, r3
 801abde:	f8a4 305c 	strh.w	r3, [r4, #92]	; 0x5c
 801abe2:	e7b8      	b.n	801ab56 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 801abe4:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 801abe6:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801abea:	8c59      	ldrh	r1, [r3, #34]	; 0x22
 801abec:	f640 6333 	movw	r3, #3635	; 0xe33
 801abf0:	4299      	cmp	r1, r3
 801abf2:	d110      	bne.n	801ac16 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xd6>
 801abf4:	6803      	ldr	r3, [r0, #0]
 801abf6:	68db      	ldr	r3, [r3, #12]
 801abf8:	4798      	blx	r3
 801abfa:	7b41      	ldrb	r1, [r0, #13]
 801abfc:	00cb      	lsls	r3, r1, #3
 801abfe:	f403 7280 	and.w	r2, r3, #256	; 0x100
 801ac02:	7a03      	ldrb	r3, [r0, #8]
 801ac04:	0648      	lsls	r0, r1, #25
 801ac06:	ea43 0302 	orr.w	r3, r3, r2
 801ac0a:	bf44      	itt	mi
 801ac0c:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 801ac10:	b21b      	sxthmi	r3, r3
 801ac12:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 801ac16:	f8b4 305a 	ldrh.w	r3, [r4, #90]	; 0x5a
 801ac1a:	443b      	add	r3, r7
 801ac1c:	4433      	add	r3, r6
 801ac1e:	b29b      	uxth	r3, r3
 801ac20:	f104 064c 	add.w	r6, r4, #76	; 0x4c
 801ac24:	462a      	mov	r2, r5
 801ac26:	f105 0c08 	add.w	ip, r5, #8
 801ac2a:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 801ac2e:	4635      	mov	r5, r6
 801ac30:	6810      	ldr	r0, [r2, #0]
 801ac32:	6851      	ldr	r1, [r2, #4]
 801ac34:	4637      	mov	r7, r6
 801ac36:	c703      	stmia	r7!, {r0, r1}
 801ac38:	3208      	adds	r2, #8
 801ac3a:	4562      	cmp	r2, ip
 801ac3c:	463e      	mov	r6, r7
 801ac3e:	d1f7      	bne.n	801ac30 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xf0>
 801ac40:	6810      	ldr	r0, [r2, #0]
 801ac42:	6038      	str	r0, [r7, #0]
 801ac44:	8892      	ldrh	r2, [r2, #4]
 801ac46:	80ba      	strh	r2, [r7, #4]
 801ac48:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 801ac4c:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 801ac50:	10db      	asrs	r3, r3, #3
 801ac52:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 801ac56:	f003 0360 	and.w	r3, r3, #96	; 0x60
 801ac5a:	4313      	orrs	r3, r2
 801ac5c:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 801ac60:	f894 205e 	ldrb.w	r2, [r4, #94]	; 0x5e
 801ac64:	f894 3055 	ldrb.w	r3, [r4, #85]	; 0x55
 801ac68:	1a9b      	subs	r3, r3, r2
 801ac6a:	f884 3055 	strb.w	r3, [r4, #85]	; 0x55
 801ac6e:	e772      	b.n	801ab56 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 801ac70:	f023 0204 	bic.w	r2, r3, #4
 801ac74:	f640 611b 	movw	r1, #3611	; 0xe1b
 801ac78:	428a      	cmp	r2, r1
 801ac7a:	d003      	beq.n	801ac84 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x144>
 801ac7c:	f640 621d 	movw	r2, #3613	; 0xe1d
 801ac80:	4293      	cmp	r3, r2
 801ac82:	d120      	bne.n	801acc6 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x186>
 801ac84:	3b01      	subs	r3, #1
 801ac86:	4602      	mov	r2, r0
 801ac88:	b29b      	uxth	r3, r3
 801ac8a:	4629      	mov	r1, r5
 801ac8c:	4620      	mov	r0, r4
 801ac8e:	f7ff ff4c 	bl	801ab2a <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 801ac92:	7b41      	ldrb	r1, [r0, #13]
 801ac94:	00cb      	lsls	r3, r1, #3
 801ac96:	f403 7280 	and.w	r2, r3, #256	; 0x100
 801ac9a:	7a03      	ldrb	r3, [r0, #8]
 801ac9c:	0649      	lsls	r1, r1, #25
 801ac9e:	ea43 0302 	orr.w	r3, r3, r2
 801aca2:	bf44      	itt	mi
 801aca4:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 801aca8:	b21b      	sxthmi	r3, r3
 801acaa:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 801acae:	7b6b      	ldrb	r3, [r5, #13]
 801acb0:	7aaa      	ldrb	r2, [r5, #10]
 801acb2:	005b      	lsls	r3, r3, #1
 801acb4:	f403 7380 	and.w	r3, r3, #256	; 0x100
 801acb8:	4313      	orrs	r3, r2
 801acba:	115a      	asrs	r2, r3, #5
 801acbc:	eb02 0393 	add.w	r3, r2, r3, lsr #2
 801acc0:	f8a4 305e 	strh.w	r3, [r4, #94]	; 0x5e
 801acc4:	e036      	b.n	801ad34 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1f4>
 801acc6:	ea4f 02cc 	mov.w	r2, ip, lsl #3
 801acca:	f402 7180 	and.w	r1, r2, #256	; 0x100
 801acce:	7a2a      	ldrb	r2, [r5, #8]
 801acd0:	f01c 0f40 	tst.w	ip, #64	; 0x40
 801acd4:	ea42 0201 	orr.w	r2, r2, r1
 801acd8:	bf1c      	itt	ne
 801acda:	f5a2 7200 	subne.w	r2, r2, #512	; 0x200
 801acde:	b212      	sxthne	r2, r2
 801ace0:	f8a4 205a 	strh.w	r2, [r4, #90]	; 0x5a
 801ace4:	f640 6109 	movw	r1, #3593	; 0xe09
 801ace8:	f023 0210 	bic.w	r2, r3, #16
 801acec:	428a      	cmp	r2, r1
 801acee:	d003      	beq.n	801acf8 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1b8>
 801acf0:	f640 6213 	movw	r2, #3603	; 0xe13
 801acf4:	4293      	cmp	r3, r2
 801acf6:	d12a      	bne.n	801ad4e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x20e>
 801acf8:	7b6e      	ldrb	r6, [r5, #13]
 801acfa:	0076      	lsls	r6, r6, #1
 801acfc:	f406 7280 	and.w	r2, r6, #256	; 0x100
 801ad00:	7aae      	ldrb	r6, [r5, #10]
 801ad02:	4316      	orrs	r6, r2
 801ad04:	f640 6213 	movw	r2, #3603	; 0xe13
 801ad08:	4293      	cmp	r3, r2
 801ad0a:	bf18      	it	ne
 801ad0c:	f103 33ff 	addne.w	r3, r3, #4294967295
 801ad10:	4602      	mov	r2, r0
 801ad12:	bf14      	ite	ne
 801ad14:	b29b      	uxthne	r3, r3
 801ad16:	f640 630c 	movweq	r3, #3596	; 0xe0c
 801ad1a:	4629      	mov	r1, r5
 801ad1c:	4620      	mov	r0, r4
 801ad1e:	f7ff ff04 	bl	801ab2a <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 801ad22:	7b43      	ldrb	r3, [r0, #13]
 801ad24:	7a82      	ldrb	r2, [r0, #10]
 801ad26:	005b      	lsls	r3, r3, #1
 801ad28:	f403 7380 	and.w	r3, r3, #256	; 0x100
 801ad2c:	4313      	orrs	r3, r2
 801ad2e:	1af6      	subs	r6, r6, r3
 801ad30:	f8a4 605e 	strh.w	r6, [r4, #94]	; 0x5e
 801ad34:	7b69      	ldrb	r1, [r5, #13]
 801ad36:	00cb      	lsls	r3, r1, #3
 801ad38:	f403 7280 	and.w	r2, r3, #256	; 0x100
 801ad3c:	7a2b      	ldrb	r3, [r5, #8]
 801ad3e:	4313      	orrs	r3, r2
 801ad40:	064a      	lsls	r2, r1, #25
 801ad42:	bf44      	itt	mi
 801ad44:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 801ad48:	b21b      	sxthmi	r3, r3
 801ad4a:	1bdb      	subs	r3, r3, r7
 801ad4c:	e747      	b.n	801abde <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x9e>
 801ad4e:	2300      	movs	r3, #0
 801ad50:	e7b6      	b.n	801acc0 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x180>
 801ad52:	bf00      	nop
 801ad54:	3fc00079 	.word	0x3fc00079

0801ad58 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>:
 801ad58:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801ad5c:	4604      	mov	r4, r0
 801ad5e:	b942      	cbnz	r2, 801ad72 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1a>
 801ad60:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 801ad64:	f8a0 305a 	strh.w	r3, [r0, #90]	; 0x5a
 801ad68:	f8a0 305c 	strh.w	r3, [r0, #92]	; 0x5c
 801ad6c:	f8a4 305e 	strh.w	r3, [r4, #94]	; 0x5e
 801ad70:	e047      	b.n	801ae02 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
 801ad72:	7b51      	ldrb	r1, [r2, #13]
 801ad74:	8893      	ldrh	r3, [r2, #4]
 801ad76:	010d      	lsls	r5, r1, #4
 801ad78:	f405 7080 	and.w	r0, r5, #256	; 0x100
 801ad7c:	79d5      	ldrb	r5, [r2, #7]
 801ad7e:	4305      	orrs	r5, r0
 801ad80:	2d04      	cmp	r5, #4
 801ad82:	bfcc      	ite	gt
 801ad84:	ea4f 0e95 	movgt.w	lr, r5, lsr #2
 801ad88:	f04f 0e01 	movle.w	lr, #1
 801ad8c:	f5b3 6fdd 	cmp.w	r3, #1768	; 0x6e8
 801ad90:	f200 80ab 	bhi.w	801aeea <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x192>
 801ad94:	f240 60e7 	movw	r0, #1767	; 0x6e7
 801ad98:	4283      	cmp	r3, r0
 801ad9a:	d216      	bcs.n	801adca <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801ad9c:	f240 605b 	movw	r0, #1627	; 0x65b
 801ada0:	4283      	cmp	r3, r0
 801ada2:	d859      	bhi.n	801ae58 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x100>
 801ada4:	f240 6057 	movw	r0, #1623	; 0x657
 801ada8:	4283      	cmp	r3, r0
 801adaa:	d20e      	bcs.n	801adca <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801adac:	f5b3 6fca 	cmp.w	r3, #1616	; 0x650
 801adb0:	d24a      	bcs.n	801ae48 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xf0>
 801adb2:	f240 604e 	movw	r0, #1614	; 0x64e
 801adb6:	4283      	cmp	r3, r0
 801adb8:	d207      	bcs.n	801adca <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801adba:	f240 601a 	movw	r0, #1562	; 0x61a
 801adbe:	4283      	cmp	r3, r0
 801adc0:	d02a      	beq.n	801ae18 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801adc2:	d821      	bhi.n	801ae08 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xb0>
 801adc4:	f5b3 6fc2 	cmp.w	r3, #1552	; 0x610
 801adc8:	d35b      	bcc.n	801ae82 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 801adca:	f9b4 305a 	ldrsh.w	r3, [r4, #90]	; 0x5a
 801adce:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 801add2:	f040 80d0 	bne.w	801af76 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
 801add6:	f9b4 005c 	ldrsh.w	r0, [r4, #92]	; 0x5c
 801adda:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 801adde:	f040 80ca 	bne.w	801af76 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
 801ade2:	00cb      	lsls	r3, r1, #3
 801ade4:	f403 7080 	and.w	r0, r3, #256	; 0x100
 801ade8:	7a13      	ldrb	r3, [r2, #8]
 801adea:	0649      	lsls	r1, r1, #25
 801adec:	ea43 0300 	orr.w	r3, r3, r0
 801adf0:	bf44      	itt	mi
 801adf2:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 801adf6:	b21b      	sxthmi	r3, r3
 801adf8:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 801adfc:	1b5d      	subs	r5, r3, r5
 801adfe:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 801ae02:	4610      	mov	r0, r2
 801ae04:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801ae08:	f240 604b 	movw	r0, #1611	; 0x64b
 801ae0c:	4283      	cmp	r3, r0
 801ae0e:	d338      	bcc.n	801ae82 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 801ae10:	f240 604c 	movw	r0, #1612	; 0x64c
 801ae14:	4283      	cmp	r3, r0
 801ae16:	d9d8      	bls.n	801adca <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801ae18:	f9b4 005a 	ldrsh.w	r0, [r4, #90]	; 0x5a
 801ae1c:	f9b4 305c 	ldrsh.w	r3, [r4, #92]	; 0x5c
 801ae20:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 801ae24:	f040 80f2 	bne.w	801b00c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b4>
 801ae28:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 801ae2c:	f040 80ee 	bne.w	801b00c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b4>
 801ae30:	00cb      	lsls	r3, r1, #3
 801ae32:	f403 7080 	and.w	r0, r3, #256	; 0x100
 801ae36:	7a13      	ldrb	r3, [r2, #8]
 801ae38:	064e      	lsls	r6, r1, #25
 801ae3a:	ea43 0300 	orr.w	r3, r3, r0
 801ae3e:	bf44      	itt	mi
 801ae40:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 801ae44:	b21b      	sxthmi	r3, r3
 801ae46:	e7d9      	b.n	801adfc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xa4>
 801ae48:	f240 6054 	movw	r0, #1620	; 0x654
 801ae4c:	4283      	cmp	r3, r0
 801ae4e:	d8e3      	bhi.n	801ae18 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801ae50:	f5b3 6fca 	cmp.w	r3, #1616	; 0x650
 801ae54:	d9e0      	bls.n	801ae18 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801ae56:	e7b8      	b.n	801adca <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801ae58:	f240 6074 	movw	r0, #1652	; 0x674
 801ae5c:	4283      	cmp	r3, r0
 801ae5e:	d0b4      	beq.n	801adca <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801ae60:	d82d      	bhi.n	801aebe <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x166>
 801ae62:	f240 605e 	movw	r0, #1630	; 0x65e
 801ae66:	4283      	cmp	r3, r0
 801ae68:	d804      	bhi.n	801ae74 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x11c>
 801ae6a:	f240 605d 	movw	r0, #1629	; 0x65d
 801ae6e:	4283      	cmp	r3, r0
 801ae70:	d3d2      	bcc.n	801ae18 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801ae72:	e7aa      	b.n	801adca <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801ae74:	f240 605f 	movw	r0, #1631	; 0x65f
 801ae78:	4283      	cmp	r3, r0
 801ae7a:	d0cd      	beq.n	801ae18 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801ae7c:	f5b3 6fce 	cmp.w	r3, #1648	; 0x670
 801ae80:	d0a3      	beq.n	801adca <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801ae82:	00cb      	lsls	r3, r1, #3
 801ae84:	f403 7080 	and.w	r0, r3, #256	; 0x100
 801ae88:	7a13      	ldrb	r3, [r2, #8]
 801ae8a:	0649      	lsls	r1, r1, #25
 801ae8c:	ea43 0300 	orr.w	r3, r3, r0
 801ae90:	bf44      	itt	mi
 801ae92:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 801ae96:	b21b      	sxthmi	r3, r3
 801ae98:	1b5d      	subs	r5, r3, r5
 801ae9a:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 801ae9e:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 801aea2:	7b53      	ldrb	r3, [r2, #13]
 801aea4:	015b      	lsls	r3, r3, #5
 801aea6:	f403 7180 	and.w	r1, r3, #256	; 0x100
 801aeaa:	7993      	ldrb	r3, [r2, #6]
 801aeac:	430b      	orrs	r3, r1
 801aeae:	005b      	lsls	r3, r3, #1
 801aeb0:	2105      	movs	r1, #5
 801aeb2:	fb93 f3f1 	sdiv	r3, r3, r1
 801aeb6:	f992 1009 	ldrsb.w	r1, [r2, #9]
 801aeba:	440b      	add	r3, r1
 801aebc:	e756      	b.n	801ad6c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x14>
 801aebe:	f240 60e2 	movw	r0, #1762	; 0x6e2
 801aec2:	4283      	cmp	r3, r0
 801aec4:	d809      	bhi.n	801aeda <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x182>
 801aec6:	f240 60df 	movw	r0, #1759	; 0x6df
 801aeca:	4283      	cmp	r3, r0
 801aecc:	f4bf af7d 	bcs.w	801adca <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801aed0:	f2a3 63d6 	subw	r3, r3, #1750	; 0x6d6
 801aed4:	2b05      	cmp	r3, #5
 801aed6:	d8d4      	bhi.n	801ae82 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 801aed8:	e777      	b.n	801adca <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801aeda:	f240 60e3 	movw	r0, #1763	; 0x6e3
 801aede:	4283      	cmp	r3, r0
 801aee0:	d09a      	beq.n	801ae18 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801aee2:	f240 60e4 	movw	r0, #1764	; 0x6e4
 801aee6:	4283      	cmp	r3, r0
 801aee8:	e7ca      	b.n	801ae80 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 801aeea:	f5b3 6f0f 	cmp.w	r3, #2288	; 0x8f0
 801aeee:	d22b      	bcs.n	801af48 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1f0>
 801aef0:	f640 00ed 	movw	r0, #2285	; 0x8ed
 801aef4:	4283      	cmp	r3, r0
 801aef6:	d28f      	bcs.n	801ae18 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801aef8:	f640 00e5 	movw	r0, #2277	; 0x8e5
 801aefc:	4283      	cmp	r3, r0
 801aefe:	d816      	bhi.n	801af2e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d6>
 801af00:	f640 00e4 	movw	r0, #2276	; 0x8e4
 801af04:	4283      	cmp	r3, r0
 801af06:	f4bf af60 	bcs.w	801adca <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801af0a:	f240 60ec 	movw	r0, #1772	; 0x6ec
 801af0e:	4283      	cmp	r3, r0
 801af10:	d80a      	bhi.n	801af28 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d0>
 801af12:	f240 60eb 	movw	r0, #1771	; 0x6eb
 801af16:	4283      	cmp	r3, r0
 801af18:	f4bf af57 	bcs.w	801adca <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801af1c:	f240 60ea 	movw	r0, #1770	; 0x6ea
 801af20:	4283      	cmp	r3, r0
 801af22:	f43f af79 	beq.w	801ae18 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801af26:	e7ac      	b.n	801ae82 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 801af28:	f240 60ed 	movw	r0, #1773	; 0x6ed
 801af2c:	e7f8      	b.n	801af20 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1c8>
 801af2e:	f640 00e8 	movw	r0, #2280	; 0x8e8
 801af32:	4283      	cmp	r3, r0
 801af34:	d802      	bhi.n	801af3c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e4>
 801af36:	f640 00e7 	movw	r0, #2279	; 0x8e7
 801af3a:	e798      	b.n	801ae6e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x116>
 801af3c:	f640 00e9 	movw	r0, #2281	; 0x8e9
 801af40:	4283      	cmp	r3, r0
 801af42:	f47f af42 	bne.w	801adca <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801af46:	e767      	b.n	801ae18 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801af48:	f640 00f6 	movw	r0, #2294	; 0x8f6
 801af4c:	4283      	cmp	r3, r0
 801af4e:	f43f af63 	beq.w	801ae18 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801af52:	d802      	bhi.n	801af5a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x202>
 801af54:	f640 00f2 	movw	r0, #2290	; 0x8f2
 801af58:	e7f2      	b.n	801af40 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e8>
 801af5a:	f640 00fa 	movw	r0, #2298	; 0x8fa
 801af5e:	4283      	cmp	r3, r0
 801af60:	d805      	bhi.n	801af6e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x216>
 801af62:	f640 00f9 	movw	r0, #2297	; 0x8f9
 801af66:	4283      	cmp	r3, r0
 801af68:	f4ff af2f 	bcc.w	801adca <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801af6c:	e754      	b.n	801ae18 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801af6e:	f640 00fe 	movw	r0, #2302	; 0x8fe
 801af72:	4283      	cmp	r3, r0
 801af74:	e7af      	b.n	801aed6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x17e>
 801af76:	f104 0c4c 	add.w	ip, r4, #76	; 0x4c
 801af7a:	4617      	mov	r7, r2
 801af7c:	f102 0808 	add.w	r8, r2, #8
 801af80:	4666      	mov	r6, ip
 801af82:	6838      	ldr	r0, [r7, #0]
 801af84:	6879      	ldr	r1, [r7, #4]
 801af86:	46e6      	mov	lr, ip
 801af88:	e8ae 0003 	stmia.w	lr!, {r0, r1}
 801af8c:	3708      	adds	r7, #8
 801af8e:	4547      	cmp	r7, r8
 801af90:	46f4      	mov	ip, lr
 801af92:	d1f6      	bne.n	801af82 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x22a>
 801af94:	6838      	ldr	r0, [r7, #0]
 801af96:	f8ce 0000 	str.w	r0, [lr]
 801af9a:	88b9      	ldrh	r1, [r7, #4]
 801af9c:	f8ae 1004 	strh.w	r1, [lr, #4]
 801afa0:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	; 0x5e
 801afa4:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 801afa8:	d009      	beq.n	801afbe <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x266>
 801afaa:	7b51      	ldrb	r1, [r2, #13]
 801afac:	7992      	ldrb	r2, [r2, #6]
 801afae:	0149      	lsls	r1, r1, #5
 801afb0:	f401 7180 	and.w	r1, r1, #256	; 0x100
 801afb4:	4311      	orrs	r1, r2
 801afb6:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 801afba:	f884 0055 	strb.w	r0, [r4, #85]	; 0x55
 801afbe:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 801afc2:	b2ad      	uxth	r5, r5
 801afc4:	d00d      	beq.n	801afe2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x28a>
 801afc6:	442b      	add	r3, r5
 801afc8:	b29b      	uxth	r3, r3
 801afca:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 801afce:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 801afd2:	10db      	asrs	r3, r3, #3
 801afd4:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 801afd8:	f003 0360 	and.w	r3, r3, #96	; 0x60
 801afdc:	4313      	orrs	r3, r2
 801afde:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 801afe2:	f894 1059 	ldrb.w	r1, [r4, #89]	; 0x59
 801afe6:	00cb      	lsls	r3, r1, #3
 801afe8:	f403 7280 	and.w	r2, r3, #256	; 0x100
 801afec:	f894 3054 	ldrb.w	r3, [r4, #84]	; 0x54
 801aff0:	064f      	lsls	r7, r1, #25
 801aff2:	ea43 0302 	orr.w	r3, r3, r2
 801aff6:	bf44      	itt	mi
 801aff8:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 801affc:	b21b      	sxthmi	r3, r3
 801affe:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 801b002:	1b5b      	subs	r3, r3, r5
 801b004:	f8a4 305c 	strh.w	r3, [r4, #92]	; 0x5c
 801b008:	4632      	mov	r2, r6
 801b00a:	e6fa      	b.n	801ae02 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
 801b00c:	f104 0c4c 	add.w	ip, r4, #76	; 0x4c
 801b010:	4617      	mov	r7, r2
 801b012:	f102 0908 	add.w	r9, r2, #8
 801b016:	4666      	mov	r6, ip
 801b018:	6838      	ldr	r0, [r7, #0]
 801b01a:	6879      	ldr	r1, [r7, #4]
 801b01c:	46e0      	mov	r8, ip
 801b01e:	e8a8 0003 	stmia.w	r8!, {r0, r1}
 801b022:	3708      	adds	r7, #8
 801b024:	454f      	cmp	r7, r9
 801b026:	46c4      	mov	ip, r8
 801b028:	d1f6      	bne.n	801b018 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2c0>
 801b02a:	6838      	ldr	r0, [r7, #0]
 801b02c:	f8c8 0000 	str.w	r0, [r8]
 801b030:	88b9      	ldrh	r1, [r7, #4]
 801b032:	f8a8 1004 	strh.w	r1, [r8, #4]
 801b036:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	; 0x5e
 801b03a:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 801b03e:	d009      	beq.n	801b054 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2fc>
 801b040:	7b51      	ldrb	r1, [r2, #13]
 801b042:	7992      	ldrb	r2, [r2, #6]
 801b044:	0149      	lsls	r1, r1, #5
 801b046:	f401 7180 	and.w	r1, r1, #256	; 0x100
 801b04a:	4311      	orrs	r1, r2
 801b04c:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 801b050:	f884 0055 	strb.w	r0, [r4, #85]	; 0x55
 801b054:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 801b058:	d00e      	beq.n	801b078 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x320>
 801b05a:	eba3 030e 	sub.w	r3, r3, lr
 801b05e:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 801b062:	b29b      	uxth	r3, r3
 801b064:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 801b068:	10db      	asrs	r3, r3, #3
 801b06a:	f003 0360 	and.w	r3, r3, #96	; 0x60
 801b06e:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 801b072:	4313      	orrs	r3, r2
 801b074:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 801b078:	f894 1059 	ldrb.w	r1, [r4, #89]	; 0x59
 801b07c:	00cb      	lsls	r3, r1, #3
 801b07e:	f403 7280 	and.w	r2, r3, #256	; 0x100
 801b082:	f894 3054 	ldrb.w	r3, [r4, #84]	; 0x54
 801b086:	0648      	lsls	r0, r1, #25
 801b088:	ea43 0302 	orr.w	r3, r3, r2
 801b08c:	bf44      	itt	mi
 801b08e:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 801b092:	b21b      	sxthmi	r3, r3
 801b094:	1b5d      	subs	r5, r3, r5
 801b096:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 801b09a:	e7b5      	b.n	801b008 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b0>

0801b09c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>:
 801b09c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801b0a0:	461e      	mov	r6, r3
 801b0a2:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 801b0a4:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801b0a8:	4604      	mov	r4, r0
 801b0aa:	4617      	mov	r7, r2
 801b0ac:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 801b0b0:	f7f3 fe7c 	bl	800edac <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 801b0b4:	4605      	mov	r5, r0
 801b0b6:	b918      	cbnz	r0, 801b0c0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x24>
 801b0b8:	6030      	str	r0, [r6, #0]
 801b0ba:	4628      	mov	r0, r5
 801b0bc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801b0c0:	683b      	ldr	r3, [r7, #0]
 801b0c2:	4601      	mov	r1, r0
 801b0c4:	68db      	ldr	r3, [r3, #12]
 801b0c6:	4638      	mov	r0, r7
 801b0c8:	4798      	blx	r3
 801b0ca:	f5a8 63c0 	sub.w	r3, r8, #1536	; 0x600
 801b0ce:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 801b0d2:	4602      	mov	r2, r0
 801b0d4:	6030      	str	r0, [r6, #0]
 801b0d6:	d213      	bcs.n	801b100 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x64>
 801b0d8:	4643      	mov	r3, r8
 801b0da:	4639      	mov	r1, r7
 801b0dc:	4620      	mov	r0, r4
 801b0de:	f7ff fe3b 	bl	801ad58 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 801b0e2:	6030      	str	r0, [r6, #0]
 801b0e4:	6833      	ldr	r3, [r6, #0]
 801b0e6:	b143      	cbz	r3, 801b0fa <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x5e>
 801b0e8:	7b5a      	ldrb	r2, [r3, #13]
 801b0ea:	7a9b      	ldrb	r3, [r3, #10]
 801b0ec:	0052      	lsls	r2, r2, #1
 801b0ee:	f402 7280 	and.w	r2, r2, #256	; 0x100
 801b0f2:	4313      	orrs	r3, r2
 801b0f4:	bf0c      	ite	eq
 801b0f6:	2301      	moveq	r3, #1
 801b0f8:	2300      	movne	r3, #0
 801b0fa:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61
 801b0fe:	e7dc      	b.n	801b0ba <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x1e>
 801b100:	f5a5 6360 	sub.w	r3, r5, #3584	; 0xe00
 801b104:	b29b      	uxth	r3, r3
 801b106:	2b7f      	cmp	r3, #127	; 0x7f
 801b108:	d804      	bhi.n	801b114 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x78>
 801b10a:	4639      	mov	r1, r7
 801b10c:	4620      	mov	r0, r4
 801b10e:	f7ff fd17 	bl	801ab40 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 801b112:	e7e6      	b.n	801b0e2 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>
 801b114:	f894 3061 	ldrb.w	r3, [r4, #97]	; 0x61
 801b118:	2b00      	cmp	r3, #0
 801b11a:	d0e3      	beq.n	801b0e4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
 801b11c:	f640 1302 	movw	r3, #2306	; 0x902
 801b120:	429d      	cmp	r5, r3
 801b122:	d1df      	bne.n	801b0e4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
 801b124:	4601      	mov	r1, r0
 801b126:	4620      	mov	r0, r4
 801b128:	f7ff fcdc 	bl	801aae4 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 801b12c:	e7d9      	b.n	801b0e2 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>

0801b12e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>:
 801b12e:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 801b132:	461e      	mov	r6, r3
 801b134:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 801b136:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801b13a:	4604      	mov	r4, r0
 801b13c:	4617      	mov	r7, r2
 801b13e:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 801b142:	f7f3 fe33 	bl	800edac <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 801b146:	4605      	mov	r5, r0
 801b148:	b918      	cbnz	r0, 801b152 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x24>
 801b14a:	6030      	str	r0, [r6, #0]
 801b14c:	4628      	mov	r0, r5
 801b14e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 801b152:	683b      	ldr	r3, [r7, #0]
 801b154:	4601      	mov	r1, r0
 801b156:	f8d3 9008 	ldr.w	r9, [r3, #8]
 801b15a:	4638      	mov	r0, r7
 801b15c:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 801b160:	47c8      	blx	r9
 801b162:	f5a8 63c0 	sub.w	r3, r8, #1536	; 0x600
 801b166:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 801b16a:	4602      	mov	r2, r0
 801b16c:	6030      	str	r0, [r6, #0]
 801b16e:	d213      	bcs.n	801b198 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x6a>
 801b170:	4643      	mov	r3, r8
 801b172:	4639      	mov	r1, r7
 801b174:	4620      	mov	r0, r4
 801b176:	f7ff fdef 	bl	801ad58 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 801b17a:	6030      	str	r0, [r6, #0]
 801b17c:	6833      	ldr	r3, [r6, #0]
 801b17e:	b143      	cbz	r3, 801b192 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x64>
 801b180:	7b5a      	ldrb	r2, [r3, #13]
 801b182:	7a9b      	ldrb	r3, [r3, #10]
 801b184:	0052      	lsls	r2, r2, #1
 801b186:	f402 7280 	and.w	r2, r2, #256	; 0x100
 801b18a:	4313      	orrs	r3, r2
 801b18c:	bf0c      	ite	eq
 801b18e:	2301      	moveq	r3, #1
 801b190:	2300      	movne	r3, #0
 801b192:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61
 801b196:	e7d9      	b.n	801b14c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x1e>
 801b198:	f5a5 6360 	sub.w	r3, r5, #3584	; 0xe00
 801b19c:	b29b      	uxth	r3, r3
 801b19e:	2b7f      	cmp	r3, #127	; 0x7f
 801b1a0:	d804      	bhi.n	801b1ac <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x7e>
 801b1a2:	4639      	mov	r1, r7
 801b1a4:	4620      	mov	r0, r4
 801b1a6:	f7ff fccb 	bl	801ab40 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 801b1aa:	e7e6      	b.n	801b17a <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>
 801b1ac:	f894 3061 	ldrb.w	r3, [r4, #97]	; 0x61
 801b1b0:	2b00      	cmp	r3, #0
 801b1b2:	d0e3      	beq.n	801b17c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
 801b1b4:	f640 1302 	movw	r3, #2306	; 0x902
 801b1b8:	429d      	cmp	r5, r3
 801b1ba:	d1df      	bne.n	801b17c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
 801b1bc:	4601      	mov	r1, r0
 801b1be:	4620      	mov	r0, r4
 801b1c0:	f7ff fc90 	bl	801aae4 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 801b1c4:	e7d9      	b.n	801b17a <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>

0801b1c6 <_ZN8touchgfx12TextProvider15fillInputBufferEv>:
 801b1c6:	b510      	push	{r4, lr}
 801b1c8:	4604      	mov	r4, r0
 801b1ca:	f8b4 1040 	ldrh.w	r1, [r4, #64]	; 0x40
 801b1ce:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 801b1d0:	b1f1      	cbz	r1, 801b210 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4a>
 801b1d2:	2b0a      	cmp	r3, #10
 801b1d4:	d02f      	beq.n	801b236 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x70>
 801b1d6:	8fe2      	ldrh	r2, [r4, #62]	; 0x3e
 801b1d8:	eb04 0042 	add.w	r0, r4, r2, lsl #1
 801b1dc:	3901      	subs	r1, #1
 801b1de:	8f40      	ldrh	r0, [r0, #58]	; 0x3a
 801b1e0:	f8a4 1040 	strh.w	r1, [r4, #64]	; 0x40
 801b1e4:	1c51      	adds	r1, r2, #1
 801b1e6:	b289      	uxth	r1, r1
 801b1e8:	2901      	cmp	r1, #1
 801b1ea:	bf84      	itt	hi
 801b1ec:	f102 32ff 	addhi.w	r2, r2, #4294967295
 801b1f0:	87e2      	strhhi	r2, [r4, #62]	; 0x3e
 801b1f2:	f103 0201 	add.w	r2, r3, #1
 801b1f6:	8722      	strh	r2, [r4, #56]	; 0x38
 801b1f8:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 801b1fa:	bf98      	it	ls
 801b1fc:	87e1      	strhls	r1, [r4, #62]	; 0x3e
 801b1fe:	4413      	add	r3, r2
 801b200:	b29b      	uxth	r3, r3
 801b202:	2b09      	cmp	r3, #9
 801b204:	bf88      	it	hi
 801b206:	3b0a      	subhi	r3, #10
 801b208:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801b20c:	8458      	strh	r0, [r3, #34]	; 0x22
 801b20e:	e7dc      	b.n	801b1ca <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4>
 801b210:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 801b212:	2b0a      	cmp	r3, #10
 801b214:	d00f      	beq.n	801b236 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x70>
 801b216:	4620      	mov	r0, r4
 801b218:	f7fe ffb8 	bl	801a18c <_ZN8touchgfx12TextProvider19getNextCharInternalEv>
 801b21c:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 801b21e:	1c5a      	adds	r2, r3, #1
 801b220:	8722      	strh	r2, [r4, #56]	; 0x38
 801b222:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 801b224:	4413      	add	r3, r2
 801b226:	b29b      	uxth	r3, r3
 801b228:	2b09      	cmp	r3, #9
 801b22a:	bf88      	it	hi
 801b22c:	3b0a      	subhi	r3, #10
 801b22e:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801b232:	8458      	strh	r0, [r3, #34]	; 0x22
 801b234:	e7ec      	b.n	801b210 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4a>
 801b236:	bd10      	pop	{r4, pc}

0801b238 <_ZN8touchgfx12TextProvider11getNextCharEv>:
 801b238:	b538      	push	{r3, r4, r5, lr}
 801b23a:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 801b23c:	eb00 0243 	add.w	r2, r0, r3, lsl #1
 801b240:	4604      	mov	r4, r0
 801b242:	8c55      	ldrh	r5, [r2, #34]	; 0x22
 801b244:	8f02      	ldrh	r2, [r0, #56]	; 0x38
 801b246:	3a01      	subs	r2, #1
 801b248:	8702      	strh	r2, [r0, #56]	; 0x38
 801b24a:	1c5a      	adds	r2, r3, #1
 801b24c:	b292      	uxth	r2, r2
 801b24e:	2a09      	cmp	r2, #9
 801b250:	bf86      	itte	hi
 801b252:	3b09      	subhi	r3, #9
 801b254:	86c3      	strhhi	r3, [r0, #54]	; 0x36
 801b256:	86c2      	strhls	r2, [r0, #54]	; 0x36
 801b258:	f7ff ffb5 	bl	801b1c6 <_ZN8touchgfx12TextProvider15fillInputBufferEv>
 801b25c:	8c23      	ldrh	r3, [r4, #32]
 801b25e:	2b01      	cmp	r3, #1
 801b260:	bf9c      	itt	ls
 801b262:	3301      	addls	r3, #1
 801b264:	8423      	strhls	r3, [r4, #32]
 801b266:	8be3      	ldrh	r3, [r4, #30]
 801b268:	b90b      	cbnz	r3, 801b26e <_ZN8touchgfx12TextProvider11getNextCharEv+0x36>
 801b26a:	2302      	movs	r3, #2
 801b26c:	83e3      	strh	r3, [r4, #30]
 801b26e:	8be3      	ldrh	r3, [r4, #30]
 801b270:	3b01      	subs	r3, #1
 801b272:	b29b      	uxth	r3, r3
 801b274:	83e3      	strh	r3, [r4, #30]
 801b276:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801b27a:	4628      	mov	r0, r5
 801b27c:	8365      	strh	r5, [r4, #26]
 801b27e:	bd38      	pop	{r3, r4, r5, pc}

0801b280 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>:
 801b280:	428a      	cmp	r2, r1
 801b282:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801b286:	8ec7      	ldrh	r7, [r0, #54]	; 0x36
 801b288:	d931      	bls.n	801b2ee <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x6e>
 801b28a:	8f05      	ldrh	r5, [r0, #56]	; 0x38
 801b28c:	f8b0 8040 	ldrh.w	r8, [r0, #64]	; 0x40
 801b290:	f8b0 c03e 	ldrh.w	ip, [r0, #62]	; 0x3e
 801b294:	19ee      	adds	r6, r5, r7
 801b296:	1a54      	subs	r4, r2, r1
 801b298:	3e01      	subs	r6, #1
 801b29a:	fa1f fe84 	uxth.w	lr, r4
 801b29e:	b2b4      	uxth	r4, r6
 801b2a0:	eba4 090e 	sub.w	r9, r4, lr
 801b2a4:	fa1f f989 	uxth.w	r9, r9
 801b2a8:	2c09      	cmp	r4, #9
 801b2aa:	4626      	mov	r6, r4
 801b2ac:	bf88      	it	hi
 801b2ae:	f1a4 060a 	subhi.w	r6, r4, #10
 801b2b2:	f1bc 0f00 	cmp.w	ip, #0
 801b2b6:	bf08      	it	eq
 801b2b8:	f04f 0c02 	moveq.w	ip, #2
 801b2bc:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 801b2c0:	f10c 3cff 	add.w	ip, ip, #4294967295
 801b2c4:	fa1f fc8c 	uxth.w	ip, ip
 801b2c8:	3c01      	subs	r4, #1
 801b2ca:	f8b6 a022 	ldrh.w	sl, [r6, #34]	; 0x22
 801b2ce:	b2a4      	uxth	r4, r4
 801b2d0:	eb00 064c 	add.w	r6, r0, ip, lsl #1
 801b2d4:	454c      	cmp	r4, r9
 801b2d6:	f8a6 a03a 	strh.w	sl, [r6, #58]	; 0x3a
 801b2da:	d1e5      	bne.n	801b2a8 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x28>
 801b2dc:	eba5 050e 	sub.w	r5, r5, lr
 801b2e0:	eb0e 0408 	add.w	r4, lr, r8
 801b2e4:	8705      	strh	r5, [r0, #56]	; 0x38
 801b2e6:	f8a0 4040 	strh.w	r4, [r0, #64]	; 0x40
 801b2ea:	f8a0 c03e 	strh.w	ip, [r0, #62]	; 0x3e
 801b2ee:	8f04      	ldrh	r4, [r0, #56]	; 0x38
 801b2f0:	1a64      	subs	r4, r4, r1
 801b2f2:	4439      	add	r1, r7
 801b2f4:	b289      	uxth	r1, r1
 801b2f6:	2909      	cmp	r1, #9
 801b2f8:	bf88      	it	hi
 801b2fa:	390a      	subhi	r1, #10
 801b2fc:	8704      	strh	r4, [r0, #56]	; 0x38
 801b2fe:	86c1      	strh	r1, [r0, #54]	; 0x36
 801b300:	250a      	movs	r5, #10
 801b302:	b18a      	cbz	r2, 801b328 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0xa8>
 801b304:	8f01      	ldrh	r1, [r0, #56]	; 0x38
 801b306:	3a01      	subs	r2, #1
 801b308:	b292      	uxth	r2, r2
 801b30a:	3101      	adds	r1, #1
 801b30c:	f833 4012 	ldrh.w	r4, [r3, r2, lsl #1]
 801b310:	8701      	strh	r1, [r0, #56]	; 0x38
 801b312:	8ec1      	ldrh	r1, [r0, #54]	; 0x36
 801b314:	b901      	cbnz	r1, 801b318 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x98>
 801b316:	86c5      	strh	r5, [r0, #54]	; 0x36
 801b318:	8ec1      	ldrh	r1, [r0, #54]	; 0x36
 801b31a:	3901      	subs	r1, #1
 801b31c:	b289      	uxth	r1, r1
 801b31e:	86c1      	strh	r1, [r0, #54]	; 0x36
 801b320:	eb00 0141 	add.w	r1, r0, r1, lsl #1
 801b324:	844c      	strh	r4, [r1, #34]	; 0x22
 801b326:	e7ec      	b.n	801b302 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x82>
 801b328:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801b32c:	f7ff bf4b 	b.w	801b1c6 <_ZN8touchgfx12TextProvider15fillInputBufferEv>

0801b330 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>:
 801b330:	b570      	push	{r4, r5, r6, lr}
 801b332:	2500      	movs	r5, #0
 801b334:	4295      	cmp	r5, r2
 801b336:	d011      	beq.n	801b35c <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x2c>
 801b338:	8bc4      	ldrh	r4, [r0, #30]
 801b33a:	f831 6b02 	ldrh.w	r6, [r1], #2
 801b33e:	4414      	add	r4, r2
 801b340:	3c01      	subs	r4, #1
 801b342:	1b64      	subs	r4, r4, r5
 801b344:	b2a4      	uxth	r4, r4
 801b346:	2c01      	cmp	r4, #1
 801b348:	bf88      	it	hi
 801b34a:	3c02      	subhi	r4, #2
 801b34c:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 801b350:	8b64      	ldrh	r4, [r4, #26]
 801b352:	42b4      	cmp	r4, r6
 801b354:	d117      	bne.n	801b386 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x56>
 801b356:	3501      	adds	r5, #1
 801b358:	b2ad      	uxth	r5, r5
 801b35a:	e7eb      	b.n	801b334 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x4>
 801b35c:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801b360:	2400      	movs	r4, #0
 801b362:	4413      	add	r3, r2
 801b364:	b2a2      	uxth	r2, r4
 801b366:	429a      	cmp	r2, r3
 801b368:	da0f      	bge.n	801b38a <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x5a>
 801b36a:	8ec6      	ldrh	r6, [r0, #54]	; 0x36
 801b36c:	f831 5014 	ldrh.w	r5, [r1, r4, lsl #1]
 801b370:	4432      	add	r2, r6
 801b372:	b292      	uxth	r2, r2
 801b374:	2a09      	cmp	r2, #9
 801b376:	bf88      	it	hi
 801b378:	3a0a      	subhi	r2, #10
 801b37a:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 801b37e:	3401      	adds	r4, #1
 801b380:	8c52      	ldrh	r2, [r2, #34]	; 0x22
 801b382:	42aa      	cmp	r2, r5
 801b384:	d0ee      	beq.n	801b364 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x34>
 801b386:	2000      	movs	r0, #0
 801b388:	bd70      	pop	{r4, r5, r6, pc}
 801b38a:	2001      	movs	r0, #1
 801b38c:	e7fc      	b.n	801b388 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x58>

0801b38e <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>:
 801b38e:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b392:	4605      	mov	r5, r0
 801b394:	4616      	mov	r6, r2
 801b396:	1c8c      	adds	r4, r1, #2
 801b398:	8809      	ldrh	r1, [r1, #0]
 801b39a:	ea4f 3a11 	mov.w	sl, r1, lsr #12
 801b39e:	f834 301a 	ldrh.w	r3, [r4, sl, lsl #1]
 801b3a2:	42b3      	cmp	r3, r6
 801b3a4:	d124      	bne.n	801b3f0 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x62>
 801b3a6:	f3c1 2903 	ubfx	r9, r1, #8, #4
 801b3aa:	f3c1 1803 	ubfx	r8, r1, #4, #4
 801b3ae:	f001 070f 	and.w	r7, r1, #15
 801b3b2:	f8cd 8000 	str.w	r8, [sp]
 801b3b6:	464b      	mov	r3, r9
 801b3b8:	4652      	mov	r2, sl
 801b3ba:	4621      	mov	r1, r4
 801b3bc:	4628      	mov	r0, r5
 801b3be:	f7ff ffb7 	bl	801b330 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>
 801b3c2:	4683      	mov	fp, r0
 801b3c4:	b168      	cbz	r0, 801b3e2 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x54>
 801b3c6:	eb0a 0109 	add.w	r1, sl, r9
 801b3ca:	4441      	add	r1, r8
 801b3cc:	eb04 0341 	add.w	r3, r4, r1, lsl #1
 801b3d0:	463a      	mov	r2, r7
 801b3d2:	4649      	mov	r1, r9
 801b3d4:	4628      	mov	r0, r5
 801b3d6:	f7ff ff53 	bl	801b280 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>
 801b3da:	4658      	mov	r0, fp
 801b3dc:	b003      	add	sp, #12
 801b3de:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801b3e2:	eb07 010a 	add.w	r1, r7, sl
 801b3e6:	4449      	add	r1, r9
 801b3e8:	4441      	add	r1, r8
 801b3ea:	eb04 0141 	add.w	r1, r4, r1, lsl #1
 801b3ee:	e7d2      	b.n	801b396 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x8>
 801b3f0:	f04f 0b00 	mov.w	fp, #0
 801b3f4:	e7f1      	b.n	801b3da <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x4c>

0801b3f6 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>:
 801b3f6:	b570      	push	{r4, r5, r6, lr}
 801b3f8:	8810      	ldrh	r0, [r2, #0]
 801b3fa:	4298      	cmp	r0, r3
 801b3fc:	d817      	bhi.n	801b42e <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 801b3fe:	1e48      	subs	r0, r1, #1
 801b400:	f832 0020 	ldrh.w	r0, [r2, r0, lsl #2]
 801b404:	4298      	cmp	r0, r3
 801b406:	d312      	bcc.n	801b42e <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 801b408:	2400      	movs	r4, #0
 801b40a:	428c      	cmp	r4, r1
 801b40c:	d20f      	bcs.n	801b42e <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 801b40e:	1860      	adds	r0, r4, r1
 801b410:	1040      	asrs	r0, r0, #1
 801b412:	0085      	lsls	r5, r0, #2
 801b414:	f832 6020 	ldrh.w	r6, [r2, r0, lsl #2]
 801b418:	42b3      	cmp	r3, r6
 801b41a:	d902      	bls.n	801b422 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x2c>
 801b41c:	3001      	adds	r0, #1
 801b41e:	b284      	uxth	r4, r0
 801b420:	e7f3      	b.n	801b40a <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 801b422:	d201      	bcs.n	801b428 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x32>
 801b424:	b281      	uxth	r1, r0
 801b426:	e7f0      	b.n	801b40a <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 801b428:	442a      	add	r2, r5
 801b42a:	8850      	ldrh	r0, [r2, #2]
 801b42c:	bd70      	pop	{r4, r5, r6, pc}
 801b42e:	2000      	movs	r0, #0
 801b430:	e7fc      	b.n	801b42c <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x36>

0801b432 <_ZN8touchgfx12TextProvider16substituteGlyphsEv>:
 801b432:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801b436:	6c45      	ldr	r5, [r0, #68]	; 0x44
 801b438:	886f      	ldrh	r7, [r5, #2]
 801b43a:	4604      	mov	r4, r0
 801b43c:	087f      	lsrs	r7, r7, #1
 801b43e:	260b      	movs	r6, #11
 801b440:	3e01      	subs	r6, #1
 801b442:	d013      	beq.n	801b46c <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
 801b444:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 801b446:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801b44a:	462a      	mov	r2, r5
 801b44c:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 801b450:	4639      	mov	r1, r7
 801b452:	4643      	mov	r3, r8
 801b454:	4620      	mov	r0, r4
 801b456:	f7ff ffce 	bl	801b3f6 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>
 801b45a:	b138      	cbz	r0, 801b46c <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
 801b45c:	eb05 0140 	add.w	r1, r5, r0, lsl #1
 801b460:	4642      	mov	r2, r8
 801b462:	4620      	mov	r0, r4
 801b464:	f7ff ff93 	bl	801b38e <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>
 801b468:	2800      	cmp	r0, #0
 801b46a:	d1e9      	bne.n	801b440 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0xe>
 801b46c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0801b470 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>:
 801b470:	b570      	push	{r4, r5, r6, lr}
 801b472:	694a      	ldr	r2, [r1, #20]
 801b474:	6a8d      	ldr	r5, [r1, #40]	; 0x28
 801b476:	684b      	ldr	r3, [r1, #4]
 801b478:	6ace      	ldr	r6, [r1, #44]	; 0x2c
 801b47a:	1b54      	subs	r4, r2, r5
 801b47c:	f000 8106 	beq.w	801b68c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x21c>
 801b480:	1b9b      	subs	r3, r3, r6
 801b482:	d003      	beq.n	801b48c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 801b484:	4363      	muls	r3, r4
 801b486:	2210      	movs	r2, #16
 801b488:	fb93 f3f2 	sdiv	r3, r3, r2
 801b48c:	680c      	ldr	r4, [r1, #0]
 801b48e:	698a      	ldr	r2, [r1, #24]
 801b490:	1b65      	subs	r5, r4, r5
 801b492:	f000 80fd 	beq.w	801b690 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x220>
 801b496:	1b92      	subs	r2, r2, r6
 801b498:	d003      	beq.n	801b4a2 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 801b49a:	436a      	muls	r2, r5
 801b49c:	2410      	movs	r4, #16
 801b49e:	fb92 f2f4 	sdiv	r2, r2, r4
 801b4a2:	1a9b      	subs	r3, r3, r2
 801b4a4:	ee07 3a90 	vmov	s15, r3
 801b4a8:	ed9f 4a88 	vldr	s8, [pc, #544]	; 801b6cc <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x25c>
 801b4ac:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801b4b0:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801b4b4:	ee67 7a84 	vmul.f32	s15, s15, s8
 801b4b8:	460a      	mov	r2, r1
 801b4ba:	ee87 3a27 	vdiv.f32	s6, s14, s15
 801b4be:	4603      	mov	r3, r0
 801b4c0:	f100 040c 	add.w	r4, r0, #12
 801b4c4:	eeb1 6a43 	vneg.f32	s12, s6
 801b4c8:	edd2 7a02 	vldr	s15, [r2, #8]
 801b4cc:	eec7 6a27 	vdiv.f32	s13, s14, s15
 801b4d0:	3214      	adds	r2, #20
 801b4d2:	ece3 6a01 	vstmia	r3!, {s13}
 801b4d6:	ed52 7a02 	vldr	s15, [r2, #-8]
 801b4da:	ee67 7aa6 	vmul.f32	s15, s15, s13
 801b4de:	429c      	cmp	r4, r3
 801b4e0:	edc3 7a02 	vstr	s15, [r3, #8]
 801b4e4:	ed52 7a01 	vldr	s15, [r2, #-4]
 801b4e8:	ee67 7aa6 	vmul.f32	s15, s15, s13
 801b4ec:	edc3 7a05 	vstr	s15, [r3, #20]
 801b4f0:	d1ea      	bne.n	801b4c8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x58>
 801b4f2:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 801b4f4:	698b      	ldr	r3, [r1, #24]
 801b4f6:	edd0 4a02 	vldr	s9, [r0, #8]
 801b4fa:	edd0 3a00 	vldr	s7, [r0]
 801b4fe:	edd0 6a01 	vldr	s13, [r0, #4]
 801b502:	ed90 5a05 	vldr	s10, [r0, #20]
 801b506:	ed90 2a03 	vldr	s4, [r0, #12]
 801b50a:	edd0 5a04 	vldr	s11, [r0, #16]
 801b50e:	ed90 1a07 	vldr	s2, [r0, #28]
 801b512:	edd0 2a06 	vldr	s5, [r0, #24]
 801b516:	1a9b      	subs	r3, r3, r2
 801b518:	ee07 3a90 	vmov	s15, r3
 801b51c:	684b      	ldr	r3, [r1, #4]
 801b51e:	1a9b      	subs	r3, r3, r2
 801b520:	ee07 3a10 	vmov	s14, r3
 801b524:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801b528:	ee76 6ae4 	vsub.f32	s13, s13, s9
 801b52c:	ee67 7a84 	vmul.f32	s15, s15, s8
 801b530:	ee73 4ae4 	vsub.f32	s9, s7, s9
 801b534:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801b538:	ee64 7ae7 	vnmul.f32	s15, s9, s15
 801b53c:	ee27 7a04 	vmul.f32	s14, s14, s8
 801b540:	ee75 5ac5 	vsub.f32	s11, s11, s10
 801b544:	eee6 7a87 	vfma.f32	s15, s13, s14
 801b548:	ee32 5a45 	vsub.f32	s10, s4, s10
 801b54c:	ee67 7a83 	vmul.f32	s15, s15, s6
 801b550:	edc0 7a09 	vstr	s15, [r0, #36]	; 0x24
 801b554:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 801b556:	694a      	ldr	r2, [r1, #20]
 801b558:	1b13      	subs	r3, r2, r4
 801b55a:	ee07 3a10 	vmov	s14, r3
 801b55e:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801b562:	680b      	ldr	r3, [r1, #0]
 801b564:	ee27 7a04 	vmul.f32	s14, s14, s8
 801b568:	1b1b      	subs	r3, r3, r4
 801b56a:	ee64 4ac7 	vnmul.f32	s9, s9, s14
 801b56e:	ee07 3a10 	vmov	s14, r3
 801b572:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801b576:	ee27 7a04 	vmul.f32	s14, s14, s8
 801b57a:	eee6 4a87 	vfma.f32	s9, s13, s14
 801b57e:	ee64 4a86 	vmul.f32	s9, s9, s12
 801b582:	edc0 4a0a 	vstr	s9, [r0, #40]	; 0x28
 801b586:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 801b588:	698b      	ldr	r3, [r1, #24]
 801b58a:	1a9b      	subs	r3, r3, r2
 801b58c:	ee06 3a90 	vmov	s13, r3
 801b590:	684b      	ldr	r3, [r1, #4]
 801b592:	1a9b      	subs	r3, r3, r2
 801b594:	ee07 3a10 	vmov	s14, r3
 801b598:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 801b59c:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801b5a0:	ee66 6a84 	vmul.f32	s13, s13, s8
 801b5a4:	ee27 7a04 	vmul.f32	s14, s14, s8
 801b5a8:	ee65 6a66 	vnmul.f32	s13, s10, s13
 801b5ac:	eee5 6a87 	vfma.f32	s13, s11, s14
 801b5b0:	ee66 6a83 	vmul.f32	s13, s13, s6
 801b5b4:	edc0 6a0b 	vstr	s13, [r0, #44]	; 0x2c
 801b5b8:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 801b5ba:	694a      	ldr	r2, [r1, #20]
 801b5bc:	1b13      	subs	r3, r2, r4
 801b5be:	ee07 3a10 	vmov	s14, r3
 801b5c2:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801b5c6:	680b      	ldr	r3, [r1, #0]
 801b5c8:	ee27 7a04 	vmul.f32	s14, s14, s8
 801b5cc:	1b1b      	subs	r3, r3, r4
 801b5ce:	ee25 5a47 	vnmul.f32	s10, s10, s14
 801b5d2:	ee07 3a10 	vmov	s14, r3
 801b5d6:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801b5da:	ee27 7a04 	vmul.f32	s14, s14, s8
 801b5de:	eea5 5a87 	vfma.f32	s10, s11, s14
 801b5e2:	edd0 5a08 	vldr	s11, [r0, #32]
 801b5e6:	ee25 5a06 	vmul.f32	s10, s10, s12
 801b5ea:	ee31 1a65 	vsub.f32	s2, s2, s11
 801b5ee:	ed80 5a0c 	vstr	s10, [r0, #48]	; 0x30
 801b5f2:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 801b5f4:	698b      	ldr	r3, [r1, #24]
 801b5f6:	1a9b      	subs	r3, r3, r2
 801b5f8:	ee07 3a10 	vmov	s14, r3
 801b5fc:	684b      	ldr	r3, [r1, #4]
 801b5fe:	1a9b      	subs	r3, r3, r2
 801b600:	ee01 3a90 	vmov	s3, r3
 801b604:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801b608:	ee72 5ae5 	vsub.f32	s11, s5, s11
 801b60c:	ee27 7a04 	vmul.f32	s14, s14, s8
 801b610:	eef8 1ae1 	vcvt.f32.s32	s3, s3
 801b614:	ee25 7ac7 	vnmul.f32	s14, s11, s14
 801b618:	ee61 1a84 	vmul.f32	s3, s3, s8
 801b61c:	eea1 7a21 	vfma.f32	s14, s2, s3
 801b620:	ee27 7a03 	vmul.f32	s14, s14, s6
 801b624:	ed80 7a0d 	vstr	s14, [r0, #52]	; 0x34
 801b628:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 801b62a:	694a      	ldr	r2, [r1, #20]
 801b62c:	1b13      	subs	r3, r2, r4
 801b62e:	ee03 3a10 	vmov	s6, r3
 801b632:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 801b636:	680b      	ldr	r3, [r1, #0]
 801b638:	ee23 3a04 	vmul.f32	s6, s6, s8
 801b63c:	1b1b      	subs	r3, r3, r4
 801b63e:	ee65 5ac3 	vnmul.f32	s11, s11, s6
 801b642:	ee03 3a10 	vmov	s6, r3
 801b646:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 801b64a:	ee23 4a04 	vmul.f32	s8, s6, s8
 801b64e:	eee1 5a04 	vfma.f32	s11, s2, s8
 801b652:	ee25 6a86 	vmul.f32	s12, s11, s12
 801b656:	ee62 5a67 	vnmul.f32	s11, s4, s15
 801b65a:	ed80 6a0e 	vstr	s12, [r0, #56]	; 0x38
 801b65e:	eee3 5aa6 	vfma.f32	s11, s7, s13
 801b662:	eef5 5ac0 	vcmpe.f32	s11, #0.0
 801b666:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801b66a:	dd13      	ble.n	801b694 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x224>
 801b66c:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 801b670:	ee62 7ae7 	vnmul.f32	s15, s5, s15
 801b674:	63c3      	str	r3, [r0, #60]	; 0x3c
 801b676:	eee3 7a87 	vfma.f32	s15, s7, s14
 801b67a:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 801b67e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801b682:	dd15      	ble.n	801b6b0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x240>
 801b684:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 801b688:	6403      	str	r3, [r0, #64]	; 0x40
 801b68a:	bd70      	pop	{r4, r5, r6, pc}
 801b68c:	4623      	mov	r3, r4
 801b68e:	e6fd      	b.n	801b48c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 801b690:	462a      	mov	r2, r5
 801b692:	e706      	b.n	801b4a2 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 801b694:	d502      	bpl.n	801b69c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x22c>
 801b696:	f647 73ff 	movw	r3, #32767	; 0x7fff
 801b69a:	e7e9      	b.n	801b670 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x200>
 801b69c:	ee22 2a64 	vnmul.f32	s4, s4, s9
 801b6a0:	eea3 2a85 	vfma.f32	s4, s7, s10
 801b6a4:	eeb5 2ac0 	vcmpe.f32	s4, #0.0
 801b6a8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801b6ac:	dade      	bge.n	801b66c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1fc>
 801b6ae:	e7f2      	b.n	801b696 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x226>
 801b6b0:	d502      	bpl.n	801b6b8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x248>
 801b6b2:	f647 73ff 	movw	r3, #32767	; 0x7fff
 801b6b6:	e7e7      	b.n	801b688 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x218>
 801b6b8:	ee62 4ae4 	vnmul.f32	s9, s5, s9
 801b6bc:	eee3 4a86 	vfma.f32	s9, s7, s12
 801b6c0:	eef5 4ac0 	vcmpe.f32	s9, #0.0
 801b6c4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801b6c8:	dadc      	bge.n	801b684 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x214>
 801b6ca:	e7f2      	b.n	801b6b2 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x242>
 801b6cc:	3d800000 	.word	0x3d800000

0801b6d0 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>:
 801b6d0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801b6d4:	2714      	movs	r7, #20
 801b6d6:	435f      	muls	r7, r3
 801b6d8:	eb02 0c07 	add.w	ip, r2, r7
 801b6dc:	f8dc 5004 	ldr.w	r5, [ip, #4]
 801b6e0:	f115 0e0f 	adds.w	lr, r5, #15
 801b6e4:	f100 80a2 	bmi.w	801b82c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x15c>
 801b6e8:	ea4f 1e2e 	mov.w	lr, lr, asr #4
 801b6ec:	9c08      	ldr	r4, [sp, #32]
 801b6ee:	f8c0 e014 	str.w	lr, [r0, #20]
 801b6f2:	2614      	movs	r6, #20
 801b6f4:	4366      	muls	r6, r4
 801b6f6:	eb02 0806 	add.w	r8, r2, r6
 801b6fa:	f8d8 5004 	ldr.w	r5, [r8, #4]
 801b6fe:	f115 040f 	adds.w	r4, r5, #15
 801b702:	f100 809f 	bmi.w	801b844 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x174>
 801b706:	1124      	asrs	r4, r4, #4
 801b708:	eba4 040e 	sub.w	r4, r4, lr
 801b70c:	6184      	str	r4, [r0, #24]
 801b70e:	2c00      	cmp	r4, #0
 801b710:	f000 808a 	beq.w	801b828 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x158>
 801b714:	f8dc 9004 	ldr.w	r9, [ip, #4]
 801b718:	f8d8 4004 	ldr.w	r4, [r8, #4]
 801b71c:	5995      	ldr	r5, [r2, r6]
 801b71e:	eba4 0809 	sub.w	r8, r4, r9
 801b722:	59d4      	ldr	r4, [r2, r7]
 801b724:	eba5 0a04 	sub.w	sl, r5, r4
 801b728:	ea4f 150a 	mov.w	r5, sl, lsl #4
 801b72c:	fb0e fe05 	mul.w	lr, lr, r5
 801b730:	fb0a ee19 	mls	lr, sl, r9, lr
 801b734:	fb08 e404 	mla	r4, r8, r4, lr
 801b738:	ea4f 1608 	mov.w	r6, r8, lsl #4
 801b73c:	3c01      	subs	r4, #1
 801b73e:	19a4      	adds	r4, r4, r6
 801b740:	f100 808c 	bmi.w	801b85c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x18c>
 801b744:	fb94 fef6 	sdiv	lr, r4, r6
 801b748:	f8c0 e000 	str.w	lr, [r0]
 801b74c:	fb06 441e 	mls	r4, r6, lr, r4
 801b750:	6104      	str	r4, [r0, #16]
 801b752:	2d00      	cmp	r5, #0
 801b754:	f2c0 8095 	blt.w	801b882 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1b2>
 801b758:	fb95 f4f6 	sdiv	r4, r5, r6
 801b75c:	6044      	str	r4, [r0, #4]
 801b75e:	fb06 5514 	mls	r5, r6, r4, r5
 801b762:	6085      	str	r5, [r0, #8]
 801b764:	60c6      	str	r6, [r0, #12]
 801b766:	f8dc 4004 	ldr.w	r4, [ip, #4]
 801b76a:	6945      	ldr	r5, [r0, #20]
 801b76c:	59d2      	ldr	r2, [r2, r7]
 801b76e:	eddf 6a4d 	vldr	s13, [pc, #308]	; 801b8a4 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1d4>
 801b772:	ed91 6a0a 	vldr	s12, [r1, #40]	; 0x28
 801b776:	ebc4 1405 	rsb	r4, r4, r5, lsl #4
 801b77a:	ee07 4a10 	vmov	s14, r4
 801b77e:	6804      	ldr	r4, [r0, #0]
 801b780:	ebc2 1204 	rsb	r2, r2, r4, lsl #4
 801b784:	ee07 2a90 	vmov	s15, r2
 801b788:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801b78c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801b790:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 801b794:	ee27 7a26 	vmul.f32	s14, s14, s13
 801b798:	ee67 7aa6 	vmul.f32	s15, s15, s13
 801b79c:	edd3 6a00 	vldr	s13, [r3]
 801b7a0:	eee6 6a07 	vfma.f32	s13, s12, s14
 801b7a4:	ed91 6a09 	vldr	s12, [r1, #36]	; 0x24
 801b7a8:	eee6 6a27 	vfma.f32	s13, s12, s15
 801b7ac:	edc0 6a07 	vstr	s13, [r0, #28]
 801b7b0:	edd0 6a01 	vldr	s13, [r0, #4]
 801b7b4:	edd1 5a09 	vldr	s11, [r1, #36]	; 0x24
 801b7b8:	ed91 6a0a 	vldr	s12, [r1, #40]	; 0x28
 801b7bc:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 801b7c0:	eea6 6aa5 	vfma.f32	s12, s13, s11
 801b7c4:	ed80 6a08 	vstr	s12, [r0, #32]
 801b7c8:	6a4a      	ldr	r2, [r1, #36]	; 0x24
 801b7ca:	6242      	str	r2, [r0, #36]	; 0x24
 801b7cc:	edd1 5a0c 	vldr	s11, [r1, #48]	; 0x30
 801b7d0:	ed93 6a03 	vldr	s12, [r3, #12]
 801b7d4:	eea5 6a87 	vfma.f32	s12, s11, s14
 801b7d8:	edd1 5a0b 	vldr	s11, [r1, #44]	; 0x2c
 801b7dc:	eea5 6aa7 	vfma.f32	s12, s11, s15
 801b7e0:	ed80 6a0a 	vstr	s12, [r0, #40]	; 0x28
 801b7e4:	edd1 5a0b 	vldr	s11, [r1, #44]	; 0x2c
 801b7e8:	ed91 6a0c 	vldr	s12, [r1, #48]	; 0x30
 801b7ec:	eea6 6aa5 	vfma.f32	s12, s13, s11
 801b7f0:	ed80 6a0b 	vstr	s12, [r0, #44]	; 0x2c
 801b7f4:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 801b7f6:	6302      	str	r2, [r0, #48]	; 0x30
 801b7f8:	ed93 6a06 	vldr	s12, [r3, #24]
 801b7fc:	edd1 5a0e 	vldr	s11, [r1, #56]	; 0x38
 801b800:	eea5 6a87 	vfma.f32	s12, s11, s14
 801b804:	eeb0 7a46 	vmov.f32	s14, s12
 801b808:	ed91 6a0d 	vldr	s12, [r1, #52]	; 0x34
 801b80c:	eea6 7a27 	vfma.f32	s14, s12, s15
 801b810:	ed80 7a0d 	vstr	s14, [r0, #52]	; 0x34
 801b814:	ed91 7a0d 	vldr	s14, [r1, #52]	; 0x34
 801b818:	edd1 7a0e 	vldr	s15, [r1, #56]	; 0x38
 801b81c:	eee6 7a87 	vfma.f32	s15, s13, s14
 801b820:	edc0 7a0e 	vstr	s15, [r0, #56]	; 0x38
 801b824:	6b4b      	ldr	r3, [r1, #52]	; 0x34
 801b826:	63c3      	str	r3, [r0, #60]	; 0x3c
 801b828:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801b82c:	f1c5 0501 	rsb	r5, r5, #1
 801b830:	f015 050f 	ands.w	r5, r5, #15
 801b834:	bf18      	it	ne
 801b836:	2501      	movne	r5, #1
 801b838:	2410      	movs	r4, #16
 801b83a:	fb9e fef4 	sdiv	lr, lr, r4
 801b83e:	ebae 0e05 	sub.w	lr, lr, r5
 801b842:	e753      	b.n	801b6ec <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1c>
 801b844:	f1c5 0501 	rsb	r5, r5, #1
 801b848:	f015 050f 	ands.w	r5, r5, #15
 801b84c:	bf18      	it	ne
 801b84e:	2501      	movne	r5, #1
 801b850:	f04f 0910 	mov.w	r9, #16
 801b854:	fb94 f4f9 	sdiv	r4, r4, r9
 801b858:	1b64      	subs	r4, r4, r5
 801b85a:	e755      	b.n	801b708 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x38>
 801b85c:	4264      	negs	r4, r4
 801b85e:	fb94 fef6 	sdiv	lr, r4, r6
 801b862:	f1ce 0800 	rsb	r8, lr, #0
 801b866:	fb06 441e 	mls	r4, r6, lr, r4
 801b86a:	f8c0 8000 	str.w	r8, [r0]
 801b86e:	6104      	str	r4, [r0, #16]
 801b870:	2c00      	cmp	r4, #0
 801b872:	f43f af6e 	beq.w	801b752 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x82>
 801b876:	ea6f 0e0e 	mvn.w	lr, lr
 801b87a:	f8c0 e000 	str.w	lr, [r0]
 801b87e:	1b34      	subs	r4, r6, r4
 801b880:	e766      	b.n	801b750 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x80>
 801b882:	426d      	negs	r5, r5
 801b884:	fb95 f4f6 	sdiv	r4, r5, r6
 801b888:	f1c4 0e00 	rsb	lr, r4, #0
 801b88c:	fb06 5514 	mls	r5, r6, r4, r5
 801b890:	f8c0 e004 	str.w	lr, [r0, #4]
 801b894:	6085      	str	r5, [r0, #8]
 801b896:	2d00      	cmp	r5, #0
 801b898:	f43f af64 	beq.w	801b764 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x94>
 801b89c:	43e4      	mvns	r4, r4
 801b89e:	6044      	str	r4, [r0, #4]
 801b8a0:	1b75      	subs	r5, r6, r5
 801b8a2:	e75e      	b.n	801b762 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x92>
 801b8a4:	3d800000 	.word	0x3d800000

0801b8a8 <_ZN8touchgfx7Unicode6strlenEPKt>:
 801b8a8:	4602      	mov	r2, r0
 801b8aa:	b148      	cbz	r0, 801b8c0 <_ZN8touchgfx7Unicode6strlenEPKt+0x18>
 801b8ac:	2300      	movs	r3, #0
 801b8ae:	b298      	uxth	r0, r3
 801b8b0:	3301      	adds	r3, #1
 801b8b2:	eb02 0143 	add.w	r1, r2, r3, lsl #1
 801b8b6:	f831 1c02 	ldrh.w	r1, [r1, #-2]
 801b8ba:	2900      	cmp	r1, #0
 801b8bc:	d1f7      	bne.n	801b8ae <_ZN8touchgfx7Unicode6strlenEPKt+0x6>
 801b8be:	4770      	bx	lr
 801b8c0:	4770      	bx	lr

0801b8c2 <_ZN8touchgfx7Unicode7strncpyEPtPKct>:
 801b8c2:	b530      	push	{r4, r5, lr}
 801b8c4:	4604      	mov	r4, r0
 801b8c6:	b159      	cbz	r1, 801b8e0 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1e>
 801b8c8:	b148      	cbz	r0, 801b8de <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
 801b8ca:	2300      	movs	r3, #0
 801b8cc:	b298      	uxth	r0, r3
 801b8ce:	4282      	cmp	r2, r0
 801b8d0:	d905      	bls.n	801b8de <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
 801b8d2:	5ccd      	ldrb	r5, [r1, r3]
 801b8d4:	f824 5013 	strh.w	r5, [r4, r3, lsl #1]
 801b8d8:	3301      	adds	r3, #1
 801b8da:	2d00      	cmp	r5, #0
 801b8dc:	d1f6      	bne.n	801b8cc <_ZN8touchgfx7Unicode7strncpyEPtPKct+0xa>
 801b8de:	bd30      	pop	{r4, r5, pc}
 801b8e0:	4608      	mov	r0, r1
 801b8e2:	e7fc      	b.n	801b8de <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>

0801b8e4 <_ZN8touchgfx7Unicode4itoaElPtti.part.2>:
 801b8e4:	b5f0      	push	{r4, r5, r6, r7, lr}
 801b8e6:	b08b      	sub	sp, #44	; 0x2c
 801b8e8:	468c      	mov	ip, r1
 801b8ea:	2100      	movs	r1, #0
 801b8ec:	f88d 1024 	strb.w	r1, [sp, #36]	; 0x24
 801b8f0:	4604      	mov	r4, r0
 801b8f2:	261f      	movs	r6, #31
 801b8f4:	af01      	add	r7, sp, #4
 801b8f6:	fb94 fef3 	sdiv	lr, r4, r3
 801b8fa:	fb03 441e 	mls	r4, r3, lr, r4
 801b8fe:	ea84 75e4 	eor.w	r5, r4, r4, asr #31
 801b902:	eba5 75e4 	sub.w	r5, r5, r4, asr #31
 801b906:	b2ec      	uxtb	r4, r5
 801b908:	2d09      	cmp	r5, #9
 801b90a:	bfd4      	ite	le
 801b90c:	3430      	addle	r4, #48	; 0x30
 801b90e:	3457      	addgt	r4, #87	; 0x57
 801b910:	b2e4      	uxtb	r4, r4
 801b912:	55bc      	strb	r4, [r7, r6]
 801b914:	4674      	mov	r4, lr
 801b916:	1e71      	subs	r1, r6, #1
 801b918:	b974      	cbnz	r4, 801b938 <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x54>
 801b91a:	2800      	cmp	r0, #0
 801b91c:	da05      	bge.n	801b92a <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x46>
 801b91e:	ab0a      	add	r3, sp, #40	; 0x28
 801b920:	4419      	add	r1, r3
 801b922:	232d      	movs	r3, #45	; 0x2d
 801b924:	f801 3c24 	strb.w	r3, [r1, #-36]
 801b928:	1eb1      	subs	r1, r6, #2
 801b92a:	3101      	adds	r1, #1
 801b92c:	4439      	add	r1, r7
 801b92e:	4660      	mov	r0, ip
 801b930:	f7ff ffc7 	bl	801b8c2 <_ZN8touchgfx7Unicode7strncpyEPtPKct>
 801b934:	b00b      	add	sp, #44	; 0x2c
 801b936:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801b938:	460e      	mov	r6, r1
 801b93a:	e7dc      	b.n	801b8f6 <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x12>

0801b93c <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>:
 801b93c:	b5f0      	push	{r4, r5, r6, r7, lr}
 801b93e:	b08b      	sub	sp, #44	; 0x2c
 801b940:	468c      	mov	ip, r1
 801b942:	2100      	movs	r1, #0
 801b944:	f88d 1024 	strb.w	r1, [sp, #36]	; 0x24
 801b948:	ae01      	add	r6, sp, #4
 801b94a:	211f      	movs	r1, #31
 801b94c:	fbb0 f7f3 	udiv	r7, r0, r3
 801b950:	fb03 0517 	mls	r5, r3, r7, r0
 801b954:	b2ec      	uxtb	r4, r5
 801b956:	2d09      	cmp	r5, #9
 801b958:	bfd4      	ite	le
 801b95a:	3430      	addle	r4, #48	; 0x30
 801b95c:	3457      	addgt	r4, #87	; 0x57
 801b95e:	b2e4      	uxtb	r4, r4
 801b960:	558c      	strb	r4, [r1, r6]
 801b962:	4638      	mov	r0, r7
 801b964:	1e4c      	subs	r4, r1, #1
 801b966:	b92f      	cbnz	r7, 801b974 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3+0x38>
 801b968:	4431      	add	r1, r6
 801b96a:	4660      	mov	r0, ip
 801b96c:	f7ff ffa9 	bl	801b8c2 <_ZN8touchgfx7Unicode7strncpyEPtPKct>
 801b970:	b00b      	add	sp, #44	; 0x2c
 801b972:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801b974:	4621      	mov	r1, r4
 801b976:	e7e9      	b.n	801b94c <_ZN8touchgfx7Unicode4utoaEmPtti.part.3+0x10>

0801b978 <_ZN8touchgfx7Unicode4itoaElPtti>:
 801b978:	b410      	push	{r4}
 801b97a:	b131      	cbz	r1, 801b98a <_ZN8touchgfx7Unicode4itoaElPtti+0x12>
 801b97c:	1e9c      	subs	r4, r3, #2
 801b97e:	2c22      	cmp	r4, #34	; 0x22
 801b980:	d803      	bhi.n	801b98a <_ZN8touchgfx7Unicode4itoaElPtti+0x12>
 801b982:	f85d 4b04 	ldr.w	r4, [sp], #4
 801b986:	f7ff bfad 	b.w	801b8e4 <_ZN8touchgfx7Unicode4itoaElPtti.part.2>
 801b98a:	f85d 4b04 	ldr.w	r4, [sp], #4
 801b98e:	4770      	bx	lr

0801b990 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>:
 801b990:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b994:	4691      	mov	r9, r2
 801b996:	b085      	sub	sp, #20
 801b998:	6802      	ldr	r2, [r0, #0]
 801b99a:	9201      	str	r2, [sp, #4]
 801b99c:	4688      	mov	r8, r1
 801b99e:	4683      	mov	fp, r0
 801b9a0:	f89d 1040 	ldrb.w	r1, [sp, #64]	; 0x40
 801b9a4:	9103      	str	r1, [sp, #12]
 801b9a6:	4610      	mov	r0, r2
 801b9a8:	461c      	mov	r4, r3
 801b9aa:	f89d 3048 	ldrb.w	r3, [sp, #72]	; 0x48
 801b9ae:	9302      	str	r3, [sp, #8]
 801b9b0:	f7ff ff7a 	bl	801b8a8 <_ZN8touchgfx7Unicode6strlenEPKt>
 801b9b4:	f1b8 0f00 	cmp.w	r8, #0
 801b9b8:	bf0c      	ite	eq
 801b9ba:	4684      	moveq	ip, r0
 801b9bc:	f100 0c01 	addne.w	ip, r0, #1
 801b9c0:	f1b9 0f69 	cmp.w	r9, #105	; 0x69
 801b9c4:	f89d 6038 	ldrb.w	r6, [sp, #56]	; 0x38
 801b9c8:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 801b9ca:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801b9cc:	f8dd a054 	ldr.w	sl, [sp, #84]	; 0x54
 801b9d0:	9903      	ldr	r1, [sp, #12]
 801b9d2:	fa1f fc8c 	uxth.w	ip, ip
 801b9d6:	e9dd 2301 	ldrd	r2, r3, [sp, #4]
 801b9da:	d041      	beq.n	801ba60 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
 801b9dc:	d834      	bhi.n	801ba48 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xb8>
 801b9de:	f1b9 0f63 	cmp.w	r9, #99	; 0x63
 801b9e2:	d059      	beq.n	801ba98 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x108>
 801b9e4:	f1b9 0f64 	cmp.w	r9, #100	; 0x64
 801b9e8:	d03a      	beq.n	801ba60 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
 801b9ea:	f1b9 0f58 	cmp.w	r9, #88	; 0x58
 801b9ee:	d034      	beq.n	801ba5a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
 801b9f0:	2400      	movs	r4, #0
 801b9f2:	f8bd 2050 	ldrh.w	r2, [sp, #80]	; 0x50
 801b9f6:	3a01      	subs	r2, #1
 801b9f8:	b169      	cbz	r1, 801ba16 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 801b9fa:	9911      	ldr	r1, [sp, #68]	; 0x44
 801b9fc:	458c      	cmp	ip, r1
 801b9fe:	da09      	bge.n	801ba14 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
 801ba00:	eba1 010c 	sub.w	r1, r1, ip
 801ba04:	b289      	uxth	r1, r1
 801ba06:	b933      	cbnz	r3, 801ba16 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 801ba08:	2e00      	cmp	r6, #0
 801ba0a:	d051      	beq.n	801bab0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
 801ba0c:	2800      	cmp	r0, #0
 801ba0e:	d04f      	beq.n	801bab0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
 801ba10:	440c      	add	r4, r1
 801ba12:	b2a4      	uxth	r4, r4
 801ba14:	2100      	movs	r1, #0
 801ba16:	682b      	ldr	r3, [r5, #0]
 801ba18:	4293      	cmp	r3, r2
 801ba1a:	da07      	bge.n	801ba2c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
 801ba1c:	f1b8 0f00 	cmp.w	r8, #0
 801ba20:	d004      	beq.n	801ba2c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
 801ba22:	f82a 8013 	strh.w	r8, [sl, r3, lsl #1]
 801ba26:	682b      	ldr	r3, [r5, #0]
 801ba28:	3301      	adds	r3, #1
 801ba2a:	602b      	str	r3, [r5, #0]
 801ba2c:	2730      	movs	r7, #48	; 0x30
 801ba2e:	2c00      	cmp	r4, #0
 801ba30:	d04e      	beq.n	801bad0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 801ba32:	682e      	ldr	r6, [r5, #0]
 801ba34:	3c01      	subs	r4, #1
 801ba36:	42b2      	cmp	r2, r6
 801ba38:	b2a4      	uxth	r4, r4
 801ba3a:	dd49      	ble.n	801bad0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 801ba3c:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
 801ba40:	682b      	ldr	r3, [r5, #0]
 801ba42:	3301      	adds	r3, #1
 801ba44:	602b      	str	r3, [r5, #0]
 801ba46:	e7f2      	b.n	801ba2e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9e>
 801ba48:	f1b9 0f73 	cmp.w	r9, #115	; 0x73
 801ba4c:	d01d      	beq.n	801ba8a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xfa>
 801ba4e:	f1b9 0f78 	cmp.w	r9, #120	; 0x78
 801ba52:	d002      	beq.n	801ba5a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
 801ba54:	f1b9 0f6f 	cmp.w	r9, #111	; 0x6f
 801ba58:	e7c9      	b.n	801b9ee <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x5e>
 801ba5a:	4684      	mov	ip, r0
 801ba5c:	f04f 0800 	mov.w	r8, #0
 801ba60:	2c00      	cmp	r4, #0
 801ba62:	d0c6      	beq.n	801b9f2 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 801ba64:	b947      	cbnz	r7, 801ba78 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
 801ba66:	2801      	cmp	r0, #1
 801ba68:	d106      	bne.n	801ba78 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
 801ba6a:	8814      	ldrh	r4, [r2, #0]
 801ba6c:	2c30      	cmp	r4, #48	; 0x30
 801ba6e:	bf02      	ittt	eq
 801ba70:	3202      	addeq	r2, #2
 801ba72:	f8cb 2000 	streq.w	r2, [fp]
 801ba76:	4638      	moveq	r0, r7
 801ba78:	45bc      	cmp	ip, r7
 801ba7a:	da14      	bge.n	801baa6 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x116>
 801ba7c:	b2bf      	uxth	r7, r7
 801ba7e:	eba7 040c 	sub.w	r4, r7, ip
 801ba82:	b2a4      	uxth	r4, r4
 801ba84:	46bc      	mov	ip, r7
 801ba86:	2600      	movs	r6, #0
 801ba88:	e7b3      	b.n	801b9f2 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 801ba8a:	4684      	mov	ip, r0
 801ba8c:	b16c      	cbz	r4, 801baaa <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x11a>
 801ba8e:	42b8      	cmp	r0, r7
 801ba90:	dd00      	ble.n	801ba94 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x104>
 801ba92:	b2b8      	uxth	r0, r7
 801ba94:	2400      	movs	r4, #0
 801ba96:	e003      	b.n	801baa0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x110>
 801ba98:	f04f 0c01 	mov.w	ip, #1
 801ba9c:	2400      	movs	r4, #0
 801ba9e:	4660      	mov	r0, ip
 801baa0:	4626      	mov	r6, r4
 801baa2:	46a0      	mov	r8, r4
 801baa4:	e7a5      	b.n	801b9f2 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 801baa6:	2400      	movs	r4, #0
 801baa8:	e7ed      	b.n	801ba86 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xf6>
 801baaa:	4626      	mov	r6, r4
 801baac:	46a0      	mov	r8, r4
 801baae:	e7a0      	b.n	801b9f2 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 801bab0:	2900      	cmp	r1, #0
 801bab2:	d0b0      	beq.n	801ba16 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 801bab4:	2720      	movs	r7, #32
 801bab6:	682e      	ldr	r6, [r5, #0]
 801bab8:	2900      	cmp	r1, #0
 801baba:	d0ac      	beq.n	801ba16 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 801babc:	3901      	subs	r1, #1
 801babe:	4296      	cmp	r6, r2
 801bac0:	b289      	uxth	r1, r1
 801bac2:	daa7      	bge.n	801ba14 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
 801bac4:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
 801bac8:	682b      	ldr	r3, [r5, #0]
 801baca:	3301      	adds	r3, #1
 801bacc:	602b      	str	r3, [r5, #0]
 801bace:	e7f2      	b.n	801bab6 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x126>
 801bad0:	b188      	cbz	r0, 801baf6 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
 801bad2:	682b      	ldr	r3, [r5, #0]
 801bad4:	3801      	subs	r0, #1
 801bad6:	429a      	cmp	r2, r3
 801bad8:	b280      	uxth	r0, r0
 801bada:	dd0c      	ble.n	801baf6 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
 801badc:	f8db 3000 	ldr.w	r3, [fp]
 801bae0:	1c9c      	adds	r4, r3, #2
 801bae2:	f8cb 4000 	str.w	r4, [fp]
 801bae6:	881c      	ldrh	r4, [r3, #0]
 801bae8:	682b      	ldr	r3, [r5, #0]
 801baea:	f82a 4013 	strh.w	r4, [sl, r3, lsl #1]
 801baee:	682b      	ldr	r3, [r5, #0]
 801baf0:	3301      	adds	r3, #1
 801baf2:	602b      	str	r3, [r5, #0]
 801baf4:	e7ec      	b.n	801bad0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 801baf6:	2620      	movs	r6, #32
 801baf8:	b151      	cbz	r1, 801bb10 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
 801bafa:	6828      	ldr	r0, [r5, #0]
 801bafc:	3901      	subs	r1, #1
 801bafe:	4282      	cmp	r2, r0
 801bb00:	b289      	uxth	r1, r1
 801bb02:	dd05      	ble.n	801bb10 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
 801bb04:	f82a 6010 	strh.w	r6, [sl, r0, lsl #1]
 801bb08:	682b      	ldr	r3, [r5, #0]
 801bb0a:	3301      	adds	r3, #1
 801bb0c:	602b      	str	r3, [r5, #0]
 801bb0e:	e7f3      	b.n	801baf8 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x168>
 801bb10:	b005      	add	sp, #20
 801bb12:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801bb16 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>:
 801bb16:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801bb1a:	e9dd 8c07 	ldrd	r8, ip, [sp, #28]
 801bb1e:	e9dd e609 	ldrd	lr, r6, [sp, #36]	; 0x24
 801bb22:	e9dd 750b 	ldrd	r7, r5, [sp, #44]	; 0x2c
 801bb26:	2400      	movs	r4, #0
 801bb28:	8014      	strh	r4, [r2, #0]
 801bb2a:	701c      	strb	r4, [r3, #0]
 801bb2c:	f888 4000 	strb.w	r4, [r8]
 801bb30:	f88c 4000 	strb.w	r4, [ip]
 801bb34:	f88e 4000 	strb.w	r4, [lr]
 801bb38:	703c      	strb	r4, [r7, #0]
 801bb3a:	6804      	ldr	r4, [r0, #0]
 801bb3c:	b1a4      	cbz	r4, 801bb68 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x52>
 801bb3e:	8824      	ldrh	r4, [r4, #0]
 801bb40:	f04f 0901 	mov.w	r9, #1
 801bb44:	b314      	cbz	r4, 801bb8c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 801bb46:	2c2b      	cmp	r4, #43	; 0x2b
 801bb48:	d001      	beq.n	801bb4e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x38>
 801bb4a:	2c20      	cmp	r4, #32
 801bb4c:	d110      	bne.n	801bb70 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x5a>
 801bb4e:	8014      	strh	r4, [r2, #0]
 801bb50:	6804      	ldr	r4, [r0, #0]
 801bb52:	b10c      	cbz	r4, 801bb58 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x42>
 801bb54:	3402      	adds	r4, #2
 801bb56:	6004      	str	r4, [r0, #0]
 801bb58:	680c      	ldr	r4, [r1, #0]
 801bb5a:	b10c      	cbz	r4, 801bb60 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x4a>
 801bb5c:	3401      	adds	r4, #1
 801bb5e:	600c      	str	r4, [r1, #0]
 801bb60:	6804      	ldr	r4, [r0, #0]
 801bb62:	b17c      	cbz	r4, 801bb84 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x6e>
 801bb64:	8824      	ldrh	r4, [r4, #0]
 801bb66:	e7ed      	b.n	801bb44 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
 801bb68:	680c      	ldr	r4, [r1, #0]
 801bb6a:	b17c      	cbz	r4, 801bb8c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 801bb6c:	7824      	ldrb	r4, [r4, #0]
 801bb6e:	e7e7      	b.n	801bb40 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2a>
 801bb70:	2c2d      	cmp	r4, #45	; 0x2d
 801bb72:	d102      	bne.n	801bb7a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x64>
 801bb74:	f883 9000 	strb.w	r9, [r3]
 801bb78:	e7ea      	b.n	801bb50 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
 801bb7a:	2c23      	cmp	r4, #35	; 0x23
 801bb7c:	d107      	bne.n	801bb8e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x78>
 801bb7e:	f888 9000 	strb.w	r9, [r8]
 801bb82:	e7e5      	b.n	801bb50 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
 801bb84:	680c      	ldr	r4, [r1, #0]
 801bb86:	b10c      	cbz	r4, 801bb8c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 801bb88:	7824      	ldrb	r4, [r4, #0]
 801bb8a:	e7db      	b.n	801bb44 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
 801bb8c:	2400      	movs	r4, #0
 801bb8e:	f1a4 0330 	sub.w	r3, r4, #48	; 0x30
 801bb92:	2b09      	cmp	r3, #9
 801bb94:	d901      	bls.n	801bb9a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x84>
 801bb96:	2c2a      	cmp	r4, #42	; 0x2a
 801bb98:	d122      	bne.n	801bbe0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 801bb9a:	2301      	movs	r3, #1
 801bb9c:	2c30      	cmp	r4, #48	; 0x30
 801bb9e:	f88e 3000 	strb.w	r3, [lr]
 801bba2:	d10d      	bne.n	801bbc0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
 801bba4:	f88c 3000 	strb.w	r3, [ip]
 801bba8:	6803      	ldr	r3, [r0, #0]
 801bbaa:	b10b      	cbz	r3, 801bbb0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x9a>
 801bbac:	3302      	adds	r3, #2
 801bbae:	6003      	str	r3, [r0, #0]
 801bbb0:	680b      	ldr	r3, [r1, #0]
 801bbb2:	b10b      	cbz	r3, 801bbb8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xa2>
 801bbb4:	3301      	adds	r3, #1
 801bbb6:	600b      	str	r3, [r1, #0]
 801bbb8:	6803      	ldr	r3, [r0, #0]
 801bbba:	2b00      	cmp	r3, #0
 801bbbc:	d02f      	beq.n	801bc1e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x108>
 801bbbe:	881c      	ldrh	r4, [r3, #0]
 801bbc0:	2c2a      	cmp	r4, #42	; 0x2a
 801bbc2:	d135      	bne.n	801bc30 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
 801bbc4:	f04f 33ff 	mov.w	r3, #4294967295
 801bbc8:	6033      	str	r3, [r6, #0]
 801bbca:	6803      	ldr	r3, [r0, #0]
 801bbcc:	b10b      	cbz	r3, 801bbd2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xbc>
 801bbce:	3302      	adds	r3, #2
 801bbd0:	6003      	str	r3, [r0, #0]
 801bbd2:	680b      	ldr	r3, [r1, #0]
 801bbd4:	b10b      	cbz	r3, 801bbda <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xc4>
 801bbd6:	3301      	adds	r3, #1
 801bbd8:	600b      	str	r3, [r1, #0]
 801bbda:	6803      	ldr	r3, [r0, #0]
 801bbdc:	b31b      	cbz	r3, 801bc26 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x110>
 801bbde:	881c      	ldrh	r4, [r3, #0]
 801bbe0:	2c2e      	cmp	r4, #46	; 0x2e
 801bbe2:	d11a      	bne.n	801bc1a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 801bbe4:	2301      	movs	r3, #1
 801bbe6:	703b      	strb	r3, [r7, #0]
 801bbe8:	6803      	ldr	r3, [r0, #0]
 801bbea:	b10b      	cbz	r3, 801bbf0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xda>
 801bbec:	3302      	adds	r3, #2
 801bbee:	6003      	str	r3, [r0, #0]
 801bbf0:	680b      	ldr	r3, [r1, #0]
 801bbf2:	b10b      	cbz	r3, 801bbf8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xe2>
 801bbf4:	3301      	adds	r3, #1
 801bbf6:	600b      	str	r3, [r1, #0]
 801bbf8:	6803      	ldr	r3, [r0, #0]
 801bbfa:	2b00      	cmp	r3, #0
 801bbfc:	d036      	beq.n	801bc6c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x156>
 801bbfe:	881b      	ldrh	r3, [r3, #0]
 801bc00:	2b2a      	cmp	r3, #42	; 0x2a
 801bc02:	d137      	bne.n	801bc74 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
 801bc04:	f04f 33ff 	mov.w	r3, #4294967295
 801bc08:	602b      	str	r3, [r5, #0]
 801bc0a:	6803      	ldr	r3, [r0, #0]
 801bc0c:	b10b      	cbz	r3, 801bc12 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xfc>
 801bc0e:	3302      	adds	r3, #2
 801bc10:	6003      	str	r3, [r0, #0]
 801bc12:	680b      	ldr	r3, [r1, #0]
 801bc14:	b10b      	cbz	r3, 801bc1a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 801bc16:	3301      	adds	r3, #1
 801bc18:	600b      	str	r3, [r1, #0]
 801bc1a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801bc1e:	680c      	ldr	r4, [r1, #0]
 801bc20:	b134      	cbz	r4, 801bc30 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
 801bc22:	7824      	ldrb	r4, [r4, #0]
 801bc24:	e7cc      	b.n	801bbc0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
 801bc26:	680b      	ldr	r3, [r1, #0]
 801bc28:	2b00      	cmp	r3, #0
 801bc2a:	d0f6      	beq.n	801bc1a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 801bc2c:	781c      	ldrb	r4, [r3, #0]
 801bc2e:	e7d7      	b.n	801bbe0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 801bc30:	2300      	movs	r3, #0
 801bc32:	6033      	str	r3, [r6, #0]
 801bc34:	220a      	movs	r2, #10
 801bc36:	f1a4 0c30 	sub.w	ip, r4, #48	; 0x30
 801bc3a:	fa1f f38c 	uxth.w	r3, ip
 801bc3e:	2b09      	cmp	r3, #9
 801bc40:	d8ce      	bhi.n	801bbe0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 801bc42:	6833      	ldr	r3, [r6, #0]
 801bc44:	fb02 c303 	mla	r3, r2, r3, ip
 801bc48:	6033      	str	r3, [r6, #0]
 801bc4a:	6803      	ldr	r3, [r0, #0]
 801bc4c:	b10b      	cbz	r3, 801bc52 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x13c>
 801bc4e:	3302      	adds	r3, #2
 801bc50:	6003      	str	r3, [r0, #0]
 801bc52:	680b      	ldr	r3, [r1, #0]
 801bc54:	b10b      	cbz	r3, 801bc5a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x144>
 801bc56:	3301      	adds	r3, #1
 801bc58:	600b      	str	r3, [r1, #0]
 801bc5a:	6803      	ldr	r3, [r0, #0]
 801bc5c:	b10b      	cbz	r3, 801bc62 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x14c>
 801bc5e:	881c      	ldrh	r4, [r3, #0]
 801bc60:	e7e9      	b.n	801bc36 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 801bc62:	680c      	ldr	r4, [r1, #0]
 801bc64:	2c00      	cmp	r4, #0
 801bc66:	d0e6      	beq.n	801bc36 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 801bc68:	7824      	ldrb	r4, [r4, #0]
 801bc6a:	e7e4      	b.n	801bc36 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 801bc6c:	680b      	ldr	r3, [r1, #0]
 801bc6e:	b10b      	cbz	r3, 801bc74 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
 801bc70:	781b      	ldrb	r3, [r3, #0]
 801bc72:	e7c5      	b.n	801bc00 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xea>
 801bc74:	2200      	movs	r2, #0
 801bc76:	602a      	str	r2, [r5, #0]
 801bc78:	240a      	movs	r4, #10
 801bc7a:	3b30      	subs	r3, #48	; 0x30
 801bc7c:	b29e      	uxth	r6, r3
 801bc7e:	2e09      	cmp	r6, #9
 801bc80:	682a      	ldr	r2, [r5, #0]
 801bc82:	d813      	bhi.n	801bcac <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x196>
 801bc84:	fb04 3302 	mla	r3, r4, r2, r3
 801bc88:	602b      	str	r3, [r5, #0]
 801bc8a:	6803      	ldr	r3, [r0, #0]
 801bc8c:	b10b      	cbz	r3, 801bc92 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x17c>
 801bc8e:	3302      	adds	r3, #2
 801bc90:	6003      	str	r3, [r0, #0]
 801bc92:	680b      	ldr	r3, [r1, #0]
 801bc94:	b10b      	cbz	r3, 801bc9a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x184>
 801bc96:	3301      	adds	r3, #1
 801bc98:	600b      	str	r3, [r1, #0]
 801bc9a:	6803      	ldr	r3, [r0, #0]
 801bc9c:	b10b      	cbz	r3, 801bca2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x18c>
 801bc9e:	881b      	ldrh	r3, [r3, #0]
 801bca0:	e7eb      	b.n	801bc7a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 801bca2:	680b      	ldr	r3, [r1, #0]
 801bca4:	2b00      	cmp	r3, #0
 801bca6:	d0e8      	beq.n	801bc7a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 801bca8:	781b      	ldrb	r3, [r3, #0]
 801bcaa:	e7e6      	b.n	801bc7a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 801bcac:	2a06      	cmp	r2, #6
 801bcae:	bfa8      	it	ge
 801bcb0:	2206      	movge	r2, #6
 801bcb2:	602a      	str	r2, [r5, #0]
 801bcb4:	e7b1      	b.n	801bc1a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>

0801bcb6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>:
 801bcb6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801bcba:	b0a3      	sub	sp, #140	; 0x8c
 801bcbc:	2600      	movs	r6, #0
 801bcbe:	f10d 0944 	add.w	r9, sp, #68	; 0x44
 801bcc2:	4607      	mov	r7, r0
 801bcc4:	4688      	mov	r8, r1
 801bcc6:	e9cd 3208 	strd	r3, r2, [sp, #32]
 801bcca:	4631      	mov	r1, r6
 801bccc:	2242      	movs	r2, #66	; 0x42
 801bcce:	4648      	mov	r0, r9
 801bcd0:	9c2c      	ldr	r4, [sp, #176]	; 0xb0
 801bcd2:	960d      	str	r6, [sp, #52]	; 0x34
 801bcd4:	f00f f9fb 	bl	802b0ce <memset>
 801bcd8:	b15f      	cbz	r7, 801bcf2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x3c>
 801bcda:	f108 3aff 	add.w	sl, r8, #4294967295
 801bcde:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801bce0:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801bce2:	b152      	cbz	r2, 801bcfa <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x44>
 801bce4:	8812      	ldrh	r2, [r2, #0]
 801bce6:	b10a      	cbz	r2, 801bcec <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
 801bce8:	459a      	cmp	sl, r3
 801bcea:	dc2e      	bgt.n	801bd4a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x94>
 801bcec:	2200      	movs	r2, #0
 801bcee:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 801bcf2:	4638      	mov	r0, r7
 801bcf4:	b023      	add	sp, #140	; 0x8c
 801bcf6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801bcfa:	9a08      	ldr	r2, [sp, #32]
 801bcfc:	2a00      	cmp	r2, #0
 801bcfe:	d0f5      	beq.n	801bcec <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
 801bd00:	7812      	ldrb	r2, [r2, #0]
 801bd02:	e7f0      	b.n	801bce6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x30>
 801bd04:	2d00      	cmp	r5, #0
 801bd06:	d0ea      	beq.n	801bcde <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 801bd08:	782a      	ldrb	r2, [r5, #0]
 801bd0a:	b142      	cbz	r2, 801bd1e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x68>
 801bd0c:	2a25      	cmp	r2, #37	; 0x25
 801bd0e:	d001      	beq.n	801bd14 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x5e>
 801bd10:	459a      	cmp	sl, r3
 801bd12:	dc08      	bgt.n	801bd26 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x70>
 801bd14:	f1bb 0f00 	cmp.w	fp, #0
 801bd18:	d121      	bne.n	801bd5e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xa8>
 801bd1a:	2d00      	cmp	r5, #0
 801bd1c:	d0df      	beq.n	801bcde <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 801bd1e:	782a      	ldrb	r2, [r5, #0]
 801bd20:	f04f 0b00 	mov.w	fp, #0
 801bd24:	e01d      	b.n	801bd62 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xac>
 801bd26:	f1bb 0f00 	cmp.w	fp, #0
 801bd2a:	d078      	beq.n	801be1e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x168>
 801bd2c:	f8bb 2000 	ldrh.w	r2, [fp]
 801bd30:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 801bd34:	f1bb 0f00 	cmp.w	fp, #0
 801bd38:	d002      	beq.n	801bd40 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x8a>
 801bd3a:	f10b 0202 	add.w	r2, fp, #2
 801bd3e:	9209      	str	r2, [sp, #36]	; 0x24
 801bd40:	b10d      	cbz	r5, 801bd46 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x90>
 801bd42:	3501      	adds	r5, #1
 801bd44:	9508      	str	r5, [sp, #32]
 801bd46:	3301      	adds	r3, #1
 801bd48:	930d      	str	r3, [sp, #52]	; 0x34
 801bd4a:	e9dd 5b08 	ldrd	r5, fp, [sp, #32]
 801bd4e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801bd50:	f1bb 0f00 	cmp.w	fp, #0
 801bd54:	d0d6      	beq.n	801bd04 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x4e>
 801bd56:	f8bb 2000 	ldrh.w	r2, [fp]
 801bd5a:	2a00      	cmp	r2, #0
 801bd5c:	d1d6      	bne.n	801bd0c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x56>
 801bd5e:	f8bb 2000 	ldrh.w	r2, [fp]
 801bd62:	2a00      	cmp	r2, #0
 801bd64:	d0bb      	beq.n	801bcde <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 801bd66:	459a      	cmp	sl, r3
 801bd68:	ddb9      	ble.n	801bcde <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 801bd6a:	f8ad 6032 	strh.w	r6, [sp, #50]	; 0x32
 801bd6e:	f88d 602d 	strb.w	r6, [sp, #45]	; 0x2d
 801bd72:	f88d 602e 	strb.w	r6, [sp, #46]	; 0x2e
 801bd76:	f88d 602f 	strb.w	r6, [sp, #47]	; 0x2f
 801bd7a:	f88d 6030 	strb.w	r6, [sp, #48]	; 0x30
 801bd7e:	960e      	str	r6, [sp, #56]	; 0x38
 801bd80:	f88d 6031 	strb.w	r6, [sp, #49]	; 0x31
 801bd84:	960f      	str	r6, [sp, #60]	; 0x3c
 801bd86:	f1bb 0f00 	cmp.w	fp, #0
 801bd8a:	d002      	beq.n	801bd92 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xdc>
 801bd8c:	f10b 0302 	add.w	r3, fp, #2
 801bd90:	9309      	str	r3, [sp, #36]	; 0x24
 801bd92:	b10d      	cbz	r5, 801bd98 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xe2>
 801bd94:	1c6b      	adds	r3, r5, #1
 801bd96:	9308      	str	r3, [sp, #32]
 801bd98:	ab0f      	add	r3, sp, #60	; 0x3c
 801bd9a:	9305      	str	r3, [sp, #20]
 801bd9c:	f10d 0331 	add.w	r3, sp, #49	; 0x31
 801bda0:	9304      	str	r3, [sp, #16]
 801bda2:	ab0e      	add	r3, sp, #56	; 0x38
 801bda4:	9303      	str	r3, [sp, #12]
 801bda6:	ab0c      	add	r3, sp, #48	; 0x30
 801bda8:	9302      	str	r3, [sp, #8]
 801bdaa:	f10d 032f 	add.w	r3, sp, #47	; 0x2f
 801bdae:	9301      	str	r3, [sp, #4]
 801bdb0:	f10d 032e 	add.w	r3, sp, #46	; 0x2e
 801bdb4:	9300      	str	r3, [sp, #0]
 801bdb6:	f10d 0232 	add.w	r2, sp, #50	; 0x32
 801bdba:	f10d 032d 	add.w	r3, sp, #45	; 0x2d
 801bdbe:	a908      	add	r1, sp, #32
 801bdc0:	a809      	add	r0, sp, #36	; 0x24
 801bdc2:	f7ff fea8 	bl	801bb16 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>
 801bdc6:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801bdc8:	2b00      	cmp	r3, #0
 801bdca:	bfbe      	ittt	lt
 801bdcc:	6823      	ldrlt	r3, [r4, #0]
 801bdce:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
 801bdd2:	930e      	strlt	r3, [sp, #56]	; 0x38
 801bdd4:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801bdd6:	bfb8      	it	lt
 801bdd8:	3404      	addlt	r4, #4
 801bdda:	2b00      	cmp	r3, #0
 801bddc:	bfb8      	it	lt
 801bdde:	6823      	ldrlt	r3, [r4, #0]
 801bde0:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 801bde4:	bfbe      	ittt	lt
 801bde6:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
 801bdea:	930f      	strlt	r3, [sp, #60]	; 0x3c
 801bdec:	3404      	addlt	r4, #4
 801bdee:	b1d9      	cbz	r1, 801be28 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x172>
 801bdf0:	880b      	ldrh	r3, [r1, #0]
 801bdf2:	2b69      	cmp	r3, #105	; 0x69
 801bdf4:	d01f      	beq.n	801be36 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 801bdf6:	d82f      	bhi.n	801be58 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1a2>
 801bdf8:	2b58      	cmp	r3, #88	; 0x58
 801bdfa:	d01c      	beq.n	801be36 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 801bdfc:	d818      	bhi.n	801be30 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17a>
 801bdfe:	2b25      	cmp	r3, #37	; 0x25
 801be00:	d034      	beq.n	801be6c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1b6>
 801be02:	e9cd 5b08 	strd	r5, fp, [sp, #32]
 801be06:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801be08:	f1bb 0f00 	cmp.w	fp, #0
 801be0c:	f000 80b8 	beq.w	801bf80 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2ca>
 801be10:	f8bb 5000 	ldrh.w	r5, [fp]
 801be14:	f827 5013 	strh.w	r5, [r7, r3, lsl #1]
 801be18:	3301      	adds	r3, #1
 801be1a:	930d      	str	r3, [sp, #52]	; 0x34
 801be1c:	e029      	b.n	801be72 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1bc>
 801be1e:	b10d      	cbz	r5, 801be24 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x16e>
 801be20:	782a      	ldrb	r2, [r5, #0]
 801be22:	e785      	b.n	801bd30 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
 801be24:	462a      	mov	r2, r5
 801be26:	e783      	b.n	801bd30 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
 801be28:	2a00      	cmp	r2, #0
 801be2a:	d0ea      	beq.n	801be02 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 801be2c:	7813      	ldrb	r3, [r2, #0]
 801be2e:	e7e0      	b.n	801bdf2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x13c>
 801be30:	3b63      	subs	r3, #99	; 0x63
 801be32:	2b01      	cmp	r3, #1
 801be34:	d8e5      	bhi.n	801be02 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 801be36:	f8cd 9040 	str.w	r9, [sp, #64]	; 0x40
 801be3a:	b329      	cbz	r1, 801be88 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1d2>
 801be3c:	880b      	ldrh	r3, [r1, #0]
 801be3e:	2b69      	cmp	r3, #105	; 0x69
 801be40:	d063      	beq.n	801bf0a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x254>
 801be42:	d825      	bhi.n	801be90 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1da>
 801be44:	2b63      	cmp	r3, #99	; 0x63
 801be46:	d038      	beq.n	801beba <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x204>
 801be48:	2b64      	cmp	r3, #100	; 0x64
 801be4a:	d05e      	beq.n	801bf0a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x254>
 801be4c:	2b58      	cmp	r3, #88	; 0x58
 801be4e:	d07b      	beq.n	801bf48 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x292>
 801be50:	f8ad 6044 	strh.w	r6, [sp, #68]	; 0x44
 801be54:	4625      	mov	r5, r4
 801be56:	e036      	b.n	801bec6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 801be58:	2b73      	cmp	r3, #115	; 0x73
 801be5a:	d0ec      	beq.n	801be36 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 801be5c:	d802      	bhi.n	801be64 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1ae>
 801be5e:	2b6f      	cmp	r3, #111	; 0x6f
 801be60:	d1cf      	bne.n	801be02 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 801be62:	e7e8      	b.n	801be36 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 801be64:	2b75      	cmp	r3, #117	; 0x75
 801be66:	d0e6      	beq.n	801be36 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 801be68:	2b78      	cmp	r3, #120	; 0x78
 801be6a:	e7f9      	b.n	801be60 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1aa>
 801be6c:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801be6e:	f827 3012 	strh.w	r3, [r7, r2, lsl #1]
 801be72:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801be74:	b10b      	cbz	r3, 801be7a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1c4>
 801be76:	3302      	adds	r3, #2
 801be78:	9309      	str	r3, [sp, #36]	; 0x24
 801be7a:	9b08      	ldr	r3, [sp, #32]
 801be7c:	2b00      	cmp	r3, #0
 801be7e:	f43f af2e 	beq.w	801bcde <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 801be82:	3301      	adds	r3, #1
 801be84:	9308      	str	r3, [sp, #32]
 801be86:	e72a      	b.n	801bcde <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 801be88:	2a00      	cmp	r2, #0
 801be8a:	d0e1      	beq.n	801be50 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 801be8c:	7813      	ldrb	r3, [r2, #0]
 801be8e:	e7d6      	b.n	801be3e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x188>
 801be90:	2b73      	cmp	r3, #115	; 0x73
 801be92:	d036      	beq.n	801bf02 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x24c>
 801be94:	d807      	bhi.n	801bea6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1f0>
 801be96:	2b6f      	cmp	r3, #111	; 0x6f
 801be98:	d1da      	bne.n	801be50 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 801be9a:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801be9c:	1d25      	adds	r5, r4, #4
 801be9e:	eba8 0202 	sub.w	r2, r8, r2
 801bea2:	2308      	movs	r3, #8
 801bea4:	e04a      	b.n	801bf3c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x286>
 801bea6:	2b75      	cmp	r3, #117	; 0x75
 801bea8:	d043      	beq.n	801bf32 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x27c>
 801beaa:	2b78      	cmp	r3, #120	; 0x78
 801beac:	d1d0      	bne.n	801be50 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 801beae:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801beb0:	1d25      	adds	r5, r4, #4
 801beb2:	eba8 0202 	sub.w	r2, r8, r2
 801beb6:	2310      	movs	r3, #16
 801beb8:	e040      	b.n	801bf3c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x286>
 801beba:	6823      	ldr	r3, [r4, #0]
 801bebc:	f8ad 3044 	strh.w	r3, [sp, #68]	; 0x44
 801bec0:	1d25      	adds	r5, r4, #4
 801bec2:	f8ad 6046 	strh.w	r6, [sp, #70]	; 0x46
 801bec6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801bec8:	f8bd 1032 	ldrh.w	r1, [sp, #50]	; 0x32
 801becc:	2b00      	cmp	r3, #0
 801bece:	d052      	beq.n	801bf76 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2c0>
 801bed0:	881a      	ldrh	r2, [r3, #0]
 801bed2:	f89d 3031 	ldrb.w	r3, [sp, #49]	; 0x31
 801bed6:	a80d      	add	r0, sp, #52	; 0x34
 801bed8:	9005      	str	r0, [sp, #20]
 801beda:	f89d 002d 	ldrb.w	r0, [sp, #45]	; 0x2d
 801bede:	9004      	str	r0, [sp, #16]
 801bee0:	980e      	ldr	r0, [sp, #56]	; 0x38
 801bee2:	9003      	str	r0, [sp, #12]
 801bee4:	f89d 0030 	ldrb.w	r0, [sp, #48]	; 0x30
 801bee8:	9002      	str	r0, [sp, #8]
 801beea:	980f      	ldr	r0, [sp, #60]	; 0x3c
 801beec:	9001      	str	r0, [sp, #4]
 801beee:	f89d 002f 	ldrb.w	r0, [sp, #47]	; 0x2f
 801bef2:	9000      	str	r0, [sp, #0]
 801bef4:	e9cd 8706 	strd	r8, r7, [sp, #24]
 801bef8:	a810      	add	r0, sp, #64	; 0x40
 801befa:	f7ff fd49 	bl	801b990 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>
 801befe:	462c      	mov	r4, r5
 801bf00:	e7b7      	b.n	801be72 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1bc>
 801bf02:	6823      	ldr	r3, [r4, #0]
 801bf04:	1d25      	adds	r5, r4, #4
 801bf06:	9310      	str	r3, [sp, #64]	; 0x40
 801bf08:	e7dd      	b.n	801bec6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 801bf0a:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801bf0c:	6820      	ldr	r0, [r4, #0]
 801bf0e:	eba8 0202 	sub.w	r2, r8, r2
 801bf12:	230a      	movs	r3, #10
 801bf14:	b292      	uxth	r2, r2
 801bf16:	4649      	mov	r1, r9
 801bf18:	f7ff fce4 	bl	801b8e4 <_ZN8touchgfx7Unicode4itoaElPtti.part.2>
 801bf1c:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 801bf20:	2b2d      	cmp	r3, #45	; 0x2d
 801bf22:	f104 0504 	add.w	r5, r4, #4
 801bf26:	d1ce      	bne.n	801bec6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 801bf28:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 801bf2c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801bf2e:	3302      	adds	r3, #2
 801bf30:	e7e9      	b.n	801bf06 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x250>
 801bf32:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801bf34:	1d25      	adds	r5, r4, #4
 801bf36:	eba8 0202 	sub.w	r2, r8, r2
 801bf3a:	230a      	movs	r3, #10
 801bf3c:	b292      	uxth	r2, r2
 801bf3e:	4649      	mov	r1, r9
 801bf40:	6820      	ldr	r0, [r4, #0]
 801bf42:	f7ff fcfb 	bl	801b93c <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>
 801bf46:	e7be      	b.n	801bec6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 801bf48:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801bf4a:	6820      	ldr	r0, [r4, #0]
 801bf4c:	eba8 0202 	sub.w	r2, r8, r2
 801bf50:	b292      	uxth	r2, r2
 801bf52:	2310      	movs	r3, #16
 801bf54:	4649      	mov	r1, r9
 801bf56:	f7ff fcf1 	bl	801b93c <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>
 801bf5a:	1d25      	adds	r5, r4, #4
 801bf5c:	f10d 0242 	add.w	r2, sp, #66	; 0x42
 801bf60:	f832 3f02 	ldrh.w	r3, [r2, #2]!
 801bf64:	2b00      	cmp	r3, #0
 801bf66:	d0ae      	beq.n	801bec6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 801bf68:	f1a3 0161 	sub.w	r1, r3, #97	; 0x61
 801bf6c:	2919      	cmp	r1, #25
 801bf6e:	d8f7      	bhi.n	801bf60 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2aa>
 801bf70:	3b20      	subs	r3, #32
 801bf72:	8013      	strh	r3, [r2, #0]
 801bf74:	e7f4      	b.n	801bf60 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2aa>
 801bf76:	9a08      	ldr	r2, [sp, #32]
 801bf78:	2a00      	cmp	r2, #0
 801bf7a:	d0aa      	beq.n	801bed2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21c>
 801bf7c:	7812      	ldrb	r2, [r2, #0]
 801bf7e:	e7a8      	b.n	801bed2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21c>
 801bf80:	2d00      	cmp	r5, #0
 801bf82:	f43f af47 	beq.w	801be14 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15e>
 801bf86:	782d      	ldrb	r5, [r5, #0]
 801bf88:	e744      	b.n	801be14 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15e>

0801bf8a <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>:
 801bf8a:	b507      	push	{r0, r1, r2, lr}
 801bf8c:	9300      	str	r3, [sp, #0]
 801bf8e:	4613      	mov	r3, r2
 801bf90:	2200      	movs	r2, #0
 801bf92:	f7ff fe90 	bl	801bcb6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>
 801bf96:	b003      	add	sp, #12
 801bf98:	f85d fb04 	ldr.w	pc, [sp], #4

0801bf9c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>:
 801bf9c:	b40c      	push	{r2, r3}
 801bf9e:	b507      	push	{r0, r1, r2, lr}
 801bfa0:	ab04      	add	r3, sp, #16
 801bfa2:	f853 2b04 	ldr.w	r2, [r3], #4
 801bfa6:	9301      	str	r3, [sp, #4]
 801bfa8:	f7ff ffef 	bl	801bf8a <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>
 801bfac:	b003      	add	sp, #12
 801bfae:	f85d eb04 	ldr.w	lr, [sp], #4
 801bfb2:	b002      	add	sp, #8
 801bfb4:	4770      	bx	lr
	...

0801bfb8 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf>:
 801bfb8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801bfbc:	b0c5      	sub	sp, #276	; 0x114
 801bfbe:	2400      	movs	r4, #0
 801bfc0:	af11      	add	r7, sp, #68	; 0x44
 801bfc2:	4606      	mov	r6, r0
 801bfc4:	468a      	mov	sl, r1
 801bfc6:	e9cd 3208 	strd	r3, r2, [sp, #32]
 801bfca:	4621      	mov	r1, r4
 801bfcc:	22c8      	movs	r2, #200	; 0xc8
 801bfce:	4638      	mov	r0, r7
 801bfd0:	f8dd b138 	ldr.w	fp, [sp, #312]	; 0x138
 801bfd4:	940d      	str	r4, [sp, #52]	; 0x34
 801bfd6:	f00f f87a 	bl	802b0ce <memset>
 801bfda:	b16e      	cbz	r6, 801bff8 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x40>
 801bfdc:	ed9f 5aa8 	vldr	s10, [pc, #672]	; 801c280 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2c8>
 801bfe0:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801bfe2:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801bfe4:	b162      	cbz	r2, 801c000 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x48>
 801bfe6:	8812      	ldrh	r2, [r2, #0]
 801bfe8:	b11a      	cbz	r2, 801bff2 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x3a>
 801bfea:	f10a 31ff 	add.w	r1, sl, #4294967295
 801bfee:	4299      	cmp	r1, r3
 801bff0:	dc2e      	bgt.n	801c050 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x98>
 801bff2:	2200      	movs	r2, #0
 801bff4:	f826 2013 	strh.w	r2, [r6, r3, lsl #1]
 801bff8:	4630      	mov	r0, r6
 801bffa:	b045      	add	sp, #276	; 0x114
 801bffc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801c000:	9a08      	ldr	r2, [sp, #32]
 801c002:	2a00      	cmp	r2, #0
 801c004:	d0f5      	beq.n	801bff2 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x3a>
 801c006:	7812      	ldrb	r2, [r2, #0]
 801c008:	e7ee      	b.n	801bfe8 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x30>
 801c00a:	2d00      	cmp	r5, #0
 801c00c:	d0e8      	beq.n	801bfe0 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x28>
 801c00e:	782a      	ldrb	r2, [r5, #0]
 801c010:	b142      	cbz	r2, 801c024 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x6c>
 801c012:	2a25      	cmp	r2, #37	; 0x25
 801c014:	d001      	beq.n	801c01a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x62>
 801c016:	4299      	cmp	r1, r3
 801c018:	dc08      	bgt.n	801c02c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x74>
 801c01a:	f1b8 0f00 	cmp.w	r8, #0
 801c01e:	d121      	bne.n	801c064 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0xac>
 801c020:	2d00      	cmp	r5, #0
 801c022:	d0dd      	beq.n	801bfe0 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x28>
 801c024:	782a      	ldrb	r2, [r5, #0]
 801c026:	f04f 0800 	mov.w	r8, #0
 801c02a:	e01d      	b.n	801c068 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0xb0>
 801c02c:	f1b8 0f00 	cmp.w	r8, #0
 801c030:	d07f      	beq.n	801c132 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x17a>
 801c032:	f8b8 2000 	ldrh.w	r2, [r8]
 801c036:	f826 2013 	strh.w	r2, [r6, r3, lsl #1]
 801c03a:	f1b8 0f00 	cmp.w	r8, #0
 801c03e:	d002      	beq.n	801c046 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x8e>
 801c040:	f108 0202 	add.w	r2, r8, #2
 801c044:	9209      	str	r2, [sp, #36]	; 0x24
 801c046:	b10d      	cbz	r5, 801c04c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x94>
 801c048:	3501      	adds	r5, #1
 801c04a:	9508      	str	r5, [sp, #32]
 801c04c:	3301      	adds	r3, #1
 801c04e:	930d      	str	r3, [sp, #52]	; 0x34
 801c050:	e9dd 5808 	ldrd	r5, r8, [sp, #32]
 801c054:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801c056:	f1b8 0f00 	cmp.w	r8, #0
 801c05a:	d0d6      	beq.n	801c00a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x52>
 801c05c:	f8b8 2000 	ldrh.w	r2, [r8]
 801c060:	2a00      	cmp	r2, #0
 801c062:	d1d6      	bne.n	801c012 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x5a>
 801c064:	f8b8 2000 	ldrh.w	r2, [r8]
 801c068:	2a00      	cmp	r2, #0
 801c06a:	d0b9      	beq.n	801bfe0 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x28>
 801c06c:	4299      	cmp	r1, r3
 801c06e:	ddb7      	ble.n	801bfe0 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x28>
 801c070:	2300      	movs	r3, #0
 801c072:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 801c076:	f88d 302d 	strb.w	r3, [sp, #45]	; 0x2d
 801c07a:	f88d 302e 	strb.w	r3, [sp, #46]	; 0x2e
 801c07e:	f88d 302f 	strb.w	r3, [sp, #47]	; 0x2f
 801c082:	f88d 3030 	strb.w	r3, [sp, #48]	; 0x30
 801c086:	930e      	str	r3, [sp, #56]	; 0x38
 801c088:	f88d 3031 	strb.w	r3, [sp, #49]	; 0x31
 801c08c:	930f      	str	r3, [sp, #60]	; 0x3c
 801c08e:	f1b8 0f00 	cmp.w	r8, #0
 801c092:	d002      	beq.n	801c09a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0xe2>
 801c094:	f108 0302 	add.w	r3, r8, #2
 801c098:	9309      	str	r3, [sp, #36]	; 0x24
 801c09a:	b10d      	cbz	r5, 801c0a0 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0xe8>
 801c09c:	1c6b      	adds	r3, r5, #1
 801c09e:	9308      	str	r3, [sp, #32]
 801c0a0:	ab0f      	add	r3, sp, #60	; 0x3c
 801c0a2:	9305      	str	r3, [sp, #20]
 801c0a4:	f10d 0331 	add.w	r3, sp, #49	; 0x31
 801c0a8:	9304      	str	r3, [sp, #16]
 801c0aa:	ab0e      	add	r3, sp, #56	; 0x38
 801c0ac:	9303      	str	r3, [sp, #12]
 801c0ae:	ab0c      	add	r3, sp, #48	; 0x30
 801c0b0:	9302      	str	r3, [sp, #8]
 801c0b2:	f10d 032f 	add.w	r3, sp, #47	; 0x2f
 801c0b6:	9301      	str	r3, [sp, #4]
 801c0b8:	f10d 032e 	add.w	r3, sp, #46	; 0x2e
 801c0bc:	9300      	str	r3, [sp, #0]
 801c0be:	f10d 0232 	add.w	r2, sp, #50	; 0x32
 801c0c2:	f10d 032d 	add.w	r3, sp, #45	; 0x2d
 801c0c6:	a908      	add	r1, sp, #32
 801c0c8:	a809      	add	r0, sp, #36	; 0x24
 801c0ca:	f7ff fd24 	bl	801bb16 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>
 801c0ce:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801c0d0:	2b00      	cmp	r3, #0
 801c0d2:	da0b      	bge.n	801c0ec <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x134>
 801c0d4:	eb0b 0384 	add.w	r3, fp, r4, lsl #2
 801c0d8:	edd3 7a00 	vldr	s15, [r3]
 801c0dc:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 801c0e0:	3401      	adds	r4, #1
 801c0e2:	ee17 3a90 	vmov	r3, s15
 801c0e6:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801c0ea:	930e      	str	r3, [sp, #56]	; 0x38
 801c0ec:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801c0ee:	2b00      	cmp	r3, #0
 801c0f0:	da0b      	bge.n	801c10a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x152>
 801c0f2:	eb0b 0384 	add.w	r3, fp, r4, lsl #2
 801c0f6:	edd3 7a00 	vldr	s15, [r3]
 801c0fa:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 801c0fe:	3401      	adds	r4, #1
 801c100:	ee17 3a90 	vmov	r3, s15
 801c104:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801c108:	930f      	str	r3, [sp, #60]	; 0x3c
 801c10a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801c10c:	b1b3      	cbz	r3, 801c13c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x184>
 801c10e:	881a      	ldrh	r2, [r3, #0]
 801c110:	2a25      	cmp	r2, #37	; 0x25
 801c112:	d018      	beq.n	801c146 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x18e>
 801c114:	2a66      	cmp	r2, #102	; 0x66
 801c116:	d01c      	beq.n	801c152 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x19a>
 801c118:	e9cd 5808 	strd	r5, r8, [sp, #32]
 801c11c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801c11e:	f1b8 0f00 	cmp.w	r8, #0
 801c122:	f000 8136 	beq.w	801c392 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x3da>
 801c126:	f8b8 5000 	ldrh.w	r5, [r8]
 801c12a:	f826 5013 	strh.w	r5, [r6, r3, lsl #1]
 801c12e:	3301      	adds	r3, #1
 801c130:	e00d      	b.n	801c14e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x196>
 801c132:	b10d      	cbz	r5, 801c138 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x180>
 801c134:	782a      	ldrb	r2, [r5, #0]
 801c136:	e77e      	b.n	801c036 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x7e>
 801c138:	462a      	mov	r2, r5
 801c13a:	e77c      	b.n	801c036 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x7e>
 801c13c:	9b08      	ldr	r3, [sp, #32]
 801c13e:	2b00      	cmp	r3, #0
 801c140:	d0ea      	beq.n	801c118 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x160>
 801c142:	781a      	ldrb	r2, [r3, #0]
 801c144:	e7e4      	b.n	801c110 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x158>
 801c146:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801c148:	f826 2013 	strh.w	r2, [r6, r3, lsl #1]
 801c14c:	3302      	adds	r3, #2
 801c14e:	930d      	str	r3, [sp, #52]	; 0x34
 801c150:	e041      	b.n	801c1d6 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x21e>
 801c152:	eb0b 0384 	add.w	r3, fp, r4, lsl #2
 801c156:	edd3 7a00 	vldr	s15, [r3]
 801c15a:	f89d 3031 	ldrb.w	r3, [sp, #49]	; 0x31
 801c15e:	9710      	str	r7, [sp, #64]	; 0x40
 801c160:	3401      	adds	r4, #1
 801c162:	b923      	cbnz	r3, 801c16e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1b6>
 801c164:	2301      	movs	r3, #1
 801c166:	f88d 3031 	strb.w	r3, [sp, #49]	; 0x31
 801c16a:	2306      	movs	r3, #6
 801c16c:	930f      	str	r3, [sp, #60]	; 0x3c
 801c16e:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 801c172:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801c176:	bf48      	it	mi
 801c178:	eef1 7a67 	vnegmi.f32	s15, s15
 801c17c:	eeb0 7ae7 	vabs.f32	s14, s15
 801c180:	bf48      	it	mi
 801c182:	232d      	movmi	r3, #45	; 0x2d
 801c184:	eeb4 7a45 	vcmp.f32	s14, s10
 801c188:	bf48      	it	mi
 801c18a:	f8ad 3032 	strhmi.w	r3, [sp, #50]	; 0x32
 801c18e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801c192:	dd2b      	ble.n	801c1ec <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x234>
 801c194:	4b3b      	ldr	r3, [pc, #236]	; (801c284 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2cc>)
 801c196:	9311      	str	r3, [sp, #68]	; 0x44
 801c198:	2366      	movs	r3, #102	; 0x66
 801c19a:	9312      	str	r3, [sp, #72]	; 0x48
 801c19c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801c19e:	f8bd 1032 	ldrh.w	r1, [sp, #50]	; 0x32
 801c1a2:	2b00      	cmp	r3, #0
 801c1a4:	f000 80ef 	beq.w	801c386 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x3ce>
 801c1a8:	881a      	ldrh	r2, [r3, #0]
 801c1aa:	f89d 3031 	ldrb.w	r3, [sp, #49]	; 0x31
 801c1ae:	a80d      	add	r0, sp, #52	; 0x34
 801c1b0:	9005      	str	r0, [sp, #20]
 801c1b2:	f89d 002d 	ldrb.w	r0, [sp, #45]	; 0x2d
 801c1b6:	9004      	str	r0, [sp, #16]
 801c1b8:	980e      	ldr	r0, [sp, #56]	; 0x38
 801c1ba:	9003      	str	r0, [sp, #12]
 801c1bc:	f89d 0030 	ldrb.w	r0, [sp, #48]	; 0x30
 801c1c0:	9002      	str	r0, [sp, #8]
 801c1c2:	980f      	ldr	r0, [sp, #60]	; 0x3c
 801c1c4:	9001      	str	r0, [sp, #4]
 801c1c6:	f89d 002f 	ldrb.w	r0, [sp, #47]	; 0x2f
 801c1ca:	9000      	str	r0, [sp, #0]
 801c1cc:	e9cd a606 	strd	sl, r6, [sp, #24]
 801c1d0:	a810      	add	r0, sp, #64	; 0x40
 801c1d2:	f7ff fbdd 	bl	801b990 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>
 801c1d6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801c1d8:	b10b      	cbz	r3, 801c1de <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x226>
 801c1da:	3302      	adds	r3, #2
 801c1dc:	9309      	str	r3, [sp, #36]	; 0x24
 801c1de:	9b08      	ldr	r3, [sp, #32]
 801c1e0:	2b00      	cmp	r3, #0
 801c1e2:	f43f aefd 	beq.w	801bfe0 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x28>
 801c1e6:	3301      	adds	r3, #1
 801c1e8:	9308      	str	r3, [sp, #32]
 801c1ea:	e6f9      	b.n	801bfe0 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x28>
 801c1ec:	eef4 7a67 	vcmp.f32	s15, s15
 801c1f0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801c1f4:	d63a      	bvs.n	801c26c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2b4>
 801c1f6:	f10d 0846 	add.w	r8, sp, #70	; 0x46
 801c1fa:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 801c1fe:	f8cd 8040 	str.w	r8, [sp, #64]	; 0x40
 801c202:	eeb0 6a67 	vmov.f32	s12, s15
 801c206:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801c20a:	eef0 5a47 	vmov.f32	s11, s14
 801c20e:	eeb4 6ac7 	vcmpe.f32	s12, s14
 801c212:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801c216:	da2d      	bge.n	801c274 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2bc>
 801c218:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801c21a:	eeb6 6a00 	vmov.f32	s12, #96	; 0x3f000000  0.5
 801c21e:	2100      	movs	r1, #0
 801c220:	eef0 4a46 	vmov.f32	s9, s12
 801c224:	ebaa 0202 	sub.w	r2, sl, r2
 801c228:	eef4 6ac6 	vcmpe.f32	s13, s12
 801c22c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801c230:	b28b      	uxth	r3, r1
 801c232:	db2c      	blt.n	801c28e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2d6>
 801c234:	1a50      	subs	r0, r2, r1
 801c236:	2800      	cmp	r0, #0
 801c238:	dd29      	ble.n	801c28e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2d6>
 801c23a:	3101      	adds	r1, #1
 801c23c:	2964      	cmp	r1, #100	; 0x64
 801c23e:	d025      	beq.n	801c28c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2d4>
 801c240:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 801c244:	eebd 7ac7 	vcvt.s32.f32	s14, s14
 801c248:	ee17 3a10 	vmov	r3, s14
 801c24c:	2b09      	cmp	r3, #9
 801c24e:	bfa8      	it	ge
 801c250:	2309      	movge	r3, #9
 801c252:	ee07 3a10 	vmov	s14, r3
 801c256:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801c25a:	f103 0030 	add.w	r0, r3, #48	; 0x30
 801c25e:	eee7 7a66 	vfms.f32	s15, s14, s13
 801c262:	f827 0011 	strh.w	r0, [r7, r1, lsl #1]
 801c266:	eec6 6aa5 	vdiv.f32	s13, s13, s11
 801c26a:	e7dd      	b.n	801c228 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x270>
 801c26c:	4b06      	ldr	r3, [pc, #24]	; (801c288 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2d0>)
 801c26e:	9311      	str	r3, [sp, #68]	; 0x44
 801c270:	236e      	movs	r3, #110	; 0x6e
 801c272:	e792      	b.n	801c19a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1e2>
 801c274:	ee66 6a87 	vmul.f32	s13, s13, s14
 801c278:	ee86 6a07 	vdiv.f32	s12, s12, s14
 801c27c:	e7c7      	b.n	801c20e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x256>
 801c27e:	bf00      	nop
 801c280:	7f7fffff 	.word	0x7f7fffff
 801c284:	006e0069 	.word	0x006e0069
 801c288:	0061006e 	.word	0x0061006e
 801c28c:	2363      	movs	r3, #99	; 0x63
 801c28e:	2a63      	cmp	r2, #99	; 0x63
 801c290:	bfd4      	ite	le
 801c292:	ebc3 0202 	rsble	r2, r3, r2
 801c296:	f1c3 0263 	rsbgt	r2, r3, #99	; 0x63
 801c29a:	2a00      	cmp	r2, #0
 801c29c:	f103 0501 	add.w	r5, r3, #1
 801c2a0:	dd57      	ble.n	801c352 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x39a>
 801c2a2:	990f      	ldr	r1, [sp, #60]	; 0x3c
 801c2a4:	2900      	cmp	r1, #0
 801c2a6:	dd2b      	ble.n	801c300 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x348>
 801c2a8:	f04f 0901 	mov.w	r9, #1
 801c2ac:	230a      	movs	r3, #10
 801c2ae:	f111 31ff 	adds.w	r1, r1, #4294967295
 801c2b2:	d30c      	bcc.n	801c2ce <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x316>
 801c2b4:	ee67 7aa5 	vmul.f32	s15, s15, s11
 801c2b8:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 801c2bc:	ee17 0a10 	vmov	r0, s14
 801c2c0:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801c2c4:	fb03 0909 	mla	r9, r3, r9, r0
 801c2c8:	ee77 7ac7 	vsub.f32	s15, s15, s14
 801c2cc:	e7ef      	b.n	801c2ae <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2f6>
 801c2ce:	910f      	str	r1, [sp, #60]	; 0x3c
 801c2d0:	230a      	movs	r3, #10
 801c2d2:	b292      	uxth	r2, r2
 801c2d4:	eb07 0145 	add.w	r1, r7, r5, lsl #1
 801c2d8:	4648      	mov	r0, r9
 801c2da:	f7ff fb4d 	bl	801b978 <_ZN8touchgfx7Unicode4itoaElPtti>
 801c2de:	f1b9 0f01 	cmp.w	r9, #1
 801c2e2:	dc0b      	bgt.n	801c2fc <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x344>
 801c2e4:	f89d 302e 	ldrb.w	r3, [sp, #46]	; 0x2e
 801c2e8:	2b00      	cmp	r3, #0
 801c2ea:	bf0c      	ite	eq
 801c2ec:	2300      	moveq	r3, #0
 801c2ee:	232e      	movne	r3, #46	; 0x2e
 801c2f0:	aa44      	add	r2, sp, #272	; 0x110
 801c2f2:	eb02 0545 	add.w	r5, r2, r5, lsl #1
 801c2f6:	f825 3ccc 	strh.w	r3, [r5, #-204]
 801c2fa:	e015      	b.n	801c328 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x370>
 801c2fc:	232e      	movs	r3, #46	; 0x2e
 801c2fe:	e7f7      	b.n	801c2f0 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x338>
 801c300:	2a01      	cmp	r2, #1
 801c302:	d026      	beq.n	801c352 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x39a>
 801c304:	2b63      	cmp	r3, #99	; 0x63
 801c306:	d024      	beq.n	801c352 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x39a>
 801c308:	f89d 202e 	ldrb.w	r2, [sp, #46]	; 0x2e
 801c30c:	b30a      	cbz	r2, 801c352 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x39a>
 801c30e:	aa44      	add	r2, sp, #272	; 0x110
 801c310:	eb02 0545 	add.w	r5, r2, r5, lsl #1
 801c314:	222e      	movs	r2, #46	; 0x2e
 801c316:	f825 2ccc 	strh.w	r2, [r5, #-204]
 801c31a:	3302      	adds	r3, #2
 801c31c:	aa44      	add	r2, sp, #272	; 0x110
 801c31e:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801c322:	2200      	movs	r2, #0
 801c324:	f823 2ccc 	strh.w	r2, [r3, #-204]
 801c328:	eef4 7ae4 	vcmpe.f32	s15, s9
 801c32c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801c330:	f6ff af34 	blt.w	801c19c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1e4>
 801c334:	2300      	movs	r3, #0
 801c336:	f838 2b02 	ldrh.w	r2, [r8], #2
 801c33a:	1c59      	adds	r1, r3, #1
 801c33c:	b972      	cbnz	r2, 801c35c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x3a4>
 801c33e:	b29b      	uxth	r3, r3
 801c340:	2130      	movs	r1, #48	; 0x30
 801c342:	b96b      	cbnz	r3, 801c360 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x3a8>
 801c344:	2331      	movs	r3, #49	; 0x31
 801c346:	f8ad 3044 	strh.w	r3, [sp, #68]	; 0x44
 801c34a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801c34c:	3b02      	subs	r3, #2
 801c34e:	9310      	str	r3, [sp, #64]	; 0x40
 801c350:	e724      	b.n	801c19c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1e4>
 801c352:	ab44      	add	r3, sp, #272	; 0x110
 801c354:	eb03 0545 	add.w	r5, r3, r5, lsl #1
 801c358:	2300      	movs	r3, #0
 801c35a:	e7cc      	b.n	801c2f6 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x33e>
 801c35c:	460b      	mov	r3, r1
 801c35e:	e7ea      	b.n	801c336 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x37e>
 801c360:	f837 2013 	ldrh.w	r2, [r7, r3, lsl #1]
 801c364:	f1a2 0030 	sub.w	r0, r2, #48	; 0x30
 801c368:	2808      	cmp	r0, #8
 801c36a:	d806      	bhi.n	801c37a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x3c2>
 801c36c:	a944      	add	r1, sp, #272	; 0x110
 801c36e:	eb01 0343 	add.w	r3, r1, r3, lsl #1
 801c372:	3201      	adds	r2, #1
 801c374:	f823 2ccc 	strh.w	r2, [r3, #-204]
 801c378:	e710      	b.n	801c19c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1e4>
 801c37a:	2a39      	cmp	r2, #57	; 0x39
 801c37c:	bf08      	it	eq
 801c37e:	f827 1013 	strheq.w	r1, [r7, r3, lsl #1]
 801c382:	3b01      	subs	r3, #1
 801c384:	e7dd      	b.n	801c342 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x38a>
 801c386:	9a08      	ldr	r2, [sp, #32]
 801c388:	2a00      	cmp	r2, #0
 801c38a:	f43f af0e 	beq.w	801c1aa <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1f2>
 801c38e:	7812      	ldrb	r2, [r2, #0]
 801c390:	e70b      	b.n	801c1aa <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1f2>
 801c392:	2d00      	cmp	r5, #0
 801c394:	f43f aec9 	beq.w	801c12a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x172>
 801c398:	782d      	ldrb	r5, [r5, #0]
 801c39a:	e6c6      	b.n	801c12a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x172>

0801c39c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKcPKf>:
 801c39c:	b507      	push	{r0, r1, r2, lr}
 801c39e:	9300      	str	r3, [sp, #0]
 801c3a0:	4613      	mov	r3, r2
 801c3a2:	2200      	movs	r2, #0
 801c3a4:	f7ff fe08 	bl	801bfb8 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf>
 801c3a8:	b003      	add	sp, #12
 801c3aa:	f85d fb04 	ldr.w	pc, [sp], #4
	...

0801c3b0 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>:
 801c3b0:	4b01      	ldr	r3, [pc, #4]	; (801c3b8 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE+0x8>)
 801c3b2:	6018      	str	r0, [r3, #0]
 801c3b4:	4770      	bx	lr
 801c3b6:	bf00      	nop
 801c3b8:	20006c9c 	.word	0x20006c9c

0801c3bc <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>:
 801c3bc:	4b06      	ldr	r3, [pc, #24]	; (801c3d8 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x1c>)
 801c3be:	881a      	ldrh	r2, [r3, #0]
 801c3c0:	4282      	cmp	r2, r0
 801c3c2:	d807      	bhi.n	801c3d4 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x18>
 801c3c4:	4b05      	ldr	r3, [pc, #20]	; (801c3dc <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x20>)
 801c3c6:	881b      	ldrh	r3, [r3, #0]
 801c3c8:	4413      	add	r3, r2
 801c3ca:	4298      	cmp	r0, r3
 801c3cc:	bfac      	ite	ge
 801c3ce:	2000      	movge	r0, #0
 801c3d0:	2001      	movlt	r0, #1
 801c3d2:	4770      	bx	lr
 801c3d4:	2000      	movs	r0, #0
 801c3d6:	4770      	bx	lr
 801c3d8:	20006cbc 	.word	0x20006cbc
 801c3dc:	20006cc0 	.word	0x20006cc0

0801c3e0 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>:
 801c3e0:	b508      	push	{r3, lr}
 801c3e2:	4601      	mov	r1, r0
 801c3e4:	f7ff ffea 	bl	801c3bc <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>
 801c3e8:	b118      	cbz	r0, 801c3f2 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x12>
 801c3ea:	4b02      	ldr	r3, [pc, #8]	; (801c3f4 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x14>)
 801c3ec:	681b      	ldr	r3, [r3, #0]
 801c3ee:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 801c3f2:	bd08      	pop	{r3, pc}
 801c3f4:	20006ca0 	.word	0x20006ca0

0801c3f8 <_ZN8touchgfx6Bitmap10clearCacheEv>:
 801c3f8:	b5f0      	push	{r4, r5, r6, r7, lr}
 801c3fa:	4c24      	ldr	r4, [pc, #144]	; (801c48c <_ZN8touchgfx6Bitmap10clearCacheEv+0x94>)
 801c3fc:	6823      	ldr	r3, [r4, #0]
 801c3fe:	2b00      	cmp	r3, #0
 801c400:	d042      	beq.n	801c488 <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 801c402:	4a23      	ldr	r2, [pc, #140]	; (801c490 <_ZN8touchgfx6Bitmap10clearCacheEv+0x98>)
 801c404:	4d23      	ldr	r5, [pc, #140]	; (801c494 <_ZN8touchgfx6Bitmap10clearCacheEv+0x9c>)
 801c406:	8811      	ldrh	r1, [r2, #0]
 801c408:	f8b5 c000 	ldrh.w	ip, [r5]
 801c40c:	4822      	ldr	r0, [pc, #136]	; (801c498 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa0>)
 801c40e:	4461      	add	r1, ip
 801c410:	1c4a      	adds	r2, r1, #1
 801c412:	f022 0201 	bic.w	r2, r2, #1
 801c416:	008f      	lsls	r7, r1, #2
 801c418:	0412      	lsls	r2, r2, #16
 801c41a:	19de      	adds	r6, r3, r7
 801c41c:	0c12      	lsrs	r2, r2, #16
 801c41e:	eb07 0742 	add.w	r7, r7, r2, lsl #1
 801c422:	6006      	str	r6, [r0, #0]
 801c424:	4e1d      	ldr	r6, [pc, #116]	; (801c49c <_ZN8touchgfx6Bitmap10clearCacheEv+0xa4>)
 801c426:	19da      	adds	r2, r3, r7
 801c428:	6032      	str	r2, [r6, #0]
 801c42a:	220e      	movs	r2, #14
 801c42c:	fb02 f20c 	mul.w	r2, r2, ip
 801c430:	3203      	adds	r2, #3
 801c432:	f022 0203 	bic.w	r2, r2, #3
 801c436:	443a      	add	r2, r7
 801c438:	4f19      	ldr	r7, [pc, #100]	; (801c4a0 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa8>)
 801c43a:	4413      	add	r3, r2
 801c43c:	603b      	str	r3, [r7, #0]
 801c43e:	4f19      	ldr	r7, [pc, #100]	; (801c4a4 <_ZN8touchgfx6Bitmap10clearCacheEv+0xac>)
 801c440:	2300      	movs	r3, #0
 801c442:	803b      	strh	r3, [r7, #0]
 801c444:	4f18      	ldr	r7, [pc, #96]	; (801c4a8 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb0>)
 801c446:	683f      	ldr	r7, [r7, #0]
 801c448:	1aba      	subs	r2, r7, r2
 801c44a:	4f18      	ldr	r7, [pc, #96]	; (801c4ac <_ZN8touchgfx6Bitmap10clearCacheEv+0xb4>)
 801c44c:	603a      	str	r2, [r7, #0]
 801c44e:	4a18      	ldr	r2, [pc, #96]	; (801c4b0 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb8>)
 801c450:	469c      	mov	ip, r3
 801c452:	8013      	strh	r3, [r2, #0]
 801c454:	f64f 77ff 	movw	r7, #65535	; 0xffff
 801c458:	428b      	cmp	r3, r1
 801c45a:	d10d      	bne.n	801c478 <_ZN8touchgfx6Bitmap10clearCacheEv+0x80>
 801c45c:	882d      	ldrh	r5, [r5, #0]
 801c45e:	6830      	ldr	r0, [r6, #0]
 801c460:	2300      	movs	r3, #0
 801c462:	240e      	movs	r4, #14
 801c464:	429d      	cmp	r5, r3
 801c466:	d90f      	bls.n	801c488 <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 801c468:	fb04 0203 	mla	r2, r4, r3, r0
 801c46c:	3301      	adds	r3, #1
 801c46e:	7b11      	ldrb	r1, [r2, #12]
 801c470:	f36f 1145 	bfc	r1, #5, #1
 801c474:	7311      	strb	r1, [r2, #12]
 801c476:	e7f5      	b.n	801c464 <_ZN8touchgfx6Bitmap10clearCacheEv+0x6c>
 801c478:	6822      	ldr	r2, [r4, #0]
 801c47a:	f842 c023 	str.w	ip, [r2, r3, lsl #2]
 801c47e:	6802      	ldr	r2, [r0, #0]
 801c480:	f822 7013 	strh.w	r7, [r2, r3, lsl #1]
 801c484:	3301      	adds	r3, #1
 801c486:	e7e7      	b.n	801c458 <_ZN8touchgfx6Bitmap10clearCacheEv+0x60>
 801c488:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801c48a:	bf00      	nop
 801c48c:	20006ca0 	.word	0x20006ca0
 801c490:	20006cbc 	.word	0x20006cbc
 801c494:	20006cc0 	.word	0x20006cc0
 801c498:	20006cb4 	.word	0x20006cb4
 801c49c:	20006ca4 	.word	0x20006ca4
 801c4a0:	20006cac 	.word	0x20006cac
 801c4a4:	20006cbe 	.word	0x20006cbe
 801c4a8:	20006ca8 	.word	0x20006ca8
 801c4ac:	20006cb8 	.word	0x20006cb8
 801c4b0:	20006cb0 	.word	0x20006cb0

0801c4b4 <_ZN8touchgfx6Bitmap8setCacheEPtmm>:
 801c4b4:	4b06      	ldr	r3, [pc, #24]	; (801c4d0 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x1c>)
 801c4b6:	681b      	ldr	r3, [r3, #0]
 801c4b8:	b943      	cbnz	r3, 801c4cc <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
 801c4ba:	b139      	cbz	r1, 801c4cc <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
 801c4bc:	4b05      	ldr	r3, [pc, #20]	; (801c4d4 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x20>)
 801c4be:	801a      	strh	r2, [r3, #0]
 801c4c0:	4b05      	ldr	r3, [pc, #20]	; (801c4d8 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x24>)
 801c4c2:	6019      	str	r1, [r3, #0]
 801c4c4:	4b05      	ldr	r3, [pc, #20]	; (801c4dc <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x28>)
 801c4c6:	6018      	str	r0, [r3, #0]
 801c4c8:	f7ff bf96 	b.w	801c3f8 <_ZN8touchgfx6Bitmap10clearCacheEv>
 801c4cc:	4770      	bx	lr
 801c4ce:	bf00      	nop
 801c4d0:	20006cac 	.word	0x20006cac
 801c4d4:	20006cc0 	.word	0x20006cc0
 801c4d8:	20006ca8 	.word	0x20006ca8
 801c4dc:	20006ca0 	.word	0x20006ca0

0801c4e0 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>:
 801c4e0:	b470      	push	{r4, r5, r6}
 801c4e2:	4c07      	ldr	r4, [pc, #28]	; (801c500 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x20>)
 801c4e4:	6826      	ldr	r6, [r4, #0]
 801c4e6:	4605      	mov	r5, r0
 801c4e8:	4610      	mov	r0, r2
 801c4ea:	9a03      	ldr	r2, [sp, #12]
 801c4ec:	b936      	cbnz	r6, 801c4fc <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x1c>
 801c4ee:	6025      	str	r5, [r4, #0]
 801c4f0:	4c04      	ldr	r4, [pc, #16]	; (801c504 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x24>)
 801c4f2:	8021      	strh	r1, [r4, #0]
 801c4f4:	bc70      	pop	{r4, r5, r6}
 801c4f6:	4619      	mov	r1, r3
 801c4f8:	f7ff bfdc 	b.w	801c4b4 <_ZN8touchgfx6Bitmap8setCacheEPtmm>
 801c4fc:	bc70      	pop	{r4, r5, r6}
 801c4fe:	4770      	bx	lr
 801c500:	20006cc4 	.word	0x20006cc4
 801c504:	20006cbc 	.word	0x20006cbc

0801c508 <_ZNK8touchgfx6Bitmap8getWidthEv>:
 801c508:	4a12      	ldr	r2, [pc, #72]	; (801c554 <_ZNK8touchgfx6Bitmap8getWidthEv+0x4c>)
 801c50a:	8803      	ldrh	r3, [r0, #0]
 801c50c:	8812      	ldrh	r2, [r2, #0]
 801c50e:	4293      	cmp	r3, r2
 801c510:	d207      	bcs.n	801c522 <_ZNK8touchgfx6Bitmap8getWidthEv+0x1a>
 801c512:	4a11      	ldr	r2, [pc, #68]	; (801c558 <_ZNK8touchgfx6Bitmap8getWidthEv+0x50>)
 801c514:	6812      	ldr	r2, [r2, #0]
 801c516:	2114      	movs	r1, #20
 801c518:	fb01 2303 	mla	r3, r1, r3, r2
 801c51c:	f9b3 0008 	ldrsh.w	r0, [r3, #8]
 801c520:	4770      	bx	lr
 801c522:	490e      	ldr	r1, [pc, #56]	; (801c55c <_ZNK8touchgfx6Bitmap8getWidthEv+0x54>)
 801c524:	8809      	ldrh	r1, [r1, #0]
 801c526:	4411      	add	r1, r2
 801c528:	428b      	cmp	r3, r1
 801c52a:	da04      	bge.n	801c536 <_ZNK8touchgfx6Bitmap8getWidthEv+0x2e>
 801c52c:	1a9b      	subs	r3, r3, r2
 801c52e:	4a0c      	ldr	r2, [pc, #48]	; (801c560 <_ZNK8touchgfx6Bitmap8getWidthEv+0x58>)
 801c530:	210e      	movs	r1, #14
 801c532:	6812      	ldr	r2, [r2, #0]
 801c534:	e7f0      	b.n	801c518 <_ZNK8touchgfx6Bitmap8getWidthEv+0x10>
 801c536:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 801c53a:	4293      	cmp	r3, r2
 801c53c:	d108      	bne.n	801c550 <_ZNK8touchgfx6Bitmap8getWidthEv+0x48>
 801c53e:	4b09      	ldr	r3, [pc, #36]	; (801c564 <_ZNK8touchgfx6Bitmap8getWidthEv+0x5c>)
 801c540:	781b      	ldrb	r3, [r3, #0]
 801c542:	b91b      	cbnz	r3, 801c54c <_ZNK8touchgfx6Bitmap8getWidthEv+0x44>
 801c544:	4b08      	ldr	r3, [pc, #32]	; (801c568 <_ZNK8touchgfx6Bitmap8getWidthEv+0x60>)
 801c546:	f9b3 0000 	ldrsh.w	r0, [r3]
 801c54a:	4770      	bx	lr
 801c54c:	4b07      	ldr	r3, [pc, #28]	; (801c56c <_ZNK8touchgfx6Bitmap8getWidthEv+0x64>)
 801c54e:	e7fa      	b.n	801c546 <_ZNK8touchgfx6Bitmap8getWidthEv+0x3e>
 801c550:	2000      	movs	r0, #0
 801c552:	4770      	bx	lr
 801c554:	20006cbc 	.word	0x20006cbc
 801c558:	20006cc4 	.word	0x20006cc4
 801c55c:	20006cc0 	.word	0x20006cc0
 801c560:	20006ca4 	.word	0x20006ca4
 801c564:	20006c2c 	.word	0x20006c2c
 801c568:	20006c2e 	.word	0x20006c2e
 801c56c:	20006c30 	.word	0x20006c30

0801c570 <_ZNK8touchgfx6Bitmap9getHeightEv>:
 801c570:	4a12      	ldr	r2, [pc, #72]	; (801c5bc <_ZNK8touchgfx6Bitmap9getHeightEv+0x4c>)
 801c572:	8803      	ldrh	r3, [r0, #0]
 801c574:	8812      	ldrh	r2, [r2, #0]
 801c576:	4293      	cmp	r3, r2
 801c578:	d207      	bcs.n	801c58a <_ZNK8touchgfx6Bitmap9getHeightEv+0x1a>
 801c57a:	4a11      	ldr	r2, [pc, #68]	; (801c5c0 <_ZNK8touchgfx6Bitmap9getHeightEv+0x50>)
 801c57c:	6812      	ldr	r2, [r2, #0]
 801c57e:	2114      	movs	r1, #20
 801c580:	fb01 2303 	mla	r3, r1, r3, r2
 801c584:	f9b3 000a 	ldrsh.w	r0, [r3, #10]
 801c588:	4770      	bx	lr
 801c58a:	490e      	ldr	r1, [pc, #56]	; (801c5c4 <_ZNK8touchgfx6Bitmap9getHeightEv+0x54>)
 801c58c:	8809      	ldrh	r1, [r1, #0]
 801c58e:	4411      	add	r1, r2
 801c590:	428b      	cmp	r3, r1
 801c592:	da04      	bge.n	801c59e <_ZNK8touchgfx6Bitmap9getHeightEv+0x2e>
 801c594:	1a9b      	subs	r3, r3, r2
 801c596:	4a0c      	ldr	r2, [pc, #48]	; (801c5c8 <_ZNK8touchgfx6Bitmap9getHeightEv+0x58>)
 801c598:	210e      	movs	r1, #14
 801c59a:	6812      	ldr	r2, [r2, #0]
 801c59c:	e7f0      	b.n	801c580 <_ZNK8touchgfx6Bitmap9getHeightEv+0x10>
 801c59e:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 801c5a2:	4293      	cmp	r3, r2
 801c5a4:	d108      	bne.n	801c5b8 <_ZNK8touchgfx6Bitmap9getHeightEv+0x48>
 801c5a6:	4b09      	ldr	r3, [pc, #36]	; (801c5cc <_ZNK8touchgfx6Bitmap9getHeightEv+0x5c>)
 801c5a8:	781b      	ldrb	r3, [r3, #0]
 801c5aa:	b91b      	cbnz	r3, 801c5b4 <_ZNK8touchgfx6Bitmap9getHeightEv+0x44>
 801c5ac:	4b08      	ldr	r3, [pc, #32]	; (801c5d0 <_ZNK8touchgfx6Bitmap9getHeightEv+0x60>)
 801c5ae:	f9b3 0000 	ldrsh.w	r0, [r3]
 801c5b2:	4770      	bx	lr
 801c5b4:	4b07      	ldr	r3, [pc, #28]	; (801c5d4 <_ZNK8touchgfx6Bitmap9getHeightEv+0x64>)
 801c5b6:	e7fa      	b.n	801c5ae <_ZNK8touchgfx6Bitmap9getHeightEv+0x3e>
 801c5b8:	2000      	movs	r0, #0
 801c5ba:	4770      	bx	lr
 801c5bc:	20006cbc 	.word	0x20006cbc
 801c5c0:	20006cc4 	.word	0x20006cc4
 801c5c4:	20006cc0 	.word	0x20006cc0
 801c5c8:	20006ca4 	.word	0x20006ca4
 801c5cc:	20006c2c 	.word	0x20006c2c
 801c5d0:	20006c30 	.word	0x20006c30
 801c5d4:	20006c2e 	.word	0x20006c2e

0801c5d8 <_ZNK8touchgfx6Bitmap12getSolidRectEv>:
 801c5d8:	b510      	push	{r4, lr}
 801c5da:	4a1f      	ldr	r2, [pc, #124]	; (801c658 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x80>)
 801c5dc:	880b      	ldrh	r3, [r1, #0]
 801c5de:	8812      	ldrh	r2, [r2, #0]
 801c5e0:	4293      	cmp	r3, r2
 801c5e2:	d213      	bcs.n	801c60c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x34>
 801c5e4:	4a1d      	ldr	r2, [pc, #116]	; (801c65c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x84>)
 801c5e6:	6812      	ldr	r2, [r2, #0]
 801c5e8:	2114      	movs	r1, #20
 801c5ea:	fb01 2303 	mla	r3, r1, r3, r2
 801c5ee:	8a1a      	ldrh	r2, [r3, #16]
 801c5f0:	f9b3 400c 	ldrsh.w	r4, [r3, #12]
 801c5f4:	f9b3 100e 	ldrsh.w	r1, [r3, #14]
 801c5f8:	8a5b      	ldrh	r3, [r3, #18]
 801c5fa:	8004      	strh	r4, [r0, #0]
 801c5fc:	f3c2 020c 	ubfx	r2, r2, #0, #13
 801c600:	f3c3 030c 	ubfx	r3, r3, #0, #13
 801c604:	8041      	strh	r1, [r0, #2]
 801c606:	8082      	strh	r2, [r0, #4]
 801c608:	80c3      	strh	r3, [r0, #6]
 801c60a:	e00e      	b.n	801c62a <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x52>
 801c60c:	4914      	ldr	r1, [pc, #80]	; (801c660 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x88>)
 801c60e:	8809      	ldrh	r1, [r1, #0]
 801c610:	4411      	add	r1, r2
 801c612:	428b      	cmp	r3, r1
 801c614:	da0a      	bge.n	801c62c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x54>
 801c616:	1a9b      	subs	r3, r3, r2
 801c618:	4a12      	ldr	r2, [pc, #72]	; (801c664 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x8c>)
 801c61a:	6812      	ldr	r2, [r2, #0]
 801c61c:	210e      	movs	r1, #14
 801c61e:	fb01 2303 	mla	r3, r1, r3, r2
 801c622:	681a      	ldr	r2, [r3, #0]
 801c624:	6002      	str	r2, [r0, #0]
 801c626:	685a      	ldr	r2, [r3, #4]
 801c628:	6042      	str	r2, [r0, #4]
 801c62a:	bd10      	pop	{r4, pc}
 801c62c:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 801c630:	4293      	cmp	r3, r2
 801c632:	d10b      	bne.n	801c64c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x74>
 801c634:	4b0c      	ldr	r3, [pc, #48]	; (801c668 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x90>)
 801c636:	f9b3 1000 	ldrsh.w	r1, [r3]
 801c63a:	4b0c      	ldr	r3, [pc, #48]	; (801c66c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x94>)
 801c63c:	8081      	strh	r1, [r0, #4]
 801c63e:	f9b3 2000 	ldrsh.w	r2, [r3]
 801c642:	80c2      	strh	r2, [r0, #6]
 801c644:	2300      	movs	r3, #0
 801c646:	8003      	strh	r3, [r0, #0]
 801c648:	8043      	strh	r3, [r0, #2]
 801c64a:	e7ee      	b.n	801c62a <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x52>
 801c64c:	2300      	movs	r3, #0
 801c64e:	8003      	strh	r3, [r0, #0]
 801c650:	8043      	strh	r3, [r0, #2]
 801c652:	8083      	strh	r3, [r0, #4]
 801c654:	e7d8      	b.n	801c608 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x30>
 801c656:	bf00      	nop
 801c658:	20006cbc 	.word	0x20006cbc
 801c65c:	20006cc4 	.word	0x20006cc4
 801c660:	20006cc0 	.word	0x20006cc0
 801c664:	20006ca4 	.word	0x20006ca4
 801c668:	20006c28 	.word	0x20006c28
 801c66c:	20006c2a 	.word	0x20006c2a

0801c670 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>:
 801c670:	4a17      	ldr	r2, [pc, #92]	; (801c6d0 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x60>)
 801c672:	8803      	ldrh	r3, [r0, #0]
 801c674:	8812      	ldrh	r2, [r2, #0]
 801c676:	4293      	cmp	r3, r2
 801c678:	d213      	bcs.n	801c6a2 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x32>
 801c67a:	4a16      	ldr	r2, [pc, #88]	; (801c6d4 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x64>)
 801c67c:	6812      	ldr	r2, [r2, #0]
 801c67e:	2114      	movs	r1, #20
 801c680:	fb01 2303 	mla	r3, r1, r3, r2
 801c684:	8a1a      	ldrh	r2, [r3, #16]
 801c686:	8919      	ldrh	r1, [r3, #8]
 801c688:	f3c2 020c 	ubfx	r2, r2, #0, #13
 801c68c:	428a      	cmp	r2, r1
 801c68e:	db1d      	blt.n	801c6cc <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
 801c690:	8a58      	ldrh	r0, [r3, #18]
 801c692:	f3c0 000c 	ubfx	r0, r0, #0, #13
 801c696:	895b      	ldrh	r3, [r3, #10]
 801c698:	4298      	cmp	r0, r3
 801c69a:	bfac      	ite	ge
 801c69c:	2000      	movge	r0, #0
 801c69e:	2001      	movlt	r0, #1
 801c6a0:	4770      	bx	lr
 801c6a2:	490d      	ldr	r1, [pc, #52]	; (801c6d8 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x68>)
 801c6a4:	8809      	ldrh	r1, [r1, #0]
 801c6a6:	4411      	add	r1, r2
 801c6a8:	428b      	cmp	r3, r1
 801c6aa:	da0d      	bge.n	801c6c8 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x58>
 801c6ac:	1a9b      	subs	r3, r3, r2
 801c6ae:	4a0b      	ldr	r2, [pc, #44]	; (801c6dc <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x6c>)
 801c6b0:	6812      	ldr	r2, [r2, #0]
 801c6b2:	210e      	movs	r1, #14
 801c6b4:	fb01 2303 	mla	r3, r1, r3, r2
 801c6b8:	f9b3 1004 	ldrsh.w	r1, [r3, #4]
 801c6bc:	891a      	ldrh	r2, [r3, #8]
 801c6be:	4291      	cmp	r1, r2
 801c6c0:	db04      	blt.n	801c6cc <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
 801c6c2:	f9b3 0006 	ldrsh.w	r0, [r3, #6]
 801c6c6:	e7e6      	b.n	801c696 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x26>
 801c6c8:	2000      	movs	r0, #0
 801c6ca:	4770      	bx	lr
 801c6cc:	2001      	movs	r0, #1
 801c6ce:	4770      	bx	lr
 801c6d0:	20006cbc 	.word	0x20006cbc
 801c6d4:	20006cc4 	.word	0x20006cc4
 801c6d8:	20006cc0 	.word	0x20006cc0
 801c6dc:	20006ca4 	.word	0x20006ca4

0801c6e0 <_ZNK8touchgfx6Bitmap7getDataEv>:
 801c6e0:	4a12      	ldr	r2, [pc, #72]	; (801c72c <_ZNK8touchgfx6Bitmap7getDataEv+0x4c>)
 801c6e2:	8803      	ldrh	r3, [r0, #0]
 801c6e4:	8811      	ldrh	r1, [r2, #0]
 801c6e6:	428b      	cmp	r3, r1
 801c6e8:	d20b      	bcs.n	801c702 <_ZNK8touchgfx6Bitmap7getDataEv+0x22>
 801c6ea:	4a11      	ldr	r2, [pc, #68]	; (801c730 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 801c6ec:	6812      	ldr	r2, [r2, #0]
 801c6ee:	b112      	cbz	r2, 801c6f6 <_ZNK8touchgfx6Bitmap7getDataEv+0x16>
 801c6f0:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 801c6f4:	b9c0      	cbnz	r0, 801c728 <_ZNK8touchgfx6Bitmap7getDataEv+0x48>
 801c6f6:	4a0f      	ldr	r2, [pc, #60]	; (801c734 <_ZNK8touchgfx6Bitmap7getDataEv+0x54>)
 801c6f8:	6811      	ldr	r1, [r2, #0]
 801c6fa:	2214      	movs	r2, #20
 801c6fc:	4353      	muls	r3, r2
 801c6fe:	58c8      	ldr	r0, [r1, r3]
 801c700:	4770      	bx	lr
 801c702:	4a0d      	ldr	r2, [pc, #52]	; (801c738 <_ZNK8touchgfx6Bitmap7getDataEv+0x58>)
 801c704:	8812      	ldrh	r2, [r2, #0]
 801c706:	440a      	add	r2, r1
 801c708:	4293      	cmp	r3, r2
 801c70a:	da04      	bge.n	801c716 <_ZNK8touchgfx6Bitmap7getDataEv+0x36>
 801c70c:	4a08      	ldr	r2, [pc, #32]	; (801c730 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 801c70e:	6812      	ldr	r2, [r2, #0]
 801c710:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 801c714:	4770      	bx	lr
 801c716:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 801c71a:	4293      	cmp	r3, r2
 801c71c:	d103      	bne.n	801c726 <_ZNK8touchgfx6Bitmap7getDataEv+0x46>
 801c71e:	4b07      	ldr	r3, [pc, #28]	; (801c73c <_ZNK8touchgfx6Bitmap7getDataEv+0x5c>)
 801c720:	681b      	ldr	r3, [r3, #0]
 801c722:	6c58      	ldr	r0, [r3, #68]	; 0x44
 801c724:	4770      	bx	lr
 801c726:	2000      	movs	r0, #0
 801c728:	4770      	bx	lr
 801c72a:	bf00      	nop
 801c72c:	20006cbc 	.word	0x20006cbc
 801c730:	20006ca0 	.word	0x20006ca0
 801c734:	20006cc4 	.word	0x20006cc4
 801c738:	20006cc0 	.word	0x20006cc0
 801c73c:	20006c34 	.word	0x20006c34

0801c740 <_ZNK8touchgfx6Bitmap12getExtraDataEv>:
 801c740:	4b24      	ldr	r3, [pc, #144]	; (801c7d4 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x94>)
 801c742:	8802      	ldrh	r2, [r0, #0]
 801c744:	8818      	ldrh	r0, [r3, #0]
 801c746:	4282      	cmp	r2, r0
 801c748:	d221      	bcs.n	801c78e <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x4e>
 801c74a:	4b23      	ldr	r3, [pc, #140]	; (801c7d8 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>)
 801c74c:	6819      	ldr	r1, [r3, #0]
 801c74e:	2314      	movs	r3, #20
 801c750:	fb03 1302 	mla	r3, r3, r2, r1
 801c754:	6858      	ldr	r0, [r3, #4]
 801c756:	2800      	cmp	r0, #0
 801c758:	d03a      	beq.n	801c7d0 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 801c75a:	4920      	ldr	r1, [pc, #128]	; (801c7dc <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 801c75c:	6809      	ldr	r1, [r1, #0]
 801c75e:	2900      	cmp	r1, #0
 801c760:	d036      	beq.n	801c7d0 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 801c762:	f851 1022 	ldr.w	r1, [r1, r2, lsl #2]
 801c766:	2900      	cmp	r1, #0
 801c768:	d032      	beq.n	801c7d0 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 801c76a:	891a      	ldrh	r2, [r3, #8]
 801c76c:	8958      	ldrh	r0, [r3, #10]
 801c76e:	4350      	muls	r0, r2
 801c770:	7c5a      	ldrb	r2, [r3, #17]
 801c772:	7cdb      	ldrb	r3, [r3, #19]
 801c774:	0952      	lsrs	r2, r2, #5
 801c776:	f3c3 1342 	ubfx	r3, r3, #5, #3
 801c77a:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 801c77e:	2b0b      	cmp	r3, #11
 801c780:	bf18      	it	ne
 801c782:	0040      	lslne	r0, r0, #1
 801c784:	3003      	adds	r0, #3
 801c786:	f020 0003 	bic.w	r0, r0, #3
 801c78a:	4408      	add	r0, r1
 801c78c:	4770      	bx	lr
 801c78e:	4b14      	ldr	r3, [pc, #80]	; (801c7e0 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa0>)
 801c790:	881b      	ldrh	r3, [r3, #0]
 801c792:	4403      	add	r3, r0
 801c794:	429a      	cmp	r2, r3
 801c796:	da1a      	bge.n	801c7ce <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 801c798:	4b12      	ldr	r3, [pc, #72]	; (801c7e4 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa4>)
 801c79a:	681b      	ldr	r3, [r3, #0]
 801c79c:	1a10      	subs	r0, r2, r0
 801c79e:	210e      	movs	r1, #14
 801c7a0:	fb01 3000 	mla	r0, r1, r0, r3
 801c7a4:	7b03      	ldrb	r3, [r0, #12]
 801c7a6:	f003 031f 	and.w	r3, r3, #31
 801c7aa:	2b0b      	cmp	r3, #11
 801c7ac:	d10b      	bne.n	801c7c6 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x86>
 801c7ae:	8903      	ldrh	r3, [r0, #8]
 801c7b0:	8940      	ldrh	r0, [r0, #10]
 801c7b2:	4358      	muls	r0, r3
 801c7b4:	4b09      	ldr	r3, [pc, #36]	; (801c7dc <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 801c7b6:	6819      	ldr	r1, [r3, #0]
 801c7b8:	3003      	adds	r0, #3
 801c7ba:	f020 0303 	bic.w	r3, r0, #3
 801c7be:	f851 0022 	ldr.w	r0, [r1, r2, lsl #2]
 801c7c2:	4418      	add	r0, r3
 801c7c4:	4770      	bx	lr
 801c7c6:	2b0d      	cmp	r3, #13
 801c7c8:	d101      	bne.n	801c7ce <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 801c7ca:	300d      	adds	r0, #13
 801c7cc:	4770      	bx	lr
 801c7ce:	2000      	movs	r0, #0
 801c7d0:	4770      	bx	lr
 801c7d2:	bf00      	nop
 801c7d4:	20006cbc 	.word	0x20006cbc
 801c7d8:	20006cc4 	.word	0x20006cc4
 801c7dc:	20006ca0 	.word	0x20006ca0
 801c7e0:	20006cc0 	.word	0x20006cc0
 801c7e4:	20006ca4 	.word	0x20006ca4

0801c7e8 <_ZNK8touchgfx6Bitmap9getFormatEv>:
 801c7e8:	b510      	push	{r4, lr}
 801c7ea:	4a17      	ldr	r2, [pc, #92]	; (801c848 <_ZNK8touchgfx6Bitmap9getFormatEv+0x60>)
 801c7ec:	8803      	ldrh	r3, [r0, #0]
 801c7ee:	8812      	ldrh	r2, [r2, #0]
 801c7f0:	4293      	cmp	r3, r2
 801c7f2:	d20c      	bcs.n	801c80e <_ZNK8touchgfx6Bitmap9getFormatEv+0x26>
 801c7f4:	4a15      	ldr	r2, [pc, #84]	; (801c84c <_ZNK8touchgfx6Bitmap9getFormatEv+0x64>)
 801c7f6:	6812      	ldr	r2, [r2, #0]
 801c7f8:	2114      	movs	r1, #20
 801c7fa:	fb01 2303 	mla	r3, r1, r3, r2
 801c7fe:	7c58      	ldrb	r0, [r3, #17]
 801c800:	0942      	lsrs	r2, r0, #5
 801c802:	7cd8      	ldrb	r0, [r3, #19]
 801c804:	f3c0 1042 	ubfx	r0, r0, #5, #3
 801c808:	ea40 00c2 	orr.w	r0, r0, r2, lsl #3
 801c80c:	bd10      	pop	{r4, pc}
 801c80e:	4910      	ldr	r1, [pc, #64]	; (801c850 <_ZNK8touchgfx6Bitmap9getFormatEv+0x68>)
 801c810:	8809      	ldrh	r1, [r1, #0]
 801c812:	4411      	add	r1, r2
 801c814:	428b      	cmp	r3, r1
 801c816:	da09      	bge.n	801c82c <_ZNK8touchgfx6Bitmap9getFormatEv+0x44>
 801c818:	1a9b      	subs	r3, r3, r2
 801c81a:	4a0e      	ldr	r2, [pc, #56]	; (801c854 <_ZNK8touchgfx6Bitmap9getFormatEv+0x6c>)
 801c81c:	6812      	ldr	r2, [r2, #0]
 801c81e:	210e      	movs	r1, #14
 801c820:	fb01 2303 	mla	r3, r1, r3, r2
 801c824:	7b18      	ldrb	r0, [r3, #12]
 801c826:	f000 001f 	and.w	r0, r0, #31
 801c82a:	e7ef      	b.n	801c80c <_ZNK8touchgfx6Bitmap9getFormatEv+0x24>
 801c82c:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 801c830:	4293      	cmp	r3, r2
 801c832:	d106      	bne.n	801c842 <_ZNK8touchgfx6Bitmap9getFormatEv+0x5a>
 801c834:	f7ee fb6a 	bl	800af0c <_ZN8touchgfx3HAL3lcdEv>
 801c838:	6803      	ldr	r3, [r0, #0]
 801c83a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801c83e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801c840:	4718      	bx	r3
 801c842:	2000      	movs	r0, #0
 801c844:	e7e2      	b.n	801c80c <_ZNK8touchgfx6Bitmap9getFormatEv+0x24>
 801c846:	bf00      	nop
 801c848:	20006cbc 	.word	0x20006cbc
 801c84c:	20006cc4 	.word	0x20006cc4
 801c850:	20006cc0 	.word	0x20006cc0
 801c854:	20006ca4 	.word	0x20006ca4

0801c858 <_ZNK8touchgfx8LCD16bpp8bitDepthEv>:
 801c858:	2010      	movs	r0, #16
 801c85a:	4770      	bx	lr

0801c85c <_ZNK8touchgfx8LCD16bpp17framebufferFormatEv>:
 801c85c:	2000      	movs	r0, #0
 801c85e:	4770      	bx	lr

0801c860 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv>:
 801c860:	4b02      	ldr	r3, [pc, #8]	; (801c86c <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0xc>)
 801c862:	8818      	ldrh	r0, [r3, #0]
 801c864:	0040      	lsls	r0, r0, #1
 801c866:	b280      	uxth	r0, r0
 801c868:	4770      	bx	lr
 801c86a:	bf00      	nop
 801c86c:	20006c2e 	.word	0x20006c2e

0801c870 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth>:
 801c870:	2bff      	cmp	r3, #255	; 0xff
 801c872:	d050      	beq.n	801c916 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa6>
 801c874:	2a0b      	cmp	r2, #11
 801c876:	d04a      	beq.n	801c90e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
 801c878:	d80e      	bhi.n	801c898 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x28>
 801c87a:	2a03      	cmp	r2, #3
 801c87c:	d03f      	beq.n	801c8fe <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8e>
 801c87e:	d804      	bhi.n	801c88a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x1a>
 801c880:	2a01      	cmp	r2, #1
 801c882:	d03e      	beq.n	801c902 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x92>
 801c884:	d93f      	bls.n	801c906 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x96>
 801c886:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
 801c888:	4770      	bx	lr
 801c88a:	2a09      	cmp	r2, #9
 801c88c:	d03f      	beq.n	801c90e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
 801c88e:	d83c      	bhi.n	801c90a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
 801c890:	2a08      	cmp	r2, #8
 801c892:	d03a      	beq.n	801c90a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
 801c894:	2000      	movs	r0, #0
 801c896:	4770      	bx	lr
 801c898:	2a2f      	cmp	r2, #47	; 0x2f
 801c89a:	d024      	beq.n	801c8e6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x76>
 801c89c:	d80d      	bhi.n	801c8ba <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x4a>
 801c89e:	2a2d      	cmp	r2, #45	; 0x2d
 801c8a0:	d014      	beq.n	801c8cc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x5c>
 801c8a2:	d826      	bhi.n	801c8f2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x82>
 801c8a4:	2a2c      	cmp	r2, #44	; 0x2c
 801c8a6:	d1f5      	bne.n	801c894 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801c8a8:	684b      	ldr	r3, [r1, #4]
 801c8aa:	781b      	ldrb	r3, [r3, #0]
 801c8ac:	2b01      	cmp	r3, #1
 801c8ae:	d018      	beq.n	801c8e2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x72>
 801c8b0:	d323      	bcc.n	801c8fa <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8a>
 801c8b2:	2b02      	cmp	r3, #2
 801c8b4:	d1ee      	bne.n	801c894 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801c8b6:	68c0      	ldr	r0, [r0, #12]
 801c8b8:	4770      	bx	lr
 801c8ba:	2a31      	cmp	r2, #49	; 0x31
 801c8bc:	d004      	beq.n	801c8c8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x58>
 801c8be:	d328      	bcc.n	801c912 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
 801c8c0:	2a32      	cmp	r2, #50	; 0x32
 801c8c2:	d026      	beq.n	801c912 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
 801c8c4:	2a33      	cmp	r2, #51	; 0x33
 801c8c6:	d1e5      	bne.n	801c894 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801c8c8:	6f40      	ldr	r0, [r0, #116]	; 0x74
 801c8ca:	4770      	bx	lr
 801c8cc:	684b      	ldr	r3, [r1, #4]
 801c8ce:	781b      	ldrb	r3, [r3, #0]
 801c8d0:	2b01      	cmp	r3, #1
 801c8d2:	d004      	beq.n	801c8de <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6e>
 801c8d4:	d30b      	bcc.n	801c8ee <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801c8d6:	2b02      	cmp	r3, #2
 801c8d8:	d1dc      	bne.n	801c894 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801c8da:	6940      	ldr	r0, [r0, #20]
 801c8dc:	4770      	bx	lr
 801c8de:	6a40      	ldr	r0, [r0, #36]	; 0x24
 801c8e0:	4770      	bx	lr
 801c8e2:	69c0      	ldr	r0, [r0, #28]
 801c8e4:	4770      	bx	lr
 801c8e6:	684b      	ldr	r3, [r1, #4]
 801c8e8:	781b      	ldrb	r3, [r3, #0]
 801c8ea:	2b00      	cmp	r3, #0
 801c8ec:	d1d2      	bne.n	801c894 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801c8ee:	6b40      	ldr	r0, [r0, #52]	; 0x34
 801c8f0:	4770      	bx	lr
 801c8f2:	684b      	ldr	r3, [r1, #4]
 801c8f4:	781b      	ldrb	r3, [r3, #0]
 801c8f6:	2b00      	cmp	r3, #0
 801c8f8:	d1cc      	bne.n	801c894 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801c8fa:	6ac0      	ldr	r0, [r0, #44]	; 0x2c
 801c8fc:	4770      	bx	lr
 801c8fe:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
 801c900:	4770      	bx	lr
 801c902:	6d40      	ldr	r0, [r0, #84]	; 0x54
 801c904:	4770      	bx	lr
 801c906:	6c40      	ldr	r0, [r0, #68]	; 0x44
 801c908:	4770      	bx	lr
 801c90a:	6dc0      	ldr	r0, [r0, #92]	; 0x5c
 801c90c:	4770      	bx	lr
 801c90e:	6e40      	ldr	r0, [r0, #100]	; 0x64
 801c910:	4770      	bx	lr
 801c912:	6ec0      	ldr	r0, [r0, #108]	; 0x6c
 801c914:	4770      	bx	lr
 801c916:	2a0b      	cmp	r2, #11
 801c918:	d049      	beq.n	801c9ae <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 801c91a:	d80e      	bhi.n	801c93a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xca>
 801c91c:	2a03      	cmp	r2, #3
 801c91e:	d040      	beq.n	801c9a2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x132>
 801c920:	d804      	bhi.n	801c92c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xbc>
 801c922:	2a01      	cmp	r2, #1
 801c924:	d03f      	beq.n	801c9a6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x136>
 801c926:	d940      	bls.n	801c9aa <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13a>
 801c928:	6c00      	ldr	r0, [r0, #64]	; 0x40
 801c92a:	4770      	bx	lr
 801c92c:	2a09      	cmp	r2, #9
 801c92e:	d03e      	beq.n	801c9ae <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 801c930:	d801      	bhi.n	801c936 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xc6>
 801c932:	2a08      	cmp	r2, #8
 801c934:	d1ae      	bne.n	801c894 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801c936:	6e00      	ldr	r0, [r0, #96]	; 0x60
 801c938:	4770      	bx	lr
 801c93a:	2a2f      	cmp	r2, #47	; 0x2f
 801c93c:	d024      	beq.n	801c988 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x118>
 801c93e:	d80d      	bhi.n	801c95c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xec>
 801c940:	2a2d      	cmp	r2, #45	; 0x2d
 801c942:	d014      	beq.n	801c96e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfe>
 801c944:	d826      	bhi.n	801c994 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x124>
 801c946:	2a2c      	cmp	r2, #44	; 0x2c
 801c948:	d1a4      	bne.n	801c894 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801c94a:	684b      	ldr	r3, [r1, #4]
 801c94c:	781b      	ldrb	r3, [r3, #0]
 801c94e:	2b01      	cmp	r3, #1
 801c950:	d018      	beq.n	801c984 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x114>
 801c952:	d324      	bcc.n	801c99e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x12e>
 801c954:	2b02      	cmp	r3, #2
 801c956:	d19d      	bne.n	801c894 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801c958:	6900      	ldr	r0, [r0, #16]
 801c95a:	4770      	bx	lr
 801c95c:	2a31      	cmp	r2, #49	; 0x31
 801c95e:	d004      	beq.n	801c96a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfa>
 801c960:	d327      	bcc.n	801c9b2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 801c962:	2a32      	cmp	r2, #50	; 0x32
 801c964:	d025      	beq.n	801c9b2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 801c966:	2a33      	cmp	r2, #51	; 0x33
 801c968:	d194      	bne.n	801c894 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801c96a:	6f80      	ldr	r0, [r0, #120]	; 0x78
 801c96c:	4770      	bx	lr
 801c96e:	684b      	ldr	r3, [r1, #4]
 801c970:	781b      	ldrb	r3, [r3, #0]
 801c972:	2b01      	cmp	r3, #1
 801c974:	d004      	beq.n	801c980 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x110>
 801c976:	d30b      	bcc.n	801c990 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x120>
 801c978:	2b02      	cmp	r3, #2
 801c97a:	d18b      	bne.n	801c894 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801c97c:	6980      	ldr	r0, [r0, #24]
 801c97e:	4770      	bx	lr
 801c980:	6a80      	ldr	r0, [r0, #40]	; 0x28
 801c982:	4770      	bx	lr
 801c984:	6a00      	ldr	r0, [r0, #32]
 801c986:	4770      	bx	lr
 801c988:	684b      	ldr	r3, [r1, #4]
 801c98a:	781b      	ldrb	r3, [r3, #0]
 801c98c:	2b00      	cmp	r3, #0
 801c98e:	d181      	bne.n	801c894 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801c990:	6b80      	ldr	r0, [r0, #56]	; 0x38
 801c992:	4770      	bx	lr
 801c994:	684b      	ldr	r3, [r1, #4]
 801c996:	781b      	ldrb	r3, [r3, #0]
 801c998:	2b00      	cmp	r3, #0
 801c99a:	f47f af7b 	bne.w	801c894 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801c99e:	6b00      	ldr	r0, [r0, #48]	; 0x30
 801c9a0:	4770      	bx	lr
 801c9a2:	6d00      	ldr	r0, [r0, #80]	; 0x50
 801c9a4:	4770      	bx	lr
 801c9a6:	6d80      	ldr	r0, [r0, #88]	; 0x58
 801c9a8:	4770      	bx	lr
 801c9aa:	6c80      	ldr	r0, [r0, #72]	; 0x48
 801c9ac:	4770      	bx	lr
 801c9ae:	6e80      	ldr	r0, [r0, #104]	; 0x68
 801c9b0:	4770      	bx	lr
 801c9b2:	6f00      	ldr	r0, [r0, #112]	; 0x70
 801c9b4:	4770      	bx	lr

0801c9b6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801c9b6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c9ba:	b087      	sub	sp, #28
 801c9bc:	9815      	ldr	r0, [sp, #84]	; 0x54
 801c9be:	9205      	str	r2, [sp, #20]
 801c9c0:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801c9c4:	9202      	str	r2, [sp, #8]
 801c9c6:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 801c9ca:	9101      	str	r1, [sp, #4]
 801c9cc:	6841      	ldr	r1, [r0, #4]
 801c9ce:	f8dd e060 	ldr.w	lr, [sp, #96]	; 0x60
 801c9d2:	fb01 2404 	mla	r4, r1, r4, r2
 801c9d6:	6802      	ldr	r2, [r0, #0]
 801c9d8:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801c9dc:	f8de 2000 	ldr.w	r2, [lr]
 801c9e0:	9203      	str	r2, [sp, #12]
 801c9e2:	f8de 2004 	ldr.w	r2, [lr, #4]
 801c9e6:	3204      	adds	r2, #4
 801c9e8:	9204      	str	r2, [sp, #16]
 801c9ea:	9a02      	ldr	r2, [sp, #8]
 801c9ec:	43d6      	mvns	r6, r2
 801c9ee:	b2f6      	uxtb	r6, r6
 801c9f0:	9a01      	ldr	r2, [sp, #4]
 801c9f2:	2a00      	cmp	r2, #0
 801c9f4:	dc03      	bgt.n	801c9fe <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801c9f6:	9a05      	ldr	r2, [sp, #20]
 801c9f8:	2a00      	cmp	r2, #0
 801c9fa:	f340 8129 	ble.w	801cc50 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 801c9fe:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801ca00:	f9be c008 	ldrsh.w	ip, [lr, #8]
 801ca04:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 801ca08:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801ca0c:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801ca0e:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801ca12:	2b00      	cmp	r3, #0
 801ca14:	dd0e      	ble.n	801ca34 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801ca16:	1408      	asrs	r0, r1, #16
 801ca18:	d405      	bmi.n	801ca26 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801ca1a:	4560      	cmp	r0, ip
 801ca1c:	da03      	bge.n	801ca26 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801ca1e:	1410      	asrs	r0, r2, #16
 801ca20:	d401      	bmi.n	801ca26 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801ca22:	42b8      	cmp	r0, r7
 801ca24:	db07      	blt.n	801ca36 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 801ca26:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801ca28:	4401      	add	r1, r0
 801ca2a:	9814      	ldr	r0, [sp, #80]	; 0x50
 801ca2c:	3b01      	subs	r3, #1
 801ca2e:	4402      	add	r2, r0
 801ca30:	3402      	adds	r4, #2
 801ca32:	e7ee      	b.n	801ca12 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 801ca34:	d071      	beq.n	801cb1a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801ca36:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801ca38:	1e58      	subs	r0, r3, #1
 801ca3a:	fb05 1500 	mla	r5, r5, r0, r1
 801ca3e:	142d      	asrs	r5, r5, #16
 801ca40:	d45f      	bmi.n	801cb02 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 801ca42:	4565      	cmp	r5, ip
 801ca44:	da5d      	bge.n	801cb02 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 801ca46:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801ca48:	fb05 2000 	mla	r0, r5, r0, r2
 801ca4c:	1400      	asrs	r0, r0, #16
 801ca4e:	d458      	bmi.n	801cb02 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 801ca50:	42b8      	cmp	r0, r7
 801ca52:	da56      	bge.n	801cb02 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 801ca54:	f8bd b008 	ldrh.w	fp, [sp, #8]
 801ca58:	4699      	mov	r9, r3
 801ca5a:	46a2      	mov	sl, r4
 801ca5c:	f1b9 0f00 	cmp.w	r9, #0
 801ca60:	dd57      	ble.n	801cb12 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15c>
 801ca62:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 801ca66:	9803      	ldr	r0, [sp, #12]
 801ca68:	ea4f 4c22 	mov.w	ip, r2, asr #16
 801ca6c:	140d      	asrs	r5, r1, #16
 801ca6e:	fb07 000c 	mla	r0, r7, ip, r0
 801ca72:	f109 39ff 	add.w	r9, r9, #4294967295
 801ca76:	5d40      	ldrb	r0, [r0, r5]
 801ca78:	9d04      	ldr	r5, [sp, #16]
 801ca7a:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 801ca7e:	f8ba 5000 	ldrh.w	r5, [sl]
 801ca82:	122f      	asrs	r7, r5, #8
 801ca84:	ea4f 2c20 	mov.w	ip, r0, asr #8
 801ca88:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801ca8c:	fb17 f706 	smulbb	r7, r7, r6
 801ca90:	ea4f 08e5 	mov.w	r8, r5, asr #3
 801ca94:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801ca98:	00ed      	lsls	r5, r5, #3
 801ca9a:	fb0c 7c0b 	mla	ip, ip, fp, r7
 801ca9e:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
 801caa2:	10c7      	asrs	r7, r0, #3
 801caa4:	b2ed      	uxtb	r5, r5
 801caa6:	00c0      	lsls	r0, r0, #3
 801caa8:	fb18 f806 	smulbb	r8, r8, r6
 801caac:	fb15 f506 	smulbb	r5, r5, r6
 801cab0:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801cab4:	b2c0      	uxtb	r0, r0
 801cab6:	fa1f fc8c 	uxth.w	ip, ip
 801caba:	fb07 870b 	mla	r7, r7, fp, r8
 801cabe:	fb00 500b 	mla	r0, r0, fp, r5
 801cac2:	b280      	uxth	r0, r0
 801cac4:	b2bf      	uxth	r7, r7
 801cac6:	f10c 0501 	add.w	r5, ip, #1
 801caca:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801cace:	f107 0801 	add.w	r8, r7, #1
 801cad2:	1c45      	adds	r5, r0, #1
 801cad4:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 801cad8:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 801cadc:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801cade:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801cae2:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801cae6:	ea4f 1858 	mov.w	r8, r8, lsr #5
 801caea:	ea45 0c0c 	orr.w	ip, r5, ip
 801caee:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 801caf2:	4401      	add	r1, r0
 801caf4:	9814      	ldr	r0, [sp, #80]	; 0x50
 801caf6:	ea4c 0c08 	orr.w	ip, ip, r8
 801cafa:	f82a cb02 	strh.w	ip, [sl], #2
 801cafe:	4402      	add	r2, r0
 801cb00:	e7ac      	b.n	801ca5c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 801cb02:	f8bd a008 	ldrh.w	sl, [sp, #8]
 801cb06:	f04f 0800 	mov.w	r8, #0
 801cb0a:	eb03 0008 	add.w	r0, r3, r8
 801cb0e:	2800      	cmp	r0, #0
 801cb10:	dc41      	bgt.n	801cb96 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 801cb12:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801cb16:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801cb1a:	9b01      	ldr	r3, [sp, #4]
 801cb1c:	2b00      	cmp	r3, #0
 801cb1e:	f340 8097 	ble.w	801cc50 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 801cb22:	ee30 0a04 	vadd.f32	s0, s0, s8
 801cb26:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801cb2a:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801cb2e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801cb30:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801cb34:	ee31 1a05 	vadd.f32	s2, s2, s10
 801cb38:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801cb3c:	eef0 6a62 	vmov.f32	s13, s5
 801cb40:	ee61 7a27 	vmul.f32	s15, s2, s15
 801cb44:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801cb48:	ee77 2a62 	vsub.f32	s5, s14, s5
 801cb4c:	edcd 6a11 	vstr	s13, [sp, #68]	; 0x44
 801cb50:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801cb54:	eef0 6a43 	vmov.f32	s13, s6
 801cb58:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801cb5c:	ee12 2a90 	vmov	r2, s5
 801cb60:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801cb64:	fb92 f3f3 	sdiv	r3, r2, r3
 801cb68:	ee13 2a10 	vmov	r2, s6
 801cb6c:	9313      	str	r3, [sp, #76]	; 0x4c
 801cb6e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801cb70:	fb92 f3f3 	sdiv	r3, r2, r3
 801cb74:	9314      	str	r3, [sp, #80]	; 0x50
 801cb76:	9b01      	ldr	r3, [sp, #4]
 801cb78:	9a05      	ldr	r2, [sp, #20]
 801cb7a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801cb7e:	3b01      	subs	r3, #1
 801cb80:	9301      	str	r3, [sp, #4]
 801cb82:	edcd 6a12 	vstr	s13, [sp, #72]	; 0x48
 801cb86:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801cb88:	eeb0 3a67 	vmov.f32	s6, s15
 801cb8c:	bf08      	it	eq
 801cb8e:	4613      	moveq	r3, r2
 801cb90:	eef0 2a47 	vmov.f32	s5, s14
 801cb94:	e72c      	b.n	801c9f0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801cb96:	140f      	asrs	r7, r1, #16
 801cb98:	d453      	bmi.n	801cc42 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801cb9a:	f8de 5008 	ldr.w	r5, [lr, #8]
 801cb9e:	42bd      	cmp	r5, r7
 801cba0:	dd4f      	ble.n	801cc42 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801cba2:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801cba6:	d44c      	bmi.n	801cc42 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801cba8:	f8de 000c 	ldr.w	r0, [lr, #12]
 801cbac:	4560      	cmp	r0, ip
 801cbae:	dd48      	ble.n	801cc42 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801cbb0:	9803      	ldr	r0, [sp, #12]
 801cbb2:	b22d      	sxth	r5, r5
 801cbb4:	fb0c 0505 	mla	r5, ip, r5, r0
 801cbb8:	5de8      	ldrb	r0, [r5, r7]
 801cbba:	9d04      	ldr	r5, [sp, #16]
 801cbbc:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 801cbc0:	f06f 0501 	mvn.w	r5, #1
 801cbc4:	fb05 fb08 	mul.w	fp, r5, r8
 801cbc8:	ea4f 2c20 	mov.w	ip, r0, asr #8
 801cbcc:	f834 500b 	ldrh.w	r5, [r4, fp]
 801cbd0:	122f      	asrs	r7, r5, #8
 801cbd2:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801cbd6:	fb17 f706 	smulbb	r7, r7, r6
 801cbda:	ea4f 09e5 	mov.w	r9, r5, asr #3
 801cbde:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801cbe2:	00ed      	lsls	r5, r5, #3
 801cbe4:	fb0c 7c0a 	mla	ip, ip, sl, r7
 801cbe8:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 801cbec:	10c7      	asrs	r7, r0, #3
 801cbee:	b2ed      	uxtb	r5, r5
 801cbf0:	00c0      	lsls	r0, r0, #3
 801cbf2:	fb19 f906 	smulbb	r9, r9, r6
 801cbf6:	fb15 f506 	smulbb	r5, r5, r6
 801cbfa:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801cbfe:	b2c0      	uxtb	r0, r0
 801cc00:	fa1f fc8c 	uxth.w	ip, ip
 801cc04:	fb07 970a 	mla	r7, r7, sl, r9
 801cc08:	fb00 500a 	mla	r0, r0, sl, r5
 801cc0c:	b2bf      	uxth	r7, r7
 801cc0e:	b280      	uxth	r0, r0
 801cc10:	f10c 0501 	add.w	r5, ip, #1
 801cc14:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801cc18:	f107 0901 	add.w	r9, r7, #1
 801cc1c:	1c45      	adds	r5, r0, #1
 801cc1e:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 801cc22:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 801cc26:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801cc2a:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801cc2e:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801cc32:	ea45 0c0c 	orr.w	ip, r5, ip
 801cc36:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801cc3a:	ea4c 0c09 	orr.w	ip, ip, r9
 801cc3e:	f824 c00b 	strh.w	ip, [r4, fp]
 801cc42:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801cc44:	4401      	add	r1, r0
 801cc46:	9814      	ldr	r0, [sp, #80]	; 0x50
 801cc48:	f108 38ff 	add.w	r8, r8, #4294967295
 801cc4c:	4402      	add	r2, r0
 801cc4e:	e75c      	b.n	801cb0a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
 801cc50:	b007      	add	sp, #28
 801cc52:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801cc56 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801cc56:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801cc5a:	b085      	sub	sp, #20
 801cc5c:	4693      	mov	fp, r2
 801cc5e:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 801cc60:	9d16      	ldr	r5, [sp, #88]	; 0x58
 801cc62:	6870      	ldr	r0, [r6, #4]
 801cc64:	9100      	str	r1, [sp, #0]
 801cc66:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801cc6a:	fb00 2404 	mla	r4, r0, r4, r2
 801cc6e:	6832      	ldr	r2, [r6, #0]
 801cc70:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801cc74:	682a      	ldr	r2, [r5, #0]
 801cc76:	9201      	str	r2, [sp, #4]
 801cc78:	686a      	ldr	r2, [r5, #4]
 801cc7a:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	; 0x44
 801cc7e:	3204      	adds	r2, #4
 801cc80:	9202      	str	r2, [sp, #8]
 801cc82:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801cc86:	9a00      	ldr	r2, [sp, #0]
 801cc88:	2a00      	cmp	r2, #0
 801cc8a:	dc03      	bgt.n	801cc94 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 801cc8c:	f1bb 0f00 	cmp.w	fp, #0
 801cc90:	f340 80a0 	ble.w	801cdd4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 801cc94:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801cc96:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 801cc9a:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 801cc9e:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801cca2:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801cca4:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801cca8:	2b00      	cmp	r3, #0
 801ccaa:	dd0c      	ble.n	801ccc6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801ccac:	1406      	asrs	r6, r0, #16
 801ccae:	d405      	bmi.n	801ccbc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801ccb0:	454e      	cmp	r6, r9
 801ccb2:	da03      	bge.n	801ccbc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801ccb4:	1416      	asrs	r6, r2, #16
 801ccb6:	d401      	bmi.n	801ccbc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801ccb8:	4546      	cmp	r6, r8
 801ccba:	db05      	blt.n	801ccc8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801ccbc:	4470      	add	r0, lr
 801ccbe:	4462      	add	r2, ip
 801ccc0:	3b01      	subs	r3, #1
 801ccc2:	3402      	adds	r4, #2
 801ccc4:	e7f0      	b.n	801cca8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801ccc6:	d00f      	beq.n	801cce8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801ccc8:	1e5e      	subs	r6, r3, #1
 801ccca:	fb0e 0706 	mla	r7, lr, r6, r0
 801ccce:	143f      	asrs	r7, r7, #16
 801ccd0:	d541      	bpl.n	801cd56 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x100>
 801ccd2:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 801ccd6:	4698      	mov	r8, r3
 801ccd8:	9603      	str	r6, [sp, #12]
 801ccda:	f1b8 0f00 	cmp.w	r8, #0
 801ccde:	dc59      	bgt.n	801cd94 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801cce0:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801cce4:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801cce8:	9b00      	ldr	r3, [sp, #0]
 801ccea:	2b00      	cmp	r3, #0
 801ccec:	dd72      	ble.n	801cdd4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 801ccee:	ee30 0a04 	vadd.f32	s0, s0, s8
 801ccf2:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801ccf6:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801ccfa:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801ccfc:	ee31 1a05 	vadd.f32	s2, s2, s10
 801cd00:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801cd04:	eeb0 6a62 	vmov.f32	s12, s5
 801cd08:	ee61 7a27 	vmul.f32	s15, s2, s15
 801cd0c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801cd10:	ee77 2a62 	vsub.f32	s5, s14, s5
 801cd14:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801cd18:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801cd1c:	eeb0 6a43 	vmov.f32	s12, s6
 801cd20:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801cd24:	ee12 2a90 	vmov	r2, s5
 801cd28:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801cd2c:	fb92 fef3 	sdiv	lr, r2, r3
 801cd30:	ee13 2a10 	vmov	r2, s6
 801cd34:	fb92 fcf3 	sdiv	ip, r2, r3
 801cd38:	9b00      	ldr	r3, [sp, #0]
 801cd3a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801cd3e:	3b01      	subs	r3, #1
 801cd40:	9300      	str	r3, [sp, #0]
 801cd42:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801cd46:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801cd48:	eeb0 3a67 	vmov.f32	s6, s15
 801cd4c:	bf08      	it	eq
 801cd4e:	465b      	moveq	r3, fp
 801cd50:	eef0 2a47 	vmov.f32	s5, s14
 801cd54:	e797      	b.n	801cc86 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 801cd56:	454f      	cmp	r7, r9
 801cd58:	dabb      	bge.n	801ccd2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801cd5a:	fb0c 2606 	mla	r6, ip, r6, r2
 801cd5e:	1436      	asrs	r6, r6, #16
 801cd60:	d4b7      	bmi.n	801ccd2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801cd62:	4546      	cmp	r6, r8
 801cd64:	dab5      	bge.n	801ccd2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801cd66:	461e      	mov	r6, r3
 801cd68:	46a0      	mov	r8, r4
 801cd6a:	2e00      	cmp	r6, #0
 801cd6c:	ddb8      	ble.n	801cce0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 801cd6e:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 801cd72:	9901      	ldr	r1, [sp, #4]
 801cd74:	1417      	asrs	r7, r2, #16
 801cd76:	ea4f 4920 	mov.w	r9, r0, asr #16
 801cd7a:	fb0a 1707 	mla	r7, sl, r7, r1
 801cd7e:	9902      	ldr	r1, [sp, #8]
 801cd80:	f817 7009 	ldrb.w	r7, [r7, r9]
 801cd84:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 801cd88:	f828 7b02 	strh.w	r7, [r8], #2
 801cd8c:	4470      	add	r0, lr
 801cd8e:	4462      	add	r2, ip
 801cd90:	3e01      	subs	r6, #1
 801cd92:	e7ea      	b.n	801cd6a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x114>
 801cd94:	ea5f 4920 	movs.w	r9, r0, asr #16
 801cd98:	d417      	bmi.n	801cdca <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 801cd9a:	68ae      	ldr	r6, [r5, #8]
 801cd9c:	454e      	cmp	r6, r9
 801cd9e:	dd14      	ble.n	801cdca <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 801cda0:	ea5f 4a22 	movs.w	sl, r2, asr #16
 801cda4:	d411      	bmi.n	801cdca <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 801cda6:	68ef      	ldr	r7, [r5, #12]
 801cda8:	4557      	cmp	r7, sl
 801cdaa:	dd0e      	ble.n	801cdca <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 801cdac:	9f01      	ldr	r7, [sp, #4]
 801cdae:	b236      	sxth	r6, r6
 801cdb0:	fb0a 7606 	mla	r6, sl, r6, r7
 801cdb4:	9f02      	ldr	r7, [sp, #8]
 801cdb6:	f816 6009 	ldrb.w	r6, [r6, r9]
 801cdba:	f06f 0101 	mvn.w	r1, #1
 801cdbe:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 801cdc2:	fb01 f608 	mul.w	r6, r1, r8
 801cdc6:	9903      	ldr	r1, [sp, #12]
 801cdc8:	538f      	strh	r7, [r1, r6]
 801cdca:	4470      	add	r0, lr
 801cdcc:	4462      	add	r2, ip
 801cdce:	f108 38ff 	add.w	r8, r8, #4294967295
 801cdd2:	e782      	b.n	801ccda <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801cdd4:	b005      	add	sp, #20
 801cdd6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801cdda <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801cdda:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801cdde:	b087      	sub	sp, #28
 801cde0:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801cde2:	9205      	str	r2, [sp, #20]
 801cde4:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801cde8:	9203      	str	r2, [sp, #12]
 801cdea:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	; 0x58
 801cdee:	9102      	str	r1, [sp, #8]
 801cdf0:	6861      	ldr	r1, [r4, #4]
 801cdf2:	f8dd c060 	ldr.w	ip, [sp, #96]	; 0x60
 801cdf6:	fb01 2000 	mla	r0, r1, r0, r2
 801cdfa:	6822      	ldr	r2, [r4, #0]
 801cdfc:	eb02 0240 	add.w	r2, r2, r0, lsl #1
 801ce00:	9200      	str	r2, [sp, #0]
 801ce02:	f8dc 2000 	ldr.w	r2, [ip]
 801ce06:	9204      	str	r2, [sp, #16]
 801ce08:	f8dc 2004 	ldr.w	r2, [ip, #4]
 801ce0c:	3204      	adds	r2, #4
 801ce0e:	9201      	str	r2, [sp, #4]
 801ce10:	9a03      	ldr	r2, [sp, #12]
 801ce12:	43d5      	mvns	r5, r2
 801ce14:	b2ed      	uxtb	r5, r5
 801ce16:	9a02      	ldr	r2, [sp, #8]
 801ce18:	2a00      	cmp	r2, #0
 801ce1a:	dc03      	bgt.n	801ce24 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801ce1c:	9a05      	ldr	r2, [sp, #20]
 801ce1e:	2a00      	cmp	r2, #0
 801ce20:	f340 812c 	ble.w	801d07c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 801ce24:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801ce26:	f9bc e008 	ldrsh.w	lr, [ip, #8]
 801ce2a:	f9bc 700c 	ldrsh.w	r7, [ip, #12]
 801ce2e:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801ce32:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801ce34:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801ce38:	2b00      	cmp	r3, #0
 801ce3a:	dd10      	ble.n	801ce5e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801ce3c:	140c      	asrs	r4, r1, #16
 801ce3e:	d405      	bmi.n	801ce4c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801ce40:	4574      	cmp	r4, lr
 801ce42:	da03      	bge.n	801ce4c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801ce44:	1414      	asrs	r4, r2, #16
 801ce46:	d401      	bmi.n	801ce4c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801ce48:	42bc      	cmp	r4, r7
 801ce4a:	db09      	blt.n	801ce60 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801ce4c:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801ce4e:	9800      	ldr	r0, [sp, #0]
 801ce50:	4421      	add	r1, r4
 801ce52:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801ce54:	3002      	adds	r0, #2
 801ce56:	4422      	add	r2, r4
 801ce58:	3b01      	subs	r3, #1
 801ce5a:	9000      	str	r0, [sp, #0]
 801ce5c:	e7ec      	b.n	801ce38 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 801ce5e:	d071      	beq.n	801cf44 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16a>
 801ce60:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 801ce62:	1e5c      	subs	r4, r3, #1
 801ce64:	fb06 1604 	mla	r6, r6, r4, r1
 801ce68:	1436      	asrs	r6, r6, #16
 801ce6a:	d45d      	bmi.n	801cf28 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 801ce6c:	4576      	cmp	r6, lr
 801ce6e:	da5b      	bge.n	801cf28 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 801ce70:	9e14      	ldr	r6, [sp, #80]	; 0x50
 801ce72:	fb06 2404 	mla	r4, r6, r4, r2
 801ce76:	1424      	asrs	r4, r4, #16
 801ce78:	d456      	bmi.n	801cf28 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 801ce7a:	42bc      	cmp	r4, r7
 801ce7c:	da54      	bge.n	801cf28 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 801ce7e:	f8dd 9000 	ldr.w	r9, [sp]
 801ce82:	f8bd a00c 	ldrh.w	sl, [sp, #12]
 801ce86:	4698      	mov	r8, r3
 801ce88:	f1b8 0f00 	cmp.w	r8, #0
 801ce8c:	dd54      	ble.n	801cf38 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 801ce8e:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 801ce92:	9804      	ldr	r0, [sp, #16]
 801ce94:	1414      	asrs	r4, r2, #16
 801ce96:	fb07 0404 	mla	r4, r7, r4, r0
 801ce9a:	140e      	asrs	r6, r1, #16
 801ce9c:	9801      	ldr	r0, [sp, #4]
 801ce9e:	f814 e006 	ldrb.w	lr, [r4, r6]
 801cea2:	f8b9 4000 	ldrh.w	r4, [r9]
 801cea6:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 801ceaa:	eb00 0b0e 	add.w	fp, r0, lr
 801ceae:	1227      	asrs	r7, r4, #8
 801ceb0:	f89b 6002 	ldrb.w	r6, [fp, #2]
 801ceb4:	f89b b001 	ldrb.w	fp, [fp, #1]
 801ceb8:	f810 e00e 	ldrb.w	lr, [r0, lr]
 801cebc:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801cebe:	fb16 f60a 	smulbb	r6, r6, sl
 801cec2:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801cec6:	fb07 6705 	mla	r7, r7, r5, r6
 801ceca:	10e6      	asrs	r6, r4, #3
 801cecc:	00e4      	lsls	r4, r4, #3
 801cece:	b2e4      	uxtb	r4, r4
 801ced0:	fb1b fb0a 	smulbb	fp, fp, sl
 801ced4:	fb14 f405 	smulbb	r4, r4, r5
 801ced8:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801cedc:	b2bf      	uxth	r7, r7
 801cede:	fb06 b605 	mla	r6, r6, r5, fp
 801cee2:	fb0e 4e0a 	mla	lr, lr, sl, r4
 801cee6:	b2b6      	uxth	r6, r6
 801cee8:	fa1f fe8e 	uxth.w	lr, lr
 801ceec:	1c7c      	adds	r4, r7, #1
 801ceee:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 801cef2:	f106 0b01 	add.w	fp, r6, #1
 801cef6:	f10e 0401 	add.w	r4, lr, #1
 801cefa:	eb04 241e 	add.w	r4, r4, lr, lsr #8
 801cefe:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 801cf02:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801cf06:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 801cf0a:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 801cf0e:	4327      	orrs	r7, r4
 801cf10:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 801cf14:	4401      	add	r1, r0
 801cf16:	9814      	ldr	r0, [sp, #80]	; 0x50
 801cf18:	ea47 070b 	orr.w	r7, r7, fp
 801cf1c:	f829 7b02 	strh.w	r7, [r9], #2
 801cf20:	4402      	add	r2, r0
 801cf22:	f108 38ff 	add.w	r8, r8, #4294967295
 801cf26:	e7af      	b.n	801ce88 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 801cf28:	f8bd 900c 	ldrh.w	r9, [sp, #12]
 801cf2c:	f04f 0e00 	mov.w	lr, #0
 801cf30:	eb03 040e 	add.w	r4, r3, lr
 801cf34:	2c00      	cmp	r4, #0
 801cf36:	dc43      	bgt.n	801cfc0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 801cf38:	9a00      	ldr	r2, [sp, #0]
 801cf3a:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801cf3e:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801cf42:	9300      	str	r3, [sp, #0]
 801cf44:	9b02      	ldr	r3, [sp, #8]
 801cf46:	2b00      	cmp	r3, #0
 801cf48:	f340 8098 	ble.w	801d07c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 801cf4c:	ee30 0a04 	vadd.f32	s0, s0, s8
 801cf50:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801cf54:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801cf58:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801cf5a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801cf5e:	ee31 1a05 	vadd.f32	s2, s2, s10
 801cf62:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801cf66:	eef0 6a62 	vmov.f32	s13, s5
 801cf6a:	ee61 7a27 	vmul.f32	s15, s2, s15
 801cf6e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801cf72:	ee77 2a62 	vsub.f32	s5, s14, s5
 801cf76:	edcd 6a11 	vstr	s13, [sp, #68]	; 0x44
 801cf7a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801cf7e:	eef0 6a43 	vmov.f32	s13, s6
 801cf82:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801cf86:	ee12 2a90 	vmov	r2, s5
 801cf8a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801cf8e:	fb92 f3f3 	sdiv	r3, r2, r3
 801cf92:	ee13 2a10 	vmov	r2, s6
 801cf96:	9313      	str	r3, [sp, #76]	; 0x4c
 801cf98:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801cf9a:	fb92 f3f3 	sdiv	r3, r2, r3
 801cf9e:	9314      	str	r3, [sp, #80]	; 0x50
 801cfa0:	9b02      	ldr	r3, [sp, #8]
 801cfa2:	9a05      	ldr	r2, [sp, #20]
 801cfa4:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801cfa8:	3b01      	subs	r3, #1
 801cfaa:	9302      	str	r3, [sp, #8]
 801cfac:	edcd 6a12 	vstr	s13, [sp, #72]	; 0x48
 801cfb0:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801cfb2:	eeb0 3a67 	vmov.f32	s6, s15
 801cfb6:	bf08      	it	eq
 801cfb8:	4613      	moveq	r3, r2
 801cfba:	eef0 2a47 	vmov.f32	s5, s14
 801cfbe:	e72a      	b.n	801ce16 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801cfc0:	140f      	asrs	r7, r1, #16
 801cfc2:	d454      	bmi.n	801d06e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 801cfc4:	f8dc 6008 	ldr.w	r6, [ip, #8]
 801cfc8:	42be      	cmp	r6, r7
 801cfca:	dd50      	ble.n	801d06e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 801cfcc:	ea5f 4822 	movs.w	r8, r2, asr #16
 801cfd0:	d44d      	bmi.n	801d06e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 801cfd2:	f8dc 400c 	ldr.w	r4, [ip, #12]
 801cfd6:	4544      	cmp	r4, r8
 801cfd8:	dd49      	ble.n	801d06e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 801cfda:	9c04      	ldr	r4, [sp, #16]
 801cfdc:	b236      	sxth	r6, r6
 801cfde:	fb08 4606 	mla	r6, r8, r6, r4
 801cfe2:	f06f 0001 	mvn.w	r0, #1
 801cfe6:	f816 8007 	ldrb.w	r8, [r6, r7]
 801cfea:	9c01      	ldr	r4, [sp, #4]
 801cfec:	fb00 fa0e 	mul.w	sl, r0, lr
 801cff0:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 801cff4:	9800      	ldr	r0, [sp, #0]
 801cff6:	eb04 0b08 	add.w	fp, r4, r8
 801cffa:	f830 400a 	ldrh.w	r4, [r0, sl]
 801cffe:	f89b 6002 	ldrb.w	r6, [fp, #2]
 801d002:	9801      	ldr	r0, [sp, #4]
 801d004:	f89b b001 	ldrb.w	fp, [fp, #1]
 801d008:	f810 8008 	ldrb.w	r8, [r0, r8]
 801d00c:	9800      	ldr	r0, [sp, #0]
 801d00e:	1227      	asrs	r7, r4, #8
 801d010:	fb16 f609 	smulbb	r6, r6, r9
 801d014:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801d018:	fb07 6705 	mla	r7, r7, r5, r6
 801d01c:	10e6      	asrs	r6, r4, #3
 801d01e:	00e4      	lsls	r4, r4, #3
 801d020:	b2e4      	uxtb	r4, r4
 801d022:	fb1b fb09 	smulbb	fp, fp, r9
 801d026:	fb14 f405 	smulbb	r4, r4, r5
 801d02a:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801d02e:	b2bf      	uxth	r7, r7
 801d030:	fb06 b605 	mla	r6, r6, r5, fp
 801d034:	fb08 4809 	mla	r8, r8, r9, r4
 801d038:	b2b6      	uxth	r6, r6
 801d03a:	fa1f f888 	uxth.w	r8, r8
 801d03e:	1c7c      	adds	r4, r7, #1
 801d040:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 801d044:	f106 0b01 	add.w	fp, r6, #1
 801d048:	f108 0401 	add.w	r4, r8, #1
 801d04c:	eb04 2418 	add.w	r4, r4, r8, lsr #8
 801d050:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 801d054:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801d058:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 801d05c:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 801d060:	4327      	orrs	r7, r4
 801d062:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 801d066:	ea47 070b 	orr.w	r7, r7, fp
 801d06a:	f820 700a 	strh.w	r7, [r0, sl]
 801d06e:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801d070:	4401      	add	r1, r0
 801d072:	9814      	ldr	r0, [sp, #80]	; 0x50
 801d074:	f10e 3eff 	add.w	lr, lr, #4294967295
 801d078:	4402      	add	r2, r0
 801d07a:	e759      	b.n	801cf30 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 801d07c:	b007      	add	sp, #28
 801d07e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

0801d084 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801d084:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d088:	b085      	sub	sp, #20
 801d08a:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801d08e:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 801d090:	9203      	str	r2, [sp, #12]
 801d092:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801d096:	6870      	ldr	r0, [r6, #4]
 801d098:	9d16      	ldr	r5, [sp, #88]	; 0x58
 801d09a:	f8dd c044 	ldr.w	ip, [sp, #68]	; 0x44
 801d09e:	686f      	ldr	r7, [r5, #4]
 801d0a0:	9101      	str	r1, [sp, #4]
 801d0a2:	fb00 2404 	mla	r4, r0, r4, r2
 801d0a6:	6832      	ldr	r2, [r6, #0]
 801d0a8:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801d0ac:	682a      	ldr	r2, [r5, #0]
 801d0ae:	9202      	str	r2, [sp, #8]
 801d0b0:	3704      	adds	r7, #4
 801d0b2:	9a01      	ldr	r2, [sp, #4]
 801d0b4:	2a00      	cmp	r2, #0
 801d0b6:	dc03      	bgt.n	801d0c0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801d0b8:	9a03      	ldr	r2, [sp, #12]
 801d0ba:	2a00      	cmp	r2, #0
 801d0bc:	f340 80cc 	ble.w	801d258 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 801d0c0:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801d0c2:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 801d0c6:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 801d0ca:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801d0ce:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801d0d0:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801d0d4:	2b00      	cmp	r3, #0
 801d0d6:	dd0d      	ble.n	801d0f4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801d0d8:	1406      	asrs	r6, r0, #16
 801d0da:	d405      	bmi.n	801d0e8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 801d0dc:	454e      	cmp	r6, r9
 801d0de:	da03      	bge.n	801d0e8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 801d0e0:	1416      	asrs	r6, r2, #16
 801d0e2:	d401      	bmi.n	801d0e8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 801d0e4:	4546      	cmp	r6, r8
 801d0e6:	db06      	blt.n	801d0f6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801d0e8:	9e12      	ldr	r6, [sp, #72]	; 0x48
 801d0ea:	4460      	add	r0, ip
 801d0ec:	4432      	add	r2, r6
 801d0ee:	3b01      	subs	r3, #1
 801d0f0:	3402      	adds	r4, #2
 801d0f2:	e7ef      	b.n	801d0d4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50>
 801d0f4:	d00f      	beq.n	801d116 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801d0f6:	1e5e      	subs	r6, r3, #1
 801d0f8:	fb0c 0e06 	mla	lr, ip, r6, r0
 801d0fc:	ea5f 4e2e 	movs.w	lr, lr, asr #16
 801d100:	d543      	bpl.n	801d18a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 801d102:	4698      	mov	r8, r3
 801d104:	eb04 0a43 	add.w	sl, r4, r3, lsl #1
 801d108:	f1b8 0f00 	cmp.w	r8, #0
 801d10c:	dc71      	bgt.n	801d1f2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16e>
 801d10e:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801d112:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801d116:	9b01      	ldr	r3, [sp, #4]
 801d118:	2b00      	cmp	r3, #0
 801d11a:	f340 809d 	ble.w	801d258 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 801d11e:	ee30 0a04 	vadd.f32	s0, s0, s8
 801d122:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801d126:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801d12a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801d12c:	ee31 1a05 	vadd.f32	s2, s2, s10
 801d130:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801d134:	eeb0 6a62 	vmov.f32	s12, s5
 801d138:	ee61 7a27 	vmul.f32	s15, s2, s15
 801d13c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801d140:	ee77 2a62 	vsub.f32	s5, s14, s5
 801d144:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801d148:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801d14c:	eeb0 6a43 	vmov.f32	s12, s6
 801d150:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801d154:	ee12 2a90 	vmov	r2, s5
 801d158:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801d15c:	fb92 fcf3 	sdiv	ip, r2, r3
 801d160:	ee13 2a10 	vmov	r2, s6
 801d164:	fb92 f3f3 	sdiv	r3, r2, r3
 801d168:	9312      	str	r3, [sp, #72]	; 0x48
 801d16a:	9b01      	ldr	r3, [sp, #4]
 801d16c:	9a03      	ldr	r2, [sp, #12]
 801d16e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801d172:	3b01      	subs	r3, #1
 801d174:	9301      	str	r3, [sp, #4]
 801d176:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801d17a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801d17c:	eeb0 3a67 	vmov.f32	s6, s15
 801d180:	bf08      	it	eq
 801d182:	4613      	moveq	r3, r2
 801d184:	eef0 2a47 	vmov.f32	s5, s14
 801d188:	e793      	b.n	801d0b2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 801d18a:	45ce      	cmp	lr, r9
 801d18c:	dab9      	bge.n	801d102 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801d18e:	9912      	ldr	r1, [sp, #72]	; 0x48
 801d190:	fb01 2606 	mla	r6, r1, r6, r2
 801d194:	1436      	asrs	r6, r6, #16
 801d196:	d4b4      	bmi.n	801d102 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801d198:	4546      	cmp	r6, r8
 801d19a:	dab2      	bge.n	801d102 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801d19c:	4698      	mov	r8, r3
 801d19e:	46a2      	mov	sl, r4
 801d1a0:	f1b8 0f00 	cmp.w	r8, #0
 801d1a4:	ddb3      	ble.n	801d10e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 801d1a6:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 801d1aa:	9902      	ldr	r1, [sp, #8]
 801d1ac:	1416      	asrs	r6, r2, #16
 801d1ae:	fb09 1606 	mla	r6, r9, r6, r1
 801d1b2:	ea4f 4e20 	mov.w	lr, r0, asr #16
 801d1b6:	492a      	ldr	r1, [pc, #168]	; (801d260 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>)
 801d1b8:	f816 e00e 	ldrb.w	lr, [r6, lr]
 801d1bc:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 801d1c0:	eb07 0b0e 	add.w	fp, r7, lr
 801d1c4:	4460      	add	r0, ip
 801d1c6:	f89b 6001 	ldrb.w	r6, [fp, #1]
 801d1ca:	f89b 9002 	ldrb.w	r9, [fp, #2]
 801d1ce:	00f6      	lsls	r6, r6, #3
 801d1d0:	ea01 2909 	and.w	r9, r1, r9, lsl #8
 801d1d4:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801d1d8:	ea49 0606 	orr.w	r6, r9, r6
 801d1dc:	f817 900e 	ldrb.w	r9, [r7, lr]
 801d1e0:	9912      	ldr	r1, [sp, #72]	; 0x48
 801d1e2:	ea46 06d9 	orr.w	r6, r6, r9, lsr #3
 801d1e6:	f82a 6b02 	strh.w	r6, [sl], #2
 801d1ea:	440a      	add	r2, r1
 801d1ec:	f108 38ff 	add.w	r8, r8, #4294967295
 801d1f0:	e7d6      	b.n	801d1a0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801d1f2:	ea5f 4920 	movs.w	r9, r0, asr #16
 801d1f6:	d429      	bmi.n	801d24c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801d1f8:	68ae      	ldr	r6, [r5, #8]
 801d1fa:	454e      	cmp	r6, r9
 801d1fc:	dd26      	ble.n	801d24c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801d1fe:	ea5f 4b22 	movs.w	fp, r2, asr #16
 801d202:	d423      	bmi.n	801d24c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801d204:	68e9      	ldr	r1, [r5, #12]
 801d206:	4559      	cmp	r1, fp
 801d208:	dd20      	ble.n	801d24c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801d20a:	9902      	ldr	r1, [sp, #8]
 801d20c:	fa0f fe86 	sxth.w	lr, r6
 801d210:	fb0b 1e0e 	mla	lr, fp, lr, r1
 801d214:	f06f 0101 	mvn.w	r1, #1
 801d218:	f81e e009 	ldrb.w	lr, [lr, r9]
 801d21c:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 801d220:	eb07 060e 	add.w	r6, r7, lr
 801d224:	fb01 f908 	mul.w	r9, r1, r8
 801d228:	f896 b002 	ldrb.w	fp, [r6, #2]
 801d22c:	7876      	ldrb	r6, [r6, #1]
 801d22e:	f2a1 71fe 	subw	r1, r1, #2046	; 0x7fe
 801d232:	00f6      	lsls	r6, r6, #3
 801d234:	ea01 2b0b 	and.w	fp, r1, fp, lsl #8
 801d238:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801d23c:	ea4b 0606 	orr.w	r6, fp, r6
 801d240:	f817 b00e 	ldrb.w	fp, [r7, lr]
 801d244:	ea46 06db 	orr.w	r6, r6, fp, lsr #3
 801d248:	f82a 6009 	strh.w	r6, [sl, r9]
 801d24c:	9912      	ldr	r1, [sp, #72]	; 0x48
 801d24e:	4460      	add	r0, ip
 801d250:	440a      	add	r2, r1
 801d252:	f108 38ff 	add.w	r8, r8, #4294967295
 801d256:	e757      	b.n	801d108 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801d258:	b005      	add	sp, #20
 801d25a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801d25e:	bf00      	nop
 801d260:	fffff800 	.word	0xfffff800

0801d264 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801d264:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d268:	b087      	sub	sp, #28
 801d26a:	468b      	mov	fp, r1
 801d26c:	9815      	ldr	r0, [sp, #84]	; 0x54
 801d26e:	9204      	str	r2, [sp, #16]
 801d270:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801d274:	9205      	str	r2, [sp, #20]
 801d276:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 801d27a:	6841      	ldr	r1, [r0, #4]
 801d27c:	f8dd c060 	ldr.w	ip, [sp, #96]	; 0x60
 801d280:	fb01 2404 	mla	r4, r1, r4, r2
 801d284:	6802      	ldr	r2, [r0, #0]
 801d286:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801d28a:	f8dc 2000 	ldr.w	r2, [ip]
 801d28e:	9201      	str	r2, [sp, #4]
 801d290:	f8dc 2004 	ldr.w	r2, [ip, #4]
 801d294:	3204      	adds	r2, #4
 801d296:	9202      	str	r2, [sp, #8]
 801d298:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801d29c:	f1bb 0f00 	cmp.w	fp, #0
 801d2a0:	dc03      	bgt.n	801d2aa <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 801d2a2:	9a04      	ldr	r2, [sp, #16]
 801d2a4:	2a00      	cmp	r2, #0
 801d2a6:	f340 8138 	ble.w	801d51a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 801d2aa:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801d2ac:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 801d2b0:	f9bc 600c 	ldrsh.w	r6, [ip, #12]
 801d2b4:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801d2b8:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801d2ba:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801d2be:	2b00      	cmp	r3, #0
 801d2c0:	dd0e      	ble.n	801d2e0 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801d2c2:	1402      	asrs	r2, r0, #16
 801d2c4:	d405      	bmi.n	801d2d2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801d2c6:	42ba      	cmp	r2, r7
 801d2c8:	da03      	bge.n	801d2d2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801d2ca:	140a      	asrs	r2, r1, #16
 801d2cc:	d401      	bmi.n	801d2d2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801d2ce:	42b2      	cmp	r2, r6
 801d2d0:	db07      	blt.n	801d2e2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801d2d2:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801d2d4:	4410      	add	r0, r2
 801d2d6:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801d2d8:	3b01      	subs	r3, #1
 801d2da:	4411      	add	r1, r2
 801d2dc:	3402      	adds	r4, #2
 801d2de:	e7ee      	b.n	801d2be <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 801d2e0:	d019      	beq.n	801d316 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 801d2e2:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801d2e4:	1e5a      	subs	r2, r3, #1
 801d2e6:	fb05 0502 	mla	r5, r5, r2, r0
 801d2ea:	142d      	asrs	r5, r5, #16
 801d2ec:	d409      	bmi.n	801d302 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801d2ee:	42bd      	cmp	r5, r7
 801d2f0:	da07      	bge.n	801d302 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801d2f2:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801d2f4:	fb05 1202 	mla	r2, r5, r2, r1
 801d2f8:	1412      	asrs	r2, r2, #16
 801d2fa:	d402      	bmi.n	801d302 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801d2fc:	42b2      	cmp	r2, r6
 801d2fe:	f2c0 80ac 	blt.w	801d45a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f6>
 801d302:	f04f 0e00 	mov.w	lr, #0
 801d306:	eb03 020e 	add.w	r2, r3, lr
 801d30a:	2a00      	cmp	r2, #0
 801d30c:	dc3e      	bgt.n	801d38c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 801d30e:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801d312:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801d316:	f1bb 0f00 	cmp.w	fp, #0
 801d31a:	f340 80fe 	ble.w	801d51a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 801d31e:	ee30 0a04 	vadd.f32	s0, s0, s8
 801d322:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801d326:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801d32a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801d32c:	f1bb 0b01 	subs.w	fp, fp, #1
 801d330:	ee31 1a05 	vadd.f32	s2, s2, s10
 801d334:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801d338:	eeb0 6a62 	vmov.f32	s12, s5
 801d33c:	ee61 7a27 	vmul.f32	s15, s2, s15
 801d340:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801d344:	ee77 2a62 	vsub.f32	s5, s14, s5
 801d348:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801d34c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801d350:	eeb0 6a43 	vmov.f32	s12, s6
 801d354:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801d358:	ee12 2a90 	vmov	r2, s5
 801d35c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801d360:	fb92 f3f3 	sdiv	r3, r2, r3
 801d364:	ee13 2a10 	vmov	r2, s6
 801d368:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801d36c:	9313      	str	r3, [sp, #76]	; 0x4c
 801d36e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801d370:	fb92 f3f3 	sdiv	r3, r2, r3
 801d374:	9a04      	ldr	r2, [sp, #16]
 801d376:	9314      	str	r3, [sp, #80]	; 0x50
 801d378:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 801d37c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801d37e:	eeb0 3a67 	vmov.f32	s6, s15
 801d382:	bf08      	it	eq
 801d384:	4613      	moveq	r3, r2
 801d386:	eef0 2a47 	vmov.f32	s5, s14
 801d38a:	e787      	b.n	801d29c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 801d38c:	1406      	asrs	r6, r0, #16
 801d38e:	d45d      	bmi.n	801d44c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801d390:	f8dc 5008 	ldr.w	r5, [ip, #8]
 801d394:	42b5      	cmp	r5, r6
 801d396:	dd59      	ble.n	801d44c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801d398:	140f      	asrs	r7, r1, #16
 801d39a:	d457      	bmi.n	801d44c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801d39c:	f8dc 200c 	ldr.w	r2, [ip, #12]
 801d3a0:	42ba      	cmp	r2, r7
 801d3a2:	dd53      	ble.n	801d44c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801d3a4:	9a01      	ldr	r2, [sp, #4]
 801d3a6:	b22d      	sxth	r5, r5
 801d3a8:	fb07 2505 	mla	r5, r7, r5, r2
 801d3ac:	5daa      	ldrb	r2, [r5, r6]
 801d3ae:	9d02      	ldr	r5, [sp, #8]
 801d3b0:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 801d3b4:	0e2e      	lsrs	r6, r5, #24
 801d3b6:	d049      	beq.n	801d44c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801d3b8:	f06f 0201 	mvn.w	r2, #1
 801d3bc:	fb02 f20e 	mul.w	r2, r2, lr
 801d3c0:	9203      	str	r2, [sp, #12]
 801d3c2:	f834 8002 	ldrh.w	r8, [r4, r2]
 801d3c6:	9a05      	ldr	r2, [sp, #20]
 801d3c8:	4356      	muls	r6, r2
 801d3ca:	1c72      	adds	r2, r6, #1
 801d3cc:	eb02 2226 	add.w	r2, r2, r6, asr #8
 801d3d0:	1212      	asrs	r2, r2, #8
 801d3d2:	fa1f f982 	uxth.w	r9, r2
 801d3d6:	ea4f 2728 	mov.w	r7, r8, asr #8
 801d3da:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801d3de:	43d2      	mvns	r2, r2
 801d3e0:	b2d2      	uxtb	r2, r2
 801d3e2:	fb16 f609 	smulbb	r6, r6, r9
 801d3e6:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801d3ea:	fb07 6702 	mla	r7, r7, r2, r6
 801d3ee:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 801d3f2:	ea4f 06e8 	mov.w	r6, r8, asr #3
 801d3f6:	b2ed      	uxtb	r5, r5
 801d3f8:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801d3fc:	fa5f f888 	uxtb.w	r8, r8
 801d400:	fb15 f509 	smulbb	r5, r5, r9
 801d404:	fb08 5502 	mla	r5, r8, r2, r5
 801d408:	b2bf      	uxth	r7, r7
 801d40a:	fb1a fa09 	smulbb	sl, sl, r9
 801d40e:	b2ad      	uxth	r5, r5
 801d410:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801d414:	fb06 a602 	mla	r6, r6, r2, sl
 801d418:	1c7a      	adds	r2, r7, #1
 801d41a:	f105 0a01 	add.w	sl, r5, #1
 801d41e:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 801d422:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801d426:	b2b6      	uxth	r6, r6
 801d428:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801d42c:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801d430:	ea4a 0707 	orr.w	r7, sl, r7
 801d434:	f106 0a01 	add.w	sl, r6, #1
 801d438:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801d43c:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801d440:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801d444:	9a03      	ldr	r2, [sp, #12]
 801d446:	ea47 070a 	orr.w	r7, r7, sl
 801d44a:	52a7      	strh	r7, [r4, r2]
 801d44c:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801d44e:	4410      	add	r0, r2
 801d450:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801d452:	f10e 3eff 	add.w	lr, lr, #4294967295
 801d456:	4411      	add	r1, r2
 801d458:	e755      	b.n	801d306 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801d45a:	f04f 0800 	mov.w	r8, #0
 801d45e:	eba3 0208 	sub.w	r2, r3, r8
 801d462:	2a00      	cmp	r2, #0
 801d464:	f77f af53 	ble.w	801d30e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 801d468:	f9bc 6008 	ldrsh.w	r6, [ip, #8]
 801d46c:	9f01      	ldr	r7, [sp, #4]
 801d46e:	140a      	asrs	r2, r1, #16
 801d470:	1405      	asrs	r5, r0, #16
 801d472:	fb06 7202 	mla	r2, r6, r2, r7
 801d476:	5d52      	ldrb	r2, [r2, r5]
 801d478:	9d02      	ldr	r5, [sp, #8]
 801d47a:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 801d47e:	0e2e      	lsrs	r6, r5, #24
 801d480:	d044      	beq.n	801d50c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801d482:	9a05      	ldr	r2, [sp, #20]
 801d484:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 801d488:	4356      	muls	r6, r2
 801d48a:	1c72      	adds	r2, r6, #1
 801d48c:	eb02 2226 	add.w	r2, r2, r6, asr #8
 801d490:	1212      	asrs	r2, r2, #8
 801d492:	fa1f f982 	uxth.w	r9, r2
 801d496:	ea4f 272e 	mov.w	r7, lr, asr #8
 801d49a:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801d49e:	43d2      	mvns	r2, r2
 801d4a0:	b2d2      	uxtb	r2, r2
 801d4a2:	fb16 f609 	smulbb	r6, r6, r9
 801d4a6:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801d4aa:	fb07 6702 	mla	r7, r7, r2, r6
 801d4ae:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 801d4b2:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801d4b6:	b2ed      	uxtb	r5, r5
 801d4b8:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801d4bc:	fa5f fe8e 	uxtb.w	lr, lr
 801d4c0:	fb15 f509 	smulbb	r5, r5, r9
 801d4c4:	fb0e 5502 	mla	r5, lr, r2, r5
 801d4c8:	b2bf      	uxth	r7, r7
 801d4ca:	fb1a fa09 	smulbb	sl, sl, r9
 801d4ce:	b2ad      	uxth	r5, r5
 801d4d0:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801d4d4:	fb06 a602 	mla	r6, r6, r2, sl
 801d4d8:	1c7a      	adds	r2, r7, #1
 801d4da:	f105 0a01 	add.w	sl, r5, #1
 801d4de:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 801d4e2:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801d4e6:	b2b6      	uxth	r6, r6
 801d4e8:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801d4ec:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801d4f0:	ea4a 0707 	orr.w	r7, sl, r7
 801d4f4:	f106 0a01 	add.w	sl, r6, #1
 801d4f8:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801d4fc:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801d500:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801d504:	ea47 070a 	orr.w	r7, r7, sl
 801d508:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 801d50c:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801d50e:	4410      	add	r0, r2
 801d510:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801d512:	f108 0801 	add.w	r8, r8, #1
 801d516:	4411      	add	r1, r2
 801d518:	e7a1      	b.n	801d45e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
 801d51a:	b007      	add	sp, #28
 801d51c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801d520 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801d520:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d524:	b085      	sub	sp, #20
 801d526:	468b      	mov	fp, r1
 801d528:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801d52a:	9203      	str	r2, [sp, #12]
 801d52c:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801d530:	6841      	ldr	r1, [r0, #4]
 801d532:	f8dd e058 	ldr.w	lr, [sp, #88]	; 0x58
 801d536:	fb01 2404 	mla	r4, r1, r4, r2
 801d53a:	6802      	ldr	r2, [r0, #0]
 801d53c:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801d540:	f8de 2000 	ldr.w	r2, [lr]
 801d544:	9200      	str	r2, [sp, #0]
 801d546:	f8de 2004 	ldr.w	r2, [lr, #4]
 801d54a:	3204      	adds	r2, #4
 801d54c:	9201      	str	r2, [sp, #4]
 801d54e:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801d552:	f1bb 0f00 	cmp.w	fp, #0
 801d556:	dc03      	bgt.n	801d560 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 801d558:	9a03      	ldr	r2, [sp, #12]
 801d55a:	2a00      	cmp	r2, #0
 801d55c:	f340 8153 	ble.w	801d806 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 801d560:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801d562:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 801d566:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 801d56a:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801d56e:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801d570:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801d574:	2b00      	cmp	r3, #0
 801d576:	dd0e      	ble.n	801d596 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801d578:	1408      	asrs	r0, r1, #16
 801d57a:	d405      	bmi.n	801d588 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801d57c:	42b8      	cmp	r0, r7
 801d57e:	da03      	bge.n	801d588 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801d580:	1410      	asrs	r0, r2, #16
 801d582:	d401      	bmi.n	801d588 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801d584:	42b0      	cmp	r0, r6
 801d586:	db07      	blt.n	801d598 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801d588:	9811      	ldr	r0, [sp, #68]	; 0x44
 801d58a:	4401      	add	r1, r0
 801d58c:	9812      	ldr	r0, [sp, #72]	; 0x48
 801d58e:	3b01      	subs	r3, #1
 801d590:	4402      	add	r2, r0
 801d592:	3402      	adds	r4, #2
 801d594:	e7ee      	b.n	801d574 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 801d596:	d017      	beq.n	801d5c8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 801d598:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801d59a:	1e58      	subs	r0, r3, #1
 801d59c:	fb05 1500 	mla	r5, r5, r0, r1
 801d5a0:	142d      	asrs	r5, r5, #16
 801d5a2:	d409      	bmi.n	801d5b8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801d5a4:	42bd      	cmp	r5, r7
 801d5a6:	da07      	bge.n	801d5b8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801d5a8:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801d5aa:	fb05 2000 	mla	r0, r5, r0, r2
 801d5ae:	1400      	asrs	r0, r0, #16
 801d5b0:	d402      	bmi.n	801d5b8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801d5b2:	42b0      	cmp	r0, r6
 801d5b4:	f2c0 80bc 	blt.w	801d730 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x210>
 801d5b8:	2600      	movs	r6, #0
 801d5ba:	1998      	adds	r0, r3, r6
 801d5bc:	2800      	cmp	r0, #0
 801d5be:	dc3e      	bgt.n	801d63e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11e>
 801d5c0:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801d5c4:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801d5c8:	f1bb 0f00 	cmp.w	fp, #0
 801d5cc:	f340 811b 	ble.w	801d806 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 801d5d0:	ee30 0a04 	vadd.f32	s0, s0, s8
 801d5d4:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801d5d8:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801d5dc:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801d5de:	f1bb 0b01 	subs.w	fp, fp, #1
 801d5e2:	ee31 1a05 	vadd.f32	s2, s2, s10
 801d5e6:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801d5ea:	eeb0 6a62 	vmov.f32	s12, s5
 801d5ee:	ee61 7a27 	vmul.f32	s15, s2, s15
 801d5f2:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801d5f6:	ee77 2a62 	vsub.f32	s5, s14, s5
 801d5fa:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801d5fe:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801d602:	eeb0 6a43 	vmov.f32	s12, s6
 801d606:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801d60a:	ee12 2a90 	vmov	r2, s5
 801d60e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801d612:	fb92 f3f3 	sdiv	r3, r2, r3
 801d616:	ee13 2a10 	vmov	r2, s6
 801d61a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801d61e:	9311      	str	r3, [sp, #68]	; 0x44
 801d620:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801d622:	fb92 f3f3 	sdiv	r3, r2, r3
 801d626:	9a03      	ldr	r2, [sp, #12]
 801d628:	9312      	str	r3, [sp, #72]	; 0x48
 801d62a:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801d62e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801d630:	eeb0 3a67 	vmov.f32	s6, s15
 801d634:	bf08      	it	eq
 801d636:	4613      	moveq	r3, r2
 801d638:	eef0 2a47 	vmov.f32	s5, s14
 801d63c:	e789      	b.n	801d552 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 801d63e:	140f      	asrs	r7, r1, #16
 801d640:	d426      	bmi.n	801d690 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801d642:	f8de 5008 	ldr.w	r5, [lr, #8]
 801d646:	42bd      	cmp	r5, r7
 801d648:	dd22      	ble.n	801d690 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801d64a:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801d64e:	d41f      	bmi.n	801d690 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801d650:	f8de 000c 	ldr.w	r0, [lr, #12]
 801d654:	4560      	cmp	r0, ip
 801d656:	dd1b      	ble.n	801d690 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801d658:	9800      	ldr	r0, [sp, #0]
 801d65a:	b22d      	sxth	r5, r5
 801d65c:	fb0c 0505 	mla	r5, ip, r5, r0
 801d660:	5de8      	ldrb	r0, [r5, r7]
 801d662:	9d01      	ldr	r5, [sp, #4]
 801d664:	f855 0020 	ldr.w	r0, [r5, r0, lsl #2]
 801d668:	0e07      	lsrs	r7, r0, #24
 801d66a:	2fff      	cmp	r7, #255	; 0xff
 801d66c:	d116      	bne.n	801d69c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801d66e:	f06f 0501 	mvn.w	r5, #1
 801d672:	fb05 f706 	mul.w	r7, r5, r6
 801d676:	f2a5 75fe 	subw	r5, r5, #2046	; 0x7fe
 801d67a:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 801d67e:	0945      	lsrs	r5, r0, #5
 801d680:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801d684:	ea4c 0505 	orr.w	r5, ip, r5
 801d688:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 801d68c:	4305      	orrs	r5, r0
 801d68e:	53e5      	strh	r5, [r4, r7]
 801d690:	9811      	ldr	r0, [sp, #68]	; 0x44
 801d692:	4401      	add	r1, r0
 801d694:	9812      	ldr	r0, [sp, #72]	; 0x48
 801d696:	3e01      	subs	r6, #1
 801d698:	4402      	add	r2, r0
 801d69a:	e78e      	b.n	801d5ba <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801d69c:	b2fd      	uxtb	r5, r7
 801d69e:	2f00      	cmp	r7, #0
 801d6a0:	d0f6      	beq.n	801d690 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801d6a2:	f06f 0701 	mvn.w	r7, #1
 801d6a6:	4377      	muls	r7, r6
 801d6a8:	fa1f f985 	uxth.w	r9, r5
 801d6ac:	f834 8007 	ldrh.w	r8, [r4, r7]
 801d6b0:	9702      	str	r7, [sp, #8]
 801d6b2:	ea4f 2c28 	mov.w	ip, r8, asr #8
 801d6b6:	f3c0 4707 	ubfx	r7, r0, #16, #8
 801d6ba:	43ed      	mvns	r5, r5
 801d6bc:	b2ed      	uxtb	r5, r5
 801d6be:	fb17 f709 	smulbb	r7, r7, r9
 801d6c2:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801d6c6:	fb0c 7c05 	mla	ip, ip, r5, r7
 801d6ca:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 801d6ce:	ea4f 07e8 	mov.w	r7, r8, asr #3
 801d6d2:	b2c0      	uxtb	r0, r0
 801d6d4:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801d6d8:	fa5f f888 	uxtb.w	r8, r8
 801d6dc:	fb10 f009 	smulbb	r0, r0, r9
 801d6e0:	fb08 0005 	mla	r0, r8, r5, r0
 801d6e4:	b280      	uxth	r0, r0
 801d6e6:	fa1f fc8c 	uxth.w	ip, ip
 801d6ea:	fb1a fa09 	smulbb	sl, sl, r9
 801d6ee:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801d6f2:	fb07 a705 	mla	r7, r7, r5, sl
 801d6f6:	f100 0a01 	add.w	sl, r0, #1
 801d6fa:	f10c 0501 	add.w	r5, ip, #1
 801d6fe:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 801d702:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801d706:	b2bf      	uxth	r7, r7
 801d708:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801d70c:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801d710:	ea4a 0c0c 	orr.w	ip, sl, ip
 801d714:	f107 0a01 	add.w	sl, r7, #1
 801d718:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 801d71c:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801d720:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801d724:	9802      	ldr	r0, [sp, #8]
 801d726:	ea4c 0c0a 	orr.w	ip, ip, sl
 801d72a:	f824 c000 	strh.w	ip, [r4, r0]
 801d72e:	e7af      	b.n	801d690 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801d730:	f04f 0800 	mov.w	r8, #0
 801d734:	eba3 0008 	sub.w	r0, r3, r8
 801d738:	2800      	cmp	r0, #0
 801d73a:	f77f af41 	ble.w	801d5c0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801d73e:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 801d742:	9f00      	ldr	r7, [sp, #0]
 801d744:	1410      	asrs	r0, r2, #16
 801d746:	140d      	asrs	r5, r1, #16
 801d748:	fb06 7000 	mla	r0, r6, r0, r7
 801d74c:	5d40      	ldrb	r0, [r0, r5]
 801d74e:	9d01      	ldr	r5, [sp, #4]
 801d750:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
 801d754:	0e2e      	lsrs	r6, r5, #24
 801d756:	2eff      	cmp	r6, #255	; 0xff
 801d758:	d112      	bne.n	801d780 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x260>
 801d75a:	482c      	ldr	r0, [pc, #176]	; (801d80c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ec>)
 801d75c:	ea00 2615 	and.w	r6, r0, r5, lsr #8
 801d760:	0968      	lsrs	r0, r5, #5
 801d762:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801d766:	4330      	orrs	r0, r6
 801d768:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801d76c:	4328      	orrs	r0, r5
 801d76e:	f824 0018 	strh.w	r0, [r4, r8, lsl #1]
 801d772:	9811      	ldr	r0, [sp, #68]	; 0x44
 801d774:	4401      	add	r1, r0
 801d776:	9812      	ldr	r0, [sp, #72]	; 0x48
 801d778:	f108 0801 	add.w	r8, r8, #1
 801d77c:	4402      	add	r2, r0
 801d77e:	e7d9      	b.n	801d734 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801d780:	b2f0      	uxtb	r0, r6
 801d782:	2e00      	cmp	r6, #0
 801d784:	d0f5      	beq.n	801d772 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 801d786:	f834 c018 	ldrh.w	ip, [r4, r8, lsl #1]
 801d78a:	fa1f f980 	uxth.w	r9, r0
 801d78e:	ea4f 272c 	mov.w	r7, ip, asr #8
 801d792:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801d796:	43c0      	mvns	r0, r0
 801d798:	b2c0      	uxtb	r0, r0
 801d79a:	fb16 f609 	smulbb	r6, r6, r9
 801d79e:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801d7a2:	fb07 6700 	mla	r7, r7, r0, r6
 801d7a6:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 801d7aa:	ea4f 06ec 	mov.w	r6, ip, asr #3
 801d7ae:	b2ed      	uxtb	r5, r5
 801d7b0:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801d7b4:	fa5f fc8c 	uxtb.w	ip, ip
 801d7b8:	fb15 f509 	smulbb	r5, r5, r9
 801d7bc:	fb0c 5500 	mla	r5, ip, r0, r5
 801d7c0:	b2bf      	uxth	r7, r7
 801d7c2:	fb1a fa09 	smulbb	sl, sl, r9
 801d7c6:	b2ad      	uxth	r5, r5
 801d7c8:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801d7cc:	fb06 a600 	mla	r6, r6, r0, sl
 801d7d0:	1c78      	adds	r0, r7, #1
 801d7d2:	f105 0a01 	add.w	sl, r5, #1
 801d7d6:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 801d7da:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801d7de:	b2b6      	uxth	r6, r6
 801d7e0:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801d7e4:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801d7e8:	ea4a 0707 	orr.w	r7, sl, r7
 801d7ec:	f106 0a01 	add.w	sl, r6, #1
 801d7f0:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801d7f4:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801d7f8:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801d7fc:	ea47 070a 	orr.w	r7, r7, sl
 801d800:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 801d804:	e7b5      	b.n	801d772 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 801d806:	b005      	add	sp, #20
 801d808:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801d80c:	fffff800 	.word	0xfffff800

0801d810 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801d810:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d814:	b087      	sub	sp, #28
 801d816:	468b      	mov	fp, r1
 801d818:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801d81a:	9204      	str	r2, [sp, #16]
 801d81c:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801d820:	9205      	str	r2, [sp, #20]
 801d822:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	; 0x58
 801d826:	6861      	ldr	r1, [r4, #4]
 801d828:	f8dd e060 	ldr.w	lr, [sp, #96]	; 0x60
 801d82c:	fb01 2000 	mla	r0, r1, r0, r2
 801d830:	6822      	ldr	r2, [r4, #0]
 801d832:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 801d836:	f8de 2000 	ldr.w	r2, [lr]
 801d83a:	9201      	str	r2, [sp, #4]
 801d83c:	f8de 2004 	ldr.w	r2, [lr, #4]
 801d840:	9202      	str	r2, [sp, #8]
 801d842:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801d846:	f1bb 0f00 	cmp.w	fp, #0
 801d84a:	dc03      	bgt.n	801d854 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44>
 801d84c:	9a04      	ldr	r2, [sp, #16]
 801d84e:	2a00      	cmp	r2, #0
 801d850:	f340 8142 	ble.w	801dad8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 801d854:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801d856:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 801d85a:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 801d85e:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801d862:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801d864:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801d868:	2b00      	cmp	r3, #0
 801d86a:	dd0e      	ble.n	801d88a <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801d86c:	140c      	asrs	r4, r1, #16
 801d86e:	d405      	bmi.n	801d87c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801d870:	42bc      	cmp	r4, r7
 801d872:	da03      	bge.n	801d87c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801d874:	1414      	asrs	r4, r2, #16
 801d876:	d401      	bmi.n	801d87c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801d878:	42b4      	cmp	r4, r6
 801d87a:	db07      	blt.n	801d88c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801d87c:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801d87e:	4421      	add	r1, r4
 801d880:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801d882:	3b01      	subs	r3, #1
 801d884:	4422      	add	r2, r4
 801d886:	3002      	adds	r0, #2
 801d888:	e7ee      	b.n	801d868 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801d88a:	d019      	beq.n	801d8c0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 801d88c:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801d88e:	1e5c      	subs	r4, r3, #1
 801d890:	fb05 1504 	mla	r5, r5, r4, r1
 801d894:	142d      	asrs	r5, r5, #16
 801d896:	d409      	bmi.n	801d8ac <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801d898:	42bd      	cmp	r5, r7
 801d89a:	da07      	bge.n	801d8ac <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801d89c:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801d89e:	fb05 2404 	mla	r4, r5, r4, r2
 801d8a2:	1424      	asrs	r4, r4, #16
 801d8a4:	d402      	bmi.n	801d8ac <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801d8a6:	42b4      	cmp	r4, r6
 801d8a8:	f2c0 80b1 	blt.w	801da0e <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 801d8ac:	f04f 0800 	mov.w	r8, #0
 801d8b0:	eb03 0408 	add.w	r4, r3, r8
 801d8b4:	2c00      	cmp	r4, #0
 801d8b6:	dc3e      	bgt.n	801d936 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 801d8b8:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801d8bc:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801d8c0:	f1bb 0f00 	cmp.w	fp, #0
 801d8c4:	f340 8108 	ble.w	801dad8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 801d8c8:	ee30 0a04 	vadd.f32	s0, s0, s8
 801d8cc:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801d8d0:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801d8d4:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801d8d6:	f1bb 0b01 	subs.w	fp, fp, #1
 801d8da:	ee31 1a05 	vadd.f32	s2, s2, s10
 801d8de:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801d8e2:	eeb0 6a62 	vmov.f32	s12, s5
 801d8e6:	ee61 7a27 	vmul.f32	s15, s2, s15
 801d8ea:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801d8ee:	ee77 2a62 	vsub.f32	s5, s14, s5
 801d8f2:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801d8f6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801d8fa:	eeb0 6a43 	vmov.f32	s12, s6
 801d8fe:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801d902:	ee12 2a90 	vmov	r2, s5
 801d906:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801d90a:	fb92 f3f3 	sdiv	r3, r2, r3
 801d90e:	ee13 2a10 	vmov	r2, s6
 801d912:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801d916:	9313      	str	r3, [sp, #76]	; 0x4c
 801d918:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801d91a:	fb92 f3f3 	sdiv	r3, r2, r3
 801d91e:	9a04      	ldr	r2, [sp, #16]
 801d920:	9314      	str	r3, [sp, #80]	; 0x50
 801d922:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 801d926:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801d928:	eeb0 3a67 	vmov.f32	s6, s15
 801d92c:	bf08      	it	eq
 801d92e:	4613      	moveq	r3, r2
 801d930:	eef0 2a47 	vmov.f32	s5, s14
 801d934:	e787      	b.n	801d846 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36>
 801d936:	140e      	asrs	r6, r1, #16
 801d938:	d462      	bmi.n	801da00 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801d93a:	f8de 5008 	ldr.w	r5, [lr, #8]
 801d93e:	42b5      	cmp	r5, r6
 801d940:	dd5e      	ble.n	801da00 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801d942:	1417      	asrs	r7, r2, #16
 801d944:	d45c      	bmi.n	801da00 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801d946:	f8de 400c 	ldr.w	r4, [lr, #12]
 801d94a:	42bc      	cmp	r4, r7
 801d94c:	dd58      	ble.n	801da00 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801d94e:	b22d      	sxth	r5, r5
 801d950:	fb07 6505 	mla	r5, r7, r5, r6
 801d954:	9c02      	ldr	r4, [sp, #8]
 801d956:	5d66      	ldrb	r6, [r4, r5]
 801d958:	2e00      	cmp	r6, #0
 801d95a:	d051      	beq.n	801da00 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801d95c:	9c01      	ldr	r4, [sp, #4]
 801d95e:	f834 9015 	ldrh.w	r9, [r4, r5, lsl #1]
 801d962:	f06f 0401 	mvn.w	r4, #1
 801d966:	fb04 f408 	mul.w	r4, r4, r8
 801d96a:	9403      	str	r4, [sp, #12]
 801d96c:	5b05      	ldrh	r5, [r0, r4]
 801d96e:	9c05      	ldr	r4, [sp, #20]
 801d970:	4366      	muls	r6, r4
 801d972:	1c74      	adds	r4, r6, #1
 801d974:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 801d978:	1224      	asrs	r4, r4, #8
 801d97a:	b2a7      	uxth	r7, r4
 801d97c:	122e      	asrs	r6, r5, #8
 801d97e:	43e4      	mvns	r4, r4
 801d980:	b2e4      	uxtb	r4, r4
 801d982:	ea4f 2c29 	mov.w	ip, r9, asr #8
 801d986:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801d98a:	fb16 f604 	smulbb	r6, r6, r4
 801d98e:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801d992:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801d996:	00ed      	lsls	r5, r5, #3
 801d998:	fb0c 6c07 	mla	ip, ip, r7, r6
 801d99c:	b2ed      	uxtb	r5, r5
 801d99e:	ea4f 06e9 	mov.w	r6, r9, asr #3
 801d9a2:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 801d9a6:	fb15 f504 	smulbb	r5, r5, r4
 801d9aa:	fa5f f989 	uxtb.w	r9, r9
 801d9ae:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 801d9b2:	fb09 5507 	mla	r5, r9, r7, r5
 801d9b6:	fb1a fa04 	smulbb	sl, sl, r4
 801d9ba:	fa1f fc8c 	uxth.w	ip, ip
 801d9be:	b2ad      	uxth	r5, r5
 801d9c0:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801d9c4:	fb06 a607 	mla	r6, r6, r7, sl
 801d9c8:	f10c 0401 	add.w	r4, ip, #1
 801d9cc:	f105 0a01 	add.w	sl, r5, #1
 801d9d0:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 801d9d4:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801d9d8:	b2b6      	uxth	r6, r6
 801d9da:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801d9de:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801d9e2:	ea4a 0c0c 	orr.w	ip, sl, ip
 801d9e6:	f106 0a01 	add.w	sl, r6, #1
 801d9ea:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801d9ee:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801d9f2:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801d9f6:	9c03      	ldr	r4, [sp, #12]
 801d9f8:	ea4c 0c0a 	orr.w	ip, ip, sl
 801d9fc:	f820 c004 	strh.w	ip, [r0, r4]
 801da00:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801da02:	4421      	add	r1, r4
 801da04:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801da06:	f108 38ff 	add.w	r8, r8, #4294967295
 801da0a:	4422      	add	r2, r4
 801da0c:	e750      	b.n	801d8b0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801da0e:	f04f 0900 	mov.w	r9, #0
 801da12:	eba3 0409 	sub.w	r4, r3, r9
 801da16:	2c00      	cmp	r4, #0
 801da18:	f77f af4e 	ble.w	801d8b8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 801da1c:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 801da20:	140d      	asrs	r5, r1, #16
 801da22:	1414      	asrs	r4, r2, #16
 801da24:	fb06 5404 	mla	r4, r6, r4, r5
 801da28:	9d02      	ldr	r5, [sp, #8]
 801da2a:	5d2e      	ldrb	r6, [r5, r4]
 801da2c:	2e00      	cmp	r6, #0
 801da2e:	d04c      	beq.n	801daca <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ba>
 801da30:	9d01      	ldr	r5, [sp, #4]
 801da32:	f835 8014 	ldrh.w	r8, [r5, r4, lsl #1]
 801da36:	9c05      	ldr	r4, [sp, #20]
 801da38:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 801da3c:	4366      	muls	r6, r4
 801da3e:	1c74      	adds	r4, r6, #1
 801da40:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 801da44:	1224      	asrs	r4, r4, #8
 801da46:	b2a7      	uxth	r7, r4
 801da48:	122e      	asrs	r6, r5, #8
 801da4a:	43e4      	mvns	r4, r4
 801da4c:	b2e4      	uxtb	r4, r4
 801da4e:	ea4f 2c28 	mov.w	ip, r8, asr #8
 801da52:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801da56:	fb16 f604 	smulbb	r6, r6, r4
 801da5a:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801da5e:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801da62:	00ed      	lsls	r5, r5, #3
 801da64:	fb0c 6c07 	mla	ip, ip, r7, r6
 801da68:	b2ed      	uxtb	r5, r5
 801da6a:	ea4f 06e8 	mov.w	r6, r8, asr #3
 801da6e:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801da72:	fb15 f504 	smulbb	r5, r5, r4
 801da76:	fa5f f888 	uxtb.w	r8, r8
 801da7a:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 801da7e:	fb08 5507 	mla	r5, r8, r7, r5
 801da82:	fb1a fa04 	smulbb	sl, sl, r4
 801da86:	fa1f fc8c 	uxth.w	ip, ip
 801da8a:	b2ad      	uxth	r5, r5
 801da8c:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801da90:	fb06 a607 	mla	r6, r6, r7, sl
 801da94:	f10c 0401 	add.w	r4, ip, #1
 801da98:	f105 0a01 	add.w	sl, r5, #1
 801da9c:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 801daa0:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801daa4:	b2b6      	uxth	r6, r6
 801daa6:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801daaa:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801daae:	ea4a 0c0c 	orr.w	ip, sl, ip
 801dab2:	f106 0a01 	add.w	sl, r6, #1
 801dab6:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801daba:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801dabe:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801dac2:	ea4c 0c0a 	orr.w	ip, ip, sl
 801dac6:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 801daca:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801dacc:	4421      	add	r1, r4
 801dace:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801dad0:	f109 0901 	add.w	r9, r9, #1
 801dad4:	4422      	add	r2, r4
 801dad6:	e79c      	b.n	801da12 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x202>
 801dad8:	b007      	add	sp, #28
 801dada:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801dade <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801dade:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801dae2:	b085      	sub	sp, #20
 801dae4:	468b      	mov	fp, r1
 801dae6:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801dae8:	9203      	str	r2, [sp, #12]
 801daea:	e9dd 2014 	ldrd	r2, r0, [sp, #80]	; 0x50
 801daee:	6861      	ldr	r1, [r4, #4]
 801daf0:	f8dd 8058 	ldr.w	r8, [sp, #88]	; 0x58
 801daf4:	fb01 2000 	mla	r0, r1, r0, r2
 801daf8:	6822      	ldr	r2, [r4, #0]
 801dafa:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 801dafe:	f8d8 2000 	ldr.w	r2, [r8]
 801db02:	9200      	str	r2, [sp, #0]
 801db04:	f8d8 2004 	ldr.w	r2, [r8, #4]
 801db08:	9201      	str	r2, [sp, #4]
 801db0a:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801db0e:	f1bb 0f00 	cmp.w	fp, #0
 801db12:	dc03      	bgt.n	801db1c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 801db14:	9a03      	ldr	r2, [sp, #12]
 801db16:	2a00      	cmp	r2, #0
 801db18:	f340 8146 	ble.w	801dda8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 801db1c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801db1e:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 801db22:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 801db26:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801db2a:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801db2c:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801db30:	2b00      	cmp	r3, #0
 801db32:	dd0e      	ble.n	801db52 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 801db34:	140c      	asrs	r4, r1, #16
 801db36:	d405      	bmi.n	801db44 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801db38:	42bc      	cmp	r4, r7
 801db3a:	da03      	bge.n	801db44 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801db3c:	1414      	asrs	r4, r2, #16
 801db3e:	d401      	bmi.n	801db44 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801db40:	42b4      	cmp	r4, r6
 801db42:	db07      	blt.n	801db54 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801db44:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801db46:	4421      	add	r1, r4
 801db48:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801db4a:	3b01      	subs	r3, #1
 801db4c:	4422      	add	r2, r4
 801db4e:	3002      	adds	r0, #2
 801db50:	e7ee      	b.n	801db30 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801db52:	d017      	beq.n	801db84 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 801db54:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801db56:	1e5c      	subs	r4, r3, #1
 801db58:	fb05 1504 	mla	r5, r5, r4, r1
 801db5c:	142d      	asrs	r5, r5, #16
 801db5e:	d409      	bmi.n	801db74 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801db60:	42bd      	cmp	r5, r7
 801db62:	da07      	bge.n	801db74 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801db64:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801db66:	fb05 2404 	mla	r4, r5, r4, r2
 801db6a:	1424      	asrs	r4, r4, #16
 801db6c:	d402      	bmi.n	801db74 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801db6e:	42b4      	cmp	r4, r6
 801db70:	f2c0 80b3 	blt.w	801dcda <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
 801db74:	2600      	movs	r6, #0
 801db76:	199c      	adds	r4, r3, r6
 801db78:	2c00      	cmp	r4, #0
 801db7a:	dc3e      	bgt.n	801dbfa <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801db7c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801db80:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801db84:	f1bb 0f00 	cmp.w	fp, #0
 801db88:	f340 810e 	ble.w	801dda8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 801db8c:	ee30 0a04 	vadd.f32	s0, s0, s8
 801db90:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801db94:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801db98:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801db9a:	f1bb 0b01 	subs.w	fp, fp, #1
 801db9e:	ee31 1a05 	vadd.f32	s2, s2, s10
 801dba2:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801dba6:	eeb0 6a62 	vmov.f32	s12, s5
 801dbaa:	ee61 7a27 	vmul.f32	s15, s2, s15
 801dbae:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801dbb2:	ee77 2a62 	vsub.f32	s5, s14, s5
 801dbb6:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801dbba:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801dbbe:	eeb0 6a43 	vmov.f32	s12, s6
 801dbc2:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801dbc6:	ee12 2a90 	vmov	r2, s5
 801dbca:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801dbce:	fb92 f3f3 	sdiv	r3, r2, r3
 801dbd2:	ee13 2a10 	vmov	r2, s6
 801dbd6:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801dbda:	9311      	str	r3, [sp, #68]	; 0x44
 801dbdc:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801dbde:	fb92 f3f3 	sdiv	r3, r2, r3
 801dbe2:	9a03      	ldr	r2, [sp, #12]
 801dbe4:	9312      	str	r3, [sp, #72]	; 0x48
 801dbe6:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801dbea:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801dbec:	eeb0 3a67 	vmov.f32	s6, s15
 801dbf0:	bf08      	it	eq
 801dbf2:	4613      	moveq	r3, r2
 801dbf4:	eef0 2a47 	vmov.f32	s5, s14
 801dbf8:	e789      	b.n	801db0e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 801dbfa:	140f      	asrs	r7, r1, #16
 801dbfc:	d418      	bmi.n	801dc30 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801dbfe:	f8d8 5008 	ldr.w	r5, [r8, #8]
 801dc02:	42bd      	cmp	r5, r7
 801dc04:	dd14      	ble.n	801dc30 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801dc06:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801dc0a:	d411      	bmi.n	801dc30 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801dc0c:	f8d8 400c 	ldr.w	r4, [r8, #12]
 801dc10:	4564      	cmp	r4, ip
 801dc12:	dd0d      	ble.n	801dc30 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801dc14:	b22d      	sxth	r5, r5
 801dc16:	fb0c 7505 	mla	r5, ip, r5, r7
 801dc1a:	9c01      	ldr	r4, [sp, #4]
 801dc1c:	5d64      	ldrb	r4, [r4, r5]
 801dc1e:	2cff      	cmp	r4, #255	; 0xff
 801dc20:	d10c      	bne.n	801dc3c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 801dc22:	9c00      	ldr	r4, [sp, #0]
 801dc24:	f834 5015 	ldrh.w	r5, [r4, r5, lsl #1]
 801dc28:	f06f 0401 	mvn.w	r4, #1
 801dc2c:	4374      	muls	r4, r6
 801dc2e:	5305      	strh	r5, [r0, r4]
 801dc30:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801dc32:	4421      	add	r1, r4
 801dc34:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801dc36:	3e01      	subs	r6, #1
 801dc38:	4422      	add	r2, r4
 801dc3a:	e79c      	b.n	801db76 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801dc3c:	2c00      	cmp	r4, #0
 801dc3e:	d0f7      	beq.n	801dc30 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801dc40:	9f00      	ldr	r7, [sp, #0]
 801dc42:	f837 9015 	ldrh.w	r9, [r7, r5, lsl #1]
 801dc46:	f06f 0501 	mvn.w	r5, #1
 801dc4a:	4375      	muls	r5, r6
 801dc4c:	9502      	str	r5, [sp, #8]
 801dc4e:	5b45      	ldrh	r5, [r0, r5]
 801dc50:	fa1f fc84 	uxth.w	ip, r4
 801dc54:	122f      	asrs	r7, r5, #8
 801dc56:	43e4      	mvns	r4, r4
 801dc58:	b2e4      	uxtb	r4, r4
 801dc5a:	ea4f 2e29 	mov.w	lr, r9, asr #8
 801dc5e:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801dc62:	fb17 f704 	smulbb	r7, r7, r4
 801dc66:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801dc6a:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801dc6e:	00ed      	lsls	r5, r5, #3
 801dc70:	fb0e 7e0c 	mla	lr, lr, ip, r7
 801dc74:	b2ed      	uxtb	r5, r5
 801dc76:	ea4f 07e9 	mov.w	r7, r9, asr #3
 801dc7a:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 801dc7e:	fb15 f504 	smulbb	r5, r5, r4
 801dc82:	fa5f f989 	uxtb.w	r9, r9
 801dc86:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 801dc8a:	fb09 550c 	mla	r5, r9, ip, r5
 801dc8e:	fb1a fa04 	smulbb	sl, sl, r4
 801dc92:	fa1f fe8e 	uxth.w	lr, lr
 801dc96:	b2ad      	uxth	r5, r5
 801dc98:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801dc9c:	fb07 a70c 	mla	r7, r7, ip, sl
 801dca0:	f10e 0401 	add.w	r4, lr, #1
 801dca4:	f105 0a01 	add.w	sl, r5, #1
 801dca8:	eb04 2e1e 	add.w	lr, r4, lr, lsr #8
 801dcac:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801dcb0:	b2bf      	uxth	r7, r7
 801dcb2:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801dcb6:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 801dcba:	ea4a 0e0e 	orr.w	lr, sl, lr
 801dcbe:	f107 0a01 	add.w	sl, r7, #1
 801dcc2:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 801dcc6:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801dcca:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801dcce:	9c02      	ldr	r4, [sp, #8]
 801dcd0:	ea4e 0e0a 	orr.w	lr, lr, sl
 801dcd4:	f820 e004 	strh.w	lr, [r0, r4]
 801dcd8:	e7aa      	b.n	801dc30 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801dcda:	f04f 0900 	mov.w	r9, #0
 801dcde:	eba3 0409 	sub.w	r4, r3, r9
 801dce2:	2c00      	cmp	r4, #0
 801dce4:	f77f af4a 	ble.w	801db7c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801dce8:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 801dcec:	1414      	asrs	r4, r2, #16
 801dcee:	140d      	asrs	r5, r1, #16
 801dcf0:	fb06 5504 	mla	r5, r6, r4, r5
 801dcf4:	9c01      	ldr	r4, [sp, #4]
 801dcf6:	5d64      	ldrb	r4, [r4, r5]
 801dcf8:	2cff      	cmp	r4, #255	; 0xff
 801dcfa:	d10b      	bne.n	801dd14 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 801dcfc:	9c00      	ldr	r4, [sp, #0]
 801dcfe:	f834 4015 	ldrh.w	r4, [r4, r5, lsl #1]
 801dd02:	f820 4019 	strh.w	r4, [r0, r9, lsl #1]
 801dd06:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801dd08:	4421      	add	r1, r4
 801dd0a:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801dd0c:	f109 0901 	add.w	r9, r9, #1
 801dd10:	4422      	add	r2, r4
 801dd12:	e7e4      	b.n	801dcde <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801dd14:	2c00      	cmp	r4, #0
 801dd16:	d0f6      	beq.n	801dd06 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 801dd18:	9e00      	ldr	r6, [sp, #0]
 801dd1a:	f836 e015 	ldrh.w	lr, [r6, r5, lsl #1]
 801dd1e:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 801dd22:	b2a7      	uxth	r7, r4
 801dd24:	122e      	asrs	r6, r5, #8
 801dd26:	43e4      	mvns	r4, r4
 801dd28:	b2e4      	uxtb	r4, r4
 801dd2a:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801dd2e:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801dd32:	fb16 f604 	smulbb	r6, r6, r4
 801dd36:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801dd3a:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801dd3e:	00ed      	lsls	r5, r5, #3
 801dd40:	fb0c 6c07 	mla	ip, ip, r7, r6
 801dd44:	b2ed      	uxtb	r5, r5
 801dd46:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801dd4a:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801dd4e:	fb15 f504 	smulbb	r5, r5, r4
 801dd52:	fa5f fe8e 	uxtb.w	lr, lr
 801dd56:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 801dd5a:	fb0e 5507 	mla	r5, lr, r7, r5
 801dd5e:	fb1a fa04 	smulbb	sl, sl, r4
 801dd62:	fa1f fc8c 	uxth.w	ip, ip
 801dd66:	b2ad      	uxth	r5, r5
 801dd68:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801dd6c:	fb06 a607 	mla	r6, r6, r7, sl
 801dd70:	f10c 0401 	add.w	r4, ip, #1
 801dd74:	f105 0a01 	add.w	sl, r5, #1
 801dd78:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 801dd7c:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801dd80:	b2b6      	uxth	r6, r6
 801dd82:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801dd86:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801dd8a:	ea4a 0c0c 	orr.w	ip, sl, ip
 801dd8e:	f106 0a01 	add.w	sl, r6, #1
 801dd92:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801dd96:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801dd9a:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801dd9e:	ea4c 0c0a 	orr.w	ip, ip, sl
 801dda2:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 801dda6:	e7ae      	b.n	801dd06 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 801dda8:	b005      	add	sp, #20
 801ddaa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801ddae <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801ddae:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ddb2:	b085      	sub	sp, #20
 801ddb4:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801ddb6:	9203      	str	r2, [sp, #12]
 801ddb8:	f89d 205c 	ldrb.w	r2, [sp, #92]	; 0x5c
 801ddbc:	9201      	str	r2, [sp, #4]
 801ddbe:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801ddc2:	9100      	str	r1, [sp, #0]
 801ddc4:	6841      	ldr	r1, [r0, #4]
 801ddc6:	f8dd e058 	ldr.w	lr, [sp, #88]	; 0x58
 801ddca:	fb01 2404 	mla	r4, r1, r4, r2
 801ddce:	6802      	ldr	r2, [r0, #0]
 801ddd0:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801ddd4:	f8de 2000 	ldr.w	r2, [lr]
 801ddd8:	9202      	str	r2, [sp, #8]
 801ddda:	9a01      	ldr	r2, [sp, #4]
 801dddc:	43d6      	mvns	r6, r2
 801ddde:	b2f6      	uxtb	r6, r6
 801dde0:	9a00      	ldr	r2, [sp, #0]
 801dde2:	2a00      	cmp	r2, #0
 801dde4:	dc03      	bgt.n	801ddee <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 801dde6:	9a03      	ldr	r2, [sp, #12]
 801dde8:	2a00      	cmp	r2, #0
 801ddea:	f340 8124 	ble.w	801e036 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 801ddee:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801ddf0:	f9be c008 	ldrsh.w	ip, [lr, #8]
 801ddf4:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 801ddf8:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801ddfc:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801ddfe:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801de02:	2b00      	cmp	r3, #0
 801de04:	dd0e      	ble.n	801de24 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801de06:	1408      	asrs	r0, r1, #16
 801de08:	d405      	bmi.n	801de16 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801de0a:	4560      	cmp	r0, ip
 801de0c:	da03      	bge.n	801de16 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801de0e:	1410      	asrs	r0, r2, #16
 801de10:	d401      	bmi.n	801de16 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801de12:	42b8      	cmp	r0, r7
 801de14:	db07      	blt.n	801de26 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801de16:	9811      	ldr	r0, [sp, #68]	; 0x44
 801de18:	4401      	add	r1, r0
 801de1a:	9812      	ldr	r0, [sp, #72]	; 0x48
 801de1c:	3b01      	subs	r3, #1
 801de1e:	4402      	add	r2, r0
 801de20:	3402      	adds	r4, #2
 801de22:	e7ee      	b.n	801de02 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 801de24:	d06e      	beq.n	801df04 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 801de26:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801de28:	1e58      	subs	r0, r3, #1
 801de2a:	fb05 1500 	mla	r5, r5, r0, r1
 801de2e:	142d      	asrs	r5, r5, #16
 801de30:	d45c      	bmi.n	801deec <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801de32:	4565      	cmp	r5, ip
 801de34:	da5a      	bge.n	801deec <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801de36:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801de38:	fb05 2000 	mla	r0, r5, r0, r2
 801de3c:	1400      	asrs	r0, r0, #16
 801de3e:	d455      	bmi.n	801deec <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801de40:	42b8      	cmp	r0, r7
 801de42:	da53      	bge.n	801deec <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801de44:	f8bd b004 	ldrh.w	fp, [sp, #4]
 801de48:	4699      	mov	r9, r3
 801de4a:	46a2      	mov	sl, r4
 801de4c:	f1b9 0f00 	cmp.w	r9, #0
 801de50:	dd54      	ble.n	801defc <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 801de52:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 801de56:	140d      	asrs	r5, r1, #16
 801de58:	1410      	asrs	r0, r2, #16
 801de5a:	fb07 5000 	mla	r0, r7, r0, r5
 801de5e:	9d02      	ldr	r5, [sp, #8]
 801de60:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 801de64:	f8ba 5000 	ldrh.w	r5, [sl]
 801de68:	122f      	asrs	r7, r5, #8
 801de6a:	ea4f 2c20 	mov.w	ip, r0, asr #8
 801de6e:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801de72:	fb17 f706 	smulbb	r7, r7, r6
 801de76:	ea4f 08e5 	mov.w	r8, r5, asr #3
 801de7a:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801de7e:	00ed      	lsls	r5, r5, #3
 801de80:	fb0c 7c0b 	mla	ip, ip, fp, r7
 801de84:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
 801de88:	10c7      	asrs	r7, r0, #3
 801de8a:	b2ed      	uxtb	r5, r5
 801de8c:	00c0      	lsls	r0, r0, #3
 801de8e:	fb18 f806 	smulbb	r8, r8, r6
 801de92:	fb15 f506 	smulbb	r5, r5, r6
 801de96:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801de9a:	b2c0      	uxtb	r0, r0
 801de9c:	fa1f fc8c 	uxth.w	ip, ip
 801dea0:	fb07 870b 	mla	r7, r7, fp, r8
 801dea4:	fb00 500b 	mla	r0, r0, fp, r5
 801dea8:	b280      	uxth	r0, r0
 801deaa:	b2bf      	uxth	r7, r7
 801deac:	f10c 0501 	add.w	r5, ip, #1
 801deb0:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801deb4:	f107 0801 	add.w	r8, r7, #1
 801deb8:	1c45      	adds	r5, r0, #1
 801deba:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 801debe:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 801dec2:	9811      	ldr	r0, [sp, #68]	; 0x44
 801dec4:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801dec8:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801decc:	ea4f 1858 	mov.w	r8, r8, lsr #5
 801ded0:	ea45 0c0c 	orr.w	ip, r5, ip
 801ded4:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 801ded8:	4401      	add	r1, r0
 801deda:	9812      	ldr	r0, [sp, #72]	; 0x48
 801dedc:	ea4c 0c08 	orr.w	ip, ip, r8
 801dee0:	f82a cb02 	strh.w	ip, [sl], #2
 801dee4:	4402      	add	r2, r0
 801dee6:	f109 39ff 	add.w	r9, r9, #4294967295
 801deea:	e7af      	b.n	801de4c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801deec:	f8bd a004 	ldrh.w	sl, [sp, #4]
 801def0:	f04f 0800 	mov.w	r8, #0
 801def4:	eb03 0008 	add.w	r0, r3, r8
 801def8:	2800      	cmp	r0, #0
 801defa:	dc41      	bgt.n	801df80 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 801defc:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801df00:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801df04:	9b00      	ldr	r3, [sp, #0]
 801df06:	2b00      	cmp	r3, #0
 801df08:	f340 8095 	ble.w	801e036 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 801df0c:	ee30 0a04 	vadd.f32	s0, s0, s8
 801df10:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801df14:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801df18:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801df1a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801df1e:	ee31 1a05 	vadd.f32	s2, s2, s10
 801df22:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801df26:	eef0 6a62 	vmov.f32	s13, s5
 801df2a:	ee61 7a27 	vmul.f32	s15, s2, s15
 801df2e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801df32:	ee77 2a62 	vsub.f32	s5, s14, s5
 801df36:	edcd 6a0f 	vstr	s13, [sp, #60]	; 0x3c
 801df3a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801df3e:	eef0 6a43 	vmov.f32	s13, s6
 801df42:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801df46:	ee12 2a90 	vmov	r2, s5
 801df4a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801df4e:	fb92 f3f3 	sdiv	r3, r2, r3
 801df52:	ee13 2a10 	vmov	r2, s6
 801df56:	9311      	str	r3, [sp, #68]	; 0x44
 801df58:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801df5a:	fb92 f3f3 	sdiv	r3, r2, r3
 801df5e:	9312      	str	r3, [sp, #72]	; 0x48
 801df60:	9b00      	ldr	r3, [sp, #0]
 801df62:	9a03      	ldr	r2, [sp, #12]
 801df64:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801df68:	3b01      	subs	r3, #1
 801df6a:	9300      	str	r3, [sp, #0]
 801df6c:	edcd 6a10 	vstr	s13, [sp, #64]	; 0x40
 801df70:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801df72:	eeb0 3a67 	vmov.f32	s6, s15
 801df76:	bf08      	it	eq
 801df78:	4613      	moveq	r3, r2
 801df7a:	eef0 2a47 	vmov.f32	s5, s14
 801df7e:	e72f      	b.n	801dde0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 801df80:	140f      	asrs	r7, r1, #16
 801df82:	d451      	bmi.n	801e028 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 801df84:	f8de 5008 	ldr.w	r5, [lr, #8]
 801df88:	42bd      	cmp	r5, r7
 801df8a:	dd4d      	ble.n	801e028 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 801df8c:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801df90:	d44a      	bmi.n	801e028 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 801df92:	f8de 000c 	ldr.w	r0, [lr, #12]
 801df96:	4560      	cmp	r0, ip
 801df98:	dd46      	ble.n	801e028 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 801df9a:	b22d      	sxth	r5, r5
 801df9c:	fb0c 7505 	mla	r5, ip, r5, r7
 801dfa0:	9802      	ldr	r0, [sp, #8]
 801dfa2:	f830 0015 	ldrh.w	r0, [r0, r5, lsl #1]
 801dfa6:	f06f 0501 	mvn.w	r5, #1
 801dfaa:	fb05 fb08 	mul.w	fp, r5, r8
 801dfae:	ea4f 2c20 	mov.w	ip, r0, asr #8
 801dfb2:	f834 500b 	ldrh.w	r5, [r4, fp]
 801dfb6:	122f      	asrs	r7, r5, #8
 801dfb8:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801dfbc:	fb17 f706 	smulbb	r7, r7, r6
 801dfc0:	ea4f 09e5 	mov.w	r9, r5, asr #3
 801dfc4:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801dfc8:	00ed      	lsls	r5, r5, #3
 801dfca:	fb0c 7c0a 	mla	ip, ip, sl, r7
 801dfce:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 801dfd2:	10c7      	asrs	r7, r0, #3
 801dfd4:	b2ed      	uxtb	r5, r5
 801dfd6:	00c0      	lsls	r0, r0, #3
 801dfd8:	fb19 f906 	smulbb	r9, r9, r6
 801dfdc:	fb15 f506 	smulbb	r5, r5, r6
 801dfe0:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801dfe4:	b2c0      	uxtb	r0, r0
 801dfe6:	fa1f fc8c 	uxth.w	ip, ip
 801dfea:	fb07 970a 	mla	r7, r7, sl, r9
 801dfee:	fb00 500a 	mla	r0, r0, sl, r5
 801dff2:	b2bf      	uxth	r7, r7
 801dff4:	b280      	uxth	r0, r0
 801dff6:	f10c 0501 	add.w	r5, ip, #1
 801dffa:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801dffe:	f107 0901 	add.w	r9, r7, #1
 801e002:	1c45      	adds	r5, r0, #1
 801e004:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 801e008:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 801e00c:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801e010:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801e014:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801e018:	ea45 0c0c 	orr.w	ip, r5, ip
 801e01c:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801e020:	ea4c 0c09 	orr.w	ip, ip, r9
 801e024:	f824 c00b 	strh.w	ip, [r4, fp]
 801e028:	9811      	ldr	r0, [sp, #68]	; 0x44
 801e02a:	4401      	add	r1, r0
 801e02c:	9812      	ldr	r0, [sp, #72]	; 0x48
 801e02e:	f108 38ff 	add.w	r8, r8, #4294967295
 801e032:	4402      	add	r2, r0
 801e034:	e75e      	b.n	801def4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x146>
 801e036:	b005      	add	sp, #20
 801e038:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801e03c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801e03c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e040:	b085      	sub	sp, #20
 801e042:	4693      	mov	fp, r2
 801e044:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 801e046:	9d16      	ldr	r5, [sp, #88]	; 0x58
 801e048:	6870      	ldr	r0, [r6, #4]
 801e04a:	9101      	str	r1, [sp, #4]
 801e04c:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801e050:	fb00 2404 	mla	r4, r0, r4, r2
 801e054:	6832      	ldr	r2, [r6, #0]
 801e056:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	; 0x44
 801e05a:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801e05e:	682a      	ldr	r2, [r5, #0]
 801e060:	9202      	str	r2, [sp, #8]
 801e062:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801e066:	9a01      	ldr	r2, [sp, #4]
 801e068:	2a00      	cmp	r2, #0
 801e06a:	dc03      	bgt.n	801e074 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 801e06c:	f1bb 0f00 	cmp.w	fp, #0
 801e070:	f340 809a 	ble.w	801e1a8 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 801e074:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801e076:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 801e07a:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 801e07e:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801e082:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801e084:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801e088:	2b00      	cmp	r3, #0
 801e08a:	dd0c      	ble.n	801e0a6 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
 801e08c:	1406      	asrs	r6, r0, #16
 801e08e:	d405      	bmi.n	801e09c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801e090:	454e      	cmp	r6, r9
 801e092:	da03      	bge.n	801e09c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801e094:	1416      	asrs	r6, r2, #16
 801e096:	d401      	bmi.n	801e09c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801e098:	4546      	cmp	r6, r8
 801e09a:	db05      	blt.n	801e0a8 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801e09c:	4470      	add	r0, lr
 801e09e:	4462      	add	r2, ip
 801e0a0:	3b01      	subs	r3, #1
 801e0a2:	3402      	adds	r4, #2
 801e0a4:	e7f0      	b.n	801e088 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 801e0a6:	d00f      	beq.n	801e0c8 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801e0a8:	1e5e      	subs	r6, r3, #1
 801e0aa:	fb0e 0706 	mla	r7, lr, r6, r0
 801e0ae:	143f      	asrs	r7, r7, #16
 801e0b0:	d541      	bpl.n	801e136 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfa>
 801e0b2:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 801e0b6:	4698      	mov	r8, r3
 801e0b8:	9603      	str	r6, [sp, #12]
 801e0ba:	f1b8 0f00 	cmp.w	r8, #0
 801e0be:	dc56      	bgt.n	801e16e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x132>
 801e0c0:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801e0c4:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801e0c8:	9b01      	ldr	r3, [sp, #4]
 801e0ca:	2b00      	cmp	r3, #0
 801e0cc:	dd6c      	ble.n	801e1a8 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 801e0ce:	ee30 0a04 	vadd.f32	s0, s0, s8
 801e0d2:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801e0d6:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801e0da:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801e0dc:	ee31 1a05 	vadd.f32	s2, s2, s10
 801e0e0:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801e0e4:	eeb0 6a62 	vmov.f32	s12, s5
 801e0e8:	ee61 7a27 	vmul.f32	s15, s2, s15
 801e0ec:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801e0f0:	ee77 2a62 	vsub.f32	s5, s14, s5
 801e0f4:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801e0f8:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801e0fc:	eeb0 6a43 	vmov.f32	s12, s6
 801e100:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801e104:	ee12 2a90 	vmov	r2, s5
 801e108:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801e10c:	fb92 fef3 	sdiv	lr, r2, r3
 801e110:	ee13 2a10 	vmov	r2, s6
 801e114:	fb92 fcf3 	sdiv	ip, r2, r3
 801e118:	9b01      	ldr	r3, [sp, #4]
 801e11a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801e11e:	3b01      	subs	r3, #1
 801e120:	9301      	str	r3, [sp, #4]
 801e122:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801e126:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801e128:	eeb0 3a67 	vmov.f32	s6, s15
 801e12c:	bf08      	it	eq
 801e12e:	465b      	moveq	r3, fp
 801e130:	eef0 2a47 	vmov.f32	s5, s14
 801e134:	e797      	b.n	801e066 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 801e136:	454f      	cmp	r7, r9
 801e138:	dabb      	bge.n	801e0b2 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801e13a:	fb0c 2606 	mla	r6, ip, r6, r2
 801e13e:	1436      	asrs	r6, r6, #16
 801e140:	d4b7      	bmi.n	801e0b2 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801e142:	4546      	cmp	r6, r8
 801e144:	dab5      	bge.n	801e0b2 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801e146:	461e      	mov	r6, r3
 801e148:	46a0      	mov	r8, r4
 801e14a:	2e00      	cmp	r6, #0
 801e14c:	ddb8      	ble.n	801e0c0 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801e14e:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 801e152:	9902      	ldr	r1, [sp, #8]
 801e154:	1417      	asrs	r7, r2, #16
 801e156:	ea4f 4920 	mov.w	r9, r0, asr #16
 801e15a:	fb0a 9707 	mla	r7, sl, r7, r9
 801e15e:	4470      	add	r0, lr
 801e160:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 801e164:	f828 7b02 	strh.w	r7, [r8], #2
 801e168:	4462      	add	r2, ip
 801e16a:	3e01      	subs	r6, #1
 801e16c:	e7ed      	b.n	801e14a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10e>
 801e16e:	ea5f 4920 	movs.w	r9, r0, asr #16
 801e172:	d414      	bmi.n	801e19e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 801e174:	68ae      	ldr	r6, [r5, #8]
 801e176:	454e      	cmp	r6, r9
 801e178:	dd11      	ble.n	801e19e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 801e17a:	ea5f 4a22 	movs.w	sl, r2, asr #16
 801e17e:	d40e      	bmi.n	801e19e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 801e180:	68ef      	ldr	r7, [r5, #12]
 801e182:	4557      	cmp	r7, sl
 801e184:	dd0b      	ble.n	801e19e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 801e186:	b236      	sxth	r6, r6
 801e188:	fb0a 9606 	mla	r6, sl, r6, r9
 801e18c:	9f02      	ldr	r7, [sp, #8]
 801e18e:	f06f 0101 	mvn.w	r1, #1
 801e192:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 801e196:	fb01 f608 	mul.w	r6, r1, r8
 801e19a:	9903      	ldr	r1, [sp, #12]
 801e19c:	538f      	strh	r7, [r1, r6]
 801e19e:	4470      	add	r0, lr
 801e1a0:	4462      	add	r2, ip
 801e1a2:	f108 38ff 	add.w	r8, r8, #4294967295
 801e1a6:	e788      	b.n	801e0ba <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801e1a8:	b005      	add	sp, #20
 801e1aa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801e1ae <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801e1ae:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e1b2:	b087      	sub	sp, #28
 801e1b4:	468b      	mov	fp, r1
 801e1b6:	9815      	ldr	r0, [sp, #84]	; 0x54
 801e1b8:	9203      	str	r2, [sp, #12]
 801e1ba:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801e1be:	9204      	str	r2, [sp, #16]
 801e1c0:	e9dd 2516 	ldrd	r2, r5, [sp, #88]	; 0x58
 801e1c4:	6841      	ldr	r1, [r0, #4]
 801e1c6:	f8dd 9060 	ldr.w	r9, [sp, #96]	; 0x60
 801e1ca:	fb01 2505 	mla	r5, r1, r5, r2
 801e1ce:	6802      	ldr	r2, [r0, #0]
 801e1d0:	eb02 0545 	add.w	r5, r2, r5, lsl #1
 801e1d4:	f8d9 2000 	ldr.w	r2, [r9]
 801e1d8:	9201      	str	r2, [sp, #4]
 801e1da:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801e1de:	f1bb 0f00 	cmp.w	fp, #0
 801e1e2:	dc03      	bgt.n	801e1ec <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 801e1e4:	9a03      	ldr	r2, [sp, #12]
 801e1e6:	2a00      	cmp	r2, #0
 801e1e8:	f340 8159 	ble.w	801e49e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 801e1ec:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801e1ee:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 801e1f2:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 801e1f6:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801e1fa:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801e1fc:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801e200:	2b00      	cmp	r3, #0
 801e202:	dd0e      	ble.n	801e222 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 801e204:	1402      	asrs	r2, r0, #16
 801e206:	d405      	bmi.n	801e214 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801e208:	42ba      	cmp	r2, r7
 801e20a:	da03      	bge.n	801e214 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801e20c:	140a      	asrs	r2, r1, #16
 801e20e:	d401      	bmi.n	801e214 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801e210:	42b2      	cmp	r2, r6
 801e212:	db07      	blt.n	801e224 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801e214:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801e216:	4410      	add	r0, r2
 801e218:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801e21a:	3b01      	subs	r3, #1
 801e21c:	4411      	add	r1, r2
 801e21e:	3502      	adds	r5, #2
 801e220:	e7ee      	b.n	801e200 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801e222:	d017      	beq.n	801e254 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 801e224:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801e226:	1e5a      	subs	r2, r3, #1
 801e228:	fb04 0402 	mla	r4, r4, r2, r0
 801e22c:	1424      	asrs	r4, r4, #16
 801e22e:	d409      	bmi.n	801e244 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801e230:	42bc      	cmp	r4, r7
 801e232:	da07      	bge.n	801e244 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801e234:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801e236:	fb04 1202 	mla	r2, r4, r2, r1
 801e23a:	1412      	asrs	r2, r2, #16
 801e23c:	d402      	bmi.n	801e244 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801e23e:	42b2      	cmp	r2, r6
 801e240:	f2c0 80bf 	blt.w	801e3c2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801e244:	2700      	movs	r7, #0
 801e246:	19da      	adds	r2, r3, r7
 801e248:	2a00      	cmp	r2, #0
 801e24a:	dc3e      	bgt.n	801e2ca <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801e24c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801e250:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 801e254:	f1bb 0f00 	cmp.w	fp, #0
 801e258:	f340 8121 	ble.w	801e49e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 801e25c:	ee30 0a04 	vadd.f32	s0, s0, s8
 801e260:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801e264:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801e268:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801e26a:	f1bb 0b01 	subs.w	fp, fp, #1
 801e26e:	ee31 1a05 	vadd.f32	s2, s2, s10
 801e272:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801e276:	eeb0 6a62 	vmov.f32	s12, s5
 801e27a:	ee61 7a27 	vmul.f32	s15, s2, s15
 801e27e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801e282:	ee77 2a62 	vsub.f32	s5, s14, s5
 801e286:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801e28a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801e28e:	eeb0 6a43 	vmov.f32	s12, s6
 801e292:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801e296:	ee12 2a90 	vmov	r2, s5
 801e29a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801e29e:	fb92 f3f3 	sdiv	r3, r2, r3
 801e2a2:	ee13 2a10 	vmov	r2, s6
 801e2a6:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801e2aa:	9313      	str	r3, [sp, #76]	; 0x4c
 801e2ac:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801e2ae:	fb92 f3f3 	sdiv	r3, r2, r3
 801e2b2:	9a03      	ldr	r2, [sp, #12]
 801e2b4:	9314      	str	r3, [sp, #80]	; 0x50
 801e2b6:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 801e2ba:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801e2bc:	eeb0 3a67 	vmov.f32	s6, s15
 801e2c0:	bf08      	it	eq
 801e2c2:	4613      	moveq	r3, r2
 801e2c4:	eef0 2a47 	vmov.f32	s5, s14
 801e2c8:	e789      	b.n	801e1de <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 801e2ca:	1406      	asrs	r6, r0, #16
 801e2cc:	d42d      	bmi.n	801e32a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801e2ce:	f8d9 4008 	ldr.w	r4, [r9, #8]
 801e2d2:	42b4      	cmp	r4, r6
 801e2d4:	dd29      	ble.n	801e32a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801e2d6:	ea5f 4c21 	movs.w	ip, r1, asr #16
 801e2da:	d426      	bmi.n	801e32a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801e2dc:	f8d9 200c 	ldr.w	r2, [r9, #12]
 801e2e0:	4562      	cmp	r2, ip
 801e2e2:	dd22      	ble.n	801e32a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801e2e4:	b224      	sxth	r4, r4
 801e2e6:	9a01      	ldr	r2, [sp, #4]
 801e2e8:	fb0c 6404 	mla	r4, ip, r4, r6
 801e2ec:	f852 4024 	ldr.w	r4, [r2, r4, lsl #2]
 801e2f0:	0e22      	lsrs	r2, r4, #24
 801e2f2:	d01a      	beq.n	801e32a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801e2f4:	9e04      	ldr	r6, [sp, #16]
 801e2f6:	4372      	muls	r2, r6
 801e2f8:	1c56      	adds	r6, r2, #1
 801e2fa:	eb06 2222 	add.w	r2, r6, r2, asr #8
 801e2fe:	1212      	asrs	r2, r2, #8
 801e300:	0a26      	lsrs	r6, r4, #8
 801e302:	2aff      	cmp	r2, #255	; 0xff
 801e304:	9605      	str	r6, [sp, #20]
 801e306:	d116      	bne.n	801e336 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 801e308:	f06f 0201 	mvn.w	r2, #1
 801e30c:	fb02 fc07 	mul.w	ip, r2, r7
 801e310:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 801e314:	0962      	lsrs	r2, r4, #5
 801e316:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801e31a:	f026 0607 	bic.w	r6, r6, #7
 801e31e:	4316      	orrs	r6, r2
 801e320:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 801e324:	4326      	orrs	r6, r4
 801e326:	f825 600c 	strh.w	r6, [r5, ip]
 801e32a:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801e32c:	4410      	add	r0, r2
 801e32e:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801e330:	3f01      	subs	r7, #1
 801e332:	4411      	add	r1, r2
 801e334:	e787      	b.n	801e246 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801e336:	f06f 0601 	mvn.w	r6, #1
 801e33a:	437e      	muls	r6, r7
 801e33c:	fa1f fa82 	uxth.w	sl, r2
 801e340:	f835 8006 	ldrh.w	r8, [r5, r6]
 801e344:	9602      	str	r6, [sp, #8]
 801e346:	ea4f 2e28 	mov.w	lr, r8, asr #8
 801e34a:	f3c4 4c07 	ubfx	ip, r4, #16, #8
 801e34e:	43d2      	mvns	r2, r2
 801e350:	b2d2      	uxtb	r2, r2
 801e352:	fb1c fc0a 	smulbb	ip, ip, sl
 801e356:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801e35a:	fb0e ce02 	mla	lr, lr, r2, ip
 801e35e:	b2e4      	uxtb	r4, r4
 801e360:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 801e364:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801e368:	f89d 6014 	ldrb.w	r6, [sp, #20]
 801e36c:	fa5f f888 	uxtb.w	r8, r8
 801e370:	fb14 f40a 	smulbb	r4, r4, sl
 801e374:	fb08 4402 	mla	r4, r8, r2, r4
 801e378:	fa1f fe8e 	uxth.w	lr, lr
 801e37c:	fb16 f60a 	smulbb	r6, r6, sl
 801e380:	b2a4      	uxth	r4, r4
 801e382:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 801e386:	fb0c 6c02 	mla	ip, ip, r2, r6
 801e38a:	f10e 0201 	add.w	r2, lr, #1
 801e38e:	1c66      	adds	r6, r4, #1
 801e390:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 801e394:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 801e398:	fa1f fc8c 	uxth.w	ip, ip
 801e39c:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801e3a0:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 801e3a4:	ea46 0e0e 	orr.w	lr, r6, lr
 801e3a8:	f10c 0601 	add.w	r6, ip, #1
 801e3ac:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 801e3b0:	0976      	lsrs	r6, r6, #5
 801e3b2:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801e3b6:	9a02      	ldr	r2, [sp, #8]
 801e3b8:	ea4e 0e06 	orr.w	lr, lr, r6
 801e3bc:	f825 e002 	strh.w	lr, [r5, r2]
 801e3c0:	e7b3      	b.n	801e32a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801e3c2:	f04f 0800 	mov.w	r8, #0
 801e3c6:	eba3 0208 	sub.w	r2, r3, r8
 801e3ca:	2a00      	cmp	r2, #0
 801e3cc:	f77f af3e 	ble.w	801e24c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801e3d0:	f9b9 6008 	ldrsh.w	r6, [r9, #8]
 801e3d4:	1404      	asrs	r4, r0, #16
 801e3d6:	140a      	asrs	r2, r1, #16
 801e3d8:	fb06 4202 	mla	r2, r6, r2, r4
 801e3dc:	9c01      	ldr	r4, [sp, #4]
 801e3de:	f854 4022 	ldr.w	r4, [r4, r2, lsl #2]
 801e3e2:	0e22      	lsrs	r2, r4, #24
 801e3e4:	d016      	beq.n	801e414 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
 801e3e6:	9e04      	ldr	r6, [sp, #16]
 801e3e8:	4372      	muls	r2, r6
 801e3ea:	1c56      	adds	r6, r2, #1
 801e3ec:	eb06 2222 	add.w	r2, r6, r2, asr #8
 801e3f0:	1212      	asrs	r2, r2, #8
 801e3f2:	2aff      	cmp	r2, #255	; 0xff
 801e3f4:	ea4f 2614 	mov.w	r6, r4, lsr #8
 801e3f8:	d113      	bne.n	801e422 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x274>
 801e3fa:	0962      	lsrs	r2, r4, #5
 801e3fc:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 801e400:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801e404:	f026 0607 	bic.w	r6, r6, #7
 801e408:	4316      	orrs	r6, r2
 801e40a:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 801e40e:	4326      	orrs	r6, r4
 801e410:	f825 6018 	strh.w	r6, [r5, r8, lsl #1]
 801e414:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801e416:	4410      	add	r0, r2
 801e418:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801e41a:	f108 0801 	add.w	r8, r8, #1
 801e41e:	4411      	add	r1, r2
 801e420:	e7d1      	b.n	801e3c6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x218>
 801e422:	f835 e018 	ldrh.w	lr, [r5, r8, lsl #1]
 801e426:	fa1f fa82 	uxth.w	sl, r2
 801e42a:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801e42e:	f3c4 4707 	ubfx	r7, r4, #16, #8
 801e432:	43d2      	mvns	r2, r2
 801e434:	b2d2      	uxtb	r2, r2
 801e436:	fb17 f70a 	smulbb	r7, r7, sl
 801e43a:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801e43e:	fb0c 7c02 	mla	ip, ip, r2, r7
 801e442:	b2e4      	uxtb	r4, r4
 801e444:	ea4f 07ee 	mov.w	r7, lr, asr #3
 801e448:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801e44c:	fa5f fe8e 	uxtb.w	lr, lr
 801e450:	fb14 f40a 	smulbb	r4, r4, sl
 801e454:	fb0e 4402 	mla	r4, lr, r2, r4
 801e458:	b2f6      	uxtb	r6, r6
 801e45a:	fa1f fc8c 	uxth.w	ip, ip
 801e45e:	fb16 f60a 	smulbb	r6, r6, sl
 801e462:	b2a4      	uxth	r4, r4
 801e464:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801e468:	fb07 6702 	mla	r7, r7, r2, r6
 801e46c:	f10c 0201 	add.w	r2, ip, #1
 801e470:	1c66      	adds	r6, r4, #1
 801e472:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 801e476:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 801e47a:	b2bf      	uxth	r7, r7
 801e47c:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801e480:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801e484:	ea46 0c0c 	orr.w	ip, r6, ip
 801e488:	1c7e      	adds	r6, r7, #1
 801e48a:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 801e48e:	0976      	lsrs	r6, r6, #5
 801e490:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801e494:	ea4c 0c06 	orr.w	ip, ip, r6
 801e498:	f825 c018 	strh.w	ip, [r5, r8, lsl #1]
 801e49c:	e7ba      	b.n	801e414 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
 801e49e:	b007      	add	sp, #28
 801e4a0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801e4a4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801e4a4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e4a8:	b085      	sub	sp, #20
 801e4aa:	468b      	mov	fp, r1
 801e4ac:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801e4ae:	9203      	str	r2, [sp, #12]
 801e4b0:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801e4b4:	6841      	ldr	r1, [r0, #4]
 801e4b6:	f8dd 8058 	ldr.w	r8, [sp, #88]	; 0x58
 801e4ba:	fb01 2404 	mla	r4, r1, r4, r2
 801e4be:	6802      	ldr	r2, [r0, #0]
 801e4c0:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801e4c4:	f8d8 2000 	ldr.w	r2, [r8]
 801e4c8:	9201      	str	r2, [sp, #4]
 801e4ca:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801e4ce:	f1bb 0f00 	cmp.w	fp, #0
 801e4d2:	dc03      	bgt.n	801e4dc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 801e4d4:	9a03      	ldr	r2, [sp, #12]
 801e4d6:	2a00      	cmp	r2, #0
 801e4d8:	f340 814f 	ble.w	801e77a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 801e4dc:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801e4de:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 801e4e2:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 801e4e6:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801e4ea:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801e4ec:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801e4f0:	2b00      	cmp	r3, #0
 801e4f2:	dd0e      	ble.n	801e512 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801e4f4:	1408      	asrs	r0, r1, #16
 801e4f6:	d405      	bmi.n	801e504 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801e4f8:	42b8      	cmp	r0, r7
 801e4fa:	da03      	bge.n	801e504 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801e4fc:	1410      	asrs	r0, r2, #16
 801e4fe:	d401      	bmi.n	801e504 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801e500:	42b0      	cmp	r0, r6
 801e502:	db07      	blt.n	801e514 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801e504:	9811      	ldr	r0, [sp, #68]	; 0x44
 801e506:	4401      	add	r1, r0
 801e508:	9812      	ldr	r0, [sp, #72]	; 0x48
 801e50a:	3b01      	subs	r3, #1
 801e50c:	4402      	add	r2, r0
 801e50e:	3402      	adds	r4, #2
 801e510:	e7ee      	b.n	801e4f0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 801e512:	d017      	beq.n	801e544 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801e514:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801e516:	1e58      	subs	r0, r3, #1
 801e518:	fb05 1500 	mla	r5, r5, r0, r1
 801e51c:	142d      	asrs	r5, r5, #16
 801e51e:	d409      	bmi.n	801e534 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801e520:	42bd      	cmp	r5, r7
 801e522:	da07      	bge.n	801e534 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801e524:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801e526:	fb05 2000 	mla	r0, r5, r0, r2
 801e52a:	1400      	asrs	r0, r0, #16
 801e52c:	d402      	bmi.n	801e534 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801e52e:	42b0      	cmp	r0, r6
 801e530:	f2c0 80ba 	blt.w	801e6a8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801e534:	2600      	movs	r6, #0
 801e536:	1998      	adds	r0, r3, r6
 801e538:	2800      	cmp	r0, #0
 801e53a:	dc3e      	bgt.n	801e5ba <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801e53c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801e540:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801e544:	f1bb 0f00 	cmp.w	fp, #0
 801e548:	f340 8117 	ble.w	801e77a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 801e54c:	ee30 0a04 	vadd.f32	s0, s0, s8
 801e550:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801e554:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801e558:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801e55a:	f1bb 0b01 	subs.w	fp, fp, #1
 801e55e:	ee31 1a05 	vadd.f32	s2, s2, s10
 801e562:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801e566:	eeb0 6a62 	vmov.f32	s12, s5
 801e56a:	ee61 7a27 	vmul.f32	s15, s2, s15
 801e56e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801e572:	ee77 2a62 	vsub.f32	s5, s14, s5
 801e576:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801e57a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801e57e:	eeb0 6a43 	vmov.f32	s12, s6
 801e582:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801e586:	ee12 2a90 	vmov	r2, s5
 801e58a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801e58e:	fb92 f3f3 	sdiv	r3, r2, r3
 801e592:	ee13 2a10 	vmov	r2, s6
 801e596:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801e59a:	9311      	str	r3, [sp, #68]	; 0x44
 801e59c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801e59e:	fb92 f3f3 	sdiv	r3, r2, r3
 801e5a2:	9a03      	ldr	r2, [sp, #12]
 801e5a4:	9312      	str	r3, [sp, #72]	; 0x48
 801e5a6:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801e5aa:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801e5ac:	eeb0 3a67 	vmov.f32	s6, s15
 801e5b0:	bf08      	it	eq
 801e5b2:	4613      	moveq	r3, r2
 801e5b4:	eef0 2a47 	vmov.f32	s5, s14
 801e5b8:	e789      	b.n	801e4ce <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 801e5ba:	140f      	asrs	r7, r1, #16
 801e5bc:	d424      	bmi.n	801e608 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801e5be:	f8d8 5008 	ldr.w	r5, [r8, #8]
 801e5c2:	42bd      	cmp	r5, r7
 801e5c4:	dd20      	ble.n	801e608 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801e5c6:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801e5ca:	d41d      	bmi.n	801e608 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801e5cc:	f8d8 000c 	ldr.w	r0, [r8, #12]
 801e5d0:	4560      	cmp	r0, ip
 801e5d2:	dd19      	ble.n	801e608 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801e5d4:	b22d      	sxth	r5, r5
 801e5d6:	fb0c 7505 	mla	r5, ip, r5, r7
 801e5da:	9801      	ldr	r0, [sp, #4]
 801e5dc:	f850 0025 	ldr.w	r0, [r0, r5, lsl #2]
 801e5e0:	0e07      	lsrs	r7, r0, #24
 801e5e2:	2fff      	cmp	r7, #255	; 0xff
 801e5e4:	d116      	bne.n	801e614 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801e5e6:	f06f 0501 	mvn.w	r5, #1
 801e5ea:	fb05 f706 	mul.w	r7, r5, r6
 801e5ee:	f2a5 75fe 	subw	r5, r5, #2046	; 0x7fe
 801e5f2:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 801e5f6:	0945      	lsrs	r5, r0, #5
 801e5f8:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801e5fc:	ea4c 0505 	orr.w	r5, ip, r5
 801e600:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 801e604:	4305      	orrs	r5, r0
 801e606:	53e5      	strh	r5, [r4, r7]
 801e608:	9811      	ldr	r0, [sp, #68]	; 0x44
 801e60a:	4401      	add	r1, r0
 801e60c:	9812      	ldr	r0, [sp, #72]	; 0x48
 801e60e:	3e01      	subs	r6, #1
 801e610:	4402      	add	r2, r0
 801e612:	e790      	b.n	801e536 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801e614:	b2fd      	uxtb	r5, r7
 801e616:	2f00      	cmp	r7, #0
 801e618:	d0f6      	beq.n	801e608 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801e61a:	f06f 0701 	mvn.w	r7, #1
 801e61e:	4377      	muls	r7, r6
 801e620:	fa1f f985 	uxth.w	r9, r5
 801e624:	f834 e007 	ldrh.w	lr, [r4, r7]
 801e628:	9702      	str	r7, [sp, #8]
 801e62a:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801e62e:	f3c0 4707 	ubfx	r7, r0, #16, #8
 801e632:	43ed      	mvns	r5, r5
 801e634:	b2ed      	uxtb	r5, r5
 801e636:	fb17 f709 	smulbb	r7, r7, r9
 801e63a:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801e63e:	fb0c 7c05 	mla	ip, ip, r5, r7
 801e642:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 801e646:	ea4f 07ee 	mov.w	r7, lr, asr #3
 801e64a:	b2c0      	uxtb	r0, r0
 801e64c:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801e650:	fa5f fe8e 	uxtb.w	lr, lr
 801e654:	fb10 f009 	smulbb	r0, r0, r9
 801e658:	fb0e 0005 	mla	r0, lr, r5, r0
 801e65c:	b280      	uxth	r0, r0
 801e65e:	fa1f fc8c 	uxth.w	ip, ip
 801e662:	fb1a fa09 	smulbb	sl, sl, r9
 801e666:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801e66a:	fb07 a705 	mla	r7, r7, r5, sl
 801e66e:	f100 0a01 	add.w	sl, r0, #1
 801e672:	f10c 0501 	add.w	r5, ip, #1
 801e676:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 801e67a:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801e67e:	b2bf      	uxth	r7, r7
 801e680:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801e684:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801e688:	ea4a 0c0c 	orr.w	ip, sl, ip
 801e68c:	f107 0a01 	add.w	sl, r7, #1
 801e690:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 801e694:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801e698:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801e69c:	9802      	ldr	r0, [sp, #8]
 801e69e:	ea4c 0c0a 	orr.w	ip, ip, sl
 801e6a2:	f824 c000 	strh.w	ip, [r4, r0]
 801e6a6:	e7af      	b.n	801e608 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801e6a8:	f04f 0e00 	mov.w	lr, #0
 801e6ac:	eba3 000e 	sub.w	r0, r3, lr
 801e6b0:	2800      	cmp	r0, #0
 801e6b2:	f77f af43 	ble.w	801e53c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801e6b6:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 801e6ba:	140d      	asrs	r5, r1, #16
 801e6bc:	1410      	asrs	r0, r2, #16
 801e6be:	fb06 5000 	mla	r0, r6, r0, r5
 801e6c2:	9d01      	ldr	r5, [sp, #4]
 801e6c4:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
 801e6c8:	0e2e      	lsrs	r6, r5, #24
 801e6ca:	2eff      	cmp	r6, #255	; 0xff
 801e6cc:	d112      	bne.n	801e6f4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x250>
 801e6ce:	482c      	ldr	r0, [pc, #176]	; (801e780 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2dc>)
 801e6d0:	ea00 2615 	and.w	r6, r0, r5, lsr #8
 801e6d4:	0968      	lsrs	r0, r5, #5
 801e6d6:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801e6da:	4330      	orrs	r0, r6
 801e6dc:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801e6e0:	4328      	orrs	r0, r5
 801e6e2:	f824 001e 	strh.w	r0, [r4, lr, lsl #1]
 801e6e6:	9811      	ldr	r0, [sp, #68]	; 0x44
 801e6e8:	4401      	add	r1, r0
 801e6ea:	9812      	ldr	r0, [sp, #72]	; 0x48
 801e6ec:	f10e 0e01 	add.w	lr, lr, #1
 801e6f0:	4402      	add	r2, r0
 801e6f2:	e7db      	b.n	801e6ac <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x208>
 801e6f4:	b2f0      	uxtb	r0, r6
 801e6f6:	2e00      	cmp	r6, #0
 801e6f8:	d0f5      	beq.n	801e6e6 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 801e6fa:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 801e6fe:	fa1f f980 	uxth.w	r9, r0
 801e702:	ea4f 272c 	mov.w	r7, ip, asr #8
 801e706:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801e70a:	43c0      	mvns	r0, r0
 801e70c:	b2c0      	uxtb	r0, r0
 801e70e:	fb16 f609 	smulbb	r6, r6, r9
 801e712:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801e716:	fb07 6700 	mla	r7, r7, r0, r6
 801e71a:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 801e71e:	ea4f 06ec 	mov.w	r6, ip, asr #3
 801e722:	b2ed      	uxtb	r5, r5
 801e724:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801e728:	fa5f fc8c 	uxtb.w	ip, ip
 801e72c:	fb15 f509 	smulbb	r5, r5, r9
 801e730:	fb0c 5500 	mla	r5, ip, r0, r5
 801e734:	b2bf      	uxth	r7, r7
 801e736:	fb1a fa09 	smulbb	sl, sl, r9
 801e73a:	b2ad      	uxth	r5, r5
 801e73c:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801e740:	fb06 a600 	mla	r6, r6, r0, sl
 801e744:	1c78      	adds	r0, r7, #1
 801e746:	f105 0a01 	add.w	sl, r5, #1
 801e74a:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 801e74e:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801e752:	b2b6      	uxth	r6, r6
 801e754:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801e758:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801e75c:	ea4a 0707 	orr.w	r7, sl, r7
 801e760:	f106 0a01 	add.w	sl, r6, #1
 801e764:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801e768:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801e76c:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801e770:	ea47 070a 	orr.w	r7, r7, sl
 801e774:	f824 701e 	strh.w	r7, [r4, lr, lsl #1]
 801e778:	e7b5      	b.n	801e6e6 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 801e77a:	b005      	add	sp, #20
 801e77c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801e780:	fffff800 	.word	0xfffff800

0801e784 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801e784:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e788:	b087      	sub	sp, #28
 801e78a:	468b      	mov	fp, r1
 801e78c:	9815      	ldr	r0, [sp, #84]	; 0x54
 801e78e:	9203      	str	r2, [sp, #12]
 801e790:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801e794:	9204      	str	r2, [sp, #16]
 801e796:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 801e79a:	6841      	ldr	r1, [r0, #4]
 801e79c:	f8dd 9060 	ldr.w	r9, [sp, #96]	; 0x60
 801e7a0:	fb01 2404 	mla	r4, r1, r4, r2
 801e7a4:	6802      	ldr	r2, [r0, #0]
 801e7a6:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801e7aa:	f8d9 2008 	ldr.w	r2, [r9, #8]
 801e7ae:	3201      	adds	r2, #1
 801e7b0:	f022 0201 	bic.w	r2, r2, #1
 801e7b4:	9200      	str	r2, [sp, #0]
 801e7b6:	f8d9 2000 	ldr.w	r2, [r9]
 801e7ba:	9201      	str	r2, [sp, #4]
 801e7bc:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801e7c0:	f1bb 0f00 	cmp.w	fp, #0
 801e7c4:	dc03      	bgt.n	801e7ce <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801e7c6:	9a03      	ldr	r2, [sp, #12]
 801e7c8:	2a00      	cmp	r2, #0
 801e7ca:	f340 8169 	ble.w	801eaa0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 801e7ce:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801e7d0:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 801e7d4:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 801e7d8:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801e7dc:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801e7de:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801e7e2:	2b00      	cmp	r3, #0
 801e7e4:	dd0e      	ble.n	801e804 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 801e7e6:	1402      	asrs	r2, r0, #16
 801e7e8:	d405      	bmi.n	801e7f6 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801e7ea:	42ba      	cmp	r2, r7
 801e7ec:	da03      	bge.n	801e7f6 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801e7ee:	140a      	asrs	r2, r1, #16
 801e7f0:	d401      	bmi.n	801e7f6 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801e7f2:	42b2      	cmp	r2, r6
 801e7f4:	db07      	blt.n	801e806 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 801e7f6:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801e7f8:	4410      	add	r0, r2
 801e7fa:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801e7fc:	3b01      	subs	r3, #1
 801e7fe:	4411      	add	r1, r2
 801e800:	3402      	adds	r4, #2
 801e802:	e7ee      	b.n	801e7e2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 801e804:	d017      	beq.n	801e836 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 801e806:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801e808:	1e5a      	subs	r2, r3, #1
 801e80a:	fb05 0502 	mla	r5, r5, r2, r0
 801e80e:	142d      	asrs	r5, r5, #16
 801e810:	d409      	bmi.n	801e826 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801e812:	42bd      	cmp	r5, r7
 801e814:	da07      	bge.n	801e826 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801e816:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801e818:	fb05 1202 	mla	r2, r5, r2, r1
 801e81c:	1412      	asrs	r2, r2, #16
 801e81e:	d402      	bmi.n	801e826 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801e820:	42b2      	cmp	r2, r6
 801e822:	f2c0 80c7 	blt.w	801e9b4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x230>
 801e826:	2700      	movs	r7, #0
 801e828:	19da      	adds	r2, r3, r7
 801e82a:	2a00      	cmp	r2, #0
 801e82c:	dc3e      	bgt.n	801e8ac <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 801e82e:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801e832:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801e836:	f1bb 0f00 	cmp.w	fp, #0
 801e83a:	f340 8131 	ble.w	801eaa0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 801e83e:	ee30 0a04 	vadd.f32	s0, s0, s8
 801e842:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801e846:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801e84a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801e84c:	f1bb 0b01 	subs.w	fp, fp, #1
 801e850:	ee31 1a05 	vadd.f32	s2, s2, s10
 801e854:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801e858:	eeb0 6a62 	vmov.f32	s12, s5
 801e85c:	ee61 7a27 	vmul.f32	s15, s2, s15
 801e860:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801e864:	ee77 2a62 	vsub.f32	s5, s14, s5
 801e868:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801e86c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801e870:	eeb0 6a43 	vmov.f32	s12, s6
 801e874:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801e878:	ee12 2a90 	vmov	r2, s5
 801e87c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801e880:	fb92 f3f3 	sdiv	r3, r2, r3
 801e884:	ee13 2a10 	vmov	r2, s6
 801e888:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801e88c:	9313      	str	r3, [sp, #76]	; 0x4c
 801e88e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801e890:	fb92 f3f3 	sdiv	r3, r2, r3
 801e894:	9a03      	ldr	r2, [sp, #12]
 801e896:	9314      	str	r3, [sp, #80]	; 0x50
 801e898:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 801e89c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801e89e:	eeb0 3a67 	vmov.f32	s6, s15
 801e8a2:	bf08      	it	eq
 801e8a4:	4613      	moveq	r3, r2
 801e8a6:	eef0 2a47 	vmov.f32	s5, s14
 801e8aa:	e789      	b.n	801e7c0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801e8ac:	1405      	asrs	r5, r0, #16
 801e8ae:	d435      	bmi.n	801e91c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801e8b0:	f8d9 2008 	ldr.w	r2, [r9, #8]
 801e8b4:	42aa      	cmp	r2, r5
 801e8b6:	dd31      	ble.n	801e91c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801e8b8:	140e      	asrs	r6, r1, #16
 801e8ba:	d42f      	bmi.n	801e91c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801e8bc:	f8d9 200c 	ldr.w	r2, [r9, #12]
 801e8c0:	42b2      	cmp	r2, r6
 801e8c2:	dd2b      	ble.n	801e91c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801e8c4:	9a00      	ldr	r2, [sp, #0]
 801e8c6:	fb06 5502 	mla	r5, r6, r2, r5
 801e8ca:	086a      	lsrs	r2, r5, #1
 801e8cc:	9e01      	ldr	r6, [sp, #4]
 801e8ce:	5cb2      	ldrb	r2, [r6, r2]
 801e8d0:	07ee      	lsls	r6, r5, #31
 801e8d2:	bf54      	ite	pl
 801e8d4:	f002 020f 	andpl.w	r2, r2, #15
 801e8d8:	1112      	asrmi	r2, r2, #4
 801e8da:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801e8de:	b2d2      	uxtb	r2, r2
 801e8e0:	b1e2      	cbz	r2, 801e91c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801e8e2:	9d04      	ldr	r5, [sp, #16]
 801e8e4:	436a      	muls	r2, r5
 801e8e6:	1c55      	adds	r5, r2, #1
 801e8e8:	eb05 2222 	add.w	r2, r5, r2, asr #8
 801e8ec:	4d6e      	ldr	r5, [pc, #440]	; (801eaa8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
 801e8ee:	682d      	ldr	r5, [r5, #0]
 801e8f0:	1212      	asrs	r2, r2, #8
 801e8f2:	0a2e      	lsrs	r6, r5, #8
 801e8f4:	2aff      	cmp	r2, #255	; 0xff
 801e8f6:	9605      	str	r6, [sp, #20]
 801e8f8:	d116      	bne.n	801e928 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 801e8fa:	f06f 0201 	mvn.w	r2, #1
 801e8fe:	fb02 fc07 	mul.w	ip, r2, r7
 801e902:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 801e906:	096a      	lsrs	r2, r5, #5
 801e908:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801e90c:	f026 0607 	bic.w	r6, r6, #7
 801e910:	4316      	orrs	r6, r2
 801e912:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801e916:	432e      	orrs	r6, r5
 801e918:	f824 600c 	strh.w	r6, [r4, ip]
 801e91c:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801e91e:	4410      	add	r0, r2
 801e920:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801e922:	3f01      	subs	r7, #1
 801e924:	4411      	add	r1, r2
 801e926:	e77f      	b.n	801e828 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa4>
 801e928:	f06f 0601 	mvn.w	r6, #1
 801e92c:	437e      	muls	r6, r7
 801e92e:	fa1f fa82 	uxth.w	sl, r2
 801e932:	f834 8006 	ldrh.w	r8, [r4, r6]
 801e936:	9602      	str	r6, [sp, #8]
 801e938:	ea4f 2e28 	mov.w	lr, r8, asr #8
 801e93c:	f3c5 4c07 	ubfx	ip, r5, #16, #8
 801e940:	43d2      	mvns	r2, r2
 801e942:	b2d2      	uxtb	r2, r2
 801e944:	fb1c fc0a 	smulbb	ip, ip, sl
 801e948:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801e94c:	fb0e ce02 	mla	lr, lr, r2, ip
 801e950:	b2ed      	uxtb	r5, r5
 801e952:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 801e956:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801e95a:	f89d 6014 	ldrb.w	r6, [sp, #20]
 801e95e:	fa5f f888 	uxtb.w	r8, r8
 801e962:	fb15 f50a 	smulbb	r5, r5, sl
 801e966:	fb08 5502 	mla	r5, r8, r2, r5
 801e96a:	fa1f fe8e 	uxth.w	lr, lr
 801e96e:	fb16 f60a 	smulbb	r6, r6, sl
 801e972:	b2ad      	uxth	r5, r5
 801e974:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 801e978:	fb0c 6c02 	mla	ip, ip, r2, r6
 801e97c:	f10e 0201 	add.w	r2, lr, #1
 801e980:	1c6e      	adds	r6, r5, #1
 801e982:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 801e986:	eb06 2615 	add.w	r6, r6, r5, lsr #8
 801e98a:	fa1f fc8c 	uxth.w	ip, ip
 801e98e:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801e992:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 801e996:	ea46 0e0e 	orr.w	lr, r6, lr
 801e99a:	f10c 0601 	add.w	r6, ip, #1
 801e99e:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 801e9a2:	0976      	lsrs	r6, r6, #5
 801e9a4:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801e9a8:	9a02      	ldr	r2, [sp, #8]
 801e9aa:	ea4e 0e06 	orr.w	lr, lr, r6
 801e9ae:	f824 e002 	strh.w	lr, [r4, r2]
 801e9b2:	e7b3      	b.n	801e91c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801e9b4:	f04f 0800 	mov.w	r8, #0
 801e9b8:	eba3 0208 	sub.w	r2, r3, r8
 801e9bc:	2a00      	cmp	r2, #0
 801e9be:	f77f af36 	ble.w	801e82e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 801e9c2:	9e00      	ldr	r6, [sp, #0]
 801e9c4:	1402      	asrs	r2, r0, #16
 801e9c6:	140d      	asrs	r5, r1, #16
 801e9c8:	fb06 2505 	mla	r5, r6, r5, r2
 801e9cc:	086a      	lsrs	r2, r5, #1
 801e9ce:	9e01      	ldr	r6, [sp, #4]
 801e9d0:	5cb2      	ldrb	r2, [r6, r2]
 801e9d2:	07ed      	lsls	r5, r5, #31
 801e9d4:	bf54      	ite	pl
 801e9d6:	f002 020f 	andpl.w	r2, r2, #15
 801e9da:	1112      	asrmi	r2, r2, #4
 801e9dc:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801e9e0:	b2d2      	uxtb	r2, r2
 801e9e2:	b1c2      	cbz	r2, 801ea16 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x292>
 801e9e4:	9d04      	ldr	r5, [sp, #16]
 801e9e6:	436a      	muls	r2, r5
 801e9e8:	1c55      	adds	r5, r2, #1
 801e9ea:	eb05 2222 	add.w	r2, r5, r2, asr #8
 801e9ee:	4d2e      	ldr	r5, [pc, #184]	; (801eaa8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
 801e9f0:	1212      	asrs	r2, r2, #8
 801e9f2:	682e      	ldr	r6, [r5, #0]
 801e9f4:	2aff      	cmp	r2, #255	; 0xff
 801e9f6:	ea4f 2516 	mov.w	r5, r6, lsr #8
 801e9fa:	d113      	bne.n	801ea24 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 801e9fc:	0972      	lsrs	r2, r6, #5
 801e9fe:	f425 65ff 	bic.w	r5, r5, #2040	; 0x7f8
 801ea02:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801ea06:	f025 0507 	bic.w	r5, r5, #7
 801ea0a:	4315      	orrs	r5, r2
 801ea0c:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 801ea10:	4335      	orrs	r5, r6
 801ea12:	f824 5018 	strh.w	r5, [r4, r8, lsl #1]
 801ea16:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801ea18:	4410      	add	r0, r2
 801ea1a:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801ea1c:	f108 0801 	add.w	r8, r8, #1
 801ea20:	4411      	add	r1, r2
 801ea22:	e7c9      	b.n	801e9b8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801ea24:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 801ea28:	fa1f fa82 	uxth.w	sl, r2
 801ea2c:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801ea30:	f3c6 4707 	ubfx	r7, r6, #16, #8
 801ea34:	43d2      	mvns	r2, r2
 801ea36:	b2d2      	uxtb	r2, r2
 801ea38:	fb17 f70a 	smulbb	r7, r7, sl
 801ea3c:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801ea40:	fb0c 7c02 	mla	ip, ip, r2, r7
 801ea44:	b2f6      	uxtb	r6, r6
 801ea46:	ea4f 07ee 	mov.w	r7, lr, asr #3
 801ea4a:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801ea4e:	fa5f fe8e 	uxtb.w	lr, lr
 801ea52:	fb16 f60a 	smulbb	r6, r6, sl
 801ea56:	fb0e 6602 	mla	r6, lr, r2, r6
 801ea5a:	b2ed      	uxtb	r5, r5
 801ea5c:	fa1f fc8c 	uxth.w	ip, ip
 801ea60:	fb15 f50a 	smulbb	r5, r5, sl
 801ea64:	b2b6      	uxth	r6, r6
 801ea66:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801ea6a:	fb07 5702 	mla	r7, r7, r2, r5
 801ea6e:	f10c 0201 	add.w	r2, ip, #1
 801ea72:	1c75      	adds	r5, r6, #1
 801ea74:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 801ea78:	eb05 2516 	add.w	r5, r5, r6, lsr #8
 801ea7c:	b2bf      	uxth	r7, r7
 801ea7e:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801ea82:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801ea86:	ea45 0c0c 	orr.w	ip, r5, ip
 801ea8a:	1c7d      	adds	r5, r7, #1
 801ea8c:	eb05 2517 	add.w	r5, r5, r7, lsr #8
 801ea90:	096d      	lsrs	r5, r5, #5
 801ea92:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801ea96:	ea4c 0c05 	orr.w	ip, ip, r5
 801ea9a:	f824 c018 	strh.w	ip, [r4, r8, lsl #1]
 801ea9e:	e7ba      	b.n	801ea16 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x292>
 801eaa0:	b007      	add	sp, #28
 801eaa2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801eaa6:	bf00      	nop
 801eaa8:	20006c44 	.word	0x20006c44

0801eaac <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801eaac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801eab0:	b087      	sub	sp, #28
 801eab2:	f8df 830c 	ldr.w	r8, [pc, #780]	; 801edc0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x314>
 801eab6:	9815      	ldr	r0, [sp, #84]	; 0x54
 801eab8:	9205      	str	r2, [sp, #20]
 801eaba:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 801eabe:	9101      	str	r1, [sp, #4]
 801eac0:	6841      	ldr	r1, [r0, #4]
 801eac2:	f8dd b060 	ldr.w	fp, [sp, #96]	; 0x60
 801eac6:	fb01 2404 	mla	r4, r1, r4, r2
 801eaca:	6802      	ldr	r2, [r0, #0]
 801eacc:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801ead0:	f8db 2008 	ldr.w	r2, [fp, #8]
 801ead4:	3201      	adds	r2, #1
 801ead6:	f022 0201 	bic.w	r2, r2, #1
 801eada:	9202      	str	r2, [sp, #8]
 801eadc:	f8db 2000 	ldr.w	r2, [fp]
 801eae0:	9203      	str	r2, [sp, #12]
 801eae2:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801eae6:	9a01      	ldr	r2, [sp, #4]
 801eae8:	2a00      	cmp	r2, #0
 801eaea:	dc03      	bgt.n	801eaf4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801eaec:	9a05      	ldr	r2, [sp, #20]
 801eaee:	2a00      	cmp	r2, #0
 801eaf0:	f340 8162 	ble.w	801edb8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 801eaf4:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801eaf6:	f9bb 7008 	ldrsh.w	r7, [fp, #8]
 801eafa:	f9bb 600c 	ldrsh.w	r6, [fp, #12]
 801eafe:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801eb02:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801eb04:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801eb08:	2b00      	cmp	r3, #0
 801eb0a:	dd0e      	ble.n	801eb2a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801eb0c:	1402      	asrs	r2, r0, #16
 801eb0e:	d405      	bmi.n	801eb1c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801eb10:	42ba      	cmp	r2, r7
 801eb12:	da03      	bge.n	801eb1c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801eb14:	140a      	asrs	r2, r1, #16
 801eb16:	d401      	bmi.n	801eb1c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801eb18:	42b2      	cmp	r2, r6
 801eb1a:	db07      	blt.n	801eb2c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 801eb1c:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801eb1e:	4410      	add	r0, r2
 801eb20:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801eb22:	3b01      	subs	r3, #1
 801eb24:	4411      	add	r1, r2
 801eb26:	3402      	adds	r4, #2
 801eb28:	e7ee      	b.n	801eb08 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 801eb2a:	d017      	beq.n	801eb5c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 801eb2c:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801eb2e:	1e5a      	subs	r2, r3, #1
 801eb30:	fb05 0502 	mla	r5, r5, r2, r0
 801eb34:	142d      	asrs	r5, r5, #16
 801eb36:	d409      	bmi.n	801eb4c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801eb38:	42bd      	cmp	r5, r7
 801eb3a:	da07      	bge.n	801eb4c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801eb3c:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801eb3e:	fb05 1202 	mla	r2, r5, r2, r1
 801eb42:	1412      	asrs	r2, r2, #16
 801eb44:	d402      	bmi.n	801eb4c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801eb46:	42b2      	cmp	r2, r6
 801eb48:	f2c0 80c3 	blt.w	801ecd2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x226>
 801eb4c:	2500      	movs	r5, #0
 801eb4e:	195a      	adds	r2, r3, r5
 801eb50:	2a00      	cmp	r2, #0
 801eb52:	dc3f      	bgt.n	801ebd4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 801eb54:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801eb58:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801eb5c:	9b01      	ldr	r3, [sp, #4]
 801eb5e:	2b00      	cmp	r3, #0
 801eb60:	f340 812a 	ble.w	801edb8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 801eb64:	ee30 0a04 	vadd.f32	s0, s0, s8
 801eb68:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801eb6c:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801eb70:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801eb72:	ee31 1a05 	vadd.f32	s2, s2, s10
 801eb76:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801eb7a:	eeb0 6a62 	vmov.f32	s12, s5
 801eb7e:	ee61 7a27 	vmul.f32	s15, s2, s15
 801eb82:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801eb86:	ee77 2a62 	vsub.f32	s5, s14, s5
 801eb8a:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801eb8e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801eb92:	eeb0 6a43 	vmov.f32	s12, s6
 801eb96:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801eb9a:	ee12 2a90 	vmov	r2, s5
 801eb9e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801eba2:	fb92 f3f3 	sdiv	r3, r2, r3
 801eba6:	ee13 2a10 	vmov	r2, s6
 801ebaa:	9313      	str	r3, [sp, #76]	; 0x4c
 801ebac:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801ebae:	fb92 f3f3 	sdiv	r3, r2, r3
 801ebb2:	9314      	str	r3, [sp, #80]	; 0x50
 801ebb4:	9b01      	ldr	r3, [sp, #4]
 801ebb6:	9a05      	ldr	r2, [sp, #20]
 801ebb8:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801ebbc:	3b01      	subs	r3, #1
 801ebbe:	9301      	str	r3, [sp, #4]
 801ebc0:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 801ebc4:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801ebc6:	eeb0 3a67 	vmov.f32	s6, s15
 801ebca:	bf08      	it	eq
 801ebcc:	4613      	moveq	r3, r2
 801ebce:	eef0 2a47 	vmov.f32	s5, s14
 801ebd2:	e788      	b.n	801eae6 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801ebd4:	1406      	asrs	r6, r0, #16
 801ebd6:	d42c      	bmi.n	801ec32 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801ebd8:	f8db 2008 	ldr.w	r2, [fp, #8]
 801ebdc:	42b2      	cmp	r2, r6
 801ebde:	dd28      	ble.n	801ec32 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801ebe0:	140f      	asrs	r7, r1, #16
 801ebe2:	d426      	bmi.n	801ec32 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801ebe4:	f8db 200c 	ldr.w	r2, [fp, #12]
 801ebe8:	42ba      	cmp	r2, r7
 801ebea:	dd22      	ble.n	801ec32 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801ebec:	9a02      	ldr	r2, [sp, #8]
 801ebee:	fb07 6602 	mla	r6, r7, r2, r6
 801ebf2:	0872      	lsrs	r2, r6, #1
 801ebf4:	9f03      	ldr	r7, [sp, #12]
 801ebf6:	5cba      	ldrb	r2, [r7, r2]
 801ebf8:	07f6      	lsls	r6, r6, #31
 801ebfa:	bf54      	ite	pl
 801ebfc:	f002 020f 	andpl.w	r2, r2, #15
 801ec00:	1112      	asrmi	r2, r2, #4
 801ec02:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801ec06:	b2d2      	uxtb	r2, r2
 801ec08:	2aff      	cmp	r2, #255	; 0xff
 801ec0a:	d118      	bne.n	801ec3e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x192>
 801ec0c:	f8d8 2000 	ldr.w	r2, [r8]
 801ec10:	f06f 0601 	mvn.w	r6, #1
 801ec14:	fb06 f705 	mul.w	r7, r6, r5
 801ec18:	f2a6 76fe 	subw	r6, r6, #2046	; 0x7fe
 801ec1c:	ea06 2c12 	and.w	ip, r6, r2, lsr #8
 801ec20:	0956      	lsrs	r6, r2, #5
 801ec22:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801ec26:	ea4c 0606 	orr.w	r6, ip, r6
 801ec2a:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801ec2e:	4316      	orrs	r6, r2
 801ec30:	53e6      	strh	r6, [r4, r7]
 801ec32:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801ec34:	4410      	add	r0, r2
 801ec36:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801ec38:	3d01      	subs	r5, #1
 801ec3a:	4411      	add	r1, r2
 801ec3c:	e787      	b.n	801eb4e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801ec3e:	2a00      	cmp	r2, #0
 801ec40:	d0f7      	beq.n	801ec32 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801ec42:	f06f 0601 	mvn.w	r6, #1
 801ec46:	436e      	muls	r6, r5
 801ec48:	f8d8 c000 	ldr.w	ip, [r8]
 801ec4c:	f834 e006 	ldrh.w	lr, [r4, r6]
 801ec50:	9604      	str	r6, [sp, #16]
 801ec52:	fa1f f982 	uxth.w	r9, r2
 801ec56:	ea4f 272e 	mov.w	r7, lr, asr #8
 801ec5a:	f3cc 4607 	ubfx	r6, ip, #16, #8
 801ec5e:	43d2      	mvns	r2, r2
 801ec60:	b2d2      	uxtb	r2, r2
 801ec62:	fb16 f609 	smulbb	r6, r6, r9
 801ec66:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801ec6a:	fb07 6702 	mla	r7, r7, r2, r6
 801ec6e:	f3cc 2a07 	ubfx	sl, ip, #8, #8
 801ec72:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801ec76:	fa5f fc8c 	uxtb.w	ip, ip
 801ec7a:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801ec7e:	fa5f fe8e 	uxtb.w	lr, lr
 801ec82:	fb1c fc09 	smulbb	ip, ip, r9
 801ec86:	fb0e cc02 	mla	ip, lr, r2, ip
 801ec8a:	b2bf      	uxth	r7, r7
 801ec8c:	fb1a fa09 	smulbb	sl, sl, r9
 801ec90:	fa1f fc8c 	uxth.w	ip, ip
 801ec94:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801ec98:	fb06 a602 	mla	r6, r6, r2, sl
 801ec9c:	1c7a      	adds	r2, r7, #1
 801ec9e:	f10c 0a01 	add.w	sl, ip, #1
 801eca2:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 801eca6:	eb0a 2a1c 	add.w	sl, sl, ip, lsr #8
 801ecaa:	b2b6      	uxth	r6, r6
 801ecac:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801ecb0:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801ecb4:	ea4a 0707 	orr.w	r7, sl, r7
 801ecb8:	f106 0a01 	add.w	sl, r6, #1
 801ecbc:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801ecc0:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801ecc4:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801ecc8:	9a04      	ldr	r2, [sp, #16]
 801ecca:	ea47 070a 	orr.w	r7, r7, sl
 801ecce:	52a7      	strh	r7, [r4, r2]
 801ecd0:	e7af      	b.n	801ec32 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801ecd2:	f04f 0e00 	mov.w	lr, #0
 801ecd6:	eba3 020e 	sub.w	r2, r3, lr
 801ecda:	2a00      	cmp	r2, #0
 801ecdc:	f77f af3a 	ble.w	801eb54 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 801ece0:	9e02      	ldr	r6, [sp, #8]
 801ece2:	1402      	asrs	r2, r0, #16
 801ece4:	140d      	asrs	r5, r1, #16
 801ece6:	fb06 2505 	mla	r5, r6, r5, r2
 801ecea:	086a      	lsrs	r2, r5, #1
 801ecec:	9e03      	ldr	r6, [sp, #12]
 801ecee:	5cb2      	ldrb	r2, [r6, r2]
 801ecf0:	07ed      	lsls	r5, r5, #31
 801ecf2:	bf54      	ite	pl
 801ecf4:	f002 020f 	andpl.w	r2, r2, #15
 801ecf8:	1112      	asrmi	r2, r2, #4
 801ecfa:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801ecfe:	b2d2      	uxtb	r2, r2
 801ed00:	2aff      	cmp	r2, #255	; 0xff
 801ed02:	d115      	bne.n	801ed30 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x284>
 801ed04:	f8d8 5000 	ldr.w	r5, [r8]
 801ed08:	f6a2 02ff 	subw	r2, r2, #2303	; 0x8ff
 801ed0c:	ea02 2615 	and.w	r6, r2, r5, lsr #8
 801ed10:	096a      	lsrs	r2, r5, #5
 801ed12:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801ed16:	4332      	orrs	r2, r6
 801ed18:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801ed1c:	432a      	orrs	r2, r5
 801ed1e:	f824 201e 	strh.w	r2, [r4, lr, lsl #1]
 801ed22:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801ed24:	4410      	add	r0, r2
 801ed26:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801ed28:	f10e 0e01 	add.w	lr, lr, #1
 801ed2c:	4411      	add	r1, r2
 801ed2e:	e7d2      	b.n	801ecd6 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 801ed30:	2a00      	cmp	r2, #0
 801ed32:	d0f6      	beq.n	801ed22 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 801ed34:	f8d8 7000 	ldr.w	r7, [r8]
 801ed38:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 801ed3c:	fa1f f982 	uxth.w	r9, r2
 801ed40:	ea4f 262c 	mov.w	r6, ip, asr #8
 801ed44:	f3c7 4507 	ubfx	r5, r7, #16, #8
 801ed48:	43d2      	mvns	r2, r2
 801ed4a:	b2d2      	uxtb	r2, r2
 801ed4c:	fb15 f509 	smulbb	r5, r5, r9
 801ed50:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801ed54:	fb06 5602 	mla	r6, r6, r2, r5
 801ed58:	f3c7 2a07 	ubfx	sl, r7, #8, #8
 801ed5c:	ea4f 05ec 	mov.w	r5, ip, asr #3
 801ed60:	b2ff      	uxtb	r7, r7
 801ed62:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801ed66:	fa5f fc8c 	uxtb.w	ip, ip
 801ed6a:	fb17 f709 	smulbb	r7, r7, r9
 801ed6e:	fb0c 7702 	mla	r7, ip, r2, r7
 801ed72:	b2b6      	uxth	r6, r6
 801ed74:	fb1a fa09 	smulbb	sl, sl, r9
 801ed78:	b2bf      	uxth	r7, r7
 801ed7a:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801ed7e:	fb05 a502 	mla	r5, r5, r2, sl
 801ed82:	1c72      	adds	r2, r6, #1
 801ed84:	f107 0a01 	add.w	sl, r7, #1
 801ed88:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 801ed8c:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 801ed90:	b2ad      	uxth	r5, r5
 801ed92:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801ed96:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 801ed9a:	ea4a 0606 	orr.w	r6, sl, r6
 801ed9e:	f105 0a01 	add.w	sl, r5, #1
 801eda2:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801eda6:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801edaa:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801edae:	ea46 060a 	orr.w	r6, r6, sl
 801edb2:	f824 601e 	strh.w	r6, [r4, lr, lsl #1]
 801edb6:	e7b4      	b.n	801ed22 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 801edb8:	b007      	add	sp, #28
 801edba:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801edbe:	bf00      	nop
 801edc0:	20006c44 	.word	0x20006c44

0801edc4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW9D1Ev>:
 801edc4:	4770      	bx	lr

0801edc6 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLED1Ev>:
 801edc6:	4770      	bx	lr

0801edc8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L4D1Ev>:
 801edc8:	4770      	bx	lr

0801edca <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD1Ev>:
 801edca:	4770      	bx	lr

0801edcc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD1Ev>:
 801edcc:	4770      	bx	lr

0801edce <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD1Ev>:
 801edce:	4770      	bx	lr

0801edd0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD1Ev>:
 801edd0:	4770      	bx	lr

0801edd2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 801edd2:	4770      	bx	lr

0801edd4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 801edd4:	4770      	bx	lr

0801edd6 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 801edd6:	4770      	bx	lr

0801edd8 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 801edd8:	4770      	bx	lr

0801edda <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 801edda:	4770      	bx	lr

0801eddc <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 801eddc:	4770      	bx	lr

0801edde <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 801edde:	4770      	bx	lr

0801ede0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD1Ev>:
 801ede0:	4770      	bx	lr

0801ede2 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 801ede2:	4770      	bx	lr

0801ede4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 801ede4:	4770      	bx	lr

0801ede6 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 801ede6:	4770      	bx	lr

0801ede8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD1Ev>:
 801ede8:	4770      	bx	lr

0801edea <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 801edea:	4770      	bx	lr

0801edec <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 801edec:	4770      	bx	lr

0801edee <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 801edee:	4770      	bx	lr

0801edf0 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 801edf0:	4770      	bx	lr

0801edf2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD1Ev>:
 801edf2:	4770      	bx	lr

0801edf4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD1Ev>:
 801edf4:	4770      	bx	lr

0801edf6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD1Ev>:
 801edf6:	4770      	bx	lr

0801edf8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD1Ev>:
 801edf8:	4770      	bx	lr

0801edfa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 801edfa:	4770      	bx	lr

0801edfc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 801edfc:	4770      	bx	lr

0801edfe <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 801edfe:	4770      	bx	lr

0801ee00 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 801ee00:	4770      	bx	lr

0801ee02 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t>:
 801ee02:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801ee06:	b088      	sub	sp, #32
 801ee08:	ac08      	add	r4, sp, #32
 801ee0a:	4606      	mov	r6, r0
 801ee0c:	f824 3d0c 	strh.w	r3, [r4, #-12]!
 801ee10:	4620      	mov	r0, r4
 801ee12:	4688      	mov	r8, r1
 801ee14:	4691      	mov	r9, r2
 801ee16:	f7fd fc63 	bl	801c6e0 <_ZNK8touchgfx6Bitmap7getDataEv>
 801ee1a:	6833      	ldr	r3, [r6, #0]
 801ee1c:	4605      	mov	r5, r0
 801ee1e:	4620      	mov	r0, r4
 801ee20:	699f      	ldr	r7, [r3, #24]
 801ee22:	f7fd fb71 	bl	801c508 <_ZNK8touchgfx6Bitmap8getWidthEv>
 801ee26:	4682      	mov	sl, r0
 801ee28:	4620      	mov	r0, r4
 801ee2a:	f7fd fba1 	bl	801c570 <_ZNK8touchgfx6Bitmap9getHeightEv>
 801ee2e:	9500      	str	r5, [sp, #0]
 801ee30:	e9cd a001 	strd	sl, r0, [sp, #4]
 801ee34:	464b      	mov	r3, r9
 801ee36:	a806      	add	r0, sp, #24
 801ee38:	4642      	mov	r2, r8
 801ee3a:	4631      	mov	r1, r6
 801ee3c:	47b8      	blx	r7
 801ee3e:	4628      	mov	r0, r5
 801ee40:	b008      	add	sp, #32
 801ee42:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
	...

0801ee48 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE>:
 801ee48:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 801ee4c:	2300      	movs	r3, #0
 801ee4e:	9300      	str	r3, [sp, #0]
 801ee50:	4b3d      	ldr	r3, [pc, #244]	; (801ef48 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x100>)
 801ee52:	781b      	ldrb	r3, [r3, #0]
 801ee54:	2b00      	cmp	r3, #0
 801ee56:	d137      	bne.n	801eec8 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x80>
 801ee58:	4a3c      	ldr	r2, [pc, #240]	; (801ef4c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 801ee5a:	f9b2 2000 	ldrsh.w	r2, [r2]
 801ee5e:	f8ad 2004 	strh.w	r2, [sp, #4]
 801ee62:	2b00      	cmp	r3, #0
 801ee64:	d132      	bne.n	801eecc <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x84>
 801ee66:	4b3a      	ldr	r3, [pc, #232]	; (801ef50 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
 801ee68:	f9b3 3000 	ldrsh.w	r3, [r3]
 801ee6c:	6808      	ldr	r0, [r1, #0]
 801ee6e:	6849      	ldr	r1, [r1, #4]
 801ee70:	f8ad 3006 	strh.w	r3, [sp, #6]
 801ee74:	ac02      	add	r4, sp, #8
 801ee76:	ab02      	add	r3, sp, #8
 801ee78:	c303      	stmia	r3!, {r0, r1}
 801ee7a:	4669      	mov	r1, sp
 801ee7c:	4620      	mov	r0, r4
 801ee7e:	f7f9 fa07 	bl	8018290 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801ee82:	4668      	mov	r0, sp
 801ee84:	f7f9 f9dc 	bl	8018240 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801ee88:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 801ee8c:	f8bd 2000 	ldrh.w	r2, [sp]
 801ee90:	4d30      	ldr	r5, [pc, #192]	; (801ef54 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x10c>)
 801ee92:	4413      	add	r3, r2
 801ee94:	f8ad 3008 	strh.w	r3, [sp, #8]
 801ee98:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 801ee9c:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 801eea0:	6828      	ldr	r0, [r5, #0]
 801eea2:	4413      	add	r3, r2
 801eea4:	f8ad 300a 	strh.w	r3, [sp, #10]
 801eea8:	6803      	ldr	r3, [r0, #0]
 801eeaa:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801eeac:	4798      	blx	r3
 801eeae:	f010 0f01 	tst.w	r0, #1
 801eeb2:	462f      	mov	r7, r5
 801eeb4:	d00c      	beq.n	801eed0 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x88>
 801eeb6:	6828      	ldr	r0, [r5, #0]
 801eeb8:	6803      	ldr	r3, [r0, #0]
 801eeba:	e894 0006 	ldmia.w	r4, {r1, r2}
 801eebe:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 801eec0:	4798      	blx	r3
 801eec2:	b004      	add	sp, #16
 801eec4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801eec8:	4a21      	ldr	r2, [pc, #132]	; (801ef50 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
 801eeca:	e7c6      	b.n	801ee5a <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x12>
 801eecc:	4b1f      	ldr	r3, [pc, #124]	; (801ef4c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 801eece:	e7cb      	b.n	801ee68 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x20>
 801eed0:	6838      	ldr	r0, [r7, #0]
 801eed2:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
 801eed6:	6803      	ldr	r3, [r0, #0]
 801eed8:	f9bd 500e 	ldrsh.w	r5, [sp, #14]
 801eedc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801eede:	4798      	blx	r3
 801eee0:	f9bd 3008 	ldrsh.w	r3, [sp, #8]
 801eee4:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 801eee8:	f8bd 6004 	ldrh.w	r6, [sp, #4]
 801eeec:	fb16 3602 	smlabb	r6, r6, r2, r3
 801eef0:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 801eef4:	6838      	ldr	r0, [r7, #0]
 801eef6:	6803      	ldr	r3, [r0, #0]
 801eef8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801eefa:	4798      	blx	r3
 801eefc:	4a13      	ldr	r2, [pc, #76]	; (801ef4c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 801eefe:	f9bd 400a 	ldrsh.w	r4, [sp, #10]
 801ef02:	8813      	ldrh	r3, [r2, #0]
 801ef04:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 801ef08:	fb03 1404 	mla	r4, r3, r4, r1
 801ef0c:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 801ef10:	435d      	muls	r5, r3
 801ef12:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 801ef16:	ea4f 0848 	mov.w	r8, r8, lsl #1
 801ef1a:	4691      	mov	r9, r2
 801ef1c:	6838      	ldr	r0, [r7, #0]
 801ef1e:	42ac      	cmp	r4, r5
 801ef20:	6803      	ldr	r3, [r0, #0]
 801ef22:	d20e      	bcs.n	801ef42 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xfa>
 801ef24:	f8d3 a034 	ldr.w	sl, [r3, #52]	; 0x34
 801ef28:	4632      	mov	r2, r6
 801ef2a:	4643      	mov	r3, r8
 801ef2c:	4621      	mov	r1, r4
 801ef2e:	47d0      	blx	sl
 801ef30:	f8b9 3000 	ldrh.w	r3, [r9]
 801ef34:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801ef38:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 801ef3c:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 801ef40:	e7ec      	b.n	801ef1c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xd4>
 801ef42:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801ef44:	4798      	blx	r3
 801ef46:	e7bc      	b.n	801eec2 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x7a>
 801ef48:	20006c2c 	.word	0x20006c2c
 801ef4c:	20006c2e 	.word	0x20006c2e
 801ef50:	20006c30 	.word	0x20006c30
 801ef54:	20006c34 	.word	0x20006c34

0801ef58 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb>:
 801ef58:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ef5c:	b08b      	sub	sp, #44	; 0x2c
 801ef5e:	460f      	mov	r7, r1
 801ef60:	f89d b050 	ldrb.w	fp, [sp, #80]	; 0x50
 801ef64:	f89d 4054 	ldrb.w	r4, [sp, #84]	; 0x54
 801ef68:	4616      	mov	r6, r2
 801ef6a:	f1bb 0f00 	cmp.w	fp, #0
 801ef6e:	d04a      	beq.n	801f006 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xae>
 801ef70:	6810      	ldr	r0, [r2, #0]
 801ef72:	6851      	ldr	r1, [r2, #4]
 801ef74:	ad06      	add	r5, sp, #24
 801ef76:	c503      	stmia	r5!, {r0, r1}
 801ef78:	6818      	ldr	r0, [r3, #0]
 801ef7a:	6859      	ldr	r1, [r3, #4]
 801ef7c:	ad08      	add	r5, sp, #32
 801ef7e:	c503      	stmia	r5!, {r0, r1}
 801ef80:	a806      	add	r0, sp, #24
 801ef82:	f7f9 f95d 	bl	8018240 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801ef86:	4631      	mov	r1, r6
 801ef88:	a808      	add	r0, sp, #32
 801ef8a:	f7f9 f981 	bl	8018290 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801ef8e:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 801ef92:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 801ef96:	f8bd 601c 	ldrh.w	r6, [sp, #28]
 801ef9a:	f9bd 8024 	ldrsh.w	r8, [sp, #36]	; 0x24
 801ef9e:	f9bd 5026 	ldrsh.w	r5, [sp, #38]	; 0x26
 801efa2:	fb16 2103 	smlabb	r1, r6, r3, r2
 801efa6:	eb07 0641 	add.w	r6, r7, r1, lsl #1
 801efaa:	f8bd 1018 	ldrh.w	r1, [sp, #24]
 801efae:	4f5f      	ldr	r7, [pc, #380]	; (801f12c <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 801efb0:	440a      	add	r2, r1
 801efb2:	f8ad 2020 	strh.w	r2, [sp, #32]
 801efb6:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 801efba:	6838      	ldr	r0, [r7, #0]
 801efbc:	4413      	add	r3, r2
 801efbe:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 801efc2:	6803      	ldr	r3, [r0, #0]
 801efc4:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801efc6:	4798      	blx	r3
 801efc8:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 801efcc:	46b9      	mov	r9, r7
 801efce:	d11d      	bne.n	801f00c <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xb4>
 801efd0:	b9fc      	cbnz	r4, 801f012 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
 801efd2:	f010 0f01 	tst.w	r0, #1
 801efd6:	d01c      	beq.n	801f012 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
 801efd8:	f8d9 0000 	ldr.w	r0, [r9]
 801efdc:	f8bd 3022 	ldrh.w	r3, [sp, #34]	; 0x22
 801efe0:	6801      	ldr	r1, [r0, #0]
 801efe2:	f8cd b00c 	str.w	fp, [sp, #12]
 801efe6:	2700      	movs	r7, #0
 801efe8:	e9cd 4704 	strd	r4, r7, [sp, #16]
 801efec:	f8bd 401c 	ldrh.w	r4, [sp, #28]
 801eff0:	9402      	str	r4, [sp, #8]
 801eff2:	b2ad      	uxth	r5, r5
 801eff4:	fa1f f488 	uxth.w	r4, r8
 801eff8:	9501      	str	r5, [sp, #4]
 801effa:	9400      	str	r4, [sp, #0]
 801effc:	6c4c      	ldr	r4, [r1, #68]	; 0x44
 801effe:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 801f002:	4631      	mov	r1, r6
 801f004:	47a0      	blx	r4
 801f006:	b00b      	add	sp, #44	; 0x2c
 801f008:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801f00c:	f010 0f04 	tst.w	r0, #4
 801f010:	e7e1      	b.n	801efd6 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x7e>
 801f012:	f8d9 0000 	ldr.w	r0, [r9]
 801f016:	6803      	ldr	r3, [r0, #0]
 801f018:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801f01a:	4798      	blx	r3
 801f01c:	4b44      	ldr	r3, [pc, #272]	; (801f130 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d8>)
 801f01e:	f9bd 4022 	ldrsh.w	r4, [sp, #34]	; 0x22
 801f022:	881a      	ldrh	r2, [r3, #0]
 801f024:	f9bd 1020 	ldrsh.w	r1, [sp, #32]
 801f028:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 801f02c:	fb02 1404 	mla	r4, r2, r4, r1
 801f030:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 801f034:	469a      	mov	sl, r3
 801f036:	fb05 f502 	mul.w	r5, r5, r2
 801f03a:	ea4f 0748 	mov.w	r7, r8, lsl #1
 801f03e:	d059      	beq.n	801f0f4 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x19c>
 801f040:	f1cb 09ff 	rsb	r9, fp, #255	; 0xff
 801f044:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 801f048:	fa1f f28b 	uxth.w	r2, fp
 801f04c:	fa1f f989 	uxth.w	r9, r9
 801f050:	469e      	mov	lr, r3
 801f052:	42ac      	cmp	r4, r5
 801f054:	d264      	bcs.n	801f120 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
 801f056:	eb04 0a07 	add.w	sl, r4, r7
 801f05a:	4554      	cmp	r4, sl
 801f05c:	d23d      	bcs.n	801f0da <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x182>
 801f05e:	8821      	ldrh	r1, [r4, #0]
 801f060:	f836 3b02 	ldrh.w	r3, [r6], #2
 801f064:	1208      	asrs	r0, r1, #8
 801f066:	ea4f 2c23 	mov.w	ip, r3, asr #8
 801f06a:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801f06e:	fb10 f009 	smulbb	r0, r0, r9
 801f072:	ea4f 0be1 	mov.w	fp, r1, asr #3
 801f076:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801f07a:	00c9      	lsls	r1, r1, #3
 801f07c:	fb0c 0c02 	mla	ip, ip, r2, r0
 801f080:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 801f084:	10d8      	asrs	r0, r3, #3
 801f086:	b2c9      	uxtb	r1, r1
 801f088:	00db      	lsls	r3, r3, #3
 801f08a:	fa1f fc8c 	uxth.w	ip, ip
 801f08e:	fb1b fb09 	smulbb	fp, fp, r9
 801f092:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801f096:	b2db      	uxtb	r3, r3
 801f098:	fb11 f109 	smulbb	r1, r1, r9
 801f09c:	fb00 b002 	mla	r0, r0, r2, fp
 801f0a0:	fb03 1302 	mla	r3, r3, r2, r1
 801f0a4:	f10c 0b01 	add.w	fp, ip, #1
 801f0a8:	b29b      	uxth	r3, r3
 801f0aa:	eb0b 2c1c 	add.w	ip, fp, ip, lsr #8
 801f0ae:	b280      	uxth	r0, r0
 801f0b0:	f40c 4b78 	and.w	fp, ip, #63488	; 0xf800
 801f0b4:	f103 0c01 	add.w	ip, r3, #1
 801f0b8:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 801f0bc:	1c43      	adds	r3, r0, #1
 801f0be:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801f0c2:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801f0c6:	0940      	lsrs	r0, r0, #5
 801f0c8:	ea4c 0c0b 	orr.w	ip, ip, fp
 801f0cc:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801f0d0:	ea4c 0c00 	orr.w	ip, ip, r0
 801f0d4:	f824 cb02 	strh.w	ip, [r4], #2
 801f0d8:	e7bf      	b.n	801f05a <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x102>
 801f0da:	f8be 3000 	ldrh.w	r3, [lr]
 801f0de:	eba3 0308 	sub.w	r3, r3, r8
 801f0e2:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801f0e6:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 801f0ea:	eba3 0308 	sub.w	r3, r3, r8
 801f0ee:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 801f0f2:	e7ae      	b.n	801f052 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xfa>
 801f0f4:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 801f0f8:	f8d9 0000 	ldr.w	r0, [r9]
 801f0fc:	42ac      	cmp	r4, r5
 801f0fe:	6803      	ldr	r3, [r0, #0]
 801f100:	d20e      	bcs.n	801f120 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
 801f102:	f8d3 8034 	ldr.w	r8, [r3, #52]	; 0x34
 801f106:	4632      	mov	r2, r6
 801f108:	463b      	mov	r3, r7
 801f10a:	4621      	mov	r1, r4
 801f10c:	47c0      	blx	r8
 801f10e:	f8ba 3000 	ldrh.w	r3, [sl]
 801f112:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801f116:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 801f11a:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 801f11e:	e7eb      	b.n	801f0f8 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1a0>
 801f120:	4b02      	ldr	r3, [pc, #8]	; (801f12c <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 801f122:	6818      	ldr	r0, [r3, #0]
 801f124:	6803      	ldr	r3, [r0, #0]
 801f126:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801f128:	4798      	blx	r3
 801f12a:	e76c      	b.n	801f006 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xae>
 801f12c:	20006c34 	.word	0x20006c34
 801f130:	20006c2e 	.word	0x20006c2e

0801f134 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L4D0Ev>:
 801f134:	b510      	push	{r4, lr}
 801f136:	2104      	movs	r1, #4
 801f138:	4604      	mov	r4, r0
 801f13a:	f00b f90e 	bl	802a35a <_ZdlPvj>
 801f13e:	4620      	mov	r0, r4
 801f140:	bd10      	pop	{r4, pc}

0801f142 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLED0Ev>:
 801f142:	b510      	push	{r4, lr}
 801f144:	2104      	movs	r1, #4
 801f146:	4604      	mov	r4, r0
 801f148:	f00b f907 	bl	802a35a <_ZdlPvj>
 801f14c:	4620      	mov	r0, r4
 801f14e:	bd10      	pop	{r4, pc}

0801f150 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW9D0Ev>:
 801f150:	b510      	push	{r4, lr}
 801f152:	f640 0144 	movw	r1, #2116	; 0x844
 801f156:	4604      	mov	r4, r0
 801f158:	f00b f8ff 	bl	802a35a <_ZdlPvj>
 801f15c:	4620      	mov	r0, r4
 801f15e:	bd10      	pop	{r4, pc}

0801f160 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 801f160:	b510      	push	{r4, lr}
 801f162:	2104      	movs	r1, #4
 801f164:	4604      	mov	r4, r0
 801f166:	f00b f8f8 	bl	802a35a <_ZdlPvj>
 801f16a:	4620      	mov	r0, r4
 801f16c:	bd10      	pop	{r4, pc}

0801f16e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 801f16e:	b510      	push	{r4, lr}
 801f170:	2104      	movs	r1, #4
 801f172:	4604      	mov	r4, r0
 801f174:	f00b f8f1 	bl	802a35a <_ZdlPvj>
 801f178:	4620      	mov	r0, r4
 801f17a:	bd10      	pop	{r4, pc}

0801f17c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 801f17c:	b510      	push	{r4, lr}
 801f17e:	2104      	movs	r1, #4
 801f180:	4604      	mov	r4, r0
 801f182:	f00b f8ea 	bl	802a35a <_ZdlPvj>
 801f186:	4620      	mov	r0, r4
 801f188:	bd10      	pop	{r4, pc}

0801f18a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 801f18a:	b510      	push	{r4, lr}
 801f18c:	2104      	movs	r1, #4
 801f18e:	4604      	mov	r4, r0
 801f190:	f00b f8e3 	bl	802a35a <_ZdlPvj>
 801f194:	4620      	mov	r0, r4
 801f196:	bd10      	pop	{r4, pc}

0801f198 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD0Ev>:
 801f198:	b510      	push	{r4, lr}
 801f19a:	2104      	movs	r1, #4
 801f19c:	4604      	mov	r4, r0
 801f19e:	f00b f8dc 	bl	802a35a <_ZdlPvj>
 801f1a2:	4620      	mov	r0, r4
 801f1a4:	bd10      	pop	{r4, pc}

0801f1a6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD0Ev>:
 801f1a6:	b510      	push	{r4, lr}
 801f1a8:	2104      	movs	r1, #4
 801f1aa:	4604      	mov	r4, r0
 801f1ac:	f00b f8d5 	bl	802a35a <_ZdlPvj>
 801f1b0:	4620      	mov	r0, r4
 801f1b2:	bd10      	pop	{r4, pc}

0801f1b4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD0Ev>:
 801f1b4:	b510      	push	{r4, lr}
 801f1b6:	2104      	movs	r1, #4
 801f1b8:	4604      	mov	r4, r0
 801f1ba:	f00b f8ce 	bl	802a35a <_ZdlPvj>
 801f1be:	4620      	mov	r0, r4
 801f1c0:	bd10      	pop	{r4, pc}

0801f1c2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD0Ev>:
 801f1c2:	b510      	push	{r4, lr}
 801f1c4:	2104      	movs	r1, #4
 801f1c6:	4604      	mov	r4, r0
 801f1c8:	f00b f8c7 	bl	802a35a <_ZdlPvj>
 801f1cc:	4620      	mov	r0, r4
 801f1ce:	bd10      	pop	{r4, pc}

0801f1d0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 801f1d0:	b510      	push	{r4, lr}
 801f1d2:	2104      	movs	r1, #4
 801f1d4:	4604      	mov	r4, r0
 801f1d6:	f00b f8c0 	bl	802a35a <_ZdlPvj>
 801f1da:	4620      	mov	r0, r4
 801f1dc:	bd10      	pop	{r4, pc}

0801f1de <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 801f1de:	b510      	push	{r4, lr}
 801f1e0:	2104      	movs	r1, #4
 801f1e2:	4604      	mov	r4, r0
 801f1e4:	f00b f8b9 	bl	802a35a <_ZdlPvj>
 801f1e8:	4620      	mov	r0, r4
 801f1ea:	bd10      	pop	{r4, pc}

0801f1ec <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 801f1ec:	b510      	push	{r4, lr}
 801f1ee:	2104      	movs	r1, #4
 801f1f0:	4604      	mov	r4, r0
 801f1f2:	f00b f8b2 	bl	802a35a <_ZdlPvj>
 801f1f6:	4620      	mov	r0, r4
 801f1f8:	bd10      	pop	{r4, pc}

0801f1fa <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 801f1fa:	b510      	push	{r4, lr}
 801f1fc:	2104      	movs	r1, #4
 801f1fe:	4604      	mov	r4, r0
 801f200:	f00b f8ab 	bl	802a35a <_ZdlPvj>
 801f204:	4620      	mov	r0, r4
 801f206:	bd10      	pop	{r4, pc}

0801f208 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 801f208:	b510      	push	{r4, lr}
 801f20a:	2104      	movs	r1, #4
 801f20c:	4604      	mov	r4, r0
 801f20e:	f00b f8a4 	bl	802a35a <_ZdlPvj>
 801f212:	4620      	mov	r0, r4
 801f214:	bd10      	pop	{r4, pc}

0801f216 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 801f216:	b510      	push	{r4, lr}
 801f218:	2104      	movs	r1, #4
 801f21a:	4604      	mov	r4, r0
 801f21c:	f00b f89d 	bl	802a35a <_ZdlPvj>
 801f220:	4620      	mov	r0, r4
 801f222:	bd10      	pop	{r4, pc}

0801f224 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 801f224:	b510      	push	{r4, lr}
 801f226:	2104      	movs	r1, #4
 801f228:	4604      	mov	r4, r0
 801f22a:	f00b f896 	bl	802a35a <_ZdlPvj>
 801f22e:	4620      	mov	r0, r4
 801f230:	bd10      	pop	{r4, pc}

0801f232 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD0Ev>:
 801f232:	b510      	push	{r4, lr}
 801f234:	2104      	movs	r1, #4
 801f236:	4604      	mov	r4, r0
 801f238:	f00b f88f 	bl	802a35a <_ZdlPvj>
 801f23c:	4620      	mov	r0, r4
 801f23e:	bd10      	pop	{r4, pc}

0801f240 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 801f240:	b510      	push	{r4, lr}
 801f242:	2104      	movs	r1, #4
 801f244:	4604      	mov	r4, r0
 801f246:	f00b f888 	bl	802a35a <_ZdlPvj>
 801f24a:	4620      	mov	r0, r4
 801f24c:	bd10      	pop	{r4, pc}

0801f24e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 801f24e:	b510      	push	{r4, lr}
 801f250:	2104      	movs	r1, #4
 801f252:	4604      	mov	r4, r0
 801f254:	f00b f881 	bl	802a35a <_ZdlPvj>
 801f258:	4620      	mov	r0, r4
 801f25a:	bd10      	pop	{r4, pc}

0801f25c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 801f25c:	b510      	push	{r4, lr}
 801f25e:	2104      	movs	r1, #4
 801f260:	4604      	mov	r4, r0
 801f262:	f00b f87a 	bl	802a35a <_ZdlPvj>
 801f266:	4620      	mov	r0, r4
 801f268:	bd10      	pop	{r4, pc}

0801f26a <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD0Ev>:
 801f26a:	b510      	push	{r4, lr}
 801f26c:	2104      	movs	r1, #4
 801f26e:	4604      	mov	r4, r0
 801f270:	f00b f873 	bl	802a35a <_ZdlPvj>
 801f274:	4620      	mov	r0, r4
 801f276:	bd10      	pop	{r4, pc}

0801f278 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 801f278:	b510      	push	{r4, lr}
 801f27a:	2104      	movs	r1, #4
 801f27c:	4604      	mov	r4, r0
 801f27e:	f00b f86c 	bl	802a35a <_ZdlPvj>
 801f282:	4620      	mov	r0, r4
 801f284:	bd10      	pop	{r4, pc}

0801f286 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 801f286:	b510      	push	{r4, lr}
 801f288:	2104      	movs	r1, #4
 801f28a:	4604      	mov	r4, r0
 801f28c:	f00b f865 	bl	802a35a <_ZdlPvj>
 801f290:	4620      	mov	r0, r4
 801f292:	bd10      	pop	{r4, pc}

0801f294 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 801f294:	b510      	push	{r4, lr}
 801f296:	2104      	movs	r1, #4
 801f298:	4604      	mov	r4, r0
 801f29a:	f00b f85e 	bl	802a35a <_ZdlPvj>
 801f29e:	4620      	mov	r0, r4
 801f2a0:	bd10      	pop	{r4, pc}

0801f2a2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 801f2a2:	b510      	push	{r4, lr}
 801f2a4:	2104      	movs	r1, #4
 801f2a6:	4604      	mov	r4, r0
 801f2a8:	f00b f857 	bl	802a35a <_ZdlPvj>
 801f2ac:	4620      	mov	r0, r4
 801f2ae:	bd10      	pop	{r4, pc}

0801f2b0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD0Ev>:
 801f2b0:	b510      	push	{r4, lr}
 801f2b2:	2104      	movs	r1, #4
 801f2b4:	4604      	mov	r4, r0
 801f2b6:	f00b f850 	bl	802a35a <_ZdlPvj>
 801f2ba:	4620      	mov	r0, r4
 801f2bc:	bd10      	pop	{r4, pc}

0801f2be <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD0Ev>:
 801f2be:	b510      	push	{r4, lr}
 801f2c0:	2104      	movs	r1, #4
 801f2c2:	4604      	mov	r4, r0
 801f2c4:	f00b f849 	bl	802a35a <_ZdlPvj>
 801f2c8:	4620      	mov	r0, r4
 801f2ca:	bd10      	pop	{r4, pc}

0801f2cc <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD0Ev>:
 801f2cc:	b510      	push	{r4, lr}
 801f2ce:	2104      	movs	r1, #4
 801f2d0:	4604      	mov	r4, r0
 801f2d2:	f00b f842 	bl	802a35a <_ZdlPvj>
 801f2d6:	4620      	mov	r0, r4
 801f2d8:	bd10      	pop	{r4, pc}

0801f2da <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD0Ev>:
 801f2da:	b510      	push	{r4, lr}
 801f2dc:	2104      	movs	r1, #4
 801f2de:	4604      	mov	r4, r0
 801f2e0:	f00b f83b 	bl	802a35a <_ZdlPvj>
 801f2e4:	4620      	mov	r0, r4
 801f2e6:	bd10      	pop	{r4, pc}

0801f2e8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 801f2e8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f2ec:	b08f      	sub	sp, #60	; 0x3c
 801f2ee:	461c      	mov	r4, r3
 801f2f0:	9205      	str	r2, [sp, #20]
 801f2f2:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801f2f6:	9100      	str	r1, [sp, #0]
 801f2f8:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801f2fa:	9201      	str	r2, [sp, #4]
 801f2fc:	2a00      	cmp	r2, #0
 801f2fe:	f000 8115 	beq.w	801f52c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x244>
 801f302:	6820      	ldr	r0, [r4, #0]
 801f304:	6861      	ldr	r1, [r4, #4]
 801f306:	aa0a      	add	r2, sp, #40	; 0x28
 801f308:	c203      	stmia	r2!, {r0, r1}
 801f30a:	6818      	ldr	r0, [r3, #0]
 801f30c:	6859      	ldr	r1, [r3, #4]
 801f30e:	aa0c      	add	r2, sp, #48	; 0x30
 801f310:	c203      	stmia	r2!, {r0, r1}
 801f312:	a80a      	add	r0, sp, #40	; 0x28
 801f314:	f7f8 ff94 	bl	8018240 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801f318:	4621      	mov	r1, r4
 801f31a:	a80c      	add	r0, sp, #48	; 0x30
 801f31c:	f7f8 ffb8 	bl	8018290 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801f320:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	; 0x2c
 801f324:	f9bd 502e 	ldrsh.w	r5, [sp, #46]	; 0x2e
 801f328:	f8bd 0030 	ldrh.w	r0, [sp, #48]	; 0x30
 801f32c:	f5b6 6f80 	cmp.w	r6, #1024	; 0x400
 801f330:	bfde      	ittt	le
 801f332:	b2b3      	uxthle	r3, r6
 801f334:	f44f 6280 	movle.w	r2, #1024	; 0x400
 801f338:	fb92 f3f3 	sdivle	r3, r2, r3
 801f33c:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 801f340:	bfc8      	it	gt
 801f342:	2301      	movgt	r3, #1
 801f344:	fb92 f1f3 	sdiv	r1, r2, r3
 801f348:	fa1f fc81 	uxth.w	ip, r1
 801f34c:	fb0c 2413 	mls	r4, ip, r3, r2
 801f350:	fb14 f406 	smulbb	r4, r4, r6
 801f354:	441d      	add	r5, r3
 801f356:	4404      	add	r4, r0
 801f358:	4661      	mov	r1, ip
 801f35a:	3d01      	subs	r5, #1
 801f35c:	b2a4      	uxth	r4, r4
 801f35e:	fb95 f5f3 	sdiv	r5, r5, r3
 801f362:	b131      	cbz	r1, 801f372 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x8a>
 801f364:	9b05      	ldr	r3, [sp, #20]
 801f366:	9900      	ldr	r1, [sp, #0]
 801f368:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 801f36c:	ba1b      	rev	r3, r3
 801f36e:	4419      	add	r1, r3
 801f370:	9100      	str	r1, [sp, #0]
 801f372:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 801f376:	f9bd 8034 	ldrsh.w	r8, [sp, #52]	; 0x34
 801f37a:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	; 0x36
 801f37e:	4418      	add	r0, r3
 801f380:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 801f384:	f8ad 0030 	strh.w	r0, [sp, #48]	; 0x30
 801f388:	441a      	add	r2, r3
 801f38a:	4b6a      	ldr	r3, [pc, #424]	; (801f534 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>)
 801f38c:	f8ad 2032 	strh.w	r2, [sp, #50]	; 0x32
 801f390:	6818      	ldr	r0, [r3, #0]
 801f392:	6803      	ldr	r3, [r0, #0]
 801f394:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801f396:	4798      	blx	r3
 801f398:	4967      	ldr	r1, [pc, #412]	; (801f538 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x250>)
 801f39a:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 801f39e:	880b      	ldrh	r3, [r1, #0]
 801f3a0:	f9bd c030 	ldrsh.w	ip, [sp, #48]	; 0x30
 801f3a4:	9109      	str	r1, [sp, #36]	; 0x24
 801f3a6:	fb03 c202 	mla	r2, r3, r2, ip
 801f3aa:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801f3ae:	4373      	muls	r3, r6
 801f3b0:	b2ad      	uxth	r5, r5
 801f3b2:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801f3b6:	00ad      	lsls	r5, r5, #2
 801f3b8:	9306      	str	r3, [sp, #24]
 801f3ba:	1d2b      	adds	r3, r5, #4
 801f3bc:	9307      	str	r3, [sp, #28]
 801f3be:	9b01      	ldr	r3, [sp, #4]
 801f3c0:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 801f3c4:	9103      	str	r1, [sp, #12]
 801f3c6:	f1c3 02ff 	rsb	r2, r3, #255	; 0xff
 801f3ca:	2c00      	cmp	r4, #0
 801f3cc:	bf0c      	ite	eq
 801f3ce:	46c6      	moveq	lr, r8
 801f3d0:	f04f 0e00 	movne.w	lr, #0
 801f3d4:	2300      	movs	r3, #0
 801f3d6:	b292      	uxth	r2, r2
 801f3d8:	fa1f fe8e 	uxth.w	lr, lr
 801f3dc:	9302      	str	r3, [sp, #8]
 801f3de:	9204      	str	r2, [sp, #16]
 801f3e0:	9a06      	ldr	r2, [sp, #24]
 801f3e2:	4282      	cmp	r2, r0
 801f3e4:	f240 809d 	bls.w	801f522 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x23a>
 801f3e8:	b963      	cbnz	r3, 801f404 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x11c>
 801f3ea:	9b00      	ldr	r3, [sp, #0]
 801f3ec:	781a      	ldrb	r2, [r3, #0]
 801f3ee:	0993      	lsrs	r3, r2, #6
 801f3f0:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 801f3f4:	9202      	str	r2, [sp, #8]
 801f3f6:	1e5a      	subs	r2, r3, #1
 801f3f8:	2a02      	cmp	r2, #2
 801f3fa:	d815      	bhi.n	801f428 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x140>
 801f3fc:	9a00      	ldr	r2, [sp, #0]
 801f3fe:	3201      	adds	r2, #1
 801f400:	9200      	str	r2, [sp, #0]
 801f402:	b29b      	uxth	r3, r3
 801f404:	b1b4      	cbz	r4, 801f434 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x14c>
 801f406:	429c      	cmp	r4, r3
 801f408:	bf95      	itete	ls
 801f40a:	1b1c      	subls	r4, r3, r4
 801f40c:	1ae4      	subhi	r4, r4, r3
 801f40e:	fa1f fa84 	uxthls.w	sl, r4
 801f412:	b2a4      	uxthhi	r4, r4
 801f414:	bf87      	ittee	hi
 801f416:	4671      	movhi	r1, lr
 801f418:	f04f 0a00 	movhi.w	sl, #0
 801f41c:	fa1f f188 	uxthls.w	r1, r8
 801f420:	2400      	movls	r4, #0
 801f422:	4653      	mov	r3, sl
 801f424:	468e      	mov	lr, r1
 801f426:	e7db      	b.n	801f3e0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xf8>
 801f428:	9a00      	ldr	r2, [sp, #0]
 801f42a:	9b00      	ldr	r3, [sp, #0]
 801f42c:	3202      	adds	r2, #2
 801f42e:	785b      	ldrb	r3, [r3, #1]
 801f430:	9200      	str	r2, [sp, #0]
 801f432:	e7e7      	b.n	801f404 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x11c>
 801f434:	2202      	movs	r2, #2
 801f436:	4615      	mov	r5, r2
 801f438:	9907      	ldr	r1, [sp, #28]
 801f43a:	9a02      	ldr	r2, [sp, #8]
 801f43c:	fb15 1202 	smlabb	r2, r5, r2, r1
 801f440:	9905      	ldr	r1, [sp, #20]
 801f442:	4573      	cmp	r3, lr
 801f444:	f831 c002 	ldrh.w	ip, [r1, r2]
 801f448:	9a01      	ldr	r2, [sp, #4]
 801f44a:	bf2b      	itete	cs
 801f44c:	eba3 0a0e 	subcs.w	sl, r3, lr
 801f450:	ebae 0103 	subcc.w	r1, lr, r3
 801f454:	46f1      	movcs	r9, lr
 801f456:	4699      	movcc	r9, r3
 801f458:	bf27      	ittee	cs
 801f45a:	fa1f fa8a 	uxthcs.w	sl, sl
 801f45e:	4621      	movcs	r1, r4
 801f460:	b289      	uxthcc	r1, r1
 801f462:	46a2      	movcc	sl, r4
 801f464:	2aff      	cmp	r2, #255	; 0xff
 801f466:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801f46a:	d105      	bne.n	801f478 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x190>
 801f46c:	4481      	add	r9, r0
 801f46e:	4581      	cmp	r9, r0
 801f470:	d045      	beq.n	801f4fe <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x216>
 801f472:	f820 cb02 	strh.w	ip, [r0], #2
 801f476:	e7fa      	b.n	801f46e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x186>
 801f478:	9d03      	ldr	r5, [sp, #12]
 801f47a:	ea4f 222c 	mov.w	r2, ip, asr #8
 801f47e:	ea4f 0bec 	mov.w	fp, ip, asr #3
 801f482:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 801f486:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801f48a:	436a      	muls	r2, r5
 801f48c:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 801f490:	fa5f fc8c 	uxtb.w	ip, ip
 801f494:	9208      	str	r2, [sp, #32]
 801f496:	fb0b fb05 	mul.w	fp, fp, r5
 801f49a:	fb0c fc05 	mul.w	ip, ip, r5
 801f49e:	4481      	add	r9, r0
 801f4a0:	4581      	cmp	r9, r0
 801f4a2:	d02c      	beq.n	801f4fe <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x216>
 801f4a4:	8802      	ldrh	r2, [r0, #0]
 801f4a6:	9d04      	ldr	r5, [sp, #16]
 801f4a8:	9f04      	ldr	r7, [sp, #16]
 801f4aa:	1216      	asrs	r6, r2, #8
 801f4ac:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801f4b0:	fb16 f605 	smulbb	r6, r6, r5
 801f4b4:	9d08      	ldr	r5, [sp, #32]
 801f4b6:	442e      	add	r6, r5
 801f4b8:	10d5      	asrs	r5, r2, #3
 801f4ba:	00d2      	lsls	r2, r2, #3
 801f4bc:	b2d2      	uxtb	r2, r2
 801f4be:	fb12 f207 	smulbb	r2, r2, r7
 801f4c2:	b2b6      	uxth	r6, r6
 801f4c4:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801f4c8:	4462      	add	r2, ip
 801f4ca:	fb15 f507 	smulbb	r5, r5, r7
 801f4ce:	b292      	uxth	r2, r2
 801f4d0:	1c77      	adds	r7, r6, #1
 801f4d2:	eb07 2616 	add.w	r6, r7, r6, lsr #8
 801f4d6:	1c57      	adds	r7, r2, #1
 801f4d8:	445d      	add	r5, fp
 801f4da:	eb07 2212 	add.w	r2, r7, r2, lsr #8
 801f4de:	b2ad      	uxth	r5, r5
 801f4e0:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801f4e4:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 801f4e8:	4316      	orrs	r6, r2
 801f4ea:	1c6a      	adds	r2, r5, #1
 801f4ec:	eb02 2515 	add.w	r5, r2, r5, lsr #8
 801f4f0:	096d      	lsrs	r5, r5, #5
 801f4f2:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801f4f6:	432e      	orrs	r6, r5
 801f4f8:	f820 6b02 	strh.w	r6, [r0], #2
 801f4fc:	e7d0      	b.n	801f4a0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1b8>
 801f4fe:	4573      	cmp	r3, lr
 801f500:	d38f      	bcc.n	801f422 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13a>
 801f502:	f8bd 402c 	ldrh.w	r4, [sp, #44]	; 0x2c
 801f506:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f508:	fa1f f188 	uxth.w	r1, r8
 801f50c:	1a64      	subs	r4, r4, r1
 801f50e:	881b      	ldrh	r3, [r3, #0]
 801f510:	b2a4      	uxth	r4, r4
 801f512:	2c00      	cmp	r4, #0
 801f514:	eba3 0308 	sub.w	r3, r3, r8
 801f518:	bf18      	it	ne
 801f51a:	2100      	movne	r1, #0
 801f51c:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801f520:	e77f      	b.n	801f422 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13a>
 801f522:	4b04      	ldr	r3, [pc, #16]	; (801f534 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>)
 801f524:	6818      	ldr	r0, [r3, #0]
 801f526:	6803      	ldr	r3, [r0, #0]
 801f528:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801f52a:	4798      	blx	r3
 801f52c:	b00f      	add	sp, #60	; 0x3c
 801f52e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801f532:	bf00      	nop
 801f534:	20006c34 	.word	0x20006c34
 801f538:	20006c2e 	.word	0x20006c2e

0801f53c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 801f53c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f540:	b09f      	sub	sp, #124	; 0x7c
 801f542:	e9cd 1213 	strd	r1, r2, [sp, #76]	; 0x4c
 801f546:	f89d 20a4 	ldrb.w	r2, [sp, #164]	; 0xa4
 801f54a:	9209      	str	r2, [sp, #36]	; 0x24
 801f54c:	461d      	mov	r5, r3
 801f54e:	4604      	mov	r4, r0
 801f550:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801f552:	2a00      	cmp	r2, #0
 801f554:	f000 81eb 	beq.w	801f92e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3f2>
 801f558:	6828      	ldr	r0, [r5, #0]
 801f55a:	6869      	ldr	r1, [r5, #4]
 801f55c:	aa1a      	add	r2, sp, #104	; 0x68
 801f55e:	c203      	stmia	r2!, {r0, r1}
 801f560:	6818      	ldr	r0, [r3, #0]
 801f562:	6859      	ldr	r1, [r3, #4]
 801f564:	aa1c      	add	r2, sp, #112	; 0x70
 801f566:	c203      	stmia	r2!, {r0, r1}
 801f568:	a81a      	add	r0, sp, #104	; 0x68
 801f56a:	f7f8 fe69 	bl	8018240 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801f56e:	4629      	mov	r1, r5
 801f570:	a81c      	add	r0, sp, #112	; 0x70
 801f572:	f7f8 fe8d 	bl	8018290 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801f576:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	; 0x6c
 801f57a:	f9bd 806e 	ldrsh.w	r8, [sp, #110]	; 0x6e
 801f57e:	f9bd 6076 	ldrsh.w	r6, [sp, #118]	; 0x76
 801f582:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 801f586:	bfd7      	itett	le
 801f588:	b29a      	uxthle	r2, r3
 801f58a:	2201      	movgt	r2, #1
 801f58c:	f44f 6180 	movle.w	r1, #1024	; 0x400
 801f590:	fb91 f2f2 	sdivle	r2, r1, r2
 801f594:	9202      	str	r2, [sp, #8]
 801f596:	9802      	ldr	r0, [sp, #8]
 801f598:	f9bd 2072 	ldrsh.w	r2, [sp, #114]	; 0x72
 801f59c:	fb92 f0f0 	sdiv	r0, r2, r0
 801f5a0:	b280      	uxth	r0, r0
 801f5a2:	9010      	str	r0, [sp, #64]	; 0x40
 801f5a4:	9902      	ldr	r1, [sp, #8]
 801f5a6:	9802      	ldr	r0, [sp, #8]
 801f5a8:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801f5aa:	4488      	add	r8, r1
 801f5ac:	fb05 2510 	mls	r5, r5, r0, r2
 801f5b0:	fb15 f503 	smulbb	r5, r5, r3
 801f5b4:	f108 38ff 	add.w	r8, r8, #4294967295
 801f5b8:	f8bd 3068 	ldrh.w	r3, [sp, #104]	; 0x68
 801f5bc:	fb98 f8f1 	sdiv	r8, r8, r1
 801f5c0:	f8bd 1070 	ldrh.w	r1, [sp, #112]	; 0x70
 801f5c4:	440d      	add	r5, r1
 801f5c6:	4419      	add	r1, r3
 801f5c8:	f8bd 306a 	ldrh.w	r3, [sp, #106]	; 0x6a
 801f5cc:	f8ad 1070 	strh.w	r1, [sp, #112]	; 0x70
 801f5d0:	441a      	add	r2, r3
 801f5d2:	f9bd 3074 	ldrsh.w	r3, [sp, #116]	; 0x74
 801f5d6:	9304      	str	r3, [sp, #16]
 801f5d8:	4b95      	ldr	r3, [pc, #596]	; (801f830 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2f4>)
 801f5da:	f8ad 2072 	strh.w	r2, [sp, #114]	; 0x72
 801f5de:	6818      	ldr	r0, [r3, #0]
 801f5e0:	6803      	ldr	r3, [r0, #0]
 801f5e2:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801f5e4:	4798      	blx	r3
 801f5e6:	4b93      	ldr	r3, [pc, #588]	; (801f834 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2f8>)
 801f5e8:	f9bd 1072 	ldrsh.w	r1, [sp, #114]	; 0x72
 801f5ec:	881a      	ldrh	r2, [r3, #0]
 801f5ee:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	; 0x70
 801f5f2:	9318      	str	r3, [sp, #96]	; 0x60
 801f5f4:	fb02 7101 	mla	r1, r2, r1, r7
 801f5f8:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 801f5fc:	4356      	muls	r6, r2
 801f5fe:	eb00 0246 	add.w	r2, r0, r6, lsl #1
 801f602:	f108 0801 	add.w	r8, r8, #1
 801f606:	920a      	str	r2, [sp, #40]	; 0x28
 801f608:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801f60a:	f8bd 3024 	ldrh.w	r3, [sp, #36]	; 0x24
 801f60e:	930f      	str	r3, [sp, #60]	; 0x3c
 801f610:	fa1f f888 	uxth.w	r8, r8
 801f614:	eb02 0888 	add.w	r8, r2, r8, lsl #2
 801f618:	f108 0204 	add.w	r2, r8, #4
 801f61c:	9211      	str	r2, [sp, #68]	; 0x44
 801f61e:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801f620:	4b85      	ldr	r3, [pc, #532]	; (801f838 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2fc>)
 801f622:	f1c2 02ff 	rsb	r2, r2, #255	; 0xff
 801f626:	b2ad      	uxth	r5, r5
 801f628:	9215      	str	r2, [sp, #84]	; 0x54
 801f62a:	2d00      	cmp	r5, #0
 801f62c:	9a04      	ldr	r2, [sp, #16]
 801f62e:	f04f 0100 	mov.w	r1, #0
 801f632:	bf18      	it	ne
 801f634:	2200      	movne	r2, #0
 801f636:	1b1b      	subs	r3, r3, r4
 801f638:	b292      	uxth	r2, r2
 801f63a:	910d      	str	r1, [sp, #52]	; 0x34
 801f63c:	9319      	str	r3, [sp, #100]	; 0x64
 801f63e:	9910      	ldr	r1, [sp, #64]	; 0x40
 801f640:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801f642:	fa11 f383 	uxtah	r3, r1, r3
 801f646:	9914      	ldr	r1, [sp, #80]	; 0x50
 801f648:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 801f64c:	3304      	adds	r3, #4
 801f64e:	9306      	str	r3, [sp, #24]
 801f650:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801f652:	4283      	cmp	r3, r0
 801f654:	f240 8166 	bls.w	801f924 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3e8>
 801f658:	9902      	ldr	r1, [sp, #8]
 801f65a:	f8bd 306c 	ldrh.w	r3, [sp, #108]	; 0x6c
 801f65e:	fbb5 f3f3 	udiv	r3, r5, r3
 801f662:	1acb      	subs	r3, r1, r3
 801f664:	b29b      	uxth	r3, r3
 801f666:	9316      	str	r3, [sp, #88]	; 0x58
 801f668:	9b06      	ldr	r3, [sp, #24]
 801f66a:	9e06      	ldr	r6, [sp, #24]
 801f66c:	7859      	ldrb	r1, [r3, #1]
 801f66e:	789b      	ldrb	r3, [r3, #2]
 801f670:	7836      	ldrb	r6, [r6, #0]
 801f672:	9612      	str	r6, [sp, #72]	; 0x48
 801f674:	021b      	lsls	r3, r3, #8
 801f676:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 801f67a:	9906      	ldr	r1, [sp, #24]
 801f67c:	78c9      	ldrb	r1, [r1, #3]
 801f67e:	430b      	orrs	r3, r1
 801f680:	9913      	ldr	r1, [sp, #76]	; 0x4c
 801f682:	3601      	adds	r6, #1
 801f684:	4419      	add	r1, r3
 801f686:	9605      	str	r6, [sp, #20]
 801f688:	1c4e      	adds	r6, r1, #1
 801f68a:	9603      	str	r6, [sp, #12]
 801f68c:	7849      	ldrb	r1, [r1, #1]
 801f68e:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 801f690:	0209      	lsls	r1, r1, #8
 801f692:	5cf3      	ldrb	r3, [r6, r3]
 801f694:	f401 71ff 	and.w	r1, r1, #510	; 0x1fe
 801f698:	4319      	orrs	r1, r3
 801f69a:	b28b      	uxth	r3, r1
 801f69c:	930c      	str	r3, [sp, #48]	; 0x30
 801f69e:	2300      	movs	r3, #0
 801f6a0:	f04f 0a01 	mov.w	sl, #1
 801f6a4:	9307      	str	r3, [sp, #28]
 801f6a6:	469c      	mov	ip, r3
 801f6a8:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 801f6ac:	f884 1804 	strb.w	r1, [r4, #2052]	; 0x804
 801f6b0:	46d3      	mov	fp, sl
 801f6b2:	4657      	mov	r7, sl
 801f6b4:	930e      	str	r3, [sp, #56]	; 0x38
 801f6b6:	2d00      	cmp	r5, #0
 801f6b8:	d07e      	beq.n	801f7b8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x27c>
 801f6ba:	42af      	cmp	r7, r5
 801f6bc:	d26e      	bcs.n	801f79c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x260>
 801f6be:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801f6c0:	9201      	str	r2, [sp, #4]
 801f6c2:	1bed      	subs	r5, r5, r7
 801f6c4:	4283      	cmp	r3, r0
 801f6c6:	b2ad      	uxth	r5, r5
 801f6c8:	d802      	bhi.n	801f6d0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x194>
 801f6ca:	e073      	b.n	801f7b4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x278>
 801f6cc:	2b00      	cmp	r3, #0
 801f6ce:	d15f      	bne.n	801f790 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x254>
 801f6d0:	9b03      	ldr	r3, [sp, #12]
 801f6d2:	785b      	ldrb	r3, [r3, #1]
 801f6d4:	f1cb 0207 	rsb	r2, fp, #7
 801f6d8:	4093      	lsls	r3, r2
 801f6da:	005b      	lsls	r3, r3, #1
 801f6dc:	f403 72ff 	and.w	r2, r3, #510	; 0x1fe
 801f6e0:	9b03      	ldr	r3, [sp, #12]
 801f6e2:	781b      	ldrb	r3, [r3, #0]
 801f6e4:	fa43 f30b 	asr.w	r3, r3, fp
 801f6e8:	b2db      	uxtb	r3, r3
 801f6ea:	4313      	orrs	r3, r2
 801f6ec:	f10b 0201 	add.w	r2, fp, #1
 801f6f0:	fa5f fb82 	uxtb.w	fp, r2
 801f6f4:	9a03      	ldr	r2, [sp, #12]
 801f6f6:	f1bb 0f08 	cmp.w	fp, #8
 801f6fa:	bf15      	itete	ne
 801f6fc:	3201      	addne	r2, #1
 801f6fe:	3202      	addeq	r2, #2
 801f700:	9203      	strne	r2, [sp, #12]
 801f702:	9203      	streq	r2, [sp, #12]
 801f704:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801f706:	b29f      	uxth	r7, r3
 801f708:	bf08      	it	eq
 801f70a:	f04f 0b00 	moveq.w	fp, #0
 801f70e:	42ba      	cmp	r2, r7
 801f710:	d309      	bcc.n	801f726 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1ea>
 801f712:	f884 3804 	strb.w	r3, [r4, #2052]	; 0x804
 801f716:	2301      	movs	r3, #1
 801f718:	9a05      	ldr	r2, [sp, #20]
 801f71a:	f5b2 7f00 	cmp.w	r2, #512	; 0x200
 801f71e:	d30e      	bcc.n	801f73e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x202>
 801f720:	469a      	mov	sl, r3
 801f722:	2600      	movs	r6, #0
 801f724:	e035      	b.n	801f792 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x256>
 801f726:	9b05      	ldr	r3, [sp, #20]
 801f728:	429f      	cmp	r7, r3
 801f72a:	d318      	bcc.n	801f75e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x222>
 801f72c:	eb04 030a 	add.w	r3, r4, sl
 801f730:	f894 2804 	ldrb.w	r2, [r4, #2052]	; 0x804
 801f734:	f883 2804 	strb.w	r2, [r3, #2052]	; 0x804
 801f738:	f10a 0301 	add.w	r3, sl, #1
 801f73c:	b29b      	uxth	r3, r3
 801f73e:	9a05      	ldr	r2, [sp, #20]
 801f740:	f894 6804 	ldrb.w	r6, [r4, #2052]	; 0x804
 801f744:	990c      	ldr	r1, [sp, #48]	; 0x30
 801f746:	eb04 0282 	add.w	r2, r4, r2, lsl #2
 801f74a:	7116      	strb	r6, [r2, #4]
 801f74c:	f10a 0601 	add.w	r6, sl, #1
 801f750:	80d1      	strh	r1, [r2, #6]
 801f752:	7156      	strb	r6, [r2, #5]
 801f754:	9a05      	ldr	r2, [sp, #20]
 801f756:	3201      	adds	r2, #1
 801f758:	b292      	uxth	r2, r2
 801f75a:	9205      	str	r2, [sp, #20]
 801f75c:	e7e0      	b.n	801f720 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e4>
 801f75e:	eb04 0387 	add.w	r3, r4, r7, lsl #2
 801f762:	463a      	mov	r2, r7
 801f764:	795b      	ldrb	r3, [r3, #5]
 801f766:	f603 0604 	addw	r6, r3, #2052	; 0x804
 801f76a:	4426      	add	r6, r4
 801f76c:	9919      	ldr	r1, [sp, #100]	; 0x64
 801f76e:	eb01 0c06 	add.w	ip, r1, r6
 801f772:	f1bc 0f00 	cmp.w	ip, #0
 801f776:	dd07      	ble.n	801f788 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>
 801f778:	eb04 0282 	add.w	r2, r4, r2, lsl #2
 801f77c:	f892 c004 	ldrb.w	ip, [r2, #4]
 801f780:	f806 cd01 	strb.w	ip, [r6, #-1]!
 801f784:	88d2      	ldrh	r2, [r2, #6]
 801f786:	e7f1      	b.n	801f76c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x230>
 801f788:	f884 2804 	strb.w	r2, [r4, #2052]	; 0x804
 801f78c:	b29b      	uxth	r3, r3
 801f78e:	e7c3      	b.n	801f718 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1dc>
 801f790:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 801f792:	970c      	str	r7, [sp, #48]	; 0x30
 801f794:	9a01      	ldr	r2, [sp, #4]
 801f796:	46b4      	mov	ip, r6
 801f798:	461f      	mov	r7, r3
 801f79a:	e78c      	b.n	801f6b6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x17a>
 801f79c:	1b7b      	subs	r3, r7, r5
 801f79e:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801f7a2:	9201      	str	r2, [sp, #4]
 801f7a4:	eb0c 0605 	add.w	r6, ip, r5
 801f7a8:	b29b      	uxth	r3, r3
 801f7aa:	b2b6      	uxth	r6, r6
 801f7ac:	2500      	movs	r5, #0
 801f7ae:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801f7b0:	4282      	cmp	r2, r0
 801f7b2:	d88b      	bhi.n	801f6cc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x190>
 801f7b4:	9a01      	ldr	r2, [sp, #4]
 801f7b6:	e74b      	b.n	801f650 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x114>
 801f7b8:	4297      	cmp	r7, r2
 801f7ba:	d332      	bcc.n	801f822 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2e6>
 801f7bc:	1abb      	subs	r3, r7, r2
 801f7be:	b29b      	uxth	r3, r3
 801f7c0:	9208      	str	r2, [sp, #32]
 801f7c2:	9501      	str	r5, [sp, #4]
 801f7c4:	9909      	ldr	r1, [sp, #36]	; 0x24
 801f7c6:	29ff      	cmp	r1, #255	; 0xff
 801f7c8:	9908      	ldr	r1, [sp, #32]
 801f7ca:	eb0c 0601 	add.w	r6, ip, r1
 801f7ce:	d135      	bne.n	801f83c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x300>
 801f7d0:	f1a0 0e02 	sub.w	lr, r0, #2
 801f7d4:	b2b6      	uxth	r6, r6
 801f7d6:	45b4      	cmp	ip, r6
 801f7d8:	f040 808c 	bne.w	801f8f4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3b8>
 801f7dc:	9908      	ldr	r1, [sp, #32]
 801f7de:	4297      	cmp	r7, r2
 801f7e0:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 801f7e4:	d3e2      	bcc.n	801f7ac <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x270>
 801f7e6:	9a18      	ldr	r2, [sp, #96]	; 0x60
 801f7e8:	9904      	ldr	r1, [sp, #16]
 801f7ea:	8812      	ldrh	r2, [r2, #0]
 801f7ec:	1a52      	subs	r2, r2, r1
 801f7ee:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801f7f2:	9a07      	ldr	r2, [sp, #28]
 801f7f4:	9916      	ldr	r1, [sp, #88]	; 0x58
 801f7f6:	3201      	adds	r2, #1
 801f7f8:	428a      	cmp	r2, r1
 801f7fa:	9207      	str	r2, [sp, #28]
 801f7fc:	f040 8087 	bne.w	801f90e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3d2>
 801f800:	f8bd 5070 	ldrh.w	r5, [sp, #112]	; 0x70
 801f804:	f8bd 7068 	ldrh.w	r7, [sp, #104]	; 0x68
 801f808:	9b04      	ldr	r3, [sp, #16]
 801f80a:	1bed      	subs	r5, r5, r7
 801f80c:	b2ad      	uxth	r5, r5
 801f80e:	2d00      	cmp	r5, #0
 801f810:	bf08      	it	eq
 801f812:	461a      	moveq	r2, r3
 801f814:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801f816:	bf18      	it	ne
 801f818:	2200      	movne	r2, #0
 801f81a:	3301      	adds	r3, #1
 801f81c:	930d      	str	r3, [sp, #52]	; 0x34
 801f81e:	b292      	uxth	r2, r2
 801f820:	e70d      	b.n	801f63e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x102>
 801f822:	1bd1      	subs	r1, r2, r7
 801f824:	b28b      	uxth	r3, r1
 801f826:	9301      	str	r3, [sp, #4]
 801f828:	9708      	str	r7, [sp, #32]
 801f82a:	462b      	mov	r3, r5
 801f82c:	e7ca      	b.n	801f7c4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x288>
 801f82e:	bf00      	nop
 801f830:	20006c34 	.word	0x20006c34
 801f834:	20006c2e 	.word	0x20006c2e
 801f838:	fffff7fb 	.word	0xfffff7fb
 801f83c:	b2b6      	uxth	r6, r6
 801f83e:	900b      	str	r0, [sp, #44]	; 0x2c
 801f840:	45b4      	cmp	ip, r6
 801f842:	d0cb      	beq.n	801f7dc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2a0>
 801f844:	f10c 0101 	add.w	r1, ip, #1
 801f848:	44a4      	add	ip, r4
 801f84a:	9117      	str	r1, [sp, #92]	; 0x5c
 801f84c:	f89c 5804 	ldrb.w	r5, [ip, #2052]	; 0x804
 801f850:	9911      	ldr	r1, [sp, #68]	; 0x44
 801f852:	f831 5015 	ldrh.w	r5, [r1, r5, lsl #1]
 801f856:	990b      	ldr	r1, [sp, #44]	; 0x2c
 801f858:	f8b1 c000 	ldrh.w	ip, [r1]
 801f85c:	990e      	ldr	r1, [sp, #56]	; 0x38
 801f85e:	ea4f 2e2c 	mov.w	lr, ip, asr #8
 801f862:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801f866:	fb1e fe01 	smulbb	lr, lr, r1
 801f86a:	ea4f 2825 	mov.w	r8, r5, asr #8
 801f86e:	990f      	ldr	r1, [sp, #60]	; 0x3c
 801f870:	f008 08f8 	and.w	r8, r8, #248	; 0xf8
 801f874:	fb08 e801 	mla	r8, r8, r1, lr
 801f878:	ea4f 09ec 	mov.w	r9, ip, asr #3
 801f87c:	990e      	ldr	r1, [sp, #56]	; 0x38
 801f87e:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 801f882:	fb19 f901 	smulbb	r9, r9, r1
 801f886:	ea4f 0ee5 	mov.w	lr, r5, asr #3
 801f88a:	990f      	ldr	r1, [sp, #60]	; 0x3c
 801f88c:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 801f890:	fb0e 9e01 	mla	lr, lr, r1, r9
 801f894:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801f898:	990e      	ldr	r1, [sp, #56]	; 0x38
 801f89a:	fa5f fc8c 	uxtb.w	ip, ip
 801f89e:	fb1c fc01 	smulbb	ip, ip, r1
 801f8a2:	00ed      	lsls	r5, r5, #3
 801f8a4:	990f      	ldr	r1, [sp, #60]	; 0x3c
 801f8a6:	b2ed      	uxtb	r5, r5
 801f8a8:	fb05 c501 	mla	r5, r5, r1, ip
 801f8ac:	fa1f f888 	uxth.w	r8, r8
 801f8b0:	fa1f fe8e 	uxth.w	lr, lr
 801f8b4:	b2ad      	uxth	r5, r5
 801f8b6:	f108 0c01 	add.w	ip, r8, #1
 801f8ba:	eb0c 2818 	add.w	r8, ip, r8, lsr #8
 801f8be:	f10e 0901 	add.w	r9, lr, #1
 801f8c2:	f105 0c01 	add.w	ip, r5, #1
 801f8c6:	eb0c 2c15 	add.w	ip, ip, r5, lsr #8
 801f8ca:	eb09 291e 	add.w	r9, r9, lr, lsr #8
 801f8ce:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801f8d2:	f408 4878 	and.w	r8, r8, #63488	; 0xf800
 801f8d6:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801f8da:	ea4c 0808 	orr.w	r8, ip, r8
 801f8de:	990b      	ldr	r1, [sp, #44]	; 0x2c
 801f8e0:	f8bd c05c 	ldrh.w	ip, [sp, #92]	; 0x5c
 801f8e4:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801f8e8:	ea48 0809 	orr.w	r8, r8, r9
 801f8ec:	f821 8b02 	strh.w	r8, [r1], #2
 801f8f0:	910b      	str	r1, [sp, #44]	; 0x2c
 801f8f2:	e7a5      	b.n	801f840 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x304>
 801f8f4:	f10c 0801 	add.w	r8, ip, #1
 801f8f8:	44a4      	add	ip, r4
 801f8fa:	9911      	ldr	r1, [sp, #68]	; 0x44
 801f8fc:	f89c 5804 	ldrb.w	r5, [ip, #2052]	; 0x804
 801f900:	f831 5015 	ldrh.w	r5, [r1, r5, lsl #1]
 801f904:	f82e 5f02 	strh.w	r5, [lr, #2]!
 801f908:	fa1f fc88 	uxth.w	ip, r8
 801f90c:	e763      	b.n	801f7d6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x29a>
 801f90e:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801f912:	f8bd 506c 	ldrh.w	r5, [sp, #108]	; 0x6c
 801f916:	1aad      	subs	r5, r5, r2
 801f918:	b2ad      	uxth	r5, r5
 801f91a:	2d00      	cmp	r5, #0
 801f91c:	bf18      	it	ne
 801f91e:	2200      	movne	r2, #0
 801f920:	9201      	str	r2, [sp, #4]
 801f922:	e744      	b.n	801f7ae <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x272>
 801f924:	4b03      	ldr	r3, [pc, #12]	; (801f934 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3f8>)
 801f926:	6818      	ldr	r0, [r3, #0]
 801f928:	6803      	ldr	r3, [r0, #0]
 801f92a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801f92c:	4798      	blx	r3
 801f92e:	b01f      	add	sp, #124	; 0x7c
 801f930:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801f934:	20006c34 	.word	0x20006c34

0801f938 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 801f938:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f93c:	b08f      	sub	sp, #60	; 0x3c
 801f93e:	461c      	mov	r4, r3
 801f940:	9203      	str	r2, [sp, #12]
 801f942:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801f946:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801f948:	9202      	str	r2, [sp, #8]
 801f94a:	460f      	mov	r7, r1
 801f94c:	2a00      	cmp	r2, #0
 801f94e:	f000 8128 	beq.w	801fba2 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x26a>
 801f952:	6820      	ldr	r0, [r4, #0]
 801f954:	6861      	ldr	r1, [r4, #4]
 801f956:	aa0a      	add	r2, sp, #40	; 0x28
 801f958:	c203      	stmia	r2!, {r0, r1}
 801f95a:	6818      	ldr	r0, [r3, #0]
 801f95c:	6859      	ldr	r1, [r3, #4]
 801f95e:	aa0c      	add	r2, sp, #48	; 0x30
 801f960:	c203      	stmia	r2!, {r0, r1}
 801f962:	a80a      	add	r0, sp, #40	; 0x28
 801f964:	f7f8 fc6c 	bl	8018240 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801f968:	4621      	mov	r1, r4
 801f96a:	a80c      	add	r0, sp, #48	; 0x30
 801f96c:	f7f8 fc90 	bl	8018290 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801f970:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	; 0x2c
 801f974:	f9bd 502e 	ldrsh.w	r5, [sp, #46]	; 0x2e
 801f978:	f8bd 0030 	ldrh.w	r0, [sp, #48]	; 0x30
 801f97c:	f5b6 6f80 	cmp.w	r6, #1024	; 0x400
 801f980:	bfde      	ittt	le
 801f982:	b2b3      	uxthle	r3, r6
 801f984:	f44f 6280 	movle.w	r2, #1024	; 0x400
 801f988:	fb92 f3f3 	sdivle	r3, r2, r3
 801f98c:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 801f990:	bfc8      	it	gt
 801f992:	2301      	movgt	r3, #1
 801f994:	fb92 f1f3 	sdiv	r1, r2, r3
 801f998:	fa1f fc81 	uxth.w	ip, r1
 801f99c:	fb0c 2413 	mls	r4, ip, r3, r2
 801f9a0:	fb14 f406 	smulbb	r4, r4, r6
 801f9a4:	441d      	add	r5, r3
 801f9a6:	4404      	add	r4, r0
 801f9a8:	4661      	mov	r1, ip
 801f9aa:	3d01      	subs	r5, #1
 801f9ac:	b2a4      	uxth	r4, r4
 801f9ae:	fb95 f5f3 	sdiv	r5, r5, r3
 801f9b2:	b121      	cbz	r1, 801f9be <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x86>
 801f9b4:	9b03      	ldr	r3, [sp, #12]
 801f9b6:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 801f9ba:	ba1b      	rev	r3, r3
 801f9bc:	441f      	add	r7, r3
 801f9be:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 801f9c2:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	; 0x34
 801f9c6:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	; 0x36
 801f9ca:	4418      	add	r0, r3
 801f9cc:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 801f9d0:	f8ad 0030 	strh.w	r0, [sp, #48]	; 0x30
 801f9d4:	441a      	add	r2, r3
 801f9d6:	4b74      	ldr	r3, [pc, #464]	; (801fba8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x270>)
 801f9d8:	f8ad 2032 	strh.w	r2, [sp, #50]	; 0x32
 801f9dc:	6818      	ldr	r0, [r3, #0]
 801f9de:	6803      	ldr	r3, [r0, #0]
 801f9e0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801f9e2:	4798      	blx	r3
 801f9e4:	4a71      	ldr	r2, [pc, #452]	; (801fbac <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x274>)
 801f9e6:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	; 0x32
 801f9ea:	8813      	ldrh	r3, [r2, #0]
 801f9ec:	f9bd c030 	ldrsh.w	ip, [sp, #48]	; 0x30
 801f9f0:	9209      	str	r2, [sp, #36]	; 0x24
 801f9f2:	fb03 c101 	mla	r1, r3, r1, ip
 801f9f6:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 801f9fa:	4373      	muls	r3, r6
 801f9fc:	b2ad      	uxth	r5, r5
 801f9fe:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801fa02:	00ad      	lsls	r5, r5, #2
 801fa04:	2c00      	cmp	r4, #0
 801fa06:	9304      	str	r3, [sp, #16]
 801fa08:	f105 0304 	add.w	r3, r5, #4
 801fa0c:	9305      	str	r3, [sp, #20]
 801fa0e:	bf0c      	ite	eq
 801fa10:	46c8      	moveq	r8, r9
 801fa12:	f04f 0800 	movne.w	r8, #0
 801fa16:	2300      	movs	r3, #0
 801fa18:	fa1f f888 	uxth.w	r8, r8
 801fa1c:	9301      	str	r3, [sp, #4]
 801fa1e:	9a04      	ldr	r2, [sp, #16]
 801fa20:	4282      	cmp	r2, r0
 801fa22:	f240 80b9 	bls.w	801fb98 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x260>
 801fa26:	b95b      	cbnz	r3, 801fa40 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x108>
 801fa28:	783a      	ldrb	r2, [r7, #0]
 801fa2a:	0993      	lsrs	r3, r2, #6
 801fa2c:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 801fa30:	9201      	str	r2, [sp, #4]
 801fa32:	1e5a      	subs	r2, r3, #1
 801fa34:	2a02      	cmp	r2, #2
 801fa36:	bf8d      	iteet	hi
 801fa38:	787b      	ldrbhi	r3, [r7, #1]
 801fa3a:	3701      	addls	r7, #1
 801fa3c:	b29b      	uxthls	r3, r3
 801fa3e:	3702      	addhi	r7, #2
 801fa40:	b184      	cbz	r4, 801fa64 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x12c>
 801fa42:	429c      	cmp	r4, r3
 801fa44:	bf95      	itete	ls
 801fa46:	1b1c      	subls	r4, r3, r4
 801fa48:	1ae4      	subhi	r4, r4, r3
 801fa4a:	fa1f fa84 	uxthls.w	sl, r4
 801fa4e:	b2a4      	uxthhi	r4, r4
 801fa50:	bf87      	ittee	hi
 801fa52:	46c4      	movhi	ip, r8
 801fa54:	f04f 0a00 	movhi.w	sl, #0
 801fa58:	fa1f fc89 	uxthls.w	ip, r9
 801fa5c:	2400      	movls	r4, #0
 801fa5e:	4653      	mov	r3, sl
 801fa60:	46e0      	mov	r8, ip
 801fa62:	e7dc      	b.n	801fa1e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xe6>
 801fa64:	2204      	movs	r2, #4
 801fa66:	4615      	mov	r5, r2
 801fa68:	9905      	ldr	r1, [sp, #20]
 801fa6a:	9a01      	ldr	r2, [sp, #4]
 801fa6c:	fb15 1202 	smlabb	r2, r5, r2, r1
 801fa70:	9903      	ldr	r1, [sp, #12]
 801fa72:	588a      	ldr	r2, [r1, r2]
 801fa74:	4543      	cmp	r3, r8
 801fa76:	bf27      	ittee	cs
 801fa78:	eba3 0a08 	subcs.w	sl, r3, r8
 801fa7c:	46c6      	movcs	lr, r8
 801fa7e:	eba8 0c03 	subcc.w	ip, r8, r3
 801fa82:	469e      	movcc	lr, r3
 801fa84:	ea4f 6112 	mov.w	r1, r2, lsr #24
 801fa88:	bf27      	ittee	cs
 801fa8a:	fa1f fa8a 	uxthcs.w	sl, sl
 801fa8e:	46a4      	movcs	ip, r4
 801fa90:	fa1f fc8c 	uxthcc.w	ip, ip
 801fa94:	46a2      	movcc	sl, r4
 801fa96:	ea4f 0e4e 	mov.w	lr, lr, lsl #1
 801fa9a:	2900      	cmp	r1, #0
 801fa9c:	d066      	beq.n	801fb6c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x234>
 801fa9e:	29ff      	cmp	r1, #255	; 0xff
 801faa0:	ea4f 2612 	mov.w	r6, r2, lsr #8
 801faa4:	d114      	bne.n	801fad0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x198>
 801faa6:	9d02      	ldr	r5, [sp, #8]
 801faa8:	2dff      	cmp	r5, #255	; 0xff
 801faaa:	d111      	bne.n	801fad0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x198>
 801faac:	0951      	lsrs	r1, r2, #5
 801faae:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 801fab2:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801fab6:	f026 0607 	bic.w	r6, r6, #7
 801faba:	430e      	orrs	r6, r1
 801fabc:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801fac0:	4316      	orrs	r6, r2
 801fac2:	b2b6      	uxth	r6, r6
 801fac4:	4486      	add	lr, r0
 801fac6:	4586      	cmp	lr, r0
 801fac8:	d051      	beq.n	801fb6e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 801faca:	f820 6b02 	strh.w	r6, [r0], #2
 801face:	e7fa      	b.n	801fac6 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x18e>
 801fad0:	9d02      	ldr	r5, [sp, #8]
 801fad2:	4369      	muls	r1, r5
 801fad4:	1c4d      	adds	r5, r1, #1
 801fad6:	eb05 2521 	add.w	r5, r5, r1, asr #8
 801fada:	122d      	asrs	r5, r5, #8
 801fadc:	ea6f 0b05 	mvn.w	fp, r5
 801fae0:	f3c2 4107 	ubfx	r1, r2, #16, #8
 801fae4:	b2ad      	uxth	r5, r5
 801fae6:	b2f6      	uxtb	r6, r6
 801fae8:	b2d2      	uxtb	r2, r2
 801faea:	fb11 f105 	smulbb	r1, r1, r5
 801faee:	fb16 f605 	smulbb	r6, r6, r5
 801faf2:	fb12 f205 	smulbb	r2, r2, r5
 801faf6:	b289      	uxth	r1, r1
 801faf8:	b2b6      	uxth	r6, r6
 801fafa:	b292      	uxth	r2, r2
 801fafc:	9106      	str	r1, [sp, #24]
 801fafe:	9607      	str	r6, [sp, #28]
 801fb00:	9208      	str	r2, [sp, #32]
 801fb02:	4486      	add	lr, r0
 801fb04:	fa5f fb8b 	uxtb.w	fp, fp
 801fb08:	4586      	cmp	lr, r0
 801fb0a:	d030      	beq.n	801fb6e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 801fb0c:	8802      	ldrh	r2, [r0, #0]
 801fb0e:	9906      	ldr	r1, [sp, #24]
 801fb10:	1216      	asrs	r6, r2, #8
 801fb12:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801fb16:	10d5      	asrs	r5, r2, #3
 801fb18:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 801fb1c:	fb06 160b 	mla	r6, r6, fp, r1
 801fb20:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801fb24:	9907      	ldr	r1, [sp, #28]
 801fb26:	00d2      	lsls	r2, r2, #3
 801fb28:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 801fb2c:	fb05 150b 	mla	r5, r5, fp, r1
 801fb30:	b2d2      	uxtb	r2, r2
 801fb32:	9908      	ldr	r1, [sp, #32]
 801fb34:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801fb38:	b2b6      	uxth	r6, r6
 801fb3a:	fb02 120b 	mla	r2, r2, fp, r1
 801fb3e:	b292      	uxth	r2, r2
 801fb40:	1c71      	adds	r1, r6, #1
 801fb42:	eb01 2616 	add.w	r6, r1, r6, lsr #8
 801fb46:	1c51      	adds	r1, r2, #1
 801fb48:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801fb4c:	b2ad      	uxth	r5, r5
 801fb4e:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801fb52:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 801fb56:	4316      	orrs	r6, r2
 801fb58:	1c6a      	adds	r2, r5, #1
 801fb5a:	eb02 2515 	add.w	r5, r2, r5, lsr #8
 801fb5e:	096d      	lsrs	r5, r5, #5
 801fb60:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801fb64:	432e      	orrs	r6, r5
 801fb66:	f820 6b02 	strh.w	r6, [r0], #2
 801fb6a:	e7cd      	b.n	801fb08 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1d0>
 801fb6c:	4470      	add	r0, lr
 801fb6e:	4543      	cmp	r3, r8
 801fb70:	f4ff af75 	bcc.w	801fa5e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x126>
 801fb74:	f8bd 402c 	ldrh.w	r4, [sp, #44]	; 0x2c
 801fb78:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801fb7a:	fa1f fc89 	uxth.w	ip, r9
 801fb7e:	eba4 040c 	sub.w	r4, r4, ip
 801fb82:	881b      	ldrh	r3, [r3, #0]
 801fb84:	b2a4      	uxth	r4, r4
 801fb86:	2c00      	cmp	r4, #0
 801fb88:	eba3 0309 	sub.w	r3, r3, r9
 801fb8c:	bf18      	it	ne
 801fb8e:	f04f 0c00 	movne.w	ip, #0
 801fb92:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801fb96:	e762      	b.n	801fa5e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x126>
 801fb98:	4b03      	ldr	r3, [pc, #12]	; (801fba8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x270>)
 801fb9a:	6818      	ldr	r0, [r3, #0]
 801fb9c:	6803      	ldr	r3, [r0, #0]
 801fb9e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801fba0:	4798      	blx	r3
 801fba2:	b00f      	add	sp, #60	; 0x3c
 801fba4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801fba8:	20006c34 	.word	0x20006c34
 801fbac:	20006c2e 	.word	0x20006c2e

0801fbb0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 801fbb0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801fbb4:	b093      	sub	sp, #76	; 0x4c
 801fbb6:	461c      	mov	r4, r3
 801fbb8:	9205      	str	r2, [sp, #20]
 801fbba:	f89d 2074 	ldrb.w	r2, [sp, #116]	; 0x74
 801fbbe:	9101      	str	r1, [sp, #4]
 801fbc0:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801fbc2:	9202      	str	r2, [sp, #8]
 801fbc4:	2a00      	cmp	r2, #0
 801fbc6:	f000 812c 	beq.w	801fe22 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x272>
 801fbca:	6820      	ldr	r0, [r4, #0]
 801fbcc:	6861      	ldr	r1, [r4, #4]
 801fbce:	aa0e      	add	r2, sp, #56	; 0x38
 801fbd0:	c203      	stmia	r2!, {r0, r1}
 801fbd2:	6818      	ldr	r0, [r3, #0]
 801fbd4:	6859      	ldr	r1, [r3, #4]
 801fbd6:	aa10      	add	r2, sp, #64	; 0x40
 801fbd8:	c203      	stmia	r2!, {r0, r1}
 801fbda:	a80e      	add	r0, sp, #56	; 0x38
 801fbdc:	f7f8 fb30 	bl	8018240 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801fbe0:	4621      	mov	r1, r4
 801fbe2:	a810      	add	r0, sp, #64	; 0x40
 801fbe4:	f7f8 fb54 	bl	8018290 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801fbe8:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	; 0x3c
 801fbec:	f9bd 503e 	ldrsh.w	r5, [sp, #62]	; 0x3e
 801fbf0:	f8bd 0040 	ldrh.w	r0, [sp, #64]	; 0x40
 801fbf4:	f5b6 6f80 	cmp.w	r6, #1024	; 0x400
 801fbf8:	bfde      	ittt	le
 801fbfa:	b2b3      	uxthle	r3, r6
 801fbfc:	f44f 6280 	movle.w	r2, #1024	; 0x400
 801fc00:	fb92 f3f3 	sdivle	r3, r2, r3
 801fc04:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	; 0x42
 801fc08:	bfc8      	it	gt
 801fc0a:	2301      	movgt	r3, #1
 801fc0c:	fb92 f1f3 	sdiv	r1, r2, r3
 801fc10:	fa1f fc81 	uxth.w	ip, r1
 801fc14:	fb0c 2413 	mls	r4, ip, r3, r2
 801fc18:	fb14 f406 	smulbb	r4, r4, r6
 801fc1c:	441d      	add	r5, r3
 801fc1e:	4404      	add	r4, r0
 801fc20:	4661      	mov	r1, ip
 801fc22:	3d01      	subs	r5, #1
 801fc24:	b2a4      	uxth	r4, r4
 801fc26:	fb95 f5f3 	sdiv	r5, r5, r3
 801fc2a:	b131      	cbz	r1, 801fc3a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x8a>
 801fc2c:	9b05      	ldr	r3, [sp, #20]
 801fc2e:	9901      	ldr	r1, [sp, #4]
 801fc30:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 801fc34:	ba1b      	rev	r3, r3
 801fc36:	4419      	add	r1, r3
 801fc38:	9101      	str	r1, [sp, #4]
 801fc3a:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 801fc3e:	f9bd b044 	ldrsh.w	fp, [sp, #68]	; 0x44
 801fc42:	f9bd 6046 	ldrsh.w	r6, [sp, #70]	; 0x46
 801fc46:	4418      	add	r0, r3
 801fc48:	f8bd 303a 	ldrh.w	r3, [sp, #58]	; 0x3a
 801fc4c:	f8ad 0040 	strh.w	r0, [sp, #64]	; 0x40
 801fc50:	441a      	add	r2, r3
 801fc52:	4b75      	ldr	r3, [pc, #468]	; (801fe28 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x278>)
 801fc54:	f8ad 2042 	strh.w	r2, [sp, #66]	; 0x42
 801fc58:	6818      	ldr	r0, [r3, #0]
 801fc5a:	6803      	ldr	r3, [r0, #0]
 801fc5c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801fc5e:	4798      	blx	r3
 801fc60:	4972      	ldr	r1, [pc, #456]	; (801fe2c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x27c>)
 801fc62:	f9bd c040 	ldrsh.w	ip, [sp, #64]	; 0x40
 801fc66:	880b      	ldrh	r3, [r1, #0]
 801fc68:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	; 0x42
 801fc6c:	910d      	str	r1, [sp, #52]	; 0x34
 801fc6e:	fb03 c202 	mla	r2, r3, r2, ip
 801fc72:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801fc76:	4373      	muls	r3, r6
 801fc78:	b2ad      	uxth	r5, r5
 801fc7a:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801fc7e:	00ad      	lsls	r5, r5, #2
 801fc80:	9308      	str	r3, [sp, #32]
 801fc82:	1d2b      	adds	r3, r5, #4
 801fc84:	9309      	str	r3, [sp, #36]	; 0x24
 801fc86:	9b02      	ldr	r3, [sp, #8]
 801fc88:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 801fc8c:	9106      	str	r1, [sp, #24]
 801fc8e:	43da      	mvns	r2, r3
 801fc90:	2c00      	cmp	r4, #0
 801fc92:	bf0c      	ite	eq
 801fc94:	46dc      	moveq	ip, fp
 801fc96:	f04f 0c00 	movne.w	ip, #0
 801fc9a:	2300      	movs	r3, #0
 801fc9c:	b2d2      	uxtb	r2, r2
 801fc9e:	fa1f fc8c 	uxth.w	ip, ip
 801fca2:	9303      	str	r3, [sp, #12]
 801fca4:	9207      	str	r2, [sp, #28]
 801fca6:	9a08      	ldr	r2, [sp, #32]
 801fca8:	4282      	cmp	r2, r0
 801fcaa:	f240 80b5 	bls.w	801fe18 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x268>
 801fcae:	b963      	cbnz	r3, 801fcca <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x11a>
 801fcb0:	9b01      	ldr	r3, [sp, #4]
 801fcb2:	781a      	ldrb	r2, [r3, #0]
 801fcb4:	0993      	lsrs	r3, r2, #6
 801fcb6:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 801fcba:	9203      	str	r2, [sp, #12]
 801fcbc:	1e5a      	subs	r2, r3, #1
 801fcbe:	2a02      	cmp	r2, #2
 801fcc0:	d815      	bhi.n	801fcee <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x13e>
 801fcc2:	9a01      	ldr	r2, [sp, #4]
 801fcc4:	3201      	adds	r2, #1
 801fcc6:	9201      	str	r2, [sp, #4]
 801fcc8:	b29b      	uxth	r3, r3
 801fcca:	b1b4      	cbz	r4, 801fcfa <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x14a>
 801fccc:	429c      	cmp	r4, r3
 801fcce:	bf95      	itete	ls
 801fcd0:	1b1c      	subls	r4, r3, r4
 801fcd2:	1ae4      	subhi	r4, r4, r3
 801fcd4:	fa1f f884 	uxthls.w	r8, r4
 801fcd8:	b2a4      	uxthhi	r4, r4
 801fcda:	bf87      	ittee	hi
 801fcdc:	4666      	movhi	r6, ip
 801fcde:	f04f 0800 	movhi.w	r8, #0
 801fce2:	fa1f f68b 	uxthls.w	r6, fp
 801fce6:	2400      	movls	r4, #0
 801fce8:	4643      	mov	r3, r8
 801fcea:	46b4      	mov	ip, r6
 801fcec:	e7db      	b.n	801fca6 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf6>
 801fcee:	9a01      	ldr	r2, [sp, #4]
 801fcf0:	9b01      	ldr	r3, [sp, #4]
 801fcf2:	3202      	adds	r2, #2
 801fcf4:	785b      	ldrb	r3, [r3, #1]
 801fcf6:	9201      	str	r2, [sp, #4]
 801fcf8:	e7e7      	b.n	801fcca <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x11a>
 801fcfa:	2203      	movs	r2, #3
 801fcfc:	4615      	mov	r5, r2
 801fcfe:	9909      	ldr	r1, [sp, #36]	; 0x24
 801fd00:	9a03      	ldr	r2, [sp, #12]
 801fd02:	fb15 1202 	smlabb	r2, r5, r2, r1
 801fd06:	9905      	ldr	r1, [sp, #20]
 801fd08:	4563      	cmp	r3, ip
 801fd0a:	eb01 0502 	add.w	r5, r1, r2
 801fd0e:	9902      	ldr	r1, [sp, #8]
 801fd10:	bf29      	itett	cs
 801fd12:	eba3 080c 	subcs.w	r8, r3, ip
 801fd16:	ebac 0603 	subcc.w	r6, ip, r3
 801fd1a:	fa1f f888 	uxthcs.w	r8, r8
 801fd1e:	46e1      	movcs	r9, ip
 801fd20:	bf2f      	iteee	cs
 801fd22:	4626      	movcs	r6, r4
 801fd24:	b2b6      	uxthcc	r6, r6
 801fd26:	4699      	movcc	r9, r3
 801fd28:	46a0      	movcc	r8, r4
 801fd2a:	29ff      	cmp	r1, #255	; 0xff
 801fd2c:	d04a      	beq.n	801fdc4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x214>
 801fd2e:	9f06      	ldr	r7, [sp, #24]
 801fd30:	78a9      	ldrb	r1, [r5, #2]
 801fd32:	9004      	str	r0, [sp, #16]
 801fd34:	4379      	muls	r1, r7
 801fd36:	910a      	str	r1, [sp, #40]	; 0x28
 801fd38:	7869      	ldrb	r1, [r5, #1]
 801fd3a:	4379      	muls	r1, r7
 801fd3c:	910b      	str	r1, [sp, #44]	; 0x2c
 801fd3e:	9905      	ldr	r1, [sp, #20]
 801fd40:	5c8a      	ldrb	r2, [r1, r2]
 801fd42:	437a      	muls	r2, r7
 801fd44:	920c      	str	r2, [sp, #48]	; 0x30
 801fd46:	46ca      	mov	sl, r9
 801fd48:	f1ba 0f00 	cmp.w	sl, #0
 801fd4c:	d03d      	beq.n	801fdca <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x21a>
 801fd4e:	9a04      	ldr	r2, [sp, #16]
 801fd50:	9f07      	ldr	r7, [sp, #28]
 801fd52:	8812      	ldrh	r2, [r2, #0]
 801fd54:	1215      	asrs	r5, r2, #8
 801fd56:	46be      	mov	lr, r7
 801fd58:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801fd5c:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 801fd5e:	10d1      	asrs	r1, r2, #3
 801fd60:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
 801fd64:	fb05 750e 	mla	r5, r5, lr, r7
 801fd68:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801fd6c:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 801fd6e:	00d2      	lsls	r2, r2, #3
 801fd70:	ea41 1191 	orr.w	r1, r1, r1, lsr #6
 801fd74:	fb01 710e 	mla	r1, r1, lr, r7
 801fd78:	b2d2      	uxtb	r2, r2
 801fd7a:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 801fd7c:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801fd80:	b2ad      	uxth	r5, r5
 801fd82:	fb02 720e 	mla	r2, r2, lr, r7
 801fd86:	b292      	uxth	r2, r2
 801fd88:	f105 0e01 	add.w	lr, r5, #1
 801fd8c:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
 801fd90:	f102 0e01 	add.w	lr, r2, #1
 801fd94:	eb0e 2212 	add.w	r2, lr, r2, lsr #8
 801fd98:	b289      	uxth	r1, r1
 801fd9a:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801fd9e:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801fda2:	4315      	orrs	r5, r2
 801fda4:	1c4a      	adds	r2, r1, #1
 801fda6:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801fdaa:	0949      	lsrs	r1, r1, #5
 801fdac:	9a04      	ldr	r2, [sp, #16]
 801fdae:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801fdb2:	430d      	orrs	r5, r1
 801fdb4:	f822 5b02 	strh.w	r5, [r2], #2
 801fdb8:	f10a 3aff 	add.w	sl, sl, #4294967295
 801fdbc:	9204      	str	r2, [sp, #16]
 801fdbe:	fa1f fa8a 	uxth.w	sl, sl
 801fdc2:	e7c1      	b.n	801fd48 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x198>
 801fdc4:	4649      	mov	r1, r9
 801fdc6:	4686      	mov	lr, r0
 801fdc8:	b999      	cbnz	r1, 801fdf2 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x242>
 801fdca:	4563      	cmp	r3, ip
 801fdcc:	eb00 0049 	add.w	r0, r0, r9, lsl #1
 801fdd0:	d38a      	bcc.n	801fce8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x138>
 801fdd2:	f8bd 403c 	ldrh.w	r4, [sp, #60]	; 0x3c
 801fdd6:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801fdd8:	fa1f f68b 	uxth.w	r6, fp
 801fddc:	1ba4      	subs	r4, r4, r6
 801fdde:	881b      	ldrh	r3, [r3, #0]
 801fde0:	b2a4      	uxth	r4, r4
 801fde2:	2c00      	cmp	r4, #0
 801fde4:	eba3 030b 	sub.w	r3, r3, fp
 801fde8:	bf18      	it	ne
 801fdea:	2600      	movne	r6, #0
 801fdec:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801fdf0:	e77a      	b.n	801fce8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x138>
 801fdf2:	78aa      	ldrb	r2, [r5, #2]
 801fdf4:	4f0e      	ldr	r7, [pc, #56]	; (801fe30 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x280>)
 801fdf6:	ea07 2a02 	and.w	sl, r7, r2, lsl #8
 801fdfa:	786a      	ldrb	r2, [r5, #1]
 801fdfc:	00d2      	lsls	r2, r2, #3
 801fdfe:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801fe02:	ea4a 0202 	orr.w	r2, sl, r2
 801fe06:	f895 a000 	ldrb.w	sl, [r5]
 801fe0a:	3901      	subs	r1, #1
 801fe0c:	ea42 02da 	orr.w	r2, r2, sl, lsr #3
 801fe10:	f82e 2b02 	strh.w	r2, [lr], #2
 801fe14:	b289      	uxth	r1, r1
 801fe16:	e7d7      	b.n	801fdc8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x218>
 801fe18:	4b03      	ldr	r3, [pc, #12]	; (801fe28 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x278>)
 801fe1a:	6818      	ldr	r0, [r3, #0]
 801fe1c:	6803      	ldr	r3, [r0, #0]
 801fe1e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801fe20:	4798      	blx	r3
 801fe22:	b013      	add	sp, #76	; 0x4c
 801fe24:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801fe28:	20006c34 	.word	0x20006c34
 801fe2c:	20006c2e 	.word	0x20006c2e
 801fe30:	fffff800 	.word	0xfffff800

0801fe34 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 801fe34:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801fe38:	b09d      	sub	sp, #116	; 0x74
 801fe3a:	e9cd 1211 	strd	r1, r2, [sp, #68]	; 0x44
 801fe3e:	f89d 209c 	ldrb.w	r2, [sp, #156]	; 0x9c
 801fe42:	920e      	str	r2, [sp, #56]	; 0x38
 801fe44:	461c      	mov	r4, r3
 801fe46:	4683      	mov	fp, r0
 801fe48:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801fe4a:	2a00      	cmp	r2, #0
 801fe4c:	f000 81e0 	beq.w	8020210 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3dc>
 801fe50:	6820      	ldr	r0, [r4, #0]
 801fe52:	6861      	ldr	r1, [r4, #4]
 801fe54:	aa18      	add	r2, sp, #96	; 0x60
 801fe56:	c203      	stmia	r2!, {r0, r1}
 801fe58:	6818      	ldr	r0, [r3, #0]
 801fe5a:	6859      	ldr	r1, [r3, #4]
 801fe5c:	aa1a      	add	r2, sp, #104	; 0x68
 801fe5e:	c203      	stmia	r2!, {r0, r1}
 801fe60:	a818      	add	r0, sp, #96	; 0x60
 801fe62:	f7f8 f9ed 	bl	8018240 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801fe66:	4621      	mov	r1, r4
 801fe68:	a81a      	add	r0, sp, #104	; 0x68
 801fe6a:	f7f8 fa11 	bl	8018290 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801fe6e:	f9bd 3064 	ldrsh.w	r3, [sp, #100]	; 0x64
 801fe72:	f9bd 4066 	ldrsh.w	r4, [sp, #102]	; 0x66
 801fe76:	f9bd 606e 	ldrsh.w	r6, [sp, #110]	; 0x6e
 801fe7a:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 801fe7e:	bfd7      	itett	le
 801fe80:	b29a      	uxthle	r2, r3
 801fe82:	2201      	movgt	r2, #1
 801fe84:	f44f 6180 	movle.w	r1, #1024	; 0x400
 801fe88:	fb91 f2f2 	sdivle	r2, r1, r2
 801fe8c:	9202      	str	r2, [sp, #8]
 801fe8e:	9802      	ldr	r0, [sp, #8]
 801fe90:	f9bd 206a 	ldrsh.w	r2, [sp, #106]	; 0x6a
 801fe94:	fb92 f0f0 	sdiv	r0, r2, r0
 801fe98:	b280      	uxth	r0, r0
 801fe9a:	900f      	str	r0, [sp, #60]	; 0x3c
 801fe9c:	9902      	ldr	r1, [sp, #8]
 801fe9e:	9802      	ldr	r0, [sp, #8]
 801fea0:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801fea2:	440c      	add	r4, r1
 801fea4:	fb05 2510 	mls	r5, r5, r0, r2
 801fea8:	fb15 f503 	smulbb	r5, r5, r3
 801feac:	3c01      	subs	r4, #1
 801feae:	f8bd 3060 	ldrh.w	r3, [sp, #96]	; 0x60
 801feb2:	fb94 f4f1 	sdiv	r4, r4, r1
 801feb6:	f8bd 1068 	ldrh.w	r1, [sp, #104]	; 0x68
 801feba:	440d      	add	r5, r1
 801febc:	4419      	add	r1, r3
 801febe:	f8bd 3062 	ldrh.w	r3, [sp, #98]	; 0x62
 801fec2:	f8ad 1068 	strh.w	r1, [sp, #104]	; 0x68
 801fec6:	441a      	add	r2, r3
 801fec8:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	; 0x6c
 801fecc:	9306      	str	r3, [sp, #24]
 801fece:	4bb3      	ldr	r3, [pc, #716]	; (802019c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x368>)
 801fed0:	f8ad 206a 	strh.w	r2, [sp, #106]	; 0x6a
 801fed4:	6818      	ldr	r0, [r3, #0]
 801fed6:	6803      	ldr	r3, [r0, #0]
 801fed8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801feda:	4798      	blx	r3
 801fedc:	4bb0      	ldr	r3, [pc, #704]	; (80201a0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x36c>)
 801fede:	f9bd 106a 	ldrsh.w	r1, [sp, #106]	; 0x6a
 801fee2:	881a      	ldrh	r2, [r3, #0]
 801fee4:	f9bd 7068 	ldrsh.w	r7, [sp, #104]	; 0x68
 801fee8:	9316      	str	r3, [sp, #88]	; 0x58
 801feea:	fb02 7101 	mla	r1, r2, r1, r7
 801feee:	3401      	adds	r4, #1
 801fef0:	eb00 0841 	add.w	r8, r0, r1, lsl #1
 801fef4:	b2a4      	uxth	r4, r4
 801fef6:	4356      	muls	r6, r2
 801fef8:	eb08 0246 	add.w	r2, r8, r6, lsl #1
 801fefc:	00a4      	lsls	r4, r4, #2
 801fefe:	920a      	str	r2, [sp, #40]	; 0x28
 801ff00:	1d22      	adds	r2, r4, #4
 801ff02:	b2ad      	uxth	r5, r5
 801ff04:	9213      	str	r2, [sp, #76]	; 0x4c
 801ff06:	4ba7      	ldr	r3, [pc, #668]	; (80201a4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x370>)
 801ff08:	9a06      	ldr	r2, [sp, #24]
 801ff0a:	2d00      	cmp	r5, #0
 801ff0c:	bf0c      	ite	eq
 801ff0e:	4611      	moveq	r1, r2
 801ff10:	2100      	movne	r1, #0
 801ff12:	2200      	movs	r2, #0
 801ff14:	eba3 030b 	sub.w	r3, r3, fp
 801ff18:	b289      	uxth	r1, r1
 801ff1a:	920d      	str	r2, [sp, #52]	; 0x34
 801ff1c:	9317      	str	r3, [sp, #92]	; 0x5c
 801ff1e:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801ff20:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801ff22:	fa12 f383 	uxtah	r3, r2, r3
 801ff26:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801ff28:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 801ff2c:	3304      	adds	r3, #4
 801ff2e:	9308      	str	r3, [sp, #32]
 801ff30:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801ff32:	4543      	cmp	r3, r8
 801ff34:	f240 8167 	bls.w	8020206 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3d2>
 801ff38:	9a02      	ldr	r2, [sp, #8]
 801ff3a:	f8bd 3064 	ldrh.w	r3, [sp, #100]	; 0x64
 801ff3e:	fbb5 f3f3 	udiv	r3, r5, r3
 801ff42:	1ad3      	subs	r3, r2, r3
 801ff44:	b29b      	uxth	r3, r3
 801ff46:	9314      	str	r3, [sp, #80]	; 0x50
 801ff48:	9b08      	ldr	r3, [sp, #32]
 801ff4a:	9808      	ldr	r0, [sp, #32]
 801ff4c:	785a      	ldrb	r2, [r3, #1]
 801ff4e:	789b      	ldrb	r3, [r3, #2]
 801ff50:	7800      	ldrb	r0, [r0, #0]
 801ff52:	9010      	str	r0, [sp, #64]	; 0x40
 801ff54:	021b      	lsls	r3, r3, #8
 801ff56:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 801ff5a:	9a08      	ldr	r2, [sp, #32]
 801ff5c:	78d2      	ldrb	r2, [r2, #3]
 801ff5e:	4313      	orrs	r3, r2
 801ff60:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801ff62:	3001      	adds	r0, #1
 801ff64:	441a      	add	r2, r3
 801ff66:	9007      	str	r0, [sp, #28]
 801ff68:	1c50      	adds	r0, r2, #1
 801ff6a:	9005      	str	r0, [sp, #20]
 801ff6c:	7852      	ldrb	r2, [r2, #1]
 801ff6e:	9811      	ldr	r0, [sp, #68]	; 0x44
 801ff70:	0212      	lsls	r2, r2, #8
 801ff72:	5cc3      	ldrb	r3, [r0, r3]
 801ff74:	f402 72ff 	and.w	r2, r2, #510	; 0x1fe
 801ff78:	431a      	orrs	r2, r3
 801ff7a:	b293      	uxth	r3, r2
 801ff7c:	930b      	str	r3, [sp, #44]	; 0x2c
 801ff7e:	2300      	movs	r3, #0
 801ff80:	9309      	str	r3, [sp, #36]	; 0x24
 801ff82:	2301      	movs	r3, #1
 801ff84:	9301      	str	r3, [sp, #4]
 801ff86:	9304      	str	r3, [sp, #16]
 801ff88:	2300      	movs	r3, #0
 801ff8a:	f88b 2804 	strb.w	r2, [fp, #2052]	; 0x804
 801ff8e:	9303      	str	r3, [sp, #12]
 801ff90:	f04f 0e01 	mov.w	lr, #1
 801ff94:	2d00      	cmp	r5, #0
 801ff96:	d07c      	beq.n	8020092 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x25e>
 801ff98:	45ae      	cmp	lr, r5
 801ff9a:	d26b      	bcs.n	8020074 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x240>
 801ff9c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801ff9e:	eba5 050e 	sub.w	r5, r5, lr
 801ffa2:	4543      	cmp	r3, r8
 801ffa4:	b2ad      	uxth	r5, r5
 801ffa6:	460c      	mov	r4, r1
 801ffa8:	d802      	bhi.n	801ffb0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x17c>
 801ffaa:	e070      	b.n	802008e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x25a>
 801ffac:	2b00      	cmp	r3, #0
 801ffae:	d15c      	bne.n	802006a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 801ffb0:	9b05      	ldr	r3, [sp, #20]
 801ffb2:	9a04      	ldr	r2, [sp, #16]
 801ffb4:	785b      	ldrb	r3, [r3, #1]
 801ffb6:	9904      	ldr	r1, [sp, #16]
 801ffb8:	f1c2 0207 	rsb	r2, r2, #7
 801ffbc:	4093      	lsls	r3, r2
 801ffbe:	005b      	lsls	r3, r3, #1
 801ffc0:	f403 72ff 	and.w	r2, r3, #510	; 0x1fe
 801ffc4:	9b05      	ldr	r3, [sp, #20]
 801ffc6:	781b      	ldrb	r3, [r3, #0]
 801ffc8:	410b      	asrs	r3, r1
 801ffca:	3101      	adds	r1, #1
 801ffcc:	b2c9      	uxtb	r1, r1
 801ffce:	2908      	cmp	r1, #8
 801ffd0:	9104      	str	r1, [sp, #16]
 801ffd2:	9905      	ldr	r1, [sp, #20]
 801ffd4:	bf0a      	itet	eq
 801ffd6:	3102      	addeq	r1, #2
 801ffd8:	3101      	addne	r1, #1
 801ffda:	9105      	streq	r1, [sp, #20]
 801ffdc:	b2db      	uxtb	r3, r3
 801ffde:	bf0a      	itet	eq
 801ffe0:	2100      	moveq	r1, #0
 801ffe2:	9105      	strne	r1, [sp, #20]
 801ffe4:	9104      	streq	r1, [sp, #16]
 801ffe6:	4313      	orrs	r3, r2
 801ffe8:	9910      	ldr	r1, [sp, #64]	; 0x40
 801ffea:	b29a      	uxth	r2, r3
 801ffec:	4291      	cmp	r1, r2
 801ffee:	d30a      	bcc.n	8020006 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1d2>
 801fff0:	f88b 3804 	strb.w	r3, [fp, #2052]	; 0x804
 801fff4:	2301      	movs	r3, #1
 801fff6:	9907      	ldr	r1, [sp, #28]
 801fff8:	f5b1 7f00 	cmp.w	r1, #512	; 0x200
 801fffc:	d30f      	bcc.n	802001e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1ea>
 801fffe:	2100      	movs	r1, #0
 8020000:	9301      	str	r3, [sp, #4]
 8020002:	9103      	str	r1, [sp, #12]
 8020004:	e032      	b.n	802006c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x238>
 8020006:	9b07      	ldr	r3, [sp, #28]
 8020008:	429a      	cmp	r2, r3
 802000a:	d318      	bcc.n	802003e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x20a>
 802000c:	9b01      	ldr	r3, [sp, #4]
 802000e:	f89b 1804 	ldrb.w	r1, [fp, #2052]	; 0x804
 8020012:	445b      	add	r3, fp
 8020014:	f883 1804 	strb.w	r1, [r3, #2052]	; 0x804
 8020018:	9b01      	ldr	r3, [sp, #4]
 802001a:	3301      	adds	r3, #1
 802001c:	b29b      	uxth	r3, r3
 802001e:	9907      	ldr	r1, [sp, #28]
 8020020:	f89b 0804 	ldrb.w	r0, [fp, #2052]	; 0x804
 8020024:	eb0b 0181 	add.w	r1, fp, r1, lsl #2
 8020028:	7108      	strb	r0, [r1, #4]
 802002a:	980b      	ldr	r0, [sp, #44]	; 0x2c
 802002c:	80c8      	strh	r0, [r1, #6]
 802002e:	9801      	ldr	r0, [sp, #4]
 8020030:	3001      	adds	r0, #1
 8020032:	7148      	strb	r0, [r1, #5]
 8020034:	9907      	ldr	r1, [sp, #28]
 8020036:	3101      	adds	r1, #1
 8020038:	b289      	uxth	r1, r1
 802003a:	9107      	str	r1, [sp, #28]
 802003c:	e7df      	b.n	801fffe <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1ca>
 802003e:	eb0b 0382 	add.w	r3, fp, r2, lsl #2
 8020042:	4611      	mov	r1, r2
 8020044:	795b      	ldrb	r3, [r3, #5]
 8020046:	f603 0004 	addw	r0, r3, #2052	; 0x804
 802004a:	4458      	add	r0, fp
 802004c:	9e17      	ldr	r6, [sp, #92]	; 0x5c
 802004e:	4406      	add	r6, r0
 8020050:	2e00      	cmp	r6, #0
 8020052:	dd06      	ble.n	8020062 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x22e>
 8020054:	eb0b 0181 	add.w	r1, fp, r1, lsl #2
 8020058:	790e      	ldrb	r6, [r1, #4]
 802005a:	f800 6d01 	strb.w	r6, [r0, #-1]!
 802005e:	88c9      	ldrh	r1, [r1, #6]
 8020060:	e7f4      	b.n	802004c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x218>
 8020062:	f88b 1804 	strb.w	r1, [fp, #2052]	; 0x804
 8020066:	b29b      	uxth	r3, r3
 8020068:	e7c5      	b.n	801fff6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1c2>
 802006a:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 802006c:	920b      	str	r2, [sp, #44]	; 0x2c
 802006e:	4621      	mov	r1, r4
 8020070:	469e      	mov	lr, r3
 8020072:	e78f      	b.n	801ff94 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x160>
 8020074:	9a03      	ldr	r2, [sp, #12]
 8020076:	f8bd 4018 	ldrh.w	r4, [sp, #24]
 802007a:	442a      	add	r2, r5
 802007c:	ebae 0305 	sub.w	r3, lr, r5
 8020080:	b292      	uxth	r2, r2
 8020082:	b29b      	uxth	r3, r3
 8020084:	9203      	str	r2, [sp, #12]
 8020086:	2500      	movs	r5, #0
 8020088:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 802008a:	4542      	cmp	r2, r8
 802008c:	d88e      	bhi.n	801ffac <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x178>
 802008e:	4621      	mov	r1, r4
 8020090:	e74e      	b.n	801ff30 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xfc>
 8020092:	458e      	cmp	lr, r1
 8020094:	bf29      	itett	cs
 8020096:	ebae 0301 	subcs.w	r3, lr, r1
 802009a:	eba1 040e 	subcc.w	r4, r1, lr
 802009e:	b29b      	uxthcs	r3, r3
 80200a0:	910c      	strcs	r1, [sp, #48]	; 0x30
 80200a2:	bf2f      	iteee	cs
 80200a4:	462c      	movcs	r4, r5
 80200a6:	b2a4      	uxthcc	r4, r4
 80200a8:	f8cd e030 	strcc.w	lr, [sp, #48]	; 0x30
 80200ac:	462b      	movcc	r3, r5
 80200ae:	f04f 0900 	mov.w	r9, #0
 80200b2:	9a03      	ldr	r2, [sp, #12]
 80200b4:	980c      	ldr	r0, [sp, #48]	; 0x30
 80200b6:	444a      	add	r2, r9
 80200b8:	4548      	cmp	r0, r9
 80200ba:	b292      	uxth	r2, r2
 80200bc:	d074      	beq.n	80201a8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x374>
 80200be:	445a      	add	r2, fp
 80200c0:	2004      	movs	r0, #4
 80200c2:	4605      	mov	r5, r0
 80200c4:	f892 2804 	ldrb.w	r2, [r2, #2052]	; 0x804
 80200c8:	9813      	ldr	r0, [sp, #76]	; 0x4c
 80200ca:	fb15 0202 	smlabb	r2, r5, r2, r0
 80200ce:	9812      	ldr	r0, [sp, #72]	; 0x48
 80200d0:	5880      	ldr	r0, [r0, r2]
 80200d2:	ea5f 6a10 	movs.w	sl, r0, lsr #24
 80200d6:	d014      	beq.n	8020102 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2ce>
 80200d8:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 80200dc:	ea4f 2510 	mov.w	r5, r0, lsr #8
 80200e0:	d112      	bne.n	8020108 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2d4>
 80200e2:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 80200e4:	2aff      	cmp	r2, #255	; 0xff
 80200e6:	d10f      	bne.n	8020108 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2d4>
 80200e8:	0942      	lsrs	r2, r0, #5
 80200ea:	f425 65ff 	bic.w	r5, r5, #2040	; 0x7f8
 80200ee:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80200f2:	f025 0507 	bic.w	r5, r5, #7
 80200f6:	4315      	orrs	r5, r2
 80200f8:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 80200fc:	4305      	orrs	r5, r0
 80200fe:	f828 5019 	strh.w	r5, [r8, r9, lsl #1]
 8020102:	f109 0901 	add.w	r9, r9, #1
 8020106:	e7d4      	b.n	80200b2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x27e>
 8020108:	f838 c019 	ldrh.w	ip, [r8, r9, lsl #1]
 802010c:	ea4f 06ec 	mov.w	r6, ip, asr #3
 8020110:	f006 02fc 	and.w	r2, r6, #252	; 0xfc
 8020114:	9215      	str	r2, [sp, #84]	; 0x54
 8020116:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8020118:	fb02 fa0a 	mul.w	sl, r2, sl
 802011c:	f10a 0201 	add.w	r2, sl, #1
 8020120:	eb02 222a 	add.w	r2, r2, sl, asr #8
 8020124:	ea4f 272c 	mov.w	r7, ip, asr #8
 8020128:	1212      	asrs	r2, r2, #8
 802012a:	fa1f fa82 	uxth.w	sl, r2
 802012e:	f3c0 4607 	ubfx	r6, r0, #16, #8
 8020132:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8020136:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 802013a:	43d2      	mvns	r2, r2
 802013c:	b2d2      	uxtb	r2, r2
 802013e:	fb16 f60a 	smulbb	r6, r6, sl
 8020142:	fa5f fc8c 	uxtb.w	ip, ip
 8020146:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
 802014a:	b2c0      	uxtb	r0, r0
 802014c:	fb07 6702 	mla	r7, r7, r2, r6
 8020150:	ea4c 1c5c 	orr.w	ip, ip, ip, lsr #5
 8020154:	9e15      	ldr	r6, [sp, #84]	; 0x54
 8020156:	fb10 f00a 	smulbb	r0, r0, sl
 802015a:	fb0c 0002 	mla	r0, ip, r2, r0
 802015e:	b2ed      	uxtb	r5, r5
 8020160:	b2bf      	uxth	r7, r7
 8020162:	fb15 f50a 	smulbb	r5, r5, sl
 8020166:	b280      	uxth	r0, r0
 8020168:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 802016c:	fb06 5602 	mla	r6, r6, r2, r5
 8020170:	1c7a      	adds	r2, r7, #1
 8020172:	1c45      	adds	r5, r0, #1
 8020174:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 8020178:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 802017c:	b2b6      	uxth	r6, r6
 802017e:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8020182:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8020186:	432f      	orrs	r7, r5
 8020188:	1c75      	adds	r5, r6, #1
 802018a:	eb05 2516 	add.w	r5, r5, r6, lsr #8
 802018e:	096d      	lsrs	r5, r5, #5
 8020190:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8020194:	432f      	orrs	r7, r5
 8020196:	f828 7019 	strh.w	r7, [r8, r9, lsl #1]
 802019a:	e7b2      	b.n	8020102 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2ce>
 802019c:	20006c34 	.word	0x20006c34
 80201a0:	20006c2e 	.word	0x20006c2e
 80201a4:	fffff7fb 	.word	0xfffff7fb
 80201a8:	9203      	str	r2, [sp, #12]
 80201aa:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 80201ac:	458e      	cmp	lr, r1
 80201ae:	eb08 0842 	add.w	r8, r8, r2, lsl #1
 80201b2:	f4ff af68 	bcc.w	8020086 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x252>
 80201b6:	9a16      	ldr	r2, [sp, #88]	; 0x58
 80201b8:	9906      	ldr	r1, [sp, #24]
 80201ba:	8812      	ldrh	r2, [r2, #0]
 80201bc:	1a52      	subs	r2, r2, r1
 80201be:	eb08 0842 	add.w	r8, r8, r2, lsl #1
 80201c2:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80201c4:	9914      	ldr	r1, [sp, #80]	; 0x50
 80201c6:	3201      	adds	r2, #1
 80201c8:	428a      	cmp	r2, r1
 80201ca:	9209      	str	r2, [sp, #36]	; 0x24
 80201cc:	d111      	bne.n	80201f2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3be>
 80201ce:	f8bd 5068 	ldrh.w	r5, [sp, #104]	; 0x68
 80201d2:	f8bd 9060 	ldrh.w	r9, [sp, #96]	; 0x60
 80201d6:	9b06      	ldr	r3, [sp, #24]
 80201d8:	eba5 0509 	sub.w	r5, r5, r9
 80201dc:	b2ad      	uxth	r5, r5
 80201de:	2d00      	cmp	r5, #0
 80201e0:	bf08      	it	eq
 80201e2:	4619      	moveq	r1, r3
 80201e4:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80201e6:	bf18      	it	ne
 80201e8:	2100      	movne	r1, #0
 80201ea:	3301      	adds	r3, #1
 80201ec:	930d      	str	r3, [sp, #52]	; 0x34
 80201ee:	b289      	uxth	r1, r1
 80201f0:	e695      	b.n	801ff1e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xea>
 80201f2:	f8bd 4018 	ldrh.w	r4, [sp, #24]
 80201f6:	f8bd 5064 	ldrh.w	r5, [sp, #100]	; 0x64
 80201fa:	1b2d      	subs	r5, r5, r4
 80201fc:	b2ad      	uxth	r5, r5
 80201fe:	2d00      	cmp	r5, #0
 8020200:	bf18      	it	ne
 8020202:	2400      	movne	r4, #0
 8020204:	e740      	b.n	8020088 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x254>
 8020206:	4b04      	ldr	r3, [pc, #16]	; (8020218 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3e4>)
 8020208:	6818      	ldr	r0, [r3, #0]
 802020a:	6803      	ldr	r3, [r0, #0]
 802020c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 802020e:	4798      	blx	r3
 8020210:	b01d      	add	sp, #116	; 0x74
 8020212:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8020216:	bf00      	nop
 8020218:	20006c34 	.word	0x20006c34

0802021c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 802021c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020220:	b09f      	sub	sp, #124	; 0x7c
 8020222:	e9cd 1213 	strd	r1, r2, [sp, #76]	; 0x4c
 8020226:	f89d 20a4 	ldrb.w	r2, [sp, #164]	; 0xa4
 802022a:	920a      	str	r2, [sp, #40]	; 0x28
 802022c:	461d      	mov	r5, r3
 802022e:	4604      	mov	r4, r0
 8020230:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8020232:	2a00      	cmp	r2, #0
 8020234:	f000 81fa 	beq.w	802062c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x410>
 8020238:	6828      	ldr	r0, [r5, #0]
 802023a:	6869      	ldr	r1, [r5, #4]
 802023c:	aa1a      	add	r2, sp, #104	; 0x68
 802023e:	c203      	stmia	r2!, {r0, r1}
 8020240:	6818      	ldr	r0, [r3, #0]
 8020242:	6859      	ldr	r1, [r3, #4]
 8020244:	aa1c      	add	r2, sp, #112	; 0x70
 8020246:	c203      	stmia	r2!, {r0, r1}
 8020248:	a81a      	add	r0, sp, #104	; 0x68
 802024a:	f7f7 fff9 	bl	8018240 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 802024e:	4629      	mov	r1, r5
 8020250:	a81c      	add	r0, sp, #112	; 0x70
 8020252:	f7f8 f81d 	bl	8018290 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8020256:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	; 0x6c
 802025a:	f9bd 606e 	ldrsh.w	r6, [sp, #110]	; 0x6e
 802025e:	f9bd 7076 	ldrsh.w	r7, [sp, #118]	; 0x76
 8020262:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8020266:	bfd7      	itett	le
 8020268:	b29a      	uxthle	r2, r3
 802026a:	2201      	movgt	r2, #1
 802026c:	f44f 6180 	movle.w	r1, #1024	; 0x400
 8020270:	fb91 f2f2 	sdivle	r2, r1, r2
 8020274:	9201      	str	r2, [sp, #4]
 8020276:	9801      	ldr	r0, [sp, #4]
 8020278:	f9bd 2072 	ldrsh.w	r2, [sp, #114]	; 0x72
 802027c:	fb92 f0f0 	sdiv	r0, r2, r0
 8020280:	b280      	uxth	r0, r0
 8020282:	9010      	str	r0, [sp, #64]	; 0x40
 8020284:	9901      	ldr	r1, [sp, #4]
 8020286:	9801      	ldr	r0, [sp, #4]
 8020288:	9d10      	ldr	r5, [sp, #64]	; 0x40
 802028a:	440e      	add	r6, r1
 802028c:	fb05 2510 	mls	r5, r5, r0, r2
 8020290:	fb15 f503 	smulbb	r5, r5, r3
 8020294:	3e01      	subs	r6, #1
 8020296:	f8bd 3068 	ldrh.w	r3, [sp, #104]	; 0x68
 802029a:	fb96 f6f1 	sdiv	r6, r6, r1
 802029e:	f8bd 1070 	ldrh.w	r1, [sp, #112]	; 0x70
 80202a2:	440d      	add	r5, r1
 80202a4:	4419      	add	r1, r3
 80202a6:	f8bd 306a 	ldrh.w	r3, [sp, #106]	; 0x6a
 80202aa:	f8ad 1070 	strh.w	r1, [sp, #112]	; 0x70
 80202ae:	441a      	add	r2, r3
 80202b0:	f9bd 3074 	ldrsh.w	r3, [sp, #116]	; 0x74
 80202b4:	9304      	str	r3, [sp, #16]
 80202b6:	4b96      	ldr	r3, [pc, #600]	; (8020510 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2f4>)
 80202b8:	f8ad 2072 	strh.w	r2, [sp, #114]	; 0x72
 80202bc:	6818      	ldr	r0, [r3, #0]
 80202be:	6803      	ldr	r3, [r0, #0]
 80202c0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80202c2:	4798      	blx	r3
 80202c4:	4b93      	ldr	r3, [pc, #588]	; (8020514 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2f8>)
 80202c6:	f9bd 1072 	ldrsh.w	r1, [sp, #114]	; 0x72
 80202ca:	881a      	ldrh	r2, [r3, #0]
 80202cc:	f9bd c070 	ldrsh.w	ip, [sp, #112]	; 0x70
 80202d0:	9318      	str	r3, [sp, #96]	; 0x60
 80202d2:	fb02 c101 	mla	r1, r2, r1, ip
 80202d6:	eb00 0b41 	add.w	fp, r0, r1, lsl #1
 80202da:	4357      	muls	r7, r2
 80202dc:	eb0b 0247 	add.w	r2, fp, r7, lsl #1
 80202e0:	3601      	adds	r6, #1
 80202e2:	920b      	str	r2, [sp, #44]	; 0x2c
 80202e4:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80202e6:	4b8c      	ldr	r3, [pc, #560]	; (8020518 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2fc>)
 80202e8:	b2b6      	uxth	r6, r6
 80202ea:	eb02 0686 	add.w	r6, r2, r6, lsl #2
 80202ee:	1d32      	adds	r2, r6, #4
 80202f0:	9206      	str	r2, [sp, #24]
 80202f2:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80202f4:	43d2      	mvns	r2, r2
 80202f6:	b2d2      	uxtb	r2, r2
 80202f8:	b2ad      	uxth	r5, r5
 80202fa:	9215      	str	r2, [sp, #84]	; 0x54
 80202fc:	9a04      	ldr	r2, [sp, #16]
 80202fe:	2d00      	cmp	r5, #0
 8020300:	bf0c      	ite	eq
 8020302:	4611      	moveq	r1, r2
 8020304:	2100      	movne	r1, #0
 8020306:	2200      	movs	r2, #0
 8020308:	1b1b      	subs	r3, r3, r4
 802030a:	b289      	uxth	r1, r1
 802030c:	920d      	str	r2, [sp, #52]	; 0x34
 802030e:	9319      	str	r3, [sp, #100]	; 0x64
 8020310:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8020312:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8020314:	fa12 f383 	uxtah	r3, r2, r3
 8020318:	9a14      	ldr	r2, [sp, #80]	; 0x50
 802031a:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 802031e:	3304      	adds	r3, #4
 8020320:	9307      	str	r3, [sp, #28]
 8020322:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8020324:	455b      	cmp	r3, fp
 8020326:	f240 817c 	bls.w	8020622 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x406>
 802032a:	9a01      	ldr	r2, [sp, #4]
 802032c:	f8bd 306c 	ldrh.w	r3, [sp, #108]	; 0x6c
 8020330:	fbb5 f3f3 	udiv	r3, r5, r3
 8020334:	1ad3      	subs	r3, r2, r3
 8020336:	b29b      	uxth	r3, r3
 8020338:	9316      	str	r3, [sp, #88]	; 0x58
 802033a:	9b07      	ldr	r3, [sp, #28]
 802033c:	9807      	ldr	r0, [sp, #28]
 802033e:	785a      	ldrb	r2, [r3, #1]
 8020340:	789b      	ldrb	r3, [r3, #2]
 8020342:	7800      	ldrb	r0, [r0, #0]
 8020344:	9011      	str	r0, [sp, #68]	; 0x44
 8020346:	021b      	lsls	r3, r3, #8
 8020348:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 802034c:	9a07      	ldr	r2, [sp, #28]
 802034e:	78d2      	ldrb	r2, [r2, #3]
 8020350:	4313      	orrs	r3, r2
 8020352:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8020354:	3001      	adds	r0, #1
 8020356:	441a      	add	r2, r3
 8020358:	9005      	str	r0, [sp, #20]
 802035a:	1c50      	adds	r0, r2, #1
 802035c:	9003      	str	r0, [sp, #12]
 802035e:	7852      	ldrb	r2, [r2, #1]
 8020360:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8020362:	0212      	lsls	r2, r2, #8
 8020364:	5cc3      	ldrb	r3, [r0, r3]
 8020366:	f402 72ff 	and.w	r2, r2, #510	; 0x1fe
 802036a:	431a      	orrs	r2, r3
 802036c:	b293      	uxth	r3, r2
 802036e:	930c      	str	r3, [sp, #48]	; 0x30
 8020370:	2300      	movs	r3, #0
 8020372:	f884 2804 	strb.w	r2, [r4, #2052]	; 0x804
 8020376:	9308      	str	r3, [sp, #32]
 8020378:	461a      	mov	r2, r3
 802037a:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 802037e:	930e      	str	r3, [sp, #56]	; 0x38
 8020380:	f04f 0801 	mov.w	r8, #1
 8020384:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 8020388:	f8cd 8008 	str.w	r8, [sp, #8]
 802038c:	46c4      	mov	ip, r8
 802038e:	930f      	str	r3, [sp, #60]	; 0x3c
 8020390:	2d00      	cmp	r5, #0
 8020392:	d07c      	beq.n	802048e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x272>
 8020394:	45ac      	cmp	ip, r5
 8020396:	d26c      	bcs.n	8020472 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x256>
 8020398:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 802039a:	eba5 050c 	sub.w	r5, r5, ip
 802039e:	455b      	cmp	r3, fp
 80203a0:	b2ad      	uxth	r5, r5
 80203a2:	4608      	mov	r0, r1
 80203a4:	d802      	bhi.n	80203ac <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x190>
 80203a6:	e070      	b.n	802048a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x26e>
 80203a8:	2b00      	cmp	r3, #0
 80203aa:	d15c      	bne.n	8020466 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24a>
 80203ac:	9b03      	ldr	r3, [sp, #12]
 80203ae:	9a02      	ldr	r2, [sp, #8]
 80203b0:	785b      	ldrb	r3, [r3, #1]
 80203b2:	9902      	ldr	r1, [sp, #8]
 80203b4:	f1c2 0207 	rsb	r2, r2, #7
 80203b8:	4093      	lsls	r3, r2
 80203ba:	005b      	lsls	r3, r3, #1
 80203bc:	f403 72ff 	and.w	r2, r3, #510	; 0x1fe
 80203c0:	9b03      	ldr	r3, [sp, #12]
 80203c2:	781b      	ldrb	r3, [r3, #0]
 80203c4:	410b      	asrs	r3, r1
 80203c6:	3101      	adds	r1, #1
 80203c8:	b2c9      	uxtb	r1, r1
 80203ca:	2908      	cmp	r1, #8
 80203cc:	9102      	str	r1, [sp, #8]
 80203ce:	9903      	ldr	r1, [sp, #12]
 80203d0:	bf0a      	itet	eq
 80203d2:	3102      	addeq	r1, #2
 80203d4:	3101      	addne	r1, #1
 80203d6:	9103      	streq	r1, [sp, #12]
 80203d8:	b2db      	uxtb	r3, r3
 80203da:	bf0a      	itet	eq
 80203dc:	2100      	moveq	r1, #0
 80203de:	9103      	strne	r1, [sp, #12]
 80203e0:	9102      	streq	r1, [sp, #8]
 80203e2:	4313      	orrs	r3, r2
 80203e4:	9911      	ldr	r1, [sp, #68]	; 0x44
 80203e6:	b29a      	uxth	r2, r3
 80203e8:	4291      	cmp	r1, r2
 80203ea:	d30a      	bcc.n	8020402 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1e6>
 80203ec:	f884 3804 	strb.w	r3, [r4, #2052]	; 0x804
 80203f0:	2301      	movs	r3, #1
 80203f2:	9905      	ldr	r1, [sp, #20]
 80203f4:	f5b1 7f00 	cmp.w	r1, #512	; 0x200
 80203f8:	d30f      	bcc.n	802041a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1fe>
 80203fa:	2100      	movs	r1, #0
 80203fc:	4698      	mov	r8, r3
 80203fe:	9100      	str	r1, [sp, #0]
 8020400:	e032      	b.n	8020468 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24c>
 8020402:	9b05      	ldr	r3, [sp, #20]
 8020404:	429a      	cmp	r2, r3
 8020406:	d318      	bcc.n	802043a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x21e>
 8020408:	eb04 0308 	add.w	r3, r4, r8
 802040c:	f894 1804 	ldrb.w	r1, [r4, #2052]	; 0x804
 8020410:	f883 1804 	strb.w	r1, [r3, #2052]	; 0x804
 8020414:	f108 0301 	add.w	r3, r8, #1
 8020418:	b29b      	uxth	r3, r3
 802041a:	9905      	ldr	r1, [sp, #20]
 802041c:	f894 6804 	ldrb.w	r6, [r4, #2052]	; 0x804
 8020420:	eb04 0181 	add.w	r1, r4, r1, lsl #2
 8020424:	710e      	strb	r6, [r1, #4]
 8020426:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 8020428:	80ce      	strh	r6, [r1, #6]
 802042a:	f108 0601 	add.w	r6, r8, #1
 802042e:	714e      	strb	r6, [r1, #5]
 8020430:	9905      	ldr	r1, [sp, #20]
 8020432:	3101      	adds	r1, #1
 8020434:	b289      	uxth	r1, r1
 8020436:	9105      	str	r1, [sp, #20]
 8020438:	e7df      	b.n	80203fa <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1de>
 802043a:	eb04 0382 	add.w	r3, r4, r2, lsl #2
 802043e:	4611      	mov	r1, r2
 8020440:	795b      	ldrb	r3, [r3, #5]
 8020442:	f603 0604 	addw	r6, r3, #2052	; 0x804
 8020446:	4426      	add	r6, r4
 8020448:	9f19      	ldr	r7, [sp, #100]	; 0x64
 802044a:	4437      	add	r7, r6
 802044c:	2f00      	cmp	r7, #0
 802044e:	dd06      	ble.n	802045e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x242>
 8020450:	eb04 0181 	add.w	r1, r4, r1, lsl #2
 8020454:	790f      	ldrb	r7, [r1, #4]
 8020456:	f806 7d01 	strb.w	r7, [r6, #-1]!
 802045a:	88c9      	ldrh	r1, [r1, #6]
 802045c:	e7f4      	b.n	8020448 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x22c>
 802045e:	f884 1804 	strb.w	r1, [r4, #2052]	; 0x804
 8020462:	b29b      	uxth	r3, r3
 8020464:	e7c5      	b.n	80203f2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d6>
 8020466:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8020468:	920c      	str	r2, [sp, #48]	; 0x30
 802046a:	4601      	mov	r1, r0
 802046c:	9a00      	ldr	r2, [sp, #0]
 802046e:	469c      	mov	ip, r3
 8020470:	e78e      	b.n	8020390 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x174>
 8020472:	1957      	adds	r7, r2, r5
 8020474:	ebac 0305 	sub.w	r3, ip, r5
 8020478:	b2ba      	uxth	r2, r7
 802047a:	f8bd 0010 	ldrh.w	r0, [sp, #16]
 802047e:	9200      	str	r2, [sp, #0]
 8020480:	b29b      	uxth	r3, r3
 8020482:	2500      	movs	r5, #0
 8020484:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8020486:	455a      	cmp	r2, fp
 8020488:	d88e      	bhi.n	80203a8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x18c>
 802048a:	4601      	mov	r1, r0
 802048c:	e749      	b.n	8020322 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x106>
 802048e:	458c      	cmp	ip, r1
 8020490:	bf2c      	ite	cs
 8020492:	4628      	movcs	r0, r5
 8020494:	462b      	movcc	r3, r5
 8020496:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 8020498:	bf27      	ittee	cs
 802049a:	9109      	strcs	r1, [sp, #36]	; 0x24
 802049c:	ebac 0301 	subcs.w	r3, ip, r1
 80204a0:	eba1 000c 	subcc.w	r0, r1, ip
 80204a4:	f8cd c024 	strcc.w	ip, [sp, #36]	; 0x24
 80204a8:	bf2c      	ite	cs
 80204aa:	b29b      	uxthcs	r3, r3
 80204ac:	b280      	uxthcc	r0, r0
 80204ae:	2dff      	cmp	r5, #255	; 0xff
 80204b0:	9d09      	ldr	r5, [sp, #36]	; 0x24
 80204b2:	eb02 0705 	add.w	r7, r2, r5
 80204b6:	b2bd      	uxth	r5, r7
 80204b8:	9500      	str	r5, [sp, #0]
 80204ba:	d12f      	bne.n	802051c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x300>
 80204bc:	465e      	mov	r6, fp
 80204be:	9d00      	ldr	r5, [sp, #0]
 80204c0:	42aa      	cmp	r2, r5
 80204c2:	f040 8084 	bne.w	80205ce <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x3b2>
 80204c6:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80204c8:	458c      	cmp	ip, r1
 80204ca:	eb0b 0b42 	add.w	fp, fp, r2, lsl #1
 80204ce:	d3d8      	bcc.n	8020482 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x266>
 80204d0:	9a18      	ldr	r2, [sp, #96]	; 0x60
 80204d2:	9904      	ldr	r1, [sp, #16]
 80204d4:	8812      	ldrh	r2, [r2, #0]
 80204d6:	1a52      	subs	r2, r2, r1
 80204d8:	eb0b 0b42 	add.w	fp, fp, r2, lsl #1
 80204dc:	9a08      	ldr	r2, [sp, #32]
 80204de:	9916      	ldr	r1, [sp, #88]	; 0x58
 80204e0:	3201      	adds	r2, #1
 80204e2:	428a      	cmp	r2, r1
 80204e4:	9208      	str	r2, [sp, #32]
 80204e6:	f040 8092 	bne.w	802060e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x3f2>
 80204ea:	f8bd 5070 	ldrh.w	r5, [sp, #112]	; 0x70
 80204ee:	f8bd c068 	ldrh.w	ip, [sp, #104]	; 0x68
 80204f2:	9b04      	ldr	r3, [sp, #16]
 80204f4:	eba5 050c 	sub.w	r5, r5, ip
 80204f8:	b2ad      	uxth	r5, r5
 80204fa:	2d00      	cmp	r5, #0
 80204fc:	bf08      	it	eq
 80204fe:	4619      	moveq	r1, r3
 8020500:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8020502:	bf18      	it	ne
 8020504:	2100      	movne	r1, #0
 8020506:	3301      	adds	r3, #1
 8020508:	930d      	str	r3, [sp, #52]	; 0x34
 802050a:	b289      	uxth	r1, r1
 802050c:	e700      	b.n	8020310 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf4>
 802050e:	bf00      	nop
 8020510:	20006c34 	.word	0x20006c34
 8020514:	20006c2e 	.word	0x20006c2e
 8020518:	fffff7fb 	.word	0xfffff7fb
 802051c:	46d9      	mov	r9, fp
 802051e:	9d00      	ldr	r5, [sp, #0]
 8020520:	42aa      	cmp	r2, r5
 8020522:	d0d0      	beq.n	80204c6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2aa>
 8020524:	1c55      	adds	r5, r2, #1
 8020526:	4422      	add	r2, r4
 8020528:	9517      	str	r5, [sp, #92]	; 0x5c
 802052a:	f892 e804 	ldrb.w	lr, [r2, #2052]	; 0x804
 802052e:	9a06      	ldr	r2, [sp, #24]
 8020530:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 8020534:	4472      	add	r2, lr
 8020536:	9212      	str	r2, [sp, #72]	; 0x48
 8020538:	9f12      	ldr	r7, [sp, #72]	; 0x48
 802053a:	f8b9 2000 	ldrh.w	r2, [r9]
 802053e:	f897 a002 	ldrb.w	sl, [r7, #2]
 8020542:	9f0e      	ldr	r7, [sp, #56]	; 0x38
 8020544:	1216      	asrs	r6, r2, #8
 8020546:	fb1a fa07 	smulbb	sl, sl, r7
 802054a:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 802054e:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 8020550:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 8020554:	fb06 a607 	mla	r6, r6, r7, sl
 8020558:	9f12      	ldr	r7, [sp, #72]	; 0x48
 802055a:	f897 a001 	ldrb.w	sl, [r7, #1]
 802055e:	9f0e      	ldr	r7, [sp, #56]	; 0x38
 8020560:	10d5      	asrs	r5, r2, #3
 8020562:	fb1a fa07 	smulbb	sl, sl, r7
 8020566:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 802056a:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 802056c:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 8020570:	fb05 a507 	mla	r5, r5, r7, sl
 8020574:	9f06      	ldr	r7, [sp, #24]
 8020576:	f817 e00e 	ldrb.w	lr, [r7, lr]
 802057a:	9f0e      	ldr	r7, [sp, #56]	; 0x38
 802057c:	00d2      	lsls	r2, r2, #3
 802057e:	fb1e fe07 	smulbb	lr, lr, r7
 8020582:	b2d2      	uxtb	r2, r2
 8020584:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 8020586:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 802058a:	b2b6      	uxth	r6, r6
 802058c:	fb02 e207 	mla	r2, r2, r7, lr
 8020590:	b292      	uxth	r2, r2
 8020592:	b2ad      	uxth	r5, r5
 8020594:	f106 0a01 	add.w	sl, r6, #1
 8020598:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
 802059c:	f102 0e01 	add.w	lr, r2, #1
 80205a0:	f105 0a01 	add.w	sl, r5, #1
 80205a4:	eb0e 2e12 	add.w	lr, lr, r2, lsr #8
 80205a8:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 80205ac:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 80205b0:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 80205b4:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80205b8:	ea4e 0606 	orr.w	r6, lr, r6
 80205bc:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 80205c0:	ea46 060a 	orr.w	r6, r6, sl
 80205c4:	f829 6b02 	strh.w	r6, [r9], #2
 80205c8:	f8bd 205c 	ldrh.w	r2, [sp, #92]	; 0x5c
 80205cc:	e7a7      	b.n	802051e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x302>
 80205ce:	f102 0e01 	add.w	lr, r2, #1
 80205d2:	4422      	add	r2, r4
 80205d4:	9f06      	ldr	r7, [sp, #24]
 80205d6:	f892 5804 	ldrb.w	r5, [r2, #2052]	; 0x804
 80205da:	9a06      	ldr	r2, [sp, #24]
 80205dc:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 80205e0:	eb02 0a05 	add.w	sl, r2, r5
 80205e4:	4a13      	ldr	r2, [pc, #76]	; (8020634 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x418>)
 80205e6:	f89a 9002 	ldrb.w	r9, [sl, #2]
 80205ea:	ea02 2909 	and.w	r9, r2, r9, lsl #8
 80205ee:	f89a 2001 	ldrb.w	r2, [sl, #1]
 80205f2:	00d2      	lsls	r2, r2, #3
 80205f4:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80205f8:	ea49 0202 	orr.w	r2, r9, r2
 80205fc:	f817 9005 	ldrb.w	r9, [r7, r5]
 8020600:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 8020604:	f826 2b02 	strh.w	r2, [r6], #2
 8020608:	fa1f f28e 	uxth.w	r2, lr
 802060c:	e757      	b.n	80204be <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a2>
 802060e:	f8bd 0010 	ldrh.w	r0, [sp, #16]
 8020612:	f8bd 506c 	ldrh.w	r5, [sp, #108]	; 0x6c
 8020616:	1a2d      	subs	r5, r5, r0
 8020618:	b2ad      	uxth	r5, r5
 802061a:	2d00      	cmp	r5, #0
 802061c:	bf18      	it	ne
 802061e:	2000      	movne	r0, #0
 8020620:	e730      	b.n	8020484 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x268>
 8020622:	4b05      	ldr	r3, [pc, #20]	; (8020638 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x41c>)
 8020624:	6818      	ldr	r0, [r3, #0]
 8020626:	6803      	ldr	r3, [r0, #0]
 8020628:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 802062a:	4798      	blx	r3
 802062c:	b01f      	add	sp, #124	; 0x7c
 802062e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8020632:	bf00      	nop
 8020634:	fffff800 	.word	0xfffff800
 8020638:	20006c34 	.word	0x20006c34

0802063c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss>:
 802063c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020640:	b091      	sub	sp, #68	; 0x44
 8020642:	469b      	mov	fp, r3
 8020644:	f10d 0828 	add.w	r8, sp, #40	; 0x28
 8020648:	4616      	mov	r6, r2
 802064a:	f9bd 906c 	ldrsh.w	r9, [sp, #108]	; 0x6c
 802064e:	f9b3 2000 	ldrsh.w	r2, [r3]
 8020652:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	; 0x70
 8020656:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 802065a:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 802065e:	4604      	mov	r4, r0
 8020660:	460d      	mov	r5, r1
 8020662:	4640      	mov	r0, r8
 8020664:	4659      	mov	r1, fp
 8020666:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 802066a:	f8ad 902c 	strh.w	r9, [sp, #44]	; 0x2c
 802066e:	f8ad 702e 	strh.w	r7, [sp, #46]	; 0x2e
 8020672:	f7f2 f90f 	bl	8012894 <_ZN8touchgfx4RectaNERKS0_>
 8020676:	4631      	mov	r1, r6
 8020678:	4640      	mov	r0, r8
 802067a:	f7f2 f90b 	bl	8012894 <_ZN8touchgfx4RectaNERKS0_>
 802067e:	4b74      	ldr	r3, [pc, #464]	; (8020850 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x214>)
 8020680:	8818      	ldrh	r0, [r3, #0]
 8020682:	4b74      	ldr	r3, [pc, #464]	; (8020854 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x218>)
 8020684:	8819      	ldrh	r1, [r3, #0]
 8020686:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 802068a:	2b00      	cmp	r3, #0
 802068c:	b202      	sxth	r2, r0
 802068e:	b20e      	sxth	r6, r1
 8020690:	da07      	bge.n	80206a2 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x66>
 8020692:	f8bd c02c 	ldrh.w	ip, [sp, #44]	; 0x2c
 8020696:	4463      	add	r3, ip
 8020698:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 802069c:	2300      	movs	r3, #0
 802069e:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 80206a2:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 80206a6:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	; 0x2c
 80206aa:	1ad2      	subs	r2, r2, r3
 80206ac:	4594      	cmp	ip, r2
 80206ae:	bfc4      	itt	gt
 80206b0:	1ac2      	subgt	r2, r0, r3
 80206b2:	f8ad 202c 	strhgt.w	r2, [sp, #44]	; 0x2c
 80206b6:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 80206ba:	2a00      	cmp	r2, #0
 80206bc:	da07      	bge.n	80206ce <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x92>
 80206be:	f8bd c02e 	ldrh.w	ip, [sp, #46]	; 0x2e
 80206c2:	4462      	add	r2, ip
 80206c4:	f8ad 202e 	strh.w	r2, [sp, #46]	; 0x2e
 80206c8:	2200      	movs	r2, #0
 80206ca:	f8ad 202a 	strh.w	r2, [sp, #42]	; 0x2a
 80206ce:	f9bd a02a 	ldrsh.w	sl, [sp, #42]	; 0x2a
 80206d2:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	; 0x2e
 80206d6:	eba6 060a 	sub.w	r6, r6, sl
 80206da:	42b2      	cmp	r2, r6
 80206dc:	bfc4      	itt	gt
 80206de:	eba1 020a 	subgt.w	r2, r1, sl
 80206e2:	f8ad 202e 	strhgt.w	r2, [sp, #46]	; 0x2e
 80206e6:	4a5c      	ldr	r2, [pc, #368]	; (8020858 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x21c>)
 80206e8:	7812      	ldrb	r2, [r2, #0]
 80206ea:	b9a2      	cbnz	r2, 8020716 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xda>
 80206ec:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	; 0x2c
 80206f0:	4286      	cmp	r6, r0
 80206f2:	4640      	mov	r0, r8
 80206f4:	9303      	str	r3, [sp, #12]
 80206f6:	bf14      	ite	ne
 80206f8:	2600      	movne	r6, #0
 80206fa:	2601      	moveq	r6, #1
 80206fc:	f7f2 f90d 	bl	801291a <_ZNK8touchgfx4Rect7isEmptyEv>
 8020700:	9b03      	ldr	r3, [sp, #12]
 8020702:	b160      	cbz	r0, 802071e <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xe2>
 8020704:	2300      	movs	r3, #0
 8020706:	8023      	strh	r3, [r4, #0]
 8020708:	8063      	strh	r3, [r4, #2]
 802070a:	80a3      	strh	r3, [r4, #4]
 802070c:	4620      	mov	r0, r4
 802070e:	80e3      	strh	r3, [r4, #6]
 8020710:	b011      	add	sp, #68	; 0x44
 8020712:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8020716:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	; 0x2e
 802071a:	428e      	cmp	r6, r1
 802071c:	e7e9      	b.n	80206f2 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xb6>
 802071e:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
 8020722:	9205      	str	r2, [sp, #20]
 8020724:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	; 0x2e
 8020728:	9206      	str	r2, [sp, #24]
 802072a:	f8bb 2000 	ldrh.w	r2, [fp]
 802072e:	900e      	str	r0, [sp, #56]	; 0x38
 8020730:	1a9b      	subs	r3, r3, r2
 8020732:	b21b      	sxth	r3, r3
 8020734:	9303      	str	r3, [sp, #12]
 8020736:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 802073a:	f8ad 903c 	strh.w	r9, [sp, #60]	; 0x3c
 802073e:	ebaa 0a03 	sub.w	sl, sl, r3
 8020742:	fa0f f38a 	sxth.w	r3, sl
 8020746:	9304      	str	r3, [sp, #16]
 8020748:	9b03      	ldr	r3, [sp, #12]
 802074a:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 802074e:	9b04      	ldr	r3, [sp, #16]
 8020750:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 8020754:	9b05      	ldr	r3, [sp, #20]
 8020756:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 802075a:	a90e      	add	r1, sp, #56	; 0x38
 802075c:	9b06      	ldr	r3, [sp, #24]
 802075e:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 8020762:	a80c      	add	r0, sp, #48	; 0x30
 8020764:	f8ad 703e 	strh.w	r7, [sp, #62]	; 0x3e
 8020768:	f7f7 fd92 	bl	8018290 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 802076c:	4640      	mov	r0, r8
 802076e:	f7f7 fd67 	bl	8018240 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8020772:	a80e      	add	r0, sp, #56	; 0x38
 8020774:	f7f7 fd64 	bl	8018240 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8020778:	4b38      	ldr	r3, [pc, #224]	; (802085c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x220>)
 802077a:	f9bd a03c 	ldrsh.w	sl, [sp, #60]	; 0x3c
 802077e:	881b      	ldrh	r3, [r3, #0]
 8020780:	9307      	str	r3, [sp, #28]
 8020782:	682b      	ldr	r3, [r5, #0]
 8020784:	f8df b0d8 	ldr.w	fp, [pc, #216]	; 8020860 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
 8020788:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 802078a:	4628      	mov	r0, r5
 802078c:	4798      	blx	r3
 802078e:	f8bd 5032 	ldrh.w	r5, [sp, #50]	; 0x32
 8020792:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	; 0x30
 8020796:	4681      	mov	r9, r0
 8020798:	fb1a 3305 	smlabb	r3, sl, r5, r3
 802079c:	f8db 0000 	ldr.w	r0, [fp]
 80207a0:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 80207a2:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 80207a6:	6803      	ldr	r3, [r0, #0]
 80207a8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80207aa:	4798      	blx	r3
 80207ac:	4607      	mov	r7, r0
 80207ae:	f8db 0000 	ldr.w	r0, [fp]
 80207b2:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	; 0x28
 80207b6:	6803      	ldr	r3, [r0, #0]
 80207b8:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 80207bc:	9109      	str	r1, [sp, #36]	; 0x24
 80207be:	9208      	str	r2, [sp, #32]
 80207c0:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80207c2:	4798      	blx	r3
 80207c4:	f010 0f01 	tst.w	r0, #1
 80207c8:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 80207cc:	d012      	beq.n	80207f4 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1b8>
 80207ce:	f8db 0000 	ldr.w	r0, [fp]
 80207d2:	f9bd 2034 	ldrsh.w	r2, [sp, #52]	; 0x34
 80207d6:	6803      	ldr	r3, [r0, #0]
 80207d8:	9200      	str	r2, [sp, #0]
 80207da:	6ede      	ldr	r6, [r3, #108]	; 0x6c
 80207dc:	e898 0006 	ldmia.w	r8, {r1, r2}
 80207e0:	462b      	mov	r3, r5
 80207e2:	47b0      	blx	r6
 80207e4:	9b03      	ldr	r3, [sp, #12]
 80207e6:	8023      	strh	r3, [r4, #0]
 80207e8:	9b04      	ldr	r3, [sp, #16]
 80207ea:	8063      	strh	r3, [r4, #2]
 80207ec:	9b05      	ldr	r3, [sp, #20]
 80207ee:	80a3      	strh	r3, [r4, #4]
 80207f0:	9b06      	ldr	r3, [sp, #24]
 80207f2:	e78b      	b.n	802070c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xd0>
 80207f4:	fb09 f202 	mul.w	r2, r9, r2
 80207f8:	eb02 0141 	add.w	r1, r2, r1, lsl #1
 80207fc:	440f      	add	r7, r1
 80207fe:	f9bd 3036 	ldrsh.w	r3, [sp, #54]	; 0x36
 8020802:	b166      	cbz	r6, 802081e <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
 8020804:	9a07      	ldr	r2, [sp, #28]
 8020806:	4592      	cmp	sl, r2
 8020808:	d109      	bne.n	802081e <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
 802080a:	f8db 0000 	ldr.w	r0, [fp]
 802080e:	6802      	ldr	r2, [r0, #0]
 8020810:	fb09 f303 	mul.w	r3, r9, r3
 8020814:	6b56      	ldr	r6, [r2, #52]	; 0x34
 8020816:	4629      	mov	r1, r5
 8020818:	463a      	mov	r2, r7
 802081a:	47b0      	blx	r6
 802081c:	e7e2      	b.n	80207e4 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
 802081e:	fb0a f303 	mul.w	r3, sl, r3
 8020822:	f8df b03c 	ldr.w	fp, [pc, #60]	; 8020860 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
 8020826:	eb05 0843 	add.w	r8, r5, r3, lsl #1
 802082a:	ea4f 064a 	mov.w	r6, sl, lsl #1
 802082e:	4545      	cmp	r5, r8
 8020830:	d2d8      	bcs.n	80207e4 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
 8020832:	f8db 0000 	ldr.w	r0, [fp]
 8020836:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 802083a:	6802      	ldr	r2, [r0, #0]
 802083c:	4629      	mov	r1, r5
 802083e:	f8d2 a034 	ldr.w	sl, [r2, #52]	; 0x34
 8020842:	005b      	lsls	r3, r3, #1
 8020844:	463a      	mov	r2, r7
 8020846:	47d0      	blx	sl
 8020848:	444f      	add	r7, r9
 802084a:	4435      	add	r5, r6
 802084c:	e7ef      	b.n	802082e <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1f2>
 802084e:	bf00      	nop
 8020850:	20006c28 	.word	0x20006c28
 8020854:	20006c2a 	.word	0x20006c2a
 8020858:	20006c2c 	.word	0x20006c2c
 802085c:	20006c2e 	.word	0x20006c2e
 8020860:	20006c34 	.word	0x20006c34

08020864 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh>:
 8020864:	b5f0      	push	{r4, r5, r6, r7, lr}
 8020866:	4606      	mov	r6, r0
 8020868:	b087      	sub	sp, #28
 802086a:	460c      	mov	r4, r1
 802086c:	4617      	mov	r7, r2
 802086e:	461d      	mov	r5, r3
 8020870:	b333      	cbz	r3, 80208c0 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 8020872:	4608      	mov	r0, r1
 8020874:	f7f2 f851 	bl	801291a <_ZNK8touchgfx4Rect7isEmptyEv>
 8020878:	bb10      	cbnz	r0, 80208c0 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 802087a:	6820      	ldr	r0, [r4, #0]
 802087c:	6861      	ldr	r1, [r4, #4]
 802087e:	4c1c      	ldr	r4, [pc, #112]	; (80208f0 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x8c>)
 8020880:	ab04      	add	r3, sp, #16
 8020882:	c303      	stmia	r3!, {r0, r1}
 8020884:	a804      	add	r0, sp, #16
 8020886:	f7f7 fcdb 	bl	8018240 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 802088a:	6820      	ldr	r0, [r4, #0]
 802088c:	6803      	ldr	r3, [r0, #0]
 802088e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8020890:	4798      	blx	r3
 8020892:	2dff      	cmp	r5, #255	; 0xff
 8020894:	d016      	beq.n	80208c4 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x60>
 8020896:	f010 0f08 	tst.w	r0, #8
 802089a:	6820      	ldr	r0, [r4, #0]
 802089c:	d015      	beq.n	80208ca <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x66>
 802089e:	2400      	movs	r4, #0
 80208a0:	6801      	ldr	r1, [r0, #0]
 80208a2:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 80208a6:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 80208aa:	e9cd 5402 	strd	r5, r4, [sp, #8]
 80208ae:	f8bd 4016 	ldrh.w	r4, [sp, #22]
 80208b2:	9401      	str	r4, [sp, #4]
 80208b4:	f8bd 4014 	ldrh.w	r4, [sp, #20]
 80208b8:	9400      	str	r4, [sp, #0]
 80208ba:	6e0c      	ldr	r4, [r1, #96]	; 0x60
 80208bc:	4639      	mov	r1, r7
 80208be:	47a0      	blx	r4
 80208c0:	b007      	add	sp, #28
 80208c2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80208c4:	f010 0f02 	tst.w	r0, #2
 80208c8:	e7e7      	b.n	802089a <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x36>
 80208ca:	6803      	ldr	r3, [r0, #0]
 80208cc:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80208ce:	4798      	blx	r3
 80208d0:	4b08      	ldr	r3, [pc, #32]	; (80208f4 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x90>)
 80208d2:	881a      	ldrh	r2, [r3, #0]
 80208d4:	6833      	ldr	r3, [r6, #0]
 80208d6:	e9cd 7500 	strd	r7, r5, [sp]
 80208da:	4601      	mov	r1, r0
 80208dc:	6a5d      	ldr	r5, [r3, #36]	; 0x24
 80208de:	4630      	mov	r0, r6
 80208e0:	ab04      	add	r3, sp, #16
 80208e2:	47a8      	blx	r5
 80208e4:	6820      	ldr	r0, [r4, #0]
 80208e6:	6803      	ldr	r3, [r0, #0]
 80208e8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80208ea:	4798      	blx	r3
 80208ec:	e7e8      	b.n	80208c0 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 80208ee:	bf00      	nop
 80208f0:	20006c34 	.word	0x20006c34
 80208f4:	20006c2e 	.word	0x20006c2e

080208f8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh>:
 80208f8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80208fc:	f89d 7024 	ldrb.w	r7, [sp, #36]	; 0x24
 8020900:	9e08      	ldr	r6, [sp, #32]
 8020902:	4688      	mov	r8, r1
 8020904:	4614      	mov	r4, r2
 8020906:	461d      	mov	r5, r3
 8020908:	2f00      	cmp	r7, #0
 802090a:	f000 80a9 	beq.w	8020a60 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 802090e:	4618      	mov	r0, r3
 8020910:	f7f2 f803 	bl	801291a <_ZNK8touchgfx4Rect7isEmptyEv>
 8020914:	2800      	cmp	r0, #0
 8020916:	f040 80a3 	bne.w	8020a60 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 802091a:	f9b5 1000 	ldrsh.w	r1, [r5]
 802091e:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 8020922:	f9b5 0004 	ldrsh.w	r0, [r5, #4]
 8020926:	f9b5 5006 	ldrsh.w	r5, [r5, #6]
 802092a:	fb04 1303 	mla	r3, r4, r3, r1
 802092e:	eb08 0143 	add.w	r1, r8, r3, lsl #1
 8020932:	4365      	muls	r5, r4
 8020934:	2fff      	cmp	r7, #255	; 0xff
 8020936:	eba4 0200 	sub.w	r2, r4, r0
 802093a:	eb01 0545 	add.w	r5, r1, r5, lsl #1
 802093e:	ea4f 2816 	mov.w	r8, r6, lsr #8
 8020942:	d04a      	beq.n	80209da <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xe2>
 8020944:	b2bc      	uxth	r4, r7
 8020946:	f1c7 0cff 	rsb	ip, r7, #255	; 0xff
 802094a:	f3c6 4e07 	ubfx	lr, r6, #16, #8
 802094e:	fa5f f788 	uxtb.w	r7, r8
 8020952:	b2f3      	uxtb	r3, r6
 8020954:	0040      	lsls	r0, r0, #1
 8020956:	fb0e fe04 	mul.w	lr, lr, r4
 802095a:	4367      	muls	r7, r4
 802095c:	4363      	muls	r3, r4
 802095e:	ea4f 0842 	mov.w	r8, r2, lsl #1
 8020962:	fa1f fc8c 	uxth.w	ip, ip
 8020966:	42a9      	cmp	r1, r5
 8020968:	d27a      	bcs.n	8020a60 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 802096a:	eb01 0900 	add.w	r9, r1, r0
 802096e:	4549      	cmp	r1, r9
 8020970:	d231      	bcs.n	80209d6 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xde>
 8020972:	880a      	ldrh	r2, [r1, #0]
 8020974:	1214      	asrs	r4, r2, #8
 8020976:	10d6      	asrs	r6, r2, #3
 8020978:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 802097c:	00d2      	lsls	r2, r2, #3
 802097e:	b2d2      	uxtb	r2, r2
 8020980:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 8020984:	fb14 f40c 	smulbb	r4, r4, ip
 8020988:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 802098c:	4474      	add	r4, lr
 802098e:	fb12 f20c 	smulbb	r2, r2, ip
 8020992:	b2a4      	uxth	r4, r4
 8020994:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8020998:	441a      	add	r2, r3
 802099a:	b292      	uxth	r2, r2
 802099c:	f104 0a01 	add.w	sl, r4, #1
 80209a0:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 80209a4:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 80209a8:	fb16 f60c 	smulbb	r6, r6, ip
 80209ac:	f102 0a01 	add.w	sl, r2, #1
 80209b0:	443e      	add	r6, r7
 80209b2:	eb0a 2212 	add.w	r2, sl, r2, lsr #8
 80209b6:	b2b6      	uxth	r6, r6
 80209b8:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 80209bc:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 80209c0:	4322      	orrs	r2, r4
 80209c2:	1c74      	adds	r4, r6, #1
 80209c4:	eb04 2616 	add.w	r6, r4, r6, lsr #8
 80209c8:	0976      	lsrs	r6, r6, #5
 80209ca:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 80209ce:	4332      	orrs	r2, r6
 80209d0:	f821 2b02 	strh.w	r2, [r1], #2
 80209d4:	e7cb      	b.n	802096e <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x76>
 80209d6:	4441      	add	r1, r8
 80209d8:	e7c5      	b.n	8020966 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x6e>
 80209da:	4f22      	ldr	r7, [pc, #136]	; (8020a64 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>)
 80209dc:	0973      	lsrs	r3, r6, #5
 80209de:	ea08 0707 	and.w	r7, r8, r7
 80209e2:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80209e6:	433b      	orrs	r3, r7
 80209e8:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 80209ec:	4333      	orrs	r3, r6
 80209ee:	07e7      	lsls	r7, r4, #31
 80209f0:	b29b      	uxth	r3, r3
 80209f2:	d50b      	bpl.n	8020a0c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x114>
 80209f4:	0040      	lsls	r0, r0, #1
 80209f6:	0052      	lsls	r2, r2, #1
 80209f8:	42a9      	cmp	r1, r5
 80209fa:	d231      	bcs.n	8020a60 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 80209fc:	180c      	adds	r4, r1, r0
 80209fe:	42a1      	cmp	r1, r4
 8020a00:	d202      	bcs.n	8020a08 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x110>
 8020a02:	f821 3b02 	strh.w	r3, [r1], #2
 8020a06:	e7fa      	b.n	80209fe <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x106>
 8020a08:	4411      	add	r1, r2
 8020a0a:	e7f5      	b.n	80209f8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x100>
 8020a0c:	078e      	lsls	r6, r1, #30
 8020a0e:	d008      	beq.n	8020a22 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x12a>
 8020a10:	0066      	lsls	r6, r4, #1
 8020a12:	460a      	mov	r2, r1
 8020a14:	42aa      	cmp	r2, r5
 8020a16:	d202      	bcs.n	8020a1e <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x126>
 8020a18:	8013      	strh	r3, [r2, #0]
 8020a1a:	4432      	add	r2, r6
 8020a1c:	e7fa      	b.n	8020a14 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x11c>
 8020a1e:	3102      	adds	r1, #2
 8020a20:	3801      	subs	r0, #1
 8020a22:	07c2      	lsls	r2, r0, #31
 8020a24:	d50b      	bpl.n	8020a3e <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x146>
 8020a26:	f100 4200 	add.w	r2, r0, #2147483648	; 0x80000000
 8020a2a:	3a01      	subs	r2, #1
 8020a2c:	eb01 0242 	add.w	r2, r1, r2, lsl #1
 8020a30:	0066      	lsls	r6, r4, #1
 8020a32:	42aa      	cmp	r2, r5
 8020a34:	d202      	bcs.n	8020a3c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x144>
 8020a36:	8013      	strh	r3, [r2, #0]
 8020a38:	4432      	add	r2, r6
 8020a3a:	e7fa      	b.n	8020a32 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x13a>
 8020a3c:	3801      	subs	r0, #1
 8020a3e:	b178      	cbz	r0, 8020a60 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 8020a40:	1040      	asrs	r0, r0, #1
 8020a42:	ea43 4303 	orr.w	r3, r3, r3, lsl #16
 8020a46:	0080      	lsls	r0, r0, #2
 8020a48:	0064      	lsls	r4, r4, #1
 8020a4a:	42a9      	cmp	r1, r5
 8020a4c:	d208      	bcs.n	8020a60 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 8020a4e:	180e      	adds	r6, r1, r0
 8020a50:	460a      	mov	r2, r1
 8020a52:	42b2      	cmp	r2, r6
 8020a54:	d202      	bcs.n	8020a5c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x164>
 8020a56:	f842 3b04 	str.w	r3, [r2], #4
 8020a5a:	e7fa      	b.n	8020a52 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x15a>
 8020a5c:	4421      	add	r1, r4
 8020a5e:	e7f4      	b.n	8020a4a <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x152>
 8020a60:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8020a64:	00fff800 	.word	0x00fff800

08020a68 <_ZN8touchgfx8LCD16bppC1Ev>:
 8020a68:	2200      	movs	r2, #0
 8020a6a:	4912      	ldr	r1, [pc, #72]	; (8020ab4 <_ZN8touchgfx8LCD16bppC1Ev+0x4c>)
 8020a6c:	6001      	str	r1, [r0, #0]
 8020a6e:	e9c0 2201 	strd	r2, r2, [r0, #4]
 8020a72:	e9c0 2203 	strd	r2, r2, [r0, #12]
 8020a76:	e9c0 2205 	strd	r2, r2, [r0, #20]
 8020a7a:	e9c0 2207 	strd	r2, r2, [r0, #28]
 8020a7e:	e9c0 2209 	strd	r2, r2, [r0, #36]	; 0x24
 8020a82:	e9c0 220b 	strd	r2, r2, [r0, #44]	; 0x2c
 8020a86:	e9c0 220d 	strd	r2, r2, [r0, #52]	; 0x34
 8020a8a:	e9c0 220f 	strd	r2, r2, [r0, #60]	; 0x3c
 8020a8e:	e9c0 2211 	strd	r2, r2, [r0, #68]	; 0x44
 8020a92:	e9c0 2213 	strd	r2, r2, [r0, #76]	; 0x4c
 8020a96:	e9c0 2215 	strd	r2, r2, [r0, #84]	; 0x54
 8020a9a:	e9c0 2217 	strd	r2, r2, [r0, #92]	; 0x5c
 8020a9e:	e9c0 2219 	strd	r2, r2, [r0, #100]	; 0x64
 8020aa2:	e9c0 221b 	strd	r2, r2, [r0, #108]	; 0x6c
 8020aa6:	e9c0 221d 	strd	r2, r2, [r0, #116]	; 0x74
 8020aaa:	e9c0 221f 	strd	r2, r2, [r0, #124]	; 0x7c
 8020aae:	f8c0 2084 	str.w	r2, [r0, #132]	; 0x84
 8020ab2:	4770      	bx	lr
 8020ab4:	0803014c 	.word	0x0803014c

08020ab8 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>:
 8020ab8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020abc:	460d      	mov	r5, r1
 8020abe:	b08d      	sub	sp, #52	; 0x34
 8020ac0:	4604      	mov	r4, r0
 8020ac2:	6808      	ldr	r0, [r1, #0]
 8020ac4:	6849      	ldr	r1, [r1, #4]
 8020ac6:	4699      	mov	r9, r3
 8020ac8:	ab08      	add	r3, sp, #32
 8020aca:	c303      	stmia	r3!, {r0, r1}
 8020acc:	6810      	ldr	r0, [r2, #0]
 8020ace:	6851      	ldr	r1, [r2, #4]
 8020ad0:	ab0a      	add	r3, sp, #40	; 0x28
 8020ad2:	c303      	stmia	r3!, {r0, r1}
 8020ad4:	a808      	add	r0, sp, #32
 8020ad6:	f7f7 fbb3 	bl	8018240 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8020ada:	4629      	mov	r1, r5
 8020adc:	a80a      	add	r0, sp, #40	; 0x28
 8020ade:	f7f7 fbd7 	bl	8018290 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8020ae2:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	; 0x28
 8020ae6:	f9bd 302a 	ldrsh.w	r3, [sp, #42]	; 0x2a
 8020aea:	f8bd 1024 	ldrh.w	r1, [sp, #36]	; 0x24
 8020aee:	4d63      	ldr	r5, [pc, #396]	; (8020c7c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 8020af0:	f9bd 802c 	ldrsh.w	r8, [sp, #44]	; 0x2c
 8020af4:	6828      	ldr	r0, [r5, #0]
 8020af6:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	; 0x2e
 8020afa:	fb11 2103 	smlabb	r1, r1, r3, r2
 8020afe:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 8020b02:	f8bd 1020 	ldrh.w	r1, [sp, #32]
 8020b06:	440a      	add	r2, r1
 8020b08:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 8020b0c:	f8bd 2022 	ldrh.w	r2, [sp, #34]	; 0x22
 8020b10:	4413      	add	r3, r2
 8020b12:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 8020b16:	6803      	ldr	r3, [r0, #0]
 8020b18:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8020b1a:	4798      	blx	r3
 8020b1c:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8020b20:	d119      	bne.n	8020b56 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x9e>
 8020b22:	f010 0f20 	tst.w	r0, #32
 8020b26:	6828      	ldr	r0, [r5, #0]
 8020b28:	d018      	beq.n	8020b5c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xa4>
 8020b2a:	2500      	movs	r5, #0
 8020b2c:	6801      	ldr	r1, [r0, #0]
 8020b2e:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 8020b32:	f8bd 2028 	ldrh.w	r2, [sp, #40]	; 0x28
 8020b36:	e9cd 9503 	strd	r9, r5, [sp, #12]
 8020b3a:	f8bd 5024 	ldrh.w	r5, [sp, #36]	; 0x24
 8020b3e:	9502      	str	r5, [sp, #8]
 8020b40:	b2b6      	uxth	r6, r6
 8020b42:	fa1f f588 	uxth.w	r5, r8
 8020b46:	9601      	str	r6, [sp, #4]
 8020b48:	9500      	str	r5, [sp, #0]
 8020b4a:	6d0d      	ldr	r5, [r1, #80]	; 0x50
 8020b4c:	4621      	mov	r1, r4
 8020b4e:	47a8      	blx	r5
 8020b50:	b00d      	add	sp, #52	; 0x34
 8020b52:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8020b56:	f010 0f40 	tst.w	r0, #64	; 0x40
 8020b5a:	e7e4      	b.n	8020b26 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x6e>
 8020b5c:	6803      	ldr	r3, [r0, #0]
 8020b5e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8020b60:	4798      	blx	r3
 8020b62:	4947      	ldr	r1, [pc, #284]	; (8020c80 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c8>)
 8020b64:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 8020b68:	880b      	ldrh	r3, [r1, #0]
 8020b6a:	f9bd 5028 	ldrsh.w	r5, [sp, #40]	; 0x28
 8020b6e:	fb03 5202 	mla	r2, r3, r2, r5
 8020b72:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8020b76:	4373      	muls	r3, r6
 8020b78:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8020b7c:	9307      	str	r3, [sp, #28]
 8020b7e:	ea4f 0348 	mov.w	r3, r8, lsl #1
 8020b82:	9306      	str	r3, [sp, #24]
 8020b84:	468a      	mov	sl, r1
 8020b86:	9b07      	ldr	r3, [sp, #28]
 8020b88:	4298      	cmp	r0, r3
 8020b8a:	d270      	bcs.n	8020c6e <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1b6>
 8020b8c:	9b06      	ldr	r3, [sp, #24]
 8020b8e:	4621      	mov	r1, r4
 8020b90:	eb00 0b03 	add.w	fp, r0, r3
 8020b94:	4558      	cmp	r0, fp
 8020b96:	d25d      	bcs.n	8020c54 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x19c>
 8020b98:	f851 4b04 	ldr.w	r4, [r1], #4
 8020b9c:	0e23      	lsrs	r3, r4, #24
 8020b9e:	d014      	beq.n	8020bca <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
 8020ba0:	2bff      	cmp	r3, #255	; 0xff
 8020ba2:	ea4f 2c14 	mov.w	ip, r4, lsr #8
 8020ba6:	d112      	bne.n	8020bce <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
 8020ba8:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8020bac:	d10f      	bne.n	8020bce <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
 8020bae:	0963      	lsrs	r3, r4, #5
 8020bb0:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 8020bb4:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8020bb8:	f02c 0c07 	bic.w	ip, ip, #7
 8020bbc:	ea43 0c0c 	orr.w	ip, r3, ip
 8020bc0:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 8020bc4:	ea4c 0404 	orr.w	r4, ip, r4
 8020bc8:	8004      	strh	r4, [r0, #0]
 8020bca:	3002      	adds	r0, #2
 8020bcc:	e7e2      	b.n	8020b94 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xdc>
 8020bce:	fb09 f303 	mul.w	r3, r9, r3
 8020bd2:	8807      	ldrh	r7, [r0, #0]
 8020bd4:	1c5a      	adds	r2, r3, #1
 8020bd6:	eb02 2223 	add.w	r2, r2, r3, asr #8
 8020bda:	1212      	asrs	r2, r2, #8
 8020bdc:	123e      	asrs	r6, r7, #8
 8020bde:	b293      	uxth	r3, r2
 8020be0:	f3c4 4e07 	ubfx	lr, r4, #16, #8
 8020be4:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8020be8:	43d2      	mvns	r2, r2
 8020bea:	b2d2      	uxtb	r2, r2
 8020bec:	10fd      	asrs	r5, r7, #3
 8020bee:	fb1e fe03 	smulbb	lr, lr, r3
 8020bf2:	00ff      	lsls	r7, r7, #3
 8020bf4:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 8020bf8:	fb06 e602 	mla	r6, r6, r2, lr
 8020bfc:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8020c00:	b2ff      	uxtb	r7, r7
 8020c02:	fa5f fc8c 	uxtb.w	ip, ip
 8020c06:	b2e4      	uxtb	r4, r4
 8020c08:	b2b6      	uxth	r6, r6
 8020c0a:	fb1c fc03 	smulbb	ip, ip, r3
 8020c0e:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 8020c12:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
 8020c16:	fb14 f403 	smulbb	r4, r4, r3
 8020c1a:	fb05 c502 	mla	r5, r5, r2, ip
 8020c1e:	f106 0e01 	add.w	lr, r6, #1
 8020c22:	fb07 4702 	mla	r7, r7, r2, r4
 8020c26:	b2ad      	uxth	r5, r5
 8020c28:	b2bf      	uxth	r7, r7
 8020c2a:	eb0e 2616 	add.w	r6, lr, r6, lsr #8
 8020c2e:	f406 4e78 	and.w	lr, r6, #63488	; 0xf800
 8020c32:	f105 0c01 	add.w	ip, r5, #1
 8020c36:	1c7e      	adds	r6, r7, #1
 8020c38:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 8020c3c:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 8020c40:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8020c44:	096d      	lsrs	r5, r5, #5
 8020c46:	ea46 060e 	orr.w	r6, r6, lr
 8020c4a:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8020c4e:	432e      	orrs	r6, r5
 8020c50:	8006      	strh	r6, [r0, #0]
 8020c52:	e7ba      	b.n	8020bca <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
 8020c54:	f8ba 3000 	ldrh.w	r3, [sl]
 8020c58:	f9bd 4024 	ldrsh.w	r4, [sp, #36]	; 0x24
 8020c5c:	eba3 0308 	sub.w	r3, r3, r8
 8020c60:	eba4 0408 	sub.w	r4, r4, r8
 8020c64:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8020c68:	eb01 0484 	add.w	r4, r1, r4, lsl #2
 8020c6c:	e78b      	b.n	8020b86 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xce>
 8020c6e:	4b03      	ldr	r3, [pc, #12]	; (8020c7c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 8020c70:	6818      	ldr	r0, [r3, #0]
 8020c72:	6803      	ldr	r3, [r0, #0]
 8020c74:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8020c76:	4798      	blx	r3
 8020c78:	e76a      	b.n	8020b50 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x98>
 8020c7a:	bf00      	nop
 8020c7c:	20006c34 	.word	0x20006c34
 8020c80:	20006c2e 	.word	0x20006c2e

08020c84 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>:
 8020c84:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8020c88:	460c      	mov	r4, r1
 8020c8a:	b085      	sub	sp, #20
 8020c8c:	6810      	ldr	r0, [r2, #0]
 8020c8e:	6851      	ldr	r1, [r2, #4]
 8020c90:	466d      	mov	r5, sp
 8020c92:	c503      	stmia	r5!, {r0, r1}
 8020c94:	6818      	ldr	r0, [r3, #0]
 8020c96:	6859      	ldr	r1, [r3, #4]
 8020c98:	4616      	mov	r6, r2
 8020c9a:	c503      	stmia	r5!, {r0, r1}
 8020c9c:	4668      	mov	r0, sp
 8020c9e:	f7f7 facf 	bl	8018240 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8020ca2:	4631      	mov	r1, r6
 8020ca4:	a802      	add	r0, sp, #8
 8020ca6:	f7f7 faf3 	bl	8018290 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8020caa:	f9bd 2008 	ldrsh.w	r2, [sp, #8]
 8020cae:	f9bd 300a 	ldrsh.w	r3, [sp, #10]
 8020cb2:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 8020cb6:	4d28      	ldr	r5, [pc, #160]	; (8020d58 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd4>)
 8020cb8:	4e28      	ldr	r6, [pc, #160]	; (8020d5c <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd8>)
 8020cba:	6828      	ldr	r0, [r5, #0]
 8020cbc:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 8020cc0:	f9bd 800e 	ldrsh.w	r8, [sp, #14]
 8020cc4:	fb11 2103 	smlabb	r1, r1, r3, r2
 8020cc8:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 8020ccc:	f8bd 1000 	ldrh.w	r1, [sp]
 8020cd0:	440a      	add	r2, r1
 8020cd2:	f8ad 2008 	strh.w	r2, [sp, #8]
 8020cd6:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 8020cda:	4413      	add	r3, r2
 8020cdc:	f8ad 300a 	strh.w	r3, [sp, #10]
 8020ce0:	6803      	ldr	r3, [r0, #0]
 8020ce2:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8020ce4:	4798      	blx	r3
 8020ce6:	8833      	ldrh	r3, [r6, #0]
 8020ce8:	f9bd 200a 	ldrsh.w	r2, [sp, #10]
 8020cec:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 8020cf0:	f8df e06c 	ldr.w	lr, [pc, #108]	; 8020d60 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xdc>
 8020cf4:	fb03 1202 	mla	r2, r3, r2, r1
 8020cf8:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8020cfc:	fb08 f303 	mul.w	r3, r8, r3
 8020d00:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8020d04:	ea4f 0c47 	mov.w	ip, r7, lsl #1
 8020d08:	4298      	cmp	r0, r3
 8020d0a:	d21d      	bcs.n	8020d48 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xc4>
 8020d0c:	eb00 080c 	add.w	r8, r0, ip
 8020d10:	4540      	cmp	r0, r8
 8020d12:	d20f      	bcs.n	8020d34 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xb0>
 8020d14:	f854 1b04 	ldr.w	r1, [r4], #4
 8020d18:	ea4f 1951 	mov.w	r9, r1, lsr #5
 8020d1c:	ea0e 2211 	and.w	r2, lr, r1, lsr #8
 8020d20:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8020d24:	ea42 0209 	orr.w	r2, r2, r9
 8020d28:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 8020d2c:	430a      	orrs	r2, r1
 8020d2e:	f820 2b02 	strh.w	r2, [r0], #2
 8020d32:	e7ed      	b.n	8020d10 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x8c>
 8020d34:	8832      	ldrh	r2, [r6, #0]
 8020d36:	1bd2      	subs	r2, r2, r7
 8020d38:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8020d3c:	f9bd 2004 	ldrsh.w	r2, [sp, #4]
 8020d40:	1bd2      	subs	r2, r2, r7
 8020d42:	eb04 0482 	add.w	r4, r4, r2, lsl #2
 8020d46:	e7df      	b.n	8020d08 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x84>
 8020d48:	6828      	ldr	r0, [r5, #0]
 8020d4a:	6803      	ldr	r3, [r0, #0]
 8020d4c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8020d4e:	4798      	blx	r3
 8020d50:	b005      	add	sp, #20
 8020d52:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8020d56:	bf00      	nop
 8020d58:	20006c34 	.word	0x20006c34
 8020d5c:	20006c2e 	.word	0x20006c2e
 8020d60:	fffff800 	.word	0xfffff800

08020d64 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>:
 8020d64:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8020d68:	460e      	mov	r6, r1
 8020d6a:	b08e      	sub	sp, #56	; 0x38
 8020d6c:	4604      	mov	r4, r0
 8020d6e:	6808      	ldr	r0, [r1, #0]
 8020d70:	6849      	ldr	r1, [r1, #4]
 8020d72:	f8df 81d8 	ldr.w	r8, [pc, #472]	; 8020f4c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>
 8020d76:	f8df 91d8 	ldr.w	r9, [pc, #472]	; 8020f50 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1ec>
 8020d7a:	461d      	mov	r5, r3
 8020d7c:	ab0a      	add	r3, sp, #40	; 0x28
 8020d7e:	c303      	stmia	r3!, {r0, r1}
 8020d80:	6810      	ldr	r0, [r2, #0]
 8020d82:	6851      	ldr	r1, [r2, #4]
 8020d84:	ab0c      	add	r3, sp, #48	; 0x30
 8020d86:	c303      	stmia	r3!, {r0, r1}
 8020d88:	a80a      	add	r0, sp, #40	; 0x28
 8020d8a:	f7f7 fa59 	bl	8018240 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8020d8e:	4631      	mov	r1, r6
 8020d90:	a80c      	add	r0, sp, #48	; 0x30
 8020d92:	f7f7 fa7d 	bl	8018290 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8020d96:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	; 0x30
 8020d9a:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 8020d9e:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 8020da2:	f8d8 0000 	ldr.w	r0, [r8]
 8020da6:	f9bd 7034 	ldrsh.w	r7, [sp, #52]	; 0x34
 8020daa:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	; 0x36
 8020dae:	fb11 2103 	smlabb	r1, r1, r3, r2
 8020db2:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8020db6:	440c      	add	r4, r1
 8020db8:	f8bd 1028 	ldrh.w	r1, [sp, #40]	; 0x28
 8020dbc:	440a      	add	r2, r1
 8020dbe:	f8ad 2030 	strh.w	r2, [sp, #48]	; 0x30
 8020dc2:	f8bd 202a 	ldrh.w	r2, [sp, #42]	; 0x2a
 8020dc6:	4413      	add	r3, r2
 8020dc8:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 8020dcc:	6803      	ldr	r3, [r0, #0]
 8020dce:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8020dd0:	4798      	blx	r3
 8020dd2:	2dff      	cmp	r5, #255	; 0xff
 8020dd4:	d124      	bne.n	8020e20 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xbc>
 8020dd6:	f010 0f01 	tst.w	r0, #1
 8020dda:	f8d8 0000 	ldr.w	r0, [r8]
 8020dde:	d022      	beq.n	8020e26 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xc2>
 8020de0:	2100      	movs	r1, #0
 8020de2:	f8d0 c000 	ldr.w	ip, [r0]
 8020de6:	f8bd 3032 	ldrh.w	r3, [sp, #50]	; 0x32
 8020dea:	f8bd 2030 	ldrh.w	r2, [sp, #48]	; 0x30
 8020dee:	e9cd 1107 	strd	r1, r1, [sp, #28]
 8020df2:	f04f 0e01 	mov.w	lr, #1
 8020df6:	f8cd e018 	str.w	lr, [sp, #24]
 8020dfa:	f8b9 e000 	ldrh.w	lr, [r9]
 8020dfe:	9503      	str	r5, [sp, #12]
 8020e00:	e9cd 1e04 	strd	r1, lr, [sp, #16]
 8020e04:	b2b6      	uxth	r6, r6
 8020e06:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 8020e0a:	9102      	str	r1, [sp, #8]
 8020e0c:	b2bf      	uxth	r7, r7
 8020e0e:	9601      	str	r6, [sp, #4]
 8020e10:	9700      	str	r7, [sp, #0]
 8020e12:	f8dc 5040 	ldr.w	r5, [ip, #64]	; 0x40
 8020e16:	4621      	mov	r1, r4
 8020e18:	47a8      	blx	r5
 8020e1a:	b00e      	add	sp, #56	; 0x38
 8020e1c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8020e20:	f010 0f04 	tst.w	r0, #4
 8020e24:	e7d9      	b.n	8020dda <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x76>
 8020e26:	6803      	ldr	r3, [r0, #0]
 8020e28:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8020e2a:	4798      	blx	r3
 8020e2c:	f8b9 3000 	ldrh.w	r3, [r9]
 8020e30:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 8020e34:	f9bd 1030 	ldrsh.w	r1, [sp, #48]	; 0x30
 8020e38:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	; 0x2c
 8020e3c:	fb03 1202 	mla	r2, r3, r2, r1
 8020e40:	ebac 0c07 	sub.w	ip, ip, r7
 8020e44:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8020e48:	435e      	muls	r6, r3
 8020e4a:	ea4f 0e47 	mov.w	lr, r7, lsl #1
 8020e4e:	2dff      	cmp	r5, #255	; 0xff
 8020e50:	eba3 0707 	sub.w	r7, r3, r7
 8020e54:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 8020e58:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 8020e5c:	ea4f 0747 	mov.w	r7, r7, lsl #1
 8020e60:	d049      	beq.n	8020ef6 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x192>
 8020e62:	43eb      	mvns	r3, r5
 8020e64:	fa1f f985 	uxth.w	r9, r5
 8020e68:	b2db      	uxtb	r3, r3
 8020e6a:	42b0      	cmp	r0, r6
 8020e6c:	d266      	bcs.n	8020f3c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
 8020e6e:	eb00 0a0e 	add.w	sl, r0, lr
 8020e72:	4550      	cmp	r0, sl
 8020e74:	4621      	mov	r1, r4
 8020e76:	f104 0403 	add.w	r4, r4, #3
 8020e7a:	d25b      	bcs.n	8020f34 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d0>
 8020e7c:	8802      	ldrh	r2, [r0, #0]
 8020e7e:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 8020e82:	ea4f 2822 	mov.w	r8, r2, asr #8
 8020e86:	f008 08f8 	and.w	r8, r8, #248	; 0xf8
 8020e8a:	fb11 f109 	smulbb	r1, r1, r9
 8020e8e:	ea48 1858 	orr.w	r8, r8, r8, lsr #5
 8020e92:	10d5      	asrs	r5, r2, #3
 8020e94:	fb08 1803 	mla	r8, r8, r3, r1
 8020e98:	f814 1c02 	ldrb.w	r1, [r4, #-2]
 8020e9c:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8020ea0:	fb11 f109 	smulbb	r1, r1, r9
 8020ea4:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 8020ea8:	fb05 1503 	mla	r5, r5, r3, r1
 8020eac:	00d2      	lsls	r2, r2, #3
 8020eae:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 8020eb2:	b2d2      	uxtb	r2, r2
 8020eb4:	fb11 f109 	smulbb	r1, r1, r9
 8020eb8:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 8020ebc:	fa1f f888 	uxth.w	r8, r8
 8020ec0:	fb02 1203 	mla	r2, r2, r3, r1
 8020ec4:	b292      	uxth	r2, r2
 8020ec6:	f108 0101 	add.w	r1, r8, #1
 8020eca:	b2ad      	uxth	r5, r5
 8020ecc:	eb01 2818 	add.w	r8, r1, r8, lsr #8
 8020ed0:	1c51      	adds	r1, r2, #1
 8020ed2:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8020ed6:	1c69      	adds	r1, r5, #1
 8020ed8:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 8020edc:	f408 4878 	and.w	r8, r8, #63488	; 0xf800
 8020ee0:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8020ee4:	096d      	lsrs	r5, r5, #5
 8020ee6:	ea42 0208 	orr.w	r2, r2, r8
 8020eea:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8020eee:	432a      	orrs	r2, r5
 8020ef0:	f820 2b02 	strh.w	r2, [r0], #2
 8020ef4:	e7bd      	b.n	8020e72 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x10e>
 8020ef6:	4a14      	ldr	r2, [pc, #80]	; (8020f48 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e4>)
 8020ef8:	42b0      	cmp	r0, r6
 8020efa:	d21f      	bcs.n	8020f3c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
 8020efc:	eb00 050e 	add.w	r5, r0, lr
 8020f00:	42a8      	cmp	r0, r5
 8020f02:	4621      	mov	r1, r4
 8020f04:	f104 0403 	add.w	r4, r4, #3
 8020f08:	d210      	bcs.n	8020f2c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1c8>
 8020f0a:	f814 3c02 	ldrb.w	r3, [r4, #-2]
 8020f0e:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 8020f12:	00db      	lsls	r3, r3, #3
 8020f14:	ea02 2101 	and.w	r1, r2, r1, lsl #8
 8020f18:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8020f1c:	430b      	orrs	r3, r1
 8020f1e:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 8020f22:	ea43 03d1 	orr.w	r3, r3, r1, lsr #3
 8020f26:	f820 3b02 	strh.w	r3, [r0], #2
 8020f2a:	e7e9      	b.n	8020f00 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x19c>
 8020f2c:	4438      	add	r0, r7
 8020f2e:	eb01 040c 	add.w	r4, r1, ip
 8020f32:	e7e1      	b.n	8020ef8 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x194>
 8020f34:	4438      	add	r0, r7
 8020f36:	eb01 040c 	add.w	r4, r1, ip
 8020f3a:	e796      	b.n	8020e6a <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x106>
 8020f3c:	4b03      	ldr	r3, [pc, #12]	; (8020f4c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>)
 8020f3e:	6818      	ldr	r0, [r3, #0]
 8020f40:	6803      	ldr	r3, [r0, #0]
 8020f42:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8020f44:	4798      	blx	r3
 8020f46:	e768      	b.n	8020e1a <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xb6>
 8020f48:	fffff800 	.word	0xfffff800
 8020f4c:	20006c34 	.word	0x20006c34
 8020f50:	20006c2e 	.word	0x20006c2e

08020f54 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb>:
 8020f54:	b4f0      	push	{r4, r5, r6, r7}
 8020f56:	4616      	mov	r6, r2
 8020f58:	2e01      	cmp	r6, #1
 8020f5a:	461c      	mov	r4, r3
 8020f5c:	460d      	mov	r5, r1
 8020f5e:	9a04      	ldr	r2, [sp, #16]
 8020f60:	f89d 3014 	ldrb.w	r3, [sp, #20]
 8020f64:	f89d 7018 	ldrb.w	r7, [sp, #24]
 8020f68:	d012      	beq.n	8020f90 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x3c>
 8020f6a:	d303      	bcc.n	8020f74 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x20>
 8020f6c:	2e02      	cmp	r6, #2
 8020f6e:	d00a      	beq.n	8020f86 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x32>
 8020f70:	bcf0      	pop	{r4, r5, r6, r7}
 8020f72:	4770      	bx	lr
 8020f74:	6805      	ldr	r5, [r0, #0]
 8020f76:	e9cd 3704 	strd	r3, r7, [sp, #16]
 8020f7a:	68ed      	ldr	r5, [r5, #12]
 8020f7c:	4613      	mov	r3, r2
 8020f7e:	46ac      	mov	ip, r5
 8020f80:	4622      	mov	r2, r4
 8020f82:	bcf0      	pop	{r4, r5, r6, r7}
 8020f84:	4760      	bx	ip
 8020f86:	4621      	mov	r1, r4
 8020f88:	4628      	mov	r0, r5
 8020f8a:	bcf0      	pop	{r4, r5, r6, r7}
 8020f8c:	f7ff bd94 	b.w	8020ab8 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 8020f90:	4621      	mov	r1, r4
 8020f92:	4628      	mov	r0, r5
 8020f94:	bcf0      	pop	{r4, r5, r6, r7}
 8020f96:	f7ff bee5 	b.w	8020d64 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
	...

08020f9c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>:
 8020f9c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020fa0:	4681      	mov	r9, r0
 8020fa2:	b093      	sub	sp, #76	; 0x4c
 8020fa4:	6810      	ldr	r0, [r2, #0]
 8020fa6:	f89d a070 	ldrb.w	sl, [sp, #112]	; 0x70
 8020faa:	4f6d      	ldr	r7, [pc, #436]	; (8021160 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c4>)
 8020fac:	4688      	mov	r8, r1
 8020fae:	6851      	ldr	r1, [r2, #4]
 8020fb0:	ac0e      	add	r4, sp, #56	; 0x38
 8020fb2:	c403      	stmia	r4!, {r0, r1}
 8020fb4:	6818      	ldr	r0, [r3, #0]
 8020fb6:	6859      	ldr	r1, [r3, #4]
 8020fb8:	ac10      	add	r4, sp, #64	; 0x40
 8020fba:	4616      	mov	r6, r2
 8020fbc:	c403      	stmia	r4!, {r0, r1}
 8020fbe:	a80e      	add	r0, sp, #56	; 0x38
 8020fc0:	f7f7 f93e 	bl	8018240 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8020fc4:	4631      	mov	r1, r6
 8020fc6:	a810      	add	r0, sp, #64	; 0x40
 8020fc8:	f7f7 f962 	bl	8018290 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8020fcc:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	; 0x40
 8020fd0:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	; 0x42
 8020fd4:	f8bd 103c 	ldrh.w	r1, [sp, #60]	; 0x3c
 8020fd8:	4e62      	ldr	r6, [pc, #392]	; (8021164 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
 8020fda:	f9bd 4044 	ldrsh.w	r4, [sp, #68]	; 0x44
 8020fde:	6830      	ldr	r0, [r6, #0]
 8020fe0:	f9bd 5046 	ldrsh.w	r5, [sp, #70]	; 0x46
 8020fe4:	fb11 2103 	smlabb	r1, r1, r3, r2
 8020fe8:	4489      	add	r9, r1
 8020fea:	f8bd 1038 	ldrh.w	r1, [sp, #56]	; 0x38
 8020fee:	440a      	add	r2, r1
 8020ff0:	f8ad 2040 	strh.w	r2, [sp, #64]	; 0x40
 8020ff4:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 8020ff8:	4413      	add	r3, r2
 8020ffa:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
 8020ffe:	6803      	ldr	r3, [r0, #0]
 8021000:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8021002:	4798      	blx	r3
 8021004:	f010 0f80 	tst.w	r0, #128	; 0x80
 8021008:	6830      	ldr	r0, [r6, #0]
 802100a:	d01d      	beq.n	8021048 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xac>
 802100c:	2200      	movs	r2, #0
 802100e:	6801      	ldr	r1, [r0, #0]
 8021010:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 8021014:	e9cd 2208 	strd	r2, r2, [sp, #32]
 8021018:	220b      	movs	r2, #11
 802101a:	9207      	str	r2, [sp, #28]
 802101c:	883a      	ldrh	r2, [r7, #0]
 802101e:	9206      	str	r2, [sp, #24]
 8021020:	2201      	movs	r2, #1
 8021022:	e9cd a204 	strd	sl, r2, [sp, #16]
 8021026:	f8bd 203c 	ldrh.w	r2, [sp, #60]	; 0x3c
 802102a:	9203      	str	r2, [sp, #12]
 802102c:	b2a4      	uxth	r4, r4
 802102e:	f8bd 2042 	ldrh.w	r2, [sp, #66]	; 0x42
 8021032:	9200      	str	r2, [sp, #0]
 8021034:	b2ad      	uxth	r5, r5
 8021036:	9502      	str	r5, [sp, #8]
 8021038:	9401      	str	r4, [sp, #4]
 802103a:	6bcc      	ldr	r4, [r1, #60]	; 0x3c
 802103c:	4642      	mov	r2, r8
 802103e:	4649      	mov	r1, r9
 8021040:	47a0      	blx	r4
 8021042:	b013      	add	sp, #76	; 0x4c
 8021044:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8021048:	6803      	ldr	r3, [r0, #0]
 802104a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 802104c:	4798      	blx	r3
 802104e:	883b      	ldrh	r3, [r7, #0]
 8021050:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	; 0x42
 8021054:	f9bd 1040 	ldrsh.w	r1, [sp, #64]	; 0x40
 8021058:	fb03 1202 	mla	r2, r3, r2, r1
 802105c:	435d      	muls	r5, r3
 802105e:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8021062:	eb00 0245 	add.w	r2, r0, r5, lsl #1
 8021066:	920c      	str	r2, [sp, #48]	; 0x30
 8021068:	f9bd 203c 	ldrsh.w	r2, [sp, #60]	; 0x3c
 802106c:	1b12      	subs	r2, r2, r4
 802106e:	920d      	str	r2, [sp, #52]	; 0x34
 8021070:	0062      	lsls	r2, r4, #1
 8021072:	1b1c      	subs	r4, r3, r4
 8021074:	0063      	lsls	r3, r4, #1
 8021076:	920a      	str	r2, [sp, #40]	; 0x28
 8021078:	930b      	str	r3, [sp, #44]	; 0x2c
 802107a:	f04f 0e04 	mov.w	lr, #4
 802107e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8021080:	4298      	cmp	r0, r3
 8021082:	d266      	bcs.n	8021152 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1b6>
 8021084:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8021086:	eb00 0b03 	add.w	fp, r0, r3
 802108a:	4558      	cmp	r0, fp
 802108c:	d25c      	bcs.n	8021148 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1ac>
 802108e:	f819 3b01 	ldrb.w	r3, [r9], #1
 8021092:	fb1e e303 	smlabb	r3, lr, r3, lr
 8021096:	f858 2003 	ldr.w	r2, [r8, r3]
 802109a:	0e11      	lsrs	r1, r2, #24
 802109c:	d012      	beq.n	80210c4 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
 802109e:	29ff      	cmp	r1, #255	; 0xff
 80210a0:	ea4f 2712 	mov.w	r7, r2, lsr #8
 80210a4:	d110      	bne.n	80210c8 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
 80210a6:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 80210aa:	d10d      	bne.n	80210c8 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
 80210ac:	0953      	lsrs	r3, r2, #5
 80210ae:	f427 67ff 	bic.w	r7, r7, #2040	; 0x7f8
 80210b2:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80210b6:	f027 0707 	bic.w	r7, r7, #7
 80210ba:	431f      	orrs	r7, r3
 80210bc:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 80210c0:	433a      	orrs	r2, r7
 80210c2:	8002      	strh	r2, [r0, #0]
 80210c4:	3002      	adds	r0, #2
 80210c6:	e7e0      	b.n	802108a <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xee>
 80210c8:	fb0a f101 	mul.w	r1, sl, r1
 80210cc:	8806      	ldrh	r6, [r0, #0]
 80210ce:	1c4b      	adds	r3, r1, #1
 80210d0:	eb03 2321 	add.w	r3, r3, r1, asr #8
 80210d4:	1235      	asrs	r5, r6, #8
 80210d6:	10f4      	asrs	r4, r6, #3
 80210d8:	121b      	asrs	r3, r3, #8
 80210da:	00f6      	lsls	r6, r6, #3
 80210dc:	b299      	uxth	r1, r3
 80210de:	f3c2 4c07 	ubfx	ip, r2, #16, #8
 80210e2:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 80210e6:	b2f6      	uxtb	r6, r6
 80210e8:	43db      	mvns	r3, r3
 80210ea:	b2d2      	uxtb	r2, r2
 80210ec:	b2db      	uxtb	r3, r3
 80210ee:	fb1c fc01 	smulbb	ip, ip, r1
 80210f2:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
 80210f6:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 80210fa:	fb12 f201 	smulbb	r2, r2, r1
 80210fe:	fb05 c503 	mla	r5, r5, r3, ip
 8021102:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 8021106:	b2ff      	uxtb	r7, r7
 8021108:	fb06 2203 	mla	r2, r6, r3, r2
 802110c:	b2ad      	uxth	r5, r5
 802110e:	fb17 f701 	smulbb	r7, r7, r1
 8021112:	b292      	uxth	r2, r2
 8021114:	ea44 1494 	orr.w	r4, r4, r4, lsr #6
 8021118:	fb04 7403 	mla	r4, r4, r3, r7
 802111c:	f105 0c01 	add.w	ip, r5, #1
 8021120:	1c57      	adds	r7, r2, #1
 8021122:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 8021126:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 802112a:	b2a4      	uxth	r4, r4
 802112c:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8021130:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8021134:	433d      	orrs	r5, r7
 8021136:	1c67      	adds	r7, r4, #1
 8021138:	eb07 2414 	add.w	r4, r7, r4, lsr #8
 802113c:	0964      	lsrs	r4, r4, #5
 802113e:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 8021142:	4325      	orrs	r5, r4
 8021144:	8005      	strh	r5, [r0, #0]
 8021146:	e7bd      	b.n	80210c4 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
 8021148:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 802114a:	4418      	add	r0, r3
 802114c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 802114e:	4499      	add	r9, r3
 8021150:	e795      	b.n	802107e <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xe2>
 8021152:	4b04      	ldr	r3, [pc, #16]	; (8021164 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
 8021154:	6818      	ldr	r0, [r3, #0]
 8021156:	6803      	ldr	r3, [r0, #0]
 8021158:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 802115a:	4798      	blx	r3
 802115c:	e771      	b.n	8021042 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xa6>
 802115e:	bf00      	nop
 8021160:	20006c2e 	.word	0x20006c2e
 8021164:	20006c34 	.word	0x20006c34

08021168 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>:
 8021168:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802116c:	b087      	sub	sp, #28
 802116e:	4680      	mov	r8, r0
 8021170:	f89d 6040 	ldrb.w	r6, [sp, #64]	; 0x40
 8021174:	460d      	mov	r5, r1
 8021176:	4614      	mov	r4, r2
 8021178:	2e00      	cmp	r6, #0
 802117a:	f000 80b9 	beq.w	80212f0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x188>
 802117e:	6810      	ldr	r0, [r2, #0]
 8021180:	6851      	ldr	r1, [r2, #4]
 8021182:	af02      	add	r7, sp, #8
 8021184:	c703      	stmia	r7!, {r0, r1}
 8021186:	6818      	ldr	r0, [r3, #0]
 8021188:	6859      	ldr	r1, [r3, #4]
 802118a:	af04      	add	r7, sp, #16
 802118c:	c703      	stmia	r7!, {r0, r1}
 802118e:	a802      	add	r0, sp, #8
 8021190:	f7f7 f856 	bl	8018240 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8021194:	4621      	mov	r1, r4
 8021196:	a804      	add	r0, sp, #16
 8021198:	f7f7 f87a 	bl	8018290 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 802119c:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 80211a0:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 80211a4:	f8bd 400c 	ldrh.w	r4, [sp, #12]
 80211a8:	f9bd 7016 	ldrsh.w	r7, [sp, #22]
 80211ac:	fb14 2103 	smlabb	r1, r4, r3, r2
 80211b0:	eb08 0401 	add.w	r4, r8, r1
 80211b4:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 80211b8:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 80211bc:	440a      	add	r2, r1
 80211be:	f8ad 2010 	strh.w	r2, [sp, #16]
 80211c2:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 80211c6:	4413      	add	r3, r2
 80211c8:	f8ad 3012 	strh.w	r3, [sp, #18]
 80211cc:	4b4a      	ldr	r3, [pc, #296]	; (80212f8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
 80211ce:	6818      	ldr	r0, [r3, #0]
 80211d0:	6803      	ldr	r3, [r0, #0]
 80211d2:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80211d4:	4798      	blx	r3
 80211d6:	4b49      	ldr	r3, [pc, #292]	; (80212fc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x194>)
 80211d8:	f9bd 1012 	ldrsh.w	r1, [sp, #18]
 80211dc:	881a      	ldrh	r2, [r3, #0]
 80211de:	f9bd c010 	ldrsh.w	ip, [sp, #16]
 80211e2:	2eff      	cmp	r6, #255	; 0xff
 80211e4:	fb02 c101 	mla	r1, r2, r1, ip
 80211e8:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 80211ec:	fb02 f207 	mul.w	r2, r2, r7
 80211f0:	f105 0104 	add.w	r1, r5, #4
 80211f4:	ea4f 0a48 	mov.w	sl, r8, lsl #1
 80211f8:	461d      	mov	r5, r3
 80211fa:	d05a      	beq.n	80212b2 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14a>
 80211fc:	f1c6 0eff 	rsb	lr, r6, #255	; 0xff
 8021200:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 8021204:	b2b6      	uxth	r6, r6
 8021206:	fa1f fe8e 	uxth.w	lr, lr
 802120a:	9301      	str	r3, [sp, #4]
 802120c:	4282      	cmp	r2, r0
 802120e:	d96a      	bls.n	80212e6 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
 8021210:	eb00 0b0a 	add.w	fp, r0, sl
 8021214:	4583      	cmp	fp, r0
 8021216:	d940      	bls.n	802129a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x132>
 8021218:	f814 3b01 	ldrb.w	r3, [r4], #1
 802121c:	8805      	ldrh	r5, [r0, #0]
 802121e:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 8021222:	122f      	asrs	r7, r5, #8
 8021224:	ea4f 2c23 	mov.w	ip, r3, asr #8
 8021228:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 802122c:	fb17 f70e 	smulbb	r7, r7, lr
 8021230:	ea4f 09e5 	mov.w	r9, r5, asr #3
 8021234:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8021238:	00ed      	lsls	r5, r5, #3
 802123a:	fb0c 7c06 	mla	ip, ip, r6, r7
 802123e:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 8021242:	10df      	asrs	r7, r3, #3
 8021244:	b2ed      	uxtb	r5, r5
 8021246:	00db      	lsls	r3, r3, #3
 8021248:	fa1f fc8c 	uxth.w	ip, ip
 802124c:	fb19 f90e 	smulbb	r9, r9, lr
 8021250:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8021254:	b2db      	uxtb	r3, r3
 8021256:	fb15 f50e 	smulbb	r5, r5, lr
 802125a:	fb07 9706 	mla	r7, r7, r6, r9
 802125e:	fb03 5306 	mla	r3, r3, r6, r5
 8021262:	f10c 0901 	add.w	r9, ip, #1
 8021266:	b29b      	uxth	r3, r3
 8021268:	eb09 2c1c 	add.w	ip, r9, ip, lsr #8
 802126c:	f40c 4978 	and.w	r9, ip, #63488	; 0xf800
 8021270:	f103 0c01 	add.w	ip, r3, #1
 8021274:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 8021278:	b2bf      	uxth	r7, r7
 802127a:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 802127e:	ea4c 0c09 	orr.w	ip, ip, r9
 8021282:	f107 0901 	add.w	r9, r7, #1
 8021286:	eb09 2717 	add.w	r7, r9, r7, lsr #8
 802128a:	097f      	lsrs	r7, r7, #5
 802128c:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8021290:	ea4c 0c07 	orr.w	ip, ip, r7
 8021294:	f820 cb02 	strh.w	ip, [r0], #2
 8021298:	e7bc      	b.n	8021214 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xac>
 802129a:	9b01      	ldr	r3, [sp, #4]
 802129c:	881b      	ldrh	r3, [r3, #0]
 802129e:	eba3 0308 	sub.w	r3, r3, r8
 80212a2:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80212a6:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 80212aa:	eba3 0308 	sub.w	r3, r3, r8
 80212ae:	441c      	add	r4, r3
 80212b0:	e7ac      	b.n	802120c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xa4>
 80212b2:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 80212b6:	4282      	cmp	r2, r0
 80212b8:	d915      	bls.n	80212e6 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
 80212ba:	eb00 060a 	add.w	r6, r0, sl
 80212be:	4286      	cmp	r6, r0
 80212c0:	d906      	bls.n	80212d0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x168>
 80212c2:	f814 3b01 	ldrb.w	r3, [r4], #1
 80212c6:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 80212ca:	f820 3b02 	strh.w	r3, [r0], #2
 80212ce:	e7f6      	b.n	80212be <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x156>
 80212d0:	882b      	ldrh	r3, [r5, #0]
 80212d2:	eba3 0308 	sub.w	r3, r3, r8
 80212d6:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80212da:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 80212de:	eba3 0308 	sub.w	r3, r3, r8
 80212e2:	441c      	add	r4, r3
 80212e4:	e7e7      	b.n	80212b6 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14e>
 80212e6:	4b04      	ldr	r3, [pc, #16]	; (80212f8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
 80212e8:	6818      	ldr	r0, [r3, #0]
 80212ea:	6803      	ldr	r3, [r0, #0]
 80212ec:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80212ee:	4798      	blx	r3
 80212f0:	b007      	add	sp, #28
 80212f2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80212f6:	bf00      	nop
 80212f8:	20006c34 	.word	0x20006c34
 80212fc:	20006c2e 	.word	0x20006c2e

08021300 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>:
 8021300:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8021304:	b091      	sub	sp, #68	; 0x44
 8021306:	4680      	mov	r8, r0
 8021308:	f89d 5068 	ldrb.w	r5, [sp, #104]	; 0x68
 802130c:	460f      	mov	r7, r1
 802130e:	4614      	mov	r4, r2
 8021310:	2d00      	cmp	r5, #0
 8021312:	d051      	beq.n	80213b8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
 8021314:	6810      	ldr	r0, [r2, #0]
 8021316:	6851      	ldr	r1, [r2, #4]
 8021318:	f8df 9200 	ldr.w	r9, [pc, #512]	; 802151c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>
 802131c:	ae0c      	add	r6, sp, #48	; 0x30
 802131e:	c603      	stmia	r6!, {r0, r1}
 8021320:	6818      	ldr	r0, [r3, #0]
 8021322:	6859      	ldr	r1, [r3, #4]
 8021324:	ae0e      	add	r6, sp, #56	; 0x38
 8021326:	c603      	stmia	r6!, {r0, r1}
 8021328:	a80c      	add	r0, sp, #48	; 0x30
 802132a:	f7f6 ff89 	bl	8018240 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 802132e:	4621      	mov	r1, r4
 8021330:	a80e      	add	r0, sp, #56	; 0x38
 8021332:	f7f6 ffad 	bl	8018290 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8021336:	f9bd 2038 	ldrsh.w	r2, [sp, #56]	; 0x38
 802133a:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
 802133e:	f8bd 1034 	ldrh.w	r1, [sp, #52]	; 0x34
 8021342:	f8d9 0000 	ldr.w	r0, [r9]
 8021346:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	; 0x3c
 802134a:	f9bd a03e 	ldrsh.w	sl, [sp, #62]	; 0x3e
 802134e:	fb11 2103 	smlabb	r1, r1, r3, r2
 8021352:	eb08 0401 	add.w	r4, r8, r1
 8021356:	f8bd 1030 	ldrh.w	r1, [sp, #48]	; 0x30
 802135a:	f8df 81c4 	ldr.w	r8, [pc, #452]	; 8021520 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x220>
 802135e:	440a      	add	r2, r1
 8021360:	f8ad 2038 	strh.w	r2, [sp, #56]	; 0x38
 8021364:	f8bd 2032 	ldrh.w	r2, [sp, #50]	; 0x32
 8021368:	4413      	add	r3, r2
 802136a:	f8ad 303a 	strh.w	r3, [sp, #58]	; 0x3a
 802136e:	6803      	ldr	r3, [r0, #0]
 8021370:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8021372:	4798      	blx	r3
 8021374:	f010 0f80 	tst.w	r0, #128	; 0x80
 8021378:	f8d9 0000 	ldr.w	r0, [r9]
 802137c:	d01f      	beq.n	80213be <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xbe>
 802137e:	2200      	movs	r2, #0
 8021380:	6801      	ldr	r1, [r0, #0]
 8021382:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 8021386:	e9cd 2208 	strd	r2, r2, [sp, #32]
 802138a:	220b      	movs	r2, #11
 802138c:	9207      	str	r2, [sp, #28]
 802138e:	f8b8 2000 	ldrh.w	r2, [r8]
 8021392:	9206      	str	r2, [sp, #24]
 8021394:	2201      	movs	r2, #1
 8021396:	e9cd 5204 	strd	r5, r2, [sp, #16]
 802139a:	f8bd 2034 	ldrh.w	r2, [sp, #52]	; 0x34
 802139e:	9203      	str	r2, [sp, #12]
 80213a0:	fa1f f28a 	uxth.w	r2, sl
 80213a4:	9202      	str	r2, [sp, #8]
 80213a6:	b2b6      	uxth	r6, r6
 80213a8:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 80213ac:	9200      	str	r2, [sp, #0]
 80213ae:	9601      	str	r6, [sp, #4]
 80213b0:	6bcd      	ldr	r5, [r1, #60]	; 0x3c
 80213b2:	463a      	mov	r2, r7
 80213b4:	4621      	mov	r1, r4
 80213b6:	47a8      	blx	r5
 80213b8:	b011      	add	sp, #68	; 0x44
 80213ba:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80213be:	6803      	ldr	r3, [r0, #0]
 80213c0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80213c2:	4798      	blx	r3
 80213c4:	f8b8 2000 	ldrh.w	r2, [r8]
 80213c8:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
 80213cc:	f9bd 1038 	ldrsh.w	r1, [sp, #56]	; 0x38
 80213d0:	2dff      	cmp	r5, #255	; 0xff
 80213d2:	fb02 1303 	mla	r3, r2, r3, r1
 80213d6:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80213da:	ea4f 0946 	mov.w	r9, r6, lsl #1
 80213de:	fb0a fa02 	mul.w	sl, sl, r2
 80213e2:	d062      	beq.n	80214aa <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1aa>
 80213e4:	ea6f 0c05 	mvn.w	ip, r5
 80213e8:	eb00 034a 	add.w	r3, r0, sl, lsl #1
 80213ec:	930a      	str	r3, [sp, #40]	; 0x28
 80213ee:	b2ad      	uxth	r5, r5
 80213f0:	fa5f fc8c 	uxtb.w	ip, ip
 80213f4:	f8cd 802c 	str.w	r8, [sp, #44]	; 0x2c
 80213f8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80213fa:	4298      	cmp	r0, r3
 80213fc:	f080 8085 	bcs.w	802150a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
 8021400:	eb00 0b09 	add.w	fp, r0, r9
 8021404:	4558      	cmp	r0, fp
 8021406:	d246      	bcs.n	8021496 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x196>
 8021408:	f814 eb01 	ldrb.w	lr, [r4], #1
 802140c:	2303      	movs	r3, #3
 802140e:	2204      	movs	r2, #4
 8021410:	fb13 2e0e 	smlabb	lr, r3, lr, r2
 8021414:	eb07 0a0e 	add.w	sl, r7, lr
 8021418:	8803      	ldrh	r3, [r0, #0]
 802141a:	f89a 8002 	ldrb.w	r8, [sl, #2]
 802141e:	f817 e00e 	ldrb.w	lr, [r7, lr]
 8021422:	1219      	asrs	r1, r3, #8
 8021424:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8021428:	fb18 f805 	smulbb	r8, r8, r5
 802142c:	ea41 1151 	orr.w	r1, r1, r1, lsr #5
 8021430:	10da      	asrs	r2, r3, #3
 8021432:	fb01 810c 	mla	r1, r1, ip, r8
 8021436:	00db      	lsls	r3, r3, #3
 8021438:	f89a 8001 	ldrb.w	r8, [sl, #1]
 802143c:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8021440:	b2db      	uxtb	r3, r3
 8021442:	fb18 f805 	smulbb	r8, r8, r5
 8021446:	fb1e fe05 	smulbb	lr, lr, r5
 802144a:	ea42 1292 	orr.w	r2, r2, r2, lsr #6
 802144e:	ea43 1353 	orr.w	r3, r3, r3, lsr #5
 8021452:	b289      	uxth	r1, r1
 8021454:	fb02 820c 	mla	r2, r2, ip, r8
 8021458:	fb03 e30c 	mla	r3, r3, ip, lr
 802145c:	b292      	uxth	r2, r2
 802145e:	b29b      	uxth	r3, r3
 8021460:	f101 0801 	add.w	r8, r1, #1
 8021464:	eb08 2111 	add.w	r1, r8, r1, lsr #8
 8021468:	f103 0e01 	add.w	lr, r3, #1
 802146c:	f102 0801 	add.w	r8, r2, #1
 8021470:	eb0e 2e13 	add.w	lr, lr, r3, lsr #8
 8021474:	eb08 2812 	add.w	r8, r8, r2, lsr #8
 8021478:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 802147c:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 8021480:	ea4f 1858 	mov.w	r8, r8, lsr #5
 8021484:	ea4e 0101 	orr.w	r1, lr, r1
 8021488:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 802148c:	ea41 0108 	orr.w	r1, r1, r8
 8021490:	f820 1b02 	strh.w	r1, [r0], #2
 8021494:	e7b6      	b.n	8021404 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x104>
 8021496:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8021498:	881b      	ldrh	r3, [r3, #0]
 802149a:	1b9b      	subs	r3, r3, r6
 802149c:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80214a0:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 80214a4:	1b9b      	subs	r3, r3, r6
 80214a6:	441c      	add	r4, r3
 80214a8:	e7a6      	b.n	80213f8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xf8>
 80214aa:	491b      	ldr	r1, [pc, #108]	; (8021518 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x218>)
 80214ac:	eb00 0a4a 	add.w	sl, r0, sl, lsl #1
 80214b0:	2203      	movs	r2, #3
 80214b2:	2504      	movs	r5, #4
 80214b4:	4550      	cmp	r0, sl
 80214b6:	d228      	bcs.n	802150a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
 80214b8:	eb00 0c09 	add.w	ip, r0, r9
 80214bc:	4560      	cmp	r0, ip
 80214be:	4623      	mov	r3, r4
 80214c0:	d219      	bcs.n	80214f6 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1f6>
 80214c2:	f893 e000 	ldrb.w	lr, [r3]
 80214c6:	fb12 5e0e 	smlabb	lr, r2, lr, r5
 80214ca:	eb07 0b0e 	add.w	fp, r7, lr
 80214ce:	f817 e00e 	ldrb.w	lr, [r7, lr]
 80214d2:	f89b 3002 	ldrb.w	r3, [fp, #2]
 80214d6:	f89b b001 	ldrb.w	fp, [fp, #1]
 80214da:	ea4f 0bcb 	mov.w	fp, fp, lsl #3
 80214de:	ea01 2303 	and.w	r3, r1, r3, lsl #8
 80214e2:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 80214e6:	ea43 030b 	orr.w	r3, r3, fp
 80214ea:	ea43 03de 	orr.w	r3, r3, lr, lsr #3
 80214ee:	3401      	adds	r4, #1
 80214f0:	f820 3b02 	strh.w	r3, [r0], #2
 80214f4:	e7e2      	b.n	80214bc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1bc>
 80214f6:	f8b8 3000 	ldrh.w	r3, [r8]
 80214fa:	1b9b      	subs	r3, r3, r6
 80214fc:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8021500:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 8021504:	1b9b      	subs	r3, r3, r6
 8021506:	441c      	add	r4, r3
 8021508:	e7d4      	b.n	80214b4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1b4>
 802150a:	4b04      	ldr	r3, [pc, #16]	; (802151c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>)
 802150c:	6818      	ldr	r0, [r3, #0]
 802150e:	6803      	ldr	r3, [r0, #0]
 8021510:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8021512:	4798      	blx	r3
 8021514:	e750      	b.n	80213b8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
 8021516:	bf00      	nop
 8021518:	fffff800 	.word	0xfffff800
 802151c:	20006c34 	.word	0x20006c34
 8021520:	20006c2e 	.word	0x20006c2e

08021524 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>:
 8021524:	b4f0      	push	{r4, r5, r6, r7}
 8021526:	460c      	mov	r4, r1
 8021528:	4611      	mov	r1, r2
 802152a:	f89d 5014 	ldrb.w	r5, [sp, #20]
 802152e:	780f      	ldrb	r7, [r1, #0]
 8021530:	784e      	ldrb	r6, [r1, #1]
 8021532:	2f01      	cmp	r7, #1
 8021534:	461a      	mov	r2, r3
 8021536:	9b04      	ldr	r3, [sp, #16]
 8021538:	d038      	beq.n	80215ac <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x88>
 802153a:	d31f      	bcc.n	802157c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x58>
 802153c:	2f02      	cmp	r7, #2
 802153e:	d14d      	bne.n	80215dc <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 8021540:	2e03      	cmp	r6, #3
 8021542:	d84b      	bhi.n	80215dc <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 8021544:	e8df f006 	tbb	[pc, r6]
 8021548:	17140702 	.word	0x17140702
 802154c:	9504      	str	r5, [sp, #16]
 802154e:	4620      	mov	r0, r4
 8021550:	bcf0      	pop	{r4, r5, r6, r7}
 8021552:	f7ff be09 	b.w	8021168 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>
 8021556:	6fc0      	ldr	r0, [r0, #124]	; 0x7c
 8021558:	2800      	cmp	r0, #0
 802155a:	d03f      	beq.n	80215dc <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 802155c:	6806      	ldr	r6, [r0, #0]
 802155e:	e9cd 3504 	strd	r3, r5, [sp, #16]
 8021562:	68b5      	ldr	r5, [r6, #8]
 8021564:	4613      	mov	r3, r2
 8021566:	46ac      	mov	ip, r5
 8021568:	460a      	mov	r2, r1
 802156a:	4621      	mov	r1, r4
 802156c:	bcf0      	pop	{r4, r5, r6, r7}
 802156e:	4760      	bx	ip
 8021570:	f8d0 0080 	ldr.w	r0, [r0, #128]	; 0x80
 8021574:	e7f0      	b.n	8021558 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x34>
 8021576:	f8d0 0084 	ldr.w	r0, [r0, #132]	; 0x84
 802157a:	e7ed      	b.n	8021558 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x34>
 802157c:	2e03      	cmp	r6, #3
 802157e:	d82d      	bhi.n	80215dc <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 8021580:	e8df f006 	tbb	[pc, r6]
 8021584:	110e0702 	.word	0x110e0702
 8021588:	9504      	str	r5, [sp, #16]
 802158a:	4620      	mov	r0, r4
 802158c:	bcf0      	pop	{r4, r5, r6, r7}
 802158e:	f7ff bd05 	b.w	8020f9c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>
 8021592:	6fc0      	ldr	r0, [r0, #124]	; 0x7c
 8021594:	b310      	cbz	r0, 80215dc <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 8021596:	6806      	ldr	r6, [r0, #0]
 8021598:	e9cd 3504 	strd	r3, r5, [sp, #16]
 802159c:	68f5      	ldr	r5, [r6, #12]
 802159e:	e7e1      	b.n	8021564 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x40>
 80215a0:	f8d0 0080 	ldr.w	r0, [r0, #128]	; 0x80
 80215a4:	e7f6      	b.n	8021594 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x70>
 80215a6:	f8d0 0084 	ldr.w	r0, [r0, #132]	; 0x84
 80215aa:	e7f3      	b.n	8021594 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x70>
 80215ac:	2e03      	cmp	r6, #3
 80215ae:	d815      	bhi.n	80215dc <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 80215b0:	e8df f006 	tbb	[pc, r6]
 80215b4:	110e0702 	.word	0x110e0702
 80215b8:	9504      	str	r5, [sp, #16]
 80215ba:	4620      	mov	r0, r4
 80215bc:	bcf0      	pop	{r4, r5, r6, r7}
 80215be:	f7ff be9f 	b.w	8021300 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>
 80215c2:	6fc0      	ldr	r0, [r0, #124]	; 0x7c
 80215c4:	b150      	cbz	r0, 80215dc <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 80215c6:	6806      	ldr	r6, [r0, #0]
 80215c8:	e9cd 3504 	strd	r3, r5, [sp, #16]
 80215cc:	6935      	ldr	r5, [r6, #16]
 80215ce:	e7c9      	b.n	8021564 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x40>
 80215d0:	f8d0 0080 	ldr.w	r0, [r0, #128]	; 0x80
 80215d4:	e7f6      	b.n	80215c4 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xa0>
 80215d6:	f8d0 0084 	ldr.w	r0, [r0, #132]	; 0x84
 80215da:	e7f3      	b.n	80215c4 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xa0>
 80215dc:	bcf0      	pop	{r4, r5, r6, r7}
 80215de:	4770      	bx	lr

080215e0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>:
 80215e0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80215e4:	4604      	mov	r4, r0
 80215e6:	b087      	sub	sp, #28
 80215e8:	6810      	ldr	r0, [r2, #0]
 80215ea:	f89d a040 	ldrb.w	sl, [sp, #64]	; 0x40
 80215ee:	f8df 9238 	ldr.w	r9, [pc, #568]	; 8021828 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x248>
 80215f2:	460e      	mov	r6, r1
 80215f4:	6851      	ldr	r1, [r2, #4]
 80215f6:	ad02      	add	r5, sp, #8
 80215f8:	c503      	stmia	r5!, {r0, r1}
 80215fa:	6818      	ldr	r0, [r3, #0]
 80215fc:	6859      	ldr	r1, [r3, #4]
 80215fe:	ad04      	add	r5, sp, #16
 8021600:	4617      	mov	r7, r2
 8021602:	c503      	stmia	r5!, {r0, r1}
 8021604:	a802      	add	r0, sp, #8
 8021606:	f7f6 fe1b 	bl	8018240 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 802160a:	4639      	mov	r1, r7
 802160c:	a804      	add	r0, sp, #16
 802160e:	f7f6 fe3f 	bl	8018290 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8021612:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 8021616:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 802161a:	f8bd 100c 	ldrh.w	r1, [sp, #12]
 802161e:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 8021622:	f9bd 5016 	ldrsh.w	r5, [sp, #22]
 8021626:	fb11 2103 	smlabb	r1, r1, r3, r2
 802162a:	eb04 0441 	add.w	r4, r4, r1, lsl #1
 802162e:	440e      	add	r6, r1
 8021630:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 8021634:	440a      	add	r2, r1
 8021636:	f8ad 2010 	strh.w	r2, [sp, #16]
 802163a:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 802163e:	4413      	add	r3, r2
 8021640:	f8ad 3012 	strh.w	r3, [sp, #18]
 8021644:	4b77      	ldr	r3, [pc, #476]	; (8021824 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 8021646:	6818      	ldr	r0, [r3, #0]
 8021648:	6803      	ldr	r3, [r0, #0]
 802164a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 802164c:	4798      	blx	r3
 802164e:	f8b9 b000 	ldrh.w	fp, [r9]
 8021652:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8021656:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 802165a:	fb0b 2303 	mla	r3, fp, r3, r2
 802165e:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8021662:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 8021666:	ea4f 0348 	mov.w	r3, r8, lsl #1
 802166a:	fb05 f50b 	mul.w	r5, r5, fp
 802166e:	9300      	str	r3, [sp, #0]
 8021670:	d069      	beq.n	8021746 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x166>
 8021672:	eb00 0b45 	add.w	fp, r0, r5, lsl #1
 8021676:	4558      	cmp	r0, fp
 8021678:	f080 80cc 	bcs.w	8021814 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 802167c:	9b00      	ldr	r3, [sp, #0]
 802167e:	18c3      	adds	r3, r0, r3
 8021680:	9301      	str	r3, [sp, #4]
 8021682:	4631      	mov	r1, r6
 8021684:	9b01      	ldr	r3, [sp, #4]
 8021686:	4298      	cmp	r0, r3
 8021688:	d24f      	bcs.n	802172a <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x14a>
 802168a:	f811 2b01 	ldrb.w	r2, [r1], #1
 802168e:	2a00      	cmp	r2, #0
 8021690:	d048      	beq.n	8021724 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 8021692:	fb0a f202 	mul.w	r2, sl, r2
 8021696:	1c53      	adds	r3, r2, #1
 8021698:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 802169c:	121b      	asrs	r3, r3, #8
 802169e:	d041      	beq.n	8021724 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 80216a0:	8802      	ldrh	r2, [r0, #0]
 80216a2:	f8b4 c000 	ldrh.w	ip, [r4]
 80216a6:	b29e      	uxth	r6, r3
 80216a8:	1215      	asrs	r5, r2, #8
 80216aa:	43db      	mvns	r3, r3
 80216ac:	b2db      	uxtb	r3, r3
 80216ae:	ea4f 272c 	mov.w	r7, ip, asr #8
 80216b2:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 80216b6:	fb15 f503 	smulbb	r5, r5, r3
 80216ba:	ea4f 0ee2 	mov.w	lr, r2, asr #3
 80216be:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 80216c2:	00d2      	lsls	r2, r2, #3
 80216c4:	fb07 5706 	mla	r7, r7, r6, r5
 80216c8:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 80216cc:	ea4f 05ec 	mov.w	r5, ip, asr #3
 80216d0:	b2d2      	uxtb	r2, r2
 80216d2:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 80216d6:	b2bf      	uxth	r7, r7
 80216d8:	fb1e fe03 	smulbb	lr, lr, r3
 80216dc:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 80216e0:	fa5f fc8c 	uxtb.w	ip, ip
 80216e4:	fb12 f203 	smulbb	r2, r2, r3
 80216e8:	fb05 e506 	mla	r5, r5, r6, lr
 80216ec:	fb0c 2c06 	mla	ip, ip, r6, r2
 80216f0:	f107 0e01 	add.w	lr, r7, #1
 80216f4:	fa1f fc8c 	uxth.w	ip, ip
 80216f8:	eb0e 2717 	add.w	r7, lr, r7, lsr #8
 80216fc:	f407 4e78 	and.w	lr, r7, #63488	; 0xf800
 8021700:	f10c 0701 	add.w	r7, ip, #1
 8021704:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8021708:	b2ad      	uxth	r5, r5
 802170a:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 802170e:	ea47 070e 	orr.w	r7, r7, lr
 8021712:	f105 0e01 	add.w	lr, r5, #1
 8021716:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
 802171a:	096d      	lsrs	r5, r5, #5
 802171c:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8021720:	432f      	orrs	r7, r5
 8021722:	8007      	strh	r7, [r0, #0]
 8021724:	3002      	adds	r0, #2
 8021726:	3402      	adds	r4, #2
 8021728:	e7ac      	b.n	8021684 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0xa4>
 802172a:	f8b9 3000 	ldrh.w	r3, [r9]
 802172e:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 8021732:	eba3 0308 	sub.w	r3, r3, r8
 8021736:	eba6 0608 	sub.w	r6, r6, r8
 802173a:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 802173e:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8021742:	440e      	add	r6, r1
 8021744:	e797      	b.n	8021676 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x96>
 8021746:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 802174a:	42a8      	cmp	r0, r5
 802174c:	d262      	bcs.n	8021814 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 802174e:	9b00      	ldr	r3, [sp, #0]
 8021750:	4631      	mov	r1, r6
 8021752:	eb00 0b03 	add.w	fp, r0, r3
 8021756:	4558      	cmp	r0, fp
 8021758:	d24e      	bcs.n	80217f8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x218>
 802175a:	f811 3b01 	ldrb.w	r3, [r1], #1
 802175e:	b12b      	cbz	r3, 802176c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 8021760:	2bff      	cmp	r3, #255	; 0xff
 8021762:	f8b4 e000 	ldrh.w	lr, [r4]
 8021766:	d104      	bne.n	8021772 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x192>
 8021768:	f8a0 e000 	strh.w	lr, [r0]
 802176c:	3002      	adds	r0, #2
 802176e:	3402      	adds	r4, #2
 8021770:	e7f1      	b.n	8021756 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x176>
 8021772:	8802      	ldrh	r2, [r0, #0]
 8021774:	b29f      	uxth	r7, r3
 8021776:	1216      	asrs	r6, r2, #8
 8021778:	43db      	mvns	r3, r3
 802177a:	b2db      	uxtb	r3, r3
 802177c:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8021780:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8021784:	fb16 f603 	smulbb	r6, r6, r3
 8021788:	ea4f 0ae2 	mov.w	sl, r2, asr #3
 802178c:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8021790:	00d2      	lsls	r2, r2, #3
 8021792:	fb0c 6c07 	mla	ip, ip, r7, r6
 8021796:	b2d2      	uxtb	r2, r2
 8021798:	ea4f 06ee 	mov.w	r6, lr, asr #3
 802179c:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 80217a0:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 80217a4:	fb1a fa03 	smulbb	sl, sl, r3
 80217a8:	fa1f fc8c 	uxth.w	ip, ip
 80217ac:	fb12 f303 	smulbb	r3, r2, r3
 80217b0:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 80217b4:	fa5f fe8e 	uxtb.w	lr, lr
 80217b8:	fb06 a607 	mla	r6, r6, r7, sl
 80217bc:	f10c 0201 	add.w	r2, ip, #1
 80217c0:	fb0e 3307 	mla	r3, lr, r7, r3
 80217c4:	b2b6      	uxth	r6, r6
 80217c6:	b29b      	uxth	r3, r3
 80217c8:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 80217cc:	f40c 4278 	and.w	r2, ip, #63488	; 0xf800
 80217d0:	f106 0a01 	add.w	sl, r6, #1
 80217d4:	f103 0c01 	add.w	ip, r3, #1
 80217d8:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 80217dc:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
 80217e0:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 80217e4:	0976      	lsrs	r6, r6, #5
 80217e6:	ea4c 0c02 	orr.w	ip, ip, r2
 80217ea:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 80217ee:	ea4c 0c06 	orr.w	ip, ip, r6
 80217f2:	f8a0 c000 	strh.w	ip, [r0]
 80217f6:	e7b9      	b.n	802176c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 80217f8:	f8b9 3000 	ldrh.w	r3, [r9]
 80217fc:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 8021800:	eba3 0308 	sub.w	r3, r3, r8
 8021804:	eba6 0608 	sub.w	r6, r6, r8
 8021808:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 802180c:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8021810:	440e      	add	r6, r1
 8021812:	e79a      	b.n	802174a <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x16a>
 8021814:	4b03      	ldr	r3, [pc, #12]	; (8021824 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 8021816:	6818      	ldr	r0, [r3, #0]
 8021818:	6803      	ldr	r3, [r0, #0]
 802181a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 802181c:	4798      	blx	r3
 802181e:	b007      	add	sp, #28
 8021820:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8021824:	20006c34 	.word	0x20006c34
 8021828:	20006c2e 	.word	0x20006c2e

0802182c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb>:
 802182c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8021830:	b089      	sub	sp, #36	; 0x24
 8021832:	4682      	mov	sl, r0
 8021834:	f89d 604c 	ldrb.w	r6, [sp, #76]	; 0x4c
 8021838:	9c12      	ldr	r4, [sp, #72]	; 0x48
 802183a:	460f      	mov	r7, r1
 802183c:	4691      	mov	r9, r2
 802183e:	4698      	mov	r8, r3
 8021840:	2e00      	cmp	r6, #0
 8021842:	d03d      	beq.n	80218c0 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 8021844:	4608      	mov	r0, r1
 8021846:	f7fa fe5f 	bl	801c508 <_ZNK8touchgfx6Bitmap8getWidthEv>
 802184a:	4605      	mov	r5, r0
 802184c:	4638      	mov	r0, r7
 802184e:	f7fa fe8f 	bl	801c570 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8021852:	f8ad 000e 	strh.w	r0, [sp, #14]
 8021856:	4638      	mov	r0, r7
 8021858:	f8ad 9008 	strh.w	r9, [sp, #8]
 802185c:	f8ad 500c 	strh.w	r5, [sp, #12]
 8021860:	f8ad 800a 	strh.w	r8, [sp, #10]
 8021864:	f7fa ff3c 	bl	801c6e0 <_ZNK8touchgfx6Bitmap7getDataEv>
 8021868:	4605      	mov	r5, r0
 802186a:	4638      	mov	r0, r7
 802186c:	f7fa ff68 	bl	801c740 <_ZNK8touchgfx6Bitmap12getExtraDataEv>
 8021870:	4681      	mov	r9, r0
 8021872:	4638      	mov	r0, r7
 8021874:	f7fa ffb8 	bl	801c7e8 <_ZNK8touchgfx6Bitmap9getFormatEv>
 8021878:	280b      	cmp	r0, #11
 802187a:	d821      	bhi.n	80218c0 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 802187c:	e8df f000 	tbb	[pc, r0]
 8021880:	2006aebe 	.word	0x2006aebe
 8021884:	20202020 	.word	0x20202020
 8021888:	b5202020 	.word	0xb5202020
 802188c:	4bb0      	ldr	r3, [pc, #704]	; (8021b50 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x324>)
 802188e:	6818      	ldr	r0, [r3, #0]
 8021890:	6803      	ldr	r3, [r0, #0]
 8021892:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8021894:	4798      	blx	r3
 8021896:	2eff      	cmp	r6, #255	; 0xff
 8021898:	d101      	bne.n	802189e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x72>
 802189a:	0683      	lsls	r3, r0, #26
 802189c:	d506      	bpl.n	80218ac <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x80>
 802189e:	4633      	mov	r3, r6
 80218a0:	4622      	mov	r2, r4
 80218a2:	a902      	add	r1, sp, #8
 80218a4:	4628      	mov	r0, r5
 80218a6:	f7ff f907 	bl	8020ab8 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 80218aa:	e009      	b.n	80218c0 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 80218ac:	4638      	mov	r0, r7
 80218ae:	f7fa fedf 	bl	801c670 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 80218b2:	b940      	cbnz	r0, 80218c6 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x9a>
 80218b4:	4623      	mov	r3, r4
 80218b6:	aa02      	add	r2, sp, #8
 80218b8:	4629      	mov	r1, r5
 80218ba:	4650      	mov	r0, sl
 80218bc:	f7ff f9e2 	bl	8020c84 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
 80218c0:	b009      	add	sp, #36	; 0x24
 80218c2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80218c6:	f10d 0818 	add.w	r8, sp, #24
 80218ca:	4639      	mov	r1, r7
 80218cc:	4640      	mov	r0, r8
 80218ce:	f7fa fe83 	bl	801c5d8 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 80218d2:	e898 0003 	ldmia.w	r8, {r0, r1}
 80218d6:	af04      	add	r7, sp, #16
 80218d8:	e887 0003 	stmia.w	r7, {r0, r1}
 80218dc:	4638      	mov	r0, r7
 80218de:	4621      	mov	r1, r4
 80218e0:	f7f0 ffd8 	bl	8012894 <_ZN8touchgfx4RectaNERKS0_>
 80218e4:	4638      	mov	r0, r7
 80218e6:	f7f1 f818 	bl	801291a <_ZNK8touchgfx4Rect7isEmptyEv>
 80218ea:	2800      	cmp	r0, #0
 80218ec:	d1d7      	bne.n	802189e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x72>
 80218ee:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 80218f2:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 80218f6:	4293      	cmp	r3, r2
 80218f8:	dd12      	ble.n	8021920 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xf4>
 80218fa:	1a9b      	subs	r3, r3, r2
 80218fc:	f9b4 0000 	ldrsh.w	r0, [r4]
 8021900:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8021904:	f8ad 0018 	strh.w	r0, [sp, #24]
 8021908:	f8ad 201a 	strh.w	r2, [sp, #26]
 802190c:	f8ad 101c 	strh.w	r1, [sp, #28]
 8021910:	f8ad 301e 	strh.w	r3, [sp, #30]
 8021914:	4642      	mov	r2, r8
 8021916:	4633      	mov	r3, r6
 8021918:	a902      	add	r1, sp, #8
 802191a:	4628      	mov	r0, r5
 802191c:	f7ff f8cc 	bl	8020ab8 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 8021920:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 8021924:	f9b4 2000 	ldrsh.w	r2, [r4]
 8021928:	4293      	cmp	r3, r2
 802192a:	dd12      	ble.n	8021952 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x126>
 802192c:	1a9b      	subs	r3, r3, r2
 802192e:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 8021932:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 8021936:	f8ad 2018 	strh.w	r2, [sp, #24]
 802193a:	f8ad 001a 	strh.w	r0, [sp, #26]
 802193e:	f8ad 301c 	strh.w	r3, [sp, #28]
 8021942:	f8ad 101e 	strh.w	r1, [sp, #30]
 8021946:	23ff      	movs	r3, #255	; 0xff
 8021948:	4642      	mov	r2, r8
 802194a:	a902      	add	r1, sp, #8
 802194c:	4628      	mov	r0, r5
 802194e:	f7ff f8b3 	bl	8020ab8 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 8021952:	463b      	mov	r3, r7
 8021954:	aa02      	add	r2, sp, #8
 8021956:	4629      	mov	r1, r5
 8021958:	4650      	mov	r0, sl
 802195a:	f7ff f993 	bl	8020c84 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
 802195e:	88a2      	ldrh	r2, [r4, #4]
 8021960:	8823      	ldrh	r3, [r4, #0]
 8021962:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 8021966:	4413      	add	r3, r2
 8021968:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 802196c:	440a      	add	r2, r1
 802196e:	b29b      	uxth	r3, r3
 8021970:	b292      	uxth	r2, r2
 8021972:	b211      	sxth	r1, r2
 8021974:	b218      	sxth	r0, r3
 8021976:	4288      	cmp	r0, r1
 8021978:	dd12      	ble.n	80219a0 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x174>
 802197a:	1a9b      	subs	r3, r3, r2
 802197c:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 8021980:	f9bd 6012 	ldrsh.w	r6, [sp, #18]
 8021984:	f8ad 1018 	strh.w	r1, [sp, #24]
 8021988:	f8ad 301c 	strh.w	r3, [sp, #28]
 802198c:	f8ad 001e 	strh.w	r0, [sp, #30]
 8021990:	23ff      	movs	r3, #255	; 0xff
 8021992:	4642      	mov	r2, r8
 8021994:	a902      	add	r1, sp, #8
 8021996:	4628      	mov	r0, r5
 8021998:	f8ad 601a 	strh.w	r6, [sp, #26]
 802199c:	f7ff f88c 	bl	8020ab8 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 80219a0:	88e2      	ldrh	r2, [r4, #6]
 80219a2:	8863      	ldrh	r3, [r4, #2]
 80219a4:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 80219a8:	4413      	add	r3, r2
 80219aa:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 80219ae:	440a      	add	r2, r1
 80219b0:	b29b      	uxth	r3, r3
 80219b2:	b292      	uxth	r2, r2
 80219b4:	b211      	sxth	r1, r2
 80219b6:	b218      	sxth	r0, r3
 80219b8:	4288      	cmp	r0, r1
 80219ba:	dd81      	ble.n	80218c0 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 80219bc:	1a9b      	subs	r3, r3, r2
 80219be:	f9b4 6000 	ldrsh.w	r6, [r4]
 80219c2:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 80219c6:	f8ad 301e 	strh.w	r3, [sp, #30]
 80219ca:	f8ad 6018 	strh.w	r6, [sp, #24]
 80219ce:	f8ad 101a 	strh.w	r1, [sp, #26]
 80219d2:	f8ad 001c 	strh.w	r0, [sp, #28]
 80219d6:	23ff      	movs	r3, #255	; 0xff
 80219d8:	4642      	mov	r2, r8
 80219da:	e762      	b.n	80218a2 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x76>
 80219dc:	4633      	mov	r3, r6
 80219de:	4622      	mov	r2, r4
 80219e0:	a902      	add	r1, sp, #8
 80219e2:	4628      	mov	r0, r5
 80219e4:	f7ff f9be 	bl	8020d64 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
 80219e8:	e76a      	b.n	80218c0 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 80219ea:	e9cd 4600 	strd	r4, r6, [sp]
 80219ee:	ab02      	add	r3, sp, #8
 80219f0:	464a      	mov	r2, r9
 80219f2:	4629      	mov	r1, r5
 80219f4:	4650      	mov	r0, sl
 80219f6:	f7ff fd95 	bl	8021524 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>
 80219fa:	e761      	b.n	80218c0 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 80219fc:	4638      	mov	r0, r7
 80219fe:	f7fa fe37 	bl	801c670 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 8021a02:	b950      	cbnz	r0, 8021a1a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1ee>
 8021a04:	e9cd 6000 	strd	r6, r0, [sp]
 8021a08:	f8da 3000 	ldr.w	r3, [sl]
 8021a0c:	aa02      	add	r2, sp, #8
 8021a0e:	68de      	ldr	r6, [r3, #12]
 8021a10:	4629      	mov	r1, r5
 8021a12:	4623      	mov	r3, r4
 8021a14:	4650      	mov	r0, sl
 8021a16:	47b0      	blx	r6
 8021a18:	e752      	b.n	80218c0 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 8021a1a:	f10d 0818 	add.w	r8, sp, #24
 8021a1e:	4639      	mov	r1, r7
 8021a20:	4640      	mov	r0, r8
 8021a22:	f7fa fdd9 	bl	801c5d8 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 8021a26:	e898 0003 	ldmia.w	r8, {r0, r1}
 8021a2a:	af04      	add	r7, sp, #16
 8021a2c:	e887 0003 	stmia.w	r7, {r0, r1}
 8021a30:	4638      	mov	r0, r7
 8021a32:	4621      	mov	r1, r4
 8021a34:	f7f0 ff2e 	bl	8012894 <_ZN8touchgfx4RectaNERKS0_>
 8021a38:	4638      	mov	r0, r7
 8021a3a:	f7f0 ff6e 	bl	801291a <_ZNK8touchgfx4Rect7isEmptyEv>
 8021a3e:	b138      	cbz	r0, 8021a50 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x224>
 8021a40:	9600      	str	r6, [sp, #0]
 8021a42:	4623      	mov	r3, r4
 8021a44:	aa02      	add	r2, sp, #8
 8021a46:	4649      	mov	r1, r9
 8021a48:	4628      	mov	r0, r5
 8021a4a:	f7ff fdc9 	bl	80215e0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 8021a4e:	e737      	b.n	80218c0 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 8021a50:	e9cd 6000 	strd	r6, r0, [sp]
 8021a54:	f8da 3000 	ldr.w	r3, [sl]
 8021a58:	aa02      	add	r2, sp, #8
 8021a5a:	f8d3 b00c 	ldr.w	fp, [r3, #12]
 8021a5e:	4629      	mov	r1, r5
 8021a60:	463b      	mov	r3, r7
 8021a62:	4650      	mov	r0, sl
 8021a64:	47d8      	blx	fp
 8021a66:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8021a6a:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 8021a6e:	4293      	cmp	r3, r2
 8021a70:	dd13      	ble.n	8021a9a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x26e>
 8021a72:	f9b4 0000 	ldrsh.w	r0, [r4]
 8021a76:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8021a7a:	f8ad 0018 	strh.w	r0, [sp, #24]
 8021a7e:	1a9b      	subs	r3, r3, r2
 8021a80:	f8ad 201a 	strh.w	r2, [sp, #26]
 8021a84:	f8ad 101c 	strh.w	r1, [sp, #28]
 8021a88:	f8ad 301e 	strh.w	r3, [sp, #30]
 8021a8c:	9600      	str	r6, [sp, #0]
 8021a8e:	4643      	mov	r3, r8
 8021a90:	aa02      	add	r2, sp, #8
 8021a92:	4649      	mov	r1, r9
 8021a94:	4628      	mov	r0, r5
 8021a96:	f7ff fda3 	bl	80215e0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 8021a9a:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 8021a9e:	f9b4 2000 	ldrsh.w	r2, [r4]
 8021aa2:	4293      	cmp	r3, r2
 8021aa4:	dd13      	ble.n	8021ace <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2a2>
 8021aa6:	1a9b      	subs	r3, r3, r2
 8021aa8:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 8021aac:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 8021ab0:	f8ad 2018 	strh.w	r2, [sp, #24]
 8021ab4:	f8ad 001a 	strh.w	r0, [sp, #26]
 8021ab8:	f8ad 301c 	strh.w	r3, [sp, #28]
 8021abc:	f8ad 101e 	strh.w	r1, [sp, #30]
 8021ac0:	9600      	str	r6, [sp, #0]
 8021ac2:	4643      	mov	r3, r8
 8021ac4:	aa02      	add	r2, sp, #8
 8021ac6:	4649      	mov	r1, r9
 8021ac8:	4628      	mov	r0, r5
 8021aca:	f7ff fd89 	bl	80215e0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 8021ace:	88a2      	ldrh	r2, [r4, #4]
 8021ad0:	8823      	ldrh	r3, [r4, #0]
 8021ad2:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 8021ad6:	4413      	add	r3, r2
 8021ad8:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 8021adc:	440a      	add	r2, r1
 8021ade:	b29b      	uxth	r3, r3
 8021ae0:	b292      	uxth	r2, r2
 8021ae2:	b211      	sxth	r1, r2
 8021ae4:	b218      	sxth	r0, r3
 8021ae6:	4288      	cmp	r0, r1
 8021ae8:	dd13      	ble.n	8021b12 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2e6>
 8021aea:	1a9b      	subs	r3, r3, r2
 8021aec:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 8021af0:	f9bd 7012 	ldrsh.w	r7, [sp, #18]
 8021af4:	f8ad 1018 	strh.w	r1, [sp, #24]
 8021af8:	f8ad 301c 	strh.w	r3, [sp, #28]
 8021afc:	f8ad 001e 	strh.w	r0, [sp, #30]
 8021b00:	9600      	str	r6, [sp, #0]
 8021b02:	4643      	mov	r3, r8
 8021b04:	aa02      	add	r2, sp, #8
 8021b06:	4649      	mov	r1, r9
 8021b08:	4628      	mov	r0, r5
 8021b0a:	f8ad 701a 	strh.w	r7, [sp, #26]
 8021b0e:	f7ff fd67 	bl	80215e0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 8021b12:	88e2      	ldrh	r2, [r4, #6]
 8021b14:	8863      	ldrh	r3, [r4, #2]
 8021b16:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 8021b1a:	4413      	add	r3, r2
 8021b1c:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 8021b20:	440a      	add	r2, r1
 8021b22:	b29b      	uxth	r3, r3
 8021b24:	b292      	uxth	r2, r2
 8021b26:	b211      	sxth	r1, r2
 8021b28:	b218      	sxth	r0, r3
 8021b2a:	4288      	cmp	r0, r1
 8021b2c:	f77f aec8 	ble.w	80218c0 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 8021b30:	f9b4 7000 	ldrsh.w	r7, [r4]
 8021b34:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8021b38:	f8ad 7018 	strh.w	r7, [sp, #24]
 8021b3c:	1a9b      	subs	r3, r3, r2
 8021b3e:	f8ad 301e 	strh.w	r3, [sp, #30]
 8021b42:	f8ad 101a 	strh.w	r1, [sp, #26]
 8021b46:	f8ad 001c 	strh.w	r0, [sp, #28]
 8021b4a:	9600      	str	r6, [sp, #0]
 8021b4c:	4643      	mov	r3, r8
 8021b4e:	e779      	b.n	8021a44 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x218>
 8021b50:	20006c34 	.word	0x20006c34

08021b54 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>:
 8021b54:	b180      	cbz	r0, 8021b78 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x24>
 8021b56:	2903      	cmp	r1, #3
 8021b58:	d81c      	bhi.n	8021b94 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 8021b5a:	e8df f001 	tbb	[pc, r1]
 8021b5e:	1d02      	.short	0x1d02
 8021b60:	1f08      	.short	0x1f08
 8021b62:	4b10      	ldr	r3, [pc, #64]	; (8021ba4 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 8021b64:	8818      	ldrh	r0, [r3, #0]
 8021b66:	f3c0 000e 	ubfx	r0, r0, #0, #15
 8021b6a:	4240      	negs	r0, r0
 8021b6c:	4770      	bx	lr
 8021b6e:	4b0d      	ldr	r3, [pc, #52]	; (8021ba4 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 8021b70:	8818      	ldrh	r0, [r3, #0]
 8021b72:	f3c0 000e 	ubfx	r0, r0, #0, #15
 8021b76:	4770      	bx	lr
 8021b78:	2903      	cmp	r1, #3
 8021b7a:	d80b      	bhi.n	8021b94 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 8021b7c:	a301      	add	r3, pc, #4	; (adr r3, 8021b84 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x30>)
 8021b7e:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
 8021b82:	bf00      	nop
 8021b84:	08021b99 	.word	0x08021b99
 8021b88:	08021b6f 	.word	0x08021b6f
 8021b8c:	08021b9d 	.word	0x08021b9d
 8021b90:	08021b63 	.word	0x08021b63
 8021b94:	2000      	movs	r0, #0
 8021b96:	4770      	bx	lr
 8021b98:	2001      	movs	r0, #1
 8021b9a:	4770      	bx	lr
 8021b9c:	f04f 30ff 	mov.w	r0, #4294967295
 8021ba0:	4770      	bx	lr
 8021ba2:	bf00      	nop
 8021ba4:	20006c2e 	.word	0x20006c2e

08021ba8 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>:
 8021ba8:	b180      	cbz	r0, 8021bcc <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x24>
 8021baa:	2903      	cmp	r1, #3
 8021bac:	d81c      	bhi.n	8021be8 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
 8021bae:	e8df f001 	tbb	[pc, r1]
 8021bb2:	021d      	.short	0x021d
 8021bb4:	071f      	.short	0x071f
 8021bb6:	4b10      	ldr	r3, [pc, #64]	; (8021bf8 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 8021bb8:	8818      	ldrh	r0, [r3, #0]
 8021bba:	f3c0 000e 	ubfx	r0, r0, #0, #15
 8021bbe:	4770      	bx	lr
 8021bc0:	4b0d      	ldr	r3, [pc, #52]	; (8021bf8 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 8021bc2:	8818      	ldrh	r0, [r3, #0]
 8021bc4:	f3c0 000e 	ubfx	r0, r0, #0, #15
 8021bc8:	4240      	negs	r0, r0
 8021bca:	4770      	bx	lr
 8021bcc:	2903      	cmp	r1, #3
 8021bce:	d80b      	bhi.n	8021be8 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
 8021bd0:	a301      	add	r3, pc, #4	; (adr r3, 8021bd8 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x30>)
 8021bd2:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
 8021bd6:	bf00      	nop
 8021bd8:	08021bb7 	.word	0x08021bb7
 8021bdc:	08021bf1 	.word	0x08021bf1
 8021be0:	08021bc1 	.word	0x08021bc1
 8021be4:	08021bed 	.word	0x08021bed
 8021be8:	2000      	movs	r0, #0
 8021bea:	4770      	bx	lr
 8021bec:	2001      	movs	r0, #1
 8021bee:	4770      	bx	lr
 8021bf0:	f04f 30ff 	mov.w	r0, #4294967295
 8021bf4:	4770      	bx	lr
 8021bf6:	bf00      	nop
 8021bf8:	20006c2e 	.word	0x20006c2e

08021bfc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE>:
 8021bfc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8021c00:	b099      	sub	sp, #100	; 0x64
 8021c02:	910b      	str	r1, [sp, #44]	; 0x2c
 8021c04:	a914      	add	r1, sp, #80	; 0x50
 8021c06:	e881 000c 	stmia.w	r1, {r2, r3}
 8021c0a:	e9dd 2126 	ldrd	r2, r1, [sp, #152]	; 0x98
 8021c0e:	f9bd 308c 	ldrsh.w	r3, [sp, #140]	; 0x8c
 8021c12:	f891 900d 	ldrb.w	r9, [r1, #13]
 8021c16:	9309      	str	r3, [sp, #36]	; 0x24
 8021c18:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
 8021c1c:	9310      	str	r3, [sp, #64]	; 0x40
 8021c1e:	ea4f 1749 	mov.w	r7, r9, lsl #5
 8021c22:	f89d 30b0 	ldrb.w	r3, [sp, #176]	; 0xb0
 8021c26:	930c      	str	r3, [sp, #48]	; 0x30
 8021c28:	f407 7380 	and.w	r3, r7, #256	; 0x100
 8021c2c:	798f      	ldrb	r7, [r1, #6]
 8021c2e:	f9bd 4088 	ldrsh.w	r4, [sp, #136]	; 0x88
 8021c32:	f8bd 5090 	ldrh.w	r5, [sp, #144]	; 0x90
 8021c36:	f8bd 6094 	ldrh.w	r6, [sp, #148]	; 0x94
 8021c3a:	f89d 80ac 	ldrb.w	r8, [sp, #172]	; 0xac
 8021c3e:	f89d a0b4 	ldrb.w	sl, [sp, #180]	; 0xb4
 8021c42:	431f      	orrs	r7, r3
 8021c44:	f000 8195 	beq.w	8021f72 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 8021c48:	ea4f 1909 	mov.w	r9, r9, lsl #4
 8021c4c:	f409 7380 	and.w	r3, r9, #256	; 0x100
 8021c50:	f891 9007 	ldrb.w	r9, [r1, #7]
 8021c54:	ea59 0903 	orrs.w	r9, r9, r3
 8021c58:	f000 818b 	beq.w	8021f72 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 8021c5c:	f991 3009 	ldrsb.w	r3, [r1, #9]
 8021c60:	b29b      	uxth	r3, r3
 8021c62:	2d00      	cmp	r5, #0
 8021c64:	f000 812e 	beq.w	8021ec4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2c8>
 8021c68:	1aed      	subs	r5, r5, r3
 8021c6a:	b2ad      	uxth	r5, r5
 8021c6c:	042b      	lsls	r3, r5, #16
 8021c6e:	d502      	bpl.n	8021c76 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7a>
 8021c70:	1b64      	subs	r4, r4, r5
 8021c72:	b224      	sxth	r4, r4
 8021c74:	2500      	movs	r5, #0
 8021c76:	f9b2 1000 	ldrsh.w	r1, [r2]
 8021c7a:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8021c7e:	428c      	cmp	r4, r1
 8021c80:	b28b      	uxth	r3, r1
 8021c82:	bfbf      	itttt	lt
 8021c84:	18ed      	addlt	r5, r5, r3
 8021c86:	1b2c      	sublt	r4, r5, r4
 8021c88:	b2a5      	uxthlt	r5, r4
 8021c8a:	460c      	movlt	r4, r1
 8021c8c:	8891      	ldrh	r1, [r2, #4]
 8021c8e:	440b      	add	r3, r1
 8021c90:	b21b      	sxth	r3, r3
 8021c92:	930f      	str	r3, [sp, #60]	; 0x3c
 8021c94:	88d3      	ldrh	r3, [r2, #6]
 8021c96:	8852      	ldrh	r2, [r2, #2]
 8021c98:	4413      	add	r3, r2
 8021c9a:	b21b      	sxth	r3, r3
 8021c9c:	930d      	str	r3, [sp, #52]	; 0x34
 8021c9e:	4bbe      	ldr	r3, [pc, #760]	; (8021f98 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x39c>)
 8021ca0:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8021ca2:	f893 b000 	ldrb.w	fp, [r3]
 8021ca6:	f10b 3cff 	add.w	ip, fp, #4294967295
 8021caa:	f1dc 0300 	rsbs	r3, ip, #0
 8021cae:	eb43 030c 	adc.w	r3, r3, ip
 8021cb2:	930e      	str	r3, [sp, #56]	; 0x38
 8021cb4:	4621      	mov	r1, r4
 8021cb6:	4653      	mov	r3, sl
 8021cb8:	a814      	add	r0, sp, #80	; 0x50
 8021cba:	f7f6 f936 	bl	8017f2a <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>
 8021cbe:	4621      	mov	r1, r4
 8021cc0:	f8ad 005c 	strh.w	r0, [sp, #92]	; 0x5c
 8021cc4:	4653      	mov	r3, sl
 8021cc6:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8021cc8:	a814      	add	r0, sp, #80	; 0x50
 8021cca:	f7f6 f94b 	bl	8017f64 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>
 8021cce:	a918      	add	r1, sp, #96	; 0x60
 8021cd0:	f821 0d02 	strh.w	r0, [r1, #-2]!
 8021cd4:	a817      	add	r0, sp, #92	; 0x5c
 8021cd6:	f7f6 fa71 	bl	80181bc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>
 8021cda:	f1ba 0f00 	cmp.w	sl, #0
 8021cde:	f040 80f4 	bne.w	8021eca <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2ce>
 8021ce2:	f1bb 0f01 	cmp.w	fp, #1
 8021ce6:	f040 80f8 	bne.w	8021eda <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2de>
 8021cea:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8021cec:	2b00      	cmp	r3, #0
 8021cee:	f040 8145 	bne.w	8021f7c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x380>
 8021cf2:	b2ba      	uxth	r2, r7
 8021cf4:	b905      	cbnz	r5, 8021cf8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xfc>
 8021cf6:	b16e      	cbz	r6, 8021d14 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x118>
 8021cf8:	fb06 5302 	mla	r3, r6, r2, r5
 8021cfc:	9828      	ldr	r0, [sp, #160]	; 0xa0
 8021cfe:	fb08 f303 	mul.w	r3, r8, r3
 8021d02:	4631      	mov	r1, r6
 8021d04:	f003 0607 	and.w	r6, r3, #7
 8021d08:	eb00 03d3 	add.w	r3, r0, r3, lsr #3
 8021d0c:	9328      	str	r3, [sp, #160]	; 0xa0
 8021d0e:	eba9 0301 	sub.w	r3, r9, r1
 8021d12:	930a      	str	r3, [sp, #40]	; 0x28
 8021d14:	4651      	mov	r1, sl
 8021d16:	980e      	ldr	r0, [sp, #56]	; 0x38
 8021d18:	f7ff ff1c 	bl	8021b54 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>
 8021d1c:	4681      	mov	r9, r0
 8021d1e:	980e      	ldr	r0, [sp, #56]	; 0x38
 8021d20:	f7ff ff42 	bl	8021ba8 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>
 8021d24:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8021d26:	9909      	ldr	r1, [sp, #36]	; 0x24
 8021d28:	eba3 0a01 	sub.w	sl, r3, r1
 8021d2c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8021d2e:	459a      	cmp	sl, r3
 8021d30:	bfa8      	it	ge
 8021d32:	469a      	movge	sl, r3
 8021d34:	f1ba 0f00 	cmp.w	sl, #0
 8021d38:	4683      	mov	fp, r0
 8021d3a:	f340 811a 	ble.w	8021f72 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 8021d3e:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8021d40:	1b64      	subs	r4, r4, r5
 8021d42:	1b1c      	subs	r4, r3, r4
 8021d44:	42bc      	cmp	r4, r7
 8021d46:	bfd4      	ite	le
 8021d48:	ebc5 0504 	rsble	r5, r5, r4
 8021d4c:	ebc5 0507 	rsbgt	r5, r5, r7
 8021d50:	2d00      	cmp	r5, #0
 8021d52:	f340 810e 	ble.w	8021f72 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 8021d56:	1b52      	subs	r2, r2, r5
 8021d58:	fb08 f302 	mul.w	r3, r8, r2
 8021d5c:	930f      	str	r3, [sp, #60]	; 0x3c
 8021d5e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8021d60:	2b00      	cmp	r3, #0
 8021d62:	f040 8116 	bne.w	8021f92 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x396>
 8021d66:	4b8d      	ldr	r3, [pc, #564]	; (8021f9c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a0>)
 8021d68:	6818      	ldr	r0, [r3, #0]
 8021d6a:	6803      	ldr	r3, [r0, #0]
 8021d6c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8021d6e:	4798      	blx	r3
 8021d70:	2301      	movs	r3, #1
 8021d72:	fa03 f308 	lsl.w	r3, r3, r8
 8021d76:	4a8a      	ldr	r2, [pc, #552]	; (8021fa0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a4>)
 8021d78:	3b01      	subs	r3, #1
 8021d7a:	b2db      	uxtb	r3, r3
 8021d7c:	8811      	ldrh	r1, [r2, #0]
 8021d7e:	930e      	str	r3, [sp, #56]	; 0x38
 8021d80:	f9bd 205c 	ldrsh.w	r2, [sp, #92]	; 0x5c
 8021d84:	f9bd 305e 	ldrsh.w	r3, [sp, #94]	; 0x5e
 8021d88:	fb01 2303 	mla	r3, r1, r3, r2
 8021d8c:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8021d90:	930a      	str	r3, [sp, #40]	; 0x28
 8021d92:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8021d94:	f3c3 4307 	ubfx	r3, r3, #16, #8
 8021d98:	9313      	str	r3, [sp, #76]	; 0x4c
 8021d9a:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8021d9c:	0a19      	lsrs	r1, r3, #8
 8021d9e:	b2cb      	uxtb	r3, r1
 8021da0:	9312      	str	r3, [sp, #72]	; 0x48
 8021da2:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8021da4:	b2db      	uxtb	r3, r3
 8021da6:	9311      	str	r3, [sp, #68]	; 0x44
 8021da8:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8021daa:	095a      	lsrs	r2, r3, #5
 8021dac:	4b7d      	ldr	r3, [pc, #500]	; (8021fa4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a8>)
 8021dae:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8021db2:	400b      	ands	r3, r1
 8021db4:	4313      	orrs	r3, r2
 8021db6:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 8021db8:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8021dbc:	4313      	orrs	r3, r2
 8021dbe:	b29b      	uxth	r3, r3
 8021dc0:	9310      	str	r3, [sp, #64]	; 0x40
 8021dc2:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8021dc4:	781a      	ldrb	r2, [r3, #0]
 8021dc6:	ea4f 0349 	mov.w	r3, r9, lsl #1
 8021dca:	4132      	asrs	r2, r6
 8021dcc:	fb05 b919 	mls	r9, r5, r9, fp
 8021dd0:	fb03 fb05 	mul.w	fp, r3, r5
 8021dd4:	b2d2      	uxtb	r2, r2
 8021dd6:	930d      	str	r3, [sp, #52]	; 0x34
 8021dd8:	eb0b 0b49 	add.w	fp, fp, r9, lsl #1
 8021ddc:	f11a 3aff 	adds.w	sl, sl, #4294967295
 8021de0:	f0c0 80f5 	bcc.w	8021fce <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3d2>
 8021de4:	f8dd c028 	ldr.w	ip, [sp, #40]	; 0x28
 8021de8:	46ae      	mov	lr, r5
 8021dea:	f11e 3eff 	adds.w	lr, lr, #4294967295
 8021dee:	f0c0 80dd 	bcc.w	8021fac <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3b0>
 8021df2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8021df4:	4013      	ands	r3, r2
 8021df6:	d055      	beq.n	8021ea4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2a8>
 8021df8:	20ff      	movs	r0, #255	; 0xff
 8021dfa:	990e      	ldr	r1, [sp, #56]	; 0x38
 8021dfc:	fb90 f1f1 	sdiv	r1, r0, r1
 8021e00:	434b      	muls	r3, r1
 8021e02:	2bfe      	cmp	r3, #254	; 0xfe
 8021e04:	dd03      	ble.n	8021e0e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x212>
 8021e06:	990c      	ldr	r1, [sp, #48]	; 0x30
 8021e08:	4281      	cmp	r1, r0
 8021e0a:	f000 80cd 	beq.w	8021fa8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ac>
 8021e0e:	990c      	ldr	r1, [sp, #48]	; 0x30
 8021e10:	f8bc 4000 	ldrh.w	r4, [ip]
 8021e14:	fb11 f303 	smulbb	r3, r1, r3
 8021e18:	b29b      	uxth	r3, r3
 8021e1a:	1c59      	adds	r1, r3, #1
 8021e1c:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 8021e20:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8021e24:	b29f      	uxth	r7, r3
 8021e26:	43db      	mvns	r3, r3
 8021e28:	b2db      	uxtb	r3, r3
 8021e2a:	9309      	str	r3, [sp, #36]	; 0x24
 8021e2c:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8021e2e:	1220      	asrs	r0, r4, #8
 8021e30:	fb13 f907 	smulbb	r9, r3, r7
 8021e34:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8021e38:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8021e3a:	ea40 1050 	orr.w	r0, r0, r0, lsr #5
 8021e3e:	fb00 9003 	mla	r0, r0, r3, r9
 8021e42:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8021e44:	10e1      	asrs	r1, r4, #3
 8021e46:	fb13 f907 	smulbb	r9, r3, r7
 8021e4a:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8021e4e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8021e50:	ea41 1191 	orr.w	r1, r1, r1, lsr #6
 8021e54:	fb01 9103 	mla	r1, r1, r3, r9
 8021e58:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8021e5a:	00e4      	lsls	r4, r4, #3
 8021e5c:	fb13 f707 	smulbb	r7, r3, r7
 8021e60:	b2e4      	uxtb	r4, r4
 8021e62:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8021e64:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 8021e68:	fb04 7403 	mla	r4, r4, r3, r7
 8021e6c:	b280      	uxth	r0, r0
 8021e6e:	b2a4      	uxth	r4, r4
 8021e70:	1c43      	adds	r3, r0, #1
 8021e72:	f104 0901 	add.w	r9, r4, #1
 8021e76:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8021e7a:	eb09 2914 	add.w	r9, r9, r4, lsr #8
 8021e7e:	b289      	uxth	r1, r1
 8021e80:	f3c9 29c4 	ubfx	r9, r9, #11, #5
 8021e84:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 8021e88:	ea49 0000 	orr.w	r0, r9, r0
 8021e8c:	f101 0901 	add.w	r9, r1, #1
 8021e90:	eb09 2911 	add.w	r9, r9, r1, lsr #8
 8021e94:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8021e98:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8021e9c:	ea40 0009 	orr.w	r0, r0, r9
 8021ea0:	f8ac 0000 	strh.w	r0, [ip]
 8021ea4:	4446      	add	r6, r8
 8021ea6:	b2b6      	uxth	r6, r6
 8021ea8:	2e07      	cmp	r6, #7
 8021eaa:	bf81      	itttt	hi
 8021eac:	9b28      	ldrhi	r3, [sp, #160]	; 0xa0
 8021eae:	785a      	ldrbhi	r2, [r3, #1]
 8021eb0:	3301      	addhi	r3, #1
 8021eb2:	9328      	strhi	r3, [sp, #160]	; 0xa0
 8021eb4:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8021eb6:	bf9a      	itte	ls
 8021eb8:	fa42 f208 	asrls.w	r2, r2, r8
 8021ebc:	b2d2      	uxtbls	r2, r2
 8021ebe:	2600      	movhi	r6, #0
 8021ec0:	449c      	add	ip, r3
 8021ec2:	e792      	b.n	8021dea <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1ee>
 8021ec4:	441c      	add	r4, r3
 8021ec6:	b224      	sxth	r4, r4
 8021ec8:	e6d5      	b.n	8021c76 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7a>
 8021eca:	f1ba 0f01 	cmp.w	sl, #1
 8021ece:	f47f af0c 	bne.w	8021cea <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 8021ed2:	f1bb 0f01 	cmp.w	fp, #1
 8021ed6:	f47f af08 	bne.w	8021cea <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 8021eda:	f8df b0c0 	ldr.w	fp, [pc, #192]	; 8021f9c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a0>
 8021ede:	f8db 0000 	ldr.w	r0, [fp]
 8021ee2:	6803      	ldr	r3, [r0, #0]
 8021ee4:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8021ee6:	4798      	blx	r3
 8021ee8:	f410 7380 	ands.w	r3, r0, #256	; 0x100
 8021eec:	465a      	mov	r2, fp
 8021eee:	d006      	beq.n	8021efe <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x302>
 8021ef0:	f1b8 0f04 	cmp.w	r8, #4
 8021ef4:	d140      	bne.n	8021f78 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x37c>
 8021ef6:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8021ef8:	3300      	adds	r3, #0
 8021efa:	bf18      	it	ne
 8021efc:	2301      	movne	r3, #1
 8021efe:	0580      	lsls	r0, r0, #22
 8021f00:	d56e      	bpl.n	8021fe0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e4>
 8021f02:	f1b8 0f08 	cmp.w	r8, #8
 8021f06:	d16b      	bne.n	8021fe0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e4>
 8021f08:	2b00      	cmp	r3, #0
 8021f0a:	bf0c      	ite	eq
 8021f0c:	f44f 7100 	moveq.w	r1, #512	; 0x200
 8021f10:	f44f 7180 	movne.w	r1, #256	; 0x100
 8021f14:	2d00      	cmp	r5, #0
 8021f16:	f47f aee8 	bne.w	8021cea <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 8021f1a:	2e00      	cmp	r6, #0
 8021f1c:	f47f aee5 	bne.w	8021cea <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 8021f20:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8021f22:	19e3      	adds	r3, r4, r7
 8021f24:	4283      	cmp	r3, r0
 8021f26:	f73f aee0 	bgt.w	8021cea <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 8021f2a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8021f2c:	980d      	ldr	r0, [sp, #52]	; 0x34
 8021f2e:	444b      	add	r3, r9
 8021f30:	4283      	cmp	r3, r0
 8021f32:	f73f aeda 	bgt.w	8021cea <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 8021f36:	6810      	ldr	r0, [r2, #0]
 8021f38:	f8bd 305e 	ldrh.w	r3, [sp, #94]	; 0x5e
 8021f3c:	6804      	ldr	r4, [r0, #0]
 8021f3e:	f8bd 205c 	ldrh.w	r2, [sp, #92]	; 0x5c
 8021f42:	b2bf      	uxth	r7, r7
 8021f44:	f1b8 0f08 	cmp.w	r8, #8
 8021f48:	f04f 0500 	mov.w	r5, #0
 8021f4c:	bf18      	it	ne
 8021f4e:	3701      	addne	r7, #1
 8021f50:	e9cd 1505 	strd	r1, r5, [sp, #20]
 8021f54:	990c      	ldr	r1, [sp, #48]	; 0x30
 8021f56:	9104      	str	r1, [sp, #16]
 8021f58:	bf18      	it	ne
 8021f5a:	f027 0701 	bicne.w	r7, r7, #1
 8021f5e:	992a      	ldr	r1, [sp, #168]	; 0xa8
 8021f60:	bf18      	it	ne
 8021f62:	b2bf      	uxthne	r7, r7
 8021f64:	e9cd 7102 	strd	r7, r1, [sp, #8]
 8021f68:	e9cd 7900 	strd	r7, r9, [sp]
 8021f6c:	9928      	ldr	r1, [sp, #160]	; 0xa0
 8021f6e:	6d64      	ldr	r4, [r4, #84]	; 0x54
 8021f70:	47a0      	blx	r4
 8021f72:	b019      	add	sp, #100	; 0x64
 8021f74:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8021f78:	2300      	movs	r3, #0
 8021f7a:	e7c0      	b.n	8021efe <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x302>
 8021f7c:	2208      	movs	r2, #8
 8021f7e:	fb92 f3f8 	sdiv	r3, r2, r8
 8021f82:	1e5a      	subs	r2, r3, #1
 8021f84:	443a      	add	r2, r7
 8021f86:	fb92 f2f3 	sdiv	r2, r2, r3
 8021f8a:	fb12 f203 	smulbb	r2, r2, r3
 8021f8e:	b292      	uxth	r2, r2
 8021f90:	e6b0      	b.n	8021cf4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf8>
 8021f92:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8021f94:	e6ec      	b.n	8021d70 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x174>
 8021f96:	bf00      	nop
 8021f98:	20006c2c 	.word	0x20006c2c
 8021f9c:	20006c34 	.word	0x20006c34
 8021fa0:	20006c2e 	.word	0x20006c2e
 8021fa4:	00fff800 	.word	0x00fff800
 8021fa8:	9810      	ldr	r0, [sp, #64]	; 0x40
 8021faa:	e779      	b.n	8021ea0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2a4>
 8021fac:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8021fae:	b153      	cbz	r3, 8021fc6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ca>
 8021fb0:	441e      	add	r6, r3
 8021fb2:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8021fb4:	b2b6      	uxth	r6, r6
 8021fb6:	eb03 03d6 	add.w	r3, r3, r6, lsr #3
 8021fba:	f006 0607 	and.w	r6, r6, #7
 8021fbe:	781a      	ldrb	r2, [r3, #0]
 8021fc0:	9328      	str	r3, [sp, #160]	; 0xa0
 8021fc2:	4132      	asrs	r2, r6
 8021fc4:	b2d2      	uxtb	r2, r2
 8021fc6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8021fc8:	445b      	add	r3, fp
 8021fca:	930a      	str	r3, [sp, #40]	; 0x28
 8021fcc:	e706      	b.n	8021ddc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1e0>
 8021fce:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8021fd0:	2b00      	cmp	r3, #0
 8021fd2:	d1ce      	bne.n	8021f72 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 8021fd4:	4b05      	ldr	r3, [pc, #20]	; (8021fec <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f0>)
 8021fd6:	6818      	ldr	r0, [r3, #0]
 8021fd8:	6803      	ldr	r3, [r0, #0]
 8021fda:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8021fdc:	4798      	blx	r3
 8021fde:	e7c8      	b.n	8021f72 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 8021fe0:	2b00      	cmp	r3, #0
 8021fe2:	f43f ae82 	beq.w	8021cea <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 8021fe6:	f44f 7180 	mov.w	r1, #256	; 0x100
 8021fea:	e793      	b.n	8021f14 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x318>
 8021fec:	20006c34 	.word	0x20006c34

08021ff0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>:
 8021ff0:	b538      	push	{r3, r4, r5, lr}
 8021ff2:	4c15      	ldr	r4, [pc, #84]	; (8022048 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x58>)
 8021ff4:	7823      	ldrb	r3, [r4, #0]
 8021ff6:	f3bf 8f5b 	dmb	ish
 8021ffa:	07da      	lsls	r2, r3, #31
 8021ffc:	4605      	mov	r5, r0
 8021ffe:	d40b      	bmi.n	8022018 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 8022000:	4620      	mov	r0, r4
 8022002:	f008 f9ac 	bl	802a35e <__cxa_guard_acquire>
 8022006:	b138      	cbz	r0, 8022018 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 8022008:	4620      	mov	r0, r4
 802200a:	f008 f9b4 	bl	802a376 <__cxa_guard_release>
 802200e:	4a0f      	ldr	r2, [pc, #60]	; (802204c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 8022010:	490f      	ldr	r1, [pc, #60]	; (8022050 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x60>)
 8022012:	4810      	ldr	r0, [pc, #64]	; (8022054 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 8022014:	f008 f99c 	bl	802a350 <__aeabi_atexit>
 8022018:	4c0f      	ldr	r4, [pc, #60]	; (8022058 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x68>)
 802201a:	7823      	ldrb	r3, [r4, #0]
 802201c:	f3bf 8f5b 	dmb	ish
 8022020:	07db      	lsls	r3, r3, #31
 8022022:	d40b      	bmi.n	802203c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 8022024:	4620      	mov	r0, r4
 8022026:	f008 f99a 	bl	802a35e <__cxa_guard_acquire>
 802202a:	b138      	cbz	r0, 802203c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 802202c:	4620      	mov	r0, r4
 802202e:	f008 f9a2 	bl	802a376 <__cxa_guard_release>
 8022032:	4a06      	ldr	r2, [pc, #24]	; (802204c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 8022034:	4909      	ldr	r1, [pc, #36]	; (802205c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x6c>)
 8022036:	480a      	ldr	r0, [pc, #40]	; (8022060 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 8022038:	f008 f98a 	bl	802a350 <__aeabi_atexit>
 802203c:	4b05      	ldr	r3, [pc, #20]	; (8022054 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 802203e:	616b      	str	r3, [r5, #20]
 8022040:	4b07      	ldr	r3, [pc, #28]	; (8022060 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 8022042:	61ab      	str	r3, [r5, #24]
 8022044:	bd38      	pop	{r3, r4, r5, pc}
 8022046:	bf00      	nop
 8022048:	20006d14 	.word	0x20006d14
 802204c:	20000000 	.word	0x20000000
 8022050:	0801edfd 	.word	0x0801edfd
 8022054:	20000158 	.word	0x20000158
 8022058:	20006d18 	.word	0x20006d18
 802205c:	0801edfb 	.word	0x0801edfb
 8022060:	2000015c 	.word	0x2000015c

08022064 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>:
 8022064:	b538      	push	{r3, r4, r5, lr}
 8022066:	4c15      	ldr	r4, [pc, #84]	; (80220bc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x58>)
 8022068:	7823      	ldrb	r3, [r4, #0]
 802206a:	f3bf 8f5b 	dmb	ish
 802206e:	07da      	lsls	r2, r3, #31
 8022070:	4605      	mov	r5, r0
 8022072:	d40b      	bmi.n	802208c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 8022074:	4620      	mov	r0, r4
 8022076:	f008 f972 	bl	802a35e <__cxa_guard_acquire>
 802207a:	b138      	cbz	r0, 802208c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 802207c:	4620      	mov	r0, r4
 802207e:	f008 f97a 	bl	802a376 <__cxa_guard_release>
 8022082:	4a0f      	ldr	r2, [pc, #60]	; (80220c0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 8022084:	490f      	ldr	r1, [pc, #60]	; (80220c4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x60>)
 8022086:	4810      	ldr	r0, [pc, #64]	; (80220c8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 8022088:	f008 f962 	bl	802a350 <__aeabi_atexit>
 802208c:	4c0f      	ldr	r4, [pc, #60]	; (80220cc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x68>)
 802208e:	7823      	ldrb	r3, [r4, #0]
 8022090:	f3bf 8f5b 	dmb	ish
 8022094:	07db      	lsls	r3, r3, #31
 8022096:	d40b      	bmi.n	80220b0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 8022098:	4620      	mov	r0, r4
 802209a:	f008 f960 	bl	802a35e <__cxa_guard_acquire>
 802209e:	b138      	cbz	r0, 80220b0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 80220a0:	4620      	mov	r0, r4
 80220a2:	f008 f968 	bl	802a376 <__cxa_guard_release>
 80220a6:	4a06      	ldr	r2, [pc, #24]	; (80220c0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 80220a8:	4909      	ldr	r1, [pc, #36]	; (80220d0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x6c>)
 80220aa:	480a      	ldr	r0, [pc, #40]	; (80220d4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 80220ac:	f008 f950 	bl	802a350 <__aeabi_atexit>
 80220b0:	4b05      	ldr	r3, [pc, #20]	; (80220c8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 80220b2:	60eb      	str	r3, [r5, #12]
 80220b4:	4b07      	ldr	r3, [pc, #28]	; (80220d4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 80220b6:	612b      	str	r3, [r5, #16]
 80220b8:	bd38      	pop	{r3, r4, r5, pc}
 80220ba:	bf00      	nop
 80220bc:	20006cec 	.word	0x20006cec
 80220c0:	20000000 	.word	0x20000000
 80220c4:	0801ee01 	.word	0x0801ee01
 80220c8:	20000130 	.word	0x20000130
 80220cc:	20006cf0 	.word	0x20006cf0
 80220d0:	0801edff 	.word	0x0801edff
 80220d4:	20000134 	.word	0x20000134

080220d8 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>:
 80220d8:	b510      	push	{r4, lr}
 80220da:	4604      	mov	r4, r0
 80220dc:	f7ff ff88 	bl	8021ff0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>
 80220e0:	4620      	mov	r0, r4
 80220e2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80220e6:	f7ff bfbd 	b.w	8022064 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>
	...

080220ec <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>:
 80220ec:	b538      	push	{r3, r4, r5, lr}
 80220ee:	4c15      	ldr	r4, [pc, #84]	; (8022144 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x58>)
 80220f0:	7823      	ldrb	r3, [r4, #0]
 80220f2:	f3bf 8f5b 	dmb	ish
 80220f6:	07da      	lsls	r2, r3, #31
 80220f8:	4605      	mov	r5, r0
 80220fa:	d40b      	bmi.n	8022114 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 80220fc:	4620      	mov	r0, r4
 80220fe:	f008 f92e 	bl	802a35e <__cxa_guard_acquire>
 8022102:	b138      	cbz	r0, 8022114 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 8022104:	4620      	mov	r0, r4
 8022106:	f008 f936 	bl	802a376 <__cxa_guard_release>
 802210a:	4a0f      	ldr	r2, [pc, #60]	; (8022148 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 802210c:	490f      	ldr	r1, [pc, #60]	; (802214c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x60>)
 802210e:	4810      	ldr	r0, [pc, #64]	; (8022150 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 8022110:	f008 f91e 	bl	802a350 <__aeabi_atexit>
 8022114:	4c0f      	ldr	r4, [pc, #60]	; (8022154 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x68>)
 8022116:	7823      	ldrb	r3, [r4, #0]
 8022118:	f3bf 8f5b 	dmb	ish
 802211c:	07db      	lsls	r3, r3, #31
 802211e:	d40b      	bmi.n	8022138 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 8022120:	4620      	mov	r0, r4
 8022122:	f008 f91c 	bl	802a35e <__cxa_guard_acquire>
 8022126:	b138      	cbz	r0, 8022138 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 8022128:	4620      	mov	r0, r4
 802212a:	f008 f924 	bl	802a376 <__cxa_guard_release>
 802212e:	4a06      	ldr	r2, [pc, #24]	; (8022148 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 8022130:	4909      	ldr	r1, [pc, #36]	; (8022158 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x6c>)
 8022132:	480a      	ldr	r0, [pc, #40]	; (802215c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 8022134:	f008 f90c 	bl	802a350 <__aeabi_atexit>
 8022138:	4b05      	ldr	r3, [pc, #20]	; (8022150 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 802213a:	626b      	str	r3, [r5, #36]	; 0x24
 802213c:	4b07      	ldr	r3, [pc, #28]	; (802215c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 802213e:	62ab      	str	r3, [r5, #40]	; 0x28
 8022140:	bd38      	pop	{r3, r4, r5, pc}
 8022142:	bf00      	nop
 8022144:	20006d1c 	.word	0x20006d1c
 8022148:	20000000 	.word	0x20000000
 802214c:	0801edf5 	.word	0x0801edf5
 8022150:	20000160 	.word	0x20000160
 8022154:	20006d20 	.word	0x20006d20
 8022158:	0801edf3 	.word	0x0801edf3
 802215c:	20000164 	.word	0x20000164

08022160 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>:
 8022160:	b538      	push	{r3, r4, r5, lr}
 8022162:	4c15      	ldr	r4, [pc, #84]	; (80221b8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x58>)
 8022164:	7823      	ldrb	r3, [r4, #0]
 8022166:	f3bf 8f5b 	dmb	ish
 802216a:	07da      	lsls	r2, r3, #31
 802216c:	4605      	mov	r5, r0
 802216e:	d40b      	bmi.n	8022188 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 8022170:	4620      	mov	r0, r4
 8022172:	f008 f8f4 	bl	802a35e <__cxa_guard_acquire>
 8022176:	b138      	cbz	r0, 8022188 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 8022178:	4620      	mov	r0, r4
 802217a:	f008 f8fc 	bl	802a376 <__cxa_guard_release>
 802217e:	4a0f      	ldr	r2, [pc, #60]	; (80221bc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 8022180:	490f      	ldr	r1, [pc, #60]	; (80221c0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x60>)
 8022182:	4810      	ldr	r0, [pc, #64]	; (80221c4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 8022184:	f008 f8e4 	bl	802a350 <__aeabi_atexit>
 8022188:	4c0f      	ldr	r4, [pc, #60]	; (80221c8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x68>)
 802218a:	7823      	ldrb	r3, [r4, #0]
 802218c:	f3bf 8f5b 	dmb	ish
 8022190:	07db      	lsls	r3, r3, #31
 8022192:	d40b      	bmi.n	80221ac <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 8022194:	4620      	mov	r0, r4
 8022196:	f008 f8e2 	bl	802a35e <__cxa_guard_acquire>
 802219a:	b138      	cbz	r0, 80221ac <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 802219c:	4620      	mov	r0, r4
 802219e:	f008 f8ea 	bl	802a376 <__cxa_guard_release>
 80221a2:	4a06      	ldr	r2, [pc, #24]	; (80221bc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 80221a4:	4909      	ldr	r1, [pc, #36]	; (80221cc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x6c>)
 80221a6:	480a      	ldr	r0, [pc, #40]	; (80221d0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 80221a8:	f008 f8d2 	bl	802a350 <__aeabi_atexit>
 80221ac:	4b05      	ldr	r3, [pc, #20]	; (80221c4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 80221ae:	61eb      	str	r3, [r5, #28]
 80221b0:	4b07      	ldr	r3, [pc, #28]	; (80221d0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 80221b2:	622b      	str	r3, [r5, #32]
 80221b4:	bd38      	pop	{r3, r4, r5, pc}
 80221b6:	bf00      	nop
 80221b8:	20006cf4 	.word	0x20006cf4
 80221bc:	20000000 	.word	0x20000000
 80221c0:	0801edf9 	.word	0x0801edf9
 80221c4:	20000138 	.word	0x20000138
 80221c8:	20006cf8 	.word	0x20006cf8
 80221cc:	0801edf7 	.word	0x0801edf7
 80221d0:	2000013c 	.word	0x2000013c

080221d4 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>:
 80221d4:	b510      	push	{r4, lr}
 80221d6:	4604      	mov	r4, r0
 80221d8:	f7ff ff88 	bl	80220ec <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>
 80221dc:	4620      	mov	r0, r4
 80221de:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80221e2:	f7ff bfbd 	b.w	8022160 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>
	...

080221e8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>:
 80221e8:	b538      	push	{r3, r4, r5, lr}
 80221ea:	4c15      	ldr	r4, [pc, #84]	; (8022240 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x58>)
 80221ec:	7823      	ldrb	r3, [r4, #0]
 80221ee:	f3bf 8f5b 	dmb	ish
 80221f2:	07da      	lsls	r2, r3, #31
 80221f4:	4605      	mov	r5, r0
 80221f6:	d40b      	bmi.n	8022210 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 80221f8:	4620      	mov	r0, r4
 80221fa:	f008 f8b0 	bl	802a35e <__cxa_guard_acquire>
 80221fe:	b138      	cbz	r0, 8022210 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 8022200:	4620      	mov	r0, r4
 8022202:	f008 f8b8 	bl	802a376 <__cxa_guard_release>
 8022206:	4a0f      	ldr	r2, [pc, #60]	; (8022244 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 8022208:	490f      	ldr	r1, [pc, #60]	; (8022248 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x60>)
 802220a:	4810      	ldr	r0, [pc, #64]	; (802224c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 802220c:	f008 f8a0 	bl	802a350 <__aeabi_atexit>
 8022210:	4c0f      	ldr	r4, [pc, #60]	; (8022250 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x68>)
 8022212:	7823      	ldrb	r3, [r4, #0]
 8022214:	f3bf 8f5b 	dmb	ish
 8022218:	07db      	lsls	r3, r3, #31
 802221a:	d40b      	bmi.n	8022234 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 802221c:	4620      	mov	r0, r4
 802221e:	f008 f89e 	bl	802a35e <__cxa_guard_acquire>
 8022222:	b138      	cbz	r0, 8022234 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 8022224:	4620      	mov	r0, r4
 8022226:	f008 f8a6 	bl	802a376 <__cxa_guard_release>
 802222a:	4a06      	ldr	r2, [pc, #24]	; (8022244 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 802222c:	4909      	ldr	r1, [pc, #36]	; (8022254 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x6c>)
 802222e:	480a      	ldr	r0, [pc, #40]	; (8022258 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 8022230:	f008 f88e 	bl	802a350 <__aeabi_atexit>
 8022234:	4b05      	ldr	r3, [pc, #20]	; (802224c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 8022236:	636b      	str	r3, [r5, #52]	; 0x34
 8022238:	4b07      	ldr	r3, [pc, #28]	; (8022258 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 802223a:	63ab      	str	r3, [r5, #56]	; 0x38
 802223c:	bd38      	pop	{r3, r4, r5, pc}
 802223e:	bf00      	nop
 8022240:	20006d2c 	.word	0x20006d2c
 8022244:	20000000 	.word	0x20000000
 8022248:	0801eded 	.word	0x0801eded
 802224c:	20000170 	.word	0x20000170
 8022250:	20006d30 	.word	0x20006d30
 8022254:	0801edeb 	.word	0x0801edeb
 8022258:	20000174 	.word	0x20000174

0802225c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>:
 802225c:	b538      	push	{r3, r4, r5, lr}
 802225e:	4c15      	ldr	r4, [pc, #84]	; (80222b4 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x58>)
 8022260:	7823      	ldrb	r3, [r4, #0]
 8022262:	f3bf 8f5b 	dmb	ish
 8022266:	07da      	lsls	r2, r3, #31
 8022268:	4605      	mov	r5, r0
 802226a:	d40b      	bmi.n	8022284 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 802226c:	4620      	mov	r0, r4
 802226e:	f008 f876 	bl	802a35e <__cxa_guard_acquire>
 8022272:	b138      	cbz	r0, 8022284 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 8022274:	4620      	mov	r0, r4
 8022276:	f008 f87e 	bl	802a376 <__cxa_guard_release>
 802227a:	4a0f      	ldr	r2, [pc, #60]	; (80222b8 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 802227c:	490f      	ldr	r1, [pc, #60]	; (80222bc <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x60>)
 802227e:	4810      	ldr	r0, [pc, #64]	; (80222c0 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 8022280:	f008 f866 	bl	802a350 <__aeabi_atexit>
 8022284:	4c0f      	ldr	r4, [pc, #60]	; (80222c4 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x68>)
 8022286:	7823      	ldrb	r3, [r4, #0]
 8022288:	f3bf 8f5b 	dmb	ish
 802228c:	07db      	lsls	r3, r3, #31
 802228e:	d40b      	bmi.n	80222a8 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 8022290:	4620      	mov	r0, r4
 8022292:	f008 f864 	bl	802a35e <__cxa_guard_acquire>
 8022296:	b138      	cbz	r0, 80222a8 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 8022298:	4620      	mov	r0, r4
 802229a:	f008 f86c 	bl	802a376 <__cxa_guard_release>
 802229e:	4a06      	ldr	r2, [pc, #24]	; (80222b8 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 80222a0:	4909      	ldr	r1, [pc, #36]	; (80222c8 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x6c>)
 80222a2:	480a      	ldr	r0, [pc, #40]	; (80222cc <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 80222a4:	f008 f854 	bl	802a350 <__aeabi_atexit>
 80222a8:	4b05      	ldr	r3, [pc, #20]	; (80222c0 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 80222aa:	62eb      	str	r3, [r5, #44]	; 0x2c
 80222ac:	4b07      	ldr	r3, [pc, #28]	; (80222cc <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 80222ae:	632b      	str	r3, [r5, #48]	; 0x30
 80222b0:	bd38      	pop	{r3, r4, r5, pc}
 80222b2:	bf00      	nop
 80222b4:	20006cfc 	.word	0x20006cfc
 80222b8:	20000000 	.word	0x20000000
 80222bc:	0801edf1 	.word	0x0801edf1
 80222c0:	20000140 	.word	0x20000140
 80222c4:	20006d00 	.word	0x20006d00
 80222c8:	0801edef 	.word	0x0801edef
 80222cc:	20000144 	.word	0x20000144

080222d0 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>:
 80222d0:	b510      	push	{r4, lr}
 80222d2:	4604      	mov	r4, r0
 80222d4:	f7ff ff88 	bl	80221e8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>
 80222d8:	4620      	mov	r0, r4
 80222da:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80222de:	f7ff bfbd 	b.w	802225c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>
	...

080222e4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>:
 80222e4:	b538      	push	{r3, r4, r5, lr}
 80222e6:	4c15      	ldr	r4, [pc, #84]	; (802233c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x58>)
 80222e8:	7823      	ldrb	r3, [r4, #0]
 80222ea:	f3bf 8f5b 	dmb	ish
 80222ee:	07da      	lsls	r2, r3, #31
 80222f0:	4605      	mov	r5, r0
 80222f2:	d40b      	bmi.n	802230c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 80222f4:	4620      	mov	r0, r4
 80222f6:	f008 f832 	bl	802a35e <__cxa_guard_acquire>
 80222fa:	b138      	cbz	r0, 802230c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 80222fc:	4620      	mov	r0, r4
 80222fe:	f008 f83a 	bl	802a376 <__cxa_guard_release>
 8022302:	4a0f      	ldr	r2, [pc, #60]	; (8022340 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 8022304:	490f      	ldr	r1, [pc, #60]	; (8022344 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x60>)
 8022306:	4810      	ldr	r0, [pc, #64]	; (8022348 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 8022308:	f008 f822 	bl	802a350 <__aeabi_atexit>
 802230c:	4c0f      	ldr	r4, [pc, #60]	; (802234c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x68>)
 802230e:	7823      	ldrb	r3, [r4, #0]
 8022310:	f3bf 8f5b 	dmb	ish
 8022314:	07db      	lsls	r3, r3, #31
 8022316:	d40b      	bmi.n	8022330 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 8022318:	4620      	mov	r0, r4
 802231a:	f008 f820 	bl	802a35e <__cxa_guard_acquire>
 802231e:	b138      	cbz	r0, 8022330 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 8022320:	4620      	mov	r0, r4
 8022322:	f008 f828 	bl	802a376 <__cxa_guard_release>
 8022326:	4a06      	ldr	r2, [pc, #24]	; (8022340 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 8022328:	4909      	ldr	r1, [pc, #36]	; (8022350 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x6c>)
 802232a:	480a      	ldr	r0, [pc, #40]	; (8022354 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 802232c:	f008 f810 	bl	802a350 <__aeabi_atexit>
 8022330:	4b05      	ldr	r3, [pc, #20]	; (8022348 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 8022332:	656b      	str	r3, [r5, #84]	; 0x54
 8022334:	4b07      	ldr	r3, [pc, #28]	; (8022354 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 8022336:	65ab      	str	r3, [r5, #88]	; 0x58
 8022338:	bd38      	pop	{r3, r4, r5, pc}
 802233a:	bf00      	nop
 802233c:	20006d34 	.word	0x20006d34
 8022340:	20000000 	.word	0x20000000
 8022344:	0801eddd 	.word	0x0801eddd
 8022348:	20000178 	.word	0x20000178
 802234c:	20006d38 	.word	0x20006d38
 8022350:	0801eddb 	.word	0x0801eddb
 8022354:	2000017c 	.word	0x2000017c

08022358 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>:
 8022358:	b538      	push	{r3, r4, r5, lr}
 802235a:	4c15      	ldr	r4, [pc, #84]	; (80223b0 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x58>)
 802235c:	7823      	ldrb	r3, [r4, #0]
 802235e:	f3bf 8f5b 	dmb	ish
 8022362:	07da      	lsls	r2, r3, #31
 8022364:	4605      	mov	r5, r0
 8022366:	d40b      	bmi.n	8022380 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 8022368:	4620      	mov	r0, r4
 802236a:	f007 fff8 	bl	802a35e <__cxa_guard_acquire>
 802236e:	b138      	cbz	r0, 8022380 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 8022370:	4620      	mov	r0, r4
 8022372:	f008 f800 	bl	802a376 <__cxa_guard_release>
 8022376:	4a0f      	ldr	r2, [pc, #60]	; (80223b4 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 8022378:	490f      	ldr	r1, [pc, #60]	; (80223b8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x60>)
 802237a:	4810      	ldr	r0, [pc, #64]	; (80223bc <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 802237c:	f007 ffe8 	bl	802a350 <__aeabi_atexit>
 8022380:	4c0f      	ldr	r4, [pc, #60]	; (80223c0 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x68>)
 8022382:	7823      	ldrb	r3, [r4, #0]
 8022384:	f3bf 8f5b 	dmb	ish
 8022388:	07db      	lsls	r3, r3, #31
 802238a:	d40b      	bmi.n	80223a4 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 802238c:	4620      	mov	r0, r4
 802238e:	f007 ffe6 	bl	802a35e <__cxa_guard_acquire>
 8022392:	b138      	cbz	r0, 80223a4 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 8022394:	4620      	mov	r0, r4
 8022396:	f007 ffee 	bl	802a376 <__cxa_guard_release>
 802239a:	4a06      	ldr	r2, [pc, #24]	; (80223b4 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 802239c:	4909      	ldr	r1, [pc, #36]	; (80223c4 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x6c>)
 802239e:	480a      	ldr	r0, [pc, #40]	; (80223c8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 80223a0:	f007 ffd6 	bl	802a350 <__aeabi_atexit>
 80223a4:	4b05      	ldr	r3, [pc, #20]	; (80223bc <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 80223a6:	64eb      	str	r3, [r5, #76]	; 0x4c
 80223a8:	4b07      	ldr	r3, [pc, #28]	; (80223c8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 80223aa:	652b      	str	r3, [r5, #80]	; 0x50
 80223ac:	bd38      	pop	{r3, r4, r5, pc}
 80223ae:	bf00      	nop
 80223b0:	20006d3c 	.word	0x20006d3c
 80223b4:	20000000 	.word	0x20000000
 80223b8:	0801ede1 	.word	0x0801ede1
 80223bc:	20000180 	.word	0x20000180
 80223c0:	20006d40 	.word	0x20006d40
 80223c4:	0801eddf 	.word	0x0801eddf
 80223c8:	20000184 	.word	0x20000184

080223cc <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>:
 80223cc:	b538      	push	{r3, r4, r5, lr}
 80223ce:	4c15      	ldr	r4, [pc, #84]	; (8022424 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x58>)
 80223d0:	7823      	ldrb	r3, [r4, #0]
 80223d2:	f3bf 8f5b 	dmb	ish
 80223d6:	07da      	lsls	r2, r3, #31
 80223d8:	4605      	mov	r5, r0
 80223da:	d40b      	bmi.n	80223f4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 80223dc:	4620      	mov	r0, r4
 80223de:	f007 ffbe 	bl	802a35e <__cxa_guard_acquire>
 80223e2:	b138      	cbz	r0, 80223f4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 80223e4:	4620      	mov	r0, r4
 80223e6:	f007 ffc6 	bl	802a376 <__cxa_guard_release>
 80223ea:	4a0f      	ldr	r2, [pc, #60]	; (8022428 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 80223ec:	490f      	ldr	r1, [pc, #60]	; (802242c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x60>)
 80223ee:	4810      	ldr	r0, [pc, #64]	; (8022430 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 80223f0:	f007 ffae 	bl	802a350 <__aeabi_atexit>
 80223f4:	4c0f      	ldr	r4, [pc, #60]	; (8022434 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x68>)
 80223f6:	7823      	ldrb	r3, [r4, #0]
 80223f8:	f3bf 8f5b 	dmb	ish
 80223fc:	07db      	lsls	r3, r3, #31
 80223fe:	d40b      	bmi.n	8022418 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 8022400:	4620      	mov	r0, r4
 8022402:	f007 ffac 	bl	802a35e <__cxa_guard_acquire>
 8022406:	b138      	cbz	r0, 8022418 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 8022408:	4620      	mov	r0, r4
 802240a:	f007 ffb4 	bl	802a376 <__cxa_guard_release>
 802240e:	4a06      	ldr	r2, [pc, #24]	; (8022428 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 8022410:	4909      	ldr	r1, [pc, #36]	; (8022438 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x6c>)
 8022412:	480a      	ldr	r0, [pc, #40]	; (802243c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 8022414:	f007 ff9c 	bl	802a350 <__aeabi_atexit>
 8022418:	4b05      	ldr	r3, [pc, #20]	; (8022430 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 802241a:	646b      	str	r3, [r5, #68]	; 0x44
 802241c:	4b07      	ldr	r3, [pc, #28]	; (802243c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 802241e:	64ab      	str	r3, [r5, #72]	; 0x48
 8022420:	bd38      	pop	{r3, r4, r5, pc}
 8022422:	bf00      	nop
 8022424:	20006d04 	.word	0x20006d04
 8022428:	20000000 	.word	0x20000000
 802242c:	0801ede5 	.word	0x0801ede5
 8022430:	20000148 	.word	0x20000148
 8022434:	20006d08 	.word	0x20006d08
 8022438:	0801ede3 	.word	0x0801ede3
 802243c:	2000014c 	.word	0x2000014c

08022440 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>:
 8022440:	b538      	push	{r3, r4, r5, lr}
 8022442:	4c15      	ldr	r4, [pc, #84]	; (8022498 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x58>)
 8022444:	7823      	ldrb	r3, [r4, #0]
 8022446:	f3bf 8f5b 	dmb	ish
 802244a:	07da      	lsls	r2, r3, #31
 802244c:	4605      	mov	r5, r0
 802244e:	d40b      	bmi.n	8022468 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 8022450:	4620      	mov	r0, r4
 8022452:	f007 ff84 	bl	802a35e <__cxa_guard_acquire>
 8022456:	b138      	cbz	r0, 8022468 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 8022458:	4620      	mov	r0, r4
 802245a:	f007 ff8c 	bl	802a376 <__cxa_guard_release>
 802245e:	4a0f      	ldr	r2, [pc, #60]	; (802249c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 8022460:	490f      	ldr	r1, [pc, #60]	; (80224a0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x60>)
 8022462:	4810      	ldr	r0, [pc, #64]	; (80224a4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 8022464:	f007 ff74 	bl	802a350 <__aeabi_atexit>
 8022468:	4c0f      	ldr	r4, [pc, #60]	; (80224a8 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x68>)
 802246a:	7823      	ldrb	r3, [r4, #0]
 802246c:	f3bf 8f5b 	dmb	ish
 8022470:	07db      	lsls	r3, r3, #31
 8022472:	d40b      	bmi.n	802248c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 8022474:	4620      	mov	r0, r4
 8022476:	f007 ff72 	bl	802a35e <__cxa_guard_acquire>
 802247a:	b138      	cbz	r0, 802248c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 802247c:	4620      	mov	r0, r4
 802247e:	f007 ff7a 	bl	802a376 <__cxa_guard_release>
 8022482:	4a06      	ldr	r2, [pc, #24]	; (802249c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 8022484:	4909      	ldr	r1, [pc, #36]	; (80224ac <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x6c>)
 8022486:	480a      	ldr	r0, [pc, #40]	; (80224b0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 8022488:	f007 ff62 	bl	802a350 <__aeabi_atexit>
 802248c:	4b05      	ldr	r3, [pc, #20]	; (80224a4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 802248e:	63eb      	str	r3, [r5, #60]	; 0x3c
 8022490:	4b07      	ldr	r3, [pc, #28]	; (80224b0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 8022492:	642b      	str	r3, [r5, #64]	; 0x40
 8022494:	bd38      	pop	{r3, r4, r5, pc}
 8022496:	bf00      	nop
 8022498:	20006d24 	.word	0x20006d24
 802249c:	20000000 	.word	0x20000000
 80224a0:	0801ede9 	.word	0x0801ede9
 80224a4:	20000168 	.word	0x20000168
 80224a8:	20006d28 	.word	0x20006d28
 80224ac:	0801ede7 	.word	0x0801ede7
 80224b0:	2000016c 	.word	0x2000016c

080224b4 <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>:
 80224b4:	b510      	push	{r4, lr}
 80224b6:	4604      	mov	r4, r0
 80224b8:	f7ff ff14 	bl	80222e4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>
 80224bc:	4620      	mov	r0, r4
 80224be:	f7ff ff85 	bl	80223cc <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>
 80224c2:	4620      	mov	r0, r4
 80224c4:	f7ff ff48 	bl	8022358 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>
 80224c8:	4620      	mov	r0, r4
 80224ca:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80224ce:	f7ff bfb7 	b.w	8022440 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>
	...

080224d4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>:
 80224d4:	b538      	push	{r3, r4, r5, lr}
 80224d6:	4c15      	ldr	r4, [pc, #84]	; (802252c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x58>)
 80224d8:	7823      	ldrb	r3, [r4, #0]
 80224da:	f3bf 8f5b 	dmb	ish
 80224de:	07da      	lsls	r2, r3, #31
 80224e0:	4605      	mov	r5, r0
 80224e2:	d40b      	bmi.n	80224fc <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 80224e4:	4620      	mov	r0, r4
 80224e6:	f007 ff3a 	bl	802a35e <__cxa_guard_acquire>
 80224ea:	b138      	cbz	r0, 80224fc <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 80224ec:	4620      	mov	r0, r4
 80224ee:	f007 ff42 	bl	802a376 <__cxa_guard_release>
 80224f2:	4a0f      	ldr	r2, [pc, #60]	; (8022530 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 80224f4:	490f      	ldr	r1, [pc, #60]	; (8022534 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x60>)
 80224f6:	4810      	ldr	r0, [pc, #64]	; (8022538 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 80224f8:	f007 ff2a 	bl	802a350 <__aeabi_atexit>
 80224fc:	4c0f      	ldr	r4, [pc, #60]	; (802253c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x68>)
 80224fe:	7823      	ldrb	r3, [r4, #0]
 8022500:	f3bf 8f5b 	dmb	ish
 8022504:	07db      	lsls	r3, r3, #31
 8022506:	d40b      	bmi.n	8022520 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 8022508:	4620      	mov	r0, r4
 802250a:	f007 ff28 	bl	802a35e <__cxa_guard_acquire>
 802250e:	b138      	cbz	r0, 8022520 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 8022510:	4620      	mov	r0, r4
 8022512:	f007 ff30 	bl	802a376 <__cxa_guard_release>
 8022516:	4a06      	ldr	r2, [pc, #24]	; (8022530 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 8022518:	4909      	ldr	r1, [pc, #36]	; (8022540 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x6c>)
 802251a:	480a      	ldr	r0, [pc, #40]	; (8022544 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 802251c:	f007 ff18 	bl	802a350 <__aeabi_atexit>
 8022520:	4b05      	ldr	r3, [pc, #20]	; (8022538 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 8022522:	666b      	str	r3, [r5, #100]	; 0x64
 8022524:	4b07      	ldr	r3, [pc, #28]	; (8022544 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 8022526:	66ab      	str	r3, [r5, #104]	; 0x68
 8022528:	bd38      	pop	{r3, r4, r5, pc}
 802252a:	bf00      	nop
 802252c:	20006d0c 	.word	0x20006d0c
 8022530:	20000000 	.word	0x20000000
 8022534:	0801edd5 	.word	0x0801edd5
 8022538:	20000150 	.word	0x20000150
 802253c:	20006d10 	.word	0x20006d10
 8022540:	0801edd3 	.word	0x0801edd3
 8022544:	20000154 	.word	0x20000154

08022548 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>:
 8022548:	b538      	push	{r3, r4, r5, lr}
 802254a:	4c15      	ldr	r4, [pc, #84]	; (80225a0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x58>)
 802254c:	7823      	ldrb	r3, [r4, #0]
 802254e:	f3bf 8f5b 	dmb	ish
 8022552:	07da      	lsls	r2, r3, #31
 8022554:	4605      	mov	r5, r0
 8022556:	d40b      	bmi.n	8022570 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 8022558:	4620      	mov	r0, r4
 802255a:	f007 ff00 	bl	802a35e <__cxa_guard_acquire>
 802255e:	b138      	cbz	r0, 8022570 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 8022560:	4620      	mov	r0, r4
 8022562:	f007 ff08 	bl	802a376 <__cxa_guard_release>
 8022566:	4a0f      	ldr	r2, [pc, #60]	; (80225a4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 8022568:	490f      	ldr	r1, [pc, #60]	; (80225a8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x60>)
 802256a:	4810      	ldr	r0, [pc, #64]	; (80225ac <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 802256c:	f007 fef0 	bl	802a350 <__aeabi_atexit>
 8022570:	4c0f      	ldr	r4, [pc, #60]	; (80225b0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x68>)
 8022572:	7823      	ldrb	r3, [r4, #0]
 8022574:	f3bf 8f5b 	dmb	ish
 8022578:	07db      	lsls	r3, r3, #31
 802257a:	d40b      	bmi.n	8022594 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 802257c:	4620      	mov	r0, r4
 802257e:	f007 feee 	bl	802a35e <__cxa_guard_acquire>
 8022582:	b138      	cbz	r0, 8022594 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 8022584:	4620      	mov	r0, r4
 8022586:	f007 fef6 	bl	802a376 <__cxa_guard_release>
 802258a:	4a06      	ldr	r2, [pc, #24]	; (80225a4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 802258c:	4909      	ldr	r1, [pc, #36]	; (80225b4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x6c>)
 802258e:	480a      	ldr	r0, [pc, #40]	; (80225b8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 8022590:	f007 fede 	bl	802a350 <__aeabi_atexit>
 8022594:	4b05      	ldr	r3, [pc, #20]	; (80225ac <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 8022596:	65eb      	str	r3, [r5, #92]	; 0x5c
 8022598:	4b07      	ldr	r3, [pc, #28]	; (80225b8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 802259a:	662b      	str	r3, [r5, #96]	; 0x60
 802259c:	bd38      	pop	{r3, r4, r5, pc}
 802259e:	bf00      	nop
 80225a0:	20006ce4 	.word	0x20006ce4
 80225a4:	20000000 	.word	0x20000000
 80225a8:	0801edd9 	.word	0x0801edd9
 80225ac:	20000128 	.word	0x20000128
 80225b0:	20006ce8 	.word	0x20006ce8
 80225b4:	0801edd7 	.word	0x0801edd7
 80225b8:	2000012c 	.word	0x2000012c

080225bc <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>:
 80225bc:	b510      	push	{r4, lr}
 80225be:	4604      	mov	r4, r0
 80225c0:	f7ff ff88 	bl	80224d4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>
 80225c4:	4620      	mov	r0, r4
 80225c6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80225ca:	f7ff bfbd 	b.w	8022548 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>
	...

080225d0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>:
 80225d0:	b538      	push	{r3, r4, r5, lr}
 80225d2:	4c15      	ldr	r4, [pc, #84]	; (8022628 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x58>)
 80225d4:	7823      	ldrb	r3, [r4, #0]
 80225d6:	f3bf 8f5b 	dmb	ish
 80225da:	07da      	lsls	r2, r3, #31
 80225dc:	4605      	mov	r5, r0
 80225de:	d40b      	bmi.n	80225f8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 80225e0:	4620      	mov	r0, r4
 80225e2:	f007 febc 	bl	802a35e <__cxa_guard_acquire>
 80225e6:	b138      	cbz	r0, 80225f8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 80225e8:	4620      	mov	r0, r4
 80225ea:	f007 fec4 	bl	802a376 <__cxa_guard_release>
 80225ee:	4a0f      	ldr	r2, [pc, #60]	; (802262c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 80225f0:	490f      	ldr	r1, [pc, #60]	; (8022630 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x60>)
 80225f2:	4810      	ldr	r0, [pc, #64]	; (8022634 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 80225f4:	f007 feac 	bl	802a350 <__aeabi_atexit>
 80225f8:	4c0f      	ldr	r4, [pc, #60]	; (8022638 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x68>)
 80225fa:	7823      	ldrb	r3, [r4, #0]
 80225fc:	f3bf 8f5b 	dmb	ish
 8022600:	07db      	lsls	r3, r3, #31
 8022602:	d40b      	bmi.n	802261c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 8022604:	4620      	mov	r0, r4
 8022606:	f007 feaa 	bl	802a35e <__cxa_guard_acquire>
 802260a:	b138      	cbz	r0, 802261c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 802260c:	4620      	mov	r0, r4
 802260e:	f007 feb2 	bl	802a376 <__cxa_guard_release>
 8022612:	4a06      	ldr	r2, [pc, #24]	; (802262c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 8022614:	4909      	ldr	r1, [pc, #36]	; (802263c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x6c>)
 8022616:	480a      	ldr	r0, [pc, #40]	; (8022640 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 8022618:	f007 fe9a 	bl	802a350 <__aeabi_atexit>
 802261c:	4b05      	ldr	r3, [pc, #20]	; (8022634 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 802261e:	676b      	str	r3, [r5, #116]	; 0x74
 8022620:	4b07      	ldr	r3, [pc, #28]	; (8022640 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 8022622:	67ab      	str	r3, [r5, #120]	; 0x78
 8022624:	bd38      	pop	{r3, r4, r5, pc}
 8022626:	bf00      	nop
 8022628:	20006cdc 	.word	0x20006cdc
 802262c:	20000000 	.word	0x20000000
 8022630:	0801edcd 	.word	0x0801edcd
 8022634:	20000120 	.word	0x20000120
 8022638:	20006ce0 	.word	0x20006ce0
 802263c:	0801edcb 	.word	0x0801edcb
 8022640:	20000124 	.word	0x20000124

08022644 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>:
 8022644:	b538      	push	{r3, r4, r5, lr}
 8022646:	4c15      	ldr	r4, [pc, #84]	; (802269c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x58>)
 8022648:	7823      	ldrb	r3, [r4, #0]
 802264a:	f3bf 8f5b 	dmb	ish
 802264e:	07da      	lsls	r2, r3, #31
 8022650:	4605      	mov	r5, r0
 8022652:	d40b      	bmi.n	802266c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 8022654:	4620      	mov	r0, r4
 8022656:	f007 fe82 	bl	802a35e <__cxa_guard_acquire>
 802265a:	b138      	cbz	r0, 802266c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 802265c:	4620      	mov	r0, r4
 802265e:	f007 fe8a 	bl	802a376 <__cxa_guard_release>
 8022662:	4a0f      	ldr	r2, [pc, #60]	; (80226a0 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 8022664:	490f      	ldr	r1, [pc, #60]	; (80226a4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x60>)
 8022666:	4810      	ldr	r0, [pc, #64]	; (80226a8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 8022668:	f007 fe72 	bl	802a350 <__aeabi_atexit>
 802266c:	4c0f      	ldr	r4, [pc, #60]	; (80226ac <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x68>)
 802266e:	7823      	ldrb	r3, [r4, #0]
 8022670:	f3bf 8f5b 	dmb	ish
 8022674:	07db      	lsls	r3, r3, #31
 8022676:	d40b      	bmi.n	8022690 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 8022678:	4620      	mov	r0, r4
 802267a:	f007 fe70 	bl	802a35e <__cxa_guard_acquire>
 802267e:	b138      	cbz	r0, 8022690 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 8022680:	4620      	mov	r0, r4
 8022682:	f007 fe78 	bl	802a376 <__cxa_guard_release>
 8022686:	4a06      	ldr	r2, [pc, #24]	; (80226a0 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 8022688:	4909      	ldr	r1, [pc, #36]	; (80226b0 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x6c>)
 802268a:	480a      	ldr	r0, [pc, #40]	; (80226b4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 802268c:	f007 fe60 	bl	802a350 <__aeabi_atexit>
 8022690:	4b05      	ldr	r3, [pc, #20]	; (80226a8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 8022692:	66eb      	str	r3, [r5, #108]	; 0x6c
 8022694:	4b07      	ldr	r3, [pc, #28]	; (80226b4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 8022696:	672b      	str	r3, [r5, #112]	; 0x70
 8022698:	bd38      	pop	{r3, r4, r5, pc}
 802269a:	bf00      	nop
 802269c:	20006cd4 	.word	0x20006cd4
 80226a0:	20000000 	.word	0x20000000
 80226a4:	0801edd1 	.word	0x0801edd1
 80226a8:	20000118 	.word	0x20000118
 80226ac:	20006cd8 	.word	0x20006cd8
 80226b0:	0801edcf 	.word	0x0801edcf
 80226b4:	2000011c 	.word	0x2000011c

080226b8 <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>:
 80226b8:	b510      	push	{r4, lr}
 80226ba:	4604      	mov	r4, r0
 80226bc:	f7ff ff88 	bl	80225d0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>
 80226c0:	4620      	mov	r0, r4
 80226c2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80226c6:	f7ff bfbd 	b.w	8022644 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>

080226ca <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>:
 80226ca:	b510      	push	{r4, lr}
 80226cc:	4604      	mov	r4, r0
 80226ce:	f7ff fff3 	bl	80226b8 <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>
 80226d2:	4620      	mov	r0, r4
 80226d4:	f7ff ff72 	bl	80225bc <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>
 80226d8:	4620      	mov	r0, r4
 80226da:	f7ff fdf9 	bl	80222d0 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>
 80226de:	4620      	mov	r0, r4
 80226e0:	f7ff fcfa 	bl	80220d8 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>
 80226e4:	4620      	mov	r0, r4
 80226e6:	f7ff fd75 	bl	80221d4 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>
 80226ea:	4620      	mov	r0, r4
 80226ec:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80226f0:	f7ff bee0 	b.w	80224b4 <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>

080226f4 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev>:
 80226f4:	b538      	push	{r3, r4, r5, lr}
 80226f6:	4c0b      	ldr	r4, [pc, #44]	; (8022724 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x30>)
 80226f8:	7823      	ldrb	r3, [r4, #0]
 80226fa:	f3bf 8f5b 	dmb	ish
 80226fe:	07db      	lsls	r3, r3, #31
 8022700:	4605      	mov	r5, r0
 8022702:	d40b      	bmi.n	802271c <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x28>
 8022704:	4620      	mov	r0, r4
 8022706:	f007 fe2a 	bl	802a35e <__cxa_guard_acquire>
 802270a:	b138      	cbz	r0, 802271c <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x28>
 802270c:	4620      	mov	r0, r4
 802270e:	f007 fe32 	bl	802a376 <__cxa_guard_release>
 8022712:	4a05      	ldr	r2, [pc, #20]	; (8022728 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x34>)
 8022714:	4905      	ldr	r1, [pc, #20]	; (802272c <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x38>)
 8022716:	4806      	ldr	r0, [pc, #24]	; (8022730 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x3c>)
 8022718:	f007 fe1a 	bl	802a350 <__aeabi_atexit>
 802271c:	4b04      	ldr	r3, [pc, #16]	; (8022730 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x3c>)
 802271e:	67eb      	str	r3, [r5, #124]	; 0x7c
 8022720:	bd38      	pop	{r3, r4, r5, pc}
 8022722:	bf00      	nop
 8022724:	20006cc8 	.word	0x20006cc8
 8022728:	20000000 	.word	0x20000000
 802272c:	0801edc9 	.word	0x0801edc9
 8022730:	20000110 	.word	0x20000110

08022734 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv>:
 8022734:	b538      	push	{r3, r4, r5, lr}
 8022736:	4c0b      	ldr	r4, [pc, #44]	; (8022764 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x30>)
 8022738:	7823      	ldrb	r3, [r4, #0]
 802273a:	f3bf 8f5b 	dmb	ish
 802273e:	07db      	lsls	r3, r3, #31
 8022740:	4605      	mov	r5, r0
 8022742:	d40b      	bmi.n	802275c <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x28>
 8022744:	4620      	mov	r0, r4
 8022746:	f007 fe0a 	bl	802a35e <__cxa_guard_acquire>
 802274a:	b138      	cbz	r0, 802275c <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x28>
 802274c:	4620      	mov	r0, r4
 802274e:	f007 fe12 	bl	802a376 <__cxa_guard_release>
 8022752:	4a05      	ldr	r2, [pc, #20]	; (8022768 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x34>)
 8022754:	4905      	ldr	r1, [pc, #20]	; (802276c <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x38>)
 8022756:	4806      	ldr	r0, [pc, #24]	; (8022770 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x3c>)
 8022758:	f007 fdfa 	bl	802a350 <__aeabi_atexit>
 802275c:	4b04      	ldr	r3, [pc, #16]	; (8022770 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x3c>)
 802275e:	f8c5 3080 	str.w	r3, [r5, #128]	; 0x80
 8022762:	bd38      	pop	{r3, r4, r5, pc}
 8022764:	20006ccc 	.word	0x20006ccc
 8022768:	20000000 	.word	0x20000000
 802276c:	0801edc7 	.word	0x0801edc7
 8022770:	20000114 	.word	0x20000114

08022774 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev>:
 8022774:	b570      	push	{r4, r5, r6, lr}
 8022776:	4d0d      	ldr	r5, [pc, #52]	; (80227ac <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x38>)
 8022778:	4c0d      	ldr	r4, [pc, #52]	; (80227b0 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x3c>)
 802277a:	782b      	ldrb	r3, [r5, #0]
 802277c:	f3bf 8f5b 	dmb	ish
 8022780:	f013 0f01 	tst.w	r3, #1
 8022784:	4606      	mov	r6, r0
 8022786:	d10d      	bne.n	80227a4 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x30>
 8022788:	4628      	mov	r0, r5
 802278a:	f007 fde8 	bl	802a35e <__cxa_guard_acquire>
 802278e:	b148      	cbz	r0, 80227a4 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x30>
 8022790:	4b08      	ldr	r3, [pc, #32]	; (80227b4 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x40>)
 8022792:	6023      	str	r3, [r4, #0]
 8022794:	4628      	mov	r0, r5
 8022796:	f007 fdee 	bl	802a376 <__cxa_guard_release>
 802279a:	4a07      	ldr	r2, [pc, #28]	; (80227b8 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x44>)
 802279c:	4907      	ldr	r1, [pc, #28]	; (80227bc <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x48>)
 802279e:	4620      	mov	r0, r4
 80227a0:	f007 fdd6 	bl	802a350 <__aeabi_atexit>
 80227a4:	f8c6 4084 	str.w	r4, [r6, #132]	; 0x84
 80227a8:	bd70      	pop	{r4, r5, r6, pc}
 80227aa:	bf00      	nop
 80227ac:	20006cd0 	.word	0x20006cd0
 80227b0:	20006d44 	.word	0x20006d44
 80227b4:	0802ff00 	.word	0x0802ff00
 80227b8:	20000000 	.word	0x20000000
 80227bc:	0801edc5 	.word	0x0801edc5

080227c0 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_AllEv>:
 80227c0:	b510      	push	{r4, lr}
 80227c2:	4604      	mov	r4, r0
 80227c4:	f7ff ff96 	bl	80226f4 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev>
 80227c8:	4620      	mov	r0, r4
 80227ca:	f7ff ffb3 	bl	8022734 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv>
 80227ce:	4620      	mov	r0, r4
 80227d0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80227d4:	f7ff bfce 	b.w	8022774 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev>

080227d8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>:
 80227d8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80227dc:	e9dd 450b 	ldrd	r4, r5, [sp, #44]	; 0x2c
 80227e0:	f9bd e024 	ldrsh.w	lr, [sp, #36]	; 0x24
 80227e4:	f9bd b028 	ldrsh.w	fp, [sp, #40]	; 0x28
 80227e8:	f89d 9034 	ldrb.w	r9, [sp, #52]	; 0x34
 80227ec:	f89d 7038 	ldrb.w	r7, [sp, #56]	; 0x38
 80227f0:	f89d 603c 	ldrb.w	r6, [sp, #60]	; 0x3c
 80227f4:	8808      	ldrh	r0, [r1, #0]
 80227f6:	fb05 4c0e 	mla	ip, r5, lr, r4
 80227fa:	2d00      	cmp	r5, #0
 80227fc:	eb02 0a0c 	add.w	sl, r2, ip
 8022800:	f2c0 80b0 	blt.w	8022964 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
 8022804:	45ab      	cmp	fp, r5
 8022806:	f340 80ad 	ble.w	8022964 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
 802280a:	2c00      	cmp	r4, #0
 802280c:	f2c0 80a8 	blt.w	8022960 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
 8022810:	45a6      	cmp	lr, r4
 8022812:	f340 80a5 	ble.w	8022960 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
 8022816:	f812 200c 	ldrb.w	r2, [r2, ip]
 802281a:	f833 8012 	ldrh.w	r8, [r3, r2, lsl #1]
 802281e:	1c62      	adds	r2, r4, #1
 8022820:	f100 80a3 	bmi.w	802296a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 8022824:	4596      	cmp	lr, r2
 8022826:	f340 80a0 	ble.w	802296a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 802282a:	f1b9 0f00 	cmp.w	r9, #0
 802282e:	f000 809c 	beq.w	802296a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 8022832:	f89a 2001 	ldrb.w	r2, [sl, #1]
 8022836:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
 802283a:	3501      	adds	r5, #1
 802283c:	f100 8099 	bmi.w	8022972 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 8022840:	45ab      	cmp	fp, r5
 8022842:	f340 8096 	ble.w	8022972 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 8022846:	2f00      	cmp	r7, #0
 8022848:	f000 8093 	beq.w	8022972 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 802284c:	2c00      	cmp	r4, #0
 802284e:	f2c0 808e 	blt.w	802296e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
 8022852:	45a6      	cmp	lr, r4
 8022854:	f340 808b 	ble.w	802296e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
 8022858:	f81a 200e 	ldrb.w	r2, [sl, lr]
 802285c:	f833 5012 	ldrh.w	r5, [r3, r2, lsl #1]
 8022860:	3401      	adds	r4, #1
 8022862:	f100 8089 	bmi.w	8022978 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 8022866:	45a6      	cmp	lr, r4
 8022868:	f340 8086 	ble.w	8022978 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 802286c:	f1b9 0f00 	cmp.w	r9, #0
 8022870:	f000 8082 	beq.w	8022978 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 8022874:	44d6      	add	lr, sl
 8022876:	f89e 2001 	ldrb.w	r2, [lr, #1]
 802287a:	f833 3012 	ldrh.w	r3, [r3, r2, lsl #1]
 802287e:	ea4f 4408 	mov.w	r4, r8, lsl #16
 8022882:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8022886:	f428 68fc 	bic.w	r8, r8, #2016	; 0x7e0
 802288a:	fb19 fe07 	smulbb	lr, r9, r7
 802288e:	ea44 0808 	orr.w	r8, r4, r8
 8022892:	ea4f 440c 	mov.w	r4, ip, lsl #16
 8022896:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
 802289a:	f1c7 0210 	rsb	r2, r7, #16
 802289e:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 80228a2:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 80228a6:	ea44 0c0c 	orr.w	ip, r4, ip
 80228aa:	eba2 0209 	sub.w	r2, r2, r9
 80228ae:	ebce 0449 	rsb	r4, lr, r9, lsl #1
 80228b2:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
 80228b6:	fb04 f40c 	mul.w	r4, r4, ip
 80228ba:	fb02 4808 	mla	r8, r2, r8, r4
 80228be:	041a      	lsls	r2, r3, #16
 80228c0:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 80228c4:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 80228c8:	4313      	orrs	r3, r2
 80228ca:	042a      	lsls	r2, r5, #16
 80228cc:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 80228d0:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 80228d4:	fb0e 8303 	mla	r3, lr, r3, r8
 80228d8:	432a      	orrs	r2, r5
 80228da:	ebce 0747 	rsb	r7, lr, r7, lsl #1
 80228de:	fb07 3202 	mla	r2, r7, r2, r3
 80228e2:	0d53      	lsrs	r3, r2, #21
 80228e4:	0952      	lsrs	r2, r2, #5
 80228e6:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80228ea:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80228ee:	431a      	orrs	r2, r3
 80228f0:	b293      	uxth	r3, r2
 80228f2:	b2b4      	uxth	r4, r6
 80228f4:	1202      	asrs	r2, r0, #8
 80228f6:	43f6      	mvns	r6, r6
 80228f8:	b2f6      	uxtb	r6, r6
 80228fa:	121d      	asrs	r5, r3, #8
 80228fc:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8022900:	fb12 f206 	smulbb	r2, r2, r6
 8022904:	10c7      	asrs	r7, r0, #3
 8022906:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 802290a:	00c0      	lsls	r0, r0, #3
 802290c:	fb05 2504 	mla	r5, r5, r4, r2
 8022910:	b2c0      	uxtb	r0, r0
 8022912:	10da      	asrs	r2, r3, #3
 8022914:	00db      	lsls	r3, r3, #3
 8022916:	b2db      	uxtb	r3, r3
 8022918:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 802291c:	fb10 f006 	smulbb	r0, r0, r6
 8022920:	b2ad      	uxth	r5, r5
 8022922:	fb03 0004 	mla	r0, r3, r4, r0
 8022926:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 802292a:	fb17 f706 	smulbb	r7, r7, r6
 802292e:	b280      	uxth	r0, r0
 8022930:	1c6b      	adds	r3, r5, #1
 8022932:	fb02 7204 	mla	r2, r2, r4, r7
 8022936:	b292      	uxth	r2, r2
 8022938:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 802293c:	1c43      	adds	r3, r0, #1
 802293e:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8022942:	1c50      	adds	r0, r2, #1
 8022944:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 8022948:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 802294c:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8022950:	0952      	lsrs	r2, r2, #5
 8022952:	432b      	orrs	r3, r5
 8022954:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8022958:	4313      	orrs	r3, r2
 802295a:	800b      	strh	r3, [r1, #0]
 802295c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8022960:	4680      	mov	r8, r0
 8022962:	e75c      	b.n	802281e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x46>
 8022964:	4684      	mov	ip, r0
 8022966:	4680      	mov	r8, r0
 8022968:	e767      	b.n	802283a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
 802296a:	4684      	mov	ip, r0
 802296c:	e765      	b.n	802283a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
 802296e:	4605      	mov	r5, r0
 8022970:	e776      	b.n	8022860 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x88>
 8022972:	4603      	mov	r3, r0
 8022974:	4605      	mov	r5, r0
 8022976:	e782      	b.n	802287e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>
 8022978:	4603      	mov	r3, r0
 802297a:	e780      	b.n	802287e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>

0802297c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 802297c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8022980:	b099      	sub	sp, #100	; 0x64
 8022982:	e9dd a523 	ldrd	sl, r5, [sp, #140]	; 0x8c
 8022986:	9215      	str	r2, [sp, #84]	; 0x54
 8022988:	9309      	str	r3, [sp, #36]	; 0x24
 802298a:	9a27      	ldr	r2, [sp, #156]	; 0x9c
 802298c:	f89d 30ac 	ldrb.w	r3, [sp, #172]	; 0xac
 8022990:	930d      	str	r3, [sp, #52]	; 0x34
 8022992:	910c      	str	r1, [sp, #48]	; 0x30
 8022994:	e9dd 1328 	ldrd	r1, r3, [sp, #160]	; 0xa0
 8022998:	9016      	str	r0, [sp, #88]	; 0x58
 802299a:	6850      	ldr	r0, [r2, #4]
 802299c:	6812      	ldr	r2, [r2, #0]
 802299e:	fb00 1303 	mla	r3, r0, r3, r1
 80229a2:	eb02 0843 	add.w	r8, r2, r3, lsl #1
 80229a6:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80229a8:	681b      	ldr	r3, [r3, #0]
 80229aa:	930b      	str	r3, [sp, #44]	; 0x2c
 80229ac:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80229ae:	685e      	ldr	r6, [r3, #4]
 80229b0:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80229b2:	43db      	mvns	r3, r3
 80229b4:	b2db      	uxtb	r3, r3
 80229b6:	3604      	adds	r6, #4
 80229b8:	930a      	str	r3, [sp, #40]	; 0x28
 80229ba:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80229bc:	2b00      	cmp	r3, #0
 80229be:	dc03      	bgt.n	80229c8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 80229c0:	9b15      	ldr	r3, [sp, #84]	; 0x54
 80229c2:	2b00      	cmp	r3, #0
 80229c4:	f340 8225 	ble.w	8022e12 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
 80229c8:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80229ca:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80229ce:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80229d2:	1e48      	subs	r0, r1, #1
 80229d4:	1e57      	subs	r7, r2, #1
 80229d6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80229d8:	2b00      	cmp	r3, #0
 80229da:	f340 80e3 	ble.w	8022ba4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 80229de:	ea5f 4c2a 	movs.w	ip, sl, asr #16
 80229e2:	ea4f 4325 	mov.w	r3, r5, asr #16
 80229e6:	d406      	bmi.n	80229f6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 80229e8:	4584      	cmp	ip, r0
 80229ea:	da04      	bge.n	80229f6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 80229ec:	2b00      	cmp	r3, #0
 80229ee:	db02      	blt.n	80229f6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 80229f0:	42bb      	cmp	r3, r7
 80229f2:	f2c0 80d8 	blt.w	8022ba6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 80229f6:	f11c 0c01 	adds.w	ip, ip, #1
 80229fa:	f100 80c9 	bmi.w	8022b90 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 80229fe:	4561      	cmp	r1, ip
 8022a00:	f2c0 80c6 	blt.w	8022b90 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8022a04:	3301      	adds	r3, #1
 8022a06:	f100 80c3 	bmi.w	8022b90 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8022a0a:	429a      	cmp	r2, r3
 8022a0c:	f2c0 80c0 	blt.w	8022b90 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8022a10:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 8022a14:	4647      	mov	r7, r8
 8022a16:	f1bb 0f00 	cmp.w	fp, #0
 8022a1a:	f340 80e3 	ble.w	8022be4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x268>
 8022a1e:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 8022a20:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8022a22:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 8022a26:	689b      	ldr	r3, [r3, #8]
 8022a28:	ea5f 422a 	movs.w	r2, sl, asr #16
 8022a2c:	ea4f 4c25 	mov.w	ip, r5, asr #16
 8022a30:	f3ca 3003 	ubfx	r0, sl, #12, #4
 8022a34:	f3c5 3103 	ubfx	r1, r5, #12, #4
 8022a38:	f100 8121 	bmi.w	8022c7e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 8022a3c:	f103 39ff 	add.w	r9, r3, #4294967295
 8022a40:	454a      	cmp	r2, r9
 8022a42:	f280 811c 	bge.w	8022c7e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 8022a46:	f1bc 0f00 	cmp.w	ip, #0
 8022a4a:	f2c0 8118 	blt.w	8022c7e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 8022a4e:	f10e 39ff 	add.w	r9, lr, #4294967295
 8022a52:	45cc      	cmp	ip, r9
 8022a54:	f280 8113 	bge.w	8022c7e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 8022a58:	b21b      	sxth	r3, r3
 8022a5a:	fb0c 2203 	mla	r2, ip, r3, r2
 8022a5e:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8022a60:	eb04 0902 	add.w	r9, r4, r2
 8022a64:	5ca2      	ldrb	r2, [r4, r2]
 8022a66:	f836 e012 	ldrh.w	lr, [r6, r2, lsl #1]
 8022a6a:	2800      	cmp	r0, #0
 8022a6c:	f000 80fe 	beq.w	8022c6c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 8022a70:	f899 2001 	ldrb.w	r2, [r9, #1]
 8022a74:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 8022a78:	9211      	str	r2, [sp, #68]	; 0x44
 8022a7a:	b151      	cbz	r1, 8022a92 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 8022a7c:	eb09 0203 	add.w	r2, r9, r3
 8022a80:	f819 3003 	ldrb.w	r3, [r9, r3]
 8022a84:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8022a88:	930f      	str	r3, [sp, #60]	; 0x3c
 8022a8a:	7853      	ldrb	r3, [r2, #1]
 8022a8c:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8022a90:	9312      	str	r3, [sp, #72]	; 0x48
 8022a92:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8022a94:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8022a96:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8022a9a:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8022a9e:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8022aa2:	ea4c 0c03 	orr.w	ip, ip, r3
 8022aa6:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8022aa8:	041b      	lsls	r3, r3, #16
 8022aaa:	fb10 f201 	smulbb	r2, r0, r1
 8022aae:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
 8022ab2:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8022ab6:	10d2      	asrs	r2, r2, #3
 8022ab8:	4323      	orrs	r3, r4
 8022aba:	ebc2 0940 	rsb	r9, r2, r0, lsl #1
 8022abe:	4353      	muls	r3, r2
 8022ac0:	fb09 330c 	mla	r3, r9, ip, r3
 8022ac4:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 8022ac8:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8022acc:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8022ad0:	ea4c 0e0e 	orr.w	lr, ip, lr
 8022ad4:	f1c1 0c10 	rsb	ip, r1, #16
 8022ad8:	ebac 0c00 	sub.w	ip, ip, r0
 8022adc:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 8022ae0:	fb0c 3c0e 	mla	ip, ip, lr, r3
 8022ae4:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8022ae6:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8022ae8:	0418      	lsls	r0, r3, #16
 8022aea:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8022aee:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8022af2:	4318      	orrs	r0, r3
 8022af4:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 8022af8:	fb02 c200 	mla	r2, r2, r0, ip
 8022afc:	0d53      	lsrs	r3, r2, #21
 8022afe:	0952      	lsrs	r2, r2, #5
 8022b00:	8838      	ldrh	r0, [r7, #0]
 8022b02:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8022b06:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8022b0a:	431a      	orrs	r2, r3
 8022b0c:	b292      	uxth	r2, r2
 8022b0e:	1201      	asrs	r1, r0, #8
 8022b10:	f8bd 3034 	ldrh.w	r3, [sp, #52]	; 0x34
 8022b14:	ea4f 2c22 	mov.w	ip, r2, asr #8
 8022b18:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8022b1c:	fb11 f104 	smulbb	r1, r1, r4
 8022b20:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 8022b24:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8022b28:	00c0      	lsls	r0, r0, #3
 8022b2a:	fb0c 1c03 	mla	ip, ip, r3, r1
 8022b2e:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 8022b32:	10d1      	asrs	r1, r2, #3
 8022b34:	b2c0      	uxtb	r0, r0
 8022b36:	00d2      	lsls	r2, r2, #3
 8022b38:	b2d2      	uxtb	r2, r2
 8022b3a:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8022b3e:	fb1e fe04 	smulbb	lr, lr, r4
 8022b42:	fb10 f004 	smulbb	r0, r0, r4
 8022b46:	fa1f fc8c 	uxth.w	ip, ip
 8022b4a:	fb01 e103 	mla	r1, r1, r3, lr
 8022b4e:	fb02 0303 	mla	r3, r2, r3, r0
 8022b52:	b29a      	uxth	r2, r3
 8022b54:	f10c 0301 	add.w	r3, ip, #1
 8022b58:	b289      	uxth	r1, r1
 8022b5a:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 8022b5e:	1c53      	adds	r3, r2, #1
 8022b60:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8022b64:	1c4a      	adds	r2, r1, #1
 8022b66:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8022b6a:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8022b6e:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8022b72:	0949      	lsrs	r1, r1, #5
 8022b74:	ea43 030c 	orr.w	r3, r3, ip
 8022b78:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8022b7c:	430b      	orrs	r3, r1
 8022b7e:	803b      	strh	r3, [r7, #0]
 8022b80:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8022b82:	449a      	add	sl, r3
 8022b84:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8022b86:	3702      	adds	r7, #2
 8022b88:	441d      	add	r5, r3
 8022b8a:	f10b 3bff 	add.w	fp, fp, #4294967295
 8022b8e:	e742      	b.n	8022a16 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 8022b90:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8022b92:	449a      	add	sl, r3
 8022b94:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8022b96:	441d      	add	r5, r3
 8022b98:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8022b9a:	3b01      	subs	r3, #1
 8022b9c:	9309      	str	r3, [sp, #36]	; 0x24
 8022b9e:	f108 0802 	add.w	r8, r8, #2
 8022ba2:	e718      	b.n	80229d6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 8022ba4:	d023      	beq.n	8022bee <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x272>
 8022ba6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8022ba8:	9825      	ldr	r0, [sp, #148]	; 0x94
 8022baa:	3b01      	subs	r3, #1
 8022bac:	fb00 a003 	mla	r0, r0, r3, sl
 8022bb0:	1400      	asrs	r0, r0, #16
 8022bb2:	f53f af2d 	bmi.w	8022a10 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8022bb6:	3901      	subs	r1, #1
 8022bb8:	4288      	cmp	r0, r1
 8022bba:	f6bf af29 	bge.w	8022a10 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8022bbe:	9926      	ldr	r1, [sp, #152]	; 0x98
 8022bc0:	fb01 5303 	mla	r3, r1, r3, r5
 8022bc4:	141b      	asrs	r3, r3, #16
 8022bc6:	f53f af23 	bmi.w	8022a10 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8022bca:	3a01      	subs	r2, #1
 8022bcc:	4293      	cmp	r3, r2
 8022bce:	f6bf af1f 	bge.w	8022a10 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8022bd2:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
 8022bd6:	f8bd 9034 	ldrh.w	r9, [sp, #52]	; 0x34
 8022bda:	f8cd 8038 	str.w	r8, [sp, #56]	; 0x38
 8022bde:	f1be 0f00 	cmp.w	lr, #0
 8022be2:	dc6c      	bgt.n	8022cbe <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 8022be4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8022be6:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8022bea:	eb08 0844 	add.w	r8, r8, r4, lsl #1
 8022bee:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8022bf0:	2b00      	cmp	r3, #0
 8022bf2:	f340 810e 	ble.w	8022e12 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
 8022bf6:	ee30 0a04 	vadd.f32	s0, s0, s8
 8022bfa:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8022bfe:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8022c02:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8022c04:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8022c08:	ee31 1a05 	vadd.f32	s2, s2, s10
 8022c0c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8022c10:	eef0 6a62 	vmov.f32	s13, s5
 8022c14:	ee61 7a27 	vmul.f32	s15, s2, s15
 8022c18:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8022c1c:	ee77 2a62 	vsub.f32	s5, s14, s5
 8022c20:	ee16 aa90 	vmov	sl, s13
 8022c24:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8022c28:	eef0 6a43 	vmov.f32	s13, s6
 8022c2c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8022c30:	ee12 2a90 	vmov	r2, s5
 8022c34:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8022c38:	fb92 f3f3 	sdiv	r3, r2, r3
 8022c3c:	ee13 2a10 	vmov	r2, s6
 8022c40:	9325      	str	r3, [sp, #148]	; 0x94
 8022c42:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8022c44:	fb92 f3f3 	sdiv	r3, r2, r3
 8022c48:	9326      	str	r3, [sp, #152]	; 0x98
 8022c4a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8022c4c:	9a15      	ldr	r2, [sp, #84]	; 0x54
 8022c4e:	3b01      	subs	r3, #1
 8022c50:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8022c54:	930c      	str	r3, [sp, #48]	; 0x30
 8022c56:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8022c58:	bf08      	it	eq
 8022c5a:	4613      	moveq	r3, r2
 8022c5c:	ee16 5a90 	vmov	r5, s13
 8022c60:	9309      	str	r3, [sp, #36]	; 0x24
 8022c62:	eeb0 3a67 	vmov.f32	s6, s15
 8022c66:	eef0 2a47 	vmov.f32	s5, s14
 8022c6a:	e6a6      	b.n	80229ba <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8022c6c:	2900      	cmp	r1, #0
 8022c6e:	f43f af10 	beq.w	8022a92 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 8022c72:	f819 3003 	ldrb.w	r3, [r9, r3]
 8022c76:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8022c7a:	930f      	str	r3, [sp, #60]	; 0x3c
 8022c7c:	e709      	b.n	8022a92 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 8022c7e:	f112 0901 	adds.w	r9, r2, #1
 8022c82:	f53f af7d 	bmi.w	8022b80 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8022c86:	454b      	cmp	r3, r9
 8022c88:	f6ff af7a 	blt.w	8022b80 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8022c8c:	f11c 0901 	adds.w	r9, ip, #1
 8022c90:	f53f af76 	bmi.w	8022b80 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8022c94:	45ce      	cmp	lr, r9
 8022c96:	f6ff af73 	blt.w	8022b80 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8022c9a:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8022c9c:	9202      	str	r2, [sp, #8]
 8022c9e:	b21b      	sxth	r3, r3
 8022ca0:	fa0f f28e 	sxth.w	r2, lr
 8022ca4:	e9cd 1405 	strd	r1, r4, [sp, #20]
 8022ca8:	e9cd c003 	strd	ip, r0, [sp, #12]
 8022cac:	9201      	str	r2, [sp, #4]
 8022cae:	9300      	str	r3, [sp, #0]
 8022cb0:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8022cb2:	9816      	ldr	r0, [sp, #88]	; 0x58
 8022cb4:	4633      	mov	r3, r6
 8022cb6:	4639      	mov	r1, r7
 8022cb8:	f7ff fd8e 	bl	80227d8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>
 8022cbc:	e760      	b.n	8022b80 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8022cbe:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8022cc0:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8022cc2:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 8022cc6:	ea4f 422a 	mov.w	r2, sl, asr #16
 8022cca:	1429      	asrs	r1, r5, #16
 8022ccc:	fb03 2101 	mla	r1, r3, r1, r2
 8022cd0:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8022cd2:	440a      	add	r2, r1
 8022cd4:	5c61      	ldrb	r1, [r4, r1]
 8022cd6:	f3ca 3c03 	ubfx	ip, sl, #12, #4
 8022cda:	f3c5 3003 	ubfx	r0, r5, #12, #4
 8022cde:	f836 1011 	ldrh.w	r1, [r6, r1, lsl #1]
 8022ce2:	f1bc 0f00 	cmp.w	ip, #0
 8022ce6:	f000 808c 	beq.w	8022e02 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x486>
 8022cea:	7857      	ldrb	r7, [r2, #1]
 8022cec:	f836 4017 	ldrh.w	r4, [r6, r7, lsl #1]
 8022cf0:	9413      	str	r4, [sp, #76]	; 0x4c
 8022cf2:	b140      	cbz	r0, 8022d06 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 8022cf4:	18d7      	adds	r7, r2, r3
 8022cf6:	5cd3      	ldrb	r3, [r2, r3]
 8022cf8:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8022cfc:	9310      	str	r3, [sp, #64]	; 0x40
 8022cfe:	787b      	ldrb	r3, [r7, #1]
 8022d00:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8022d04:	9314      	str	r3, [sp, #80]	; 0x50
 8022d06:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8022d08:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8022d0a:	fb1c f200 	smulbb	r2, ip, r0
 8022d0e:	041f      	lsls	r7, r3, #16
 8022d10:	10d2      	asrs	r2, r2, #3
 8022d12:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8022d16:	f007 67fc 	and.w	r7, r7, #132120576	; 0x7e00000
 8022d1a:	431f      	orrs	r7, r3
 8022d1c:	ebc2 034c 	rsb	r3, r2, ip, lsl #1
 8022d20:	9317      	str	r3, [sp, #92]	; 0x5c
 8022d22:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8022d24:	041b      	lsls	r3, r3, #16
 8022d26:	f424 6bfc 	bic.w	fp, r4, #2016	; 0x7e0
 8022d2a:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8022d2e:	ea43 030b 	orr.w	r3, r3, fp
 8022d32:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 8022d34:	4353      	muls	r3, r2
 8022d36:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8022d3a:	fb04 3707 	mla	r7, r4, r7, r3
 8022d3e:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8022d42:	f00b 63fc 	and.w	r3, fp, #132120576	; 0x7e00000
 8022d46:	ea43 0b01 	orr.w	fp, r3, r1
 8022d4a:	f1c0 0110 	rsb	r1, r0, #16
 8022d4e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8022d50:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8022d52:	eba1 0c0c 	sub.w	ip, r1, ip
 8022d56:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 8022d5a:	fb0c 770b 	mla	r7, ip, fp, r7
 8022d5e:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8022d62:	f423 6bfc 	bic.w	fp, r3, #2016	; 0x7e0
 8022d66:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8022d6a:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 8022d6e:	ea4c 0c0b 	orr.w	ip, ip, fp
 8022d72:	fb02 770c 	mla	r7, r2, ip, r7
 8022d76:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8022d78:	0d79      	lsrs	r1, r7, #21
 8022d7a:	097f      	lsrs	r7, r7, #5
 8022d7c:	8812      	ldrh	r2, [r2, #0]
 8022d7e:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8022d82:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8022d86:	430f      	orrs	r7, r1
 8022d88:	b2bb      	uxth	r3, r7
 8022d8a:	1211      	asrs	r1, r2, #8
 8022d8c:	1218      	asrs	r0, r3, #8
 8022d8e:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8022d92:	fb11 f104 	smulbb	r1, r1, r4
 8022d96:	10d7      	asrs	r7, r2, #3
 8022d98:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8022d9c:	00d2      	lsls	r2, r2, #3
 8022d9e:	fb00 1009 	mla	r0, r0, r9, r1
 8022da2:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8022da6:	10d9      	asrs	r1, r3, #3
 8022da8:	b2d2      	uxtb	r2, r2
 8022daa:	00db      	lsls	r3, r3, #3
 8022dac:	fb17 f704 	smulbb	r7, r7, r4
 8022db0:	fb12 f204 	smulbb	r2, r2, r4
 8022db4:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8022db8:	b2db      	uxtb	r3, r3
 8022dba:	b280      	uxth	r0, r0
 8022dbc:	fb01 7109 	mla	r1, r1, r9, r7
 8022dc0:	fb03 2309 	mla	r3, r3, r9, r2
 8022dc4:	b29b      	uxth	r3, r3
 8022dc6:	b289      	uxth	r1, r1
 8022dc8:	1c42      	adds	r2, r0, #1
 8022dca:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8022dce:	1c4f      	adds	r7, r1, #1
 8022dd0:	1c5a      	adds	r2, r3, #1
 8022dd2:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8022dd6:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 8022dda:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 8022dde:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8022de2:	0949      	lsrs	r1, r1, #5
 8022de4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8022de6:	4310      	orrs	r0, r2
 8022de8:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8022dec:	4308      	orrs	r0, r1
 8022dee:	f823 0b02 	strh.w	r0, [r3], #2
 8022df2:	930e      	str	r3, [sp, #56]	; 0x38
 8022df4:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8022df6:	449a      	add	sl, r3
 8022df8:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8022dfa:	f10e 3eff 	add.w	lr, lr, #4294967295
 8022dfe:	441d      	add	r5, r3
 8022e00:	e6ed      	b.n	8022bde <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x262>
 8022e02:	2800      	cmp	r0, #0
 8022e04:	f43f af7f 	beq.w	8022d06 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 8022e08:	5cd3      	ldrb	r3, [r2, r3]
 8022e0a:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8022e0e:	9310      	str	r3, [sp, #64]	; 0x40
 8022e10:	e779      	b.n	8022d06 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 8022e12:	b019      	add	sp, #100	; 0x64
 8022e14:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08022e18 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 8022e18:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8022e1c:	e9dd 480a 	ldrd	r4, r8, [sp, #40]	; 0x28
 8022e20:	f9bd e020 	ldrsh.w	lr, [sp, #32]
 8022e24:	f9bd a024 	ldrsh.w	sl, [sp, #36]	; 0x24
 8022e28:	f89d 5030 	ldrb.w	r5, [sp, #48]	; 0x30
 8022e2c:	f89d 6034 	ldrb.w	r6, [sp, #52]	; 0x34
 8022e30:	8808      	ldrh	r0, [r1, #0]
 8022e32:	fb08 470e 	mla	r7, r8, lr, r4
 8022e36:	f1b8 0f00 	cmp.w	r8, #0
 8022e3a:	eb02 0907 	add.w	r9, r2, r7
 8022e3e:	db67      	blt.n	8022f10 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
 8022e40:	45c2      	cmp	sl, r8
 8022e42:	dd65      	ble.n	8022f10 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
 8022e44:	2c00      	cmp	r4, #0
 8022e46:	db61      	blt.n	8022f0c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
 8022e48:	45a6      	cmp	lr, r4
 8022e4a:	dd5f      	ble.n	8022f0c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
 8022e4c:	5dd2      	ldrb	r2, [r2, r7]
 8022e4e:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
 8022e52:	1c62      	adds	r2, r4, #1
 8022e54:	d45f      	bmi.n	8022f16 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 8022e56:	4596      	cmp	lr, r2
 8022e58:	dd5d      	ble.n	8022f16 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 8022e5a:	2d00      	cmp	r5, #0
 8022e5c:	d05b      	beq.n	8022f16 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 8022e5e:	f899 2001 	ldrb.w	r2, [r9, #1]
 8022e62:	f833 7012 	ldrh.w	r7, [r3, r2, lsl #1]
 8022e66:	f118 0801 	adds.w	r8, r8, #1
 8022e6a:	d458      	bmi.n	8022f1e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 8022e6c:	45c2      	cmp	sl, r8
 8022e6e:	dd56      	ble.n	8022f1e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 8022e70:	2e00      	cmp	r6, #0
 8022e72:	d054      	beq.n	8022f1e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 8022e74:	2c00      	cmp	r4, #0
 8022e76:	db50      	blt.n	8022f1a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
 8022e78:	45a6      	cmp	lr, r4
 8022e7a:	dd4e      	ble.n	8022f1a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
 8022e7c:	f819 200e 	ldrb.w	r2, [r9, lr]
 8022e80:	f833 2012 	ldrh.w	r2, [r3, r2, lsl #1]
 8022e84:	3401      	adds	r4, #1
 8022e86:	d407      	bmi.n	8022e98 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 8022e88:	45a6      	cmp	lr, r4
 8022e8a:	dd05      	ble.n	8022e98 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 8022e8c:	b125      	cbz	r5, 8022e98 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 8022e8e:	44ce      	add	lr, r9
 8022e90:	f89e 0001 	ldrb.w	r0, [lr, #1]
 8022e94:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 8022e98:	ea4f 430c 	mov.w	r3, ip, lsl #16
 8022e9c:	fb15 f406 	smulbb	r4, r5, r6
 8022ea0:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8022ea4:	ea4f 4e07 	mov.w	lr, r7, lsl #16
 8022ea8:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8022eac:	f3c4 04c7 	ubfx	r4, r4, #3, #8
 8022eb0:	ea43 0c0c 	orr.w	ip, r3, ip
 8022eb4:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8022eb8:	f1c6 0310 	rsb	r3, r6, #16
 8022ebc:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8022ec0:	1b5b      	subs	r3, r3, r5
 8022ec2:	ea4e 0707 	orr.w	r7, lr, r7
 8022ec6:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
 8022eca:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8022ece:	437d      	muls	r5, r7
 8022ed0:	fb03 5c0c 	mla	ip, r3, ip, r5
 8022ed4:	0403      	lsls	r3, r0, #16
 8022ed6:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8022eda:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8022ede:	4318      	orrs	r0, r3
 8022ee0:	0413      	lsls	r3, r2, #16
 8022ee2:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8022ee6:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8022eea:	4313      	orrs	r3, r2
 8022eec:	fb04 c000 	mla	r0, r4, r0, ip
 8022ef0:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
 8022ef4:	fb06 0003 	mla	r0, r6, r3, r0
 8022ef8:	0d43      	lsrs	r3, r0, #21
 8022efa:	0940      	lsrs	r0, r0, #5
 8022efc:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8022f00:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8022f04:	4318      	orrs	r0, r3
 8022f06:	8008      	strh	r0, [r1, #0]
 8022f08:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8022f0c:	4684      	mov	ip, r0
 8022f0e:	e7a0      	b.n	8022e52 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x3a>
 8022f10:	4607      	mov	r7, r0
 8022f12:	4684      	mov	ip, r0
 8022f14:	e7a7      	b.n	8022e66 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
 8022f16:	4607      	mov	r7, r0
 8022f18:	e7a5      	b.n	8022e66 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
 8022f1a:	4602      	mov	r2, r0
 8022f1c:	e7b2      	b.n	8022e84 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x6c>
 8022f1e:	4602      	mov	r2, r0
 8022f20:	e7ba      	b.n	8022e98 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>

08022f22 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8022f22:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8022f26:	b093      	sub	sp, #76	; 0x4c
 8022f28:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
 8022f2c:	920f      	str	r2, [sp, #60]	; 0x3c
 8022f2e:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8022f30:	9108      	str	r1, [sp, #32]
 8022f32:	9306      	str	r3, [sp, #24]
 8022f34:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
 8022f38:	9010      	str	r0, [sp, #64]	; 0x40
 8022f3a:	6850      	ldr	r0, [r2, #4]
 8022f3c:	6812      	ldr	r2, [r2, #0]
 8022f3e:	fb00 1303 	mla	r3, r0, r3, r1
 8022f42:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 8022f46:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8022f48:	681b      	ldr	r3, [r3, #0]
 8022f4a:	9307      	str	r3, [sp, #28]
 8022f4c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8022f4e:	685f      	ldr	r7, [r3, #4]
 8022f50:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8022f54:	3704      	adds	r7, #4
 8022f56:	9b08      	ldr	r3, [sp, #32]
 8022f58:	2b00      	cmp	r3, #0
 8022f5a:	dc03      	bgt.n	8022f64 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
 8022f5c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8022f5e:	2b00      	cmp	r3, #0
 8022f60:	f340 81b2 	ble.w	80232c8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 8022f64:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8022f66:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8022f6a:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8022f6e:	1e48      	subs	r0, r1, #1
 8022f70:	f102 3cff 	add.w	ip, r2, #4294967295
 8022f74:	9b06      	ldr	r3, [sp, #24]
 8022f76:	2b00      	cmp	r3, #0
 8022f78:	f340 80a9 	ble.w	80230ce <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
 8022f7c:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8022f80:	ea4f 4326 	mov.w	r3, r6, asr #16
 8022f84:	d406      	bmi.n	8022f94 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8022f86:	4586      	cmp	lr, r0
 8022f88:	da04      	bge.n	8022f94 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8022f8a:	2b00      	cmp	r3, #0
 8022f8c:	db02      	blt.n	8022f94 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8022f8e:	4563      	cmp	r3, ip
 8022f90:	f2c0 809e 	blt.w	80230d0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 8022f94:	f11e 0e01 	adds.w	lr, lr, #1
 8022f98:	f100 808f 	bmi.w	80230ba <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8022f9c:	4571      	cmp	r1, lr
 8022f9e:	f2c0 808c 	blt.w	80230ba <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8022fa2:	3301      	adds	r3, #1
 8022fa4:	f100 8089 	bmi.w	80230ba <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8022fa8:	429a      	cmp	r2, r3
 8022faa:	f2c0 8086 	blt.w	80230ba <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8022fae:	f8dd b018 	ldr.w	fp, [sp, #24]
 8022fb2:	46c8      	mov	r8, r9
 8022fb4:	f1bb 0f00 	cmp.w	fp, #0
 8022fb8:	f340 80a6 	ble.w	8023108 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 8022fbc:	9a24      	ldr	r2, [sp, #144]	; 0x90
 8022fbe:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8022fc0:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 8022fc4:	689b      	ldr	r3, [r3, #8]
 8022fc6:	1422      	asrs	r2, r4, #16
 8022fc8:	ea4f 4c26 	mov.w	ip, r6, asr #16
 8022fcc:	f3c4 3003 	ubfx	r0, r4, #12, #4
 8022fd0:	f3c6 3103 	ubfx	r1, r6, #12, #4
 8022fd4:	f100 80e3 	bmi.w	802319e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 8022fd8:	f103 3aff 	add.w	sl, r3, #4294967295
 8022fdc:	4552      	cmp	r2, sl
 8022fde:	f280 80de 	bge.w	802319e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 8022fe2:	f1bc 0f00 	cmp.w	ip, #0
 8022fe6:	f2c0 80da 	blt.w	802319e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 8022fea:	f10e 3aff 	add.w	sl, lr, #4294967295
 8022fee:	45d4      	cmp	ip, sl
 8022ff0:	f280 80d5 	bge.w	802319e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 8022ff4:	b21b      	sxth	r3, r3
 8022ff6:	fb0c 2203 	mla	r2, ip, r3, r2
 8022ffa:	9d07      	ldr	r5, [sp, #28]
 8022ffc:	eb05 0a02 	add.w	sl, r5, r2
 8023000:	5caa      	ldrb	r2, [r5, r2]
 8023002:	f837 e012 	ldrh.w	lr, [r7, r2, lsl #1]
 8023006:	2800      	cmp	r0, #0
 8023008:	f000 80c0 	beq.w	802318c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26a>
 802300c:	f89a 2001 	ldrb.w	r2, [sl, #1]
 8023010:	f837 2012 	ldrh.w	r2, [r7, r2, lsl #1]
 8023014:	920b      	str	r2, [sp, #44]	; 0x2c
 8023016:	b151      	cbz	r1, 802302e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 8023018:	eb0a 0203 	add.w	r2, sl, r3
 802301c:	f81a 3003 	ldrb.w	r3, [sl, r3]
 8023020:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8023024:	9309      	str	r3, [sp, #36]	; 0x24
 8023026:	7853      	ldrb	r3, [r2, #1]
 8023028:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 802302c:	930c      	str	r3, [sp, #48]	; 0x30
 802302e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8023030:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8023032:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8023036:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 802303a:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 802303e:	ea4c 0c03 	orr.w	ip, ip, r3
 8023042:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8023044:	041b      	lsls	r3, r3, #16
 8023046:	fb10 f201 	smulbb	r2, r0, r1
 802304a:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 802304e:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 8023052:	10d2      	asrs	r2, r2, #3
 8023054:	432b      	orrs	r3, r5
 8023056:	ebc2 0a40 	rsb	sl, r2, r0, lsl #1
 802305a:	4353      	muls	r3, r2
 802305c:	fb0a 330c 	mla	r3, sl, ip, r3
 8023060:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 8023064:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8023068:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 802306c:	ea4c 0e0e 	orr.w	lr, ip, lr
 8023070:	f1c1 0c10 	rsb	ip, r1, #16
 8023074:	ebac 0c00 	sub.w	ip, ip, r0
 8023078:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 802307c:	fb0c 3c0e 	mla	ip, ip, lr, r3
 8023080:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8023082:	0418      	lsls	r0, r3, #16
 8023084:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8023088:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 802308c:	4318      	orrs	r0, r3
 802308e:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 8023092:	fb02 c200 	mla	r2, r2, r0, ip
 8023096:	0d53      	lsrs	r3, r2, #21
 8023098:	0952      	lsrs	r2, r2, #5
 802309a:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 802309e:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80230a2:	431a      	orrs	r2, r3
 80230a4:	f8a8 2000 	strh.w	r2, [r8]
 80230a8:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 80230aa:	441c      	add	r4, r3
 80230ac:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80230ae:	f108 0802 	add.w	r8, r8, #2
 80230b2:	441e      	add	r6, r3
 80230b4:	f10b 3bff 	add.w	fp, fp, #4294967295
 80230b8:	e77c      	b.n	8022fb4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80230ba:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 80230bc:	441c      	add	r4, r3
 80230be:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80230c0:	441e      	add	r6, r3
 80230c2:	9b06      	ldr	r3, [sp, #24]
 80230c4:	3b01      	subs	r3, #1
 80230c6:	9306      	str	r3, [sp, #24]
 80230c8:	f109 0902 	add.w	r9, r9, #2
 80230cc:	e752      	b.n	8022f74 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 80230ce:	d020      	beq.n	8023112 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 80230d0:	9b06      	ldr	r3, [sp, #24]
 80230d2:	981f      	ldr	r0, [sp, #124]	; 0x7c
 80230d4:	3b01      	subs	r3, #1
 80230d6:	fb00 4003 	mla	r0, r0, r3, r4
 80230da:	1400      	asrs	r0, r0, #16
 80230dc:	f53f af67 	bmi.w	8022fae <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 80230e0:	3901      	subs	r1, #1
 80230e2:	4288      	cmp	r0, r1
 80230e4:	f6bf af63 	bge.w	8022fae <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 80230e8:	9920      	ldr	r1, [sp, #128]	; 0x80
 80230ea:	fb01 6303 	mla	r3, r1, r3, r6
 80230ee:	141b      	asrs	r3, r3, #16
 80230f0:	f53f af5d 	bmi.w	8022fae <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 80230f4:	3a01      	subs	r2, #1
 80230f6:	4293      	cmp	r3, r2
 80230f8:	f6bf af59 	bge.w	8022fae <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 80230fc:	f8dd 8018 	ldr.w	r8, [sp, #24]
 8023100:	46ca      	mov	sl, r9
 8023102:	f1b8 0f00 	cmp.w	r8, #0
 8023106:	dc67      	bgt.n	80231d8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 8023108:	9b06      	ldr	r3, [sp, #24]
 802310a:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 802310e:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 8023112:	9b08      	ldr	r3, [sp, #32]
 8023114:	2b00      	cmp	r3, #0
 8023116:	f340 80d7 	ble.w	80232c8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 802311a:	ee30 0a04 	vadd.f32	s0, s0, s8
 802311e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8023122:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8023126:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8023128:	ee31 1a05 	vadd.f32	s2, s2, s10
 802312c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8023130:	eeb0 6a62 	vmov.f32	s12, s5
 8023134:	ee61 7a27 	vmul.f32	s15, s2, s15
 8023138:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 802313c:	ee77 2a62 	vsub.f32	s5, s14, s5
 8023140:	ee16 4a10 	vmov	r4, s12
 8023144:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8023148:	eeb0 6a43 	vmov.f32	s12, s6
 802314c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8023150:	ee12 2a90 	vmov	r2, s5
 8023154:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8023158:	fb92 f3f3 	sdiv	r3, r2, r3
 802315c:	ee13 2a10 	vmov	r2, s6
 8023160:	931f      	str	r3, [sp, #124]	; 0x7c
 8023162:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8023164:	fb92 f3f3 	sdiv	r3, r2, r3
 8023168:	9320      	str	r3, [sp, #128]	; 0x80
 802316a:	9b08      	ldr	r3, [sp, #32]
 802316c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 802316e:	3b01      	subs	r3, #1
 8023170:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8023174:	9308      	str	r3, [sp, #32]
 8023176:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8023178:	bf08      	it	eq
 802317a:	4613      	moveq	r3, r2
 802317c:	ee16 6a10 	vmov	r6, s12
 8023180:	9306      	str	r3, [sp, #24]
 8023182:	eeb0 3a67 	vmov.f32	s6, s15
 8023186:	eef0 2a47 	vmov.f32	s5, s14
 802318a:	e6e4      	b.n	8022f56 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
 802318c:	2900      	cmp	r1, #0
 802318e:	f43f af4e 	beq.w	802302e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 8023192:	f81a 3003 	ldrb.w	r3, [sl, r3]
 8023196:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 802319a:	9309      	str	r3, [sp, #36]	; 0x24
 802319c:	e747      	b.n	802302e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 802319e:	f112 0a01 	adds.w	sl, r2, #1
 80231a2:	d481      	bmi.n	80230a8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 80231a4:	4553      	cmp	r3, sl
 80231a6:	f6ff af7f 	blt.w	80230a8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 80231aa:	f11c 0a01 	adds.w	sl, ip, #1
 80231ae:	f53f af7b 	bmi.w	80230a8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 80231b2:	45d6      	cmp	lr, sl
 80231b4:	f6ff af78 	blt.w	80230a8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 80231b8:	e9cd 2c02 	strd	r2, ip, [sp, #8]
 80231bc:	b21b      	sxth	r3, r3
 80231be:	fa0f f28e 	sxth.w	r2, lr
 80231c2:	e9cd 0104 	strd	r0, r1, [sp, #16]
 80231c6:	9201      	str	r2, [sp, #4]
 80231c8:	9300      	str	r3, [sp, #0]
 80231ca:	9a07      	ldr	r2, [sp, #28]
 80231cc:	9810      	ldr	r0, [sp, #64]	; 0x40
 80231ce:	463b      	mov	r3, r7
 80231d0:	4641      	mov	r1, r8
 80231d2:	f7ff fe21 	bl	8022e18 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 80231d6:	e767      	b.n	80230a8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 80231d8:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80231da:	9d07      	ldr	r5, [sp, #28]
 80231dc:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 80231e0:	1422      	asrs	r2, r4, #16
 80231e2:	1431      	asrs	r1, r6, #16
 80231e4:	fb03 2101 	mla	r1, r3, r1, r2
 80231e8:	9a07      	ldr	r2, [sp, #28]
 80231ea:	440a      	add	r2, r1
 80231ec:	5c69      	ldrb	r1, [r5, r1]
 80231ee:	f3c4 3e03 	ubfx	lr, r4, #12, #4
 80231f2:	f3c6 3003 	ubfx	r0, r6, #12, #4
 80231f6:	f837 1011 	ldrh.w	r1, [r7, r1, lsl #1]
 80231fa:	f1be 0f00 	cmp.w	lr, #0
 80231fe:	d05c      	beq.n	80232ba <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>
 8023200:	f892 c001 	ldrb.w	ip, [r2, #1]
 8023204:	f837 501c 	ldrh.w	r5, [r7, ip, lsl #1]
 8023208:	950d      	str	r5, [sp, #52]	; 0x34
 802320a:	b150      	cbz	r0, 8023222 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 802320c:	eb02 0c03 	add.w	ip, r2, r3
 8023210:	5cd3      	ldrb	r3, [r2, r3]
 8023212:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8023216:	930a      	str	r3, [sp, #40]	; 0x28
 8023218:	f89c 3001 	ldrb.w	r3, [ip, #1]
 802321c:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8023220:	930e      	str	r3, [sp, #56]	; 0x38
 8023222:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8023224:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8023226:	fb1e f200 	smulbb	r2, lr, r0
 802322a:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 802322e:	10d2      	asrs	r2, r2, #3
 8023230:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8023234:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8023238:	ea4c 0c03 	orr.w	ip, ip, r3
 802323c:	ebc2 034e 	rsb	r3, r2, lr, lsl #1
 8023240:	9311      	str	r3, [sp, #68]	; 0x44
 8023242:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8023244:	041b      	lsls	r3, r3, #16
 8023246:	f425 6bfc 	bic.w	fp, r5, #2016	; 0x7e0
 802324a:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 802324e:	ea43 030b 	orr.w	r3, r3, fp
 8023252:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8023254:	4353      	muls	r3, r2
 8023256:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 802325a:	fb05 3c0c 	mla	ip, r5, ip, r3
 802325e:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8023262:	f00b 63fc 	and.w	r3, fp, #132120576	; 0x7e00000
 8023266:	ea43 0b01 	orr.w	fp, r3, r1
 802326a:	f1c0 0110 	rsb	r1, r0, #16
 802326e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8023270:	eba1 0e0e 	sub.w	lr, r1, lr
 8023274:	eb02 0e4e 	add.w	lr, r2, lr, lsl #1
 8023278:	fb0e cc0b 	mla	ip, lr, fp, ip
 802327c:	ea4f 4b03 	mov.w	fp, r3, lsl #16
 8023280:	f423 6efc 	bic.w	lr, r3, #2016	; 0x7e0
 8023284:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8023288:	ea4b 0e0e 	orr.w	lr, fp, lr
 802328c:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 8023290:	fb02 cc0e 	mla	ip, r2, lr, ip
 8023294:	ea4f 535c 	mov.w	r3, ip, lsr #21
 8023298:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 802329c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80232a0:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 80232a4:	ea43 0c0c 	orr.w	ip, r3, ip
 80232a8:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 80232aa:	f82a cb02 	strh.w	ip, [sl], #2
 80232ae:	441c      	add	r4, r3
 80232b0:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80232b2:	f108 38ff 	add.w	r8, r8, #4294967295
 80232b6:	441e      	add	r6, r3
 80232b8:	e723      	b.n	8023102 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 80232ba:	2800      	cmp	r0, #0
 80232bc:	d0b1      	beq.n	8023222 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 80232be:	5cd3      	ldrb	r3, [r2, r3]
 80232c0:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 80232c4:	930a      	str	r3, [sp, #40]	; 0x28
 80232c6:	e7ac      	b.n	8023222 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 80232c8:	b013      	add	sp, #76	; 0x4c
 80232ca:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080232ce <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>:
 80232ce:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80232d2:	880d      	ldrh	r5, [r1, #0]
 80232d4:	b087      	sub	sp, #28
 80232d6:	10ef      	asrs	r7, r5, #3
 80232d8:	ea4f 2a25 	mov.w	sl, r5, asr #8
 80232dc:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 80232e0:	00ed      	lsls	r5, r5, #3
 80232e2:	9701      	str	r7, [sp, #4]
 80232e4:	b2ed      	uxtb	r5, r5
 80232e6:	9502      	str	r5, [sp, #8]
 80232e8:	9d01      	ldr	r5, [sp, #4]
 80232ea:	9103      	str	r1, [sp, #12]
 80232ec:	e9dd 0612 	ldrd	r0, r6, [sp, #72]	; 0x48
 80232f0:	f9bd 9040 	ldrsh.w	r9, [sp, #64]	; 0x40
 80232f4:	9902      	ldr	r1, [sp, #8]
 80232f6:	f9bd b044 	ldrsh.w	fp, [sp, #68]	; 0x44
 80232fa:	f89d 4050 	ldrb.w	r4, [sp, #80]	; 0x50
 80232fe:	f89d e054 	ldrb.w	lr, [sp, #84]	; 0x54
 8023302:	f89d 8058 	ldrb.w	r8, [sp, #88]	; 0x58
 8023306:	f00a 0af8 	and.w	sl, sl, #248	; 0xf8
 802330a:	022d      	lsls	r5, r5, #8
 802330c:	ea45 450a 	orr.w	r5, r5, sl, lsl #16
 8023310:	fb06 0709 	mla	r7, r6, r9, r0
 8023314:	430d      	orrs	r5, r1
 8023316:	2e00      	cmp	r6, #0
 8023318:	eb02 0c07 	add.w	ip, r2, r7
 802331c:	9505      	str	r5, [sp, #20]
 802331e:	f2c0 80b6 	blt.w	802348e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
 8023322:	45b3      	cmp	fp, r6
 8023324:	f340 80b3 	ble.w	802348e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
 8023328:	2800      	cmp	r0, #0
 802332a:	f2c0 80ae 	blt.w	802348a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
 802332e:	4581      	cmp	r9, r0
 8023330:	f340 80ab 	ble.w	802348a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
 8023334:	5dd7      	ldrb	r7, [r2, r7]
 8023336:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 802333a:	441f      	add	r7, r3
 802333c:	1c42      	adds	r2, r0, #1
 802333e:	f100 80a9 	bmi.w	8023494 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 8023342:	4591      	cmp	r9, r2
 8023344:	f340 80a6 	ble.w	8023494 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 8023348:	2c00      	cmp	r4, #0
 802334a:	f000 80a3 	beq.w	8023494 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 802334e:	f89c 5001 	ldrb.w	r5, [ip, #1]
 8023352:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8023356:	441d      	add	r5, r3
 8023358:	3601      	adds	r6, #1
 802335a:	f100 809f 	bmi.w	802349c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 802335e:	45b3      	cmp	fp, r6
 8023360:	f340 809c 	ble.w	802349c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 8023364:	f1be 0f00 	cmp.w	lr, #0
 8023368:	f000 8098 	beq.w	802349c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 802336c:	2800      	cmp	r0, #0
 802336e:	f2c0 8093 	blt.w	8023498 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
 8023372:	4581      	cmp	r9, r0
 8023374:	f340 8090 	ble.w	8023498 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
 8023378:	f81c 6009 	ldrb.w	r6, [ip, r9]
 802337c:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 8023380:	441e      	add	r6, r3
 8023382:	3001      	adds	r0, #1
 8023384:	f100 808d 	bmi.w	80234a2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 8023388:	4581      	cmp	r9, r0
 802338a:	f340 808a 	ble.w	80234a2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 802338e:	2c00      	cmp	r4, #0
 8023390:	f000 8087 	beq.w	80234a2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 8023394:	44e1      	add	r9, ip
 8023396:	f899 2001 	ldrb.w	r2, [r9, #1]
 802339a:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 802339e:	4413      	add	r3, r2
 80233a0:	b2a4      	uxth	r4, r4
 80233a2:	fa1f fe8e 	uxth.w	lr, lr
 80233a6:	fb04 fb0e 	mul.w	fp, r4, lr
 80233aa:	0124      	lsls	r4, r4, #4
 80233ac:	ebcb 1e0e 	rsb	lr, fp, lr, lsl #4
 80233b0:	f5c4 7980 	rsb	r9, r4, #256	; 0x100
 80233b4:	eba4 040b 	sub.w	r4, r4, fp
 80233b8:	fa1f f08e 	uxth.w	r0, lr
 80233bc:	b2a2      	uxth	r2, r4
 80233be:	78ac      	ldrb	r4, [r5, #2]
 80233c0:	f897 c002 	ldrb.w	ip, [r7, #2]
 80233c4:	9901      	ldr	r1, [sp, #4]
 80233c6:	eba9 0900 	sub.w	r9, r9, r0
 80233ca:	fa1f f989 	uxth.w	r9, r9
 80233ce:	4354      	muls	r4, r2
 80233d0:	fb09 440c 	mla	r4, r9, ip, r4
 80233d4:	f896 c002 	ldrb.w	ip, [r6, #2]
 80233d8:	fb00 440c 	mla	r4, r0, ip, r4
 80233dc:	f893 c002 	ldrb.w	ip, [r3, #2]
 80233e0:	fa1f fe88 	uxth.w	lr, r8
 80233e4:	ea6f 0808 	mvn.w	r8, r8
 80233e8:	fa5f f888 	uxtb.w	r8, r8
 80233ec:	fb0b 4c0c 	mla	ip, fp, ip, r4
 80233f0:	fb1a fa08 	smulbb	sl, sl, r8
 80233f4:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 80233f8:	fb0c ac0e 	mla	ip, ip, lr, sl
 80233fc:	f895 a001 	ldrb.w	sl, [r5, #1]
 8023400:	787c      	ldrb	r4, [r7, #1]
 8023402:	782d      	ldrb	r5, [r5, #0]
 8023404:	783f      	ldrb	r7, [r7, #0]
 8023406:	fb02 fa0a 	mul.w	sl, r2, sl
 802340a:	fb09 aa04 	mla	sl, r9, r4, sl
 802340e:	7874      	ldrb	r4, [r6, #1]
 8023410:	436a      	muls	r2, r5
 8023412:	7835      	ldrb	r5, [r6, #0]
 8023414:	fb00 aa04 	mla	sl, r0, r4, sl
 8023418:	fb09 2207 	mla	r2, r9, r7, r2
 802341c:	785c      	ldrb	r4, [r3, #1]
 802341e:	781b      	ldrb	r3, [r3, #0]
 8023420:	fb00 2005 	mla	r0, r0, r5, r2
 8023424:	fb0b a404 	mla	r4, fp, r4, sl
 8023428:	fb0b 0b03 	mla	fp, fp, r3, r0
 802342c:	9b02      	ldr	r3, [sp, #8]
 802342e:	fb11 fa08 	smulbb	sl, r1, r8
 8023432:	fa1f fc8c 	uxth.w	ip, ip
 8023436:	fb13 f808 	smulbb	r8, r3, r8
 802343a:	f3cb 2b07 	ubfx	fp, fp, #8, #8
 802343e:	f3c4 2407 	ubfx	r4, r4, #8, #8
 8023442:	fb04 a40e 	mla	r4, r4, lr, sl
 8023446:	f10c 0301 	add.w	r3, ip, #1
 802344a:	fb0b 8e0e 	mla	lr, fp, lr, r8
 802344e:	fa1f fe8e 	uxth.w	lr, lr
 8023452:	b2a4      	uxth	r4, r4
 8023454:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 8023458:	f40c 4378 	and.w	r3, ip, #63488	; 0xf800
 802345c:	f104 0a01 	add.w	sl, r4, #1
 8023460:	f10e 0c01 	add.w	ip, lr, #1
 8023464:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8023468:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 802346c:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8023470:	0964      	lsrs	r4, r4, #5
 8023472:	ea4c 0c03 	orr.w	ip, ip, r3
 8023476:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 802347a:	9b03      	ldr	r3, [sp, #12]
 802347c:	ea4c 0c04 	orr.w	ip, ip, r4
 8023480:	f8a3 c000 	strh.w	ip, [r3]
 8023484:	b007      	add	sp, #28
 8023486:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802348a:	af05      	add	r7, sp, #20
 802348c:	e756      	b.n	802333c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x6e>
 802348e:	ad05      	add	r5, sp, #20
 8023490:	462f      	mov	r7, r5
 8023492:	e761      	b.n	8023358 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
 8023494:	ad05      	add	r5, sp, #20
 8023496:	e75f      	b.n	8023358 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
 8023498:	ae05      	add	r6, sp, #20
 802349a:	e772      	b.n	8023382 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xb4>
 802349c:	ab05      	add	r3, sp, #20
 802349e:	461e      	mov	r6, r3
 80234a0:	e77e      	b.n	80233a0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>
 80234a2:	ab05      	add	r3, sp, #20
 80234a4:	e77c      	b.n	80233a0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>

080234a6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80234a6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80234aa:	b095      	sub	sp, #84	; 0x54
 80234ac:	9212      	str	r2, [sp, #72]	; 0x48
 80234ae:	9309      	str	r3, [sp, #36]	; 0x24
 80234b0:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 80234b2:	f89d 309c 	ldrb.w	r3, [sp, #156]	; 0x9c
 80234b6:	930f      	str	r3, [sp, #60]	; 0x3c
 80234b8:	910e      	str	r1, [sp, #56]	; 0x38
 80234ba:	e9dd 1324 	ldrd	r1, r3, [sp, #144]	; 0x90
 80234be:	9013      	str	r0, [sp, #76]	; 0x4c
 80234c0:	6850      	ldr	r0, [r2, #4]
 80234c2:	6812      	ldr	r2, [r2, #0]
 80234c4:	fb00 1303 	mla	r3, r0, r3, r1
 80234c8:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80234cc:	930a      	str	r3, [sp, #40]	; 0x28
 80234ce:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80234d0:	681b      	ldr	r3, [r3, #0]
 80234d2:	930d      	str	r3, [sp, #52]	; 0x34
 80234d4:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80234d6:	685c      	ldr	r4, [r3, #4]
 80234d8:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80234da:	43db      	mvns	r3, r3
 80234dc:	b2db      	uxtb	r3, r3
 80234de:	3404      	adds	r4, #4
 80234e0:	930b      	str	r3, [sp, #44]	; 0x2c
 80234e2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80234e4:	2b00      	cmp	r3, #0
 80234e6:	dc03      	bgt.n	80234f0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 80234e8:	9b12      	ldr	r3, [sp, #72]	; 0x48
 80234ea:	2b00      	cmp	r3, #0
 80234ec:	f340 8255 	ble.w	802399a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
 80234f0:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80234f2:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80234f6:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80234fa:	1e48      	subs	r0, r1, #1
 80234fc:	1e55      	subs	r5, r2, #1
 80234fe:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8023500:	2b00      	cmp	r3, #0
 8023502:	f340 80f9 	ble.w	80236f8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 8023506:	9e1f      	ldr	r6, [sp, #124]	; 0x7c
 8023508:	9b20      	ldr	r3, [sp, #128]	; 0x80
 802350a:	1436      	asrs	r6, r6, #16
 802350c:	ea4f 4323 	mov.w	r3, r3, asr #16
 8023510:	d406      	bmi.n	8023520 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8023512:	4286      	cmp	r6, r0
 8023514:	da04      	bge.n	8023520 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8023516:	2b00      	cmp	r3, #0
 8023518:	db02      	blt.n	8023520 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 802351a:	42ab      	cmp	r3, r5
 802351c:	f2c0 80ed 	blt.w	80236fa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x254>
 8023520:	3601      	adds	r6, #1
 8023522:	f100 80da 	bmi.w	80236da <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 8023526:	42b1      	cmp	r1, r6
 8023528:	f2c0 80d7 	blt.w	80236da <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 802352c:	3301      	adds	r3, #1
 802352e:	f100 80d4 	bmi.w	80236da <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 8023532:	429a      	cmp	r2, r3
 8023534:	f2c0 80d1 	blt.w	80236da <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 8023538:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802353a:	9311      	str	r3, [sp, #68]	; 0x44
 802353c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 802353e:	930c      	str	r3, [sp, #48]	; 0x30
 8023540:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8023542:	2b00      	cmp	r3, #0
 8023544:	f340 80fa 	ble.w	802373c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x296>
 8023548:	9826      	ldr	r0, [sp, #152]	; 0x98
 802354a:	9b20      	ldr	r3, [sp, #128]	; 0x80
 802354c:	9a20      	ldr	r2, [sp, #128]	; 0x80
 802354e:	68c6      	ldr	r6, [r0, #12]
 8023550:	981f      	ldr	r0, [sp, #124]	; 0x7c
 8023552:	141d      	asrs	r5, r3, #16
 8023554:	f3c2 3103 	ubfx	r1, r2, #12, #4
 8023558:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 802355a:	9a26      	ldr	r2, [sp, #152]	; 0x98
 802355c:	1400      	asrs	r0, r0, #16
 802355e:	f3c3 3303 	ubfx	r3, r3, #12, #4
 8023562:	6892      	ldr	r2, [r2, #8]
 8023564:	f100 813e 	bmi.w	80237e4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 8023568:	1e57      	subs	r7, r2, #1
 802356a:	42b8      	cmp	r0, r7
 802356c:	f280 813a 	bge.w	80237e4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 8023570:	2d00      	cmp	r5, #0
 8023572:	f2c0 8137 	blt.w	80237e4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 8023576:	1e77      	subs	r7, r6, #1
 8023578:	42bd      	cmp	r5, r7
 802357a:	f280 8133 	bge.w	80237e4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 802357e:	b212      	sxth	r2, r2
 8023580:	fb05 0002 	mla	r0, r5, r2, r0
 8023584:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8023586:	f815 a000 	ldrb.w	sl, [r5, r0]
 802358a:	eb0a 0a4a 	add.w	sl, sl, sl, lsl #1
 802358e:	182e      	adds	r6, r5, r0
 8023590:	eb04 050a 	add.w	r5, r4, sl
 8023594:	2b00      	cmp	r3, #0
 8023596:	f000 8117 	beq.w	80237c8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x322>
 802359a:	f896 c001 	ldrb.w	ip, [r6, #1]
 802359e:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 80235a2:	44a4      	add	ip, r4
 80235a4:	2900      	cmp	r1, #0
 80235a6:	f000 8117 	beq.w	80237d8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x332>
 80235aa:	18b0      	adds	r0, r6, r2
 80235ac:	5cb2      	ldrb	r2, [r6, r2]
 80235ae:	7840      	ldrb	r0, [r0, #1]
 80235b0:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80235b4:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 80235b8:	4422      	add	r2, r4
 80235ba:	4420      	add	r0, r4
 80235bc:	b29b      	uxth	r3, r3
 80235be:	b289      	uxth	r1, r1
 80235c0:	fb03 f901 	mul.w	r9, r3, r1
 80235c4:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 80235c8:	011b      	lsls	r3, r3, #4
 80235ca:	b289      	uxth	r1, r1
 80235cc:	f89c 7002 	ldrb.w	r7, [ip, #2]
 80235d0:	f895 b002 	ldrb.w	fp, [r5, #2]
 80235d4:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 80235d6:	f814 a00a 	ldrb.w	sl, [r4, sl]
 80235da:	f8b6 e000 	ldrh.w	lr, [r6]
 80235de:	f8bd 603c 	ldrh.w	r6, [sp, #60]	; 0x3c
 80235e2:	f5c3 7880 	rsb	r8, r3, #256	; 0x100
 80235e6:	eba3 0309 	sub.w	r3, r3, r9
 80235ea:	b29b      	uxth	r3, r3
 80235ec:	eba8 0801 	sub.w	r8, r8, r1
 80235f0:	fa1f f888 	uxth.w	r8, r8
 80235f4:	435f      	muls	r7, r3
 80235f6:	fb08 770b 	mla	r7, r8, fp, r7
 80235fa:	f892 b002 	ldrb.w	fp, [r2, #2]
 80235fe:	9310      	str	r3, [sp, #64]	; 0x40
 8023600:	fb01 770b 	mla	r7, r1, fp, r7
 8023604:	f890 b002 	ldrb.w	fp, [r0, #2]
 8023608:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 802360a:	fb09 770b 	mla	r7, r9, fp, r7
 802360e:	ea4f 2b2e 	mov.w	fp, lr, asr #8
 8023612:	f00b 0bf8 	and.w	fp, fp, #248	; 0xf8
 8023616:	fb1b fb03 	smulbb	fp, fp, r3
 802361a:	f3c7 2707 	ubfx	r7, r7, #8, #8
 802361e:	fb07 b706 	mla	r7, r7, r6, fp
 8023622:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8023624:	f895 b001 	ldrb.w	fp, [r5, #1]
 8023628:	f89c 5001 	ldrb.w	r5, [ip, #1]
 802362c:	f89c c000 	ldrb.w	ip, [ip]
 8023630:	435d      	muls	r5, r3
 8023632:	fb08 550b 	mla	r5, r8, fp, r5
 8023636:	f892 b001 	ldrb.w	fp, [r2, #1]
 802363a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 802363c:	fb01 550b 	mla	r5, r1, fp, r5
 8023640:	f890 b001 	ldrb.w	fp, [r0, #1]
 8023644:	fb09 550b 	mla	r5, r9, fp, r5
 8023648:	ea4f 0bee 	mov.w	fp, lr, asr #3
 802364c:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 8023650:	fb1b fb03 	smulbb	fp, fp, r3
 8023654:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8023656:	fb03 f30c 	mul.w	r3, r3, ip
 802365a:	f892 c000 	ldrb.w	ip, [r2]
 802365e:	fb08 330a 	mla	r3, r8, sl, r3
 8023662:	fb01 330c 	mla	r3, r1, ip, r3
 8023666:	f890 c000 	ldrb.w	ip, [r0]
 802366a:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 802366e:	fb09 3c0c 	mla	ip, r9, ip, r3
 8023672:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8023674:	fa5f fe8e 	uxtb.w	lr, lr
 8023678:	b2bf      	uxth	r7, r7
 802367a:	fb1e fe03 	smulbb	lr, lr, r3
 802367e:	f3c5 2507 	ubfx	r5, r5, #8, #8
 8023682:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 8023686:	fb05 b506 	mla	r5, r5, r6, fp
 802368a:	1c7b      	adds	r3, r7, #1
 802368c:	fb0c e606 	mla	r6, ip, r6, lr
 8023690:	b2ad      	uxth	r5, r5
 8023692:	b2b6      	uxth	r6, r6
 8023694:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 8023698:	f407 4378 	and.w	r3, r7, #63488	; 0xf800
 802369c:	f105 0b01 	add.w	fp, r5, #1
 80236a0:	1c77      	adds	r7, r6, #1
 80236a2:	eb07 2716 	add.w	r7, r7, r6, lsr #8
 80236a6:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 80236aa:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 80236ae:	096d      	lsrs	r5, r5, #5
 80236b0:	431f      	orrs	r7, r3
 80236b2:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80236b6:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80236b8:	433d      	orrs	r5, r7
 80236ba:	801d      	strh	r5, [r3, #0]
 80236bc:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80236be:	9a21      	ldr	r2, [sp, #132]	; 0x84
 80236c0:	3302      	adds	r3, #2
 80236c2:	930c      	str	r3, [sp, #48]	; 0x30
 80236c4:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 80236c6:	4413      	add	r3, r2
 80236c8:	931f      	str	r3, [sp, #124]	; 0x7c
 80236ca:	9a22      	ldr	r2, [sp, #136]	; 0x88
 80236cc:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80236ce:	4413      	add	r3, r2
 80236d0:	9320      	str	r3, [sp, #128]	; 0x80
 80236d2:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80236d4:	3b01      	subs	r3, #1
 80236d6:	9311      	str	r3, [sp, #68]	; 0x44
 80236d8:	e732      	b.n	8023540 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 80236da:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 80236dc:	9e21      	ldr	r6, [sp, #132]	; 0x84
 80236de:	4433      	add	r3, r6
 80236e0:	931f      	str	r3, [sp, #124]	; 0x7c
 80236e2:	9e22      	ldr	r6, [sp, #136]	; 0x88
 80236e4:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80236e6:	4433      	add	r3, r6
 80236e8:	9320      	str	r3, [sp, #128]	; 0x80
 80236ea:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80236ec:	3b01      	subs	r3, #1
 80236ee:	9309      	str	r3, [sp, #36]	; 0x24
 80236f0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80236f2:	3302      	adds	r3, #2
 80236f4:	930a      	str	r3, [sp, #40]	; 0x28
 80236f6:	e702      	b.n	80234fe <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 80236f8:	d027      	beq.n	802374a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a4>
 80236fa:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80236fc:	9821      	ldr	r0, [sp, #132]	; 0x84
 80236fe:	9d1f      	ldr	r5, [sp, #124]	; 0x7c
 8023700:	3b01      	subs	r3, #1
 8023702:	fb00 5003 	mla	r0, r0, r3, r5
 8023706:	1400      	asrs	r0, r0, #16
 8023708:	f53f af16 	bmi.w	8023538 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 802370c:	3901      	subs	r1, #1
 802370e:	4288      	cmp	r0, r1
 8023710:	f6bf af12 	bge.w	8023538 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8023714:	9922      	ldr	r1, [sp, #136]	; 0x88
 8023716:	9820      	ldr	r0, [sp, #128]	; 0x80
 8023718:	fb01 0303 	mla	r3, r1, r3, r0
 802371c:	141b      	asrs	r3, r3, #16
 802371e:	f53f af0b 	bmi.w	8023538 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8023722:	3a01      	subs	r2, #1
 8023724:	4293      	cmp	r3, r2
 8023726:	f6bf af07 	bge.w	8023538 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 802372a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802372c:	9311      	str	r3, [sp, #68]	; 0x44
 802372e:	f8bd a03c 	ldrh.w	sl, [sp, #60]	; 0x3c
 8023732:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8023734:	930c      	str	r3, [sp, #48]	; 0x30
 8023736:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8023738:	2b00      	cmp	r3, #0
 802373a:	dc70      	bgt.n	802381e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
 802373c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802373e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8023740:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8023744:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8023748:	930a      	str	r3, [sp, #40]	; 0x28
 802374a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 802374c:	2b00      	cmp	r3, #0
 802374e:	f340 8124 	ble.w	802399a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
 8023752:	ee30 0a04 	vadd.f32	s0, s0, s8
 8023756:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 802375a:	eec7 7a00 	vdiv.f32	s15, s14, s0
 802375e:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8023760:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8023764:	ee31 1a05 	vadd.f32	s2, s2, s10
 8023768:	ee20 7aa7 	vmul.f32	s14, s1, s15
 802376c:	eef0 6a62 	vmov.f32	s13, s5
 8023770:	ee61 7a27 	vmul.f32	s15, s2, s15
 8023774:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8023778:	ee77 2a62 	vsub.f32	s5, s14, s5
 802377c:	edcd 6a1f 	vstr	s13, [sp, #124]	; 0x7c
 8023780:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8023784:	eef0 6a43 	vmov.f32	s13, s6
 8023788:	ee37 3ac3 	vsub.f32	s6, s15, s6
 802378c:	ee12 2a90 	vmov	r2, s5
 8023790:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8023794:	fb92 f3f3 	sdiv	r3, r2, r3
 8023798:	ee13 2a10 	vmov	r2, s6
 802379c:	9321      	str	r3, [sp, #132]	; 0x84
 802379e:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 80237a0:	fb92 f3f3 	sdiv	r3, r2, r3
 80237a4:	9322      	str	r3, [sp, #136]	; 0x88
 80237a6:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80237a8:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80237aa:	3b01      	subs	r3, #1
 80237ac:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80237b0:	930e      	str	r3, [sp, #56]	; 0x38
 80237b2:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 80237b4:	edcd 6a20 	vstr	s13, [sp, #128]	; 0x80
 80237b8:	bf08      	it	eq
 80237ba:	4613      	moveq	r3, r2
 80237bc:	9309      	str	r3, [sp, #36]	; 0x24
 80237be:	eeb0 3a67 	vmov.f32	s6, s15
 80237c2:	eef0 2a47 	vmov.f32	s5, s14
 80237c6:	e68c      	b.n	80234e2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 80237c8:	b149      	cbz	r1, 80237de <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x338>
 80237ca:	5cb2      	ldrb	r2, [r6, r2]
 80237cc:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80237d0:	4422      	add	r2, r4
 80237d2:	4628      	mov	r0, r5
 80237d4:	46ac      	mov	ip, r5
 80237d6:	e6f1      	b.n	80235bc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 80237d8:	4628      	mov	r0, r5
 80237da:	462a      	mov	r2, r5
 80237dc:	e6ee      	b.n	80235bc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 80237de:	4628      	mov	r0, r5
 80237e0:	462a      	mov	r2, r5
 80237e2:	e7f7      	b.n	80237d4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32e>
 80237e4:	1c47      	adds	r7, r0, #1
 80237e6:	f53f af69 	bmi.w	80236bc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 80237ea:	42ba      	cmp	r2, r7
 80237ec:	f6ff af66 	blt.w	80236bc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 80237f0:	1c6f      	adds	r7, r5, #1
 80237f2:	f53f af63 	bmi.w	80236bc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 80237f6:	42be      	cmp	r6, r7
 80237f8:	f6ff af60 	blt.w	80236bc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 80237fc:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 80237fe:	9002      	str	r0, [sp, #8]
 8023800:	b236      	sxth	r6, r6
 8023802:	b212      	sxth	r2, r2
 8023804:	e9cd 1705 	strd	r1, r7, [sp, #20]
 8023808:	e9cd 5303 	strd	r5, r3, [sp, #12]
 802380c:	9200      	str	r2, [sp, #0]
 802380e:	9601      	str	r6, [sp, #4]
 8023810:	4623      	mov	r3, r4
 8023812:	e9dd 120c 	ldrd	r1, r2, [sp, #48]	; 0x30
 8023816:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8023818:	f7ff fd59 	bl	80232ce <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>
 802381c:	e74e      	b.n	80236bc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 802381e:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8023820:	9820      	ldr	r0, [sp, #128]	; 0x80
 8023822:	9d1f      	ldr	r5, [sp, #124]	; 0x7c
 8023824:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8023826:	f3c2 3103 	ubfx	r1, r2, #12, #4
 802382a:	9a26      	ldr	r2, [sp, #152]	; 0x98
 802382c:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 8023830:	142d      	asrs	r5, r5, #16
 8023832:	1400      	asrs	r0, r0, #16
 8023834:	fb02 5000 	mla	r0, r2, r0, r5
 8023838:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 802383a:	f815 9000 	ldrb.w	r9, [r5, r0]
 802383e:	f3c3 3303 	ubfx	r3, r3, #12, #4
 8023842:	eb09 0949 	add.w	r9, r9, r9, lsl #1
 8023846:	182e      	adds	r6, r5, r0
 8023848:	eb04 0509 	add.w	r5, r4, r9
 802384c:	2b00      	cmp	r3, #0
 802384e:	f000 8096 	beq.w	802397e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d8>
 8023852:	7877      	ldrb	r7, [r6, #1]
 8023854:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 8023858:	4427      	add	r7, r4
 802385a:	2900      	cmp	r1, #0
 802385c:	f000 8097 	beq.w	802398e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e8>
 8023860:	18b0      	adds	r0, r6, r2
 8023862:	5cb2      	ldrb	r2, [r6, r2]
 8023864:	7840      	ldrb	r0, [r0, #1]
 8023866:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 802386a:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 802386e:	4422      	add	r2, r4
 8023870:	4420      	add	r0, r4
 8023872:	b29b      	uxth	r3, r3
 8023874:	b289      	uxth	r1, r1
 8023876:	fb03 f801 	mul.w	r8, r3, r1
 802387a:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 802387c:	f895 b002 	ldrb.w	fp, [r5, #2]
 8023880:	f8b6 c000 	ldrh.w	ip, [r6]
 8023884:	78be      	ldrb	r6, [r7, #2]
 8023886:	f814 9009 	ldrb.w	r9, [r4, r9]
 802388a:	011b      	lsls	r3, r3, #4
 802388c:	ebc8 1101 	rsb	r1, r8, r1, lsl #4
 8023890:	b289      	uxth	r1, r1
 8023892:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 8023896:	eba3 0308 	sub.w	r3, r3, r8
 802389a:	b29b      	uxth	r3, r3
 802389c:	ebae 0e01 	sub.w	lr, lr, r1
 80238a0:	fa1f fe8e 	uxth.w	lr, lr
 80238a4:	435e      	muls	r6, r3
 80238a6:	fb0e 660b 	mla	r6, lr, fp, r6
 80238aa:	f892 b002 	ldrb.w	fp, [r2, #2]
 80238ae:	9310      	str	r3, [sp, #64]	; 0x40
 80238b0:	fb01 660b 	mla	r6, r1, fp, r6
 80238b4:	f890 b002 	ldrb.w	fp, [r0, #2]
 80238b8:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80238ba:	fb08 660b 	mla	r6, r8, fp, r6
 80238be:	ea4f 2b2c 	mov.w	fp, ip, asr #8
 80238c2:	f00b 0bf8 	and.w	fp, fp, #248	; 0xf8
 80238c6:	fb1b fb03 	smulbb	fp, fp, r3
 80238ca:	f3c6 2607 	ubfx	r6, r6, #8, #8
 80238ce:	fb06 b60a 	mla	r6, r6, sl, fp
 80238d2:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80238d4:	f895 b001 	ldrb.w	fp, [r5, #1]
 80238d8:	787d      	ldrb	r5, [r7, #1]
 80238da:	783f      	ldrb	r7, [r7, #0]
 80238dc:	435d      	muls	r5, r3
 80238de:	fb0e 550b 	mla	r5, lr, fp, r5
 80238e2:	f892 b001 	ldrb.w	fp, [r2, #1]
 80238e6:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80238e8:	fb01 550b 	mla	r5, r1, fp, r5
 80238ec:	f890 b001 	ldrb.w	fp, [r0, #1]
 80238f0:	fb08 550b 	mla	r5, r8, fp, r5
 80238f4:	ea4f 0bec 	mov.w	fp, ip, asr #3
 80238f8:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 80238fc:	fb1b fb03 	smulbb	fp, fp, r3
 8023900:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8023902:	437b      	muls	r3, r7
 8023904:	7817      	ldrb	r7, [r2, #0]
 8023906:	fb0e 3309 	mla	r3, lr, r9, r3
 802390a:	fb01 3307 	mla	r3, r1, r7, r3
 802390e:	7807      	ldrb	r7, [r0, #0]
 8023910:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8023914:	fb08 3707 	mla	r7, r8, r7, r3
 8023918:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 802391a:	fa5f fc8c 	uxtb.w	ip, ip
 802391e:	fb1c fc03 	smulbb	ip, ip, r3
 8023922:	f3c5 2507 	ubfx	r5, r5, #8, #8
 8023926:	f3c7 2707 	ubfx	r7, r7, #8, #8
 802392a:	fb05 b50a 	mla	r5, r5, sl, fp
 802392e:	fb07 c70a 	mla	r7, r7, sl, ip
 8023932:	b2b6      	uxth	r6, r6
 8023934:	b2ad      	uxth	r5, r5
 8023936:	b2bf      	uxth	r7, r7
 8023938:	1c73      	adds	r3, r6, #1
 802393a:	1c7a      	adds	r2, r7, #1
 802393c:	f105 0b01 	add.w	fp, r5, #1
 8023940:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 8023944:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 8023948:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 802394c:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8023950:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 8023954:	096d      	lsrs	r5, r5, #5
 8023956:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8023958:	4316      	orrs	r6, r2
 802395a:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 802395e:	432e      	orrs	r6, r5
 8023960:	f823 6b02 	strh.w	r6, [r3], #2
 8023964:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8023966:	930c      	str	r3, [sp, #48]	; 0x30
 8023968:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 802396a:	4413      	add	r3, r2
 802396c:	931f      	str	r3, [sp, #124]	; 0x7c
 802396e:	9a22      	ldr	r2, [sp, #136]	; 0x88
 8023970:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8023972:	4413      	add	r3, r2
 8023974:	9320      	str	r3, [sp, #128]	; 0x80
 8023976:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8023978:	3b01      	subs	r3, #1
 802397a:	9311      	str	r3, [sp, #68]	; 0x44
 802397c:	e6db      	b.n	8023736 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x290>
 802397e:	b149      	cbz	r1, 8023994 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ee>
 8023980:	5cb2      	ldrb	r2, [r6, r2]
 8023982:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8023986:	4422      	add	r2, r4
 8023988:	4628      	mov	r0, r5
 802398a:	462f      	mov	r7, r5
 802398c:	e771      	b.n	8023872 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
 802398e:	4628      	mov	r0, r5
 8023990:	462a      	mov	r2, r5
 8023992:	e76e      	b.n	8023872 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
 8023994:	4628      	mov	r0, r5
 8023996:	462a      	mov	r2, r5
 8023998:	e7f7      	b.n	802398a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 802399a:	b015      	add	sp, #84	; 0x54
 802399c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080239a0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>:
 80239a0:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80239a4:	880f      	ldrh	r7, [r1, #0]
 80239a6:	f9bd e030 	ldrsh.w	lr, [sp, #48]	; 0x30
 80239aa:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	; 0x34
 80239ae:	f89d 0040 	ldrb.w	r0, [sp, #64]	; 0x40
 80239b2:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
 80239b6:	023c      	lsls	r4, r7, #8
 80239b8:	e9dd c50e 	ldrd	ip, r5, [sp, #56]	; 0x38
 80239bc:	f404 0b78 	and.w	fp, r4, #16252928	; 0xf80000
 80239c0:	017c      	lsls	r4, r7, #5
 80239c2:	f404 447c 	and.w	r4, r4, #64512	; 0xfc00
 80239c6:	00ff      	lsls	r7, r7, #3
 80239c8:	ea4b 0404 	orr.w	r4, fp, r4
 80239cc:	b2ff      	uxtb	r7, r7
 80239ce:	fb05 ca0e 	mla	sl, r5, lr, ip
 80239d2:	4327      	orrs	r7, r4
 80239d4:	2d00      	cmp	r5, #0
 80239d6:	eb02 080a 	add.w	r8, r2, sl
 80239da:	9701      	str	r7, [sp, #4]
 80239dc:	db7e      	blt.n	8023adc <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
 80239de:	45a9      	cmp	r9, r5
 80239e0:	dd7c      	ble.n	8023adc <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
 80239e2:	f1bc 0f00 	cmp.w	ip, #0
 80239e6:	db77      	blt.n	8023ad8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
 80239e8:	45e6      	cmp	lr, ip
 80239ea:	dd75      	ble.n	8023ad8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
 80239ec:	f812 700a 	ldrb.w	r7, [r2, sl]
 80239f0:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 80239f4:	441f      	add	r7, r3
 80239f6:	f11c 0201 	adds.w	r2, ip, #1
 80239fa:	d472      	bmi.n	8023ae2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 80239fc:	4596      	cmp	lr, r2
 80239fe:	dd70      	ble.n	8023ae2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 8023a00:	2800      	cmp	r0, #0
 8023a02:	d06e      	beq.n	8023ae2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 8023a04:	f898 4001 	ldrb.w	r4, [r8, #1]
 8023a08:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 8023a0c:	441c      	add	r4, r3
 8023a0e:	3501      	adds	r5, #1
 8023a10:	d46b      	bmi.n	8023aea <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 8023a12:	45a9      	cmp	r9, r5
 8023a14:	dd69      	ble.n	8023aea <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 8023a16:	2e00      	cmp	r6, #0
 8023a18:	d067      	beq.n	8023aea <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 8023a1a:	f1bc 0f00 	cmp.w	ip, #0
 8023a1e:	db62      	blt.n	8023ae6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
 8023a20:	45e6      	cmp	lr, ip
 8023a22:	dd60      	ble.n	8023ae6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
 8023a24:	f818 500e 	ldrb.w	r5, [r8, lr]
 8023a28:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8023a2c:	441d      	add	r5, r3
 8023a2e:	f11c 0201 	adds.w	r2, ip, #1
 8023a32:	d45d      	bmi.n	8023af0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 8023a34:	4596      	cmp	lr, r2
 8023a36:	dd5b      	ble.n	8023af0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 8023a38:	2800      	cmp	r0, #0
 8023a3a:	d059      	beq.n	8023af0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 8023a3c:	44c6      	add	lr, r8
 8023a3e:	f89e 2001 	ldrb.w	r2, [lr, #1]
 8023a42:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8023a46:	4413      	add	r3, r2
 8023a48:	b280      	uxth	r0, r0
 8023a4a:	b2b2      	uxth	r2, r6
 8023a4c:	fb00 f602 	mul.w	r6, r0, r2
 8023a50:	0100      	lsls	r0, r0, #4
 8023a52:	ebc6 1202 	rsb	r2, r6, r2, lsl #4
 8023a56:	f5c0 7880 	rsb	r8, r0, #256	; 0x100
 8023a5a:	1b80      	subs	r0, r0, r6
 8023a5c:	fa1f fc82 	uxth.w	ip, r2
 8023a60:	b282      	uxth	r2, r0
 8023a62:	78a0      	ldrb	r0, [r4, #2]
 8023a64:	f897 e002 	ldrb.w	lr, [r7, #2]
 8023a68:	f897 9000 	ldrb.w	r9, [r7]
 8023a6c:	787f      	ldrb	r7, [r7, #1]
 8023a6e:	eba8 080c 	sub.w	r8, r8, ip
 8023a72:	fa1f f888 	uxth.w	r8, r8
 8023a76:	4350      	muls	r0, r2
 8023a78:	fb08 0e0e 	mla	lr, r8, lr, r0
 8023a7c:	78a8      	ldrb	r0, [r5, #2]
 8023a7e:	fb0c e000 	mla	r0, ip, r0, lr
 8023a82:	f893 e002 	ldrb.w	lr, [r3, #2]
 8023a86:	fb06 0e0e 	mla	lr, r6, lr, r0
 8023a8a:	f40e 4078 	and.w	r0, lr, #63488	; 0xf800
 8023a8e:	f894 e000 	ldrb.w	lr, [r4]
 8023a92:	fb02 fe0e 	mul.w	lr, r2, lr
 8023a96:	fb08 e909 	mla	r9, r8, r9, lr
 8023a9a:	f895 e000 	ldrb.w	lr, [r5]
 8023a9e:	fb0c 990e 	mla	r9, ip, lr, r9
 8023aa2:	f893 e000 	ldrb.w	lr, [r3]
 8023aa6:	785b      	ldrb	r3, [r3, #1]
 8023aa8:	fb06 9e0e 	mla	lr, r6, lr, r9
 8023aac:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 8023ab0:	ea4e 0e00 	orr.w	lr, lr, r0
 8023ab4:	7860      	ldrb	r0, [r4, #1]
 8023ab6:	4350      	muls	r0, r2
 8023ab8:	786a      	ldrb	r2, [r5, #1]
 8023aba:	fb08 0007 	mla	r0, r8, r7, r0
 8023abe:	fb0c 0202 	mla	r2, ip, r2, r0
 8023ac2:	fb06 2303 	mla	r3, r6, r3, r2
 8023ac6:	095b      	lsrs	r3, r3, #5
 8023ac8:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8023acc:	ea4e 0303 	orr.w	r3, lr, r3
 8023ad0:	800b      	strh	r3, [r1, #0]
 8023ad2:	b003      	add	sp, #12
 8023ad4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8023ad8:	af01      	add	r7, sp, #4
 8023ada:	e78c      	b.n	80239f6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x56>
 8023adc:	ac01      	add	r4, sp, #4
 8023ade:	4627      	mov	r7, r4
 8023ae0:	e795      	b.n	8023a0e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 8023ae2:	ac01      	add	r4, sp, #4
 8023ae4:	e793      	b.n	8023a0e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 8023ae6:	ad01      	add	r5, sp, #4
 8023ae8:	e7a1      	b.n	8023a2e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x8e>
 8023aea:	ab01      	add	r3, sp, #4
 8023aec:	461d      	mov	r5, r3
 8023aee:	e7ab      	b.n	8023a48 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>
 8023af0:	ab01      	add	r3, sp, #4
 8023af2:	e7a9      	b.n	8023a48 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>

08023af4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8023af4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8023af8:	b08f      	sub	sp, #60	; 0x3c
 8023afa:	e9dd b519 	ldrd	fp, r5, [sp, #100]	; 0x64
 8023afe:	920c      	str	r2, [sp, #48]	; 0x30
 8023b00:	9a1d      	ldr	r2, [sp, #116]	; 0x74
 8023b02:	910a      	str	r1, [sp, #40]	; 0x28
 8023b04:	9306      	str	r3, [sp, #24]
 8023b06:	e9dd 131e 	ldrd	r1, r3, [sp, #120]	; 0x78
 8023b0a:	900d      	str	r0, [sp, #52]	; 0x34
 8023b0c:	6850      	ldr	r0, [r2, #4]
 8023b0e:	6812      	ldr	r2, [r2, #0]
 8023b10:	fb00 1303 	mla	r3, r0, r3, r1
 8023b14:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8023b18:	9307      	str	r3, [sp, #28]
 8023b1a:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8023b1c:	681b      	ldr	r3, [r3, #0]
 8023b1e:	9308      	str	r3, [sp, #32]
 8023b20:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8023b22:	685c      	ldr	r4, [r3, #4]
 8023b24:	3404      	adds	r4, #4
 8023b26:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8023b28:	2b00      	cmp	r3, #0
 8023b2a:	dc03      	bgt.n	8023b34 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 8023b2c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8023b2e:	2b00      	cmp	r3, #0
 8023b30:	f340 81d6 	ble.w	8023ee0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ec>
 8023b34:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8023b36:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8023b3a:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8023b3e:	1e48      	subs	r0, r1, #1
 8023b40:	1e56      	subs	r6, r2, #1
 8023b42:	9b06      	ldr	r3, [sp, #24]
 8023b44:	2b00      	cmp	r3, #0
 8023b46:	f340 80b7 	ble.w	8023cb8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c4>
 8023b4a:	ea5f 472b 	movs.w	r7, fp, asr #16
 8023b4e:	ea4f 4325 	mov.w	r3, r5, asr #16
 8023b52:	d406      	bmi.n	8023b62 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8023b54:	4287      	cmp	r7, r0
 8023b56:	da04      	bge.n	8023b62 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8023b58:	2b00      	cmp	r3, #0
 8023b5a:	db02      	blt.n	8023b62 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8023b5c:	42b3      	cmp	r3, r6
 8023b5e:	f2c0 80ac 	blt.w	8023cba <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
 8023b62:	3701      	adds	r7, #1
 8023b64:	f100 809d 	bmi.w	8023ca2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 8023b68:	42b9      	cmp	r1, r7
 8023b6a:	f2c0 809a 	blt.w	8023ca2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 8023b6e:	3301      	adds	r3, #1
 8023b70:	f100 8097 	bmi.w	8023ca2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 8023b74:	429a      	cmp	r2, r3
 8023b76:	f2c0 8094 	blt.w	8023ca2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 8023b7a:	9b06      	ldr	r3, [sp, #24]
 8023b7c:	930b      	str	r3, [sp, #44]	; 0x2c
 8023b7e:	9b07      	ldr	r3, [sp, #28]
 8023b80:	9309      	str	r3, [sp, #36]	; 0x24
 8023b82:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8023b84:	2b00      	cmp	r3, #0
 8023b86:	f340 80b5 	ble.w	8023cf4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8023b8a:	9820      	ldr	r0, [sp, #128]	; 0x80
 8023b8c:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8023b8e:	68c7      	ldr	r7, [r0, #12]
 8023b90:	6892      	ldr	r2, [r2, #8]
 8023b92:	ea5f 402b 	movs.w	r0, fp, asr #16
 8023b96:	ea4f 4625 	mov.w	r6, r5, asr #16
 8023b9a:	f3cb 3303 	ubfx	r3, fp, #12, #4
 8023b9e:	f3c5 3103 	ubfx	r1, r5, #12, #4
 8023ba2:	f100 80fb 	bmi.w	8023d9c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 8023ba6:	f102 3cff 	add.w	ip, r2, #4294967295
 8023baa:	4560      	cmp	r0, ip
 8023bac:	f280 80f6 	bge.w	8023d9c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 8023bb0:	2e00      	cmp	r6, #0
 8023bb2:	f2c0 80f3 	blt.w	8023d9c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 8023bb6:	f107 3cff 	add.w	ip, r7, #4294967295
 8023bba:	4566      	cmp	r6, ip
 8023bbc:	f280 80ee 	bge.w	8023d9c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 8023bc0:	b212      	sxth	r2, r2
 8023bc2:	fb06 0002 	mla	r0, r6, r2, r0
 8023bc6:	9e08      	ldr	r6, [sp, #32]
 8023bc8:	1837      	adds	r7, r6, r0
 8023bca:	5c30      	ldrb	r0, [r6, r0]
 8023bcc:	eb00 0840 	add.w	r8, r0, r0, lsl #1
 8023bd0:	eb04 0c08 	add.w	ip, r4, r8
 8023bd4:	2b00      	cmp	r3, #0
 8023bd6:	f000 80d3 	beq.w	8023d80 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8023bda:	787e      	ldrb	r6, [r7, #1]
 8023bdc:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 8023be0:	4426      	add	r6, r4
 8023be2:	2900      	cmp	r1, #0
 8023be4:	f000 80d4 	beq.w	8023d90 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29c>
 8023be8:	18b8      	adds	r0, r7, r2
 8023bea:	5cba      	ldrb	r2, [r7, r2]
 8023bec:	7840      	ldrb	r0, [r0, #1]
 8023bee:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8023bf2:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8023bf6:	4422      	add	r2, r4
 8023bf8:	4420      	add	r0, r4
 8023bfa:	b29b      	uxth	r3, r3
 8023bfc:	b289      	uxth	r1, r1
 8023bfe:	fb03 f901 	mul.w	r9, r3, r1
 8023c02:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8023c06:	011b      	lsls	r3, r3, #4
 8023c08:	b289      	uxth	r1, r1
 8023c0a:	78b7      	ldrb	r7, [r6, #2]
 8023c0c:	f89c a002 	ldrb.w	sl, [ip, #2]
 8023c10:	f89c c001 	ldrb.w	ip, [ip, #1]
 8023c14:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 8023c18:	eba3 0309 	sub.w	r3, r3, r9
 8023c1c:	b29b      	uxth	r3, r3
 8023c1e:	ebae 0e01 	sub.w	lr, lr, r1
 8023c22:	fa1f fe8e 	uxth.w	lr, lr
 8023c26:	435f      	muls	r7, r3
 8023c28:	fb0e 770a 	mla	r7, lr, sl, r7
 8023c2c:	f892 a002 	ldrb.w	sl, [r2, #2]
 8023c30:	fb01 770a 	mla	r7, r1, sl, r7
 8023c34:	f890 a002 	ldrb.w	sl, [r0, #2]
 8023c38:	fb09 7a0a 	mla	sl, r9, sl, r7
 8023c3c:	f814 7008 	ldrb.w	r7, [r4, r8]
 8023c40:	f896 8000 	ldrb.w	r8, [r6]
 8023c44:	7876      	ldrb	r6, [r6, #1]
 8023c46:	fb03 f808 	mul.w	r8, r3, r8
 8023c4a:	fb0e 8807 	mla	r8, lr, r7, r8
 8023c4e:	7817      	ldrb	r7, [r2, #0]
 8023c50:	fb01 8807 	mla	r8, r1, r7, r8
 8023c54:	7807      	ldrb	r7, [r0, #0]
 8023c56:	fb09 8707 	mla	r7, r9, r7, r8
 8023c5a:	f40a 4a78 	and.w	sl, sl, #63488	; 0xf800
 8023c5e:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8023c62:	ea47 070a 	orr.w	r7, r7, sl
 8023c66:	4373      	muls	r3, r6
 8023c68:	f892 a001 	ldrb.w	sl, [r2, #1]
 8023c6c:	fb0e 330c 	mla	r3, lr, ip, r3
 8023c70:	fb01 310a 	mla	r1, r1, sl, r3
 8023c74:	f890 a001 	ldrb.w	sl, [r0, #1]
 8023c78:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8023c7a:	fb09 1a0a 	mla	sl, r9, sl, r1
 8023c7e:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8023c82:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8023c86:	ea47 070a 	orr.w	r7, r7, sl
 8023c8a:	801f      	strh	r7, [r3, #0]
 8023c8c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8023c8e:	3302      	adds	r3, #2
 8023c90:	9309      	str	r3, [sp, #36]	; 0x24
 8023c92:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8023c94:	449b      	add	fp, r3
 8023c96:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8023c98:	441d      	add	r5, r3
 8023c9a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8023c9c:	3b01      	subs	r3, #1
 8023c9e:	930b      	str	r3, [sp, #44]	; 0x2c
 8023ca0:	e76f      	b.n	8023b82 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8023ca2:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8023ca4:	449b      	add	fp, r3
 8023ca6:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8023ca8:	441d      	add	r5, r3
 8023caa:	9b06      	ldr	r3, [sp, #24]
 8023cac:	3b01      	subs	r3, #1
 8023cae:	9306      	str	r3, [sp, #24]
 8023cb0:	9b07      	ldr	r3, [sp, #28]
 8023cb2:	3302      	adds	r3, #2
 8023cb4:	9307      	str	r3, [sp, #28]
 8023cb6:	e744      	b.n	8023b42 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e>
 8023cb8:	d023      	beq.n	8023d02 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20e>
 8023cba:	9b06      	ldr	r3, [sp, #24]
 8023cbc:	981b      	ldr	r0, [sp, #108]	; 0x6c
 8023cbe:	3b01      	subs	r3, #1
 8023cc0:	fb00 b003 	mla	r0, r0, r3, fp
 8023cc4:	1400      	asrs	r0, r0, #16
 8023cc6:	f53f af58 	bmi.w	8023b7a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8023cca:	3901      	subs	r1, #1
 8023ccc:	4288      	cmp	r0, r1
 8023cce:	f6bf af54 	bge.w	8023b7a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8023cd2:	991c      	ldr	r1, [sp, #112]	; 0x70
 8023cd4:	fb01 5303 	mla	r3, r1, r3, r5
 8023cd8:	141b      	asrs	r3, r3, #16
 8023cda:	f53f af4e 	bmi.w	8023b7a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8023cde:	3a01      	subs	r2, #1
 8023ce0:	4293      	cmp	r3, r2
 8023ce2:	f6bf af4a 	bge.w	8023b7a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8023ce6:	9b06      	ldr	r3, [sp, #24]
 8023ce8:	9309      	str	r3, [sp, #36]	; 0x24
 8023cea:	9b07      	ldr	r3, [sp, #28]
 8023cec:	930b      	str	r3, [sp, #44]	; 0x2c
 8023cee:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8023cf0:	2b00      	cmp	r3, #0
 8023cf2:	dc70      	bgt.n	8023dd6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e2>
 8023cf4:	9b06      	ldr	r3, [sp, #24]
 8023cf6:	9a07      	ldr	r2, [sp, #28]
 8023cf8:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8023cfc:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8023d00:	9307      	str	r3, [sp, #28]
 8023d02:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8023d04:	2b00      	cmp	r3, #0
 8023d06:	f340 80eb 	ble.w	8023ee0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ec>
 8023d0a:	ee30 0a04 	vadd.f32	s0, s0, s8
 8023d0e:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8023d12:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8023d16:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8023d18:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8023d1c:	ee31 1a05 	vadd.f32	s2, s2, s10
 8023d20:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8023d24:	eef0 6a62 	vmov.f32	s13, s5
 8023d28:	ee61 7a27 	vmul.f32	s15, s2, s15
 8023d2c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8023d30:	ee77 2a62 	vsub.f32	s5, s14, s5
 8023d34:	ee16 ba90 	vmov	fp, s13
 8023d38:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8023d3c:	eef0 6a43 	vmov.f32	s13, s6
 8023d40:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8023d44:	ee12 2a90 	vmov	r2, s5
 8023d48:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8023d4c:	fb92 f3f3 	sdiv	r3, r2, r3
 8023d50:	ee13 2a10 	vmov	r2, s6
 8023d54:	931b      	str	r3, [sp, #108]	; 0x6c
 8023d56:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8023d58:	fb92 f3f3 	sdiv	r3, r2, r3
 8023d5c:	931c      	str	r3, [sp, #112]	; 0x70
 8023d5e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8023d60:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8023d62:	3b01      	subs	r3, #1
 8023d64:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8023d68:	930a      	str	r3, [sp, #40]	; 0x28
 8023d6a:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8023d6c:	bf08      	it	eq
 8023d6e:	4613      	moveq	r3, r2
 8023d70:	ee16 5a90 	vmov	r5, s13
 8023d74:	9306      	str	r3, [sp, #24]
 8023d76:	eeb0 3a67 	vmov.f32	s6, s15
 8023d7a:	eef0 2a47 	vmov.f32	s5, s14
 8023d7e:	e6d2      	b.n	8023b26 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 8023d80:	b149      	cbz	r1, 8023d96 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 8023d82:	5cba      	ldrb	r2, [r7, r2]
 8023d84:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8023d88:	4422      	add	r2, r4
 8023d8a:	4660      	mov	r0, ip
 8023d8c:	4666      	mov	r6, ip
 8023d8e:	e734      	b.n	8023bfa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 8023d90:	4660      	mov	r0, ip
 8023d92:	4662      	mov	r2, ip
 8023d94:	e731      	b.n	8023bfa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 8023d96:	4660      	mov	r0, ip
 8023d98:	4662      	mov	r2, ip
 8023d9a:	e7f7      	b.n	8023d8c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x298>
 8023d9c:	f110 0c01 	adds.w	ip, r0, #1
 8023da0:	f53f af74 	bmi.w	8023c8c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8023da4:	4562      	cmp	r2, ip
 8023da6:	f6ff af71 	blt.w	8023c8c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8023daa:	f116 0c01 	adds.w	ip, r6, #1
 8023dae:	f53f af6d 	bmi.w	8023c8c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8023db2:	4567      	cmp	r7, ip
 8023db4:	f6ff af6a 	blt.w	8023c8c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8023db8:	b23f      	sxth	r7, r7
 8023dba:	b212      	sxth	r2, r2
 8023dbc:	e9cd 3104 	strd	r3, r1, [sp, #16]
 8023dc0:	e9cd 0602 	strd	r0, r6, [sp, #8]
 8023dc4:	9200      	str	r2, [sp, #0]
 8023dc6:	9701      	str	r7, [sp, #4]
 8023dc8:	4623      	mov	r3, r4
 8023dca:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 8023dce:	980d      	ldr	r0, [sp, #52]	; 0x34
 8023dd0:	f7ff fde6 	bl	80239a0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>
 8023dd4:	e75a      	b.n	8023c8c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8023dd6:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8023dd8:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 8023ddc:	ea4f 462b 	mov.w	r6, fp, asr #16
 8023de0:	1428      	asrs	r0, r5, #16
 8023de2:	fb02 6000 	mla	r0, r2, r0, r6
 8023de6:	9e08      	ldr	r6, [sp, #32]
 8023de8:	f816 8000 	ldrb.w	r8, [r6, r0]
 8023dec:	f3cb 3303 	ubfx	r3, fp, #12, #4
 8023df0:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 8023df4:	f3c5 3103 	ubfx	r1, r5, #12, #4
 8023df8:	1837      	adds	r7, r6, r0
 8023dfa:	eb04 0c08 	add.w	ip, r4, r8
 8023dfe:	2b00      	cmp	r3, #0
 8023e00:	d060      	beq.n	8023ec4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d0>
 8023e02:	787e      	ldrb	r6, [r7, #1]
 8023e04:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 8023e08:	4426      	add	r6, r4
 8023e0a:	2900      	cmp	r1, #0
 8023e0c:	d062      	beq.n	8023ed4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e0>
 8023e0e:	18b8      	adds	r0, r7, r2
 8023e10:	5cba      	ldrb	r2, [r7, r2]
 8023e12:	7840      	ldrb	r0, [r0, #1]
 8023e14:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8023e18:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8023e1c:	4422      	add	r2, r4
 8023e1e:	4420      	add	r0, r4
 8023e20:	b29b      	uxth	r3, r3
 8023e22:	b289      	uxth	r1, r1
 8023e24:	fb03 f901 	mul.w	r9, r3, r1
 8023e28:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8023e2c:	011b      	lsls	r3, r3, #4
 8023e2e:	b289      	uxth	r1, r1
 8023e30:	78b7      	ldrb	r7, [r6, #2]
 8023e32:	f89c a002 	ldrb.w	sl, [ip, #2]
 8023e36:	f89c c001 	ldrb.w	ip, [ip, #1]
 8023e3a:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 8023e3e:	eba3 0309 	sub.w	r3, r3, r9
 8023e42:	b29b      	uxth	r3, r3
 8023e44:	ebae 0e01 	sub.w	lr, lr, r1
 8023e48:	fa1f fe8e 	uxth.w	lr, lr
 8023e4c:	435f      	muls	r7, r3
 8023e4e:	fb0e 770a 	mla	r7, lr, sl, r7
 8023e52:	f892 a002 	ldrb.w	sl, [r2, #2]
 8023e56:	fb01 770a 	mla	r7, r1, sl, r7
 8023e5a:	f890 a002 	ldrb.w	sl, [r0, #2]
 8023e5e:	fb09 7a0a 	mla	sl, r9, sl, r7
 8023e62:	f814 7008 	ldrb.w	r7, [r4, r8]
 8023e66:	f896 8000 	ldrb.w	r8, [r6]
 8023e6a:	7876      	ldrb	r6, [r6, #1]
 8023e6c:	fb03 f808 	mul.w	r8, r3, r8
 8023e70:	fb0e 8807 	mla	r8, lr, r7, r8
 8023e74:	7817      	ldrb	r7, [r2, #0]
 8023e76:	fb01 8807 	mla	r8, r1, r7, r8
 8023e7a:	7807      	ldrb	r7, [r0, #0]
 8023e7c:	fb09 8707 	mla	r7, r9, r7, r8
 8023e80:	f40a 4a78 	and.w	sl, sl, #63488	; 0xf800
 8023e84:	4373      	muls	r3, r6
 8023e86:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8023e8a:	7856      	ldrb	r6, [r2, #1]
 8023e8c:	ea47 070a 	orr.w	r7, r7, sl
 8023e90:	fb0e 330c 	mla	r3, lr, ip, r3
 8023e94:	f890 a001 	ldrb.w	sl, [r0, #1]
 8023e98:	fb01 3306 	mla	r3, r1, r6, r3
 8023e9c:	fb09 3a0a 	mla	sl, r9, sl, r3
 8023ea0:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8023ea4:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8023ea6:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8023eaa:	ea47 070a 	orr.w	r7, r7, sl
 8023eae:	f823 7b02 	strh.w	r7, [r3], #2
 8023eb2:	930b      	str	r3, [sp, #44]	; 0x2c
 8023eb4:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8023eb6:	449b      	add	fp, r3
 8023eb8:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8023eba:	441d      	add	r5, r3
 8023ebc:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8023ebe:	3b01      	subs	r3, #1
 8023ec0:	9309      	str	r3, [sp, #36]	; 0x24
 8023ec2:	e714      	b.n	8023cee <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
 8023ec4:	b149      	cbz	r1, 8023eda <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 8023ec6:	5cba      	ldrb	r2, [r7, r2]
 8023ec8:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8023ecc:	4422      	add	r2, r4
 8023ece:	4660      	mov	r0, ip
 8023ed0:	4666      	mov	r6, ip
 8023ed2:	e7a5      	b.n	8023e20 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32c>
 8023ed4:	4660      	mov	r0, ip
 8023ed6:	4662      	mov	r2, ip
 8023ed8:	e7a2      	b.n	8023e20 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32c>
 8023eda:	4660      	mov	r0, ip
 8023edc:	4662      	mov	r2, ip
 8023ede:	e7f7      	b.n	8023ed0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3dc>
 8023ee0:	b00f      	add	sp, #60	; 0x3c
 8023ee2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08023ee6 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>:
 8023ee6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8023eea:	b085      	sub	sp, #20
 8023eec:	e9dd 7410 	ldrd	r7, r4, [sp, #64]	; 0x40
 8023ef0:	f9bd c038 	ldrsh.w	ip, [sp, #56]	; 0x38
 8023ef4:	9102      	str	r1, [sp, #8]
 8023ef6:	2c00      	cmp	r4, #0
 8023ef8:	fb04 710c 	mla	r1, r4, ip, r7
 8023efc:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	; 0x3c
 8023f00:	f89d 6048 	ldrb.w	r6, [sp, #72]	; 0x48
 8023f04:	f89d 004c 	ldrb.w	r0, [sp, #76]	; 0x4c
 8023f08:	eb02 0e01 	add.w	lr, r2, r1
 8023f0c:	f2c0 8122 	blt.w	8024154 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
 8023f10:	45a0      	cmp	r8, r4
 8023f12:	f340 811f 	ble.w	8024154 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
 8023f16:	2f00      	cmp	r7, #0
 8023f18:	f2c0 811a 	blt.w	8024150 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
 8023f1c:	45bc      	cmp	ip, r7
 8023f1e:	f340 8117 	ble.w	8024150 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
 8023f22:	5c52      	ldrb	r2, [r2, r1]
 8023f24:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 8023f28:	1c7a      	adds	r2, r7, #1
 8023f2a:	f100 8116 	bmi.w	802415a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
 8023f2e:	4594      	cmp	ip, r2
 8023f30:	f340 8113 	ble.w	802415a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
 8023f34:	2e00      	cmp	r6, #0
 8023f36:	f000 8112 	beq.w	802415e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x278>
 8023f3a:	f89e 2001 	ldrb.w	r2, [lr, #1]
 8023f3e:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 8023f42:	3401      	adds	r4, #1
 8023f44:	f100 810f 	bmi.w	8024166 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
 8023f48:	45a0      	cmp	r8, r4
 8023f4a:	f340 810c 	ble.w	8024166 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
 8023f4e:	2800      	cmp	r0, #0
 8023f50:	f000 810c 	beq.w	802416c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x286>
 8023f54:	2f00      	cmp	r7, #0
 8023f56:	f2c0 8104 	blt.w	8024162 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
 8023f5a:	45bc      	cmp	ip, r7
 8023f5c:	f340 8101 	ble.w	8024162 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
 8023f60:	f81e 200c 	ldrb.w	r2, [lr, ip]
 8023f64:	f853 4022 	ldr.w	r4, [r3, r2, lsl #2]
 8023f68:	3701      	adds	r7, #1
 8023f6a:	f100 8102 	bmi.w	8024172 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
 8023f6e:	45bc      	cmp	ip, r7
 8023f70:	f340 80ff 	ble.w	8024172 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
 8023f74:	2e00      	cmp	r6, #0
 8023f76:	f000 80fe 	beq.w	8024176 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x290>
 8023f7a:	44f4      	add	ip, lr
 8023f7c:	f89c 2001 	ldrb.w	r2, [ip, #1]
 8023f80:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 8023f84:	b2b6      	uxth	r6, r6
 8023f86:	b280      	uxth	r0, r0
 8023f88:	fb00 fe06 	mul.w	lr, r0, r6
 8023f8c:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 8023f90:	0136      	lsls	r6, r6, #4
 8023f92:	eba6 070e 	sub.w	r7, r6, lr
 8023f96:	b280      	uxth	r0, r0
 8023f98:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
 8023f9c:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 8023fa0:	b2bf      	uxth	r7, r7
 8023fa2:	1a1b      	subs	r3, r3, r0
 8023fa4:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 8023fa8:	b29b      	uxth	r3, r3
 8023faa:	fb0a f607 	mul.w	r6, sl, r7
 8023fae:	ea4f 6914 	mov.w	r9, r4, lsr #24
 8023fb2:	fb0b 6603 	mla	r6, fp, r3, r6
 8023fb6:	ea4f 6812 	mov.w	r8, r2, lsr #24
 8023fba:	fb00 6609 	mla	r6, r0, r9, r6
 8023fbe:	fb0e 6608 	mla	r6, lr, r8, r6
 8023fc2:	f3c6 2607 	ubfx	r6, r6, #8, #8
 8023fc6:	9600      	str	r6, [sp, #0]
 8023fc8:	2e00      	cmp	r6, #0
 8023fca:	f000 80be 	beq.w	802414a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x264>
 8023fce:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8023fd2:	fb0b fc0c 	mul.w	ip, fp, ip
 8023fd6:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 8023fda:	fb0b f505 	mul.w	r5, fp, r5
 8023fde:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 8023fe2:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
 8023fe6:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8023fea:	44dc      	add	ip, fp
 8023fec:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8023ff0:	9501      	str	r5, [sp, #4]
 8023ff2:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
 8023ff6:	9503      	str	r5, [sp, #12]
 8023ff8:	9d01      	ldr	r5, [sp, #4]
 8023ffa:	9e02      	ldr	r6, [sp, #8]
 8023ffc:	f505 7c80 	add.w	ip, r5, #256	; 0x100
 8024000:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 8024004:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
 8024008:	fb0a fc0c 	mul.w	ip, sl, ip
 802400c:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 8024010:	ea4f 251c 	mov.w	r5, ip, lsr #8
 8024014:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8024018:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 802401c:	4465      	add	r5, ip
 802401e:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8024022:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 8024026:	fb09 fc0c 	mul.w	ip, r9, ip
 802402a:	fb09 f904 	mul.w	r9, r9, r4
 802402e:	f509 7480 	add.w	r4, r9, #256	; 0x100
 8024032:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 8024036:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
 802403a:	fb08 f404 	mul.w	r4, r8, r4
 802403e:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 8024042:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8024046:	fb08 f802 	mul.w	r8, r8, r2
 802404a:	fb0a fa01 	mul.w	sl, sl, r1
 802404e:	0a22      	lsrs	r2, r4, #8
 8024050:	f50a 7180 	add.w	r1, sl, #256	; 0x100
 8024054:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8024058:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
 802405c:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 8024060:	4414      	add	r4, r2
 8024062:	ea4f 211c 	mov.w	r1, ip, lsr #8
 8024066:	f508 7280 	add.w	r2, r8, #256	; 0x100
 802406a:	0a2d      	lsrs	r5, r5, #8
 802406c:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 8024070:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8024074:	9a03      	ldr	r2, [sp, #12]
 8024076:	8836      	ldrh	r6, [r6, #0]
 8024078:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 802407c:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8024080:	437d      	muls	r5, r7
 8024082:	4461      	add	r1, ip
 8024084:	0a24      	lsrs	r4, r4, #8
 8024086:	fb02 5503 	mla	r5, r2, r3, r5
 802408a:	0a09      	lsrs	r1, r1, #8
 802408c:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8024090:	fb04 540e 	mla	r4, r4, lr, r5
 8024094:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 8024098:	fb01 4100 	mla	r1, r1, r0, r4
 802409c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80240a0:	0a09      	lsrs	r1, r1, #8
 80240a2:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80240a6:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
 80240aa:	fb07 f70a 	mul.w	r7, r7, sl
 80240ae:	ea4f 2818 	mov.w	r8, r8, lsr #8
 80240b2:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
 80240b6:	fb03 7101 	mla	r1, r3, r1, r7
 80240ba:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80240be:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 80240c2:	fb0e 1e08 	mla	lr, lr, r8, r1
 80240c6:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
 80240ca:	fb00 e101 	mla	r1, r0, r1, lr
 80240ce:	f89d 0050 	ldrb.w	r0, [sp, #80]	; 0x50
 80240d2:	9a00      	ldr	r2, [sp, #0]
 80240d4:	b287      	uxth	r7, r0
 80240d6:	437a      	muls	r2, r7
 80240d8:	0a09      	lsrs	r1, r1, #8
 80240da:	1c53      	adds	r3, r2, #1
 80240dc:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 80240e0:	4321      	orrs	r1, r4
 80240e2:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 80240e6:	1235      	asrs	r5, r6, #8
 80240e8:	0c0a      	lsrs	r2, r1, #16
 80240ea:	ea6f 2313 	mvn.w	r3, r3, lsr #8
 80240ee:	b2db      	uxtb	r3, r3
 80240f0:	fb12 f207 	smulbb	r2, r2, r7
 80240f4:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 80240f8:	fb05 2503 	mla	r5, r5, r3, r2
 80240fc:	f3c1 2407 	ubfx	r4, r1, #8, #8
 8024100:	10f2      	asrs	r2, r6, #3
 8024102:	b2c8      	uxtb	r0, r1
 8024104:	00f6      	lsls	r6, r6, #3
 8024106:	fb14 f407 	smulbb	r4, r4, r7
 802410a:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 802410e:	b2f6      	uxtb	r6, r6
 8024110:	fb10 f007 	smulbb	r0, r0, r7
 8024114:	fb02 4203 	mla	r2, r2, r3, r4
 8024118:	b2ad      	uxth	r5, r5
 802411a:	fb06 0303 	mla	r3, r6, r3, r0
 802411e:	b299      	uxth	r1, r3
 8024120:	b294      	uxth	r4, r2
 8024122:	1c6b      	adds	r3, r5, #1
 8024124:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8024128:	1c62      	adds	r2, r4, #1
 802412a:	1c4b      	adds	r3, r1, #1
 802412c:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 8024130:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 8024134:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8024138:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 802413c:	0952      	lsrs	r2, r2, #5
 802413e:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8024142:	432b      	orrs	r3, r5
 8024144:	4313      	orrs	r3, r2
 8024146:	9a02      	ldr	r2, [sp, #8]
 8024148:	8013      	strh	r3, [r2, #0]
 802414a:	b005      	add	sp, #20
 802414c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8024150:	2500      	movs	r5, #0
 8024152:	e6e9      	b.n	8023f28 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x42>
 8024154:	2100      	movs	r1, #0
 8024156:	460d      	mov	r5, r1
 8024158:	e6f3      	b.n	8023f42 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 802415a:	2100      	movs	r1, #0
 802415c:	e6f1      	b.n	8023f42 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 802415e:	4631      	mov	r1, r6
 8024160:	e6ef      	b.n	8023f42 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 8024162:	2400      	movs	r4, #0
 8024164:	e700      	b.n	8023f68 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x82>
 8024166:	2200      	movs	r2, #0
 8024168:	4614      	mov	r4, r2
 802416a:	e70b      	b.n	8023f84 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 802416c:	4602      	mov	r2, r0
 802416e:	4604      	mov	r4, r0
 8024170:	e708      	b.n	8023f84 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 8024172:	2200      	movs	r2, #0
 8024174:	e706      	b.n	8023f84 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 8024176:	4632      	mov	r2, r6
 8024178:	e704      	b.n	8023f84 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>

0802417a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 802417a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802417e:	b09f      	sub	sp, #124	; 0x7c
 8024180:	921b      	str	r2, [sp, #108]	; 0x6c
 8024182:	9309      	str	r3, [sp, #36]	; 0x24
 8024184:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 8024186:	f89d 30c4 	ldrb.w	r3, [sp, #196]	; 0xc4
 802418a:	931c      	str	r3, [sp, #112]	; 0x70
 802418c:	9119      	str	r1, [sp, #100]	; 0x64
 802418e:	e9dd 132e 	ldrd	r1, r3, [sp, #184]	; 0xb8
 8024192:	901d      	str	r0, [sp, #116]	; 0x74
 8024194:	6850      	ldr	r0, [r2, #4]
 8024196:	6812      	ldr	r2, [r2, #0]
 8024198:	9d2a      	ldr	r5, [sp, #168]	; 0xa8
 802419a:	fb00 1303 	mla	r3, r0, r3, r1
 802419e:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80241a2:	930c      	str	r3, [sp, #48]	; 0x30
 80241a4:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 80241a6:	681b      	ldr	r3, [r3, #0]
 80241a8:	9312      	str	r3, [sp, #72]	; 0x48
 80241aa:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 80241ac:	685e      	ldr	r6, [r3, #4]
 80241ae:	f8bd 3070 	ldrh.w	r3, [sp, #112]	; 0x70
 80241b2:	930d      	str	r3, [sp, #52]	; 0x34
 80241b4:	3604      	adds	r6, #4
 80241b6:	9b19      	ldr	r3, [sp, #100]	; 0x64
 80241b8:	2b00      	cmp	r3, #0
 80241ba:	dc03      	bgt.n	80241c4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 80241bc:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 80241be:	2b00      	cmp	r3, #0
 80241c0:	f340 8388 	ble.w	80248d4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x75a>
 80241c4:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 80241c6:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80241ca:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80241ce:	1e48      	subs	r0, r1, #1
 80241d0:	1e57      	subs	r7, r2, #1
 80241d2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80241d4:	2b00      	cmp	r3, #0
 80241d6:	f340 8195 	ble.w	8024504 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 80241da:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 80241dc:	ea5f 4c24 	movs.w	ip, r4, asr #16
 80241e0:	ea4f 4325 	mov.w	r3, r5, asr #16
 80241e4:	d406      	bmi.n	80241f4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 80241e6:	4584      	cmp	ip, r0
 80241e8:	da04      	bge.n	80241f4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 80241ea:	2b00      	cmp	r3, #0
 80241ec:	db02      	blt.n	80241f4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 80241ee:	42bb      	cmp	r3, r7
 80241f0:	f2c0 8189 	blt.w	8024506 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38c>
 80241f4:	f11c 0c01 	adds.w	ip, ip, #1
 80241f8:	f100 8177 	bmi.w	80244ea <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 80241fc:	4561      	cmp	r1, ip
 80241fe:	f2c0 8174 	blt.w	80244ea <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 8024202:	3301      	adds	r3, #1
 8024204:	f100 8171 	bmi.w	80244ea <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 8024208:	429a      	cmp	r2, r3
 802420a:	f2c0 816e 	blt.w	80244ea <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 802420e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8024210:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 8024212:	931a      	str	r3, [sp, #104]	; 0x68
 8024214:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 8024216:	2b00      	cmp	r3, #0
 8024218:	f340 8193 	ble.w	8024542 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c8>
 802421c:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 802421e:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8024222:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8024224:	e9d3 0e02 	ldrd	r0, lr, [r3, #8]
 8024228:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 802422a:	141b      	asrs	r3, r3, #16
 802422c:	ea4f 4c25 	mov.w	ip, r5, asr #16
 8024230:	f3c5 3103 	ubfx	r1, r5, #12, #4
 8024234:	f100 81d6 	bmi.w	80245e4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 8024238:	f100 38ff 	add.w	r8, r0, #4294967295
 802423c:	4543      	cmp	r3, r8
 802423e:	f280 81d1 	bge.w	80245e4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 8024242:	f1bc 0f00 	cmp.w	ip, #0
 8024246:	f2c0 81cd 	blt.w	80245e4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 802424a:	f10e 38ff 	add.w	r8, lr, #4294967295
 802424e:	45c4      	cmp	ip, r8
 8024250:	f280 81c8 	bge.w	80245e4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 8024254:	b200      	sxth	r0, r0
 8024256:	fb0c 3300 	mla	r3, ip, r0, r3
 802425a:	9c12      	ldr	r4, [sp, #72]	; 0x48
 802425c:	eb04 0803 	add.w	r8, r4, r3
 8024260:	5ce3      	ldrb	r3, [r4, r3]
 8024262:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 8024266:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 802426a:	2a00      	cmp	r2, #0
 802426c:	f000 81af 	beq.w	80245ce <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 8024270:	f898 c001 	ldrb.w	ip, [r8, #1]
 8024274:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 8024278:	940e      	str	r4, [sp, #56]	; 0x38
 802427a:	0e24      	lsrs	r4, r4, #24
 802427c:	9415      	str	r4, [sp, #84]	; 0x54
 802427e:	b179      	cbz	r1, 80242a0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 8024280:	eb08 0c00 	add.w	ip, r8, r0
 8024284:	f818 0000 	ldrb.w	r0, [r8, r0]
 8024288:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 802428c:	900a      	str	r0, [sp, #40]	; 0x28
 802428e:	0e00      	lsrs	r0, r0, #24
 8024290:	9013      	str	r0, [sp, #76]	; 0x4c
 8024292:	f89c 0001 	ldrb.w	r0, [ip, #1]
 8024296:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 802429a:	900f      	str	r0, [sp, #60]	; 0x3c
 802429c:	0e00      	lsrs	r0, r0, #24
 802429e:	9016      	str	r0, [sp, #88]	; 0x58
 80242a0:	b292      	uxth	r2, r2
 80242a2:	b289      	uxth	r1, r1
 80242a4:	fb02 f901 	mul.w	r9, r2, r1
 80242a8:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 80242ac:	0112      	lsls	r2, r2, #4
 80242ae:	eba2 0809 	sub.w	r8, r2, r9
 80242b2:	b289      	uxth	r1, r1
 80242b4:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 80242b8:	9815      	ldr	r0, [sp, #84]	; 0x54
 80242ba:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 80242bc:	fa1f f888 	uxth.w	r8, r8
 80242c0:	1a52      	subs	r2, r2, r1
 80242c2:	b292      	uxth	r2, r2
 80242c4:	fb08 f000 	mul.w	r0, r8, r0
 80242c8:	fb02 000e 	mla	r0, r2, lr, r0
 80242cc:	fb01 0004 	mla	r0, r1, r4, r0
 80242d0:	9c16      	ldr	r4, [sp, #88]	; 0x58
 80242d2:	fb09 0004 	mla	r0, r9, r4, r0
 80242d6:	f3c0 2007 	ubfx	r0, r0, #8, #8
 80242da:	2800      	cmp	r0, #0
 80242dc:	f000 80fa 	beq.w	80244d4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 80242e0:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 80242e4:	d01b      	beq.n	802431e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 80242e6:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 80242ea:	fb0e fa0a 	mul.w	sl, lr, sl
 80242ee:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80242f2:	fb0e fe03 	mul.w	lr, lr, r3
 80242f6:	ea4f 231a 	mov.w	r3, sl, lsr #8
 80242fa:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80242fe:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8024302:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 8024306:	4453      	add	r3, sl
 8024308:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 802430c:	0a1b      	lsrs	r3, r3, #8
 802430e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8024312:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8024316:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 802431a:	ea43 030c 	orr.w	r3, r3, ip
 802431e:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8024320:	2cff      	cmp	r4, #255	; 0xff
 8024322:	d021      	beq.n	8024368 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8024324:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8024326:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 802432a:	9c15      	ldr	r4, [sp, #84]	; 0x54
 802432c:	fb04 fb0b 	mul.w	fp, r4, fp
 8024330:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8024332:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8024336:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8024338:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 802433c:	fb04 fa0a 	mul.w	sl, r4, sl
 8024340:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8024344:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8024348:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 802434c:	44de      	add	lr, fp
 802434e:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8024352:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8024356:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802435a:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 802435e:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8024362:	ea4e 040a 	orr.w	r4, lr, sl
 8024366:	940e      	str	r4, [sp, #56]	; 0x38
 8024368:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 802436a:	2cff      	cmp	r4, #255	; 0xff
 802436c:	d021      	beq.n	80243b2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x238>
 802436e:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8024370:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8024374:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8024376:	fb04 fb0b 	mul.w	fp, r4, fp
 802437a:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 802437c:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8024380:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8024382:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8024386:	fb04 fa0a 	mul.w	sl, r4, sl
 802438a:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 802438e:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8024392:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8024396:	44de      	add	lr, fp
 8024398:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 802439c:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80243a0:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80243a4:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80243a8:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80243ac:	ea4e 040a 	orr.w	r4, lr, sl
 80243b0:	940a      	str	r4, [sp, #40]	; 0x28
 80243b2:	9c16      	ldr	r4, [sp, #88]	; 0x58
 80243b4:	2cff      	cmp	r4, #255	; 0xff
 80243b6:	d021      	beq.n	80243fc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x282>
 80243b8:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 80243ba:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 80243be:	9c16      	ldr	r4, [sp, #88]	; 0x58
 80243c0:	fb04 fb0b 	mul.w	fp, r4, fp
 80243c4:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 80243c6:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 80243ca:	9c16      	ldr	r4, [sp, #88]	; 0x58
 80243cc:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 80243d0:	fb04 fa0a 	mul.w	sl, r4, sl
 80243d4:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80243d8:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 80243dc:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 80243e0:	44de      	add	lr, fp
 80243e2:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 80243e6:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80243ea:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80243ee:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80243f2:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80243f6:	ea4e 040a 	orr.w	r4, lr, sl
 80243fa:	940f      	str	r4, [sp, #60]	; 0x3c
 80243fc:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 80243fe:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8024402:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8024404:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
 8024408:	fb08 fc0c 	mul.w	ip, r8, ip
 802440c:	fb02 cc0e 	mla	ip, r2, lr, ip
 8024410:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 8024414:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8024416:	fb01 cc0e 	mla	ip, r1, lr, ip
 802441a:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 802441e:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8024420:	fb09 cc0e 	mla	ip, r9, lr, ip
 8024424:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
 8024428:	fb08 f80e 	mul.w	r8, r8, lr
 802442c:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8024430:	fb02 8303 	mla	r3, r2, r3, r8
 8024434:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8024436:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8024438:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 802443c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 802443e:	fb01 330a 	mla	r3, r1, sl, r3
 8024442:	f402 417f 	and.w	r1, r2, #65280	; 0xff00
 8024446:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8024448:	fb09 3901 	mla	r9, r9, r1, r3
 802444c:	4342      	muls	r2, r0
 802444e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8024452:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8024456:	883b      	ldrh	r3, [r7, #0]
 8024458:	1c50      	adds	r0, r2, #1
 802445a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802445e:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 8024462:	ea4c 0c09 	orr.w	ip, ip, r9
 8024466:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 802446a:	1219      	asrs	r1, r3, #8
 802446c:	ea4f 421c 	mov.w	r2, ip, lsr #16
 8024470:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 8024474:	b2c0      	uxtb	r0, r0
 8024476:	fb12 f204 	smulbb	r2, r2, r4
 802447a:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 802447e:	fb01 2100 	mla	r1, r1, r0, r2
 8024482:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 8024486:	10da      	asrs	r2, r3, #3
 8024488:	fa5f fc8c 	uxtb.w	ip, ip
 802448c:	00db      	lsls	r3, r3, #3
 802448e:	fb1c fc04 	smulbb	ip, ip, r4
 8024492:	b2db      	uxtb	r3, r3
 8024494:	b289      	uxth	r1, r1
 8024496:	fb03 c300 	mla	r3, r3, r0, ip
 802449a:	fa1f fc83 	uxth.w	ip, r3
 802449e:	1c4b      	adds	r3, r1, #1
 80244a0:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 80244a4:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 80244a8:	fb1e fe04 	smulbb	lr, lr, r4
 80244ac:	f10c 0301 	add.w	r3, ip, #1
 80244b0:	fb02 e200 	mla	r2, r2, r0, lr
 80244b4:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 80244b8:	b292      	uxth	r2, r2
 80244ba:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 80244be:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 80244c2:	430b      	orrs	r3, r1
 80244c4:	1c51      	adds	r1, r2, #1
 80244c6:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 80244ca:	0952      	lsrs	r2, r2, #5
 80244cc:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80244d0:	4313      	orrs	r3, r2
 80244d2:	803b      	strh	r3, [r7, #0]
 80244d4:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 80244d6:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 80244d8:	441a      	add	r2, r3
 80244da:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80244dc:	9229      	str	r2, [sp, #164]	; 0xa4
 80244de:	441d      	add	r5, r3
 80244e0:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 80244e2:	3b01      	subs	r3, #1
 80244e4:	3702      	adds	r7, #2
 80244e6:	931a      	str	r3, [sp, #104]	; 0x68
 80244e8:	e694      	b.n	8024214 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 80244ea:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 80244ec:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 80244ee:	441c      	add	r4, r3
 80244f0:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80244f2:	9429      	str	r4, [sp, #164]	; 0xa4
 80244f4:	441d      	add	r5, r3
 80244f6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80244f8:	3b01      	subs	r3, #1
 80244fa:	9309      	str	r3, [sp, #36]	; 0x24
 80244fc:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80244fe:	3302      	adds	r3, #2
 8024500:	930c      	str	r3, [sp, #48]	; 0x30
 8024502:	e666      	b.n	80241d2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 8024504:	d024      	beq.n	8024550 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d6>
 8024506:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8024508:	982b      	ldr	r0, [sp, #172]	; 0xac
 802450a:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 802450c:	3b01      	subs	r3, #1
 802450e:	fb00 4003 	mla	r0, r0, r3, r4
 8024512:	1400      	asrs	r0, r0, #16
 8024514:	f53f ae7b 	bmi.w	802420e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8024518:	3901      	subs	r1, #1
 802451a:	4288      	cmp	r0, r1
 802451c:	f6bf ae77 	bge.w	802420e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8024520:	992c      	ldr	r1, [sp, #176]	; 0xb0
 8024522:	fb01 5303 	mla	r3, r1, r3, r5
 8024526:	141b      	asrs	r3, r3, #16
 8024528:	f53f ae71 	bmi.w	802420e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 802452c:	3a01      	subs	r2, #1
 802452e:	4293      	cmp	r3, r2
 8024530:	f6bf ae6d 	bge.w	802420e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8024534:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 8024538:	f8dd 9030 	ldr.w	r9, [sp, #48]	; 0x30
 802453c:	f1bb 0f00 	cmp.w	fp, #0
 8024540:	dc70      	bgt.n	8024624 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4aa>
 8024542:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8024544:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8024548:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 802454a:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 802454e:	930c      	str	r3, [sp, #48]	; 0x30
 8024550:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8024552:	2b00      	cmp	r3, #0
 8024554:	f340 81be 	ble.w	80248d4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x75a>
 8024558:	ee30 0a04 	vadd.f32	s0, s0, s8
 802455c:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8024560:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8024564:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8024566:	ee70 0aa4 	vadd.f32	s1, s1, s9
 802456a:	ee31 1a05 	vadd.f32	s2, s2, s10
 802456e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8024572:	eef0 6a62 	vmov.f32	s13, s5
 8024576:	ee61 7a27 	vmul.f32	s15, s2, s15
 802457a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802457e:	ee77 2a62 	vsub.f32	s5, s14, s5
 8024582:	edcd 6a29 	vstr	s13, [sp, #164]	; 0xa4
 8024586:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 802458a:	eef0 6a43 	vmov.f32	s13, s6
 802458e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8024592:	ee12 2a90 	vmov	r2, s5
 8024596:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 802459a:	fb92 f3f3 	sdiv	r3, r2, r3
 802459e:	ee13 2a10 	vmov	r2, s6
 80245a2:	932b      	str	r3, [sp, #172]	; 0xac
 80245a4:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80245a6:	fb92 f3f3 	sdiv	r3, r2, r3
 80245aa:	932c      	str	r3, [sp, #176]	; 0xb0
 80245ac:	9b19      	ldr	r3, [sp, #100]	; 0x64
 80245ae:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
 80245b0:	3b01      	subs	r3, #1
 80245b2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80245b6:	9319      	str	r3, [sp, #100]	; 0x64
 80245b8:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80245ba:	bf08      	it	eq
 80245bc:	4613      	moveq	r3, r2
 80245be:	ee16 5a90 	vmov	r5, s13
 80245c2:	9309      	str	r3, [sp, #36]	; 0x24
 80245c4:	eeb0 3a67 	vmov.f32	s6, s15
 80245c8:	eef0 2a47 	vmov.f32	s5, s14
 80245cc:	e5f3      	b.n	80241b6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 80245ce:	2900      	cmp	r1, #0
 80245d0:	f43f ae66 	beq.w	80242a0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 80245d4:	f818 0000 	ldrb.w	r0, [r8, r0]
 80245d8:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 80245dc:	900a      	str	r0, [sp, #40]	; 0x28
 80245de:	0e00      	lsrs	r0, r0, #24
 80245e0:	9013      	str	r0, [sp, #76]	; 0x4c
 80245e2:	e65d      	b.n	80242a0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 80245e4:	f113 0801 	adds.w	r8, r3, #1
 80245e8:	f53f af74 	bmi.w	80244d4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 80245ec:	4540      	cmp	r0, r8
 80245ee:	f6ff af71 	blt.w	80244d4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 80245f2:	f11c 0801 	adds.w	r8, ip, #1
 80245f6:	f53f af6d 	bmi.w	80244d4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 80245fa:	45c6      	cmp	lr, r8
 80245fc:	f6ff af6a 	blt.w	80244d4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8024600:	9c1c      	ldr	r4, [sp, #112]	; 0x70
 8024602:	9302      	str	r3, [sp, #8]
 8024604:	b200      	sxth	r0, r0
 8024606:	fa0f f38e 	sxth.w	r3, lr
 802460a:	e9cd 1405 	strd	r1, r4, [sp, #20]
 802460e:	e9cd c203 	strd	ip, r2, [sp, #12]
 8024612:	9301      	str	r3, [sp, #4]
 8024614:	9000      	str	r0, [sp, #0]
 8024616:	4633      	mov	r3, r6
 8024618:	9a12      	ldr	r2, [sp, #72]	; 0x48
 802461a:	981d      	ldr	r0, [sp, #116]	; 0x74
 802461c:	4639      	mov	r1, r7
 802461e:	f7ff fc62 	bl	8023ee6 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>
 8024622:	e757      	b.n	80244d4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8024624:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8024626:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 8024628:	f3c3 3203 	ubfx	r2, r3, #12, #4
 802462c:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 802462e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8024632:	1427      	asrs	r7, r4, #16
 8024634:	142b      	asrs	r3, r5, #16
 8024636:	fb01 7303 	mla	r3, r1, r3, r7
 802463a:	9c12      	ldr	r4, [sp, #72]	; 0x48
 802463c:	18e7      	adds	r7, r4, r3
 802463e:	5ce3      	ldrb	r3, [r4, r3]
 8024640:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 8024644:	f3c5 3003 	ubfx	r0, r5, #12, #4
 8024648:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 802464c:	2a00      	cmp	r2, #0
 802464e:	f000 8137 	beq.w	80248c0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 8024652:	f897 e001 	ldrb.w	lr, [r7, #1]
 8024656:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 802465a:	9410      	str	r4, [sp, #64]	; 0x40
 802465c:	0e24      	lsrs	r4, r4, #24
 802465e:	9417      	str	r4, [sp, #92]	; 0x5c
 8024660:	b170      	cbz	r0, 8024680 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 8024662:	eb07 0e01 	add.w	lr, r7, r1
 8024666:	5c79      	ldrb	r1, [r7, r1]
 8024668:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 802466c:	910b      	str	r1, [sp, #44]	; 0x2c
 802466e:	0e09      	lsrs	r1, r1, #24
 8024670:	9114      	str	r1, [sp, #80]	; 0x50
 8024672:	f89e 1001 	ldrb.w	r1, [lr, #1]
 8024676:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 802467a:	9111      	str	r1, [sp, #68]	; 0x44
 802467c:	0e09      	lsrs	r1, r1, #24
 802467e:	9118      	str	r1, [sp, #96]	; 0x60
 8024680:	b292      	uxth	r2, r2
 8024682:	b280      	uxth	r0, r0
 8024684:	fb02 f800 	mul.w	r8, r2, r0
 8024688:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 802468c:	0112      	lsls	r2, r2, #4
 802468e:	eba2 0e08 	sub.w	lr, r2, r8
 8024692:	b280      	uxth	r0, r0
 8024694:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 8024698:	9917      	ldr	r1, [sp, #92]	; 0x5c
 802469a:	9c14      	ldr	r4, [sp, #80]	; 0x50
 802469c:	fa1f fe8e 	uxth.w	lr, lr
 80246a0:	1a12      	subs	r2, r2, r0
 80246a2:	b292      	uxth	r2, r2
 80246a4:	fb0e f101 	mul.w	r1, lr, r1
 80246a8:	fb02 110c 	mla	r1, r2, ip, r1
 80246ac:	fb00 1104 	mla	r1, r0, r4, r1
 80246b0:	9c18      	ldr	r4, [sp, #96]	; 0x60
 80246b2:	fb08 1104 	mla	r1, r8, r4, r1
 80246b6:	f3c1 2107 	ubfx	r1, r1, #8, #8
 80246ba:	2900      	cmp	r1, #0
 80246bc:	f000 80f5 	beq.w	80248aa <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 80246c0:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 80246c4:	d019      	beq.n	80246fa <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x580>
 80246c6:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 80246ca:	fb0c fa0a 	mul.w	sl, ip, sl
 80246ce:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80246d2:	fb0c fc03 	mul.w	ip, ip, r3
 80246d6:	ea4f 231a 	mov.w	r3, sl, lsr #8
 80246da:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80246de:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 80246e2:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 80246e6:	4453      	add	r3, sl
 80246e8:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 80246ec:	0a1b      	lsrs	r3, r3, #8
 80246ee:	0a3f      	lsrs	r7, r7, #8
 80246f0:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80246f4:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 80246f8:	433b      	orrs	r3, r7
 80246fa:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 80246fc:	2cff      	cmp	r4, #255	; 0xff
 80246fe:	d020      	beq.n	8024742 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c8>
 8024700:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8024702:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8024706:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 8024708:	4367      	muls	r7, r4
 802470a:	9c10      	ldr	r4, [sp, #64]	; 0x40
 802470c:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8024710:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 8024712:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8024716:	fb04 fa0a 	mul.w	sl, r4, sl
 802471a:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 802471e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8024722:	44bc      	add	ip, r7
 8024724:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8024728:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 802472c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8024730:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8024734:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8024738:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 802473c:	ea4c 040a 	orr.w	r4, ip, sl
 8024740:	9410      	str	r4, [sp, #64]	; 0x40
 8024742:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8024744:	2cff      	cmp	r4, #255	; 0xff
 8024746:	d020      	beq.n	802478a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x610>
 8024748:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 802474a:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 802474e:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8024750:	4367      	muls	r7, r4
 8024752:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8024754:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8024758:	9c14      	ldr	r4, [sp, #80]	; 0x50
 802475a:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 802475e:	fb04 fa0a 	mul.w	sl, r4, sl
 8024762:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8024766:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802476a:	44bc      	add	ip, r7
 802476c:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8024770:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8024774:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8024778:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802477c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8024780:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8024784:	ea4c 040a 	orr.w	r4, ip, sl
 8024788:	940b      	str	r4, [sp, #44]	; 0x2c
 802478a:	9c18      	ldr	r4, [sp, #96]	; 0x60
 802478c:	2cff      	cmp	r4, #255	; 0xff
 802478e:	d020      	beq.n	80247d2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x658>
 8024790:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8024792:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8024796:	9c18      	ldr	r4, [sp, #96]	; 0x60
 8024798:	4367      	muls	r7, r4
 802479a:	9c11      	ldr	r4, [sp, #68]	; 0x44
 802479c:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 80247a0:	9c18      	ldr	r4, [sp, #96]	; 0x60
 80247a2:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80247a6:	fb04 fa0a 	mul.w	sl, r4, sl
 80247aa:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 80247ae:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80247b2:	44bc      	add	ip, r7
 80247b4:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 80247b8:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80247bc:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80247c0:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80247c4:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80247c8:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80247cc:	ea4c 040a 	orr.w	r4, ip, sl
 80247d0:	9411      	str	r4, [sp, #68]	; 0x44
 80247d2:	9c10      	ldr	r4, [sp, #64]	; 0x40
 80247d4:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 80247d8:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 80247da:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 80247de:	fb0e f707 	mul.w	r7, lr, r7
 80247e2:	fb02 770c 	mla	r7, r2, ip, r7
 80247e6:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 80247ea:	9c11      	ldr	r4, [sp, #68]	; 0x44
 80247ec:	fb00 770c 	mla	r7, r0, ip, r7
 80247f0:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 80247f4:	9c10      	ldr	r4, [sp, #64]	; 0x40
 80247f6:	fb08 770c 	mla	r7, r8, ip, r7
 80247fa:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 80247fe:	fb0e fe0c 	mul.w	lr, lr, ip
 8024802:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8024806:	fb02 e303 	mla	r3, r2, r3, lr
 802480a:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 802480c:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 802480e:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 8024812:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8024814:	fb00 330a 	mla	r3, r0, sl, r3
 8024818:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 802481c:	fb08 3c0c 	mla	ip, r8, ip, r3
 8024820:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8024822:	f8b9 0000 	ldrh.w	r0, [r9]
 8024826:	434b      	muls	r3, r1
 8024828:	0a3f      	lsrs	r7, r7, #8
 802482a:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802482e:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8024832:	1c59      	adds	r1, r3, #1
 8024834:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8024838:	ea47 070c 	orr.w	r7, r7, ip
 802483c:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 8024840:	1202      	asrs	r2, r0, #8
 8024842:	0c3b      	lsrs	r3, r7, #16
 8024844:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 8024848:	b2c9      	uxtb	r1, r1
 802484a:	fb13 f304 	smulbb	r3, r3, r4
 802484e:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8024852:	fb02 3201 	mla	r2, r2, r1, r3
 8024856:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 802485a:	10c3      	asrs	r3, r0, #3
 802485c:	b2ff      	uxtb	r7, r7
 802485e:	00c0      	lsls	r0, r0, #3
 8024860:	b292      	uxth	r2, r2
 8024862:	fb1c fc04 	smulbb	ip, ip, r4
 8024866:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 802486a:	b2c0      	uxtb	r0, r0
 802486c:	fb17 f704 	smulbb	r7, r7, r4
 8024870:	fb03 c301 	mla	r3, r3, r1, ip
 8024874:	fb00 7001 	mla	r0, r0, r1, r7
 8024878:	f102 0c01 	add.w	ip, r2, #1
 802487c:	b280      	uxth	r0, r0
 802487e:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
 8024882:	f402 4c78 	and.w	ip, r2, #63488	; 0xf800
 8024886:	1c42      	adds	r2, r0, #1
 8024888:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 802488c:	b29b      	uxth	r3, r3
 802488e:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8024892:	ea42 020c 	orr.w	r2, r2, ip
 8024896:	f103 0c01 	add.w	ip, r3, #1
 802489a:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 802489e:	095b      	lsrs	r3, r3, #5
 80248a0:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80248a4:	431a      	orrs	r2, r3
 80248a6:	f8a9 2000 	strh.w	r2, [r9]
 80248aa:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 80248ac:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 80248ae:	441a      	add	r2, r3
 80248b0:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80248b2:	9229      	str	r2, [sp, #164]	; 0xa4
 80248b4:	f109 0902 	add.w	r9, r9, #2
 80248b8:	441d      	add	r5, r3
 80248ba:	f10b 3bff 	add.w	fp, fp, #4294967295
 80248be:	e63d      	b.n	802453c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
 80248c0:	2800      	cmp	r0, #0
 80248c2:	f43f aedd 	beq.w	8024680 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 80248c6:	5c79      	ldrb	r1, [r7, r1]
 80248c8:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 80248cc:	910b      	str	r1, [sp, #44]	; 0x2c
 80248ce:	0e09      	lsrs	r1, r1, #24
 80248d0:	9114      	str	r1, [sp, #80]	; 0x50
 80248d2:	e6d5      	b.n	8024680 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 80248d4:	b01f      	add	sp, #124	; 0x7c
 80248d6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080248da <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>:
 80248da:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80248de:	b089      	sub	sp, #36	; 0x24
 80248e0:	9101      	str	r1, [sp, #4]
 80248e2:	9801      	ldr	r0, [sp, #4]
 80248e4:	f9bd c048 	ldrsh.w	ip, [sp, #72]	; 0x48
 80248e8:	8800      	ldrh	r0, [r0, #0]
 80248ea:	f9bd 804c 	ldrsh.w	r8, [sp, #76]	; 0x4c
 80248ee:	f89d 5058 	ldrb.w	r5, [sp, #88]	; 0x58
 80248f2:	f89d 405c 	ldrb.w	r4, [sp, #92]	; 0x5c
 80248f6:	1206      	asrs	r6, r0, #8
 80248f8:	e9dd 1714 	ldrd	r1, r7, [sp, #80]	; 0x50
 80248fc:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8024900:	9602      	str	r6, [sp, #8]
 8024902:	10c6      	asrs	r6, r0, #3
 8024904:	00c0      	lsls	r0, r0, #3
 8024906:	b2c0      	uxtb	r0, r0
 8024908:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 802490c:	9004      	str	r0, [sp, #16]
 802490e:	2f00      	cmp	r7, #0
 8024910:	fb07 100c 	mla	r0, r7, ip, r1
 8024914:	9603      	str	r6, [sp, #12]
 8024916:	eb02 0e00 	add.w	lr, r2, r0
 802491a:	f2c0 810a 	blt.w	8024b32 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
 802491e:	45b8      	cmp	r8, r7
 8024920:	f340 8107 	ble.w	8024b32 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
 8024924:	2900      	cmp	r1, #0
 8024926:	f2c0 8102 	blt.w	8024b2e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
 802492a:	458c      	cmp	ip, r1
 802492c:	f340 80ff 	ble.w	8024b2e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
 8024930:	5c12      	ldrb	r2, [r2, r0]
 8024932:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 8024936:	1c4a      	adds	r2, r1, #1
 8024938:	f100 80fe 	bmi.w	8024b38 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
 802493c:	4594      	cmp	ip, r2
 802493e:	f340 80fb 	ble.w	8024b38 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
 8024942:	2d00      	cmp	r5, #0
 8024944:	f000 80fa 	beq.w	8024b3c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x262>
 8024948:	f89e 2001 	ldrb.w	r2, [lr, #1]
 802494c:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 8024950:	3701      	adds	r7, #1
 8024952:	f100 80f7 	bmi.w	8024b44 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
 8024956:	45b8      	cmp	r8, r7
 8024958:	f340 80f4 	ble.w	8024b44 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
 802495c:	2c00      	cmp	r4, #0
 802495e:	f000 80f4 	beq.w	8024b4a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x270>
 8024962:	2900      	cmp	r1, #0
 8024964:	eb0e 020c 	add.w	r2, lr, ip
 8024968:	f2c0 80ea 	blt.w	8024b40 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
 802496c:	458c      	cmp	ip, r1
 802496e:	f340 80e7 	ble.w	8024b40 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
 8024972:	f81e 700c 	ldrb.w	r7, [lr, ip]
 8024976:	f853 7027 	ldr.w	r7, [r3, r7, lsl #2]
 802497a:	3101      	adds	r1, #1
 802497c:	f100 80e8 	bmi.w	8024b50 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
 8024980:	458c      	cmp	ip, r1
 8024982:	f340 80e5 	ble.w	8024b50 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
 8024986:	2d00      	cmp	r5, #0
 8024988:	f000 80e4 	beq.w	8024b54 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x27a>
 802498c:	7852      	ldrb	r2, [r2, #1]
 802498e:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 8024992:	0e0b      	lsrs	r3, r1, #24
 8024994:	ea4f 6a10 	mov.w	sl, r0, lsr #24
 8024998:	9300      	str	r3, [sp, #0]
 802499a:	b2a4      	uxth	r4, r4
 802499c:	b2ab      	uxth	r3, r5
 802499e:	f000 15ff 	and.w	r5, r0, #16711935	; 0xff00ff
 80249a2:	fb03 f904 	mul.w	r9, r3, r4
 80249a6:	fb0a f505 	mul.w	r5, sl, r5
 80249aa:	011b      	lsls	r3, r3, #4
 80249ac:	eba3 0e09 	sub.w	lr, r3, r9
 80249b0:	f5c3 7280 	rsb	r2, r3, #256	; 0x100
 80249b4:	f400 437f 	and.w	r3, r0, #65280	; 0xff00
 80249b8:	0a28      	lsrs	r0, r5, #8
 80249ba:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 80249be:	f105 1501 	add.w	r5, r5, #65537	; 0x10001
 80249c2:	4405      	add	r5, r0
 80249c4:	0a2d      	lsrs	r5, r5, #8
 80249c6:	fb0a f303 	mul.w	r3, sl, r3
 80249ca:	f005 10ff 	and.w	r0, r5, #16711935	; 0xff00ff
 80249ce:	9005      	str	r0, [sp, #20]
 80249d0:	f503 7080 	add.w	r0, r3, #256	; 0x100
 80249d4:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 80249d8:	0a1b      	lsrs	r3, r3, #8
 80249da:	ea4f 6b16 	mov.w	fp, r6, lsr #24
 80249de:	9306      	str	r3, [sp, #24]
 80249e0:	f006 13ff 	and.w	r3, r6, #16711935	; 0xff00ff
 80249e4:	fb0b f303 	mul.w	r3, fp, r3
 80249e8:	0a1d      	lsrs	r5, r3, #8
 80249ea:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 80249ee:	ea4f 6817 	mov.w	r8, r7, lsr #24
 80249f2:	fb0b f606 	mul.w	r6, fp, r6
 80249f6:	f103 1301 	add.w	r3, r3, #65537	; 0x10001
 80249fa:	f007 1cff 	and.w	ip, r7, #16711935	; 0xff00ff
 80249fe:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8024a02:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 8024a06:	fb08 f707 	mul.w	r7, r8, r7
 8024a0a:	441d      	add	r5, r3
 8024a0c:	f506 7380 	add.w	r3, r6, #256	; 0x100
 8024a10:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 8024a14:	f507 7380 	add.w	r3, r7, #256	; 0x100
 8024a18:	eb03 2317 	add.w	r3, r3, r7, lsr #8
 8024a1c:	fb08 fc0c 	mul.w	ip, r8, ip
 8024a20:	0a1b      	lsrs	r3, r3, #8
 8024a22:	9307      	str	r3, [sp, #28]
 8024a24:	ea4f 201c 	mov.w	r0, ip, lsr #8
 8024a28:	0e0b      	lsrs	r3, r1, #24
 8024a2a:	f001 17ff 	and.w	r7, r1, #16711935	; 0xff00ff
 8024a2e:	435f      	muls	r7, r3
 8024a30:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8024a34:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 8024a38:	ebc9 1404 	rsb	r4, r9, r4, lsl #4
 8024a3c:	4460      	add	r0, ip
 8024a3e:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8024a42:	b2a4      	uxth	r4, r4
 8024a44:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8024a48:	0a2d      	lsrs	r5, r5, #8
 8024a4a:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 8024a4e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8024a52:	fa1f fe8e 	uxth.w	lr, lr
 8024a56:	4359      	muls	r1, r3
 8024a58:	1b12      	subs	r2, r2, r4
 8024a5a:	9b05      	ldr	r3, [sp, #20]
 8024a5c:	44bc      	add	ip, r7
 8024a5e:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8024a62:	b292      	uxth	r2, r2
 8024a64:	fb05 f50e 	mul.w	r5, r5, lr
 8024a68:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8024a6c:	fb03 5502 	mla	r5, r3, r2, r5
 8024a70:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8024a74:	9b06      	ldr	r3, [sp, #24]
 8024a76:	f501 7780 	add.w	r7, r1, #256	; 0x100
 8024a7a:	0a36      	lsrs	r6, r6, #8
 8024a7c:	0a00      	lsrs	r0, r0, #8
 8024a7e:	fb0c 5509 	mla	r5, ip, r9, r5
 8024a82:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 8024a86:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 8024a8a:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8024a8e:	fb00 5504 	mla	r5, r0, r4, r5
 8024a92:	fb0e f606 	mul.w	r6, lr, r6
 8024a96:	f403 407f 	and.w	r0, r3, #65280	; 0xff00
 8024a9a:	0a09      	lsrs	r1, r1, #8
 8024a9c:	9b07      	ldr	r3, [sp, #28]
 8024a9e:	fb02 6000 	mla	r0, r2, r0, r6
 8024aa2:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 8024aa6:	fb09 0001 	mla	r0, r9, r1, r0
 8024aaa:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8024aae:	fb0e fe0b 	mul.w	lr, lr, fp
 8024ab2:	fb04 0003 	mla	r0, r4, r3, r0
 8024ab6:	fb02 e20a 	mla	r2, r2, sl, lr
 8024aba:	9b00      	ldr	r3, [sp, #0]
 8024abc:	fb04 2408 	mla	r4, r4, r8, r2
 8024ac0:	fb09 4903 	mla	r9, r9, r3, r4
 8024ac4:	ea6f 2929 	mvn.w	r9, r9, asr #8
 8024ac8:	9b02      	ldr	r3, [sp, #8]
 8024aca:	9a04      	ldr	r2, [sp, #16]
 8024acc:	fa5f f989 	uxtb.w	r9, r9
 8024ad0:	fb03 f109 	mul.w	r1, r3, r9
 8024ad4:	9b03      	ldr	r3, [sp, #12]
 8024ad6:	0a2d      	lsrs	r5, r5, #8
 8024ad8:	0a00      	lsrs	r0, r0, #8
 8024ada:	fb03 f309 	mul.w	r3, r3, r9
 8024ade:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8024ae2:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8024ae6:	4305      	orrs	r5, r0
 8024ae8:	fb02 f909 	mul.w	r9, r2, r9
 8024aec:	1c58      	adds	r0, r3, #1
 8024aee:	1c4a      	adds	r2, r1, #1
 8024af0:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8024af4:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8024af8:	0a2b      	lsrs	r3, r5, #8
 8024afa:	0c2a      	lsrs	r2, r5, #16
 8024afc:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8024b00:	eb02 2211 	add.w	r2, r2, r1, lsr #8
 8024b04:	00db      	lsls	r3, r3, #3
 8024b06:	0212      	lsls	r2, r2, #8
 8024b08:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 8024b0c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8024b10:	4313      	orrs	r3, r2
 8024b12:	f109 0201 	add.w	r2, r9, #1
 8024b16:	eb02 2919 	add.w	r9, r2, r9, lsr #8
 8024b1a:	eb05 2519 	add.w	r5, r5, r9, lsr #8
 8024b1e:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 8024b22:	431d      	orrs	r5, r3
 8024b24:	9b01      	ldr	r3, [sp, #4]
 8024b26:	801d      	strh	r5, [r3, #0]
 8024b28:	b009      	add	sp, #36	; 0x24
 8024b2a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8024b2e:	2000      	movs	r0, #0
 8024b30:	e701      	b.n	8024936 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x5c>
 8024b32:	2600      	movs	r6, #0
 8024b34:	4630      	mov	r0, r6
 8024b36:	e70b      	b.n	8024950 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 8024b38:	2600      	movs	r6, #0
 8024b3a:	e709      	b.n	8024950 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 8024b3c:	462e      	mov	r6, r5
 8024b3e:	e707      	b.n	8024950 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 8024b40:	2700      	movs	r7, #0
 8024b42:	e71a      	b.n	802497a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xa0>
 8024b44:	2100      	movs	r1, #0
 8024b46:	460f      	mov	r7, r1
 8024b48:	e723      	b.n	8024992 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 8024b4a:	4621      	mov	r1, r4
 8024b4c:	4627      	mov	r7, r4
 8024b4e:	e720      	b.n	8024992 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 8024b50:	2100      	movs	r1, #0
 8024b52:	e71e      	b.n	8024992 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 8024b54:	4629      	mov	r1, r5
 8024b56:	e71c      	b.n	8024992 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>

08024b58 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8024b58:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8024b5c:	b09b      	sub	sp, #108	; 0x6c
 8024b5e:	9218      	str	r2, [sp, #96]	; 0x60
 8024b60:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8024b62:	9116      	str	r1, [sp, #88]	; 0x58
 8024b64:	9307      	str	r3, [sp, #28]
 8024b66:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	; 0xa8
 8024b6a:	9019      	str	r0, [sp, #100]	; 0x64
 8024b6c:	6850      	ldr	r0, [r2, #4]
 8024b6e:	6812      	ldr	r2, [r2, #0]
 8024b70:	9d26      	ldr	r5, [sp, #152]	; 0x98
 8024b72:	fb00 1303 	mla	r3, r0, r3, r1
 8024b76:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8024b7a:	930a      	str	r3, [sp, #40]	; 0x28
 8024b7c:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8024b7e:	681b      	ldr	r3, [r3, #0]
 8024b80:	930f      	str	r3, [sp, #60]	; 0x3c
 8024b82:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8024b84:	685e      	ldr	r6, [r3, #4]
 8024b86:	3604      	adds	r6, #4
 8024b88:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8024b8a:	2b00      	cmp	r3, #0
 8024b8c:	dc03      	bgt.n	8024b96 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8024b8e:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8024b90:	2b00      	cmp	r3, #0
 8024b92:	f340 8373 	ble.w	802527c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
 8024b96:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8024b98:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8024b9c:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8024ba0:	1e48      	subs	r0, r1, #1
 8024ba2:	1e57      	subs	r7, r2, #1
 8024ba4:	9b07      	ldr	r3, [sp, #28]
 8024ba6:	2b00      	cmp	r3, #0
 8024ba8:	f340 8190 	ble.w	8024ecc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 8024bac:	9c25      	ldr	r4, [sp, #148]	; 0x94
 8024bae:	ea5f 4c24 	movs.w	ip, r4, asr #16
 8024bb2:	ea4f 4325 	mov.w	r3, r5, asr #16
 8024bb6:	d406      	bmi.n	8024bc6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8024bb8:	4584      	cmp	ip, r0
 8024bba:	da04      	bge.n	8024bc6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8024bbc:	2b00      	cmp	r3, #0
 8024bbe:	db02      	blt.n	8024bc6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8024bc0:	42bb      	cmp	r3, r7
 8024bc2:	f2c0 8184 	blt.w	8024ece <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x376>
 8024bc6:	f11c 0c01 	adds.w	ip, ip, #1
 8024bca:	f100 8172 	bmi.w	8024eb2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8024bce:	4561      	cmp	r1, ip
 8024bd0:	f2c0 816f 	blt.w	8024eb2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8024bd4:	3301      	adds	r3, #1
 8024bd6:	f100 816c 	bmi.w	8024eb2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8024bda:	429a      	cmp	r2, r3
 8024bdc:	f2c0 8169 	blt.w	8024eb2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8024be0:	9b07      	ldr	r3, [sp, #28]
 8024be2:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 8024be4:	9317      	str	r3, [sp, #92]	; 0x5c
 8024be6:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8024be8:	2b00      	cmp	r3, #0
 8024bea:	f340 818e 	ble.w	8024f0a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b2>
 8024bee:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8024bf0:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8024bf4:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8024bf6:	e9d3 1e02 	ldrd	r1, lr, [r3, #8]
 8024bfa:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8024bfc:	141b      	asrs	r3, r3, #16
 8024bfe:	ea4f 4c25 	mov.w	ip, r5, asr #16
 8024c02:	f3c5 3003 	ubfx	r0, r5, #12, #4
 8024c06:	f100 81d1 	bmi.w	8024fac <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 8024c0a:	f101 38ff 	add.w	r8, r1, #4294967295
 8024c0e:	4543      	cmp	r3, r8
 8024c10:	f280 81cc 	bge.w	8024fac <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 8024c14:	f1bc 0f00 	cmp.w	ip, #0
 8024c18:	f2c0 81c8 	blt.w	8024fac <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 8024c1c:	f10e 38ff 	add.w	r8, lr, #4294967295
 8024c20:	45c4      	cmp	ip, r8
 8024c22:	f280 81c3 	bge.w	8024fac <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 8024c26:	b209      	sxth	r1, r1
 8024c28:	fb0c 3301 	mla	r3, ip, r1, r3
 8024c2c:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8024c2e:	eb04 0803 	add.w	r8, r4, r3
 8024c32:	5ce3      	ldrb	r3, [r4, r3]
 8024c34:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 8024c38:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 8024c3c:	2a00      	cmp	r2, #0
 8024c3e:	f000 81aa 	beq.w	8024f96 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x43e>
 8024c42:	f898 c001 	ldrb.w	ip, [r8, #1]
 8024c46:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 8024c4a:	940b      	str	r4, [sp, #44]	; 0x2c
 8024c4c:	0e24      	lsrs	r4, r4, #24
 8024c4e:	9412      	str	r4, [sp, #72]	; 0x48
 8024c50:	b178      	cbz	r0, 8024c72 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 8024c52:	eb08 0c01 	add.w	ip, r8, r1
 8024c56:	f818 1001 	ldrb.w	r1, [r8, r1]
 8024c5a:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8024c5e:	9108      	str	r1, [sp, #32]
 8024c60:	0e09      	lsrs	r1, r1, #24
 8024c62:	9110      	str	r1, [sp, #64]	; 0x40
 8024c64:	f89c 1001 	ldrb.w	r1, [ip, #1]
 8024c68:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8024c6c:	910c      	str	r1, [sp, #48]	; 0x30
 8024c6e:	0e09      	lsrs	r1, r1, #24
 8024c70:	9113      	str	r1, [sp, #76]	; 0x4c
 8024c72:	b292      	uxth	r2, r2
 8024c74:	b280      	uxth	r0, r0
 8024c76:	fb02 f900 	mul.w	r9, r2, r0
 8024c7a:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 8024c7e:	0112      	lsls	r2, r2, #4
 8024c80:	eba2 0809 	sub.w	r8, r2, r9
 8024c84:	b280      	uxth	r0, r0
 8024c86:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 8024c8a:	9912      	ldr	r1, [sp, #72]	; 0x48
 8024c8c:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8024c8e:	fa1f f888 	uxth.w	r8, r8
 8024c92:	1a12      	subs	r2, r2, r0
 8024c94:	b292      	uxth	r2, r2
 8024c96:	fb08 f101 	mul.w	r1, r8, r1
 8024c9a:	fb02 110e 	mla	r1, r2, lr, r1
 8024c9e:	fb00 1104 	mla	r1, r0, r4, r1
 8024ca2:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8024ca4:	fb09 1104 	mla	r1, r9, r4, r1
 8024ca8:	f3c1 2107 	ubfx	r1, r1, #8, #8
 8024cac:	2900      	cmp	r1, #0
 8024cae:	f000 80f5 	beq.w	8024e9c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8024cb2:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 8024cb6:	d01b      	beq.n	8024cf0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8024cb8:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8024cbc:	fb0e fa0a 	mul.w	sl, lr, sl
 8024cc0:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8024cc4:	fb0e fe03 	mul.w	lr, lr, r3
 8024cc8:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8024ccc:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8024cd0:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8024cd4:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 8024cd8:	4453      	add	r3, sl
 8024cda:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8024cde:	0a1b      	lsrs	r3, r3, #8
 8024ce0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8024ce4:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8024ce8:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8024cec:	ea43 030c 	orr.w	r3, r3, ip
 8024cf0:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8024cf2:	2cff      	cmp	r4, #255	; 0xff
 8024cf4:	d021      	beq.n	8024d3a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e2>
 8024cf6:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8024cf8:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8024cfc:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8024cfe:	fb04 fb0b 	mul.w	fp, r4, fp
 8024d02:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8024d04:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8024d08:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8024d0a:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8024d0e:	fb04 fa0a 	mul.w	sl, r4, sl
 8024d12:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8024d16:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8024d1a:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8024d1e:	44de      	add	lr, fp
 8024d20:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8024d24:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8024d28:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8024d2c:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8024d30:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8024d34:	ea4e 040a 	orr.w	r4, lr, sl
 8024d38:	940b      	str	r4, [sp, #44]	; 0x2c
 8024d3a:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8024d3c:	2cff      	cmp	r4, #255	; 0xff
 8024d3e:	d021      	beq.n	8024d84 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22c>
 8024d40:	9c08      	ldr	r4, [sp, #32]
 8024d42:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8024d46:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8024d48:	fb04 fb0b 	mul.w	fp, r4, fp
 8024d4c:	9c08      	ldr	r4, [sp, #32]
 8024d4e:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8024d52:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8024d54:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8024d58:	fb04 fa0a 	mul.w	sl, r4, sl
 8024d5c:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8024d60:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8024d64:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8024d68:	44de      	add	lr, fp
 8024d6a:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8024d6e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8024d72:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8024d76:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8024d7a:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8024d7e:	ea4e 040a 	orr.w	r4, lr, sl
 8024d82:	9408      	str	r4, [sp, #32]
 8024d84:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8024d86:	2cff      	cmp	r4, #255	; 0xff
 8024d88:	d021      	beq.n	8024dce <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 8024d8a:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8024d8c:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8024d90:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8024d92:	fb04 fb0b 	mul.w	fp, r4, fp
 8024d96:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8024d98:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8024d9c:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8024d9e:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8024da2:	fb04 fa0a 	mul.w	sl, r4, sl
 8024da6:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8024daa:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8024dae:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8024db2:	44de      	add	lr, fp
 8024db4:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8024db8:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8024dbc:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8024dc0:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8024dc4:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8024dc8:	ea4e 040a 	orr.w	r4, lr, sl
 8024dcc:	940c      	str	r4, [sp, #48]	; 0x30
 8024dce:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8024dd0:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8024dd4:	9c08      	ldr	r4, [sp, #32]
 8024dd6:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
 8024dda:	fb08 fc0c 	mul.w	ip, r8, ip
 8024dde:	fb02 cc0e 	mla	ip, r2, lr, ip
 8024de2:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 8024de6:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8024de8:	fb00 cc0e 	mla	ip, r0, lr, ip
 8024dec:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 8024df0:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8024df2:	fb09 cc0e 	mla	ip, r9, lr, ip
 8024df6:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
 8024dfa:	fb08 f80e 	mul.w	r8, r8, lr
 8024dfe:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8024e02:	fb02 8303 	mla	r3, r2, r3, r8
 8024e06:	9a08      	ldr	r2, [sp, #32]
 8024e08:	f8b7 8000 	ldrh.w	r8, [r7]
 8024e0c:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 8024e10:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8024e12:	fb00 330a 	mla	r3, r0, sl, r3
 8024e16:	f402 407f 	and.w	r0, r2, #65280	; 0xff00
 8024e1a:	fb09 3900 	mla	r9, r9, r0, r3
 8024e1e:	43c9      	mvns	r1, r1
 8024e20:	ea4f 2228 	mov.w	r2, r8, asr #8
 8024e24:	fa5f fe81 	uxtb.w	lr, r1
 8024e28:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8024e2c:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8024e30:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8024e34:	fb02 f20e 	mul.w	r2, r2, lr
 8024e38:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8024e3c:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 8024e40:	ea4c 0c09 	orr.w	ip, ip, r9
 8024e44:	1c53      	adds	r3, r2, #1
 8024e46:	eb03 2212 	add.w	r2, r3, r2, lsr #8
 8024e4a:	ea4f 00e8 	mov.w	r0, r8, asr #3
 8024e4e:	ea4f 431c 	mov.w	r3, ip, lsr #16
 8024e52:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8024e56:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8024e5a:	4a63      	ldr	r2, [pc, #396]	; (8024fe8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>)
 8024e5c:	fb00 f00e 	mul.w	r0, r0, lr
 8024e60:	b2db      	uxtb	r3, r3
 8024e62:	ea02 2203 	and.w	r2, r2, r3, lsl #8
 8024e66:	1c43      	adds	r3, r0, #1
 8024e68:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8024e6c:	ea4f 231c 	mov.w	r3, ip, lsr #8
 8024e70:	ea4f 01c8 	mov.w	r1, r8, lsl #3
 8024e74:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8024e78:	b2c9      	uxtb	r1, r1
 8024e7a:	00db      	lsls	r3, r3, #3
 8024e7c:	fb01 f10e 	mul.w	r1, r1, lr
 8024e80:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8024e84:	4313      	orrs	r3, r2
 8024e86:	1c4a      	adds	r2, r1, #1
 8024e88:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8024e8c:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 8024e90:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 8024e94:	ea4c 0c03 	orr.w	ip, ip, r3
 8024e98:	f8a7 c000 	strh.w	ip, [r7]
 8024e9c:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8024e9e:	9a25      	ldr	r2, [sp, #148]	; 0x94
 8024ea0:	441a      	add	r2, r3
 8024ea2:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8024ea4:	9225      	str	r2, [sp, #148]	; 0x94
 8024ea6:	441d      	add	r5, r3
 8024ea8:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8024eaa:	3b01      	subs	r3, #1
 8024eac:	3702      	adds	r7, #2
 8024eae:	9317      	str	r3, [sp, #92]	; 0x5c
 8024eb0:	e699      	b.n	8024be6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8024eb2:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8024eb4:	9c25      	ldr	r4, [sp, #148]	; 0x94
 8024eb6:	441c      	add	r4, r3
 8024eb8:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8024eba:	9425      	str	r4, [sp, #148]	; 0x94
 8024ebc:	441d      	add	r5, r3
 8024ebe:	9b07      	ldr	r3, [sp, #28]
 8024ec0:	3b01      	subs	r3, #1
 8024ec2:	9307      	str	r3, [sp, #28]
 8024ec4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8024ec6:	3302      	adds	r3, #2
 8024ec8:	930a      	str	r3, [sp, #40]	; 0x28
 8024eca:	e66b      	b.n	8024ba4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 8024ecc:	d024      	beq.n	8024f18 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c0>
 8024ece:	9b07      	ldr	r3, [sp, #28]
 8024ed0:	9827      	ldr	r0, [sp, #156]	; 0x9c
 8024ed2:	9c25      	ldr	r4, [sp, #148]	; 0x94
 8024ed4:	3b01      	subs	r3, #1
 8024ed6:	fb00 4003 	mla	r0, r0, r3, r4
 8024eda:	1400      	asrs	r0, r0, #16
 8024edc:	f53f ae80 	bmi.w	8024be0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8024ee0:	3901      	subs	r1, #1
 8024ee2:	4288      	cmp	r0, r1
 8024ee4:	f6bf ae7c 	bge.w	8024be0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8024ee8:	9928      	ldr	r1, [sp, #160]	; 0xa0
 8024eea:	fb01 5303 	mla	r3, r1, r3, r5
 8024eee:	141b      	asrs	r3, r3, #16
 8024ef0:	f53f ae76 	bmi.w	8024be0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8024ef4:	3a01      	subs	r2, #1
 8024ef6:	4293      	cmp	r3, r2
 8024ef8:	f6bf ae72 	bge.w	8024be0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8024efc:	f8dd b01c 	ldr.w	fp, [sp, #28]
 8024f00:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
 8024f04:	f1bb 0f00 	cmp.w	fp, #0
 8024f08:	dc70      	bgt.n	8024fec <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
 8024f0a:	9b07      	ldr	r3, [sp, #28]
 8024f0c:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8024f10:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8024f12:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 8024f16:	930a      	str	r3, [sp, #40]	; 0x28
 8024f18:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8024f1a:	2b00      	cmp	r3, #0
 8024f1c:	f340 81ae 	ble.w	802527c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
 8024f20:	ee30 0a04 	vadd.f32	s0, s0, s8
 8024f24:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8024f28:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8024f2c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8024f2e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8024f32:	ee31 1a05 	vadd.f32	s2, s2, s10
 8024f36:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8024f3a:	eef0 6a62 	vmov.f32	s13, s5
 8024f3e:	ee61 7a27 	vmul.f32	s15, s2, s15
 8024f42:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8024f46:	ee77 2a62 	vsub.f32	s5, s14, s5
 8024f4a:	edcd 6a25 	vstr	s13, [sp, #148]	; 0x94
 8024f4e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8024f52:	eef0 6a43 	vmov.f32	s13, s6
 8024f56:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8024f5a:	ee12 2a90 	vmov	r2, s5
 8024f5e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8024f62:	fb92 f3f3 	sdiv	r3, r2, r3
 8024f66:	ee13 2a10 	vmov	r2, s6
 8024f6a:	9327      	str	r3, [sp, #156]	; 0x9c
 8024f6c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8024f6e:	fb92 f3f3 	sdiv	r3, r2, r3
 8024f72:	9328      	str	r3, [sp, #160]	; 0xa0
 8024f74:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8024f76:	9a18      	ldr	r2, [sp, #96]	; 0x60
 8024f78:	3b01      	subs	r3, #1
 8024f7a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8024f7e:	9316      	str	r3, [sp, #88]	; 0x58
 8024f80:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8024f82:	bf08      	it	eq
 8024f84:	4613      	moveq	r3, r2
 8024f86:	ee16 5a90 	vmov	r5, s13
 8024f8a:	9307      	str	r3, [sp, #28]
 8024f8c:	eeb0 3a67 	vmov.f32	s6, s15
 8024f90:	eef0 2a47 	vmov.f32	s5, s14
 8024f94:	e5f8      	b.n	8024b88 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 8024f96:	2800      	cmp	r0, #0
 8024f98:	f43f ae6b 	beq.w	8024c72 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 8024f9c:	f818 1001 	ldrb.w	r1, [r8, r1]
 8024fa0:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8024fa4:	9108      	str	r1, [sp, #32]
 8024fa6:	0e09      	lsrs	r1, r1, #24
 8024fa8:	9110      	str	r1, [sp, #64]	; 0x40
 8024faa:	e662      	b.n	8024c72 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 8024fac:	f113 0801 	adds.w	r8, r3, #1
 8024fb0:	f53f af74 	bmi.w	8024e9c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8024fb4:	4541      	cmp	r1, r8
 8024fb6:	f6ff af71 	blt.w	8024e9c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8024fba:	f11c 0801 	adds.w	r8, ip, #1
 8024fbe:	f53f af6d 	bmi.w	8024e9c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8024fc2:	45c6      	cmp	lr, r8
 8024fc4:	f6ff af6a 	blt.w	8024e9c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8024fc8:	e9cd 3c02 	strd	r3, ip, [sp, #8]
 8024fcc:	b209      	sxth	r1, r1
 8024fce:	fa0f f38e 	sxth.w	r3, lr
 8024fd2:	e9cd 2004 	strd	r2, r0, [sp, #16]
 8024fd6:	9301      	str	r3, [sp, #4]
 8024fd8:	9100      	str	r1, [sp, #0]
 8024fda:	4633      	mov	r3, r6
 8024fdc:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8024fde:	9819      	ldr	r0, [sp, #100]	; 0x64
 8024fe0:	4639      	mov	r1, r7
 8024fe2:	f7ff fc7a 	bl	80248da <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>
 8024fe6:	e759      	b.n	8024e9c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8024fe8:	fffff800 	.word	0xfffff800
 8024fec:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8024fee:	9c25      	ldr	r4, [sp, #148]	; 0x94
 8024ff0:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8024ff4:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8024ff6:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8024ffa:	1427      	asrs	r7, r4, #16
 8024ffc:	142b      	asrs	r3, r5, #16
 8024ffe:	fb01 7303 	mla	r3, r1, r3, r7
 8025002:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8025004:	18e7      	adds	r7, r4, r3
 8025006:	5ce3      	ldrb	r3, [r4, r3]
 8025008:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 802500c:	f3c5 3003 	ubfx	r0, r5, #12, #4
 8025010:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 8025014:	2a00      	cmp	r2, #0
 8025016:	f000 8127 	beq.w	8025268 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 802501a:	f897 e001 	ldrb.w	lr, [r7, #1]
 802501e:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 8025022:	940d      	str	r4, [sp, #52]	; 0x34
 8025024:	0e24      	lsrs	r4, r4, #24
 8025026:	9414      	str	r4, [sp, #80]	; 0x50
 8025028:	b170      	cbz	r0, 8025048 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 802502a:	eb07 0e01 	add.w	lr, r7, r1
 802502e:	5c79      	ldrb	r1, [r7, r1]
 8025030:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8025034:	9109      	str	r1, [sp, #36]	; 0x24
 8025036:	0e09      	lsrs	r1, r1, #24
 8025038:	9111      	str	r1, [sp, #68]	; 0x44
 802503a:	f89e 1001 	ldrb.w	r1, [lr, #1]
 802503e:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8025042:	910e      	str	r1, [sp, #56]	; 0x38
 8025044:	0e09      	lsrs	r1, r1, #24
 8025046:	9115      	str	r1, [sp, #84]	; 0x54
 8025048:	b292      	uxth	r2, r2
 802504a:	b280      	uxth	r0, r0
 802504c:	fb02 f800 	mul.w	r8, r2, r0
 8025050:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 8025054:	0112      	lsls	r2, r2, #4
 8025056:	eba2 0e08 	sub.w	lr, r2, r8
 802505a:	b280      	uxth	r0, r0
 802505c:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
 8025060:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8025062:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8025064:	fa1f fe8e 	uxth.w	lr, lr
 8025068:	1a09      	subs	r1, r1, r0
 802506a:	b289      	uxth	r1, r1
 802506c:	fb0e f202 	mul.w	r2, lr, r2
 8025070:	fb01 220c 	mla	r2, r1, ip, r2
 8025074:	fb00 2204 	mla	r2, r0, r4, r2
 8025078:	9c15      	ldr	r4, [sp, #84]	; 0x54
 802507a:	fb08 2204 	mla	r2, r8, r4, r2
 802507e:	f3c2 2207 	ubfx	r2, r2, #8, #8
 8025082:	2a00      	cmp	r2, #0
 8025084:	f000 80e5 	beq.w	8025252 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6fa>
 8025088:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 802508c:	d019      	beq.n	80250c2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56a>
 802508e:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8025092:	fb0c fa0a 	mul.w	sl, ip, sl
 8025096:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 802509a:	fb0c fc03 	mul.w	ip, ip, r3
 802509e:	ea4f 231a 	mov.w	r3, sl, lsr #8
 80250a2:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80250a6:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 80250aa:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 80250ae:	4453      	add	r3, sl
 80250b0:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 80250b4:	0a1b      	lsrs	r3, r3, #8
 80250b6:	0a3f      	lsrs	r7, r7, #8
 80250b8:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80250bc:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 80250c0:	433b      	orrs	r3, r7
 80250c2:	9c14      	ldr	r4, [sp, #80]	; 0x50
 80250c4:	2cff      	cmp	r4, #255	; 0xff
 80250c6:	d020      	beq.n	802510a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5b2>
 80250c8:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 80250ca:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 80250ce:	9c14      	ldr	r4, [sp, #80]	; 0x50
 80250d0:	4367      	muls	r7, r4
 80250d2:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 80250d4:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 80250d8:	9c14      	ldr	r4, [sp, #80]	; 0x50
 80250da:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80250de:	fb04 fa0a 	mul.w	sl, r4, sl
 80250e2:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 80250e6:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80250ea:	44bc      	add	ip, r7
 80250ec:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 80250f0:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80250f4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80250f8:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80250fc:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8025100:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8025104:	ea4c 040a 	orr.w	r4, ip, sl
 8025108:	940d      	str	r4, [sp, #52]	; 0x34
 802510a:	9c11      	ldr	r4, [sp, #68]	; 0x44
 802510c:	2cff      	cmp	r4, #255	; 0xff
 802510e:	d020      	beq.n	8025152 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5fa>
 8025110:	9c09      	ldr	r4, [sp, #36]	; 0x24
 8025112:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8025116:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8025118:	4367      	muls	r7, r4
 802511a:	9c09      	ldr	r4, [sp, #36]	; 0x24
 802511c:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8025120:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8025122:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8025126:	fb04 fa0a 	mul.w	sl, r4, sl
 802512a:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 802512e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8025132:	44bc      	add	ip, r7
 8025134:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8025138:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 802513c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8025140:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8025144:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8025148:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 802514c:	ea4c 040a 	orr.w	r4, ip, sl
 8025150:	9409      	str	r4, [sp, #36]	; 0x24
 8025152:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8025154:	2cff      	cmp	r4, #255	; 0xff
 8025156:	d020      	beq.n	802519a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x642>
 8025158:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 802515a:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 802515e:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8025160:	4367      	muls	r7, r4
 8025162:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8025164:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8025168:	9c15      	ldr	r4, [sp, #84]	; 0x54
 802516a:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 802516e:	fb04 fa0a 	mul.w	sl, r4, sl
 8025172:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8025176:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802517a:	44bc      	add	ip, r7
 802517c:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8025180:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8025184:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8025188:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802518c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8025190:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8025194:	ea4c 040a 	orr.w	r4, ip, sl
 8025198:	940e      	str	r4, [sp, #56]	; 0x38
 802519a:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 802519c:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 80251a0:	9c09      	ldr	r4, [sp, #36]	; 0x24
 80251a2:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 80251a6:	fb0e f707 	mul.w	r7, lr, r7
 80251aa:	fb01 770c 	mla	r7, r1, ip, r7
 80251ae:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 80251b2:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 80251b4:	fb00 770c 	mla	r7, r0, ip, r7
 80251b8:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 80251bc:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 80251be:	fb08 770c 	mla	r7, r8, ip, r7
 80251c2:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 80251c6:	fb0e fe0c 	mul.w	lr, lr, ip
 80251ca:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80251ce:	fb01 e303 	mla	r3, r1, r3, lr
 80251d2:	9909      	ldr	r1, [sp, #36]	; 0x24
 80251d4:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 80251d8:	990e      	ldr	r1, [sp, #56]	; 0x38
 80251da:	fb00 330a 	mla	r3, r0, sl, r3
 80251de:	f401 4c7f 	and.w	ip, r1, #65280	; 0xff00
 80251e2:	fb08 3c0c 	mla	ip, r8, ip, r3
 80251e6:	f8b9 3000 	ldrh.w	r3, [r9]
 80251ea:	43d2      	mvns	r2, r2
 80251ec:	1218      	asrs	r0, r3, #8
 80251ee:	b2d2      	uxtb	r2, r2
 80251f0:	10d9      	asrs	r1, r3, #3
 80251f2:	0a3f      	lsrs	r7, r7, #8
 80251f4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80251f8:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 80251fc:	00db      	lsls	r3, r3, #3
 80251fe:	4350      	muls	r0, r2
 8025200:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8025204:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8025208:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 802520c:	b2db      	uxtb	r3, r3
 802520e:	ea47 070c 	orr.w	r7, r7, ip
 8025212:	4351      	muls	r1, r2
 8025214:	4353      	muls	r3, r2
 8025216:	1c42      	adds	r2, r0, #1
 8025218:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 802521c:	0c3a      	lsrs	r2, r7, #16
 802521e:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8025222:	4a18      	ldr	r2, [pc, #96]	; (8025284 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72c>)
 8025224:	b2c0      	uxtb	r0, r0
 8025226:	ea02 2000 	and.w	r0, r2, r0, lsl #8
 802522a:	1c4a      	adds	r2, r1, #1
 802522c:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8025230:	0a3a      	lsrs	r2, r7, #8
 8025232:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8025236:	00c9      	lsls	r1, r1, #3
 8025238:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 802523c:	4301      	orrs	r1, r0
 802523e:	1c58      	adds	r0, r3, #1
 8025240:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8025244:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 8025248:	f3c7 00c4 	ubfx	r0, r7, #3, #5
 802524c:	4308      	orrs	r0, r1
 802524e:	f8a9 0000 	strh.w	r0, [r9]
 8025252:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8025254:	9a25      	ldr	r2, [sp, #148]	; 0x94
 8025256:	441a      	add	r2, r3
 8025258:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 802525a:	9225      	str	r2, [sp, #148]	; 0x94
 802525c:	f109 0902 	add.w	r9, r9, #2
 8025260:	441d      	add	r5, r3
 8025262:	f10b 3bff 	add.w	fp, fp, #4294967295
 8025266:	e64d      	b.n	8024f04 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ac>
 8025268:	2800      	cmp	r0, #0
 802526a:	f43f aeed 	beq.w	8025048 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 802526e:	5c79      	ldrb	r1, [r7, r1]
 8025270:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8025274:	9109      	str	r1, [sp, #36]	; 0x24
 8025276:	0e09      	lsrs	r1, r1, #24
 8025278:	9111      	str	r1, [sp, #68]	; 0x44
 802527a:	e6e5      	b.n	8025048 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 802527c:	b01b      	add	sp, #108	; 0x6c
 802527e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8025282:	bf00      	nop
 8025284:	fffff800 	.word	0xfffff800

08025288 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>:
 8025288:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802528c:	b085      	sub	sp, #20
 802528e:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	; 0x40
 8025292:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	; 0x38
 8025296:	9103      	str	r1, [sp, #12]
 8025298:	fb00 7406 	mla	r4, r0, r6, r7
 802529c:	eb02 0544 	add.w	r5, r2, r4, lsl #1
 80252a0:	2800      	cmp	r0, #0
 80252a2:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	; 0x3c
 80252a6:	f89d 1048 	ldrb.w	r1, [sp, #72]	; 0x48
 80252aa:	f89d e04c 	ldrb.w	lr, [sp, #76]	; 0x4c
 80252ae:	9501      	str	r5, [sp, #4]
 80252b0:	eb03 0904 	add.w	r9, r3, r4
 80252b4:	f2c0 8150 	blt.w	8025558 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
 80252b8:	4583      	cmp	fp, r0
 80252ba:	f340 814d 	ble.w	8025558 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
 80252be:	2f00      	cmp	r7, #0
 80252c0:	f2c0 8146 	blt.w	8025550 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
 80252c4:	42be      	cmp	r6, r7
 80252c6:	f340 8143 	ble.w	8025550 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
 80252ca:	f813 c004 	ldrb.w	ip, [r3, r4]
 80252ce:	f832 3014 	ldrh.w	r3, [r2, r4, lsl #1]
 80252d2:	ea4f 02ec 	mov.w	r2, ip, asr #3
 80252d6:	f423 65fc 	bic.w	r5, r3, #2016	; 0x7e0
 80252da:	4355      	muls	r5, r2
 80252dc:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80252e0:	f64f 041f 	movw	r4, #63519	; 0xf81f
 80252e4:	fb0c f203 	mul.w	r2, ip, r3
 80252e8:	ea04 1355 	and.w	r3, r4, r5, lsr #5
 80252ec:	f605 0501 	addw	r5, r5, #2049	; 0x801
 80252f0:	441d      	add	r5, r3
 80252f2:	f102 0320 	add.w	r3, r2, #32
 80252f6:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 80252fa:	0a1b      	lsrs	r3, r3, #8
 80252fc:	ea04 1455 	and.w	r4, r4, r5, lsr #5
 8025300:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8025304:	431c      	orrs	r4, r3
 8025306:	1c7b      	adds	r3, r7, #1
 8025308:	f100 812b 	bmi.w	8025562 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
 802530c:	429e      	cmp	r6, r3
 802530e:	f340 8128 	ble.w	8025562 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
 8025312:	2900      	cmp	r1, #0
 8025314:	f000 8128 	beq.w	8025568 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e0>
 8025318:	9a01      	ldr	r2, [sp, #4]
 802531a:	f899 3001 	ldrb.w	r3, [r9, #1]
 802531e:	8855      	ldrh	r5, [r2, #2]
 8025320:	ea4f 08e3 	mov.w	r8, r3, asr #3
 8025324:	f425 62fc 	bic.w	r2, r5, #2016	; 0x7e0
 8025328:	fb08 f802 	mul.w	r8, r8, r2
 802532c:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8025330:	f64f 021f 	movw	r2, #63519	; 0xf81f
 8025334:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
 8025338:	435d      	muls	r5, r3
 802533a:	f608 0801 	addw	r8, r8, #2049	; 0x801
 802533e:	44d0      	add	r8, sl
 8025340:	f105 0a20 	add.w	sl, r5, #32
 8025344:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
 8025348:	0a2d      	lsrs	r5, r5, #8
 802534a:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 802534e:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8025352:	432a      	orrs	r2, r5
 8025354:	3001      	adds	r0, #1
 8025356:	f100 810d 	bmi.w	8025574 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
 802535a:	4583      	cmp	fp, r0
 802535c:	f340 810a 	ble.w	8025574 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
 8025360:	f1be 0f00 	cmp.w	lr, #0
 8025364:	f000 810b 	beq.w	802557e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2f6>
 8025368:	2f00      	cmp	r7, #0
 802536a:	f2c0 8100 	blt.w	802556e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
 802536e:	42be      	cmp	r6, r7
 8025370:	f340 80fd 	ble.w	802556e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
 8025374:	9801      	ldr	r0, [sp, #4]
 8025376:	f819 5006 	ldrb.w	r5, [r9, r6]
 802537a:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
 802537e:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8025382:	f428 60fc 	bic.w	r0, r8, #2016	; 0x7e0
 8025386:	fb0a fa00 	mul.w	sl, sl, r0
 802538a:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 802538e:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 8025392:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
 8025396:	fb05 f808 	mul.w	r8, r5, r8
 802539a:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
 802539e:	4482      	add	sl, r0
 80253a0:	f108 0020 	add.w	r0, r8, #32
 80253a4:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 80253a8:	0a00      	lsrs	r0, r0, #8
 80253aa:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
 80253ae:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80253b2:	ea4b 0b00 	orr.w	fp, fp, r0
 80253b6:	3701      	adds	r7, #1
 80253b8:	f100 80e6 	bmi.w	8025588 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
 80253bc:	42be      	cmp	r6, r7
 80253be:	f340 80e3 	ble.w	8025588 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
 80253c2:	2900      	cmp	r1, #0
 80253c4:	f000 80e3 	beq.w	802558e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x306>
 80253c8:	3601      	adds	r6, #1
 80253ca:	9801      	ldr	r0, [sp, #4]
 80253cc:	f819 7006 	ldrb.w	r7, [r9, r6]
 80253d0:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
 80253d4:	ea4f 09e7 	mov.w	r9, r7, asr #3
 80253d8:	f420 66fc 	bic.w	r6, r0, #2016	; 0x7e0
 80253dc:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80253e0:	fb09 f906 	mul.w	r9, r9, r6
 80253e4:	fb07 f800 	mul.w	r8, r7, r0
 80253e8:	f64f 001f 	movw	r0, #63519	; 0xf81f
 80253ec:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
 80253f0:	f609 0901 	addw	r9, r9, #2049	; 0x801
 80253f4:	44d1      	add	r9, sl
 80253f6:	ea00 1659 	and.w	r6, r0, r9, lsr #5
 80253fa:	f108 0020 	add.w	r0, r8, #32
 80253fe:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 8025402:	0a00      	lsrs	r0, r0, #8
 8025404:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8025408:	4330      	orrs	r0, r6
 802540a:	b28e      	uxth	r6, r1
 802540c:	fa1f f98e 	uxth.w	r9, lr
 8025410:	fb06 f809 	mul.w	r8, r6, r9
 8025414:	ea4f 4a04 	mov.w	sl, r4, lsl #16
 8025418:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 802541c:	0136      	lsls	r6, r6, #4
 802541e:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8025422:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
 8025426:	9601      	str	r6, [sp, #4]
 8025428:	ea4a 0404 	orr.w	r4, sl, r4
 802542c:	fa1f f689 	uxth.w	r6, r9
 8025430:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 8025434:	fb11 f90e 	smulbb	r9, r1, lr
 8025438:	f3c9 09c7 	ubfx	r9, r9, #3, #8
 802543c:	9602      	str	r6, [sp, #8]
 802543e:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8025442:	4626      	mov	r6, r4
 8025444:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8025448:	f1ce 0410 	rsb	r4, lr, #16
 802544c:	1a64      	subs	r4, r4, r1
 802544e:	ea4a 0202 	orr.w	r2, sl, r2
 8025452:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
 8025456:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 802545a:	434a      	muls	r2, r1
 802545c:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 8025460:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8025464:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8025468:	fb04 2406 	mla	r4, r4, r6, r2
 802546c:	ea4a 0000 	orr.w	r0, sl, r0
 8025470:	fb09 4200 	mla	r2, r9, r0, r4
 8025474:	ea4f 440b 	mov.w	r4, fp, lsl #16
 8025478:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 802547c:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 8025480:	ea44 0b0b 	orr.w	fp, r4, fp
 8025484:	9c01      	ldr	r4, [sp, #4]
 8025486:	9e02      	ldr	r6, [sp, #8]
 8025488:	9903      	ldr	r1, [sp, #12]
 802548a:	f5c4 7480 	rsb	r4, r4, #256	; 0x100
 802548e:	1ba4      	subs	r4, r4, r6
 8025490:	9e01      	ldr	r6, [sp, #4]
 8025492:	8808      	ldrh	r0, [r1, #0]
 8025494:	f89d 1050 	ldrb.w	r1, [sp, #80]	; 0x50
 8025498:	eba6 0608 	sub.w	r6, r6, r8
 802549c:	b2b6      	uxth	r6, r6
 802549e:	b2a4      	uxth	r4, r4
 80254a0:	4373      	muls	r3, r6
 80254a2:	fb0c 3304 	mla	r3, ip, r4, r3
 80254a6:	9c02      	ldr	r4, [sp, #8]
 80254a8:	fb04 3505 	mla	r5, r4, r5, r3
 80254ac:	fb08 5707 	mla	r7, r8, r7, r5
 80254b0:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 80254b4:	b289      	uxth	r1, r1
 80254b6:	fb0e 2e0b 	mla	lr, lr, fp, r2
 80254ba:	f3c7 2707 	ubfx	r7, r7, #8, #8
 80254be:	434f      	muls	r7, r1
 80254c0:	ea4f 525e 	mov.w	r2, lr, lsr #21
 80254c4:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 80254c8:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80254cc:	1c7b      	adds	r3, r7, #1
 80254ce:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 80254d2:	ea42 0e0e 	orr.w	lr, r2, lr
 80254d6:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 80254da:	fa1f f28e 	uxth.w	r2, lr
 80254de:	1203      	asrs	r3, r0, #8
 80254e0:	ea6f 2717 	mvn.w	r7, r7, lsr #8
 80254e4:	b2ff      	uxtb	r7, r7
 80254e6:	1215      	asrs	r5, r2, #8
 80254e8:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 80254ec:	fb13 f307 	smulbb	r3, r3, r7
 80254f0:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 80254f4:	fb05 3501 	mla	r5, r5, r1, r3
 80254f8:	10c3      	asrs	r3, r0, #3
 80254fa:	10d4      	asrs	r4, r2, #3
 80254fc:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 8025500:	fb13 f307 	smulbb	r3, r3, r7
 8025504:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 8025508:	fb04 3401 	mla	r4, r4, r1, r3
 802550c:	00c3      	lsls	r3, r0, #3
 802550e:	00d2      	lsls	r2, r2, #3
 8025510:	b2db      	uxtb	r3, r3
 8025512:	fb13 f307 	smulbb	r3, r3, r7
 8025516:	b2d2      	uxtb	r2, r2
 8025518:	fb02 3101 	mla	r1, r2, r1, r3
 802551c:	b2ad      	uxth	r5, r5
 802551e:	b289      	uxth	r1, r1
 8025520:	b2a4      	uxth	r4, r4
 8025522:	1c6b      	adds	r3, r5, #1
 8025524:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8025528:	1c62      	adds	r2, r4, #1
 802552a:	1c4b      	adds	r3, r1, #1
 802552c:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 8025530:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 8025534:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8025538:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 802553c:	0964      	lsrs	r4, r4, #5
 802553e:	432b      	orrs	r3, r5
 8025540:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 8025544:	9a03      	ldr	r2, [sp, #12]
 8025546:	4323      	orrs	r3, r4
 8025548:	8013      	strh	r3, [r2, #0]
 802554a:	b005      	add	sp, #20
 802554c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8025550:	f04f 0c00 	mov.w	ip, #0
 8025554:	4664      	mov	r4, ip
 8025556:	e6d6      	b.n	8025306 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x7e>
 8025558:	2300      	movs	r3, #0
 802555a:	469c      	mov	ip, r3
 802555c:	461a      	mov	r2, r3
 802555e:	461c      	mov	r4, r3
 8025560:	e6f8      	b.n	8025354 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 8025562:	2300      	movs	r3, #0
 8025564:	461a      	mov	r2, r3
 8025566:	e6f5      	b.n	8025354 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 8025568:	460b      	mov	r3, r1
 802556a:	460a      	mov	r2, r1
 802556c:	e6f2      	b.n	8025354 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 802556e:	2500      	movs	r5, #0
 8025570:	46ab      	mov	fp, r5
 8025572:	e720      	b.n	80253b6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x12e>
 8025574:	2700      	movs	r7, #0
 8025576:	463d      	mov	r5, r7
 8025578:	4638      	mov	r0, r7
 802557a:	46bb      	mov	fp, r7
 802557c:	e745      	b.n	802540a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 802557e:	4677      	mov	r7, lr
 8025580:	4675      	mov	r5, lr
 8025582:	4670      	mov	r0, lr
 8025584:	46f3      	mov	fp, lr
 8025586:	e740      	b.n	802540a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 8025588:	2700      	movs	r7, #0
 802558a:	4638      	mov	r0, r7
 802558c:	e73d      	b.n	802540a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 802558e:	460f      	mov	r7, r1
 8025590:	4608      	mov	r0, r1
 8025592:	e73a      	b.n	802540a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>

08025594 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8025594:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8025598:	b097      	sub	sp, #92	; 0x5c
 802559a:	9214      	str	r2, [sp, #80]	; 0x50
 802559c:	9308      	str	r3, [sp, #32]
 802559e:	9a25      	ldr	r2, [sp, #148]	; 0x94
 80255a0:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
 80255a4:	9312      	str	r3, [sp, #72]	; 0x48
 80255a6:	9111      	str	r1, [sp, #68]	; 0x44
 80255a8:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	; 0x98
 80255ac:	9015      	str	r0, [sp, #84]	; 0x54
 80255ae:	6850      	ldr	r0, [r2, #4]
 80255b0:	6812      	ldr	r2, [r2, #0]
 80255b2:	fb00 1303 	mla	r3, r0, r3, r1
 80255b6:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80255ba:	9309      	str	r3, [sp, #36]	; 0x24
 80255bc:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80255be:	681b      	ldr	r3, [r3, #0]
 80255c0:	930b      	str	r3, [sp, #44]	; 0x2c
 80255c2:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80255c4:	685b      	ldr	r3, [r3, #4]
 80255c6:	930c      	str	r3, [sp, #48]	; 0x30
 80255c8:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 80255cc:	930a      	str	r3, [sp, #40]	; 0x28
 80255ce:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80255d0:	2b00      	cmp	r3, #0
 80255d2:	dc03      	bgt.n	80255dc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 80255d4:	9b14      	ldr	r3, [sp, #80]	; 0x50
 80255d6:	2b00      	cmp	r3, #0
 80255d8:	f340 83cb 	ble.w	8025d72 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7de>
 80255dc:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80255de:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80255e2:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80255e6:	1e48      	subs	r0, r1, #1
 80255e8:	1e55      	subs	r5, r2, #1
 80255ea:	9b08      	ldr	r3, [sp, #32]
 80255ec:	2b00      	cmp	r3, #0
 80255ee:	f340 81a3 	ble.w	8025938 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a4>
 80255f2:	9e21      	ldr	r6, [sp, #132]	; 0x84
 80255f4:	9b22      	ldr	r3, [sp, #136]	; 0x88
 80255f6:	1436      	asrs	r6, r6, #16
 80255f8:	ea4f 4323 	mov.w	r3, r3, asr #16
 80255fc:	d406      	bmi.n	802560c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 80255fe:	4286      	cmp	r6, r0
 8025600:	da04      	bge.n	802560c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8025602:	2b00      	cmp	r3, #0
 8025604:	db02      	blt.n	802560c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8025606:	42ab      	cmp	r3, r5
 8025608:	f2c0 8197 	blt.w	802593a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 802560c:	3601      	adds	r6, #1
 802560e:	f100 8184 	bmi.w	802591a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 8025612:	42b1      	cmp	r1, r6
 8025614:	f2c0 8181 	blt.w	802591a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 8025618:	3301      	adds	r3, #1
 802561a:	f100 817e 	bmi.w	802591a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 802561e:	429a      	cmp	r2, r3
 8025620:	f2c0 817b 	blt.w	802591a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 8025624:	9b08      	ldr	r3, [sp, #32]
 8025626:	9f09      	ldr	r7, [sp, #36]	; 0x24
 8025628:	9313      	str	r3, [sp, #76]	; 0x4c
 802562a:	f64f 061f 	movw	r6, #63519	; 0xf81f
 802562e:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8025630:	2b00      	cmp	r3, #0
 8025632:	f340 81a4 	ble.w	802597e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
 8025636:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8025638:	9d21      	ldr	r5, [sp, #132]	; 0x84
 802563a:	1418      	asrs	r0, r3, #16
 802563c:	9b21      	ldr	r3, [sp, #132]	; 0x84
 802563e:	f3c3 3103 	ubfx	r1, r3, #12, #4
 8025642:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8025644:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 8025648:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 802564a:	142d      	asrs	r5, r5, #16
 802564c:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 8025650:	f100 81f8 	bmi.w	8025a44 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 8025654:	f102 3eff 	add.w	lr, r2, #4294967295
 8025658:	4575      	cmp	r5, lr
 802565a:	f280 81f3 	bge.w	8025a44 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 802565e:	2800      	cmp	r0, #0
 8025660:	f2c0 81f0 	blt.w	8025a44 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 8025664:	f103 3eff 	add.w	lr, r3, #4294967295
 8025668:	4570      	cmp	r0, lr
 802566a:	f280 81eb 	bge.w	8025a44 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 802566e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8025670:	b212      	sxth	r2, r2
 8025672:	fb00 5002 	mla	r0, r0, r2, r5
 8025676:	fa1f fe81 	uxth.w	lr, r1
 802567a:	eb03 0a00 	add.w	sl, r3, r0
 802567e:	ea4f 150e 	mov.w	r5, lr, lsl #4
 8025682:	f813 9000 	ldrb.w	r9, [r3, r0]
 8025686:	f89a 8001 	ldrb.w	r8, [sl, #1]
 802568a:	f5c5 7380 	rsb	r3, r5, #256	; 0x100
 802568e:	b29b      	uxth	r3, r3
 8025690:	f1bc 0f00 	cmp.w	ip, #0
 8025694:	f000 81b9 	beq.w	8025a0a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x476>
 8025698:	f81a 4002 	ldrb.w	r4, [sl, r2]
 802569c:	940d      	str	r4, [sp, #52]	; 0x34
 802569e:	eb0a 0b02 	add.w	fp, sl, r2
 80256a2:	fa1f fa8c 	uxth.w	sl, ip
 80256a6:	fb0a fe0e 	mul.w	lr, sl, lr
 80256aa:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 80256ae:	fa1f fa8a 	uxth.w	sl, sl
 80256b2:	eba5 050e 	sub.w	r5, r5, lr
 80256b6:	f89b 4001 	ldrb.w	r4, [fp, #1]
 80256ba:	940e      	str	r4, [sp, #56]	; 0x38
 80256bc:	eba3 030a 	sub.w	r3, r3, sl
 80256c0:	b2ad      	uxth	r5, r5
 80256c2:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 80256c4:	b29b      	uxth	r3, r3
 80256c6:	fb08 f505 	mul.w	r5, r8, r5
 80256ca:	fb09 5303 	mla	r3, r9, r3, r5
 80256ce:	fb0a 3304 	mla	r3, sl, r4, r3
 80256d2:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 80256d4:	fb0e 3304 	mla	r3, lr, r4, r3
 80256d8:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80256dc:	2b00      	cmp	r3, #0
 80256de:	f000 810f 	beq.w	8025900 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 80256e2:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 80256e4:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 80256e8:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 80256ec:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 80256f0:	f000 8190 	beq.w	8025a14 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x480>
 80256f4:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 80256f8:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 80256fc:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8025700:	fb09 f000 	mul.w	r0, r9, r0
 8025704:	fb0a fe0e 	mul.w	lr, sl, lr
 8025708:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 802570c:	f100 0b20 	add.w	fp, r0, #32
 8025710:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 8025714:	44ce      	add	lr, r9
 8025716:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 802571a:	ea4f 2919 	mov.w	r9, r9, lsr #8
 802571e:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 8025722:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8025726:	ea4e 0909 	orr.w	r9, lr, r9
 802572a:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 802572e:	8868      	ldrh	r0, [r5, #2]
 8025730:	d019      	beq.n	8025766 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 8025732:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 8025736:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 802573a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 802573e:	fb08 f800 	mul.w	r8, r8, r0
 8025742:	fb0a fe0e 	mul.w	lr, sl, lr
 8025746:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 802574a:	f108 0b20 	add.w	fp, r8, #32
 802574e:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 8025752:	4486      	add	lr, r0
 8025754:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 8025758:	0a00      	lsrs	r0, r0, #8
 802575a:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 802575e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8025762:	ea4e 0000 	orr.w	r0, lr, r0
 8025766:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 802576a:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 802576e:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8025772:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8025776:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 802577a:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 802577e:	ea4e 0909 	orr.w	r9, lr, r9
 8025782:	ea4a 0000 	orr.w	r0, sl, r0
 8025786:	f1bc 0f00 	cmp.w	ip, #0
 802578a:	f000 8145 	beq.w	8025a18 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>
 802578e:	f102 4200 	add.w	r2, r2, #2147483648	; 0x80000000
 8025792:	3a01      	subs	r2, #1
 8025794:	0052      	lsls	r2, r2, #1
 8025796:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8025798:	3202      	adds	r2, #2
 802579a:	2cff      	cmp	r4, #255	; 0xff
 802579c:	eb05 0e02 	add.w	lr, r5, r2
 80257a0:	5aaa      	ldrh	r2, [r5, r2]
 80257a2:	d018      	beq.n	80257d6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 80257a4:	f422 65fc 	bic.w	r5, r2, #2016	; 0x7e0
 80257a8:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80257ac:	fb04 fa02 	mul.w	sl, r4, r2
 80257b0:	ea4f 08e4 	mov.w	r8, r4, asr #3
 80257b4:	fb08 f805 	mul.w	r8, r8, r5
 80257b8:	f10a 0520 	add.w	r5, sl, #32
 80257bc:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 80257c0:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 80257c4:	f608 0801 	addw	r8, r8, #2049	; 0x801
 80257c8:	4442      	add	r2, r8
 80257ca:	0a2d      	lsrs	r5, r5, #8
 80257cc:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 80257d0:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80257d4:	432a      	orrs	r2, r5
 80257d6:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 80257d8:	f8be 5002 	ldrh.w	r5, [lr, #2]
 80257dc:	2cff      	cmp	r4, #255	; 0xff
 80257de:	d01a      	beq.n	8025816 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x282>
 80257e0:	f425 6efc 	bic.w	lr, r5, #2016	; 0x7e0
 80257e4:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80257e8:	fb04 fa05 	mul.w	sl, r4, r5
 80257ec:	ea4f 08e4 	mov.w	r8, r4, asr #3
 80257f0:	fb08 f80e 	mul.w	r8, r8, lr
 80257f4:	f10a 0e20 	add.w	lr, sl, #32
 80257f8:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 80257fc:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 8025800:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8025804:	4445      	add	r5, r8
 8025806:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802580a:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 802580e:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 8025812:	ea45 050e 	orr.w	r5, r5, lr
 8025816:	fb1c fe01 	smulbb	lr, ip, r1
 802581a:	ea4f 0eee 	mov.w	lr, lr, asr #3
 802581e:	f1cc 0810 	rsb	r8, ip, #16
 8025822:	eba8 0801 	sub.w	r8, r8, r1
 8025826:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 802582a:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 802582e:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 8025832:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 8025836:	4341      	muls	r1, r0
 8025838:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 802583c:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8025840:	ea4a 0202 	orr.w	r2, sl, r2
 8025844:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 8025848:	fb09 1108 	mla	r1, r9, r8, r1
 802584c:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8025850:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 8025854:	fb0c 1102 	mla	r1, ip, r2, r1
 8025858:	ea4b 0505 	orr.w	r5, fp, r5
 802585c:	fb0e 1e05 	mla	lr, lr, r5, r1
 8025860:	ea4f 525e 	mov.w	r2, lr, lsr #21
 8025864:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8025868:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 802586c:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8025870:	ea42 0e0e 	orr.w	lr, r2, lr
 8025874:	fa1f f28e 	uxth.w	r2, lr
 8025878:	2bff      	cmp	r3, #255	; 0xff
 802587a:	d103      	bne.n	8025884 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 802587c:	9912      	ldr	r1, [sp, #72]	; 0x48
 802587e:	29ff      	cmp	r1, #255	; 0xff
 8025880:	f000 80de 	beq.w	8025a40 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>
 8025884:	990a      	ldr	r1, [sp, #40]	; 0x28
 8025886:	8838      	ldrh	r0, [r7, #0]
 8025888:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 802588a:	434b      	muls	r3, r1
 802588c:	f103 0c01 	add.w	ip, r3, #1
 8025890:	eb0c 2323 	add.w	r3, ip, r3, asr #8
 8025894:	ea6f 2323 	mvn.w	r3, r3, asr #8
 8025898:	fa5f fc83 	uxtb.w	ip, r3
 802589c:	1203      	asrs	r3, r0, #8
 802589e:	1215      	asrs	r5, r2, #8
 80258a0:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 80258a4:	fb13 f30c 	smulbb	r3, r3, ip
 80258a8:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 80258ac:	fb05 3501 	mla	r5, r5, r1, r3
 80258b0:	10c3      	asrs	r3, r0, #3
 80258b2:	10d1      	asrs	r1, r2, #3
 80258b4:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 80258b8:	fb13 f30c 	smulbb	r3, r3, ip
 80258bc:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 80258c0:	fb01 3104 	mla	r1, r1, r4, r3
 80258c4:	00c3      	lsls	r3, r0, #3
 80258c6:	00d2      	lsls	r2, r2, #3
 80258c8:	b2db      	uxtb	r3, r3
 80258ca:	b2d2      	uxtb	r2, r2
 80258cc:	fb13 f30c 	smulbb	r3, r3, ip
 80258d0:	b2ad      	uxth	r5, r5
 80258d2:	fb02 3304 	mla	r3, r2, r4, r3
 80258d6:	b29a      	uxth	r2, r3
 80258d8:	1c6b      	adds	r3, r5, #1
 80258da:	b289      	uxth	r1, r1
 80258dc:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 80258e0:	1c53      	adds	r3, r2, #1
 80258e2:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 80258e6:	1c4a      	adds	r2, r1, #1
 80258e8:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 80258ec:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 80258f0:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 80258f4:	0949      	lsrs	r1, r1, #5
 80258f6:	432b      	orrs	r3, r5
 80258f8:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80258fc:	430b      	orrs	r3, r1
 80258fe:	803b      	strh	r3, [r7, #0]
 8025900:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8025902:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 8025904:	4413      	add	r3, r2
 8025906:	9321      	str	r3, [sp, #132]	; 0x84
 8025908:	9a22      	ldr	r2, [sp, #136]	; 0x88
 802590a:	9b24      	ldr	r3, [sp, #144]	; 0x90
 802590c:	441a      	add	r2, r3
 802590e:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8025910:	9222      	str	r2, [sp, #136]	; 0x88
 8025912:	3b01      	subs	r3, #1
 8025914:	3702      	adds	r7, #2
 8025916:	9313      	str	r3, [sp, #76]	; 0x4c
 8025918:	e689      	b.n	802562e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 802591a:	9b21      	ldr	r3, [sp, #132]	; 0x84
 802591c:	9e23      	ldr	r6, [sp, #140]	; 0x8c
 802591e:	9c22      	ldr	r4, [sp, #136]	; 0x88
 8025920:	4433      	add	r3, r6
 8025922:	9321      	str	r3, [sp, #132]	; 0x84
 8025924:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8025926:	441c      	add	r4, r3
 8025928:	9b08      	ldr	r3, [sp, #32]
 802592a:	9422      	str	r4, [sp, #136]	; 0x88
 802592c:	3b01      	subs	r3, #1
 802592e:	9308      	str	r3, [sp, #32]
 8025930:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8025932:	3302      	adds	r3, #2
 8025934:	9309      	str	r3, [sp, #36]	; 0x24
 8025936:	e658      	b.n	80255ea <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56>
 8025938:	d028      	beq.n	802598c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 802593a:	9b08      	ldr	r3, [sp, #32]
 802593c:	9823      	ldr	r0, [sp, #140]	; 0x8c
 802593e:	9d21      	ldr	r5, [sp, #132]	; 0x84
 8025940:	3b01      	subs	r3, #1
 8025942:	fb00 5003 	mla	r0, r0, r3, r5
 8025946:	1400      	asrs	r0, r0, #16
 8025948:	f53f ae6c 	bmi.w	8025624 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 802594c:	3901      	subs	r1, #1
 802594e:	4288      	cmp	r0, r1
 8025950:	f6bf ae68 	bge.w	8025624 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8025954:	9924      	ldr	r1, [sp, #144]	; 0x90
 8025956:	9822      	ldr	r0, [sp, #136]	; 0x88
 8025958:	fb01 0303 	mla	r3, r1, r3, r0
 802595c:	141b      	asrs	r3, r3, #16
 802595e:	f53f ae61 	bmi.w	8025624 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8025962:	3a01      	subs	r2, #1
 8025964:	4293      	cmp	r3, r2
 8025966:	f6bf ae5d 	bge.w	8025624 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 802596a:	9b08      	ldr	r3, [sp, #32]
 802596c:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
 8025970:	9313      	str	r3, [sp, #76]	; 0x4c
 8025972:	f64f 061f 	movw	r6, #63519	; 0xf81f
 8025976:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8025978:	2b00      	cmp	r3, #0
 802597a:	f300 8082 	bgt.w	8025a82 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ee>
 802597e:	9b08      	ldr	r3, [sp, #32]
 8025980:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8025984:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8025986:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 802598a:	9309      	str	r3, [sp, #36]	; 0x24
 802598c:	9b11      	ldr	r3, [sp, #68]	; 0x44
 802598e:	2b00      	cmp	r3, #0
 8025990:	f340 81ef 	ble.w	8025d72 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7de>
 8025994:	ee30 0a04 	vadd.f32	s0, s0, s8
 8025998:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 802599c:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80259a0:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80259a2:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80259a6:	ee31 1a05 	vadd.f32	s2, s2, s10
 80259aa:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80259ae:	eef0 6a62 	vmov.f32	s13, s5
 80259b2:	ee61 7a27 	vmul.f32	s15, s2, s15
 80259b6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80259ba:	ee77 2a62 	vsub.f32	s5, s14, s5
 80259be:	edcd 6a21 	vstr	s13, [sp, #132]	; 0x84
 80259c2:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80259c6:	eef0 6a43 	vmov.f32	s13, s6
 80259ca:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80259ce:	ee12 2a90 	vmov	r2, s5
 80259d2:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80259d6:	fb92 f3f3 	sdiv	r3, r2, r3
 80259da:	ee13 2a10 	vmov	r2, s6
 80259de:	9323      	str	r3, [sp, #140]	; 0x8c
 80259e0:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80259e2:	fb92 f3f3 	sdiv	r3, r2, r3
 80259e6:	9324      	str	r3, [sp, #144]	; 0x90
 80259e8:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80259ea:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80259ec:	3b01      	subs	r3, #1
 80259ee:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80259f2:	9311      	str	r3, [sp, #68]	; 0x44
 80259f4:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80259f6:	edcd 6a22 	vstr	s13, [sp, #136]	; 0x88
 80259fa:	bf08      	it	eq
 80259fc:	4613      	moveq	r3, r2
 80259fe:	9308      	str	r3, [sp, #32]
 8025a00:	eeb0 3a67 	vmov.f32	s6, s15
 8025a04:	eef0 2a47 	vmov.f32	s5, s14
 8025a08:	e5e1      	b.n	80255ce <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8025a0a:	fb08 f505 	mul.w	r5, r8, r5
 8025a0e:	fb09 5303 	mla	r3, r9, r3, r5
 8025a12:	e661      	b.n	80256d8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x144>
 8025a14:	4681      	mov	r9, r0
 8025a16:	e688      	b.n	802572a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
 8025a18:	f1c1 0210 	rsb	r2, r1, #16
 8025a1c:	4341      	muls	r1, r0
 8025a1e:	fb09 1902 	mla	r9, r9, r2, r1
 8025a22:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8025a26:	ea4f 5259 	mov.w	r2, r9, lsr #21
 8025a2a:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8025a2e:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8025a32:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8025a36:	ea42 0909 	orr.w	r9, r2, r9
 8025a3a:	fa1f f289 	uxth.w	r2, r9
 8025a3e:	e71b      	b.n	8025878 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
 8025a40:	803a      	strh	r2, [r7, #0]
 8025a42:	e75d      	b.n	8025900 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8025a44:	f115 0e01 	adds.w	lr, r5, #1
 8025a48:	f53f af5a 	bmi.w	8025900 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8025a4c:	4572      	cmp	r2, lr
 8025a4e:	f6ff af57 	blt.w	8025900 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8025a52:	f110 0e01 	adds.w	lr, r0, #1
 8025a56:	f53f af53 	bmi.w	8025900 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8025a5a:	4573      	cmp	r3, lr
 8025a5c:	f6ff af50 	blt.w	8025900 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8025a60:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8025a62:	9502      	str	r5, [sp, #8]
 8025a64:	b21b      	sxth	r3, r3
 8025a66:	b212      	sxth	r2, r2
 8025a68:	e9cd 0103 	strd	r0, r1, [sp, #12]
 8025a6c:	9301      	str	r3, [sp, #4]
 8025a6e:	9200      	str	r2, [sp, #0]
 8025a70:	e9cd c405 	strd	ip, r4, [sp, #20]
 8025a74:	e9dd 230b 	ldrd	r2, r3, [sp, #44]	; 0x2c
 8025a78:	4639      	mov	r1, r7
 8025a7a:	9815      	ldr	r0, [sp, #84]	; 0x54
 8025a7c:	f7ff fc04 	bl	8025288 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>
 8025a80:	e73e      	b.n	8025900 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8025a82:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8025a84:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8025a88:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8025a8a:	f3c3 3503 	ubfx	r5, r3, #12, #4
 8025a8e:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8025a90:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8025a94:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8025a96:	141f      	asrs	r7, r3, #16
 8025a98:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8025a9a:	141b      	asrs	r3, r3, #16
 8025a9c:	fb01 3707 	mla	r7, r1, r7, r3
 8025aa0:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8025aa2:	fa1f fc82 	uxth.w	ip, r2
 8025aa6:	eb03 0a07 	add.w	sl, r3, r7
 8025aaa:	ea4f 100c 	mov.w	r0, ip, lsl #4
 8025aae:	f813 9007 	ldrb.w	r9, [r3, r7]
 8025ab2:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8025ab6:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 8025aba:	b29b      	uxth	r3, r3
 8025abc:	2d00      	cmp	r5, #0
 8025abe:	f000 813d 	beq.w	8025d3c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a8>
 8025ac2:	f81a 4001 	ldrb.w	r4, [sl, r1]
 8025ac6:	940f      	str	r4, [sp, #60]	; 0x3c
 8025ac8:	eb0a 0b01 	add.w	fp, sl, r1
 8025acc:	fa1f fa85 	uxth.w	sl, r5
 8025ad0:	fb0a fc0c 	mul.w	ip, sl, ip
 8025ad4:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 8025ad8:	fa1f fa8a 	uxth.w	sl, sl
 8025adc:	eba0 000c 	sub.w	r0, r0, ip
 8025ae0:	eba3 030a 	sub.w	r3, r3, sl
 8025ae4:	b280      	uxth	r0, r0
 8025ae6:	fb08 f000 	mul.w	r0, r8, r0
 8025aea:	b29b      	uxth	r3, r3
 8025aec:	fb09 0303 	mla	r3, r9, r3, r0
 8025af0:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8025af2:	f89b 4001 	ldrb.w	r4, [fp, #1]
 8025af6:	9410      	str	r4, [sp, #64]	; 0x40
 8025af8:	fb0a 3300 	mla	r3, sl, r0, r3
 8025afc:	fb0c 3304 	mla	r3, ip, r4, r3
 8025b00:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8025b04:	2b00      	cmp	r3, #0
 8025b06:	f000 810b 	beq.w	8025d20 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78c>
 8025b0a:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8025b0c:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8025b0e:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8025b12:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 8025b16:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 8025b1a:	f000 8114 	beq.w	8025d46 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b2>
 8025b1e:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 8025b22:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 8025b26:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8025b2a:	fb09 f707 	mul.w	r7, r9, r7
 8025b2e:	fb0a fc0c 	mul.w	ip, sl, ip
 8025b32:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 8025b36:	f107 0b20 	add.w	fp, r7, #32
 8025b3a:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 8025b3e:	44cc      	add	ip, r9
 8025b40:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 8025b44:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8025b48:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8025b4c:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8025b50:	ea4c 0909 	orr.w	r9, ip, r9
 8025b54:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8025b58:	8847      	ldrh	r7, [r0, #2]
 8025b5a:	d019      	beq.n	8025b90 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5fc>
 8025b5c:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 8025b60:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 8025b64:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8025b68:	fb08 f807 	mul.w	r8, r8, r7
 8025b6c:	fb0a fc0c 	mul.w	ip, sl, ip
 8025b70:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 8025b74:	f108 0b20 	add.w	fp, r8, #32
 8025b78:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 8025b7c:	44bc      	add	ip, r7
 8025b7e:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 8025b82:	0a3f      	lsrs	r7, r7, #8
 8025b84:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8025b88:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8025b8c:	ea4c 0707 	orr.w	r7, ip, r7
 8025b90:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 8025b94:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 8025b98:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8025b9c:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8025ba0:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8025ba4:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8025ba8:	ea4c 0909 	orr.w	r9, ip, r9
 8025bac:	ea4a 0707 	orr.w	r7, sl, r7
 8025bb0:	2d00      	cmp	r5, #0
 8025bb2:	f000 80ca 	beq.w	8025d4a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b6>
 8025bb6:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 8025bba:	3901      	subs	r1, #1
 8025bbc:	0049      	lsls	r1, r1, #1
 8025bbe:	3102      	adds	r1, #2
 8025bc0:	eb00 0c01 	add.w	ip, r0, r1
 8025bc4:	5a41      	ldrh	r1, [r0, r1]
 8025bc6:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8025bc8:	28ff      	cmp	r0, #255	; 0xff
 8025bca:	d019      	beq.n	8025c00 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66c>
 8025bcc:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8025bce:	f421 60fc 	bic.w	r0, r1, #2016	; 0x7e0
 8025bd2:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8025bd6:	fb04 fa01 	mul.w	sl, r4, r1
 8025bda:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8025bde:	fb08 f800 	mul.w	r8, r8, r0
 8025be2:	f10a 0020 	add.w	r0, sl, #32
 8025be6:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 8025bea:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 8025bee:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8025bf2:	4441      	add	r1, r8
 8025bf4:	0a00      	lsrs	r0, r0, #8
 8025bf6:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 8025bfa:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8025bfe:	4301      	orrs	r1, r0
 8025c00:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8025c02:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 8025c06:	2cff      	cmp	r4, #255	; 0xff
 8025c08:	d01a      	beq.n	8025c40 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ac>
 8025c0a:	f420 6cfc 	bic.w	ip, r0, #2016	; 0x7e0
 8025c0e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8025c12:	fb04 fa00 	mul.w	sl, r4, r0
 8025c16:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8025c1a:	fb08 f80c 	mul.w	r8, r8, ip
 8025c1e:	f10a 0c20 	add.w	ip, sl, #32
 8025c22:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 8025c26:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 8025c2a:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8025c2e:	4440      	add	r0, r8
 8025c30:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8025c34:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 8025c38:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8025c3c:	ea40 000c 	orr.w	r0, r0, ip
 8025c40:	fb15 fc02 	smulbb	ip, r5, r2
 8025c44:	ea4f 0cec 	mov.w	ip, ip, asr #3
 8025c48:	f1c5 0810 	rsb	r8, r5, #16
 8025c4c:	eba8 0802 	sub.w	r8, r8, r2
 8025c50:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 8025c54:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 8025c58:	437a      	muls	r2, r7
 8025c5a:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 8025c5e:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 8025c62:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8025c66:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8025c6a:	fb09 2208 	mla	r2, r9, r8, r2
 8025c6e:	ea4a 0101 	orr.w	r1, sl, r1
 8025c72:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 8025c76:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8025c7a:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8025c7e:	fb05 2201 	mla	r2, r5, r1, r2
 8025c82:	ea4b 0000 	orr.w	r0, fp, r0
 8025c86:	fb0c 2200 	mla	r2, ip, r0, r2
 8025c8a:	0d57      	lsrs	r7, r2, #21
 8025c8c:	0952      	lsrs	r2, r2, #5
 8025c8e:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8025c92:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8025c96:	433a      	orrs	r2, r7
 8025c98:	2bff      	cmp	r3, #255	; 0xff
 8025c9a:	b292      	uxth	r2, r2
 8025c9c:	d102      	bne.n	8025ca4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 8025c9e:	9912      	ldr	r1, [sp, #72]	; 0x48
 8025ca0:	29ff      	cmp	r1, #255	; 0xff
 8025ca2:	d063      	beq.n	8025d6c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7d8>
 8025ca4:	980a      	ldr	r0, [sp, #40]	; 0x28
 8025ca6:	f8be 1000 	ldrh.w	r1, [lr]
 8025caa:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8025cac:	4343      	muls	r3, r0
 8025cae:	1c58      	adds	r0, r3, #1
 8025cb0:	eb00 2323 	add.w	r3, r0, r3, asr #8
 8025cb4:	ea6f 2323 	mvn.w	r3, r3, asr #8
 8025cb8:	1208      	asrs	r0, r1, #8
 8025cba:	b2db      	uxtb	r3, r3
 8025cbc:	1215      	asrs	r5, r2, #8
 8025cbe:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8025cc2:	fb10 f003 	smulbb	r0, r0, r3
 8025cc6:	10cf      	asrs	r7, r1, #3
 8025cc8:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8025ccc:	00c9      	lsls	r1, r1, #3
 8025cce:	fb05 0504 	mla	r5, r5, r4, r0
 8025cd2:	b2c9      	uxtb	r1, r1
 8025cd4:	10d0      	asrs	r0, r2, #3
 8025cd6:	00d2      	lsls	r2, r2, #3
 8025cd8:	fb11 f103 	smulbb	r1, r1, r3
 8025cdc:	b2d2      	uxtb	r2, r2
 8025cde:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8025ce2:	fb02 1204 	mla	r2, r2, r4, r1
 8025ce6:	fb17 f703 	smulbb	r7, r7, r3
 8025cea:	b2ad      	uxth	r5, r5
 8025cec:	b292      	uxth	r2, r2
 8025cee:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8025cf2:	fb00 7004 	mla	r0, r0, r4, r7
 8025cf6:	1c6b      	adds	r3, r5, #1
 8025cf8:	1c57      	adds	r7, r2, #1
 8025cfa:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8025cfe:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 8025d02:	b280      	uxth	r0, r0
 8025d04:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8025d08:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8025d0c:	433d      	orrs	r5, r7
 8025d0e:	1c47      	adds	r7, r0, #1
 8025d10:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 8025d14:	097f      	lsrs	r7, r7, #5
 8025d16:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8025d1a:	433d      	orrs	r5, r7
 8025d1c:	f8ae 5000 	strh.w	r5, [lr]
 8025d20:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8025d22:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 8025d24:	4413      	add	r3, r2
 8025d26:	9321      	str	r3, [sp, #132]	; 0x84
 8025d28:	9a22      	ldr	r2, [sp, #136]	; 0x88
 8025d2a:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8025d2c:	441a      	add	r2, r3
 8025d2e:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8025d30:	9222      	str	r2, [sp, #136]	; 0x88
 8025d32:	3b01      	subs	r3, #1
 8025d34:	f10e 0e02 	add.w	lr, lr, #2
 8025d38:	9313      	str	r3, [sp, #76]	; 0x4c
 8025d3a:	e61c      	b.n	8025976 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e2>
 8025d3c:	fb08 f000 	mul.w	r0, r8, r0
 8025d40:	fb09 0303 	mla	r3, r9, r3, r0
 8025d44:	e6dc      	b.n	8025b00 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56c>
 8025d46:	46b9      	mov	r9, r7
 8025d48:	e704      	b.n	8025b54 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c0>
 8025d4a:	f1c2 0110 	rsb	r1, r2, #16
 8025d4e:	437a      	muls	r2, r7
 8025d50:	fb09 2901 	mla	r9, r9, r1, r2
 8025d54:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8025d58:	ea4f 5059 	mov.w	r0, r9, lsr #21
 8025d5c:	ea4f 1259 	mov.w	r2, r9, lsr #5
 8025d60:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8025d64:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8025d68:	4302      	orrs	r2, r0
 8025d6a:	e795      	b.n	8025c98 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x704>
 8025d6c:	f8ae 2000 	strh.w	r2, [lr]
 8025d70:	e7d6      	b.n	8025d20 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78c>
 8025d72:	b017      	add	sp, #92	; 0x5c
 8025d74:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08025d78 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 8025d78:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8025d7c:	b085      	sub	sp, #20
 8025d7e:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	; 0x40
 8025d82:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	; 0x38
 8025d86:	9103      	str	r1, [sp, #12]
 8025d88:	fb00 7406 	mla	r4, r0, r6, r7
 8025d8c:	eb03 0544 	add.w	r5, r3, r4, lsl #1
 8025d90:	2800      	cmp	r0, #0
 8025d92:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	; 0x3c
 8025d96:	f89d 1048 	ldrb.w	r1, [sp, #72]	; 0x48
 8025d9a:	f89d e04c 	ldrb.w	lr, [sp, #76]	; 0x4c
 8025d9e:	9501      	str	r5, [sp, #4]
 8025da0:	eb02 0904 	add.w	r9, r2, r4
 8025da4:	f2c0 8141 	blt.w	802602a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
 8025da8:	4583      	cmp	fp, r0
 8025daa:	f340 813e 	ble.w	802602a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
 8025dae:	2f00      	cmp	r7, #0
 8025db0:	f2c0 8137 	blt.w	8026022 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
 8025db4:	42be      	cmp	r6, r7
 8025db6:	f340 8134 	ble.w	8026022 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
 8025dba:	f812 c004 	ldrb.w	ip, [r2, r4]
 8025dbe:	f833 3014 	ldrh.w	r3, [r3, r4, lsl #1]
 8025dc2:	ea4f 02ec 	mov.w	r2, ip, asr #3
 8025dc6:	f423 65fc 	bic.w	r5, r3, #2016	; 0x7e0
 8025dca:	4355      	muls	r5, r2
 8025dcc:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8025dd0:	f64f 041f 	movw	r4, #63519	; 0xf81f
 8025dd4:	fb0c f203 	mul.w	r2, ip, r3
 8025dd8:	ea04 1355 	and.w	r3, r4, r5, lsr #5
 8025ddc:	f605 0501 	addw	r5, r5, #2049	; 0x801
 8025de0:	441d      	add	r5, r3
 8025de2:	f102 0320 	add.w	r3, r2, #32
 8025de6:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8025dea:	0a1b      	lsrs	r3, r3, #8
 8025dec:	ea04 1455 	and.w	r4, r4, r5, lsr #5
 8025df0:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8025df4:	431c      	orrs	r4, r3
 8025df6:	1c7b      	adds	r3, r7, #1
 8025df8:	f100 811c 	bmi.w	8026034 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
 8025dfc:	429e      	cmp	r6, r3
 8025dfe:	f340 8119 	ble.w	8026034 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
 8025e02:	2900      	cmp	r1, #0
 8025e04:	f000 8119 	beq.w	802603a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c2>
 8025e08:	9a01      	ldr	r2, [sp, #4]
 8025e0a:	f899 3001 	ldrb.w	r3, [r9, #1]
 8025e0e:	8855      	ldrh	r5, [r2, #2]
 8025e10:	ea4f 08e3 	mov.w	r8, r3, asr #3
 8025e14:	f425 62fc 	bic.w	r2, r5, #2016	; 0x7e0
 8025e18:	fb08 f802 	mul.w	r8, r8, r2
 8025e1c:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8025e20:	f64f 021f 	movw	r2, #63519	; 0xf81f
 8025e24:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
 8025e28:	435d      	muls	r5, r3
 8025e2a:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8025e2e:	44d0      	add	r8, sl
 8025e30:	f105 0a20 	add.w	sl, r5, #32
 8025e34:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
 8025e38:	0a2d      	lsrs	r5, r5, #8
 8025e3a:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 8025e3e:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8025e42:	432a      	orrs	r2, r5
 8025e44:	3001      	adds	r0, #1
 8025e46:	f100 80fe 	bmi.w	8026046 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
 8025e4a:	4583      	cmp	fp, r0
 8025e4c:	f340 80fb 	ble.w	8026046 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
 8025e50:	f1be 0f00 	cmp.w	lr, #0
 8025e54:	f000 80fc 	beq.w	8026050 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2d8>
 8025e58:	2f00      	cmp	r7, #0
 8025e5a:	f2c0 80f1 	blt.w	8026040 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
 8025e5e:	42be      	cmp	r6, r7
 8025e60:	f340 80ee 	ble.w	8026040 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
 8025e64:	9801      	ldr	r0, [sp, #4]
 8025e66:	f819 5006 	ldrb.w	r5, [r9, r6]
 8025e6a:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
 8025e6e:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8025e72:	f428 60fc 	bic.w	r0, r8, #2016	; 0x7e0
 8025e76:	fb0a fa00 	mul.w	sl, sl, r0
 8025e7a:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 8025e7e:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 8025e82:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
 8025e86:	fb05 f808 	mul.w	r8, r5, r8
 8025e8a:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
 8025e8e:	4482      	add	sl, r0
 8025e90:	f108 0020 	add.w	r0, r8, #32
 8025e94:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 8025e98:	0a00      	lsrs	r0, r0, #8
 8025e9a:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
 8025e9e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8025ea2:	ea4b 0b00 	orr.w	fp, fp, r0
 8025ea6:	3701      	adds	r7, #1
 8025ea8:	f100 80d7 	bmi.w	802605a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
 8025eac:	42be      	cmp	r6, r7
 8025eae:	f340 80d4 	ble.w	802605a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
 8025eb2:	2900      	cmp	r1, #0
 8025eb4:	f000 80d4 	beq.w	8026060 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e8>
 8025eb8:	3601      	adds	r6, #1
 8025eba:	9801      	ldr	r0, [sp, #4]
 8025ebc:	f819 7006 	ldrb.w	r7, [r9, r6]
 8025ec0:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
 8025ec4:	ea4f 09e7 	mov.w	r9, r7, asr #3
 8025ec8:	f420 66fc 	bic.w	r6, r0, #2016	; 0x7e0
 8025ecc:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8025ed0:	fb09 f906 	mul.w	r9, r9, r6
 8025ed4:	fb07 f800 	mul.w	r8, r7, r0
 8025ed8:	f64f 001f 	movw	r0, #63519	; 0xf81f
 8025edc:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
 8025ee0:	f609 0901 	addw	r9, r9, #2049	; 0x801
 8025ee4:	44d1      	add	r9, sl
 8025ee6:	ea00 1659 	and.w	r6, r0, r9, lsr #5
 8025eea:	f108 0020 	add.w	r0, r8, #32
 8025eee:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 8025ef2:	0a00      	lsrs	r0, r0, #8
 8025ef4:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8025ef8:	4330      	orrs	r0, r6
 8025efa:	b28e      	uxth	r6, r1
 8025efc:	fa1f f98e 	uxth.w	r9, lr
 8025f00:	fb06 f809 	mul.w	r8, r6, r9
 8025f04:	ea4f 4a04 	mov.w	sl, r4, lsl #16
 8025f08:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 8025f0c:	0136      	lsls	r6, r6, #4
 8025f0e:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8025f12:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
 8025f16:	9601      	str	r6, [sp, #4]
 8025f18:	ea4a 0404 	orr.w	r4, sl, r4
 8025f1c:	fa1f f689 	uxth.w	r6, r9
 8025f20:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 8025f24:	fb11 f90e 	smulbb	r9, r1, lr
 8025f28:	f3c9 09c7 	ubfx	r9, r9, #3, #8
 8025f2c:	9602      	str	r6, [sp, #8]
 8025f2e:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8025f32:	4626      	mov	r6, r4
 8025f34:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8025f38:	f1ce 0410 	rsb	r4, lr, #16
 8025f3c:	1a64      	subs	r4, r4, r1
 8025f3e:	ea4a 0202 	orr.w	r2, sl, r2
 8025f42:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
 8025f46:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 8025f4a:	434a      	muls	r2, r1
 8025f4c:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 8025f50:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8025f54:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8025f58:	fb04 2406 	mla	r4, r4, r6, r2
 8025f5c:	ea4a 0000 	orr.w	r0, sl, r0
 8025f60:	fb09 4200 	mla	r2, r9, r0, r4
 8025f64:	ea4f 440b 	mov.w	r4, fp, lsl #16
 8025f68:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8025f6c:	9801      	ldr	r0, [sp, #4]
 8025f6e:	9903      	ldr	r1, [sp, #12]
 8025f70:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 8025f74:	ea44 0b0b 	orr.w	fp, r4, fp
 8025f78:	9c02      	ldr	r4, [sp, #8]
 8025f7a:	8809      	ldrh	r1, [r1, #0]
 8025f7c:	f5c0 7080 	rsb	r0, r0, #256	; 0x100
 8025f80:	1b00      	subs	r0, r0, r4
 8025f82:	9c01      	ldr	r4, [sp, #4]
 8025f84:	eba4 0608 	sub.w	r6, r4, r8
 8025f88:	b2b6      	uxth	r6, r6
 8025f8a:	b280      	uxth	r0, r0
 8025f8c:	4373      	muls	r3, r6
 8025f8e:	fb0c 3300 	mla	r3, ip, r0, r3
 8025f92:	9802      	ldr	r0, [sp, #8]
 8025f94:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 8025f98:	fb00 3505 	mla	r5, r0, r5, r3
 8025f9c:	fb0e 2e0b 	mla	lr, lr, fp, r2
 8025fa0:	fb08 5707 	mla	r7, r8, r7, r5
 8025fa4:	ea4f 525e 	mov.w	r2, lr, lsr #21
 8025fa8:	120b      	asrs	r3, r1, #8
 8025faa:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8025fae:	ea6f 2727 	mvn.w	r7, r7, asr #8
 8025fb2:	b2ff      	uxtb	r7, r7
 8025fb4:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8025fb8:	10c8      	asrs	r0, r1, #3
 8025fba:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8025fbe:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 8025fc2:	00c9      	lsls	r1, r1, #3
 8025fc4:	437b      	muls	r3, r7
 8025fc6:	ea42 0e0e 	orr.w	lr, r2, lr
 8025fca:	b2c9      	uxtb	r1, r1
 8025fcc:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8025fd0:	fa1f f28e 	uxth.w	r2, lr
 8025fd4:	4378      	muls	r0, r7
 8025fd6:	434f      	muls	r7, r1
 8025fd8:	1c59      	adds	r1, r3, #1
 8025fda:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 8025fde:	1213      	asrs	r3, r2, #8
 8025fe0:	f023 0307 	bic.w	r3, r3, #7
 8025fe4:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 8025fe8:	1c41      	adds	r1, r0, #1
 8025fea:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 8025fee:	10d1      	asrs	r1, r2, #3
 8025ff0:	f021 0103 	bic.w	r1, r1, #3
 8025ff4:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 8025ff8:	021b      	lsls	r3, r3, #8
 8025ffa:	00c9      	lsls	r1, r1, #3
 8025ffc:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8026000:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 8026004:	430b      	orrs	r3, r1
 8026006:	1c79      	adds	r1, r7, #1
 8026008:	eb01 2717 	add.w	r7, r1, r7, lsr #8
 802600c:	00d2      	lsls	r2, r2, #3
 802600e:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 8026012:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8026016:	431a      	orrs	r2, r3
 8026018:	9b03      	ldr	r3, [sp, #12]
 802601a:	801a      	strh	r2, [r3, #0]
 802601c:	b005      	add	sp, #20
 802601e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8026022:	f04f 0c00 	mov.w	ip, #0
 8026026:	4664      	mov	r4, ip
 8026028:	e6e5      	b.n	8025df6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7e>
 802602a:	2300      	movs	r3, #0
 802602c:	469c      	mov	ip, r3
 802602e:	461a      	mov	r2, r3
 8026030:	461c      	mov	r4, r3
 8026032:	e707      	b.n	8025e44 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 8026034:	2300      	movs	r3, #0
 8026036:	461a      	mov	r2, r3
 8026038:	e704      	b.n	8025e44 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 802603a:	460b      	mov	r3, r1
 802603c:	460a      	mov	r2, r1
 802603e:	e701      	b.n	8025e44 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 8026040:	2500      	movs	r5, #0
 8026042:	46ab      	mov	fp, r5
 8026044:	e72f      	b.n	8025ea6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x12e>
 8026046:	2700      	movs	r7, #0
 8026048:	463d      	mov	r5, r7
 802604a:	4638      	mov	r0, r7
 802604c:	46bb      	mov	fp, r7
 802604e:	e754      	b.n	8025efa <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 8026050:	4677      	mov	r7, lr
 8026052:	4675      	mov	r5, lr
 8026054:	4670      	mov	r0, lr
 8026056:	46f3      	mov	fp, lr
 8026058:	e74f      	b.n	8025efa <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 802605a:	2700      	movs	r7, #0
 802605c:	4638      	mov	r0, r7
 802605e:	e74c      	b.n	8025efa <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 8026060:	460f      	mov	r7, r1
 8026062:	4608      	mov	r0, r1
 8026064:	e749      	b.n	8025efa <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
	...

08026068 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8026068:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802606c:	b093      	sub	sp, #76	; 0x4c
 802606e:	9210      	str	r2, [sp, #64]	; 0x40
 8026070:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8026072:	910e      	str	r1, [sp, #56]	; 0x38
 8026074:	9306      	str	r3, [sp, #24]
 8026076:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
 802607a:	9011      	str	r0, [sp, #68]	; 0x44
 802607c:	6850      	ldr	r0, [r2, #4]
 802607e:	6812      	ldr	r2, [r2, #0]
 8026080:	fb00 1303 	mla	r3, r0, r3, r1
 8026084:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8026088:	9307      	str	r3, [sp, #28]
 802608a:	9b24      	ldr	r3, [sp, #144]	; 0x90
 802608c:	681b      	ldr	r3, [r3, #0]
 802608e:	9308      	str	r3, [sp, #32]
 8026090:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8026092:	685b      	ldr	r3, [r3, #4]
 8026094:	9309      	str	r3, [sp, #36]	; 0x24
 8026096:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8026098:	2b00      	cmp	r3, #0
 802609a:	dc03      	bgt.n	80260a4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 802609c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 802609e:	2b00      	cmp	r3, #0
 80260a0:	f340 83b4 	ble.w	802680c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a4>
 80260a4:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80260a6:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80260aa:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80260ae:	1e48      	subs	r0, r1, #1
 80260b0:	1e55      	subs	r5, r2, #1
 80260b2:	9b06      	ldr	r3, [sp, #24]
 80260b4:	2b00      	cmp	r3, #0
 80260b6:	f340 8163 	ble.w	8026380 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x318>
 80260ba:	9e1d      	ldr	r6, [sp, #116]	; 0x74
 80260bc:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 80260be:	1436      	asrs	r6, r6, #16
 80260c0:	ea4f 4323 	mov.w	r3, r3, asr #16
 80260c4:	d406      	bmi.n	80260d4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 80260c6:	4286      	cmp	r6, r0
 80260c8:	da04      	bge.n	80260d4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 80260ca:	2b00      	cmp	r3, #0
 80260cc:	db02      	blt.n	80260d4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 80260ce:	42ab      	cmp	r3, r5
 80260d0:	f2c0 8157 	blt.w	8026382 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31a>
 80260d4:	3601      	adds	r6, #1
 80260d6:	f100 8144 	bmi.w	8026362 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 80260da:	42b1      	cmp	r1, r6
 80260dc:	f2c0 8141 	blt.w	8026362 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 80260e0:	3301      	adds	r3, #1
 80260e2:	f100 813e 	bmi.w	8026362 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 80260e6:	429a      	cmp	r2, r3
 80260e8:	f2c0 813b 	blt.w	8026362 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 80260ec:	9b06      	ldr	r3, [sp, #24]
 80260ee:	9f07      	ldr	r7, [sp, #28]
 80260f0:	930f      	str	r3, [sp, #60]	; 0x3c
 80260f2:	f64f 061f 	movw	r6, #63519	; 0xf81f
 80260f6:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80260f8:	2b00      	cmp	r3, #0
 80260fa:	f340 8164 	ble.w	80263c6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35e>
 80260fe:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8026100:	9d1d      	ldr	r5, [sp, #116]	; 0x74
 8026102:	1418      	asrs	r0, r3, #16
 8026104:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8026106:	f3c3 3103 	ubfx	r1, r3, #12, #4
 802610a:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 802610c:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 8026110:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8026112:	142d      	asrs	r5, r5, #16
 8026114:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 8026118:	f100 81ee 	bmi.w	80264f8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 802611c:	f102 3eff 	add.w	lr, r2, #4294967295
 8026120:	4575      	cmp	r5, lr
 8026122:	f280 81e9 	bge.w	80264f8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 8026126:	2800      	cmp	r0, #0
 8026128:	f2c0 81e6 	blt.w	80264f8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 802612c:	f103 3eff 	add.w	lr, r3, #4294967295
 8026130:	4570      	cmp	r0, lr
 8026132:	f280 81e1 	bge.w	80264f8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 8026136:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8026138:	b212      	sxth	r2, r2
 802613a:	fb00 5002 	mla	r0, r0, r2, r5
 802613e:	fa1f fe81 	uxth.w	lr, r1
 8026142:	eb03 0a00 	add.w	sl, r3, r0
 8026146:	ea4f 150e 	mov.w	r5, lr, lsl #4
 802614a:	f813 9000 	ldrb.w	r9, [r3, r0]
 802614e:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8026152:	f5c5 7380 	rsb	r3, r5, #256	; 0x100
 8026156:	b29b      	uxth	r3, r3
 8026158:	f1bc 0f00 	cmp.w	ip, #0
 802615c:	f000 8179 	beq.w	8026452 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
 8026160:	f81a 4002 	ldrb.w	r4, [sl, r2]
 8026164:	940a      	str	r4, [sp, #40]	; 0x28
 8026166:	eb0a 0b02 	add.w	fp, sl, r2
 802616a:	fa1f fa8c 	uxth.w	sl, ip
 802616e:	fb0a fe0e 	mul.w	lr, sl, lr
 8026172:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 8026176:	fa1f fa8a 	uxth.w	sl, sl
 802617a:	eba5 050e 	sub.w	r5, r5, lr
 802617e:	f89b 4001 	ldrb.w	r4, [fp, #1]
 8026182:	940b      	str	r4, [sp, #44]	; 0x2c
 8026184:	eba3 030a 	sub.w	r3, r3, sl
 8026188:	b2ad      	uxth	r5, r5
 802618a:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 802618c:	b29b      	uxth	r3, r3
 802618e:	fb08 f505 	mul.w	r5, r8, r5
 8026192:	fb09 5303 	mla	r3, r9, r3, r5
 8026196:	fb0a 3304 	mla	r3, sl, r4, r3
 802619a:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 802619c:	fb0e 3304 	mla	r3, lr, r4, r3
 80261a0:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80261a4:	2b00      	cmp	r3, #0
 80261a6:	f000 80cf 	beq.w	8026348 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 80261aa:	9c08      	ldr	r4, [sp, #32]
 80261ac:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 80261b0:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 80261b4:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 80261b8:	f000 8150 	beq.w	802645c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f4>
 80261bc:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 80261c0:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 80261c4:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80261c8:	fb09 f000 	mul.w	r0, r9, r0
 80261cc:	fb0a fe0e 	mul.w	lr, sl, lr
 80261d0:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 80261d4:	f100 0b20 	add.w	fp, r0, #32
 80261d8:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 80261dc:	44ce      	add	lr, r9
 80261de:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 80261e2:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80261e6:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 80261ea:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 80261ee:	ea4e 0909 	orr.w	r9, lr, r9
 80261f2:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 80261f6:	8868      	ldrh	r0, [r5, #2]
 80261f8:	d019      	beq.n	802622e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
 80261fa:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 80261fe:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 8026202:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8026206:	fb08 f800 	mul.w	r8, r8, r0
 802620a:	fb0a fe0e 	mul.w	lr, sl, lr
 802620e:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 8026212:	f108 0b20 	add.w	fp, r8, #32
 8026216:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 802621a:	4486      	add	lr, r0
 802621c:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 8026220:	0a00      	lsrs	r0, r0, #8
 8026222:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 8026226:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 802622a:	ea4e 0000 	orr.w	r0, lr, r0
 802622e:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 8026232:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 8026236:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 802623a:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 802623e:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8026242:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8026246:	ea4e 0909 	orr.w	r9, lr, r9
 802624a:	ea4a 0000 	orr.w	r0, sl, r0
 802624e:	f1bc 0f00 	cmp.w	ip, #0
 8026252:	f000 8105 	beq.w	8026460 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 8026256:	f102 4200 	add.w	r2, r2, #2147483648	; 0x80000000
 802625a:	3a01      	subs	r2, #1
 802625c:	0052      	lsls	r2, r2, #1
 802625e:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8026260:	3202      	adds	r2, #2
 8026262:	2cff      	cmp	r4, #255	; 0xff
 8026264:	eb05 0e02 	add.w	lr, r5, r2
 8026268:	5aaa      	ldrh	r2, [r5, r2]
 802626a:	d018      	beq.n	802629e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 802626c:	f422 65fc 	bic.w	r5, r2, #2016	; 0x7e0
 8026270:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8026274:	fb04 fa02 	mul.w	sl, r4, r2
 8026278:	ea4f 08e4 	mov.w	r8, r4, asr #3
 802627c:	fb08 f805 	mul.w	r8, r8, r5
 8026280:	f10a 0520 	add.w	r5, sl, #32
 8026284:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 8026288:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 802628c:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8026290:	4442      	add	r2, r8
 8026292:	0a2d      	lsrs	r5, r5, #8
 8026294:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 8026298:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 802629c:	432a      	orrs	r2, r5
 802629e:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 80262a0:	f8be 5002 	ldrh.w	r5, [lr, #2]
 80262a4:	2cff      	cmp	r4, #255	; 0xff
 80262a6:	d01a      	beq.n	80262de <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 80262a8:	f425 6efc 	bic.w	lr, r5, #2016	; 0x7e0
 80262ac:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80262b0:	fb04 fa05 	mul.w	sl, r4, r5
 80262b4:	ea4f 08e4 	mov.w	r8, r4, asr #3
 80262b8:	fb08 f80e 	mul.w	r8, r8, lr
 80262bc:	f10a 0e20 	add.w	lr, sl, #32
 80262c0:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 80262c4:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 80262c8:	f608 0801 	addw	r8, r8, #2049	; 0x801
 80262cc:	4445      	add	r5, r8
 80262ce:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80262d2:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 80262d6:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 80262da:	ea45 050e 	orr.w	r5, r5, lr
 80262de:	fb1c fe01 	smulbb	lr, ip, r1
 80262e2:	ea4f 0eee 	mov.w	lr, lr, asr #3
 80262e6:	f1cc 0810 	rsb	r8, ip, #16
 80262ea:	eba8 0801 	sub.w	r8, r8, r1
 80262ee:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 80262f2:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 80262f6:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 80262fa:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 80262fe:	4341      	muls	r1, r0
 8026300:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8026304:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8026308:	ea4a 0202 	orr.w	r2, sl, r2
 802630c:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 8026310:	fb09 1108 	mla	r1, r9, r8, r1
 8026314:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8026318:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 802631c:	fb0c 1102 	mla	r1, ip, r2, r1
 8026320:	ea4b 0505 	orr.w	r5, fp, r5
 8026324:	fb0e 1e05 	mla	lr, lr, r5, r1
 8026328:	ea4f 525e 	mov.w	r2, lr, lsr #21
 802632c:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8026330:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8026334:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8026338:	ea42 0e0e 	orr.w	lr, r2, lr
 802633c:	fa1f f28e 	uxth.w	r2, lr
 8026340:	2bff      	cmp	r3, #255	; 0xff
 8026342:	f040 80a1 	bne.w	8026488 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x420>
 8026346:	803a      	strh	r2, [r7, #0]
 8026348:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 802634a:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
 802634c:	4413      	add	r3, r2
 802634e:	931d      	str	r3, [sp, #116]	; 0x74
 8026350:	9a1e      	ldr	r2, [sp, #120]	; 0x78
 8026352:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8026354:	441a      	add	r2, r3
 8026356:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8026358:	921e      	str	r2, [sp, #120]	; 0x78
 802635a:	3b01      	subs	r3, #1
 802635c:	3702      	adds	r7, #2
 802635e:	930f      	str	r3, [sp, #60]	; 0x3c
 8026360:	e6c9      	b.n	80260f6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8026362:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8026364:	9e1f      	ldr	r6, [sp, #124]	; 0x7c
 8026366:	9c1e      	ldr	r4, [sp, #120]	; 0x78
 8026368:	4433      	add	r3, r6
 802636a:	931d      	str	r3, [sp, #116]	; 0x74
 802636c:	9b20      	ldr	r3, [sp, #128]	; 0x80
 802636e:	441c      	add	r4, r3
 8026370:	9b06      	ldr	r3, [sp, #24]
 8026372:	941e      	str	r4, [sp, #120]	; 0x78
 8026374:	3b01      	subs	r3, #1
 8026376:	9306      	str	r3, [sp, #24]
 8026378:	9b07      	ldr	r3, [sp, #28]
 802637a:	3302      	adds	r3, #2
 802637c:	9307      	str	r3, [sp, #28]
 802637e:	e698      	b.n	80260b2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 8026380:	d028      	beq.n	80263d4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8026382:	9b06      	ldr	r3, [sp, #24]
 8026384:	981f      	ldr	r0, [sp, #124]	; 0x7c
 8026386:	9d1d      	ldr	r5, [sp, #116]	; 0x74
 8026388:	3b01      	subs	r3, #1
 802638a:	fb00 5003 	mla	r0, r0, r3, r5
 802638e:	1400      	asrs	r0, r0, #16
 8026390:	f53f aeac 	bmi.w	80260ec <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8026394:	3901      	subs	r1, #1
 8026396:	4288      	cmp	r0, r1
 8026398:	f6bf aea8 	bge.w	80260ec <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 802639c:	9920      	ldr	r1, [sp, #128]	; 0x80
 802639e:	981e      	ldr	r0, [sp, #120]	; 0x78
 80263a0:	fb01 0303 	mla	r3, r1, r3, r0
 80263a4:	141b      	asrs	r3, r3, #16
 80263a6:	f53f aea1 	bmi.w	80260ec <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 80263aa:	3a01      	subs	r2, #1
 80263ac:	4293      	cmp	r3, r2
 80263ae:	f6bf ae9d 	bge.w	80260ec <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 80263b2:	9b06      	ldr	r3, [sp, #24]
 80263b4:	f8dd e01c 	ldr.w	lr, [sp, #28]
 80263b8:	930f      	str	r3, [sp, #60]	; 0x3c
 80263ba:	f64f 061f 	movw	r6, #63519	; 0xf81f
 80263be:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80263c0:	2b00      	cmp	r3, #0
 80263c2:	f300 80b6 	bgt.w	8026532 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ca>
 80263c6:	9b06      	ldr	r3, [sp, #24]
 80263c8:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 80263cc:	9b07      	ldr	r3, [sp, #28]
 80263ce:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 80263d2:	9307      	str	r3, [sp, #28]
 80263d4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80263d6:	2b00      	cmp	r3, #0
 80263d8:	f340 8218 	ble.w	802680c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a4>
 80263dc:	ee30 0a04 	vadd.f32	s0, s0, s8
 80263e0:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80263e4:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80263e8:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 80263ea:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80263ee:	ee31 1a05 	vadd.f32	s2, s2, s10
 80263f2:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80263f6:	eef0 6a62 	vmov.f32	s13, s5
 80263fa:	ee61 7a27 	vmul.f32	s15, s2, s15
 80263fe:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8026402:	ee77 2a62 	vsub.f32	s5, s14, s5
 8026406:	edcd 6a1d 	vstr	s13, [sp, #116]	; 0x74
 802640a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 802640e:	eef0 6a43 	vmov.f32	s13, s6
 8026412:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8026416:	ee12 2a90 	vmov	r2, s5
 802641a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 802641e:	fb92 f3f3 	sdiv	r3, r2, r3
 8026422:	ee13 2a10 	vmov	r2, s6
 8026426:	931f      	str	r3, [sp, #124]	; 0x7c
 8026428:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 802642a:	fb92 f3f3 	sdiv	r3, r2, r3
 802642e:	9320      	str	r3, [sp, #128]	; 0x80
 8026430:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8026432:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8026434:	3b01      	subs	r3, #1
 8026436:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802643a:	930e      	str	r3, [sp, #56]	; 0x38
 802643c:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 802643e:	edcd 6a1e 	vstr	s13, [sp, #120]	; 0x78
 8026442:	bf08      	it	eq
 8026444:	4613      	moveq	r3, r2
 8026446:	9306      	str	r3, [sp, #24]
 8026448:	eeb0 3a67 	vmov.f32	s6, s15
 802644c:	eef0 2a47 	vmov.f32	s5, s14
 8026450:	e621      	b.n	8026096 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 8026452:	fb08 f505 	mul.w	r5, r8, r5
 8026456:	fb09 5303 	mla	r3, r9, r3, r5
 802645a:	e6a1      	b.n	80261a0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x138>
 802645c:	4681      	mov	r9, r0
 802645e:	e6c8      	b.n	80261f2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18a>
 8026460:	f1c1 0210 	rsb	r2, r1, #16
 8026464:	4341      	muls	r1, r0
 8026466:	fb09 1902 	mla	r9, r9, r2, r1
 802646a:	ea4f 0949 	mov.w	r9, r9, lsl #1
 802646e:	ea4f 5259 	mov.w	r2, r9, lsr #21
 8026472:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8026476:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 802647a:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 802647e:	ea42 0909 	orr.w	r9, r2, r9
 8026482:	fa1f f289 	uxth.w	r2, r9
 8026486:	e75b      	b.n	8026340 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 8026488:	f8b7 c000 	ldrh.w	ip, [r7]
 802648c:	43db      	mvns	r3, r3
 802648e:	ea4f 202c 	mov.w	r0, ip, asr #8
 8026492:	fa5f fe83 	uxtb.w	lr, r3
 8026496:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 802649a:	fb00 f00e 	mul.w	r0, r0, lr
 802649e:	1c41      	adds	r1, r0, #1
 80264a0:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 80264a4:	1211      	asrs	r1, r2, #8
 80264a6:	ea4f 05ec 	mov.w	r5, ip, asr #3
 80264aa:	f021 0107 	bic.w	r1, r1, #7
 80264ae:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 80264b2:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 80264b6:	48d7      	ldr	r0, [pc, #860]	; (8026814 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ac>)
 80264b8:	fb05 f50e 	mul.w	r5, r5, lr
 80264bc:	b2c9      	uxtb	r1, r1
 80264be:	ea00 2001 	and.w	r0, r0, r1, lsl #8
 80264c2:	1c69      	adds	r1, r5, #1
 80264c4:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 80264c8:	10d1      	asrs	r1, r2, #3
 80264ca:	f021 0103 	bic.w	r1, r1, #3
 80264ce:	ea4f 03cc 	mov.w	r3, ip, lsl #3
 80264d2:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 80264d6:	b2db      	uxtb	r3, r3
 80264d8:	00c9      	lsls	r1, r1, #3
 80264da:	fb03 f30e 	mul.w	r3, r3, lr
 80264de:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80264e2:	4301      	orrs	r1, r0
 80264e4:	1c58      	adds	r0, r3, #1
 80264e6:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 80264ea:	00d2      	lsls	r2, r2, #3
 80264ec:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 80264f0:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 80264f4:	430a      	orrs	r2, r1
 80264f6:	e726      	b.n	8026346 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2de>
 80264f8:	f115 0e01 	adds.w	lr, r5, #1
 80264fc:	f53f af24 	bmi.w	8026348 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 8026500:	4572      	cmp	r2, lr
 8026502:	f6ff af21 	blt.w	8026348 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 8026506:	f110 0e01 	adds.w	lr, r0, #1
 802650a:	f53f af1d 	bmi.w	8026348 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 802650e:	4573      	cmp	r3, lr
 8026510:	f6ff af1a 	blt.w	8026348 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 8026514:	b21b      	sxth	r3, r3
 8026516:	b212      	sxth	r2, r2
 8026518:	e9cd 1c04 	strd	r1, ip, [sp, #16]
 802651c:	e9cd 5002 	strd	r5, r0, [sp, #8]
 8026520:	9301      	str	r3, [sp, #4]
 8026522:	9200      	str	r2, [sp, #0]
 8026524:	4639      	mov	r1, r7
 8026526:	e9dd 3208 	ldrd	r3, r2, [sp, #32]
 802652a:	9811      	ldr	r0, [sp, #68]	; 0x44
 802652c:	f7ff fc24 	bl	8025d78 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 8026530:	e70a      	b.n	8026348 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 8026532:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8026534:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8026538:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 802653a:	f3c3 3503 	ubfx	r5, r3, #12, #4
 802653e:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8026540:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8026544:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8026546:	141f      	asrs	r7, r3, #16
 8026548:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 802654a:	141b      	asrs	r3, r3, #16
 802654c:	fb01 3707 	mla	r7, r1, r7, r3
 8026550:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8026552:	fa1f fc82 	uxth.w	ip, r2
 8026556:	eb03 0a07 	add.w	sl, r3, r7
 802655a:	ea4f 100c 	mov.w	r0, ip, lsl #4
 802655e:	f813 9007 	ldrb.w	r9, [r3, r7]
 8026562:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8026566:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 802656a:	b29b      	uxth	r3, r3
 802656c:	2d00      	cmp	r5, #0
 802656e:	f000 80fe 	beq.w	802676e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x706>
 8026572:	f81a 4001 	ldrb.w	r4, [sl, r1]
 8026576:	940c      	str	r4, [sp, #48]	; 0x30
 8026578:	eb0a 0b01 	add.w	fp, sl, r1
 802657c:	fa1f fa85 	uxth.w	sl, r5
 8026580:	fb0a fc0c 	mul.w	ip, sl, ip
 8026584:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 8026588:	fa1f fa8a 	uxth.w	sl, sl
 802658c:	eba0 000c 	sub.w	r0, r0, ip
 8026590:	eba3 030a 	sub.w	r3, r3, sl
 8026594:	b280      	uxth	r0, r0
 8026596:	fb08 f000 	mul.w	r0, r8, r0
 802659a:	b29b      	uxth	r3, r3
 802659c:	fb09 0303 	mla	r3, r9, r3, r0
 80265a0:	980c      	ldr	r0, [sp, #48]	; 0x30
 80265a2:	f89b 4001 	ldrb.w	r4, [fp, #1]
 80265a6:	940d      	str	r4, [sp, #52]	; 0x34
 80265a8:	fb0a 3300 	mla	r3, sl, r0, r3
 80265ac:	fb0c 3304 	mla	r3, ip, r4, r3
 80265b0:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80265b4:	2b00      	cmp	r3, #0
 80265b6:	f000 80cc 	beq.w	8026752 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ea>
 80265ba:	9808      	ldr	r0, [sp, #32]
 80265bc:	9c08      	ldr	r4, [sp, #32]
 80265be:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 80265c2:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 80265c6:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 80265ca:	f000 80d5 	beq.w	8026778 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 80265ce:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 80265d2:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 80265d6:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 80265da:	fb09 f707 	mul.w	r7, r9, r7
 80265de:	fb0a fc0c 	mul.w	ip, sl, ip
 80265e2:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 80265e6:	f107 0b20 	add.w	fp, r7, #32
 80265ea:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 80265ee:	44cc      	add	ip, r9
 80265f0:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 80265f4:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80265f8:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 80265fc:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8026600:	ea4c 0909 	orr.w	r9, ip, r9
 8026604:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8026608:	8847      	ldrh	r7, [r0, #2]
 802660a:	d019      	beq.n	8026640 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5d8>
 802660c:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 8026610:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 8026614:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8026618:	fb08 f807 	mul.w	r8, r8, r7
 802661c:	fb0a fc0c 	mul.w	ip, sl, ip
 8026620:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 8026624:	f108 0b20 	add.w	fp, r8, #32
 8026628:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 802662c:	44bc      	add	ip, r7
 802662e:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 8026632:	0a3f      	lsrs	r7, r7, #8
 8026634:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8026638:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 802663c:	ea4c 0707 	orr.w	r7, ip, r7
 8026640:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 8026644:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 8026648:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 802664c:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8026650:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8026654:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8026658:	ea4c 0909 	orr.w	r9, ip, r9
 802665c:	ea4a 0707 	orr.w	r7, sl, r7
 8026660:	2d00      	cmp	r5, #0
 8026662:	f000 808b 	beq.w	802677c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x714>
 8026666:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 802666a:	3901      	subs	r1, #1
 802666c:	0049      	lsls	r1, r1, #1
 802666e:	3102      	adds	r1, #2
 8026670:	eb00 0c01 	add.w	ip, r0, r1
 8026674:	5a41      	ldrh	r1, [r0, r1]
 8026676:	980c      	ldr	r0, [sp, #48]	; 0x30
 8026678:	28ff      	cmp	r0, #255	; 0xff
 802667a:	d019      	beq.n	80266b0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x648>
 802667c:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 802667e:	f421 60fc 	bic.w	r0, r1, #2016	; 0x7e0
 8026682:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8026686:	fb04 fa01 	mul.w	sl, r4, r1
 802668a:	ea4f 08e4 	mov.w	r8, r4, asr #3
 802668e:	fb08 f800 	mul.w	r8, r8, r0
 8026692:	f10a 0020 	add.w	r0, sl, #32
 8026696:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 802669a:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 802669e:	f608 0801 	addw	r8, r8, #2049	; 0x801
 80266a2:	4441      	add	r1, r8
 80266a4:	0a00      	lsrs	r0, r0, #8
 80266a6:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 80266aa:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80266ae:	4301      	orrs	r1, r0
 80266b0:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 80266b2:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 80266b6:	2cff      	cmp	r4, #255	; 0xff
 80266b8:	d01a      	beq.n	80266f0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x688>
 80266ba:	f420 6cfc 	bic.w	ip, r0, #2016	; 0x7e0
 80266be:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80266c2:	fb04 fa00 	mul.w	sl, r4, r0
 80266c6:	ea4f 08e4 	mov.w	r8, r4, asr #3
 80266ca:	fb08 f80c 	mul.w	r8, r8, ip
 80266ce:	f10a 0c20 	add.w	ip, sl, #32
 80266d2:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 80266d6:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 80266da:	f608 0801 	addw	r8, r8, #2049	; 0x801
 80266de:	4440      	add	r0, r8
 80266e0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80266e4:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 80266e8:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 80266ec:	ea40 000c 	orr.w	r0, r0, ip
 80266f0:	fb15 fc02 	smulbb	ip, r5, r2
 80266f4:	ea4f 0cec 	mov.w	ip, ip, asr #3
 80266f8:	f1c5 0810 	rsb	r8, r5, #16
 80266fc:	eba8 0802 	sub.w	r8, r8, r2
 8026700:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 8026704:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 8026708:	437a      	muls	r2, r7
 802670a:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 802670e:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 8026712:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8026716:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 802671a:	fb09 2208 	mla	r2, r9, r8, r2
 802671e:	ea4a 0101 	orr.w	r1, sl, r1
 8026722:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 8026726:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 802672a:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 802672e:	fb05 2201 	mla	r2, r5, r1, r2
 8026732:	ea4b 0000 	orr.w	r0, fp, r0
 8026736:	fb0c 2200 	mla	r2, ip, r0, r2
 802673a:	0d57      	lsrs	r7, r2, #21
 802673c:	0952      	lsrs	r2, r2, #5
 802673e:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8026742:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8026746:	433a      	orrs	r2, r7
 8026748:	2bff      	cmp	r3, #255	; 0xff
 802674a:	b292      	uxth	r2, r2
 802674c:	d127      	bne.n	802679e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x736>
 802674e:	f8ae 2000 	strh.w	r2, [lr]
 8026752:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8026754:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
 8026756:	4413      	add	r3, r2
 8026758:	931d      	str	r3, [sp, #116]	; 0x74
 802675a:	9a1e      	ldr	r2, [sp, #120]	; 0x78
 802675c:	9b20      	ldr	r3, [sp, #128]	; 0x80
 802675e:	441a      	add	r2, r3
 8026760:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8026762:	921e      	str	r2, [sp, #120]	; 0x78
 8026764:	3b01      	subs	r3, #1
 8026766:	f10e 0e02 	add.w	lr, lr, #2
 802676a:	930f      	str	r3, [sp, #60]	; 0x3c
 802676c:	e627      	b.n	80263be <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 802676e:	fb08 f000 	mul.w	r0, r8, r0
 8026772:	fb09 0303 	mla	r3, r9, r3, r0
 8026776:	e71b      	b.n	80265b0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x548>
 8026778:	46b9      	mov	r9, r7
 802677a:	e743      	b.n	8026604 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x59c>
 802677c:	f1c2 0110 	rsb	r1, r2, #16
 8026780:	437a      	muls	r2, r7
 8026782:	fb09 2901 	mla	r9, r9, r1, r2
 8026786:	ea4f 0949 	mov.w	r9, r9, lsl #1
 802678a:	ea4f 5059 	mov.w	r0, r9, lsr #21
 802678e:	ea4f 1259 	mov.w	r2, r9, lsr #5
 8026792:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8026796:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 802679a:	4302      	orrs	r2, r0
 802679c:	e7d4      	b.n	8026748 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e0>
 802679e:	f8be 7000 	ldrh.w	r7, [lr]
 80267a2:	4c1c      	ldr	r4, [pc, #112]	; (8026814 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ac>)
 80267a4:	43db      	mvns	r3, r3
 80267a6:	1238      	asrs	r0, r7, #8
 80267a8:	fa5f fc83 	uxtb.w	ip, r3
 80267ac:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 80267b0:	10fd      	asrs	r5, r7, #3
 80267b2:	fb00 f00c 	mul.w	r0, r0, ip
 80267b6:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 80267ba:	fb05 f10c 	mul.w	r1, r5, ip
 80267be:	1c45      	adds	r5, r0, #1
 80267c0:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 80267c4:	1215      	asrs	r5, r2, #8
 80267c6:	f025 0507 	bic.w	r5, r5, #7
 80267ca:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 80267ce:	1c4d      	adds	r5, r1, #1
 80267d0:	eb05 2511 	add.w	r5, r5, r1, lsr #8
 80267d4:	10d1      	asrs	r1, r2, #3
 80267d6:	f021 0103 	bic.w	r1, r1, #3
 80267da:	00fb      	lsls	r3, r7, #3
 80267dc:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 80267e0:	b2db      	uxtb	r3, r3
 80267e2:	b2c0      	uxtb	r0, r0
 80267e4:	00c9      	lsls	r1, r1, #3
 80267e6:	fb03 f30c 	mul.w	r3, r3, ip
 80267ea:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80267ee:	ea04 2000 	and.w	r0, r4, r0, lsl #8
 80267f2:	4308      	orrs	r0, r1
 80267f4:	1c59      	adds	r1, r3, #1
 80267f6:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 80267fa:	00d2      	lsls	r2, r2, #3
 80267fc:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 8026800:	f3c3 03c4 	ubfx	r3, r3, #3, #5
 8026804:	4318      	orrs	r0, r3
 8026806:	f8ae 0000 	strh.w	r0, [lr]
 802680a:	e7a2      	b.n	8026752 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ea>
 802680c:	b013      	add	sp, #76	; 0x4c
 802680e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8026812:	bf00      	nop
 8026814:	fffff800 	.word	0xfffff800

08026818 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>:
 8026818:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 802681c:	e9dd 4509 	ldrd	r4, r5, [sp, #36]	; 0x24
 8026820:	fb05 4c03 	mla	ip, r5, r3, r4
 8026824:	2d00      	cmp	r5, #0
 8026826:	f9bd a020 	ldrsh.w	sl, [sp, #32]
 802682a:	f89d 902c 	ldrb.w	r9, [sp, #44]	; 0x2c
 802682e:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
 8026832:	f89d 6034 	ldrb.w	r6, [sp, #52]	; 0x34
 8026836:	8808      	ldrh	r0, [r1, #0]
 8026838:	eb02 0e4c 	add.w	lr, r2, ip, lsl #1
 802683c:	f2c0 80a7 	blt.w	802698e <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
 8026840:	45aa      	cmp	sl, r5
 8026842:	f340 80a4 	ble.w	802698e <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
 8026846:	2c00      	cmp	r4, #0
 8026848:	f2c0 809f 	blt.w	802698a <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
 802684c:	42a3      	cmp	r3, r4
 802684e:	f340 809c 	ble.w	802698a <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
 8026852:	f832 801c 	ldrh.w	r8, [r2, ip, lsl #1]
 8026856:	1c62      	adds	r2, r4, #1
 8026858:	f100 809c 	bmi.w	8026994 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 802685c:	4293      	cmp	r3, r2
 802685e:	f340 8099 	ble.w	8026994 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 8026862:	f1b9 0f00 	cmp.w	r9, #0
 8026866:	f000 8095 	beq.w	8026994 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 802686a:	f8be c002 	ldrh.w	ip, [lr, #2]
 802686e:	3501      	adds	r5, #1
 8026870:	f100 8094 	bmi.w	802699c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 8026874:	45aa      	cmp	sl, r5
 8026876:	f340 8091 	ble.w	802699c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 802687a:	2f00      	cmp	r7, #0
 802687c:	f000 808e 	beq.w	802699c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 8026880:	2c00      	cmp	r4, #0
 8026882:	f2c0 8089 	blt.w	8026998 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
 8026886:	42a3      	cmp	r3, r4
 8026888:	f340 8086 	ble.w	8026998 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
 802688c:	f83e 5013 	ldrh.w	r5, [lr, r3, lsl #1]
 8026890:	3401      	adds	r4, #1
 8026892:	f100 8086 	bmi.w	80269a2 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 8026896:	42a3      	cmp	r3, r4
 8026898:	f340 8083 	ble.w	80269a2 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 802689c:	f1b9 0f00 	cmp.w	r9, #0
 80268a0:	d07f      	beq.n	80269a2 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 80268a2:	3301      	adds	r3, #1
 80268a4:	f83e 3013 	ldrh.w	r3, [lr, r3, lsl #1]
 80268a8:	ea4f 4408 	mov.w	r4, r8, lsl #16
 80268ac:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 80268b0:	f428 68fc 	bic.w	r8, r8, #2016	; 0x7e0
 80268b4:	fb19 fe07 	smulbb	lr, r9, r7
 80268b8:	ea44 0808 	orr.w	r8, r4, r8
 80268bc:	ea4f 440c 	mov.w	r4, ip, lsl #16
 80268c0:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
 80268c4:	f1c7 0210 	rsb	r2, r7, #16
 80268c8:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 80268cc:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 80268d0:	ea44 0c0c 	orr.w	ip, r4, ip
 80268d4:	eba2 0209 	sub.w	r2, r2, r9
 80268d8:	ebce 0449 	rsb	r4, lr, r9, lsl #1
 80268dc:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
 80268e0:	fb04 f40c 	mul.w	r4, r4, ip
 80268e4:	fb02 4808 	mla	r8, r2, r8, r4
 80268e8:	041a      	lsls	r2, r3, #16
 80268ea:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 80268ee:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 80268f2:	4313      	orrs	r3, r2
 80268f4:	042a      	lsls	r2, r5, #16
 80268f6:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 80268fa:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 80268fe:	fb0e 8303 	mla	r3, lr, r3, r8
 8026902:	432a      	orrs	r2, r5
 8026904:	ebce 0747 	rsb	r7, lr, r7, lsl #1
 8026908:	fb07 3202 	mla	r2, r7, r2, r3
 802690c:	0d53      	lsrs	r3, r2, #21
 802690e:	0952      	lsrs	r2, r2, #5
 8026910:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8026914:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8026918:	431a      	orrs	r2, r3
 802691a:	b293      	uxth	r3, r2
 802691c:	b2b4      	uxth	r4, r6
 802691e:	1202      	asrs	r2, r0, #8
 8026920:	43f6      	mvns	r6, r6
 8026922:	b2f6      	uxtb	r6, r6
 8026924:	121d      	asrs	r5, r3, #8
 8026926:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 802692a:	fb12 f206 	smulbb	r2, r2, r6
 802692e:	10c7      	asrs	r7, r0, #3
 8026930:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8026934:	00c0      	lsls	r0, r0, #3
 8026936:	fb05 2504 	mla	r5, r5, r4, r2
 802693a:	b2c0      	uxtb	r0, r0
 802693c:	10da      	asrs	r2, r3, #3
 802693e:	00db      	lsls	r3, r3, #3
 8026940:	b2db      	uxtb	r3, r3
 8026942:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8026946:	fb10 f006 	smulbb	r0, r0, r6
 802694a:	b2ad      	uxth	r5, r5
 802694c:	fb03 0004 	mla	r0, r3, r4, r0
 8026950:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8026954:	fb17 f706 	smulbb	r7, r7, r6
 8026958:	b280      	uxth	r0, r0
 802695a:	1c6b      	adds	r3, r5, #1
 802695c:	fb02 7204 	mla	r2, r2, r4, r7
 8026960:	b292      	uxth	r2, r2
 8026962:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8026966:	1c43      	adds	r3, r0, #1
 8026968:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 802696c:	1c50      	adds	r0, r2, #1
 802696e:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 8026972:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8026976:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 802697a:	0952      	lsrs	r2, r2, #5
 802697c:	432b      	orrs	r3, r5
 802697e:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8026982:	4313      	orrs	r3, r2
 8026984:	800b      	strh	r3, [r1, #0]
 8026986:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 802698a:	4680      	mov	r8, r0
 802698c:	e763      	b.n	8026856 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x3e>
 802698e:	4684      	mov	ip, r0
 8026990:	4680      	mov	r8, r0
 8026992:	e76c      	b.n	802686e <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
 8026994:	4684      	mov	ip, r0
 8026996:	e76a      	b.n	802686e <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
 8026998:	4605      	mov	r5, r0
 802699a:	e779      	b.n	8026890 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x78>
 802699c:	4603      	mov	r3, r0
 802699e:	4605      	mov	r5, r0
 80269a0:	e782      	b.n	80268a8 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>
 80269a2:	4603      	mov	r3, r0
 80269a4:	e780      	b.n	80268a8 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>

080269a6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80269a6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80269aa:	b093      	sub	sp, #76	; 0x4c
 80269ac:	461d      	mov	r5, r3
 80269ae:	9210      	str	r2, [sp, #64]	; 0x40
 80269b0:	9b21      	ldr	r3, [sp, #132]	; 0x84
 80269b2:	f89d 2094 	ldrb.w	r2, [sp, #148]	; 0x94
 80269b6:	920b      	str	r2, [sp, #44]	; 0x2c
 80269b8:	e9dd 2722 	ldrd	r2, r7, [sp, #136]	; 0x88
 80269bc:	910a      	str	r1, [sp, #40]	; 0x28
 80269be:	6859      	ldr	r1, [r3, #4]
 80269c0:	681b      	ldr	r3, [r3, #0]
 80269c2:	9011      	str	r0, [sp, #68]	; 0x44
 80269c4:	fb01 2707 	mla	r7, r1, r7, r2
 80269c8:	eb03 0347 	add.w	r3, r3, r7, lsl #1
 80269cc:	9307      	str	r3, [sp, #28]
 80269ce:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80269d0:	681b      	ldr	r3, [r3, #0]
 80269d2:	9309      	str	r3, [sp, #36]	; 0x24
 80269d4:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80269d6:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
 80269da:	43db      	mvns	r3, r3
 80269dc:	b2db      	uxtb	r3, r3
 80269de:	9308      	str	r3, [sp, #32]
 80269e0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80269e2:	2b00      	cmp	r3, #0
 80269e4:	dc03      	bgt.n	80269ee <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 80269e6:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80269e8:	2b00      	cmp	r3, #0
 80269ea:	f340 8203 	ble.w	8026df4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 80269ee:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80269f0:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80269f4:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80269f8:	1e48      	subs	r0, r1, #1
 80269fa:	f102 3cff 	add.w	ip, r2, #4294967295
 80269fe:	2d00      	cmp	r5, #0
 8026a00:	f340 80da 	ble.w	8026bb8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 8026a04:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8026a08:	ea4f 4326 	mov.w	r3, r6, asr #16
 8026a0c:	d406      	bmi.n	8026a1c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8026a0e:	4586      	cmp	lr, r0
 8026a10:	da04      	bge.n	8026a1c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8026a12:	2b00      	cmp	r3, #0
 8026a14:	db02      	blt.n	8026a1c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8026a16:	4563      	cmp	r3, ip
 8026a18:	f2c0 80cf 	blt.w	8026bba <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8026a1c:	f11e 0e01 	adds.w	lr, lr, #1
 8026a20:	f100 80c1 	bmi.w	8026ba6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8026a24:	4571      	cmp	r1, lr
 8026a26:	f2c0 80be 	blt.w	8026ba6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8026a2a:	3301      	adds	r3, #1
 8026a2c:	f100 80bb 	bmi.w	8026ba6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8026a30:	429a      	cmp	r2, r3
 8026a32:	f2c0 80b8 	blt.w	8026ba6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8026a36:	f8dd 801c 	ldr.w	r8, [sp, #28]
 8026a3a:	46a9      	mov	r9, r5
 8026a3c:	f1b9 0f00 	cmp.w	r9, #0
 8026a40:	f340 80d8 	ble.w	8026bf4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x24e>
 8026a44:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8026a46:	1421      	asrs	r1, r4, #16
 8026a48:	ea4f 4026 	mov.w	r0, r6, asr #16
 8026a4c:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8026a50:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 8026a54:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 8026a58:	f100 8111 	bmi.w	8026c7e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 8026a5c:	f10e 3aff 	add.w	sl, lr, #4294967295
 8026a60:	4551      	cmp	r1, sl
 8026a62:	f280 810c 	bge.w	8026c7e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 8026a66:	2800      	cmp	r0, #0
 8026a68:	f2c0 8109 	blt.w	8026c7e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 8026a6c:	f103 3aff 	add.w	sl, r3, #4294967295
 8026a70:	4550      	cmp	r0, sl
 8026a72:	f280 8104 	bge.w	8026c7e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 8026a76:	fa0f f38e 	sxth.w	r3, lr
 8026a7a:	fb00 1103 	mla	r1, r0, r3, r1
 8026a7e:	9809      	ldr	r0, [sp, #36]	; 0x24
 8026a80:	eb00 0a41 	add.w	sl, r0, r1, lsl #1
 8026a84:	f830 e011 	ldrh.w	lr, [r0, r1, lsl #1]
 8026a88:	f8ba 1002 	ldrh.w	r1, [sl, #2]
 8026a8c:	f1bc 0f00 	cmp.w	ip, #0
 8026a90:	d007      	beq.n	8026aa2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfc>
 8026a92:	005b      	lsls	r3, r3, #1
 8026a94:	eb0a 0003 	add.w	r0, sl, r3
 8026a98:	f83a 3003 	ldrh.w	r3, [sl, r3]
 8026a9c:	930c      	str	r3, [sp, #48]	; 0x30
 8026a9e:	8843      	ldrh	r3, [r0, #2]
 8026aa0:	930d      	str	r3, [sp, #52]	; 0x34
 8026aa2:	ea4f 400e 	mov.w	r0, lr, lsl #16
 8026aa6:	fb12 f30c 	smulbb	r3, r2, ip
 8026aaa:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8026aae:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 8026ab2:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8026ab6:	10db      	asrs	r3, r3, #3
 8026ab8:	ea40 000e 	orr.w	r0, r0, lr
 8026abc:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8026ac0:	f1cc 0e10 	rsb	lr, ip, #16
 8026ac4:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8026ac8:	ebae 0e02 	sub.w	lr, lr, r2
 8026acc:	ea4a 0101 	orr.w	r1, sl, r1
 8026ad0:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 8026ad4:	4351      	muls	r1, r2
 8026ad6:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8026ad8:	9f08      	ldr	r7, [sp, #32]
 8026ada:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 8026ade:	fb0e 1e00 	mla	lr, lr, r0, r1
 8026ae2:	0410      	lsls	r0, r2, #16
 8026ae4:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8026ae8:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8026aec:	4310      	orrs	r0, r2
 8026aee:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8026af0:	990c      	ldr	r1, [sp, #48]	; 0x30
 8026af2:	0412      	lsls	r2, r2, #16
 8026af4:	fb03 e000 	mla	r0, r3, r0, lr
 8026af8:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8026afc:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 8026b00:	ea42 020e 	orr.w	r2, r2, lr
 8026b04:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 8026b08:	fb03 0302 	mla	r3, r3, r2, r0
 8026b0c:	0d5a      	lsrs	r2, r3, #21
 8026b0e:	095b      	lsrs	r3, r3, #5
 8026b10:	f8b8 0000 	ldrh.w	r0, [r8]
 8026b14:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8026b18:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8026b1c:	4313      	orrs	r3, r2
 8026b1e:	b29b      	uxth	r3, r3
 8026b20:	1201      	asrs	r1, r0, #8
 8026b22:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 8026b26:	ea4f 2c23 	mov.w	ip, r3, asr #8
 8026b2a:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8026b2e:	fb11 f107 	smulbb	r1, r1, r7
 8026b32:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 8026b36:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8026b3a:	00c0      	lsls	r0, r0, #3
 8026b3c:	fb0c 1c02 	mla	ip, ip, r2, r1
 8026b40:	b2c0      	uxtb	r0, r0
 8026b42:	10d9      	asrs	r1, r3, #3
 8026b44:	00db      	lsls	r3, r3, #3
 8026b46:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 8026b4a:	b2db      	uxtb	r3, r3
 8026b4c:	fb10 f007 	smulbb	r0, r0, r7
 8026b50:	fa1f fc8c 	uxth.w	ip, ip
 8026b54:	fb03 0302 	mla	r3, r3, r2, r0
 8026b58:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8026b5c:	fb1e fe07 	smulbb	lr, lr, r7
 8026b60:	fb01 e102 	mla	r1, r1, r2, lr
 8026b64:	b29a      	uxth	r2, r3
 8026b66:	f10c 0301 	add.w	r3, ip, #1
 8026b6a:	b289      	uxth	r1, r1
 8026b6c:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 8026b70:	1c53      	adds	r3, r2, #1
 8026b72:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8026b76:	1c4a      	adds	r2, r1, #1
 8026b78:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8026b7c:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8026b80:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8026b84:	0949      	lsrs	r1, r1, #5
 8026b86:	ea43 030c 	orr.w	r3, r3, ip
 8026b8a:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8026b8e:	430b      	orrs	r3, r1
 8026b90:	f8a8 3000 	strh.w	r3, [r8]
 8026b94:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8026b96:	441c      	add	r4, r3
 8026b98:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8026b9a:	f108 0802 	add.w	r8, r8, #2
 8026b9e:	441e      	add	r6, r3
 8026ba0:	f109 39ff 	add.w	r9, r9, #4294967295
 8026ba4:	e74a      	b.n	8026a3c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8026ba6:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8026ba8:	441c      	add	r4, r3
 8026baa:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8026bac:	441e      	add	r6, r3
 8026bae:	9b07      	ldr	r3, [sp, #28]
 8026bb0:	3302      	adds	r3, #2
 8026bb2:	3d01      	subs	r5, #1
 8026bb4:	9307      	str	r3, [sp, #28]
 8026bb6:	e722      	b.n	80269fe <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 8026bb8:	d022      	beq.n	8026c00 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25a>
 8026bba:	981f      	ldr	r0, [sp, #124]	; 0x7c
 8026bbc:	1e6b      	subs	r3, r5, #1
 8026bbe:	fb00 4003 	mla	r0, r0, r3, r4
 8026bc2:	1400      	asrs	r0, r0, #16
 8026bc4:	f53f af37 	bmi.w	8026a36 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8026bc8:	3901      	subs	r1, #1
 8026bca:	4288      	cmp	r0, r1
 8026bcc:	f6bf af33 	bge.w	8026a36 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8026bd0:	9920      	ldr	r1, [sp, #128]	; 0x80
 8026bd2:	fb01 6303 	mla	r3, r1, r3, r6
 8026bd6:	141b      	asrs	r3, r3, #16
 8026bd8:	f53f af2d 	bmi.w	8026a36 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8026bdc:	3a01      	subs	r2, #1
 8026bde:	4293      	cmp	r3, r2
 8026be0:	f6bf af29 	bge.w	8026a36 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8026be4:	f8dd 901c 	ldr.w	r9, [sp, #28]
 8026be8:	f8bd a02c 	ldrh.w	sl, [sp, #44]	; 0x2c
 8026bec:	46a8      	mov	r8, r5
 8026bee:	f1b8 0f00 	cmp.w	r8, #0
 8026bf2:	dc5e      	bgt.n	8026cb2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 8026bf4:	9b07      	ldr	r3, [sp, #28]
 8026bf6:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8026bfa:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 8026bfe:	9307      	str	r3, [sp, #28]
 8026c00:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8026c02:	2b00      	cmp	r3, #0
 8026c04:	f340 80f6 	ble.w	8026df4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 8026c08:	ee30 0a04 	vadd.f32	s0, s0, s8
 8026c0c:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8026c10:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8026c14:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8026c16:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8026c1a:	ee31 1a05 	vadd.f32	s2, s2, s10
 8026c1e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8026c22:	eef0 6a62 	vmov.f32	s13, s5
 8026c26:	ee61 7a27 	vmul.f32	s15, s2, s15
 8026c2a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8026c2e:	ee77 2a62 	vsub.f32	s5, s14, s5
 8026c32:	ee16 4a90 	vmov	r4, s13
 8026c36:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8026c3a:	eef0 6a43 	vmov.f32	s13, s6
 8026c3e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8026c42:	ee12 2a90 	vmov	r2, s5
 8026c46:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8026c4a:	fb92 f3f3 	sdiv	r3, r2, r3
 8026c4e:	ee13 2a10 	vmov	r2, s6
 8026c52:	931f      	str	r3, [sp, #124]	; 0x7c
 8026c54:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8026c56:	fb92 f3f3 	sdiv	r3, r2, r3
 8026c5a:	9320      	str	r3, [sp, #128]	; 0x80
 8026c5c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8026c5e:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8026c60:	3b01      	subs	r3, #1
 8026c62:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8026c66:	930a      	str	r3, [sp, #40]	; 0x28
 8026c68:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8026c6a:	ee16 6a90 	vmov	r6, s13
 8026c6e:	bf14      	ite	ne
 8026c70:	461d      	movne	r5, r3
 8026c72:	4615      	moveq	r5, r2
 8026c74:	eeb0 3a67 	vmov.f32	s6, s15
 8026c78:	eef0 2a47 	vmov.f32	s5, s14
 8026c7c:	e6b0      	b.n	80269e0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8026c7e:	f111 0a01 	adds.w	sl, r1, #1
 8026c82:	d487      	bmi.n	8026b94 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8026c84:	45d6      	cmp	lr, sl
 8026c86:	db85      	blt.n	8026b94 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8026c88:	f110 0a01 	adds.w	sl, r0, #1
 8026c8c:	d482      	bmi.n	8026b94 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8026c8e:	4553      	cmp	r3, sl
 8026c90:	db80      	blt.n	8026b94 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8026c92:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 8026c94:	9101      	str	r1, [sp, #4]
 8026c96:	b21b      	sxth	r3, r3
 8026c98:	e9cd 0202 	strd	r0, r2, [sp, #8]
 8026c9c:	9300      	str	r3, [sp, #0]
 8026c9e:	e9cd c704 	strd	ip, r7, [sp, #16]
 8026ca2:	fa0f f38e 	sxth.w	r3, lr
 8026ca6:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8026ca8:	9811      	ldr	r0, [sp, #68]	; 0x44
 8026caa:	4641      	mov	r1, r8
 8026cac:	f7ff fdb4 	bl	8026818 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>
 8026cb0:	e770      	b.n	8026b94 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8026cb2:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8026cb4:	9f09      	ldr	r7, [sp, #36]	; 0x24
 8026cb6:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8026cba:	1430      	asrs	r0, r6, #16
 8026cbc:	1423      	asrs	r3, r4, #16
 8026cbe:	fb01 3000 	mla	r0, r1, r0, r3
 8026cc2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8026cc4:	f837 c010 	ldrh.w	ip, [r7, r0, lsl #1]
 8026cc8:	eb03 0340 	add.w	r3, r3, r0, lsl #1
 8026ccc:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 8026cd0:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8026cd4:	8858      	ldrh	r0, [r3, #2]
 8026cd6:	f1be 0f00 	cmp.w	lr, #0
 8026cda:	d00b      	beq.n	8026cf4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34e>
 8026cdc:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 8026ce0:	3901      	subs	r1, #1
 8026ce2:	0049      	lsls	r1, r1, #1
 8026ce4:	3102      	adds	r1, #2
 8026ce6:	eb03 0b01 	add.w	fp, r3, r1
 8026cea:	5a5b      	ldrh	r3, [r3, r1]
 8026cec:	930e      	str	r3, [sp, #56]	; 0x38
 8026cee:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 8026cf2:	930f      	str	r3, [sp, #60]	; 0x3c
 8026cf4:	ea4f 410c 	mov.w	r1, ip, lsl #16
 8026cf8:	fb12 f30e 	smulbb	r3, r2, lr
 8026cfc:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8026d00:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 8026d04:	f001 61fc 	and.w	r1, r1, #132120576	; 0x7e00000
 8026d08:	10db      	asrs	r3, r3, #3
 8026d0a:	ea41 010c 	orr.w	r1, r1, ip
 8026d0e:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8026d12:	f1ce 0c10 	rsb	ip, lr, #16
 8026d16:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8026d1a:	ebac 0c02 	sub.w	ip, ip, r2
 8026d1e:	ea4b 0000 	orr.w	r0, fp, r0
 8026d22:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 8026d26:	4350      	muls	r0, r2
 8026d28:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8026d2a:	9f08      	ldr	r7, [sp, #32]
 8026d2c:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 8026d30:	fb0c 0c01 	mla	ip, ip, r1, r0
 8026d34:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 8026d38:	f422 61fc 	bic.w	r1, r2, #2016	; 0x7e0
 8026d3c:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8026d3e:	980e      	ldr	r0, [sp, #56]	; 0x38
 8026d40:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8026d44:	0412      	lsls	r2, r2, #16
 8026d46:	ea4b 0101 	orr.w	r1, fp, r1
 8026d4a:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8026d4e:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8026d52:	fb03 c101 	mla	r1, r3, r1, ip
 8026d56:	4302      	orrs	r2, r0
 8026d58:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 8026d5c:	fb03 1202 	mla	r2, r3, r2, r1
 8026d60:	ea4f 5b52 	mov.w	fp, r2, lsr #21
 8026d64:	0952      	lsrs	r2, r2, #5
 8026d66:	f422 63fc 	bic.w	r3, r2, #2016	; 0x7e0
 8026d6a:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 8026d6e:	f8b9 2000 	ldrh.w	r2, [r9]
 8026d72:	ea4b 0303 	orr.w	r3, fp, r3
 8026d76:	b29b      	uxth	r3, r3
 8026d78:	1211      	asrs	r1, r2, #8
 8026d7a:	1218      	asrs	r0, r3, #8
 8026d7c:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8026d80:	fb11 f107 	smulbb	r1, r1, r7
 8026d84:	ea4f 0ce2 	mov.w	ip, r2, asr #3
 8026d88:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8026d8c:	00d2      	lsls	r2, r2, #3
 8026d8e:	fb00 100a 	mla	r0, r0, sl, r1
 8026d92:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 8026d96:	10d9      	asrs	r1, r3, #3
 8026d98:	b2d2      	uxtb	r2, r2
 8026d9a:	00db      	lsls	r3, r3, #3
 8026d9c:	fb1c fc07 	smulbb	ip, ip, r7
 8026da0:	fb12 f207 	smulbb	r2, r2, r7
 8026da4:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8026da8:	b2db      	uxtb	r3, r3
 8026daa:	b280      	uxth	r0, r0
 8026dac:	fb01 c10a 	mla	r1, r1, sl, ip
 8026db0:	fb03 230a 	mla	r3, r3, sl, r2
 8026db4:	b29b      	uxth	r3, r3
 8026db6:	b289      	uxth	r1, r1
 8026db8:	1c42      	adds	r2, r0, #1
 8026dba:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8026dbe:	f101 0c01 	add.w	ip, r1, #1
 8026dc2:	1c5a      	adds	r2, r3, #1
 8026dc4:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8026dc8:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 8026dcc:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8026dce:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 8026dd2:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8026dd6:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8026dda:	4310      	orrs	r0, r2
 8026ddc:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8026de0:	441c      	add	r4, r3
 8026de2:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8026de4:	ea40 000c 	orr.w	r0, r0, ip
 8026de8:	f829 0b02 	strh.w	r0, [r9], #2
 8026dec:	441e      	add	r6, r3
 8026dee:	f108 38ff 	add.w	r8, r8, #4294967295
 8026df2:	e6fc      	b.n	8026bee <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x248>
 8026df4:	b013      	add	sp, #76	; 0x4c
 8026df6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08026dfa <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>:
 8026dfa:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8026dfe:	e9dd 4e08 	ldrd	r4, lr, [sp, #32]
 8026e02:	fb0e 4703 	mla	r7, lr, r3, r4
 8026e06:	f1be 0f00 	cmp.w	lr, #0
 8026e0a:	f9bd 901c 	ldrsh.w	r9, [sp, #28]
 8026e0e:	f89d 5028 	ldrb.w	r5, [sp, #40]	; 0x28
 8026e12:	f89d 602c 	ldrb.w	r6, [sp, #44]	; 0x2c
 8026e16:	8808      	ldrh	r0, [r1, #0]
 8026e18:	eb02 0847 	add.w	r8, r2, r7, lsl #1
 8026e1c:	db60      	blt.n	8026ee0 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
 8026e1e:	45f1      	cmp	r9, lr
 8026e20:	dd5e      	ble.n	8026ee0 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
 8026e22:	2c00      	cmp	r4, #0
 8026e24:	db5a      	blt.n	8026edc <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
 8026e26:	42a3      	cmp	r3, r4
 8026e28:	dd58      	ble.n	8026edc <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
 8026e2a:	f832 c017 	ldrh.w	ip, [r2, r7, lsl #1]
 8026e2e:	1c62      	adds	r2, r4, #1
 8026e30:	d459      	bmi.n	8026ee6 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 8026e32:	4293      	cmp	r3, r2
 8026e34:	dd57      	ble.n	8026ee6 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 8026e36:	2d00      	cmp	r5, #0
 8026e38:	d055      	beq.n	8026ee6 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 8026e3a:	f8b8 7002 	ldrh.w	r7, [r8, #2]
 8026e3e:	f11e 0e01 	adds.w	lr, lr, #1
 8026e42:	d454      	bmi.n	8026eee <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 8026e44:	45f1      	cmp	r9, lr
 8026e46:	dd52      	ble.n	8026eee <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 8026e48:	2e00      	cmp	r6, #0
 8026e4a:	d050      	beq.n	8026eee <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 8026e4c:	2c00      	cmp	r4, #0
 8026e4e:	db4c      	blt.n	8026eea <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
 8026e50:	42a3      	cmp	r3, r4
 8026e52:	dd4a      	ble.n	8026eea <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
 8026e54:	f838 2013 	ldrh.w	r2, [r8, r3, lsl #1]
 8026e58:	3401      	adds	r4, #1
 8026e5a:	d405      	bmi.n	8026e68 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 8026e5c:	42a3      	cmp	r3, r4
 8026e5e:	dd03      	ble.n	8026e68 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 8026e60:	b115      	cbz	r5, 8026e68 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 8026e62:	3301      	adds	r3, #1
 8026e64:	f838 0013 	ldrh.w	r0, [r8, r3, lsl #1]
 8026e68:	ea4f 430c 	mov.w	r3, ip, lsl #16
 8026e6c:	fb15 f406 	smulbb	r4, r5, r6
 8026e70:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8026e74:	ea4f 4e07 	mov.w	lr, r7, lsl #16
 8026e78:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8026e7c:	f3c4 04c7 	ubfx	r4, r4, #3, #8
 8026e80:	ea43 0c0c 	orr.w	ip, r3, ip
 8026e84:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8026e88:	f1c6 0310 	rsb	r3, r6, #16
 8026e8c:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8026e90:	1b5b      	subs	r3, r3, r5
 8026e92:	ea4e 0707 	orr.w	r7, lr, r7
 8026e96:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
 8026e9a:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8026e9e:	437d      	muls	r5, r7
 8026ea0:	fb03 5c0c 	mla	ip, r3, ip, r5
 8026ea4:	0403      	lsls	r3, r0, #16
 8026ea6:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8026eaa:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8026eae:	4318      	orrs	r0, r3
 8026eb0:	0413      	lsls	r3, r2, #16
 8026eb2:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8026eb6:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8026eba:	4313      	orrs	r3, r2
 8026ebc:	fb04 c000 	mla	r0, r4, r0, ip
 8026ec0:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
 8026ec4:	fb06 0003 	mla	r0, r6, r3, r0
 8026ec8:	0d43      	lsrs	r3, r0, #21
 8026eca:	0940      	lsrs	r0, r0, #5
 8026ecc:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8026ed0:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8026ed4:	4318      	orrs	r0, r3
 8026ed6:	8008      	strh	r0, [r1, #0]
 8026ed8:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8026edc:	4684      	mov	ip, r0
 8026ede:	e7a6      	b.n	8026e2e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x34>
 8026ee0:	4607      	mov	r7, r0
 8026ee2:	4684      	mov	ip, r0
 8026ee4:	e7ab      	b.n	8026e3e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
 8026ee6:	4607      	mov	r7, r0
 8026ee8:	e7a9      	b.n	8026e3e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
 8026eea:	4602      	mov	r2, r0
 8026eec:	e7b4      	b.n	8026e58 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x5e>
 8026eee:	4602      	mov	r2, r0
 8026ef0:	e7ba      	b.n	8026e68 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>

08026ef2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8026ef2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8026ef6:	b08f      	sub	sp, #60	; 0x3c
 8026ef8:	461d      	mov	r5, r3
 8026efa:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8026efc:	920c      	str	r2, [sp, #48]	; 0x30
 8026efe:	e9dd 271e 	ldrd	r2, r7, [sp, #120]	; 0x78
 8026f02:	9107      	str	r1, [sp, #28]
 8026f04:	6859      	ldr	r1, [r3, #4]
 8026f06:	681b      	ldr	r3, [r3, #0]
 8026f08:	900d      	str	r0, [sp, #52]	; 0x34
 8026f0a:	fb01 2707 	mla	r7, r1, r7, r2
 8026f0e:	eb03 0747 	add.w	r7, r3, r7, lsl #1
 8026f12:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8026f14:	e9dd 4619 	ldrd	r4, r6, [sp, #100]	; 0x64
 8026f18:	f8d3 8000 	ldr.w	r8, [r3]
 8026f1c:	9b07      	ldr	r3, [sp, #28]
 8026f1e:	2b00      	cmp	r3, #0
 8026f20:	dc03      	bgt.n	8026f2a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8026f22:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8026f24:	2b00      	cmp	r3, #0
 8026f26:	f340 8181 	ble.w	802722c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33a>
 8026f2a:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8026f2c:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8026f30:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8026f34:	1e48      	subs	r0, r1, #1
 8026f36:	f102 3cff 	add.w	ip, r2, #4294967295
 8026f3a:	2d00      	cmp	r5, #0
 8026f3c:	f340 809b 	ble.w	8027076 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x184>
 8026f40:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8026f44:	ea4f 4326 	mov.w	r3, r6, asr #16
 8026f48:	d406      	bmi.n	8026f58 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8026f4a:	4586      	cmp	lr, r0
 8026f4c:	da04      	bge.n	8026f58 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8026f4e:	2b00      	cmp	r3, #0
 8026f50:	db02      	blt.n	8026f58 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8026f52:	4563      	cmp	r3, ip
 8026f54:	f2c0 8090 	blt.w	8027078 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8026f58:	f11e 0e01 	adds.w	lr, lr, #1
 8026f5c:	f100 8084 	bmi.w	8027068 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 8026f60:	4571      	cmp	r1, lr
 8026f62:	f2c0 8081 	blt.w	8027068 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 8026f66:	3301      	adds	r3, #1
 8026f68:	d47e      	bmi.n	8027068 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 8026f6a:	429a      	cmp	r2, r3
 8026f6c:	db7c      	blt.n	8027068 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 8026f6e:	46aa      	mov	sl, r5
 8026f70:	46b9      	mov	r9, r7
 8026f72:	f1ba 0f00 	cmp.w	sl, #0
 8026f76:	f340 8099 	ble.w	80270ac <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ba>
 8026f7a:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8026f7c:	1421      	asrs	r1, r4, #16
 8026f7e:	ea4f 4026 	mov.w	r0, r6, asr #16
 8026f82:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8026f86:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 8026f8a:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 8026f8e:	f100 80d0 	bmi.w	8027132 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 8026f92:	f10e 3bff 	add.w	fp, lr, #4294967295
 8026f96:	4559      	cmp	r1, fp
 8026f98:	f280 80cb 	bge.w	8027132 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 8026f9c:	2800      	cmp	r0, #0
 8026f9e:	f2c0 80c8 	blt.w	8027132 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 8026fa2:	f103 3bff 	add.w	fp, r3, #4294967295
 8026fa6:	4558      	cmp	r0, fp
 8026fa8:	f280 80c3 	bge.w	8027132 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 8026fac:	fa0f fe8e 	sxth.w	lr, lr
 8026fb0:	fb00 110e 	mla	r1, r0, lr, r1
 8026fb4:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 8026fb8:	f838 b011 	ldrh.w	fp, [r8, r1, lsl #1]
 8026fbc:	8841      	ldrh	r1, [r0, #2]
 8026fbe:	f1bc 0f00 	cmp.w	ip, #0
 8026fc2:	d00b      	beq.n	8026fdc <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xea>
 8026fc4:	f10e 4300 	add.w	r3, lr, #2147483648	; 0x80000000
 8026fc8:	3b01      	subs	r3, #1
 8026fca:	005b      	lsls	r3, r3, #1
 8026fcc:	3302      	adds	r3, #2
 8026fce:	eb00 0e03 	add.w	lr, r0, r3
 8026fd2:	5ac3      	ldrh	r3, [r0, r3]
 8026fd4:	9308      	str	r3, [sp, #32]
 8026fd6:	f8be 3002 	ldrh.w	r3, [lr, #2]
 8026fda:	9309      	str	r3, [sp, #36]	; 0x24
 8026fdc:	ea4f 400b 	mov.w	r0, fp, lsl #16
 8026fe0:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8026fe4:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 8026fe8:	ea40 000b 	orr.w	r0, r0, fp
 8026fec:	fb12 f30c 	smulbb	r3, r2, ip
 8026ff0:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8026ff4:	10db      	asrs	r3, r3, #3
 8026ff6:	f1cc 0e10 	rsb	lr, ip, #16
 8026ffa:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8026ffe:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8027002:	ebae 0e02 	sub.w	lr, lr, r2
 8027006:	ea4b 0101 	orr.w	r1, fp, r1
 802700a:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 802700e:	4351      	muls	r1, r2
 8027010:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8027012:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 8027016:	fb0e 1e00 	mla	lr, lr, r0, r1
 802701a:	0410      	lsls	r0, r2, #16
 802701c:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8027020:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8027024:	4310      	orrs	r0, r2
 8027026:	9a08      	ldr	r2, [sp, #32]
 8027028:	9908      	ldr	r1, [sp, #32]
 802702a:	0412      	lsls	r2, r2, #16
 802702c:	fb03 e000 	mla	r0, r3, r0, lr
 8027030:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8027034:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 8027038:	ea42 020e 	orr.w	r2, r2, lr
 802703c:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 8027040:	fb03 0302 	mla	r3, r3, r2, r0
 8027044:	0d5a      	lsrs	r2, r3, #21
 8027046:	095b      	lsrs	r3, r3, #5
 8027048:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 802704c:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8027050:	4313      	orrs	r3, r2
 8027052:	f8a9 3000 	strh.w	r3, [r9]
 8027056:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8027058:	441c      	add	r4, r3
 802705a:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 802705c:	f109 0902 	add.w	r9, r9, #2
 8027060:	441e      	add	r6, r3
 8027062:	f10a 3aff 	add.w	sl, sl, #4294967295
 8027066:	e784      	b.n	8026f72 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 8027068:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 802706a:	441c      	add	r4, r3
 802706c:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 802706e:	3d01      	subs	r5, #1
 8027070:	441e      	add	r6, r3
 8027072:	3702      	adds	r7, #2
 8027074:	e761      	b.n	8026f3a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8027076:	d01d      	beq.n	80270b4 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 8027078:	981b      	ldr	r0, [sp, #108]	; 0x6c
 802707a:	1e6b      	subs	r3, r5, #1
 802707c:	fb00 4003 	mla	r0, r0, r3, r4
 8027080:	1400      	asrs	r0, r0, #16
 8027082:	f53f af74 	bmi.w	8026f6e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8027086:	3901      	subs	r1, #1
 8027088:	4288      	cmp	r0, r1
 802708a:	f6bf af70 	bge.w	8026f6e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 802708e:	991c      	ldr	r1, [sp, #112]	; 0x70
 8027090:	fb01 6303 	mla	r3, r1, r3, r6
 8027094:	141b      	asrs	r3, r3, #16
 8027096:	f53f af6a 	bmi.w	8026f6e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 802709a:	3a01      	subs	r2, #1
 802709c:	4293      	cmp	r3, r2
 802709e:	f6bf af66 	bge.w	8026f6e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 80270a2:	46a9      	mov	r9, r5
 80270a4:	46ba      	mov	sl, r7
 80270a6:	f1b9 0f00 	cmp.w	r9, #0
 80270aa:	dc5a      	bgt.n	8027162 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x270>
 80270ac:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 80270b0:	eb07 0745 	add.w	r7, r7, r5, lsl #1
 80270b4:	9b07      	ldr	r3, [sp, #28]
 80270b6:	2b00      	cmp	r3, #0
 80270b8:	f340 80b8 	ble.w	802722c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33a>
 80270bc:	ee30 0a04 	vadd.f32	s0, s0, s8
 80270c0:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80270c4:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80270c8:	9b18      	ldr	r3, [sp, #96]	; 0x60
 80270ca:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80270ce:	ee31 1a05 	vadd.f32	s2, s2, s10
 80270d2:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80270d6:	eef0 6a62 	vmov.f32	s13, s5
 80270da:	ee61 7a27 	vmul.f32	s15, s2, s15
 80270de:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80270e2:	ee77 2a62 	vsub.f32	s5, s14, s5
 80270e6:	ee16 4a90 	vmov	r4, s13
 80270ea:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80270ee:	eef0 6a43 	vmov.f32	s13, s6
 80270f2:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80270f6:	ee12 2a90 	vmov	r2, s5
 80270fa:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80270fe:	fb92 f3f3 	sdiv	r3, r2, r3
 8027102:	ee13 2a10 	vmov	r2, s6
 8027106:	931b      	str	r3, [sp, #108]	; 0x6c
 8027108:	9b18      	ldr	r3, [sp, #96]	; 0x60
 802710a:	fb92 f3f3 	sdiv	r3, r2, r3
 802710e:	931c      	str	r3, [sp, #112]	; 0x70
 8027110:	9b07      	ldr	r3, [sp, #28]
 8027112:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8027114:	3b01      	subs	r3, #1
 8027116:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802711a:	9307      	str	r3, [sp, #28]
 802711c:	9b18      	ldr	r3, [sp, #96]	; 0x60
 802711e:	ee16 6a90 	vmov	r6, s13
 8027122:	bf14      	ite	ne
 8027124:	461d      	movne	r5, r3
 8027126:	4615      	moveq	r5, r2
 8027128:	eeb0 3a67 	vmov.f32	s6, s15
 802712c:	eef0 2a47 	vmov.f32	s5, s14
 8027130:	e6f4      	b.n	8026f1c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 8027132:	f111 0b01 	adds.w	fp, r1, #1
 8027136:	d48e      	bmi.n	8027056 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8027138:	45de      	cmp	lr, fp
 802713a:	db8c      	blt.n	8027056 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 802713c:	f110 0b01 	adds.w	fp, r0, #1
 8027140:	d489      	bmi.n	8027056 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8027142:	455b      	cmp	r3, fp
 8027144:	db87      	blt.n	8027056 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8027146:	b21b      	sxth	r3, r3
 8027148:	e9cd 1001 	strd	r1, r0, [sp, #4]
 802714c:	e9cd 2c03 	strd	r2, ip, [sp, #12]
 8027150:	9300      	str	r3, [sp, #0]
 8027152:	4642      	mov	r2, r8
 8027154:	fa0f f38e 	sxth.w	r3, lr
 8027158:	4649      	mov	r1, r9
 802715a:	980d      	ldr	r0, [sp, #52]	; 0x34
 802715c:	f7ff fe4d 	bl	8026dfa <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>
 8027160:	e779      	b.n	8027056 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8027162:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8027164:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 8027168:	1420      	asrs	r0, r4, #16
 802716a:	1431      	asrs	r1, r6, #16
 802716c:	fb03 0101 	mla	r1, r3, r1, r0
 8027170:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 8027174:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 8027178:	f838 c011 	ldrh.w	ip, [r8, r1, lsl #1]
 802717c:	8841      	ldrh	r1, [r0, #2]
 802717e:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8027182:	f1be 0f00 	cmp.w	lr, #0
 8027186:	d00b      	beq.n	80271a0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ae>
 8027188:	f103 4300 	add.w	r3, r3, #2147483648	; 0x80000000
 802718c:	3b01      	subs	r3, #1
 802718e:	005b      	lsls	r3, r3, #1
 8027190:	3302      	adds	r3, #2
 8027192:	eb00 0b03 	add.w	fp, r0, r3
 8027196:	5ac3      	ldrh	r3, [r0, r3]
 8027198:	930a      	str	r3, [sp, #40]	; 0x28
 802719a:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 802719e:	930b      	str	r3, [sp, #44]	; 0x2c
 80271a0:	ea4f 400c 	mov.w	r0, ip, lsl #16
 80271a4:	fb12 f30e 	smulbb	r3, r2, lr
 80271a8:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 80271ac:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 80271b0:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 80271b4:	10db      	asrs	r3, r3, #3
 80271b6:	ea40 000c 	orr.w	r0, r0, ip
 80271ba:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 80271be:	f1ce 0c10 	rsb	ip, lr, #16
 80271c2:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 80271c6:	ebac 0c02 	sub.w	ip, ip, r2
 80271ca:	ea4b 0101 	orr.w	r1, fp, r1
 80271ce:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 80271d2:	4351      	muls	r1, r2
 80271d4:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80271d6:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 80271da:	fb0c 1c00 	mla	ip, ip, r0, r1
 80271de:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 80271e2:	f422 60fc 	bic.w	r0, r2, #2016	; 0x7e0
 80271e6:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80271e8:	990a      	ldr	r1, [sp, #40]	; 0x28
 80271ea:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 80271ee:	0412      	lsls	r2, r2, #16
 80271f0:	ea4b 0000 	orr.w	r0, fp, r0
 80271f4:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 80271f8:	f421 6bfc 	bic.w	fp, r1, #2016	; 0x7e0
 80271fc:	fb03 c000 	mla	r0, r3, r0, ip
 8027200:	ea42 0b0b 	orr.w	fp, r2, fp
 8027204:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 8027208:	fb03 000b 	mla	r0, r3, fp, r0
 802720c:	0d43      	lsrs	r3, r0, #21
 802720e:	0940      	lsrs	r0, r0, #5
 8027210:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8027214:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8027218:	4318      	orrs	r0, r3
 802721a:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 802721c:	f82a 0b02 	strh.w	r0, [sl], #2
 8027220:	441c      	add	r4, r3
 8027222:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8027224:	f109 39ff 	add.w	r9, r9, #4294967295
 8027228:	441e      	add	r6, r3
 802722a:	e73c      	b.n	80270a6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b4>
 802722c:	b00f      	add	sp, #60	; 0x3c
 802722e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08027232 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>:
 8027232:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8027236:	b085      	sub	sp, #20
 8027238:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	; 0x3c
 802723c:	9102      	str	r1, [sp, #8]
 802723e:	2c00      	cmp	r4, #0
 8027240:	fb04 7103 	mla	r1, r4, r3, r7
 8027244:	f9bd e038 	ldrsh.w	lr, [sp, #56]	; 0x38
 8027248:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
 802724c:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
 8027250:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
 8027254:	f2c0 811b 	blt.w	802748e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
 8027258:	45a6      	cmp	lr, r4
 802725a:	f340 8118 	ble.w	802748e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
 802725e:	2f00      	cmp	r7, #0
 8027260:	f2c0 8113 	blt.w	802748a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
 8027264:	42bb      	cmp	r3, r7
 8027266:	f340 8110 	ble.w	802748a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
 802726a:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
 802726e:	1c7a      	adds	r2, r7, #1
 8027270:	f100 8110 	bmi.w	8027494 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
 8027274:	4293      	cmp	r3, r2
 8027276:	f340 810d 	ble.w	8027494 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
 802727a:	2e00      	cmp	r6, #0
 802727c:	f000 810c 	beq.w	8027498 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x266>
 8027280:	f8dc 1004 	ldr.w	r1, [ip, #4]
 8027284:	3401      	adds	r4, #1
 8027286:	f100 810b 	bmi.w	80274a0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
 802728a:	45a6      	cmp	lr, r4
 802728c:	f340 8108 	ble.w	80274a0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
 8027290:	2800      	cmp	r0, #0
 8027292:	f000 8108 	beq.w	80274a6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x274>
 8027296:	2f00      	cmp	r7, #0
 8027298:	f2c0 8100 	blt.w	802749c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
 802729c:	42bb      	cmp	r3, r7
 802729e:	f340 80fd 	ble.w	802749c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
 80272a2:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 80272a6:	3701      	adds	r7, #1
 80272a8:	f100 8100 	bmi.w	80274ac <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
 80272ac:	42bb      	cmp	r3, r7
 80272ae:	f340 80fd 	ble.w	80274ac <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
 80272b2:	2e00      	cmp	r6, #0
 80272b4:	f000 80fc 	beq.w	80274b0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27e>
 80272b8:	3301      	adds	r3, #1
 80272ba:	f85c 2023 	ldr.w	r2, [ip, r3, lsl #2]
 80272be:	b2b6      	uxth	r6, r6
 80272c0:	b280      	uxth	r0, r0
 80272c2:	fb00 fe06 	mul.w	lr, r0, r6
 80272c6:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 80272ca:	0136      	lsls	r6, r6, #4
 80272cc:	eba6 070e 	sub.w	r7, r6, lr
 80272d0:	b280      	uxth	r0, r0
 80272d2:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
 80272d6:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 80272da:	b2bf      	uxth	r7, r7
 80272dc:	1a1b      	subs	r3, r3, r0
 80272de:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 80272e2:	b29b      	uxth	r3, r3
 80272e4:	fb0a f607 	mul.w	r6, sl, r7
 80272e8:	ea4f 6914 	mov.w	r9, r4, lsr #24
 80272ec:	fb0b 6603 	mla	r6, fp, r3, r6
 80272f0:	ea4f 6812 	mov.w	r8, r2, lsr #24
 80272f4:	fb00 6609 	mla	r6, r0, r9, r6
 80272f8:	fb0e 6608 	mla	r6, lr, r8, r6
 80272fc:	f3c6 2607 	ubfx	r6, r6, #8, #8
 8027300:	9600      	str	r6, [sp, #0]
 8027302:	2e00      	cmp	r6, #0
 8027304:	f000 80be 	beq.w	8027484 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x252>
 8027308:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 802730c:	fb0b fc0c 	mul.w	ip, fp, ip
 8027310:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 8027314:	fb0b f505 	mul.w	r5, fp, r5
 8027318:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 802731c:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
 8027320:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8027324:	44dc      	add	ip, fp
 8027326:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802732a:	9501      	str	r5, [sp, #4]
 802732c:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
 8027330:	9503      	str	r5, [sp, #12]
 8027332:	9d01      	ldr	r5, [sp, #4]
 8027334:	9e02      	ldr	r6, [sp, #8]
 8027336:	f505 7c80 	add.w	ip, r5, #256	; 0x100
 802733a:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 802733e:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
 8027342:	fb0a fc0c 	mul.w	ip, sl, ip
 8027346:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 802734a:	ea4f 251c 	mov.w	r5, ip, lsr #8
 802734e:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8027352:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8027356:	4465      	add	r5, ip
 8027358:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 802735c:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 8027360:	fb09 fc0c 	mul.w	ip, r9, ip
 8027364:	fb09 f904 	mul.w	r9, r9, r4
 8027368:	f509 7480 	add.w	r4, r9, #256	; 0x100
 802736c:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 8027370:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
 8027374:	fb08 f404 	mul.w	r4, r8, r4
 8027378:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 802737c:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8027380:	fb08 f802 	mul.w	r8, r8, r2
 8027384:	fb0a fa01 	mul.w	sl, sl, r1
 8027388:	0a22      	lsrs	r2, r4, #8
 802738a:	f50a 7180 	add.w	r1, sl, #256	; 0x100
 802738e:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8027392:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
 8027396:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 802739a:	4414      	add	r4, r2
 802739c:	ea4f 211c 	mov.w	r1, ip, lsr #8
 80273a0:	f508 7280 	add.w	r2, r8, #256	; 0x100
 80273a4:	0a2d      	lsrs	r5, r5, #8
 80273a6:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 80273aa:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 80273ae:	9a03      	ldr	r2, [sp, #12]
 80273b0:	8836      	ldrh	r6, [r6, #0]
 80273b2:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 80273b6:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 80273ba:	437d      	muls	r5, r7
 80273bc:	4461      	add	r1, ip
 80273be:	0a24      	lsrs	r4, r4, #8
 80273c0:	fb02 5503 	mla	r5, r2, r3, r5
 80273c4:	0a09      	lsrs	r1, r1, #8
 80273c6:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 80273ca:	fb04 540e 	mla	r4, r4, lr, r5
 80273ce:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 80273d2:	fb01 4100 	mla	r1, r1, r0, r4
 80273d6:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80273da:	0a09      	lsrs	r1, r1, #8
 80273dc:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80273e0:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
 80273e4:	fb07 f70a 	mul.w	r7, r7, sl
 80273e8:	ea4f 2818 	mov.w	r8, r8, lsr #8
 80273ec:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
 80273f0:	fb03 7101 	mla	r1, r3, r1, r7
 80273f4:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80273f8:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 80273fc:	fb0e 1e08 	mla	lr, lr, r8, r1
 8027400:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
 8027404:	fb00 e101 	mla	r1, r0, r1, lr
 8027408:	f89d 004c 	ldrb.w	r0, [sp, #76]	; 0x4c
 802740c:	9a00      	ldr	r2, [sp, #0]
 802740e:	b287      	uxth	r7, r0
 8027410:	437a      	muls	r2, r7
 8027412:	0a09      	lsrs	r1, r1, #8
 8027414:	1c53      	adds	r3, r2, #1
 8027416:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 802741a:	4321      	orrs	r1, r4
 802741c:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8027420:	1235      	asrs	r5, r6, #8
 8027422:	0c0a      	lsrs	r2, r1, #16
 8027424:	ea6f 2313 	mvn.w	r3, r3, lsr #8
 8027428:	b2db      	uxtb	r3, r3
 802742a:	fb12 f207 	smulbb	r2, r2, r7
 802742e:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8027432:	fb05 2503 	mla	r5, r5, r3, r2
 8027436:	f3c1 2407 	ubfx	r4, r1, #8, #8
 802743a:	10f2      	asrs	r2, r6, #3
 802743c:	b2c8      	uxtb	r0, r1
 802743e:	00f6      	lsls	r6, r6, #3
 8027440:	fb14 f407 	smulbb	r4, r4, r7
 8027444:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8027448:	b2f6      	uxtb	r6, r6
 802744a:	fb10 f007 	smulbb	r0, r0, r7
 802744e:	fb02 4203 	mla	r2, r2, r3, r4
 8027452:	b2ad      	uxth	r5, r5
 8027454:	fb06 0303 	mla	r3, r6, r3, r0
 8027458:	b299      	uxth	r1, r3
 802745a:	b294      	uxth	r4, r2
 802745c:	1c6b      	adds	r3, r5, #1
 802745e:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8027462:	1c62      	adds	r2, r4, #1
 8027464:	1c4b      	adds	r3, r1, #1
 8027466:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 802746a:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 802746e:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8027472:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8027476:	0952      	lsrs	r2, r2, #5
 8027478:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 802747c:	432b      	orrs	r3, r5
 802747e:	4313      	orrs	r3, r2
 8027480:	9a02      	ldr	r2, [sp, #8]
 8027482:	8013      	strh	r3, [r2, #0]
 8027484:	b005      	add	sp, #20
 8027486:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802748a:	2500      	movs	r5, #0
 802748c:	e6ef      	b.n	802726e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x3c>
 802748e:	2100      	movs	r1, #0
 8027490:	460d      	mov	r5, r1
 8027492:	e6f7      	b.n	8027284 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 8027494:	2100      	movs	r1, #0
 8027496:	e6f5      	b.n	8027284 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 8027498:	4631      	mov	r1, r6
 802749a:	e6f3      	b.n	8027284 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 802749c:	2400      	movs	r4, #0
 802749e:	e702      	b.n	80272a6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x74>
 80274a0:	2200      	movs	r2, #0
 80274a2:	4614      	mov	r4, r2
 80274a4:	e70b      	b.n	80272be <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 80274a6:	4602      	mov	r2, r0
 80274a8:	4604      	mov	r4, r0
 80274aa:	e708      	b.n	80272be <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 80274ac:	2200      	movs	r2, #0
 80274ae:	e706      	b.n	80272be <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 80274b0:	4632      	mov	r2, r6
 80274b2:	e704      	b.n	80272be <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>

080274b4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80274b4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80274b8:	b09d      	sub	sp, #116	; 0x74
 80274ba:	e9dd 4627 	ldrd	r4, r6, [sp, #156]	; 0x9c
 80274be:	9219      	str	r2, [sp, #100]	; 0x64
 80274c0:	9307      	str	r3, [sp, #28]
 80274c2:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 80274c4:	f89d 30bc 	ldrb.w	r3, [sp, #188]	; 0xbc
 80274c8:	931a      	str	r3, [sp, #104]	; 0x68
 80274ca:	9117      	str	r1, [sp, #92]	; 0x5c
 80274cc:	e9dd 132c 	ldrd	r1, r3, [sp, #176]	; 0xb0
 80274d0:	901b      	str	r0, [sp, #108]	; 0x6c
 80274d2:	6850      	ldr	r0, [r2, #4]
 80274d4:	6812      	ldr	r2, [r2, #0]
 80274d6:	fb00 1303 	mla	r3, r0, r3, r1
 80274da:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80274de:	930a      	str	r3, [sp, #40]	; 0x28
 80274e0:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 80274e2:	681b      	ldr	r3, [r3, #0]
 80274e4:	9310      	str	r3, [sp, #64]	; 0x40
 80274e6:	f8bd 3068 	ldrh.w	r3, [sp, #104]	; 0x68
 80274ea:	930b      	str	r3, [sp, #44]	; 0x2c
 80274ec:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 80274ee:	2b00      	cmp	r3, #0
 80274f0:	dc03      	bgt.n	80274fa <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 80274f2:	9b19      	ldr	r3, [sp, #100]	; 0x64
 80274f4:	2b00      	cmp	r3, #0
 80274f6:	f340 8375 	ble.w	8027be4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 80274fa:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 80274fc:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8027500:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8027504:	1e48      	subs	r0, r1, #1
 8027506:	1e57      	subs	r7, r2, #1
 8027508:	9b07      	ldr	r3, [sp, #28]
 802750a:	2b00      	cmp	r3, #0
 802750c:	f340 818e 	ble.w	802782c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
 8027510:	ea5f 4c24 	movs.w	ip, r4, asr #16
 8027514:	ea4f 4326 	mov.w	r3, r6, asr #16
 8027518:	d406      	bmi.n	8027528 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 802751a:	4584      	cmp	ip, r0
 802751c:	da04      	bge.n	8027528 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 802751e:	2b00      	cmp	r3, #0
 8027520:	db02      	blt.n	8027528 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 8027522:	42bb      	cmp	r3, r7
 8027524:	f2c0 8183 	blt.w	802782e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37a>
 8027528:	f11c 0c01 	adds.w	ip, ip, #1
 802752c:	f100 8173 	bmi.w	8027816 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 8027530:	4561      	cmp	r1, ip
 8027532:	f2c0 8170 	blt.w	8027816 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 8027536:	3301      	adds	r3, #1
 8027538:	f100 816d 	bmi.w	8027816 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 802753c:	429a      	cmp	r2, r3
 802753e:	f2c0 816a 	blt.w	8027816 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 8027542:	9b07      	ldr	r3, [sp, #28]
 8027544:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 8027546:	9318      	str	r3, [sp, #96]	; 0x60
 8027548:	9b18      	ldr	r3, [sp, #96]	; 0x60
 802754a:	2b00      	cmp	r3, #0
 802754c:	f340 818c 	ble.w	8027868 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b4>
 8027550:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
 8027552:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8027554:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 8027558:	689b      	ldr	r3, [r3, #8]
 802755a:	1422      	asrs	r2, r4, #16
 802755c:	ea4f 4c26 	mov.w	ip, r6, asr #16
 8027560:	f3c4 3003 	ubfx	r0, r4, #12, #4
 8027564:	f3c6 3103 	ubfx	r1, r6, #12, #4
 8027568:	f100 81cd 	bmi.w	8027906 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 802756c:	f103 38ff 	add.w	r8, r3, #4294967295
 8027570:	4542      	cmp	r2, r8
 8027572:	f280 81c8 	bge.w	8027906 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 8027576:	f1bc 0f00 	cmp.w	ip, #0
 802757a:	f2c0 81c4 	blt.w	8027906 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 802757e:	f10e 38ff 	add.w	r8, lr, #4294967295
 8027582:	45c4      	cmp	ip, r8
 8027584:	f280 81bf 	bge.w	8027906 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 8027588:	b21b      	sxth	r3, r3
 802758a:	fb0c 2203 	mla	r2, ip, r3, r2
 802758e:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8027590:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 8027594:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 8027598:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 802759c:	2800      	cmp	r0, #0
 802759e:	f000 81a9 	beq.w	80278f4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x440>
 80275a2:	f8d8 5004 	ldr.w	r5, [r8, #4]
 80275a6:	950c      	str	r5, [sp, #48]	; 0x30
 80275a8:	0e2d      	lsrs	r5, r5, #24
 80275aa:	9513      	str	r5, [sp, #76]	; 0x4c
 80275ac:	b181      	cbz	r1, 80275d0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 80275ae:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 80275b2:	3b01      	subs	r3, #1
 80275b4:	009b      	lsls	r3, r3, #2
 80275b6:	3304      	adds	r3, #4
 80275b8:	eb08 0c03 	add.w	ip, r8, r3
 80275bc:	f858 3003 	ldr.w	r3, [r8, r3]
 80275c0:	9308      	str	r3, [sp, #32]
 80275c2:	0e1b      	lsrs	r3, r3, #24
 80275c4:	9311      	str	r3, [sp, #68]	; 0x44
 80275c6:	f8dc 3004 	ldr.w	r3, [ip, #4]
 80275ca:	930d      	str	r3, [sp, #52]	; 0x34
 80275cc:	0e1b      	lsrs	r3, r3, #24
 80275ce:	9314      	str	r3, [sp, #80]	; 0x50
 80275d0:	b280      	uxth	r0, r0
 80275d2:	b289      	uxth	r1, r1
 80275d4:	fb00 f901 	mul.w	r9, r0, r1
 80275d8:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 80275dc:	0100      	lsls	r0, r0, #4
 80275de:	eba0 0809 	sub.w	r8, r0, r9
 80275e2:	b289      	uxth	r1, r1
 80275e4:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 80275e8:	9813      	ldr	r0, [sp, #76]	; 0x4c
 80275ea:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80275ec:	fa1f f888 	uxth.w	r8, r8
 80275f0:	1a5b      	subs	r3, r3, r1
 80275f2:	b29b      	uxth	r3, r3
 80275f4:	fb08 f000 	mul.w	r0, r8, r0
 80275f8:	fb03 000e 	mla	r0, r3, lr, r0
 80275fc:	fb01 0005 	mla	r0, r1, r5, r0
 8027600:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8027602:	fb09 0005 	mla	r0, r9, r5, r0
 8027606:	f3c0 2007 	ubfx	r0, r0, #8, #8
 802760a:	2800      	cmp	r0, #0
 802760c:	f000 80fa 	beq.w	8027804 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8027610:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 8027614:	d01b      	beq.n	802764e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 8027616:	f002 1aff 	and.w	sl, r2, #16711935	; 0xff00ff
 802761a:	fb0e fa0a 	mul.w	sl, lr, sl
 802761e:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8027622:	fb0e fe02 	mul.w	lr, lr, r2
 8027626:	ea4f 221a 	mov.w	r2, sl, lsr #8
 802762a:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 802762e:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8027632:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 8027636:	4452      	add	r2, sl
 8027638:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 802763c:	0a12      	lsrs	r2, r2, #8
 802763e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8027642:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8027646:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 802764a:	ea42 020c 	orr.w	r2, r2, ip
 802764e:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8027650:	2dff      	cmp	r5, #255	; 0xff
 8027652:	d021      	beq.n	8027698 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
 8027654:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8027656:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 802765a:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 802765c:	fb05 fb0b 	mul.w	fp, r5, fp
 8027660:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8027662:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8027666:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8027668:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 802766c:	fb05 fa0a 	mul.w	sl, r5, sl
 8027670:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8027674:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8027678:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 802767c:	44de      	add	lr, fp
 802767e:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8027682:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8027686:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802768a:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 802768e:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8027692:	ea4e 050a 	orr.w	r5, lr, sl
 8027696:	950c      	str	r5, [sp, #48]	; 0x30
 8027698:	9d11      	ldr	r5, [sp, #68]	; 0x44
 802769a:	2dff      	cmp	r5, #255	; 0xff
 802769c:	d021      	beq.n	80276e2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22e>
 802769e:	9d08      	ldr	r5, [sp, #32]
 80276a0:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 80276a4:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80276a6:	fb05 fb0b 	mul.w	fp, r5, fp
 80276aa:	9d08      	ldr	r5, [sp, #32]
 80276ac:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 80276b0:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80276b2:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 80276b6:	fb05 fa0a 	mul.w	sl, r5, sl
 80276ba:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80276be:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 80276c2:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 80276c6:	44de      	add	lr, fp
 80276c8:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 80276cc:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80276d0:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80276d4:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80276d8:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80276dc:	ea4e 050a 	orr.w	r5, lr, sl
 80276e0:	9508      	str	r5, [sp, #32]
 80276e2:	9d14      	ldr	r5, [sp, #80]	; 0x50
 80276e4:	2dff      	cmp	r5, #255	; 0xff
 80276e6:	d021      	beq.n	802772c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x278>
 80276e8:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 80276ea:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 80276ee:	9d14      	ldr	r5, [sp, #80]	; 0x50
 80276f0:	fb05 fb0b 	mul.w	fp, r5, fp
 80276f4:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 80276f6:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 80276fa:	9d14      	ldr	r5, [sp, #80]	; 0x50
 80276fc:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8027700:	fb05 fa0a 	mul.w	sl, r5, sl
 8027704:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8027708:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 802770c:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8027710:	44de      	add	lr, fp
 8027712:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8027716:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802771a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802771e:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8027722:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8027726:	ea4e 050a 	orr.w	r5, lr, sl
 802772a:	950d      	str	r5, [sp, #52]	; 0x34
 802772c:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 802772e:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8027732:	9d08      	ldr	r5, [sp, #32]
 8027734:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
 8027738:	fb08 fc0c 	mul.w	ip, r8, ip
 802773c:	fb03 cc0e 	mla	ip, r3, lr, ip
 8027740:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 8027744:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8027746:	fb01 cc0e 	mla	ip, r1, lr, ip
 802774a:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 802774e:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8027750:	fb09 cc0e 	mla	ip, r9, lr, ip
 8027754:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 8027758:	fb08 f80e 	mul.w	r8, r8, lr
 802775c:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8027760:	fb03 8202 	mla	r2, r3, r2, r8
 8027764:	9b08      	ldr	r3, [sp, #32]
 8027766:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8027768:	f403 4a7f 	and.w	sl, r3, #65280	; 0xff00
 802776c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 802776e:	fb01 220a 	mla	r2, r1, sl, r2
 8027772:	f403 417f 	and.w	r1, r3, #65280	; 0xff00
 8027776:	fb09 2901 	mla	r9, r9, r1, r2
 802777a:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 802777c:	883b      	ldrh	r3, [r7, #0]
 802777e:	4342      	muls	r2, r0
 8027780:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8027784:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8027788:	1c50      	adds	r0, r2, #1
 802778a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802778e:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 8027792:	ea4c 0c09 	orr.w	ip, ip, r9
 8027796:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 802779a:	1219      	asrs	r1, r3, #8
 802779c:	ea4f 421c 	mov.w	r2, ip, lsr #16
 80277a0:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 80277a4:	b2c0      	uxtb	r0, r0
 80277a6:	fb12 f205 	smulbb	r2, r2, r5
 80277aa:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 80277ae:	fb01 2100 	mla	r1, r1, r0, r2
 80277b2:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 80277b6:	10da      	asrs	r2, r3, #3
 80277b8:	fa5f fc8c 	uxtb.w	ip, ip
 80277bc:	00db      	lsls	r3, r3, #3
 80277be:	fb1c fc05 	smulbb	ip, ip, r5
 80277c2:	b2db      	uxtb	r3, r3
 80277c4:	b289      	uxth	r1, r1
 80277c6:	fb03 c300 	mla	r3, r3, r0, ip
 80277ca:	fa1f fc83 	uxth.w	ip, r3
 80277ce:	1c4b      	adds	r3, r1, #1
 80277d0:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 80277d4:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 80277d8:	fb1e fe05 	smulbb	lr, lr, r5
 80277dc:	f10c 0301 	add.w	r3, ip, #1
 80277e0:	fb02 e200 	mla	r2, r2, r0, lr
 80277e4:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 80277e8:	b292      	uxth	r2, r2
 80277ea:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 80277ee:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 80277f2:	430b      	orrs	r3, r1
 80277f4:	1c51      	adds	r1, r2, #1
 80277f6:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 80277fa:	0952      	lsrs	r2, r2, #5
 80277fc:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8027800:	4313      	orrs	r3, r2
 8027802:	803b      	strh	r3, [r7, #0]
 8027804:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8027806:	441c      	add	r4, r3
 8027808:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 802780a:	441e      	add	r6, r3
 802780c:	9b18      	ldr	r3, [sp, #96]	; 0x60
 802780e:	3b01      	subs	r3, #1
 8027810:	3702      	adds	r7, #2
 8027812:	9318      	str	r3, [sp, #96]	; 0x60
 8027814:	e698      	b.n	8027548 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8027816:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8027818:	441c      	add	r4, r3
 802781a:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 802781c:	441e      	add	r6, r3
 802781e:	9b07      	ldr	r3, [sp, #28]
 8027820:	3b01      	subs	r3, #1
 8027822:	9307      	str	r3, [sp, #28]
 8027824:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8027826:	3302      	adds	r3, #2
 8027828:	930a      	str	r3, [sp, #40]	; 0x28
 802782a:	e66d      	b.n	8027508 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 802782c:	d023      	beq.n	8027876 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
 802782e:	9b07      	ldr	r3, [sp, #28]
 8027830:	9829      	ldr	r0, [sp, #164]	; 0xa4
 8027832:	3b01      	subs	r3, #1
 8027834:	fb00 4003 	mla	r0, r0, r3, r4
 8027838:	1400      	asrs	r0, r0, #16
 802783a:	f53f ae82 	bmi.w	8027542 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 802783e:	3901      	subs	r1, #1
 8027840:	4288      	cmp	r0, r1
 8027842:	f6bf ae7e 	bge.w	8027542 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8027846:	992a      	ldr	r1, [sp, #168]	; 0xa8
 8027848:	fb01 6303 	mla	r3, r1, r3, r6
 802784c:	141b      	asrs	r3, r3, #16
 802784e:	f53f ae78 	bmi.w	8027542 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8027852:	3a01      	subs	r2, #1
 8027854:	4293      	cmp	r3, r2
 8027856:	f6bf ae74 	bge.w	8027542 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 802785a:	f8dd b01c 	ldr.w	fp, [sp, #28]
 802785e:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
 8027862:	f1bb 0f00 	cmp.w	fp, #0
 8027866:	dc6c      	bgt.n	8027942 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 8027868:	9b07      	ldr	r3, [sp, #28]
 802786a:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 802786e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8027870:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 8027874:	930a      	str	r3, [sp, #40]	; 0x28
 8027876:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8027878:	2b00      	cmp	r3, #0
 802787a:	f340 81b3 	ble.w	8027be4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 802787e:	ee30 0a04 	vadd.f32	s0, s0, s8
 8027882:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8027886:	eec7 7a00 	vdiv.f32	s15, s14, s0
 802788a:	9b26      	ldr	r3, [sp, #152]	; 0x98
 802788c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8027890:	ee31 1a05 	vadd.f32	s2, s2, s10
 8027894:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8027898:	eef0 6a62 	vmov.f32	s13, s5
 802789c:	ee61 7a27 	vmul.f32	s15, s2, s15
 80278a0:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80278a4:	ee77 2a62 	vsub.f32	s5, s14, s5
 80278a8:	ee16 4a90 	vmov	r4, s13
 80278ac:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80278b0:	eef0 6a43 	vmov.f32	s13, s6
 80278b4:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80278b8:	ee12 2a90 	vmov	r2, s5
 80278bc:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80278c0:	fb92 f3f3 	sdiv	r3, r2, r3
 80278c4:	ee13 2a10 	vmov	r2, s6
 80278c8:	9329      	str	r3, [sp, #164]	; 0xa4
 80278ca:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80278cc:	fb92 f3f3 	sdiv	r3, r2, r3
 80278d0:	932a      	str	r3, [sp, #168]	; 0xa8
 80278d2:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 80278d4:	9a19      	ldr	r2, [sp, #100]	; 0x64
 80278d6:	3b01      	subs	r3, #1
 80278d8:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80278dc:	9317      	str	r3, [sp, #92]	; 0x5c
 80278de:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80278e0:	bf08      	it	eq
 80278e2:	4613      	moveq	r3, r2
 80278e4:	ee16 6a90 	vmov	r6, s13
 80278e8:	9307      	str	r3, [sp, #28]
 80278ea:	eeb0 3a67 	vmov.f32	s6, s15
 80278ee:	eef0 2a47 	vmov.f32	s5, s14
 80278f2:	e5fb      	b.n	80274ec <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 80278f4:	2900      	cmp	r1, #0
 80278f6:	f43f ae6b 	beq.w	80275d0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 80278fa:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 80278fe:	9308      	str	r3, [sp, #32]
 8027900:	0e1b      	lsrs	r3, r3, #24
 8027902:	9311      	str	r3, [sp, #68]	; 0x44
 8027904:	e664      	b.n	80275d0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8027906:	f112 0801 	adds.w	r8, r2, #1
 802790a:	f53f af7b 	bmi.w	8027804 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 802790e:	4543      	cmp	r3, r8
 8027910:	f6ff af78 	blt.w	8027804 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8027914:	f11c 0801 	adds.w	r8, ip, #1
 8027918:	f53f af74 	bmi.w	8027804 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 802791c:	45c6      	cmp	lr, r8
 802791e:	f6ff af71 	blt.w	8027804 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8027922:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 8027924:	9201      	str	r2, [sp, #4]
 8027926:	fa0f f28e 	sxth.w	r2, lr
 802792a:	e9cd 1504 	strd	r1, r5, [sp, #16]
 802792e:	e9cd c002 	strd	ip, r0, [sp, #8]
 8027932:	9200      	str	r2, [sp, #0]
 8027934:	b21b      	sxth	r3, r3
 8027936:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8027938:	981b      	ldr	r0, [sp, #108]	; 0x6c
 802793a:	4639      	mov	r1, r7
 802793c:	f7ff fc79 	bl	8027232 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>
 8027940:	e760      	b.n	8027804 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8027942:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8027944:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8027946:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 802794a:	1427      	asrs	r7, r4, #16
 802794c:	1433      	asrs	r3, r6, #16
 802794e:	fb01 7303 	mla	r3, r1, r3, r7
 8027952:	eb05 0783 	add.w	r7, r5, r3, lsl #2
 8027956:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 802795a:	f3c4 3203 	ubfx	r2, r4, #12, #4
 802795e:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8027962:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 8027966:	2a00      	cmp	r2, #0
 8027968:	f000 8133 	beq.w	8027bd2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x71e>
 802796c:	687d      	ldr	r5, [r7, #4]
 802796e:	950e      	str	r5, [sp, #56]	; 0x38
 8027970:	0e2d      	lsrs	r5, r5, #24
 8027972:	9515      	str	r5, [sp, #84]	; 0x54
 8027974:	b178      	cbz	r0, 8027996 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 8027976:	f101 4180 	add.w	r1, r1, #1073741824	; 0x40000000
 802797a:	3901      	subs	r1, #1
 802797c:	0089      	lsls	r1, r1, #2
 802797e:	3104      	adds	r1, #4
 8027980:	eb07 0e01 	add.w	lr, r7, r1
 8027984:	5879      	ldr	r1, [r7, r1]
 8027986:	9109      	str	r1, [sp, #36]	; 0x24
 8027988:	0e09      	lsrs	r1, r1, #24
 802798a:	9112      	str	r1, [sp, #72]	; 0x48
 802798c:	f8de 1004 	ldr.w	r1, [lr, #4]
 8027990:	910f      	str	r1, [sp, #60]	; 0x3c
 8027992:	0e09      	lsrs	r1, r1, #24
 8027994:	9116      	str	r1, [sp, #88]	; 0x58
 8027996:	b292      	uxth	r2, r2
 8027998:	b280      	uxth	r0, r0
 802799a:	fb02 f800 	mul.w	r8, r2, r0
 802799e:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 80279a2:	0112      	lsls	r2, r2, #4
 80279a4:	eba2 0e08 	sub.w	lr, r2, r8
 80279a8:	b280      	uxth	r0, r0
 80279aa:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 80279ae:	9915      	ldr	r1, [sp, #84]	; 0x54
 80279b0:	9d12      	ldr	r5, [sp, #72]	; 0x48
 80279b2:	fa1f fe8e 	uxth.w	lr, lr
 80279b6:	1a12      	subs	r2, r2, r0
 80279b8:	b292      	uxth	r2, r2
 80279ba:	fb0e f101 	mul.w	r1, lr, r1
 80279be:	fb02 110c 	mla	r1, r2, ip, r1
 80279c2:	fb00 1105 	mla	r1, r0, r5, r1
 80279c6:	9d16      	ldr	r5, [sp, #88]	; 0x58
 80279c8:	fb08 1105 	mla	r1, r8, r5, r1
 80279cc:	f3c1 2107 	ubfx	r1, r1, #8, #8
 80279d0:	2900      	cmp	r1, #0
 80279d2:	f000 80f5 	beq.w	8027bc0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70c>
 80279d6:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 80279da:	d019      	beq.n	8027a10 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55c>
 80279dc:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 80279e0:	fb0c fa0a 	mul.w	sl, ip, sl
 80279e4:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80279e8:	fb0c fc03 	mul.w	ip, ip, r3
 80279ec:	ea4f 231a 	mov.w	r3, sl, lsr #8
 80279f0:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80279f4:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 80279f8:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 80279fc:	4453      	add	r3, sl
 80279fe:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8027a02:	0a1b      	lsrs	r3, r3, #8
 8027a04:	0a3f      	lsrs	r7, r7, #8
 8027a06:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8027a0a:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 8027a0e:	433b      	orrs	r3, r7
 8027a10:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8027a12:	2dff      	cmp	r5, #255	; 0xff
 8027a14:	d020      	beq.n	8027a58 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a4>
 8027a16:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8027a18:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8027a1c:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8027a1e:	436f      	muls	r7, r5
 8027a20:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8027a22:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8027a26:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8027a28:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8027a2c:	fb05 fa0a 	mul.w	sl, r5, sl
 8027a30:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8027a34:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8027a38:	44bc      	add	ip, r7
 8027a3a:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8027a3e:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8027a42:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8027a46:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8027a4a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8027a4e:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8027a52:	ea4c 050a 	orr.w	r5, ip, sl
 8027a56:	950e      	str	r5, [sp, #56]	; 0x38
 8027a58:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8027a5a:	2dff      	cmp	r5, #255	; 0xff
 8027a5c:	d020      	beq.n	8027aa0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ec>
 8027a5e:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8027a60:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8027a64:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8027a66:	436f      	muls	r7, r5
 8027a68:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8027a6a:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8027a6e:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8027a70:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8027a74:	fb05 fa0a 	mul.w	sl, r5, sl
 8027a78:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8027a7c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8027a80:	44bc      	add	ip, r7
 8027a82:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8027a86:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8027a8a:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8027a8e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8027a92:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8027a96:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8027a9a:	ea4c 050a 	orr.w	r5, ip, sl
 8027a9e:	9509      	str	r5, [sp, #36]	; 0x24
 8027aa0:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8027aa2:	2dff      	cmp	r5, #255	; 0xff
 8027aa4:	d020      	beq.n	8027ae8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x634>
 8027aa6:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8027aa8:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8027aac:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8027aae:	436f      	muls	r7, r5
 8027ab0:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8027ab2:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8027ab6:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8027ab8:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8027abc:	fb05 fa0a 	mul.w	sl, r5, sl
 8027ac0:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8027ac4:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8027ac8:	44bc      	add	ip, r7
 8027aca:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8027ace:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8027ad2:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8027ad6:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8027ada:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8027ade:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8027ae2:	ea4c 050a 	orr.w	r5, ip, sl
 8027ae6:	950f      	str	r5, [sp, #60]	; 0x3c
 8027ae8:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8027aea:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8027aee:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8027af0:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 8027af4:	fb0e f707 	mul.w	r7, lr, r7
 8027af8:	fb02 770c 	mla	r7, r2, ip, r7
 8027afc:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8027b00:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8027b02:	fb00 770c 	mla	r7, r0, ip, r7
 8027b06:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8027b0a:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8027b0c:	fb08 770c 	mla	r7, r8, ip, r7
 8027b10:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 8027b14:	fb0e fe0c 	mul.w	lr, lr, ip
 8027b18:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8027b1c:	fb02 e303 	mla	r3, r2, r3, lr
 8027b20:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8027b22:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8027b24:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 8027b28:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8027b2a:	fb00 330a 	mla	r3, r0, sl, r3
 8027b2e:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 8027b32:	fb08 3c0c 	mla	ip, r8, ip, r3
 8027b36:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8027b38:	f8b9 0000 	ldrh.w	r0, [r9]
 8027b3c:	4359      	muls	r1, r3
 8027b3e:	0a3f      	lsrs	r7, r7, #8
 8027b40:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8027b44:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8027b48:	1c4b      	adds	r3, r1, #1
 8027b4a:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8027b4e:	ea47 070c 	orr.w	r7, r7, ip
 8027b52:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8027b56:	1202      	asrs	r2, r0, #8
 8027b58:	0c3b      	lsrs	r3, r7, #16
 8027b5a:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 8027b5e:	b2c9      	uxtb	r1, r1
 8027b60:	fb13 f305 	smulbb	r3, r3, r5
 8027b64:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8027b68:	fb02 3201 	mla	r2, r2, r1, r3
 8027b6c:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 8027b70:	10c3      	asrs	r3, r0, #3
 8027b72:	b2ff      	uxtb	r7, r7
 8027b74:	00c0      	lsls	r0, r0, #3
 8027b76:	b2c0      	uxtb	r0, r0
 8027b78:	fb17 f705 	smulbb	r7, r7, r5
 8027b7c:	fb00 7001 	mla	r0, r0, r1, r7
 8027b80:	b292      	uxth	r2, r2
 8027b82:	fb1c fc05 	smulbb	ip, ip, r5
 8027b86:	b280      	uxth	r0, r0
 8027b88:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 8027b8c:	fb03 c301 	mla	r3, r3, r1, ip
 8027b90:	1c51      	adds	r1, r2, #1
 8027b92:	f100 0c01 	add.w	ip, r0, #1
 8027b96:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8027b9a:	eb0c 2c10 	add.w	ip, ip, r0, lsr #8
 8027b9e:	b29b      	uxth	r3, r3
 8027ba0:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8027ba4:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 8027ba8:	ea4c 0202 	orr.w	r2, ip, r2
 8027bac:	f103 0c01 	add.w	ip, r3, #1
 8027bb0:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 8027bb4:	095b      	lsrs	r3, r3, #5
 8027bb6:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8027bba:	431a      	orrs	r2, r3
 8027bbc:	f8a9 2000 	strh.w	r2, [r9]
 8027bc0:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8027bc2:	441c      	add	r4, r3
 8027bc4:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8027bc6:	f109 0902 	add.w	r9, r9, #2
 8027bca:	441e      	add	r6, r3
 8027bcc:	f10b 3bff 	add.w	fp, fp, #4294967295
 8027bd0:	e647      	b.n	8027862 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ae>
 8027bd2:	2800      	cmp	r0, #0
 8027bd4:	f43f aedf 	beq.w	8027996 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 8027bd8:	f857 1021 	ldr.w	r1, [r7, r1, lsl #2]
 8027bdc:	9109      	str	r1, [sp, #36]	; 0x24
 8027bde:	0e09      	lsrs	r1, r1, #24
 8027be0:	9112      	str	r1, [sp, #72]	; 0x48
 8027be2:	e6d8      	b.n	8027996 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 8027be4:	b01d      	add	sp, #116	; 0x74
 8027be6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08027bea <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>:
 8027bea:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8027bee:	b085      	sub	sp, #20
 8027bf0:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	; 0x3c
 8027bf4:	9102      	str	r1, [sp, #8]
 8027bf6:	2c00      	cmp	r4, #0
 8027bf8:	fb04 7103 	mla	r1, r4, r3, r7
 8027bfc:	f9bd e038 	ldrsh.w	lr, [sp, #56]	; 0x38
 8027c00:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
 8027c04:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
 8027c08:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
 8027c0c:	f2c0 810c 	blt.w	8027e28 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
 8027c10:	45a6      	cmp	lr, r4
 8027c12:	f340 8109 	ble.w	8027e28 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
 8027c16:	2f00      	cmp	r7, #0
 8027c18:	f2c0 8104 	blt.w	8027e24 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
 8027c1c:	42bb      	cmp	r3, r7
 8027c1e:	f340 8101 	ble.w	8027e24 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
 8027c22:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
 8027c26:	1c7a      	adds	r2, r7, #1
 8027c28:	f100 8101 	bmi.w	8027e2e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
 8027c2c:	4293      	cmp	r3, r2
 8027c2e:	f340 80fe 	ble.w	8027e2e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
 8027c32:	2e00      	cmp	r6, #0
 8027c34:	f000 80fd 	beq.w	8027e32 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x248>
 8027c38:	f8dc 1004 	ldr.w	r1, [ip, #4]
 8027c3c:	3401      	adds	r4, #1
 8027c3e:	f100 80fc 	bmi.w	8027e3a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
 8027c42:	45a6      	cmp	lr, r4
 8027c44:	f340 80f9 	ble.w	8027e3a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
 8027c48:	2800      	cmp	r0, #0
 8027c4a:	f000 80f9 	beq.w	8027e40 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x256>
 8027c4e:	2f00      	cmp	r7, #0
 8027c50:	eb0c 0283 	add.w	r2, ip, r3, lsl #2
 8027c54:	f2c0 80ef 	blt.w	8027e36 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
 8027c58:	42bb      	cmp	r3, r7
 8027c5a:	f340 80ec 	ble.w	8027e36 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
 8027c5e:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 8027c62:	3701      	adds	r7, #1
 8027c64:	f100 80ef 	bmi.w	8027e46 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
 8027c68:	42bb      	cmp	r3, r7
 8027c6a:	f340 80ec 	ble.w	8027e46 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
 8027c6e:	2e00      	cmp	r6, #0
 8027c70:	f000 80eb 	beq.w	8027e4a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x260>
 8027c74:	6852      	ldr	r2, [r2, #4]
 8027c76:	b2b6      	uxth	r6, r6
 8027c78:	b280      	uxth	r0, r0
 8027c7a:	fb00 fe06 	mul.w	lr, r0, r6
 8027c7e:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 8027c82:	0136      	lsls	r6, r6, #4
 8027c84:	eba6 070e 	sub.w	r7, r6, lr
 8027c88:	b280      	uxth	r0, r0
 8027c8a:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
 8027c8e:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 8027c92:	b2bf      	uxth	r7, r7
 8027c94:	1a1b      	subs	r3, r3, r0
 8027c96:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 8027c9a:	b29b      	uxth	r3, r3
 8027c9c:	fb07 f60a 	mul.w	r6, r7, sl
 8027ca0:	ea4f 6914 	mov.w	r9, r4, lsr #24
 8027ca4:	fb0b 6603 	mla	r6, fp, r3, r6
 8027ca8:	ea4f 6812 	mov.w	r8, r2, lsr #24
 8027cac:	fb00 6609 	mla	r6, r0, r9, r6
 8027cb0:	fb0e 6608 	mla	r6, lr, r8, r6
 8027cb4:	f3c6 2607 	ubfx	r6, r6, #8, #8
 8027cb8:	9600      	str	r6, [sp, #0]
 8027cba:	2e00      	cmp	r6, #0
 8027cbc:	f000 80af 	beq.w	8027e1e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x234>
 8027cc0:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8027cc4:	fb0b fc0c 	mul.w	ip, fp, ip
 8027cc8:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 8027ccc:	fb0b f505 	mul.w	r5, fp, r5
 8027cd0:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 8027cd4:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
 8027cd8:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8027cdc:	44dc      	add	ip, fp
 8027cde:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8027ce2:	9501      	str	r5, [sp, #4]
 8027ce4:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
 8027ce8:	9503      	str	r5, [sp, #12]
 8027cea:	9d01      	ldr	r5, [sp, #4]
 8027cec:	9e02      	ldr	r6, [sp, #8]
 8027cee:	f505 7c80 	add.w	ip, r5, #256	; 0x100
 8027cf2:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 8027cf6:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
 8027cfa:	fb0a fc0c 	mul.w	ip, sl, ip
 8027cfe:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 8027d02:	ea4f 251c 	mov.w	r5, ip, lsr #8
 8027d06:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8027d0a:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8027d0e:	4465      	add	r5, ip
 8027d10:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8027d14:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 8027d18:	fb09 fc0c 	mul.w	ip, r9, ip
 8027d1c:	fb09 f904 	mul.w	r9, r9, r4
 8027d20:	f509 7480 	add.w	r4, r9, #256	; 0x100
 8027d24:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 8027d28:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
 8027d2c:	fb08 f404 	mul.w	r4, r8, r4
 8027d30:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 8027d34:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8027d38:	fb08 f802 	mul.w	r8, r8, r2
 8027d3c:	fb0a fa01 	mul.w	sl, sl, r1
 8027d40:	0a22      	lsrs	r2, r4, #8
 8027d42:	f50a 7180 	add.w	r1, sl, #256	; 0x100
 8027d46:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8027d4a:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
 8027d4e:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 8027d52:	4414      	add	r4, r2
 8027d54:	ea4f 211c 	mov.w	r1, ip, lsr #8
 8027d58:	f508 7280 	add.w	r2, r8, #256	; 0x100
 8027d5c:	0a2d      	lsrs	r5, r5, #8
 8027d5e:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 8027d62:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8027d66:	9a03      	ldr	r2, [sp, #12]
 8027d68:	8836      	ldrh	r6, [r6, #0]
 8027d6a:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 8027d6e:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8027d72:	437d      	muls	r5, r7
 8027d74:	4461      	add	r1, ip
 8027d76:	0a24      	lsrs	r4, r4, #8
 8027d78:	fb02 5503 	mla	r5, r2, r3, r5
 8027d7c:	0a09      	lsrs	r1, r1, #8
 8027d7e:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8027d82:	fb04 540e 	mla	r4, r4, lr, r5
 8027d86:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 8027d8a:	fb01 4100 	mla	r1, r1, r0, r4
 8027d8e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8027d92:	0a09      	lsrs	r1, r1, #8
 8027d94:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8027d98:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
 8027d9c:	ea4f 2818 	mov.w	r8, r8, lsr #8
 8027da0:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
 8027da4:	fb07 f70a 	mul.w	r7, r7, sl
 8027da8:	fb03 7101 	mla	r1, r3, r1, r7
 8027dac:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8027db0:	9b00      	ldr	r3, [sp, #0]
 8027db2:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 8027db6:	fb0e 1e08 	mla	lr, lr, r8, r1
 8027dba:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
 8027dbe:	fb00 e101 	mla	r1, r0, r1, lr
 8027dc2:	43da      	mvns	r2, r3
 8027dc4:	1233      	asrs	r3, r6, #8
 8027dc6:	b2d2      	uxtb	r2, r2
 8027dc8:	10f0      	asrs	r0, r6, #3
 8027dca:	0a09      	lsrs	r1, r1, #8
 8027dcc:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 8027dd0:	00f6      	lsls	r6, r6, #3
 8027dd2:	4353      	muls	r3, r2
 8027dd4:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 8027dd8:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8027ddc:	b2f6      	uxtb	r6, r6
 8027dde:	4321      	orrs	r1, r4
 8027de0:	4350      	muls	r0, r2
 8027de2:	4356      	muls	r6, r2
 8027de4:	1c5a      	adds	r2, r3, #1
 8027de6:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8027dea:	0c0b      	lsrs	r3, r1, #16
 8027dec:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8027df0:	1c42      	adds	r2, r0, #1
 8027df2:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8027df6:	0a0a      	lsrs	r2, r1, #8
 8027df8:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 8027dfc:	021b      	lsls	r3, r3, #8
 8027dfe:	00d2      	lsls	r2, r2, #3
 8027e00:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8027e04:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 8027e08:	4313      	orrs	r3, r2
 8027e0a:	1c72      	adds	r2, r6, #1
 8027e0c:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 8027e10:	eb01 2116 	add.w	r1, r1, r6, lsr #8
 8027e14:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 8027e18:	4319      	orrs	r1, r3
 8027e1a:	9b02      	ldr	r3, [sp, #8]
 8027e1c:	8019      	strh	r1, [r3, #0]
 8027e1e:	b005      	add	sp, #20
 8027e20:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8027e24:	2500      	movs	r5, #0
 8027e26:	e6fe      	b.n	8027c26 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x3c>
 8027e28:	2100      	movs	r1, #0
 8027e2a:	460d      	mov	r5, r1
 8027e2c:	e706      	b.n	8027c3c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 8027e2e:	2100      	movs	r1, #0
 8027e30:	e704      	b.n	8027c3c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 8027e32:	4631      	mov	r1, r6
 8027e34:	e702      	b.n	8027c3c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 8027e36:	2400      	movs	r4, #0
 8027e38:	e713      	b.n	8027c62 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x78>
 8027e3a:	2200      	movs	r2, #0
 8027e3c:	4614      	mov	r4, r2
 8027e3e:	e71a      	b.n	8027c76 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 8027e40:	4602      	mov	r2, r0
 8027e42:	4604      	mov	r4, r0
 8027e44:	e717      	b.n	8027c76 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 8027e46:	2200      	movs	r2, #0
 8027e48:	e715      	b.n	8027c76 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 8027e4a:	4632      	mov	r2, r6
 8027e4c:	e713      	b.n	8027c76 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
	...

08027e50 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8027e50:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8027e54:	b09b      	sub	sp, #108	; 0x6c
 8027e56:	e9dd 4625 	ldrd	r4, r6, [sp, #148]	; 0x94
 8027e5a:	9218      	str	r2, [sp, #96]	; 0x60
 8027e5c:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8027e5e:	9116      	str	r1, [sp, #88]	; 0x58
 8027e60:	9307      	str	r3, [sp, #28]
 8027e62:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	; 0xa8
 8027e66:	9019      	str	r0, [sp, #100]	; 0x64
 8027e68:	6850      	ldr	r0, [r2, #4]
 8027e6a:	6812      	ldr	r2, [r2, #0]
 8027e6c:	fb00 1303 	mla	r3, r0, r3, r1
 8027e70:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8027e74:	930a      	str	r3, [sp, #40]	; 0x28
 8027e76:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8027e78:	681b      	ldr	r3, [r3, #0]
 8027e7a:	930f      	str	r3, [sp, #60]	; 0x3c
 8027e7c:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8027e7e:	2b00      	cmp	r3, #0
 8027e80:	dc03      	bgt.n	8027e8a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8027e82:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8027e84:	2b00      	cmp	r3, #0
 8027e86:	f340 8386 	ble.w	8028596 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 8027e8a:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8027e8c:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8027e90:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8027e94:	1e48      	subs	r0, r1, #1
 8027e96:	1e57      	subs	r7, r2, #1
 8027e98:	9b07      	ldr	r3, [sp, #28]
 8027e9a:	2b00      	cmp	r3, #0
 8027e9c:	f340 8166 	ble.w	802816c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 8027ea0:	ea5f 4c24 	movs.w	ip, r4, asr #16
 8027ea4:	ea4f 4326 	mov.w	r3, r6, asr #16
 8027ea8:	d406      	bmi.n	8027eb8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8027eaa:	4584      	cmp	ip, r0
 8027eac:	da04      	bge.n	8027eb8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8027eae:	2b00      	cmp	r3, #0
 8027eb0:	db02      	blt.n	8027eb8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8027eb2:	42bb      	cmp	r3, r7
 8027eb4:	f2c0 815b 	blt.w	802816e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
 8027eb8:	f11c 0c01 	adds.w	ip, ip, #1
 8027ebc:	f100 814b 	bmi.w	8028156 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 8027ec0:	4561      	cmp	r1, ip
 8027ec2:	f2c0 8148 	blt.w	8028156 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 8027ec6:	3301      	adds	r3, #1
 8027ec8:	f100 8145 	bmi.w	8028156 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 8027ecc:	429a      	cmp	r2, r3
 8027ece:	f2c0 8142 	blt.w	8028156 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 8027ed2:	9b07      	ldr	r3, [sp, #28]
 8027ed4:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 8027ed6:	9317      	str	r3, [sp, #92]	; 0x5c
 8027ed8:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8027eda:	2b00      	cmp	r3, #0
 8027edc:	f340 8165 	ble.w	80281aa <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8027ee0:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 8027ee2:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8027ee4:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 8027ee8:	689b      	ldr	r3, [r3, #8]
 8027eea:	1422      	asrs	r2, r4, #16
 8027eec:	ea4f 4c26 	mov.w	ip, r6, asr #16
 8027ef0:	f3c4 3103 	ubfx	r1, r4, #12, #4
 8027ef4:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8027ef8:	f100 81d5 	bmi.w	80282a6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 8027efc:	f103 38ff 	add.w	r8, r3, #4294967295
 8027f00:	4542      	cmp	r2, r8
 8027f02:	f280 81d0 	bge.w	80282a6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 8027f06:	f1bc 0f00 	cmp.w	ip, #0
 8027f0a:	f2c0 81cc 	blt.w	80282a6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 8027f0e:	f10e 38ff 	add.w	r8, lr, #4294967295
 8027f12:	45c4      	cmp	ip, r8
 8027f14:	f280 81c7 	bge.w	80282a6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 8027f18:	b21b      	sxth	r3, r3
 8027f1a:	fb0c 2203 	mla	r2, ip, r3, r2
 8027f1e:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8027f20:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 8027f24:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 8027f28:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 8027f2c:	2900      	cmp	r1, #0
 8027f2e:	f000 8182 	beq.w	8028236 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 8027f32:	f8d8 5004 	ldr.w	r5, [r8, #4]
 8027f36:	950b      	str	r5, [sp, #44]	; 0x2c
 8027f38:	0e2d      	lsrs	r5, r5, #24
 8027f3a:	9512      	str	r5, [sp, #72]	; 0x48
 8027f3c:	b180      	cbz	r0, 8027f60 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 8027f3e:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 8027f42:	3b01      	subs	r3, #1
 8027f44:	009b      	lsls	r3, r3, #2
 8027f46:	3304      	adds	r3, #4
 8027f48:	eb08 0c03 	add.w	ip, r8, r3
 8027f4c:	f858 3003 	ldr.w	r3, [r8, r3]
 8027f50:	9308      	str	r3, [sp, #32]
 8027f52:	0e1b      	lsrs	r3, r3, #24
 8027f54:	9310      	str	r3, [sp, #64]	; 0x40
 8027f56:	f8dc 3004 	ldr.w	r3, [ip, #4]
 8027f5a:	930c      	str	r3, [sp, #48]	; 0x30
 8027f5c:	0e1b      	lsrs	r3, r3, #24
 8027f5e:	9313      	str	r3, [sp, #76]	; 0x4c
 8027f60:	b289      	uxth	r1, r1
 8027f62:	b280      	uxth	r0, r0
 8027f64:	fb01 f900 	mul.w	r9, r1, r0
 8027f68:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 8027f6c:	0109      	lsls	r1, r1, #4
 8027f6e:	eba1 0809 	sub.w	r8, r1, r9
 8027f72:	b280      	uxth	r0, r0
 8027f74:	f5c1 7180 	rsb	r1, r1, #256	; 0x100
 8027f78:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8027f7a:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8027f7c:	fa1f f888 	uxth.w	r8, r8
 8027f80:	1a09      	subs	r1, r1, r0
 8027f82:	b289      	uxth	r1, r1
 8027f84:	fb08 f303 	mul.w	r3, r8, r3
 8027f88:	fb01 330e 	mla	r3, r1, lr, r3
 8027f8c:	fb00 3305 	mla	r3, r0, r5, r3
 8027f90:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8027f92:	fb09 3305 	mla	r3, r9, r5, r3
 8027f96:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8027f9a:	2b00      	cmp	r3, #0
 8027f9c:	f000 80d2 	beq.w	8028144 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8027fa0:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 8027fa4:	d01b      	beq.n	8027fde <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18e>
 8027fa6:	f002 1aff 	and.w	sl, r2, #16711935	; 0xff00ff
 8027faa:	fb0e fa0a 	mul.w	sl, lr, sl
 8027fae:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8027fb2:	fb0e fe02 	mul.w	lr, lr, r2
 8027fb6:	ea4f 221a 	mov.w	r2, sl, lsr #8
 8027fba:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8027fbe:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8027fc2:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 8027fc6:	4452      	add	r2, sl
 8027fc8:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8027fcc:	0a12      	lsrs	r2, r2, #8
 8027fce:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8027fd2:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8027fd6:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8027fda:	ea42 020c 	orr.w	r2, r2, ip
 8027fde:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8027fe0:	2dff      	cmp	r5, #255	; 0xff
 8027fe2:	d021      	beq.n	8028028 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d8>
 8027fe4:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8027fe6:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 8027fea:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8027fec:	fb05 fb0b 	mul.w	fp, r5, fp
 8027ff0:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8027ff2:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8027ff6:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8027ff8:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8027ffc:	fb05 fa0a 	mul.w	sl, r5, sl
 8028000:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8028004:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8028008:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 802800c:	44de      	add	lr, fp
 802800e:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8028012:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8028016:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802801a:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 802801e:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8028022:	ea4e 050a 	orr.w	r5, lr, sl
 8028026:	950b      	str	r5, [sp, #44]	; 0x2c
 8028028:	9d10      	ldr	r5, [sp, #64]	; 0x40
 802802a:	2dff      	cmp	r5, #255	; 0xff
 802802c:	d021      	beq.n	8028072 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x222>
 802802e:	9d08      	ldr	r5, [sp, #32]
 8028030:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 8028034:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8028036:	fb05 fb0b 	mul.w	fp, r5, fp
 802803a:	9d08      	ldr	r5, [sp, #32]
 802803c:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 8028040:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8028042:	fb05 fa0e 	mul.w	sl, r5, lr
 8028046:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 802804a:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 802804e:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8028052:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8028056:	44de      	add	lr, fp
 8028058:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 802805c:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8028060:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8028064:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8028068:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 802806c:	ea4e 050a 	orr.w	r5, lr, sl
 8028070:	9508      	str	r5, [sp, #32]
 8028072:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8028074:	2dff      	cmp	r5, #255	; 0xff
 8028076:	d021      	beq.n	80280bc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26c>
 8028078:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 802807a:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 802807e:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8028080:	fb05 fb0b 	mul.w	fp, r5, fp
 8028084:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8028086:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 802808a:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 802808c:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8028090:	fb05 fa0a 	mul.w	sl, r5, sl
 8028094:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8028098:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 802809c:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 80280a0:	44de      	add	lr, fp
 80280a2:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 80280a6:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80280aa:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80280ae:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80280b2:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80280b6:	ea4e 050a 	orr.w	r5, lr, sl
 80280ba:	950c      	str	r5, [sp, #48]	; 0x30
 80280bc:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 80280be:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 80280c2:	9d08      	ldr	r5, [sp, #32]
 80280c4:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
 80280c8:	fb08 fc0c 	mul.w	ip, r8, ip
 80280cc:	fb01 cc0e 	mla	ip, r1, lr, ip
 80280d0:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 80280d4:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 80280d6:	fb00 cc0e 	mla	ip, r0, lr, ip
 80280da:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 80280de:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 80280e0:	fb09 cc0e 	mla	ip, r9, lr, ip
 80280e4:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 80280e8:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 80280ec:	fb08 f80e 	mul.w	r8, r8, lr
 80280f0:	fb01 8202 	mla	r2, r1, r2, r8
 80280f4:	9908      	ldr	r1, [sp, #32]
 80280f6:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 80280fa:	990c      	ldr	r1, [sp, #48]	; 0x30
 80280fc:	fb00 220a 	mla	r2, r0, sl, r2
 8028100:	f401 407f 	and.w	r0, r1, #65280	; 0xff00
 8028104:	fb09 2900 	mla	r9, r9, r0, r2
 8028108:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802810c:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8028110:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8028114:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 8028118:	ea4c 0c09 	orr.w	ip, ip, r9
 802811c:	2bff      	cmp	r3, #255	; 0xff
 802811e:	ea4f 221c 	mov.w	r2, ip, lsr #8
 8028122:	f040 8091 	bne.w	8028248 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 8028126:	ea4f 135c 	mov.w	r3, ip, lsr #5
 802812a:	f422 62ff 	bic.w	r2, r2, #2040	; 0x7f8
 802812e:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8028132:	f022 0207 	bic.w	r2, r2, #7
 8028136:	431a      	orrs	r2, r3
 8028138:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 802813c:	ea4c 0c02 	orr.w	ip, ip, r2
 8028140:	f8a7 c000 	strh.w	ip, [r7]
 8028144:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8028146:	441c      	add	r4, r3
 8028148:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 802814a:	441e      	add	r6, r3
 802814c:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 802814e:	3b01      	subs	r3, #1
 8028150:	3702      	adds	r7, #2
 8028152:	9317      	str	r3, [sp, #92]	; 0x5c
 8028154:	e6c0      	b.n	8027ed8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8028156:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8028158:	441c      	add	r4, r3
 802815a:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 802815c:	441e      	add	r6, r3
 802815e:	9b07      	ldr	r3, [sp, #28]
 8028160:	3b01      	subs	r3, #1
 8028162:	9307      	str	r3, [sp, #28]
 8028164:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8028166:	3302      	adds	r3, #2
 8028168:	930a      	str	r3, [sp, #40]	; 0x28
 802816a:	e695      	b.n	8027e98 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 802816c:	d024      	beq.n	80281b8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 802816e:	9b07      	ldr	r3, [sp, #28]
 8028170:	9827      	ldr	r0, [sp, #156]	; 0x9c
 8028172:	3b01      	subs	r3, #1
 8028174:	fb00 4003 	mla	r0, r0, r3, r4
 8028178:	1400      	asrs	r0, r0, #16
 802817a:	f53f aeaa 	bmi.w	8027ed2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 802817e:	3901      	subs	r1, #1
 8028180:	4288      	cmp	r0, r1
 8028182:	f6bf aea6 	bge.w	8027ed2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 8028186:	9928      	ldr	r1, [sp, #160]	; 0xa0
 8028188:	fb01 6303 	mla	r3, r1, r3, r6
 802818c:	141b      	asrs	r3, r3, #16
 802818e:	f53f aea0 	bmi.w	8027ed2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 8028192:	3a01      	subs	r2, #1
 8028194:	4293      	cmp	r3, r2
 8028196:	f6bf ae9c 	bge.w	8027ed2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 802819a:	f8dd b01c 	ldr.w	fp, [sp, #28]
 802819e:	f8dd 8028 	ldr.w	r8, [sp, #40]	; 0x28
 80281a2:	f1bb 0f00 	cmp.w	fp, #0
 80281a6:	f300 809a 	bgt.w	80282de <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 80281aa:	9b07      	ldr	r3, [sp, #28]
 80281ac:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 80281b0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80281b2:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 80281b6:	930a      	str	r3, [sp, #40]	; 0x28
 80281b8:	9b16      	ldr	r3, [sp, #88]	; 0x58
 80281ba:	2b00      	cmp	r3, #0
 80281bc:	f340 81eb 	ble.w	8028596 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 80281c0:	ee30 0a04 	vadd.f32	s0, s0, s8
 80281c4:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80281c8:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80281cc:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80281ce:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80281d2:	ee31 1a05 	vadd.f32	s2, s2, s10
 80281d6:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80281da:	eef0 6a62 	vmov.f32	s13, s5
 80281de:	ee61 7a27 	vmul.f32	s15, s2, s15
 80281e2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80281e6:	ee77 2a62 	vsub.f32	s5, s14, s5
 80281ea:	ee16 4a90 	vmov	r4, s13
 80281ee:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80281f2:	eef0 6a43 	vmov.f32	s13, s6
 80281f6:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80281fa:	ee12 2a90 	vmov	r2, s5
 80281fe:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8028202:	fb92 f3f3 	sdiv	r3, r2, r3
 8028206:	ee13 2a10 	vmov	r2, s6
 802820a:	9327      	str	r3, [sp, #156]	; 0x9c
 802820c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 802820e:	fb92 f3f3 	sdiv	r3, r2, r3
 8028212:	9328      	str	r3, [sp, #160]	; 0xa0
 8028214:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8028216:	9a18      	ldr	r2, [sp, #96]	; 0x60
 8028218:	3b01      	subs	r3, #1
 802821a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802821e:	9316      	str	r3, [sp, #88]	; 0x58
 8028220:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8028222:	bf08      	it	eq
 8028224:	4613      	moveq	r3, r2
 8028226:	ee16 6a90 	vmov	r6, s13
 802822a:	9307      	str	r3, [sp, #28]
 802822c:	eeb0 3a67 	vmov.f32	s6, s15
 8028230:	eef0 2a47 	vmov.f32	s5, s14
 8028234:	e622      	b.n	8027e7c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c>
 8028236:	2800      	cmp	r0, #0
 8028238:	f43f ae92 	beq.w	8027f60 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 802823c:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 8028240:	9308      	str	r3, [sp, #32]
 8028242:	0e1b      	lsrs	r3, r3, #24
 8028244:	9310      	str	r3, [sp, #64]	; 0x40
 8028246:	e68b      	b.n	8027f60 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 8028248:	8839      	ldrh	r1, [r7, #0]
 802824a:	4dd4      	ldr	r5, [pc, #848]	; (802859c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74c>)
 802824c:	43db      	mvns	r3, r3
 802824e:	ea4f 2e21 	mov.w	lr, r1, asr #8
 8028252:	fa5f f883 	uxtb.w	r8, r3
 8028256:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 802825a:	fb0e fe08 	mul.w	lr, lr, r8
 802825e:	10c8      	asrs	r0, r1, #3
 8028260:	00cb      	lsls	r3, r1, #3
 8028262:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8028266:	f10e 0101 	add.w	r1, lr, #1
 802826a:	eb01 2e1e 	add.w	lr, r1, lr, lsr #8
 802826e:	fb00 f008 	mul.w	r0, r0, r8
 8028272:	ea4f 411c 	mov.w	r1, ip, lsr #16
 8028276:	eb01 211e 	add.w	r1, r1, lr, lsr #8
 802827a:	f100 0e01 	add.w	lr, r0, #1
 802827e:	eb0e 2010 	add.w	r0, lr, r0, lsr #8
 8028282:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 8028286:	b2db      	uxtb	r3, r3
 8028288:	b2c9      	uxtb	r1, r1
 802828a:	00d2      	lsls	r2, r2, #3
 802828c:	fb03 f308 	mul.w	r3, r3, r8
 8028290:	ea05 2101 	and.w	r1, r5, r1, lsl #8
 8028294:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8028298:	430a      	orrs	r2, r1
 802829a:	1c59      	adds	r1, r3, #1
 802829c:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 80282a0:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 80282a4:	e748      	b.n	8028138 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e8>
 80282a6:	f112 0801 	adds.w	r8, r2, #1
 80282aa:	f53f af4b 	bmi.w	8028144 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 80282ae:	4543      	cmp	r3, r8
 80282b0:	f6ff af48 	blt.w	8028144 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 80282b4:	f11c 0801 	adds.w	r8, ip, #1
 80282b8:	f53f af44 	bmi.w	8028144 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 80282bc:	45c6      	cmp	lr, r8
 80282be:	f6ff af41 	blt.w	8028144 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 80282c2:	e9cd 2c01 	strd	r2, ip, [sp, #4]
 80282c6:	fa0f f28e 	sxth.w	r2, lr
 80282ca:	e9cd 1003 	strd	r1, r0, [sp, #12]
 80282ce:	9200      	str	r2, [sp, #0]
 80282d0:	b21b      	sxth	r3, r3
 80282d2:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80282d4:	9819      	ldr	r0, [sp, #100]	; 0x64
 80282d6:	4639      	mov	r1, r7
 80282d8:	f7ff fc87 	bl	8027bea <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>
 80282dc:	e732      	b.n	8028144 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 80282de:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80282e0:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 80282e2:	f9b3 7008 	ldrsh.w	r7, [r3, #8]
 80282e6:	1421      	asrs	r1, r4, #16
 80282e8:	1433      	asrs	r3, r6, #16
 80282ea:	fb07 1303 	mla	r3, r7, r3, r1
 80282ee:	990f      	ldr	r1, [sp, #60]	; 0x3c
 80282f0:	eb01 0183 	add.w	r1, r1, r3, lsl #2
 80282f4:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 80282f8:	f3c4 3203 	ubfx	r2, r4, #12, #4
 80282fc:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8028300:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 8028304:	2a00      	cmp	r2, #0
 8028306:	f000 8107 	beq.w	8028518 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c8>
 802830a:	684d      	ldr	r5, [r1, #4]
 802830c:	950d      	str	r5, [sp, #52]	; 0x34
 802830e:	0e2d      	lsrs	r5, r5, #24
 8028310:	9514      	str	r5, [sp, #80]	; 0x50
 8028312:	b178      	cbz	r0, 8028334 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 8028314:	f107 4780 	add.w	r7, r7, #1073741824	; 0x40000000
 8028318:	3f01      	subs	r7, #1
 802831a:	00bf      	lsls	r7, r7, #2
 802831c:	3704      	adds	r7, #4
 802831e:	eb01 0e07 	add.w	lr, r1, r7
 8028322:	59c9      	ldr	r1, [r1, r7]
 8028324:	9109      	str	r1, [sp, #36]	; 0x24
 8028326:	0e09      	lsrs	r1, r1, #24
 8028328:	9111      	str	r1, [sp, #68]	; 0x44
 802832a:	f8de 1004 	ldr.w	r1, [lr, #4]
 802832e:	910e      	str	r1, [sp, #56]	; 0x38
 8028330:	0e09      	lsrs	r1, r1, #24
 8028332:	9115      	str	r1, [sp, #84]	; 0x54
 8028334:	b292      	uxth	r2, r2
 8028336:	b280      	uxth	r0, r0
 8028338:	fb02 f900 	mul.w	r9, r2, r0
 802833c:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 8028340:	0112      	lsls	r2, r2, #4
 8028342:	eba2 0e09 	sub.w	lr, r2, r9
 8028346:	b280      	uxth	r0, r0
 8028348:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
 802834c:	9a14      	ldr	r2, [sp, #80]	; 0x50
 802834e:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8028350:	fa1f fe8e 	uxth.w	lr, lr
 8028354:	1a09      	subs	r1, r1, r0
 8028356:	b289      	uxth	r1, r1
 8028358:	fb0e f202 	mul.w	r2, lr, r2
 802835c:	fb01 220c 	mla	r2, r1, ip, r2
 8028360:	fb00 2205 	mla	r2, r0, r5, r2
 8028364:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8028366:	fb09 2205 	mla	r2, r9, r5, r2
 802836a:	f3c2 2207 	ubfx	r2, r2, #8, #8
 802836e:	2a00      	cmp	r2, #0
 8028370:	f000 80c9 	beq.w	8028506 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b6>
 8028374:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8028378:	d019      	beq.n	80283ae <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55e>
 802837a:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 802837e:	fb0c fa0a 	mul.w	sl, ip, sl
 8028382:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8028386:	fb0c fc03 	mul.w	ip, ip, r3
 802838a:	ea4f 231a 	mov.w	r3, sl, lsr #8
 802838e:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8028392:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8028396:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 802839a:	4453      	add	r3, sl
 802839c:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 80283a0:	0a1b      	lsrs	r3, r3, #8
 80283a2:	0a3f      	lsrs	r7, r7, #8
 80283a4:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80283a8:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 80283ac:	433b      	orrs	r3, r7
 80283ae:	9d14      	ldr	r5, [sp, #80]	; 0x50
 80283b0:	2dff      	cmp	r5, #255	; 0xff
 80283b2:	d020      	beq.n	80283f6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a6>
 80283b4:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 80283b6:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 80283ba:	9d14      	ldr	r5, [sp, #80]	; 0x50
 80283bc:	436f      	muls	r7, r5
 80283be:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 80283c0:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 80283c4:	9d14      	ldr	r5, [sp, #80]	; 0x50
 80283c6:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80283ca:	fb05 fa0a 	mul.w	sl, r5, sl
 80283ce:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 80283d2:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80283d6:	44bc      	add	ip, r7
 80283d8:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 80283dc:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80283e0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80283e4:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80283e8:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80283ec:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80283f0:	ea4c 050a 	orr.w	r5, ip, sl
 80283f4:	950d      	str	r5, [sp, #52]	; 0x34
 80283f6:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80283f8:	2dff      	cmp	r5, #255	; 0xff
 80283fa:	d020      	beq.n	802843e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ee>
 80283fc:	9d09      	ldr	r5, [sp, #36]	; 0x24
 80283fe:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8028402:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8028404:	436f      	muls	r7, r5
 8028406:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8028408:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 802840c:	9d11      	ldr	r5, [sp, #68]	; 0x44
 802840e:	fb05 fa0c 	mul.w	sl, r5, ip
 8028412:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8028416:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802841a:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 802841e:	44bc      	add	ip, r7
 8028420:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8028424:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8028428:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802842c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8028430:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8028434:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8028438:	ea4c 050a 	orr.w	r5, ip, sl
 802843c:	9509      	str	r5, [sp, #36]	; 0x24
 802843e:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8028440:	2dff      	cmp	r5, #255	; 0xff
 8028442:	d020      	beq.n	8028486 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x636>
 8028444:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8028446:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 802844a:	9d15      	ldr	r5, [sp, #84]	; 0x54
 802844c:	436f      	muls	r7, r5
 802844e:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8028450:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8028454:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8028456:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 802845a:	fb05 fa0a 	mul.w	sl, r5, sl
 802845e:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8028462:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8028466:	44bc      	add	ip, r7
 8028468:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 802846c:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8028470:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8028474:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8028478:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802847c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8028480:	ea4c 050a 	orr.w	r5, ip, sl
 8028484:	950e      	str	r5, [sp, #56]	; 0x38
 8028486:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8028488:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 802848c:	9d09      	ldr	r5, [sp, #36]	; 0x24
 802848e:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 8028492:	fb0e f707 	mul.w	r7, lr, r7
 8028496:	fb01 770c 	mla	r7, r1, ip, r7
 802849a:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 802849e:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 80284a0:	fb00 770c 	mla	r7, r0, ip, r7
 80284a4:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 80284a8:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 80284aa:	fb09 770c 	mla	r7, r9, ip, r7
 80284ae:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 80284b2:	fb0e fe0c 	mul.w	lr, lr, ip
 80284b6:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80284ba:	fb01 e303 	mla	r3, r1, r3, lr
 80284be:	9909      	ldr	r1, [sp, #36]	; 0x24
 80284c0:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 80284c4:	990e      	ldr	r1, [sp, #56]	; 0x38
 80284c6:	fb00 330a 	mla	r3, r0, sl, r3
 80284ca:	f401 4c7f 	and.w	ip, r1, #65280	; 0xff00
 80284ce:	fb09 3c0c 	mla	ip, r9, ip, r3
 80284d2:	0a3f      	lsrs	r7, r7, #8
 80284d4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80284d8:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 80284dc:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 80284e0:	ea47 070c 	orr.w	r7, r7, ip
 80284e4:	2aff      	cmp	r2, #255	; 0xff
 80284e6:	ea4f 2317 	mov.w	r3, r7, lsr #8
 80284ea:	d11e      	bne.n	802852a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6da>
 80284ec:	097a      	lsrs	r2, r7, #5
 80284ee:	f423 63ff 	bic.w	r3, r3, #2040	; 0x7f8
 80284f2:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80284f6:	f023 0307 	bic.w	r3, r3, #7
 80284fa:	4313      	orrs	r3, r2
 80284fc:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 8028500:	431f      	orrs	r7, r3
 8028502:	f8a8 7000 	strh.w	r7, [r8]
 8028506:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8028508:	441c      	add	r4, r3
 802850a:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 802850c:	f108 0802 	add.w	r8, r8, #2
 8028510:	441e      	add	r6, r3
 8028512:	f10b 3bff 	add.w	fp, fp, #4294967295
 8028516:	e644      	b.n	80281a2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x352>
 8028518:	2800      	cmp	r0, #0
 802851a:	f43f af0b 	beq.w	8028334 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 802851e:	f851 1027 	ldr.w	r1, [r1, r7, lsl #2]
 8028522:	9109      	str	r1, [sp, #36]	; 0x24
 8028524:	0e09      	lsrs	r1, r1, #24
 8028526:	9111      	str	r1, [sp, #68]	; 0x44
 8028528:	e704      	b.n	8028334 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 802852a:	f8b8 1000 	ldrh.w	r1, [r8]
 802852e:	43d2      	mvns	r2, r2
 8028530:	ea4f 2c21 	mov.w	ip, r1, asr #8
 8028534:	fa5f fe82 	uxtb.w	lr, r2
 8028538:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 802853c:	fb0c fc0e 	mul.w	ip, ip, lr
 8028540:	10c8      	asrs	r0, r1, #3
 8028542:	00ca      	lsls	r2, r1, #3
 8028544:	f10c 0101 	add.w	r1, ip, #1
 8028548:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 802854c:	0c39      	lsrs	r1, r7, #16
 802854e:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 8028552:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8028556:	4911      	ldr	r1, [pc, #68]	; (802859c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74c>)
 8028558:	fb00 f00e 	mul.w	r0, r0, lr
 802855c:	fa5f fc8c 	uxtb.w	ip, ip
 8028560:	ea01 2c0c 	and.w	ip, r1, ip, lsl #8
 8028564:	b2d2      	uxtb	r2, r2
 8028566:	1c41      	adds	r1, r0, #1
 8028568:	fb02 f20e 	mul.w	r2, r2, lr
 802856c:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 8028570:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8028574:	1c51      	adds	r1, r2, #1
 8028576:	00c0      	lsls	r0, r0, #3
 8028578:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 802857c:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8028580:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 8028584:	ea4c 0c00 	orr.w	ip, ip, r0
 8028588:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 802858c:	ea47 0c0c 	orr.w	ip, r7, ip
 8028590:	f8a8 c000 	strh.w	ip, [r8]
 8028594:	e7b7      	b.n	8028506 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b6>
 8028596:	b01b      	add	sp, #108	; 0x6c
 8028598:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802859c:	fffff800 	.word	0xfffff800

080285a0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>:
 80285a0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80285a4:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	; 0x28
 80285a8:	2d00      	cmp	r5, #0
 80285aa:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 80285ae:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 80285b2:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
 80285b6:	f89d c034 	ldrb.w	ip, [sp, #52]	; 0x34
 80285ba:	fb05 0e03 	mla	lr, r5, r3, r0
 80285be:	f2c0 808c 	blt.w	80286da <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
 80285c2:	45a9      	cmp	r9, r5
 80285c4:	f340 8089 	ble.w	80286da <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
 80285c8:	2800      	cmp	r0, #0
 80285ca:	f2c0 8084 	blt.w	80286d6 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
 80285ce:	4580      	cmp	r8, r0
 80285d0:	f340 8081 	ble.w	80286d6 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
 80285d4:	ea4f 045e 	mov.w	r4, lr, lsr #1
 80285d8:	f01e 0f01 	tst.w	lr, #1
 80285dc:	5d16      	ldrb	r6, [r2, r4]
 80285de:	bf0c      	ite	eq
 80285e0:	f006 060f 	andeq.w	r6, r6, #15
 80285e4:	1136      	asrne	r6, r6, #4
 80285e6:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 80285ea:	b2f6      	uxtb	r6, r6
 80285ec:	1c44      	adds	r4, r0, #1
 80285ee:	d477      	bmi.n	80286e0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
 80285f0:	45a0      	cmp	r8, r4
 80285f2:	dd75      	ble.n	80286e0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
 80285f4:	2f00      	cmp	r7, #0
 80285f6:	d075      	beq.n	80286e4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x144>
 80285f8:	f10e 0a01 	add.w	sl, lr, #1
 80285fc:	ea4f 045a 	mov.w	r4, sl, lsr #1
 8028600:	f01a 0f01 	tst.w	sl, #1
 8028604:	5d14      	ldrb	r4, [r2, r4]
 8028606:	bf0c      	ite	eq
 8028608:	f004 040f 	andeq.w	r4, r4, #15
 802860c:	1124      	asrne	r4, r4, #4
 802860e:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 8028612:	b2e4      	uxtb	r4, r4
 8028614:	3501      	adds	r5, #1
 8028616:	d469      	bmi.n	80286ec <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
 8028618:	45a9      	cmp	r9, r5
 802861a:	dd67      	ble.n	80286ec <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
 802861c:	f1bc 0f00 	cmp.w	ip, #0
 8028620:	d067      	beq.n	80286f2 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x152>
 8028622:	2800      	cmp	r0, #0
 8028624:	db60      	blt.n	80286e8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
 8028626:	4580      	cmp	r8, r0
 8028628:	dd5e      	ble.n	80286e8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
 802862a:	eb03 090e 	add.w	r9, r3, lr
 802862e:	ea4f 0559 	mov.w	r5, r9, lsr #1
 8028632:	f019 0f01 	tst.w	r9, #1
 8028636:	5d55      	ldrb	r5, [r2, r5]
 8028638:	bf0c      	ite	eq
 802863a:	f005 050f 	andeq.w	r5, r5, #15
 802863e:	112d      	asrne	r5, r5, #4
 8028640:	eb05 1505 	add.w	r5, r5, r5, lsl #4
 8028644:	b2ed      	uxtb	r5, r5
 8028646:	3001      	adds	r0, #1
 8028648:	d456      	bmi.n	80286f8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
 802864a:	4580      	cmp	r8, r0
 802864c:	dd54      	ble.n	80286f8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
 802864e:	2f00      	cmp	r7, #0
 8028650:	d054      	beq.n	80286fc <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x15c>
 8028652:	3301      	adds	r3, #1
 8028654:	449e      	add	lr, r3
 8028656:	ea4f 035e 	mov.w	r3, lr, lsr #1
 802865a:	f01e 0f01 	tst.w	lr, #1
 802865e:	5cd0      	ldrb	r0, [r2, r3]
 8028660:	bf0c      	ite	eq
 8028662:	f000 000f 	andeq.w	r0, r0, #15
 8028666:	1100      	asrne	r0, r0, #4
 8028668:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 802866c:	b2c3      	uxtb	r3, r0
 802866e:	b2ba      	uxth	r2, r7
 8028670:	fa1f fc8c 	uxth.w	ip, ip
 8028674:	fb02 f00c 	mul.w	r0, r2, ip
 8028678:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
 802867c:	0112      	lsls	r2, r2, #4
 802867e:	fa1f fc8c 	uxth.w	ip, ip
 8028682:	f5c2 7780 	rsb	r7, r2, #256	; 0x100
 8028686:	1a12      	subs	r2, r2, r0
 8028688:	eba7 070c 	sub.w	r7, r7, ip
 802868c:	b292      	uxth	r2, r2
 802868e:	b2bf      	uxth	r7, r7
 8028690:	4362      	muls	r2, r4
 8028692:	fb06 2207 	mla	r2, r6, r7, r2
 8028696:	fb0c 2505 	mla	r5, ip, r5, r2
 802869a:	fb00 5303 	mla	r3, r0, r3, r5
 802869e:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80286a2:	b1b3      	cbz	r3, 80286d2 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
 80286a4:	f89d 2038 	ldrb.w	r2, [sp, #56]	; 0x38
 80286a8:	435a      	muls	r2, r3
 80286aa:	1c53      	adds	r3, r2, #1
 80286ac:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 80286b0:	4a2d      	ldr	r2, [pc, #180]	; (8028768 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1c8>)
 80286b2:	121b      	asrs	r3, r3, #8
 80286b4:	6812      	ldr	r2, [r2, #0]
 80286b6:	2bff      	cmp	r3, #255	; 0xff
 80286b8:	ea4f 2612 	mov.w	r6, r2, lsr #8
 80286bc:	d120      	bne.n	8028700 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x160>
 80286be:	4b2b      	ldr	r3, [pc, #172]	; (802876c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1cc>)
 80286c0:	0950      	lsrs	r0, r2, #5
 80286c2:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80286c6:	4033      	ands	r3, r6
 80286c8:	4318      	orrs	r0, r3
 80286ca:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 80286ce:	4302      	orrs	r2, r0
 80286d0:	800a      	strh	r2, [r1, #0]
 80286d2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80286d6:	2600      	movs	r6, #0
 80286d8:	e788      	b.n	80285ec <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x4c>
 80286da:	2400      	movs	r4, #0
 80286dc:	4626      	mov	r6, r4
 80286de:	e799      	b.n	8028614 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 80286e0:	2400      	movs	r4, #0
 80286e2:	e797      	b.n	8028614 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 80286e4:	463c      	mov	r4, r7
 80286e6:	e795      	b.n	8028614 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 80286e8:	2500      	movs	r5, #0
 80286ea:	e7ac      	b.n	8028646 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xa6>
 80286ec:	2300      	movs	r3, #0
 80286ee:	461d      	mov	r5, r3
 80286f0:	e7bd      	b.n	802866e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 80286f2:	4663      	mov	r3, ip
 80286f4:	4665      	mov	r5, ip
 80286f6:	e7ba      	b.n	802866e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 80286f8:	2300      	movs	r3, #0
 80286fa:	e7b8      	b.n	802866e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 80286fc:	463b      	mov	r3, r7
 80286fe:	e7b6      	b.n	802866e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 8028700:	880d      	ldrh	r5, [r1, #0]
 8028702:	b29f      	uxth	r7, r3
 8028704:	122c      	asrs	r4, r5, #8
 8028706:	f3c2 4007 	ubfx	r0, r2, #16, #8
 802870a:	43db      	mvns	r3, r3
 802870c:	b2db      	uxtb	r3, r3
 802870e:	fb10 f007 	smulbb	r0, r0, r7
 8028712:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 8028716:	fb04 0403 	mla	r4, r4, r3, r0
 802871a:	b2f6      	uxtb	r6, r6
 802871c:	10e8      	asrs	r0, r5, #3
 802871e:	b2d2      	uxtb	r2, r2
 8028720:	00ed      	lsls	r5, r5, #3
 8028722:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8028726:	fb12 f207 	smulbb	r2, r2, r7
 802872a:	fb16 f607 	smulbb	r6, r6, r7
 802872e:	b2ed      	uxtb	r5, r5
 8028730:	b2a4      	uxth	r4, r4
 8028732:	fb00 6603 	mla	r6, r0, r3, r6
 8028736:	fb05 2303 	mla	r3, r5, r3, r2
 802873a:	b29a      	uxth	r2, r3
 802873c:	1c63      	adds	r3, r4, #1
 802873e:	b2b0      	uxth	r0, r6
 8028740:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 8028744:	1c53      	adds	r3, r2, #1
 8028746:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 802874a:	1c42      	adds	r2, r0, #1
 802874c:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8028750:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 8028754:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8028758:	0940      	lsrs	r0, r0, #5
 802875a:	4323      	orrs	r3, r4
 802875c:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8028760:	4303      	orrs	r3, r0
 8028762:	800b      	strh	r3, [r1, #0]
 8028764:	e7b5      	b.n	80286d2 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
 8028766:	bf00      	nop
 8028768:	20006c44 	.word	0x20006c44
 802876c:	00fff800 	.word	0x00fff800

08028770 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8028770:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8028774:	b097      	sub	sp, #92	; 0x5c
 8028776:	e9dd 4621 	ldrd	r4, r6, [sp, #132]	; 0x84
 802877a:	9214      	str	r2, [sp, #80]	; 0x50
 802877c:	9309      	str	r3, [sp, #36]	; 0x24
 802877e:	9a25      	ldr	r2, [sp, #148]	; 0x94
 8028780:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
 8028784:	910d      	str	r1, [sp, #52]	; 0x34
 8028786:	930f      	str	r3, [sp, #60]	; 0x3c
 8028788:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	; 0x98
 802878c:	9015      	str	r0, [sp, #84]	; 0x54
 802878e:	6850      	ldr	r0, [r2, #4]
 8028790:	6812      	ldr	r2, [r2, #0]
 8028792:	fb00 1303 	mla	r3, r0, r3, r1
 8028796:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 802879a:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 802879c:	689b      	ldr	r3, [r3, #8]
 802879e:	3301      	adds	r3, #1
 80287a0:	f023 0301 	bic.w	r3, r3, #1
 80287a4:	930a      	str	r3, [sp, #40]	; 0x28
 80287a6:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80287a8:	681f      	ldr	r7, [r3, #0]
 80287aa:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80287ac:	2b00      	cmp	r3, #0
 80287ae:	dc03      	bgt.n	80287b8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 80287b0:	9b14      	ldr	r3, [sp, #80]	; 0x50
 80287b2:	2b00      	cmp	r3, #0
 80287b4:	f340 8287 	ble.w	8028cc6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x556>
 80287b8:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80287ba:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80287be:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80287c2:	1e48      	subs	r0, r1, #1
 80287c4:	f102 3cff 	add.w	ip, r2, #4294967295
 80287c8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80287ca:	2b00      	cmp	r3, #0
 80287cc:	f340 80c4 	ble.w	8028958 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 80287d0:	ea5f 4e24 	movs.w	lr, r4, asr #16
 80287d4:	ea4f 4326 	mov.w	r3, r6, asr #16
 80287d8:	d406      	bmi.n	80287e8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 80287da:	4586      	cmp	lr, r0
 80287dc:	da04      	bge.n	80287e8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 80287de:	2b00      	cmp	r3, #0
 80287e0:	db02      	blt.n	80287e8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 80287e2:	4563      	cmp	r3, ip
 80287e4:	f2c0 80b9 	blt.w	802895a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ea>
 80287e8:	f11e 0e01 	adds.w	lr, lr, #1
 80287ec:	f100 80aa 	bmi.w	8028944 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 80287f0:	4571      	cmp	r1, lr
 80287f2:	f2c0 80a7 	blt.w	8028944 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 80287f6:	3301      	adds	r3, #1
 80287f8:	f100 80a4 	bmi.w	8028944 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 80287fc:	429a      	cmp	r2, r3
 80287fe:	f2c0 80a1 	blt.w	8028944 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8028802:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8028804:	f9bd a028 	ldrsh.w	sl, [sp, #40]	; 0x28
 8028808:	930e      	str	r3, [sp, #56]	; 0x38
 802880a:	46c8      	mov	r8, r9
 802880c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 802880e:	2b00      	cmp	r3, #0
 8028810:	f340 80c3 	ble.w	802899a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 8028814:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8028816:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 802881a:	1423      	asrs	r3, r4, #16
 802881c:	ea4f 4026 	mov.w	r0, r6, asr #16
 8028820:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8028824:	f3c6 3103 	ubfx	r1, r6, #12, #4
 8028828:	f100 814d 	bmi.w	8028ac6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 802882c:	f10c 3bff 	add.w	fp, ip, #4294967295
 8028830:	455b      	cmp	r3, fp
 8028832:	f280 8148 	bge.w	8028ac6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 8028836:	2800      	cmp	r0, #0
 8028838:	f2c0 8145 	blt.w	8028ac6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 802883c:	f10e 3bff 	add.w	fp, lr, #4294967295
 8028840:	4558      	cmp	r0, fp
 8028842:	f280 8140 	bge.w	8028ac6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 8028846:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 8028848:	fb00 3305 	mla	r3, r0, r5, r3
 802884c:	0858      	lsrs	r0, r3, #1
 802884e:	07dd      	lsls	r5, r3, #31
 8028850:	f817 c000 	ldrb.w	ip, [r7, r0]
 8028854:	bf54      	ite	pl
 8028856:	f00c 0c0f 	andpl.w	ip, ip, #15
 802885a:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 802885e:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8028862:	fa5f fc8c 	uxtb.w	ip, ip
 8028866:	2a00      	cmp	r2, #0
 8028868:	f000 80db 	beq.w	8028a22 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b2>
 802886c:	1c58      	adds	r0, r3, #1
 802886e:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 8028872:	07c0      	lsls	r0, r0, #31
 8028874:	f817 e00e 	ldrb.w	lr, [r7, lr]
 8028878:	bf54      	ite	pl
 802887a:	f00e 0e0f 	andpl.w	lr, lr, #15
 802887e:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 8028882:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 8028886:	fa5f f08e 	uxtb.w	r0, lr
 802888a:	9010      	str	r0, [sp, #64]	; 0x40
 802888c:	b1c9      	cbz	r1, 80288c2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 802888e:	4453      	add	r3, sl
 8028890:	0858      	lsrs	r0, r3, #1
 8028892:	07dd      	lsls	r5, r3, #31
 8028894:	5c38      	ldrb	r0, [r7, r0]
 8028896:	bf54      	ite	pl
 8028898:	f000 000f 	andpl.w	r0, r0, #15
 802889c:	1100      	asrmi	r0, r0, #4
 802889e:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 80288a2:	3301      	adds	r3, #1
 80288a4:	b2c0      	uxtb	r0, r0
 80288a6:	900b      	str	r0, [sp, #44]	; 0x2c
 80288a8:	0858      	lsrs	r0, r3, #1
 80288aa:	07dd      	lsls	r5, r3, #31
 80288ac:	f817 e000 	ldrb.w	lr, [r7, r0]
 80288b0:	bf54      	ite	pl
 80288b2:	f00e 030f 	andpl.w	r3, lr, #15
 80288b6:	ea4f 132e 	movmi.w	r3, lr, asr #4
 80288ba:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 80288be:	b2db      	uxtb	r3, r3
 80288c0:	9311      	str	r3, [sp, #68]	; 0x44
 80288c2:	b292      	uxth	r2, r2
 80288c4:	b289      	uxth	r1, r1
 80288c6:	fb02 f301 	mul.w	r3, r2, r1
 80288ca:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 80288ce:	0112      	lsls	r2, r2, #4
 80288d0:	b289      	uxth	r1, r1
 80288d2:	f5c2 7080 	rsb	r0, r2, #256	; 0x100
 80288d6:	9d10      	ldr	r5, [sp, #64]	; 0x40
 80288d8:	1ad2      	subs	r2, r2, r3
 80288da:	1a40      	subs	r0, r0, r1
 80288dc:	b292      	uxth	r2, r2
 80288de:	436a      	muls	r2, r5
 80288e0:	b280      	uxth	r0, r0
 80288e2:	fb0c 2c00 	mla	ip, ip, r0, r2
 80288e6:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80288e8:	fb01 c102 	mla	r1, r1, r2, ip
 80288ec:	9a11      	ldr	r2, [sp, #68]	; 0x44
 80288ee:	fb03 1302 	mla	r3, r3, r2, r1
 80288f2:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80288f6:	b1db      	cbz	r3, 8028930 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 80288f8:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80288fa:	4353      	muls	r3, r2
 80288fc:	1c5a      	adds	r2, r3, #1
 80288fe:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 8028902:	4ac6      	ldr	r2, [pc, #792]	; (8028c1c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>)
 8028904:	121b      	asrs	r3, r3, #8
 8028906:	6812      	ldr	r2, [r2, #0]
 8028908:	2bff      	cmp	r3, #255	; 0xff
 802890a:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 802890e:	f040 8099 	bne.w	8028a44 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d4>
 8028912:	0953      	lsrs	r3, r2, #5
 8028914:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 8028918:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 802891c:	f02c 0c07 	bic.w	ip, ip, #7
 8028920:	ea43 0c0c 	orr.w	ip, r3, ip
 8028924:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8028928:	ea4c 0202 	orr.w	r2, ip, r2
 802892c:	f8a8 2000 	strh.w	r2, [r8]
 8028930:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8028932:	441c      	add	r4, r3
 8028934:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8028936:	441e      	add	r6, r3
 8028938:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 802893a:	3b01      	subs	r3, #1
 802893c:	f108 0802 	add.w	r8, r8, #2
 8028940:	930e      	str	r3, [sp, #56]	; 0x38
 8028942:	e763      	b.n	802880c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8028944:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8028946:	441c      	add	r4, r3
 8028948:	9b24      	ldr	r3, [sp, #144]	; 0x90
 802894a:	441e      	add	r6, r3
 802894c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802894e:	3b01      	subs	r3, #1
 8028950:	9309      	str	r3, [sp, #36]	; 0x24
 8028952:	f109 0902 	add.w	r9, r9, #2
 8028956:	e737      	b.n	80287c8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 8028958:	d024      	beq.n	80289a4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 802895a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802895c:	9823      	ldr	r0, [sp, #140]	; 0x8c
 802895e:	3b01      	subs	r3, #1
 8028960:	fb00 4003 	mla	r0, r0, r3, r4
 8028964:	1400      	asrs	r0, r0, #16
 8028966:	f53f af4c 	bmi.w	8028802 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 802896a:	3901      	subs	r1, #1
 802896c:	4288      	cmp	r0, r1
 802896e:	f6bf af48 	bge.w	8028802 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8028972:	9924      	ldr	r1, [sp, #144]	; 0x90
 8028974:	fb01 6303 	mla	r3, r1, r3, r6
 8028978:	141b      	asrs	r3, r3, #16
 802897a:	f53f af42 	bmi.w	8028802 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 802897e:	3a01      	subs	r2, #1
 8028980:	4293      	cmp	r3, r2
 8028982:	f6bf af3e 	bge.w	8028802 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8028986:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 802898a:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 802898e:	930e      	str	r3, [sp, #56]	; 0x38
 8028990:	46c8      	mov	r8, r9
 8028992:	f1bb 0f00 	cmp.w	fp, #0
 8028996:	f300 80b7 	bgt.w	8028b08 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>
 802899a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802899c:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 80289a0:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 80289a4:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80289a6:	2b00      	cmp	r3, #0
 80289a8:	f340 818d 	ble.w	8028cc6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x556>
 80289ac:	ee30 0a04 	vadd.f32	s0, s0, s8
 80289b0:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80289b4:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80289b8:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80289ba:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80289be:	ee31 1a05 	vadd.f32	s2, s2, s10
 80289c2:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80289c6:	eef0 6a62 	vmov.f32	s13, s5
 80289ca:	ee61 7a27 	vmul.f32	s15, s2, s15
 80289ce:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80289d2:	ee77 2a62 	vsub.f32	s5, s14, s5
 80289d6:	ee16 4a90 	vmov	r4, s13
 80289da:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80289de:	eef0 6a43 	vmov.f32	s13, s6
 80289e2:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80289e6:	ee12 2a90 	vmov	r2, s5
 80289ea:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80289ee:	fb92 f3f3 	sdiv	r3, r2, r3
 80289f2:	ee13 2a10 	vmov	r2, s6
 80289f6:	9323      	str	r3, [sp, #140]	; 0x8c
 80289f8:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80289fa:	fb92 f3f3 	sdiv	r3, r2, r3
 80289fe:	9324      	str	r3, [sp, #144]	; 0x90
 8028a00:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8028a02:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8028a04:	3b01      	subs	r3, #1
 8028a06:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8028a0a:	930d      	str	r3, [sp, #52]	; 0x34
 8028a0c:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8028a0e:	bf08      	it	eq
 8028a10:	4613      	moveq	r3, r2
 8028a12:	ee16 6a90 	vmov	r6, s13
 8028a16:	9309      	str	r3, [sp, #36]	; 0x24
 8028a18:	eeb0 3a67 	vmov.f32	s6, s15
 8028a1c:	eef0 2a47 	vmov.f32	s5, s14
 8028a20:	e6c3      	b.n	80287aa <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8028a22:	2900      	cmp	r1, #0
 8028a24:	f43f af4d 	beq.w	80288c2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8028a28:	eb0a 0003 	add.w	r0, sl, r3
 8028a2c:	0843      	lsrs	r3, r0, #1
 8028a2e:	07c0      	lsls	r0, r0, #31
 8028a30:	5cfb      	ldrb	r3, [r7, r3]
 8028a32:	bf54      	ite	pl
 8028a34:	f003 030f 	andpl.w	r3, r3, #15
 8028a38:	111b      	asrmi	r3, r3, #4
 8028a3a:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 8028a3e:	b2db      	uxtb	r3, r3
 8028a40:	930b      	str	r3, [sp, #44]	; 0x2c
 8028a42:	e73e      	b.n	80288c2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8028a44:	f8b8 e000 	ldrh.w	lr, [r8]
 8028a48:	fa1f fb83 	uxth.w	fp, r3
 8028a4c:	ea4f 202e 	mov.w	r0, lr, asr #8
 8028a50:	f3c2 4107 	ubfx	r1, r2, #16, #8
 8028a54:	43db      	mvns	r3, r3
 8028a56:	b2db      	uxtb	r3, r3
 8028a58:	fb11 f10b 	smulbb	r1, r1, fp
 8028a5c:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8028a60:	fb00 1003 	mla	r0, r0, r3, r1
 8028a64:	fa5f fc8c 	uxtb.w	ip, ip
 8028a68:	ea4f 01ee 	mov.w	r1, lr, asr #3
 8028a6c:	b2d2      	uxtb	r2, r2
 8028a6e:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8028a72:	b280      	uxth	r0, r0
 8028a74:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8028a78:	fb1c fc0b 	smulbb	ip, ip, fp
 8028a7c:	fa5f fe8e 	uxtb.w	lr, lr
 8028a80:	fb12 fb0b 	smulbb	fp, r2, fp
 8028a84:	fb01 cc03 	mla	ip, r1, r3, ip
 8028a88:	fb0e bb03 	mla	fp, lr, r3, fp
 8028a8c:	1c43      	adds	r3, r0, #1
 8028a8e:	fa1f fc8c 	uxth.w	ip, ip
 8028a92:	fa1f fb8b 	uxth.w	fp, fp
 8028a96:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8028a9a:	f400 4378 	and.w	r3, r0, #63488	; 0xf800
 8028a9e:	f10c 0101 	add.w	r1, ip, #1
 8028aa2:	f10b 0001 	add.w	r0, fp, #1
 8028aa6:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 8028aaa:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 8028aae:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 8028ab2:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8028ab6:	4318      	orrs	r0, r3
 8028ab8:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8028abc:	ea40 000c 	orr.w	r0, r0, ip
 8028ac0:	f8a8 0000 	strh.w	r0, [r8]
 8028ac4:	e734      	b.n	8028930 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8028ac6:	f113 0b01 	adds.w	fp, r3, #1
 8028aca:	f53f af31 	bmi.w	8028930 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8028ace:	45dc      	cmp	ip, fp
 8028ad0:	f6ff af2e 	blt.w	8028930 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8028ad4:	f110 0b01 	adds.w	fp, r0, #1
 8028ad8:	f53f af2a 	bmi.w	8028930 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8028adc:	45de      	cmp	lr, fp
 8028ade:	f6ff af27 	blt.w	8028930 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8028ae2:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8028ae4:	9302      	str	r3, [sp, #8]
 8028ae6:	fa0f f38e 	sxth.w	r3, lr
 8028aea:	9301      	str	r3, [sp, #4]
 8028aec:	fa0f f38c 	sxth.w	r3, ip
 8028af0:	e9cd 0203 	strd	r0, r2, [sp, #12]
 8028af4:	e9cd 1505 	strd	r1, r5, [sp, #20]
 8028af8:	9300      	str	r3, [sp, #0]
 8028afa:	463a      	mov	r2, r7
 8028afc:	4653      	mov	r3, sl
 8028afe:	4641      	mov	r1, r8
 8028b00:	9815      	ldr	r0, [sp, #84]	; 0x54
 8028b02:	f7ff fd4d 	bl	80285a0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>
 8028b06:	e713      	b.n	8028930 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8028b08:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 8028b0a:	1422      	asrs	r2, r4, #16
 8028b0c:	1433      	asrs	r3, r6, #16
 8028b0e:	fb05 2303 	mla	r3, r5, r3, r2
 8028b12:	085a      	lsrs	r2, r3, #1
 8028b14:	07dd      	lsls	r5, r3, #31
 8028b16:	5cba      	ldrb	r2, [r7, r2]
 8028b18:	bf54      	ite	pl
 8028b1a:	f002 020f 	andpl.w	r2, r2, #15
 8028b1e:	1112      	asrmi	r2, r2, #4
 8028b20:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8028b24:	f3c4 3103 	ubfx	r1, r4, #12, #4
 8028b28:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8028b2c:	b2d2      	uxtb	r2, r2
 8028b2e:	2900      	cmp	r1, #0
 8028b30:	d076      	beq.n	8028c20 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 8028b32:	f103 0e01 	add.w	lr, r3, #1
 8028b36:	ea4f 0c5e 	mov.w	ip, lr, lsr #1
 8028b3a:	f01e 0f01 	tst.w	lr, #1
 8028b3e:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8028b42:	bf0c      	ite	eq
 8028b44:	f00c 0c0f 	andeq.w	ip, ip, #15
 8028b48:	ea4f 1c2c 	movne.w	ip, ip, asr #4
 8028b4c:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8028b50:	fa5f f58c 	uxtb.w	r5, ip
 8028b54:	9512      	str	r5, [sp, #72]	; 0x48
 8028b56:	b300      	cbz	r0, 8028b9a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 8028b58:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8028b5a:	442b      	add	r3, r5
 8028b5c:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 8028b60:	07dd      	lsls	r5, r3, #31
 8028b62:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8028b66:	bf54      	ite	pl
 8028b68:	f00c 0c0f 	andpl.w	ip, ip, #15
 8028b6c:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8028b70:	3301      	adds	r3, #1
 8028b72:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8028b76:	fa5f f58c 	uxtb.w	r5, ip
 8028b7a:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 8028b7e:	950c      	str	r5, [sp, #48]	; 0x30
 8028b80:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8028b84:	07dd      	lsls	r5, r3, #31
 8028b86:	bf54      	ite	pl
 8028b88:	f00c 0c0f 	andpl.w	ip, ip, #15
 8028b8c:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8028b90:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8028b94:	fa5f f38c 	uxtb.w	r3, ip
 8028b98:	9313      	str	r3, [sp, #76]	; 0x4c
 8028b9a:	b289      	uxth	r1, r1
 8028b9c:	b280      	uxth	r0, r0
 8028b9e:	fb01 f300 	mul.w	r3, r1, r0
 8028ba2:	ebc3 1000 	rsb	r0, r3, r0, lsl #4
 8028ba6:	0109      	lsls	r1, r1, #4
 8028ba8:	b280      	uxth	r0, r0
 8028baa:	f5c1 7c80 	rsb	ip, r1, #256	; 0x100
 8028bae:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8028bb0:	1ac9      	subs	r1, r1, r3
 8028bb2:	ebac 0c00 	sub.w	ip, ip, r0
 8028bb6:	b289      	uxth	r1, r1
 8028bb8:	4369      	muls	r1, r5
 8028bba:	fa1f fc8c 	uxth.w	ip, ip
 8028bbe:	fb02 120c 	mla	r2, r2, ip, r1
 8028bc2:	990c      	ldr	r1, [sp, #48]	; 0x30
 8028bc4:	fb00 2001 	mla	r0, r0, r1, r2
 8028bc8:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8028bca:	fb03 0302 	mla	r3, r3, r2, r0
 8028bce:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8028bd2:	b1d3      	cbz	r3, 8028c0a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49a>
 8028bd4:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8028bd6:	4353      	muls	r3, r2
 8028bd8:	1c5a      	adds	r2, r3, #1
 8028bda:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 8028bde:	4a0f      	ldr	r2, [pc, #60]	; (8028c1c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>)
 8028be0:	121b      	asrs	r3, r3, #8
 8028be2:	6812      	ldr	r2, [r2, #0]
 8028be4:	2bff      	cmp	r3, #255	; 0xff
 8028be6:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 8028bea:	d12d      	bne.n	8028c48 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d8>
 8028bec:	0953      	lsrs	r3, r2, #5
 8028bee:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 8028bf2:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8028bf6:	f02c 0c07 	bic.w	ip, ip, #7
 8028bfa:	ea43 0c0c 	orr.w	ip, r3, ip
 8028bfe:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8028c02:	ea4c 0202 	orr.w	r2, ip, r2
 8028c06:	f8a8 2000 	strh.w	r2, [r8]
 8028c0a:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8028c0c:	441c      	add	r4, r3
 8028c0e:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8028c10:	f108 0802 	add.w	r8, r8, #2
 8028c14:	441e      	add	r6, r3
 8028c16:	f10b 3bff 	add.w	fp, fp, #4294967295
 8028c1a:	e6ba      	b.n	8028992 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x222>
 8028c1c:	20006c44 	.word	0x20006c44
 8028c20:	2800      	cmp	r0, #0
 8028c22:	d0ba      	beq.n	8028b9a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 8028c24:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8028c26:	442b      	add	r3, r5
 8028c28:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 8028c2c:	07db      	lsls	r3, r3, #31
 8028c2e:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8028c32:	bf54      	ite	pl
 8028c34:	f00c 0c0f 	andpl.w	ip, ip, #15
 8028c38:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8028c3c:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8028c40:	fa5f f38c 	uxtb.w	r3, ip
 8028c44:	930c      	str	r3, [sp, #48]	; 0x30
 8028c46:	e7a8      	b.n	8028b9a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 8028c48:	f8b8 e000 	ldrh.w	lr, [r8]
 8028c4c:	fa1f fa83 	uxth.w	sl, r3
 8028c50:	ea4f 202e 	mov.w	r0, lr, asr #8
 8028c54:	f3c2 4107 	ubfx	r1, r2, #16, #8
 8028c58:	43db      	mvns	r3, r3
 8028c5a:	b2db      	uxtb	r3, r3
 8028c5c:	fb11 f10a 	smulbb	r1, r1, sl
 8028c60:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8028c64:	fb00 1003 	mla	r0, r0, r3, r1
 8028c68:	b2d2      	uxtb	r2, r2
 8028c6a:	ea4f 01ee 	mov.w	r1, lr, asr #3
 8028c6e:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8028c72:	fa5f fe8e 	uxtb.w	lr, lr
 8028c76:	fb12 f20a 	smulbb	r2, r2, sl
 8028c7a:	fb0e 2203 	mla	r2, lr, r3, r2
 8028c7e:	fa5f fc8c 	uxtb.w	ip, ip
 8028c82:	b280      	uxth	r0, r0
 8028c84:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8028c88:	b292      	uxth	r2, r2
 8028c8a:	fb1c fc0a 	smulbb	ip, ip, sl
 8028c8e:	fb01 cc03 	mla	ip, r1, r3, ip
 8028c92:	1c43      	adds	r3, r0, #1
 8028c94:	1c51      	adds	r1, r2, #1
 8028c96:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8028c9a:	eb01 2112 	add.w	r1, r1, r2, lsr #8
 8028c9e:	fa1f fc8c 	uxth.w	ip, ip
 8028ca2:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 8028ca6:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 8028caa:	4308      	orrs	r0, r1
 8028cac:	f10c 0101 	add.w	r1, ip, #1
 8028cb0:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 8028cb4:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8028cb8:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8028cbc:	ea40 000c 	orr.w	r0, r0, ip
 8028cc0:	f8a8 0000 	strh.w	r0, [r8]
 8028cc4:	e7a1      	b.n	8028c0a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49a>
 8028cc6:	b017      	add	sp, #92	; 0x5c
 8028cc8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08028ccc <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>:
 8028ccc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8028cd0:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	; 0x28
 8028cd4:	2d00      	cmp	r5, #0
 8028cd6:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 8028cda:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 8028cde:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
 8028ce2:	f89d c034 	ldrb.w	ip, [sp, #52]	; 0x34
 8028ce6:	fb05 0e03 	mla	lr, r5, r3, r0
 8028cea:	f2c0 80b0 	blt.w	8028e4e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
 8028cee:	45a9      	cmp	r9, r5
 8028cf0:	f340 80ad 	ble.w	8028e4e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
 8028cf4:	2800      	cmp	r0, #0
 8028cf6:	f2c0 80a8 	blt.w	8028e4a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
 8028cfa:	4580      	cmp	r8, r0
 8028cfc:	f340 80a5 	ble.w	8028e4a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
 8028d00:	ea4f 045e 	mov.w	r4, lr, lsr #1
 8028d04:	f01e 0f01 	tst.w	lr, #1
 8028d08:	5d16      	ldrb	r6, [r2, r4]
 8028d0a:	bf0c      	ite	eq
 8028d0c:	f006 060f 	andeq.w	r6, r6, #15
 8028d10:	1136      	asrne	r6, r6, #4
 8028d12:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 8028d16:	b2f6      	uxtb	r6, r6
 8028d18:	1c44      	adds	r4, r0, #1
 8028d1a:	f100 809b 	bmi.w	8028e54 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
 8028d1e:	45a0      	cmp	r8, r4
 8028d20:	f340 8098 	ble.w	8028e54 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
 8028d24:	2f00      	cmp	r7, #0
 8028d26:	f000 8097 	beq.w	8028e58 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x18c>
 8028d2a:	f10e 0a01 	add.w	sl, lr, #1
 8028d2e:	ea4f 045a 	mov.w	r4, sl, lsr #1
 8028d32:	f01a 0f01 	tst.w	sl, #1
 8028d36:	5d14      	ldrb	r4, [r2, r4]
 8028d38:	bf0c      	ite	eq
 8028d3a:	f004 040f 	andeq.w	r4, r4, #15
 8028d3e:	1124      	asrne	r4, r4, #4
 8028d40:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 8028d44:	b2e4      	uxtb	r4, r4
 8028d46:	3501      	adds	r5, #1
 8028d48:	f100 808a 	bmi.w	8028e60 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
 8028d4c:	45a9      	cmp	r9, r5
 8028d4e:	f340 8087 	ble.w	8028e60 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
 8028d52:	f1bc 0f00 	cmp.w	ip, #0
 8028d56:	f000 8086 	beq.w	8028e66 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x19a>
 8028d5a:	2800      	cmp	r0, #0
 8028d5c:	db7e      	blt.n	8028e5c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
 8028d5e:	4580      	cmp	r8, r0
 8028d60:	dd7c      	ble.n	8028e5c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
 8028d62:	eb03 090e 	add.w	r9, r3, lr
 8028d66:	ea4f 0559 	mov.w	r5, r9, lsr #1
 8028d6a:	f019 0f01 	tst.w	r9, #1
 8028d6e:	5d55      	ldrb	r5, [r2, r5]
 8028d70:	bf0c      	ite	eq
 8028d72:	f005 050f 	andeq.w	r5, r5, #15
 8028d76:	112d      	asrne	r5, r5, #4
 8028d78:	eb05 1505 	add.w	r5, r5, r5, lsl #4
 8028d7c:	b2ed      	uxtb	r5, r5
 8028d7e:	3001      	adds	r0, #1
 8028d80:	d474      	bmi.n	8028e6c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
 8028d82:	4580      	cmp	r8, r0
 8028d84:	dd72      	ble.n	8028e6c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
 8028d86:	2f00      	cmp	r7, #0
 8028d88:	d072      	beq.n	8028e70 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a4>
 8028d8a:	3301      	adds	r3, #1
 8028d8c:	449e      	add	lr, r3
 8028d8e:	ea4f 035e 	mov.w	r3, lr, lsr #1
 8028d92:	f01e 0f01 	tst.w	lr, #1
 8028d96:	5cd0      	ldrb	r0, [r2, r3]
 8028d98:	bf0c      	ite	eq
 8028d9a:	f000 000f 	andeq.w	r0, r0, #15
 8028d9e:	1100      	asrne	r0, r0, #4
 8028da0:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 8028da4:	b2c3      	uxtb	r3, r0
 8028da6:	b2ba      	uxth	r2, r7
 8028da8:	fa1f fc8c 	uxth.w	ip, ip
 8028dac:	fb02 f00c 	mul.w	r0, r2, ip
 8028db0:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
 8028db4:	0112      	lsls	r2, r2, #4
 8028db6:	fa1f fc8c 	uxth.w	ip, ip
 8028dba:	f5c2 7780 	rsb	r7, r2, #256	; 0x100
 8028dbe:	1a12      	subs	r2, r2, r0
 8028dc0:	eba7 070c 	sub.w	r7, r7, ip
 8028dc4:	b292      	uxth	r2, r2
 8028dc6:	b2bf      	uxth	r7, r7
 8028dc8:	4362      	muls	r2, r4
 8028dca:	fb06 2207 	mla	r2, r6, r7, r2
 8028dce:	fb0c 2505 	mla	r5, ip, r5, r2
 8028dd2:	fb00 5303 	mla	r3, r0, r3, r5
 8028dd6:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8028dda:	b3a3      	cbz	r3, 8028e46 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17a>
 8028ddc:	4a25      	ldr	r2, [pc, #148]	; (8028e74 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a8>)
 8028dde:	880e      	ldrh	r6, [r1, #0]
 8028de0:	6815      	ldr	r5, [r2, #0]
 8028de2:	1234      	asrs	r4, r6, #8
 8028de4:	b29a      	uxth	r2, r3
 8028de6:	f3c5 4007 	ubfx	r0, r5, #16, #8
 8028dea:	43db      	mvns	r3, r3
 8028dec:	b2db      	uxtb	r3, r3
 8028dee:	fb10 f002 	smulbb	r0, r0, r2
 8028df2:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 8028df6:	fb04 0403 	mla	r4, r4, r3, r0
 8028dfa:	f3c5 2707 	ubfx	r7, r5, #8, #8
 8028dfe:	10f0      	asrs	r0, r6, #3
 8028e00:	b2ed      	uxtb	r5, r5
 8028e02:	00f6      	lsls	r6, r6, #3
 8028e04:	fb17 f702 	smulbb	r7, r7, r2
 8028e08:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8028e0c:	fb15 f202 	smulbb	r2, r5, r2
 8028e10:	b2f6      	uxtb	r6, r6
 8028e12:	b2a4      	uxth	r4, r4
 8028e14:	fb00 7003 	mla	r0, r0, r3, r7
 8028e18:	fb06 2303 	mla	r3, r6, r3, r2
 8028e1c:	b29a      	uxth	r2, r3
 8028e1e:	1c63      	adds	r3, r4, #1
 8028e20:	b280      	uxth	r0, r0
 8028e22:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 8028e26:	1c53      	adds	r3, r2, #1
 8028e28:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8028e2c:	1c42      	adds	r2, r0, #1
 8028e2e:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8028e32:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 8028e36:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8028e3a:	0940      	lsrs	r0, r0, #5
 8028e3c:	4323      	orrs	r3, r4
 8028e3e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8028e42:	4303      	orrs	r3, r0
 8028e44:	800b      	strh	r3, [r1, #0]
 8028e46:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8028e4a:	2600      	movs	r6, #0
 8028e4c:	e764      	b.n	8028d18 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x4c>
 8028e4e:	2400      	movs	r4, #0
 8028e50:	4626      	mov	r6, r4
 8028e52:	e778      	b.n	8028d46 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 8028e54:	2400      	movs	r4, #0
 8028e56:	e776      	b.n	8028d46 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 8028e58:	463c      	mov	r4, r7
 8028e5a:	e774      	b.n	8028d46 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 8028e5c:	2500      	movs	r5, #0
 8028e5e:	e78e      	b.n	8028d7e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xb2>
 8028e60:	2300      	movs	r3, #0
 8028e62:	461d      	mov	r5, r3
 8028e64:	e79f      	b.n	8028da6 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 8028e66:	4663      	mov	r3, ip
 8028e68:	4665      	mov	r5, ip
 8028e6a:	e79c      	b.n	8028da6 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 8028e6c:	2300      	movs	r3, #0
 8028e6e:	e79a      	b.n	8028da6 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 8028e70:	463b      	mov	r3, r7
 8028e72:	e798      	b.n	8028da6 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 8028e74:	20006c44 	.word	0x20006c44

08028e78 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8028e78:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8028e7c:	b093      	sub	sp, #76	; 0x4c
 8028e7e:	461d      	mov	r5, r3
 8028e80:	920c      	str	r2, [sp, #48]	; 0x30
 8028e82:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8028e84:	9107      	str	r1, [sp, #28]
 8028e86:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
 8028e8a:	9011      	str	r0, [sp, #68]	; 0x44
 8028e8c:	6850      	ldr	r0, [r2, #4]
 8028e8e:	6812      	ldr	r2, [r2, #0]
 8028e90:	fb00 1303 	mla	r3, r0, r3, r1
 8028e94:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 8028e98:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8028e9a:	689b      	ldr	r3, [r3, #8]
 8028e9c:	3301      	adds	r3, #1
 8028e9e:	f023 0301 	bic.w	r3, r3, #1
 8028ea2:	9306      	str	r3, [sp, #24]
 8028ea4:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8028ea6:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
 8028eaa:	681f      	ldr	r7, [r3, #0]
 8028eac:	9b07      	ldr	r3, [sp, #28]
 8028eae:	2b00      	cmp	r3, #0
 8028eb0:	dc03      	bgt.n	8028eba <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
 8028eb2:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8028eb4:	2b00      	cmp	r3, #0
 8028eb6:	f340 8267 	ble.w	8029388 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
 8028eba:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8028ebc:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8028ec0:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8028ec4:	1e48      	subs	r0, r1, #1
 8028ec6:	f102 3cff 	add.w	ip, r2, #4294967295
 8028eca:	2d00      	cmp	r5, #0
 8028ecc:	f340 80b8 	ble.w	8029040 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8028ed0:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8028ed4:	ea4f 4326 	mov.w	r3, r6, asr #16
 8028ed8:	d406      	bmi.n	8028ee8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8028eda:	4586      	cmp	lr, r0
 8028edc:	da04      	bge.n	8028ee8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8028ede:	2b00      	cmp	r3, #0
 8028ee0:	db02      	blt.n	8028ee8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8028ee2:	4563      	cmp	r3, ip
 8028ee4:	f2c0 80ad 	blt.w	8029042 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ca>
 8028ee8:	f11e 0e01 	adds.w	lr, lr, #1
 8028eec:	f100 80a0 	bmi.w	8029030 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 8028ef0:	4571      	cmp	r1, lr
 8028ef2:	f2c0 809d 	blt.w	8029030 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 8028ef6:	3301      	adds	r3, #1
 8028ef8:	f100 809a 	bmi.w	8029030 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 8028efc:	429a      	cmp	r2, r3
 8028efe:	f2c0 8097 	blt.w	8029030 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 8028f02:	f9bd a018 	ldrsh.w	sl, [sp, #24]
 8028f06:	9509      	str	r5, [sp, #36]	; 0x24
 8028f08:	46c8      	mov	r8, r9
 8028f0a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8028f0c:	2b00      	cmp	r3, #0
 8028f0e:	f340 80b6 	ble.w	802907e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x206>
 8028f12:	f3c4 3303 	ubfx	r3, r4, #12, #4
 8028f16:	9308      	str	r3, [sp, #32]
 8028f18:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8028f1a:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 8028f1e:	1423      	asrs	r3, r4, #16
 8028f20:	ea4f 4026 	mov.w	r0, r6, asr #16
 8028f24:	f3c6 3103 	ubfx	r1, r6, #12, #4
 8028f28:	f100 813e 	bmi.w	80291a8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 8028f2c:	f10c 3bff 	add.w	fp, ip, #4294967295
 8028f30:	455b      	cmp	r3, fp
 8028f32:	f280 8139 	bge.w	80291a8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 8028f36:	2800      	cmp	r0, #0
 8028f38:	f2c0 8136 	blt.w	80291a8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 8028f3c:	f10e 3bff 	add.w	fp, lr, #4294967295
 8028f40:	4558      	cmp	r0, fp
 8028f42:	f280 8131 	bge.w	80291a8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 8028f46:	9a06      	ldr	r2, [sp, #24]
 8028f48:	fb00 3302 	mla	r3, r0, r2, r3
 8028f4c:	0858      	lsrs	r0, r3, #1
 8028f4e:	07da      	lsls	r2, r3, #31
 8028f50:	f817 c000 	ldrb.w	ip, [r7, r0]
 8028f54:	9a08      	ldr	r2, [sp, #32]
 8028f56:	bf54      	ite	pl
 8028f58:	f00c 0c0f 	andpl.w	ip, ip, #15
 8028f5c:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8028f60:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8028f64:	fa5f fc8c 	uxtb.w	ip, ip
 8028f68:	2a00      	cmp	r2, #0
 8028f6a:	f000 80cb 	beq.w	8029104 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8028f6e:	1c58      	adds	r0, r3, #1
 8028f70:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 8028f74:	07c0      	lsls	r0, r0, #31
 8028f76:	f817 e00e 	ldrb.w	lr, [r7, lr]
 8028f7a:	bf54      	ite	pl
 8028f7c:	f00e 0e0f 	andpl.w	lr, lr, #15
 8028f80:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 8028f84:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 8028f88:	fa5f fe8e 	uxtb.w	lr, lr
 8028f8c:	f8cd e034 	str.w	lr, [sp, #52]	; 0x34
 8028f90:	b1b9      	cbz	r1, 8028fc2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 8028f92:	4453      	add	r3, sl
 8028f94:	0858      	lsrs	r0, r3, #1
 8028f96:	07da      	lsls	r2, r3, #31
 8028f98:	5c38      	ldrb	r0, [r7, r0]
 8028f9a:	bf54      	ite	pl
 8028f9c:	f000 000f 	andpl.w	r0, r0, #15
 8028fa0:	1100      	asrmi	r0, r0, #4
 8028fa2:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 8028fa6:	b2c0      	uxtb	r0, r0
 8028fa8:	900a      	str	r0, [sp, #40]	; 0x28
 8028faa:	1c58      	adds	r0, r3, #1
 8028fac:	0843      	lsrs	r3, r0, #1
 8028fae:	07c2      	lsls	r2, r0, #31
 8028fb0:	5cfb      	ldrb	r3, [r7, r3]
 8028fb2:	bf54      	ite	pl
 8028fb4:	f003 030f 	andpl.w	r3, r3, #15
 8028fb8:	111b      	asrmi	r3, r3, #4
 8028fba:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 8028fbe:	b2db      	uxtb	r3, r3
 8028fc0:	930e      	str	r3, [sp, #56]	; 0x38
 8028fc2:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 8028fc6:	b289      	uxth	r1, r1
 8028fc8:	fb02 f301 	mul.w	r3, r2, r1
 8028fcc:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 8028fd0:	0112      	lsls	r2, r2, #4
 8028fd2:	b289      	uxth	r1, r1
 8028fd4:	f5c2 7080 	rsb	r0, r2, #256	; 0x100
 8028fd8:	1a40      	subs	r0, r0, r1
 8028fda:	fa1f fe80 	uxth.w	lr, r0
 8028fde:	1ad2      	subs	r2, r2, r3
 8028fe0:	980d      	ldr	r0, [sp, #52]	; 0x34
 8028fe2:	b292      	uxth	r2, r2
 8028fe4:	4342      	muls	r2, r0
 8028fe6:	fb0c 2c0e 	mla	ip, ip, lr, r2
 8028fea:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8028fec:	fb01 c102 	mla	r1, r1, r2, ip
 8028ff0:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8028ff2:	fb03 1302 	mla	r3, r3, r2, r1
 8028ff6:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8028ffa:	2bff      	cmp	r3, #255	; 0xff
 8028ffc:	f040 8093 	bne.w	8029126 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ae>
 8029000:	4bbe      	ldr	r3, [pc, #760]	; (80292fc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 8029002:	681a      	ldr	r2, [r3, #0]
 8029004:	4bbe      	ldr	r3, [pc, #760]	; (8029300 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
 8029006:	0951      	lsrs	r1, r2, #5
 8029008:	ea03 2312 	and.w	r3, r3, r2, lsr #8
 802900c:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8029010:	430b      	orrs	r3, r1
 8029012:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8029016:	4313      	orrs	r3, r2
 8029018:	f8a8 3000 	strh.w	r3, [r8]
 802901c:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 802901e:	441c      	add	r4, r3
 8029020:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8029022:	441e      	add	r6, r3
 8029024:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8029026:	3b01      	subs	r3, #1
 8029028:	f108 0802 	add.w	r8, r8, #2
 802902c:	9309      	str	r3, [sp, #36]	; 0x24
 802902e:	e76c      	b.n	8028f0a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8029030:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8029032:	441c      	add	r4, r3
 8029034:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8029036:	3d01      	subs	r5, #1
 8029038:	441e      	add	r6, r3
 802903a:	f109 0902 	add.w	r9, r9, #2
 802903e:	e744      	b.n	8028eca <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8029040:	d021      	beq.n	8029086 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20e>
 8029042:	981f      	ldr	r0, [sp, #124]	; 0x7c
 8029044:	1e6b      	subs	r3, r5, #1
 8029046:	fb00 4003 	mla	r0, r0, r3, r4
 802904a:	1400      	asrs	r0, r0, #16
 802904c:	f53f af59 	bmi.w	8028f02 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8029050:	3901      	subs	r1, #1
 8029052:	4288      	cmp	r0, r1
 8029054:	f6bf af55 	bge.w	8028f02 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8029058:	9920      	ldr	r1, [sp, #128]	; 0x80
 802905a:	fb01 6303 	mla	r3, r1, r3, r6
 802905e:	141b      	asrs	r3, r3, #16
 8029060:	f53f af4f 	bmi.w	8028f02 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8029064:	3a01      	subs	r2, #1
 8029066:	4293      	cmp	r3, r2
 8029068:	f6bf af4b 	bge.w	8028f02 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 802906c:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8029070:	9308      	str	r3, [sp, #32]
 8029072:	46a8      	mov	r8, r5
 8029074:	46ce      	mov	lr, r9
 8029076:	f1b8 0f00 	cmp.w	r8, #0
 802907a:	f300 80b5 	bgt.w	80291e8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 802907e:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8029082:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 8029086:	9b07      	ldr	r3, [sp, #28]
 8029088:	2b00      	cmp	r3, #0
 802908a:	f340 817d 	ble.w	8029388 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
 802908e:	ee30 0a04 	vadd.f32	s0, s0, s8
 8029092:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8029096:	eec7 7a00 	vdiv.f32	s15, s14, s0
 802909a:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 802909c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80290a0:	ee31 1a05 	vadd.f32	s2, s2, s10
 80290a4:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80290a8:	eef0 6a62 	vmov.f32	s13, s5
 80290ac:	ee61 7a27 	vmul.f32	s15, s2, s15
 80290b0:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80290b4:	ee77 2a62 	vsub.f32	s5, s14, s5
 80290b8:	ee16 4a90 	vmov	r4, s13
 80290bc:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80290c0:	eef0 6a43 	vmov.f32	s13, s6
 80290c4:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80290c8:	ee12 2a90 	vmov	r2, s5
 80290cc:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80290d0:	fb92 f3f3 	sdiv	r3, r2, r3
 80290d4:	ee13 2a10 	vmov	r2, s6
 80290d8:	931f      	str	r3, [sp, #124]	; 0x7c
 80290da:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 80290dc:	fb92 f3f3 	sdiv	r3, r2, r3
 80290e0:	9320      	str	r3, [sp, #128]	; 0x80
 80290e2:	9b07      	ldr	r3, [sp, #28]
 80290e4:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 80290e6:	3b01      	subs	r3, #1
 80290e8:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80290ec:	9307      	str	r3, [sp, #28]
 80290ee:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 80290f0:	ee16 6a90 	vmov	r6, s13
 80290f4:	bf14      	ite	ne
 80290f6:	461d      	movne	r5, r3
 80290f8:	4615      	moveq	r5, r2
 80290fa:	eeb0 3a67 	vmov.f32	s6, s15
 80290fe:	eef0 2a47 	vmov.f32	s5, s14
 8029102:	e6d3      	b.n	8028eac <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
 8029104:	2900      	cmp	r1, #0
 8029106:	f43f af5c 	beq.w	8028fc2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 802910a:	eb0a 0003 	add.w	r0, sl, r3
 802910e:	0843      	lsrs	r3, r0, #1
 8029110:	07c0      	lsls	r0, r0, #31
 8029112:	5cfb      	ldrb	r3, [r7, r3]
 8029114:	bf54      	ite	pl
 8029116:	f003 030f 	andpl.w	r3, r3, #15
 802911a:	111b      	asrmi	r3, r3, #4
 802911c:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 8029120:	b2db      	uxtb	r3, r3
 8029122:	930a      	str	r3, [sp, #40]	; 0x28
 8029124:	e74d      	b.n	8028fc2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 8029126:	2b00      	cmp	r3, #0
 8029128:	f43f af78 	beq.w	802901c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 802912c:	4a73      	ldr	r2, [pc, #460]	; (80292fc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 802912e:	f8b8 c000 	ldrh.w	ip, [r8]
 8029132:	6810      	ldr	r0, [r2, #0]
 8029134:	fa1f fe83 	uxth.w	lr, r3
 8029138:	ea4f 212c 	mov.w	r1, ip, asr #8
 802913c:	f3c0 4207 	ubfx	r2, r0, #16, #8
 8029140:	43db      	mvns	r3, r3
 8029142:	b2db      	uxtb	r3, r3
 8029144:	fb12 f20e 	smulbb	r2, r2, lr
 8029148:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 802914c:	fb01 2103 	mla	r1, r1, r3, r2
 8029150:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 8029154:	ea4f 02ec 	mov.w	r2, ip, asr #3
 8029158:	b2c0      	uxtb	r0, r0
 802915a:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 802915e:	fb1b fb0e 	smulbb	fp, fp, lr
 8029162:	b289      	uxth	r1, r1
 8029164:	fb10 fe0e 	smulbb	lr, r0, lr
 8029168:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 802916c:	fa5f fc8c 	uxtb.w	ip, ip
 8029170:	fb02 b203 	mla	r2, r2, r3, fp
 8029174:	1c48      	adds	r0, r1, #1
 8029176:	fb0c e303 	mla	r3, ip, r3, lr
 802917a:	b292      	uxth	r2, r2
 802917c:	b29b      	uxth	r3, r3
 802917e:	eb00 2111 	add.w	r1, r0, r1, lsr #8
 8029182:	f401 4078 	and.w	r0, r1, #63488	; 0xf800
 8029186:	f102 0b01 	add.w	fp, r2, #1
 802918a:	1c59      	adds	r1, r3, #1
 802918c:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 8029190:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 8029194:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 8029198:	0952      	lsrs	r2, r2, #5
 802919a:	4301      	orrs	r1, r0
 802919c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80291a0:	4311      	orrs	r1, r2
 80291a2:	f8a8 1000 	strh.w	r1, [r8]
 80291a6:	e739      	b.n	802901c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 80291a8:	f113 0b01 	adds.w	fp, r3, #1
 80291ac:	f53f af36 	bmi.w	802901c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 80291b0:	45dc      	cmp	ip, fp
 80291b2:	f6ff af33 	blt.w	802901c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 80291b6:	f110 0b01 	adds.w	fp, r0, #1
 80291ba:	f53f af2f 	bmi.w	802901c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 80291be:	45de      	cmp	lr, fp
 80291c0:	f6ff af2c 	blt.w	802901c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 80291c4:	9a08      	ldr	r2, [sp, #32]
 80291c6:	9302      	str	r3, [sp, #8]
 80291c8:	fa0f f38e 	sxth.w	r3, lr
 80291cc:	9301      	str	r3, [sp, #4]
 80291ce:	fa0f f38c 	sxth.w	r3, ip
 80291d2:	e9cd 0203 	strd	r0, r2, [sp, #12]
 80291d6:	9105      	str	r1, [sp, #20]
 80291d8:	9300      	str	r3, [sp, #0]
 80291da:	463a      	mov	r2, r7
 80291dc:	4653      	mov	r3, sl
 80291de:	4641      	mov	r1, r8
 80291e0:	9811      	ldr	r0, [sp, #68]	; 0x44
 80291e2:	f7ff fd73 	bl	8028ccc <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>
 80291e6:	e719      	b.n	802901c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 80291e8:	9906      	ldr	r1, [sp, #24]
 80291ea:	1422      	asrs	r2, r4, #16
 80291ec:	1433      	asrs	r3, r6, #16
 80291ee:	fb01 2303 	mla	r3, r1, r3, r2
 80291f2:	085a      	lsrs	r2, r3, #1
 80291f4:	07d9      	lsls	r1, r3, #31
 80291f6:	5cba      	ldrb	r2, [r7, r2]
 80291f8:	bf54      	ite	pl
 80291fa:	f002 020f 	andpl.w	r2, r2, #15
 80291fe:	1112      	asrmi	r2, r2, #4
 8029200:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8029204:	f3c4 3003 	ubfx	r0, r4, #12, #4
 8029208:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 802920c:	b2d2      	uxtb	r2, r2
 802920e:	2800      	cmp	r0, #0
 8029210:	d062      	beq.n	80292d8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x460>
 8029212:	f103 0a01 	add.w	sl, r3, #1
 8029216:	ea4f 015a 	mov.w	r1, sl, lsr #1
 802921a:	f01a 0f01 	tst.w	sl, #1
 802921e:	5c79      	ldrb	r1, [r7, r1]
 8029220:	bf0c      	ite	eq
 8029222:	f001 010f 	andeq.w	r1, r1, #15
 8029226:	1109      	asrne	r1, r1, #4
 8029228:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 802922c:	b2c9      	uxtb	r1, r1
 802922e:	910f      	str	r1, [sp, #60]	; 0x3c
 8029230:	f1bc 0f00 	cmp.w	ip, #0
 8029234:	d019      	beq.n	802926a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 8029236:	9908      	ldr	r1, [sp, #32]
 8029238:	440b      	add	r3, r1
 802923a:	0859      	lsrs	r1, r3, #1
 802923c:	f013 0f01 	tst.w	r3, #1
 8029240:	5c79      	ldrb	r1, [r7, r1]
 8029242:	bf0c      	ite	eq
 8029244:	f001 010f 	andeq.w	r1, r1, #15
 8029248:	1109      	asrne	r1, r1, #4
 802924a:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 802924e:	b2c9      	uxtb	r1, r1
 8029250:	3301      	adds	r3, #1
 8029252:	910b      	str	r1, [sp, #44]	; 0x2c
 8029254:	0859      	lsrs	r1, r3, #1
 8029256:	07db      	lsls	r3, r3, #31
 8029258:	5c79      	ldrb	r1, [r7, r1]
 802925a:	bf54      	ite	pl
 802925c:	f001 010f 	andpl.w	r1, r1, #15
 8029260:	1109      	asrmi	r1, r1, #4
 8029262:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 8029266:	b2c9      	uxtb	r1, r1
 8029268:	9110      	str	r1, [sp, #64]	; 0x40
 802926a:	b280      	uxth	r0, r0
 802926c:	fa1f fc8c 	uxth.w	ip, ip
 8029270:	fb00 f30c 	mul.w	r3, r0, ip
 8029274:	ebc3 1c0c 	rsb	ip, r3, ip, lsl #4
 8029278:	0100      	lsls	r0, r0, #4
 802927a:	fa1f fc8c 	uxth.w	ip, ip
 802927e:	f5c0 7180 	rsb	r1, r0, #256	; 0x100
 8029282:	eba1 010c 	sub.w	r1, r1, ip
 8029286:	fa1f fa81 	uxth.w	sl, r1
 802928a:	1ac0      	subs	r0, r0, r3
 802928c:	990f      	ldr	r1, [sp, #60]	; 0x3c
 802928e:	b280      	uxth	r0, r0
 8029290:	4348      	muls	r0, r1
 8029292:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8029294:	fb02 020a 	mla	r2, r2, sl, r0
 8029298:	fb0c 2c01 	mla	ip, ip, r1, r2
 802929c:	9a10      	ldr	r2, [sp, #64]	; 0x40
 802929e:	fb03 c302 	mla	r3, r3, r2, ip
 80292a2:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80292a6:	2bff      	cmp	r3, #255	; 0xff
 80292a8:	d12c      	bne.n	8029304 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48c>
 80292aa:	4b14      	ldr	r3, [pc, #80]	; (80292fc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 80292ac:	681a      	ldr	r2, [r3, #0]
 80292ae:	4b14      	ldr	r3, [pc, #80]	; (8029300 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
 80292b0:	0951      	lsrs	r1, r2, #5
 80292b2:	ea03 2312 	and.w	r3, r3, r2, lsr #8
 80292b6:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80292ba:	430b      	orrs	r3, r1
 80292bc:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 80292c0:	4313      	orrs	r3, r2
 80292c2:	f8ae 3000 	strh.w	r3, [lr]
 80292c6:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 80292c8:	441c      	add	r4, r3
 80292ca:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80292cc:	f10e 0e02 	add.w	lr, lr, #2
 80292d0:	441e      	add	r6, r3
 80292d2:	f108 38ff 	add.w	r8, r8, #4294967295
 80292d6:	e6ce      	b.n	8029076 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 80292d8:	f1bc 0f00 	cmp.w	ip, #0
 80292dc:	d0c5      	beq.n	802926a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 80292de:	9908      	ldr	r1, [sp, #32]
 80292e0:	440b      	add	r3, r1
 80292e2:	0859      	lsrs	r1, r3, #1
 80292e4:	07db      	lsls	r3, r3, #31
 80292e6:	5c79      	ldrb	r1, [r7, r1]
 80292e8:	bf54      	ite	pl
 80292ea:	f001 010f 	andpl.w	r1, r1, #15
 80292ee:	1109      	asrmi	r1, r1, #4
 80292f0:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 80292f4:	b2c9      	uxtb	r1, r1
 80292f6:	910b      	str	r1, [sp, #44]	; 0x2c
 80292f8:	e7b7      	b.n	802926a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 80292fa:	bf00      	nop
 80292fc:	20006c44 	.word	0x20006c44
 8029300:	fffff800 	.word	0xfffff800
 8029304:	2b00      	cmp	r3, #0
 8029306:	d0de      	beq.n	80292c6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 8029308:	4a21      	ldr	r2, [pc, #132]	; (8029390 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x518>)
 802930a:	f8be c000 	ldrh.w	ip, [lr]
 802930e:	6810      	ldr	r0, [r2, #0]
 8029310:	fa1f fa83 	uxth.w	sl, r3
 8029314:	ea4f 212c 	mov.w	r1, ip, asr #8
 8029318:	f3c0 4207 	ubfx	r2, r0, #16, #8
 802931c:	43db      	mvns	r3, r3
 802931e:	b2db      	uxtb	r3, r3
 8029320:	fb12 f20a 	smulbb	r2, r2, sl
 8029324:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8029328:	fb01 2103 	mla	r1, r1, r3, r2
 802932c:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 8029330:	ea4f 02ec 	mov.w	r2, ip, asr #3
 8029334:	b2c0      	uxtb	r0, r0
 8029336:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 802933a:	fa5f fc8c 	uxtb.w	ip, ip
 802933e:	fb10 f00a 	smulbb	r0, r0, sl
 8029342:	fb0c 0003 	mla	r0, ip, r3, r0
 8029346:	b289      	uxth	r1, r1
 8029348:	fb1b fb0a 	smulbb	fp, fp, sl
 802934c:	b280      	uxth	r0, r0
 802934e:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8029352:	fb02 b203 	mla	r2, r2, r3, fp
 8029356:	1c4b      	adds	r3, r1, #1
 8029358:	f100 0b01 	add.w	fp, r0, #1
 802935c:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8029360:	eb0b 2b10 	add.w	fp, fp, r0, lsr #8
 8029364:	b292      	uxth	r2, r2
 8029366:	f3cb 2bc4 	ubfx	fp, fp, #11, #5
 802936a:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 802936e:	ea4b 0101 	orr.w	r1, fp, r1
 8029372:	f102 0b01 	add.w	fp, r2, #1
 8029376:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 802937a:	0952      	lsrs	r2, r2, #5
 802937c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8029380:	4311      	orrs	r1, r2
 8029382:	f8ae 1000 	strh.w	r1, [lr]
 8029386:	e79e      	b.n	80292c6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 8029388:	b013      	add	sp, #76	; 0x4c
 802938a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802938e:	bf00      	nop
 8029390:	20006c44 	.word	0x20006c44

08029394 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>:
 8029394:	b570      	push	{r4, r5, r6, lr}
 8029396:	1208      	asrs	r0, r1, #8
 8029398:	b29e      	uxth	r6, r3
 802939a:	f8bd 5010 	ldrh.w	r5, [sp, #16]
 802939e:	1213      	asrs	r3, r2, #8
 80293a0:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 80293a4:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 80293a8:	fb13 f305 	smulbb	r3, r3, r5
 80293ac:	fb10 f006 	smulbb	r0, r0, r6
 80293b0:	4418      	add	r0, r3
 80293b2:	10cc      	asrs	r4, r1, #3
 80293b4:	10d3      	asrs	r3, r2, #3
 80293b6:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 80293ba:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 80293be:	fb13 f305 	smulbb	r3, r3, r5
 80293c2:	fb14 f406 	smulbb	r4, r4, r6
 80293c6:	00c9      	lsls	r1, r1, #3
 80293c8:	00d2      	lsls	r2, r2, #3
 80293ca:	441c      	add	r4, r3
 80293cc:	b2d2      	uxtb	r2, r2
 80293ce:	b2cb      	uxtb	r3, r1
 80293d0:	fb12 f205 	smulbb	r2, r2, r5
 80293d4:	b280      	uxth	r0, r0
 80293d6:	fb13 f306 	smulbb	r3, r3, r6
 80293da:	4413      	add	r3, r2
 80293dc:	1c42      	adds	r2, r0, #1
 80293de:	b29b      	uxth	r3, r3
 80293e0:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 80293e4:	f400 4278 	and.w	r2, r0, #63488	; 0xf800
 80293e8:	1c58      	adds	r0, r3, #1
 80293ea:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 80293ee:	b2a4      	uxth	r4, r4
 80293f0:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 80293f4:	4310      	orrs	r0, r2
 80293f6:	1c62      	adds	r2, r4, #1
 80293f8:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 80293fc:	0964      	lsrs	r4, r4, #5
 80293fe:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 8029402:	4320      	orrs	r0, r4
 8029404:	bd70      	pop	{r4, r5, r6, pc}
	...

08029408 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 8029408:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802940c:	b08f      	sub	sp, #60	; 0x3c
 802940e:	461c      	mov	r4, r3
 8029410:	f89d 7064 	ldrb.w	r7, [sp, #100]	; 0x64
 8029414:	9004      	str	r0, [sp, #16]
 8029416:	460d      	mov	r5, r1
 8029418:	4616      	mov	r6, r2
 802941a:	9b18      	ldr	r3, [sp, #96]	; 0x60
 802941c:	2f00      	cmp	r7, #0
 802941e:	f000 80f6 	beq.w	802960e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x206>
 8029422:	6820      	ldr	r0, [r4, #0]
 8029424:	6861      	ldr	r1, [r4, #4]
 8029426:	aa0a      	add	r2, sp, #40	; 0x28
 8029428:	c203      	stmia	r2!, {r0, r1}
 802942a:	6818      	ldr	r0, [r3, #0]
 802942c:	6859      	ldr	r1, [r3, #4]
 802942e:	aa0c      	add	r2, sp, #48	; 0x30
 8029430:	c203      	stmia	r2!, {r0, r1}
 8029432:	a80a      	add	r0, sp, #40	; 0x28
 8029434:	f7ee ff04 	bl	8018240 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8029438:	4621      	mov	r1, r4
 802943a:	a80c      	add	r0, sp, #48	; 0x30
 802943c:	f7ee ff28 	bl	8018290 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8029440:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	; 0x30
 8029444:	f9bd b036 	ldrsh.w	fp, [sp, #54]	; 0x36
 8029448:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	; 0x34
 802944c:	f002 0301 	and.w	r3, r2, #1
 8029450:	9306      	str	r3, [sp, #24]
 8029452:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 8029456:	f003 0101 	and.w	r1, r3, #1
 802945a:	9105      	str	r1, [sp, #20]
 802945c:	9805      	ldr	r0, [sp, #20]
 802945e:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	; 0x32
 8029462:	4403      	add	r3, r0
 8029464:	fb01 2303 	mla	r3, r1, r3, r2
 8029468:	f04f 0802 	mov.w	r8, #2
 802946c:	fb93 f3f8 	sdiv	r3, r3, r8
 8029470:	441d      	add	r5, r3
 8029472:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8029476:	441a      	add	r2, r3
 8029478:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 802947c:	f8ad 2030 	strh.w	r2, [sp, #48]	; 0x30
 8029480:	4419      	add	r1, r3
 8029482:	4b64      	ldr	r3, [pc, #400]	; (8029614 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x20c>)
 8029484:	f8ad 1032 	strh.w	r1, [sp, #50]	; 0x32
 8029488:	6818      	ldr	r0, [r3, #0]
 802948a:	6803      	ldr	r3, [r0, #0]
 802948c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 802948e:	4798      	blx	r3
 8029490:	4a61      	ldr	r2, [pc, #388]	; (8029618 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x210>)
 8029492:	f9bd 4032 	ldrsh.w	r4, [sp, #50]	; 0x32
 8029496:	8813      	ldrh	r3, [r2, #0]
 8029498:	f9bd a030 	ldrsh.w	sl, [sp, #48]	; 0x30
 802949c:	2fff      	cmp	r7, #255	; 0xff
 802949e:	fb03 a404 	mla	r4, r3, r4, sl
 80294a2:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 80294a6:	f106 0604 	add.w	r6, r6, #4
 80294aa:	4611      	mov	r1, r2
 80294ac:	fb03 fb0b 	mul.w	fp, r3, fp
 80294b0:	d06b      	beq.n	802958a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x182>
 80294b2:	f1c7 03ff 	rsb	r3, r7, #255	; 0xff
 80294b6:	9303      	str	r3, [sp, #12]
 80294b8:	eb04 034b 	add.w	r3, r4, fp, lsl #1
 80294bc:	e9cd 3207 	strd	r3, r2, [sp, #28]
 80294c0:	f8cd 8024 	str.w	r8, [sp, #36]	; 0x24
 80294c4:	9b07      	ldr	r3, [sp, #28]
 80294c6:	42a3      	cmp	r3, r4
 80294c8:	f240 809c 	bls.w	8029604 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1fc>
 80294cc:	9b06      	ldr	r3, [sp, #24]
 80294ce:	2b00      	cmp	r3, #0
 80294d0:	d039      	beq.n	8029546 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13e>
 80294d2:	782b      	ldrb	r3, [r5, #0]
 80294d4:	8822      	ldrh	r2, [r4, #0]
 80294d6:	9804      	ldr	r0, [sp, #16]
 80294d8:	f003 030f 	and.w	r3, r3, #15
 80294dc:	f105 0801 	add.w	r8, r5, #1
 80294e0:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 80294e4:	9b03      	ldr	r3, [sp, #12]
 80294e6:	9300      	str	r3, [sp, #0]
 80294e8:	463b      	mov	r3, r7
 80294ea:	f7ff ff53 	bl	8029394 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 80294ee:	f824 0b02 	strh.w	r0, [r4], #2
 80294f2:	f109 3bff 	add.w	fp, r9, #4294967295
 80294f6:	f1bb 0f01 	cmp.w	fp, #1
 80294fa:	46a2      	mov	sl, r4
 80294fc:	f104 0404 	add.w	r4, r4, #4
 8029500:	dd24      	ble.n	802954c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x144>
 8029502:	f898 3000 	ldrb.w	r3, [r8]
 8029506:	f834 2c04 	ldrh.w	r2, [r4, #-4]
 802950a:	9804      	ldr	r0, [sp, #16]
 802950c:	091b      	lsrs	r3, r3, #4
 802950e:	f1ab 0b02 	sub.w	fp, fp, #2
 8029512:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 8029516:	9b03      	ldr	r3, [sp, #12]
 8029518:	9300      	str	r3, [sp, #0]
 802951a:	463b      	mov	r3, r7
 802951c:	f7ff ff3a 	bl	8029394 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 8029520:	f824 0c04 	strh.w	r0, [r4, #-4]
 8029524:	f818 3b01 	ldrb.w	r3, [r8], #1
 8029528:	f834 2c02 	ldrh.w	r2, [r4, #-2]
 802952c:	9804      	ldr	r0, [sp, #16]
 802952e:	f003 030f 	and.w	r3, r3, #15
 8029532:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 8029536:	9b03      	ldr	r3, [sp, #12]
 8029538:	9300      	str	r3, [sp, #0]
 802953a:	463b      	mov	r3, r7
 802953c:	f7ff ff2a 	bl	8029394 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 8029540:	f824 0c02 	strh.w	r0, [r4, #-2]
 8029544:	e7d7      	b.n	80294f6 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xee>
 8029546:	46a8      	mov	r8, r5
 8029548:	46cb      	mov	fp, r9
 802954a:	e7d4      	b.n	80294f6 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xee>
 802954c:	d10e      	bne.n	802956c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x164>
 802954e:	f898 3000 	ldrb.w	r3, [r8]
 8029552:	f8ba 2000 	ldrh.w	r2, [sl]
 8029556:	9804      	ldr	r0, [sp, #16]
 8029558:	091b      	lsrs	r3, r3, #4
 802955a:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 802955e:	9b03      	ldr	r3, [sp, #12]
 8029560:	9300      	str	r3, [sp, #0]
 8029562:	463b      	mov	r3, r7
 8029564:	f7ff ff16 	bl	8029394 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 8029568:	f82a 0b02 	strh.w	r0, [sl], #2
 802956c:	9b08      	ldr	r3, [sp, #32]
 802956e:	9a05      	ldr	r2, [sp, #20]
 8029570:	881c      	ldrh	r4, [r3, #0]
 8029572:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 8029576:	eba4 0409 	sub.w	r4, r4, r9
 802957a:	4413      	add	r3, r2
 802957c:	eb0a 0444 	add.w	r4, sl, r4, lsl #1
 8029580:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8029582:	fb93 f3f2 	sdiv	r3, r3, r2
 8029586:	441d      	add	r5, r3
 8029588:	e79c      	b.n	80294c4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xbc>
 802958a:	eb04 0b4b 	add.w	fp, r4, fp, lsl #1
 802958e:	45a3      	cmp	fp, r4
 8029590:	d938      	bls.n	8029604 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1fc>
 8029592:	9b06      	ldr	r3, [sp, #24]
 8029594:	b1f3      	cbz	r3, 80295d4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1cc>
 8029596:	782b      	ldrb	r3, [r5, #0]
 8029598:	f003 030f 	and.w	r3, r3, #15
 802959c:	1c6a      	adds	r2, r5, #1
 802959e:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 80295a2:	8023      	strh	r3, [r4, #0]
 80295a4:	f109 30ff 	add.w	r0, r9, #4294967295
 80295a8:	3402      	adds	r4, #2
 80295aa:	2801      	cmp	r0, #1
 80295ac:	4623      	mov	r3, r4
 80295ae:	f104 0404 	add.w	r4, r4, #4
 80295b2:	dd12      	ble.n	80295da <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1d2>
 80295b4:	7813      	ldrb	r3, [r2, #0]
 80295b6:	091b      	lsrs	r3, r3, #4
 80295b8:	3802      	subs	r0, #2
 80295ba:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 80295be:	f824 3c04 	strh.w	r3, [r4, #-4]
 80295c2:	f812 3b01 	ldrb.w	r3, [r2], #1
 80295c6:	f003 030f 	and.w	r3, r3, #15
 80295ca:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 80295ce:	f824 3c02 	strh.w	r3, [r4, #-2]
 80295d2:	e7ea      	b.n	80295aa <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1a2>
 80295d4:	462a      	mov	r2, r5
 80295d6:	4648      	mov	r0, r9
 80295d8:	e7e7      	b.n	80295aa <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1a2>
 80295da:	d106      	bne.n	80295ea <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e2>
 80295dc:	7812      	ldrb	r2, [r2, #0]
 80295de:	0912      	lsrs	r2, r2, #4
 80295e0:	3302      	adds	r3, #2
 80295e2:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 80295e6:	f823 2c02 	strh.w	r2, [r3, #-2]
 80295ea:	880c      	ldrh	r4, [r1, #0]
 80295ec:	9a05      	ldr	r2, [sp, #20]
 80295ee:	eba4 0409 	sub.w	r4, r4, r9
 80295f2:	eb03 0444 	add.w	r4, r3, r4, lsl #1
 80295f6:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 80295fa:	4413      	add	r3, r2
 80295fc:	fb93 f3f8 	sdiv	r3, r3, r8
 8029600:	441d      	add	r5, r3
 8029602:	e7c4      	b.n	802958e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x186>
 8029604:	4b03      	ldr	r3, [pc, #12]	; (8029614 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x20c>)
 8029606:	6818      	ldr	r0, [r3, #0]
 8029608:	6803      	ldr	r3, [r0, #0]
 802960a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 802960c:	4798      	blx	r3
 802960e:	b00f      	add	sp, #60	; 0x3c
 8029610:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8029614:	20006c34 	.word	0x20006c34
 8029618:	20006c2e 	.word	0x20006c2e

0802961c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>:
 802961c:	b5f0      	push	{r4, r5, r6, r7, lr}
 802961e:	f89d 5014 	ldrb.w	r5, [sp, #20]
 8029622:	2dff      	cmp	r5, #255	; 0xff
 8029624:	ea4f 2711 	mov.w	r7, r1, lsr #8
 8029628:	d10c      	bne.n	8029644 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x28>
 802962a:	2bff      	cmp	r3, #255	; 0xff
 802962c:	d10a      	bne.n	8029644 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x28>
 802962e:	4b25      	ldr	r3, [pc, #148]	; (80296c4 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0xa8>)
 8029630:	0948      	lsrs	r0, r1, #5
 8029632:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8029636:	403b      	ands	r3, r7
 8029638:	4318      	orrs	r0, r3
 802963a:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 802963e:	4308      	orrs	r0, r1
 8029640:	b280      	uxth	r0, r0
 8029642:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8029644:	fb15 f503 	smulbb	r5, r5, r3
 8029648:	b2ab      	uxth	r3, r5
 802964a:	1c5d      	adds	r5, r3, #1
 802964c:	eb05 2513 	add.w	r5, r5, r3, lsr #8
 8029650:	1214      	asrs	r4, r2, #8
 8029652:	f3c5 2507 	ubfx	r5, r5, #8, #8
 8029656:	fa1f fc85 	uxth.w	ip, r5
 802965a:	10d6      	asrs	r6, r2, #3
 802965c:	00d0      	lsls	r0, r2, #3
 802965e:	43ed      	mvns	r5, r5
 8029660:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 8029664:	f3c1 4207 	ubfx	r2, r1, #16, #8
 8029668:	b2eb      	uxtb	r3, r5
 802966a:	b2c0      	uxtb	r0, r0
 802966c:	fb12 f20c 	smulbb	r2, r2, ip
 8029670:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 8029674:	fb04 2403 	mla	r4, r4, r3, r2
 8029678:	ea40 1250 	orr.w	r2, r0, r0, lsr #5
 802967c:	b2c8      	uxtb	r0, r1
 802967e:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8029682:	b2fd      	uxtb	r5, r7
 8029684:	fb10 f00c 	smulbb	r0, r0, ip
 8029688:	b2a4      	uxth	r4, r4
 802968a:	fb02 0003 	mla	r0, r2, r3, r0
 802968e:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 8029692:	fb15 f50c 	smulbb	r5, r5, ip
 8029696:	fb06 5503 	mla	r5, r6, r3, r5
 802969a:	b283      	uxth	r3, r0
 802969c:	1c60      	adds	r0, r4, #1
 802969e:	b2ad      	uxth	r5, r5
 80296a0:	eb00 2414 	add.w	r4, r0, r4, lsr #8
 80296a4:	1c58      	adds	r0, r3, #1
 80296a6:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 80296aa:	1c6b      	adds	r3, r5, #1
 80296ac:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 80296b0:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 80296b4:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 80296b8:	096d      	lsrs	r5, r5, #5
 80296ba:	4320      	orrs	r0, r4
 80296bc:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80296c0:	4328      	orrs	r0, r5
 80296c2:	e7be      	b.n	8029642 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x26>
 80296c4:	00fff800 	.word	0x00fff800

080296c8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 80296c8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80296cc:	461c      	mov	r4, r3
 80296ce:	b08d      	sub	sp, #52	; 0x34
 80296d0:	460d      	mov	r5, r1
 80296d2:	9b16      	ldr	r3, [sp, #88]	; 0x58
 80296d4:	6861      	ldr	r1, [r4, #4]
 80296d6:	f89d 905c 	ldrb.w	r9, [sp, #92]	; 0x5c
 80296da:	4680      	mov	r8, r0
 80296dc:	6820      	ldr	r0, [r4, #0]
 80296de:	4616      	mov	r6, r2
 80296e0:	aa08      	add	r2, sp, #32
 80296e2:	c203      	stmia	r2!, {r0, r1}
 80296e4:	6818      	ldr	r0, [r3, #0]
 80296e6:	6859      	ldr	r1, [r3, #4]
 80296e8:	aa0a      	add	r2, sp, #40	; 0x28
 80296ea:	c203      	stmia	r2!, {r0, r1}
 80296ec:	a808      	add	r0, sp, #32
 80296ee:	f7ee fda7 	bl	8018240 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80296f2:	4621      	mov	r1, r4
 80296f4:	a80a      	add	r0, sp, #40	; 0x28
 80296f6:	f7ee fdcb 	bl	8018290 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80296fa:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	; 0x28
 80296fe:	f9bd 702e 	ldrsh.w	r7, [sp, #46]	; 0x2e
 8029702:	f9bd b02c 	ldrsh.w	fp, [sp, #44]	; 0x2c
 8029706:	f002 0301 	and.w	r3, r2, #1
 802970a:	9303      	str	r3, [sp, #12]
 802970c:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	; 0x24
 8029710:	f003 0101 	and.w	r1, r3, #1
 8029714:	9102      	str	r1, [sp, #8]
 8029716:	9802      	ldr	r0, [sp, #8]
 8029718:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	; 0x2a
 802971c:	4403      	add	r3, r0
 802971e:	fb01 2303 	mla	r3, r1, r3, r2
 8029722:	f04f 0a02 	mov.w	sl, #2
 8029726:	fb93 f3fa 	sdiv	r3, r3, sl
 802972a:	441d      	add	r5, r3
 802972c:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 8029730:	441a      	add	r2, r3
 8029732:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 8029736:	f8bd 3022 	ldrh.w	r3, [sp, #34]	; 0x22
 802973a:	4a3f      	ldr	r2, [pc, #252]	; (8029838 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x170>)
 802973c:	9205      	str	r2, [sp, #20]
 802973e:	4419      	add	r1, r3
 8029740:	6810      	ldr	r0, [r2, #0]
 8029742:	f8ad 102a 	strh.w	r1, [sp, #42]	; 0x2a
 8029746:	6803      	ldr	r3, [r0, #0]
 8029748:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 802974a:	4798      	blx	r3
 802974c:	4b3b      	ldr	r3, [pc, #236]	; (802983c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x174>)
 802974e:	f9bd 402a 	ldrsh.w	r4, [sp, #42]	; 0x2a
 8029752:	8819      	ldrh	r1, [r3, #0]
 8029754:	f9bd c028 	ldrsh.w	ip, [sp, #40]	; 0x28
 8029758:	fb01 c404 	mla	r4, r1, r4, ip
 802975c:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8029760:	434f      	muls	r7, r1
 8029762:	e9cd 3a06 	strd	r3, sl, [sp, #24]
 8029766:	eb04 0247 	add.w	r2, r4, r7, lsl #1
 802976a:	3604      	adds	r6, #4
 802976c:	9204      	str	r2, [sp, #16]
 802976e:	9b04      	ldr	r3, [sp, #16]
 8029770:	429c      	cmp	r4, r3
 8029772:	d258      	bcs.n	8029826 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x15e>
 8029774:	9b03      	ldr	r3, [sp, #12]
 8029776:	2b00      	cmp	r3, #0
 8029778:	d034      	beq.n	80297e4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x11c>
 802977a:	782b      	ldrb	r3, [r5, #0]
 802977c:	f003 030f 	and.w	r3, r3, #15
 8029780:	1c6f      	adds	r7, r5, #1
 8029782:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 8029786:	0e0b      	lsrs	r3, r1, #24
 8029788:	d006      	beq.n	8029798 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd0>
 802978a:	8822      	ldrh	r2, [r4, #0]
 802978c:	9300      	str	r3, [sp, #0]
 802978e:	4640      	mov	r0, r8
 8029790:	464b      	mov	r3, r9
 8029792:	f7ff ff43 	bl	802961c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 8029796:	8020      	strh	r0, [r4, #0]
 8029798:	3402      	adds	r4, #2
 802979a:	f10b 3aff 	add.w	sl, fp, #4294967295
 802979e:	f1ba 0f01 	cmp.w	sl, #1
 80297a2:	dd22      	ble.n	80297ea <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x122>
 80297a4:	783b      	ldrb	r3, [r7, #0]
 80297a6:	091b      	lsrs	r3, r3, #4
 80297a8:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 80297ac:	0e0b      	lsrs	r3, r1, #24
 80297ae:	d006      	beq.n	80297be <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xf6>
 80297b0:	8822      	ldrh	r2, [r4, #0]
 80297b2:	9300      	str	r3, [sp, #0]
 80297b4:	4640      	mov	r0, r8
 80297b6:	464b      	mov	r3, r9
 80297b8:	f7ff ff30 	bl	802961c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 80297bc:	8020      	strh	r0, [r4, #0]
 80297be:	f817 3b01 	ldrb.w	r3, [r7], #1
 80297c2:	f003 030f 	and.w	r3, r3, #15
 80297c6:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 80297ca:	0e0b      	lsrs	r3, r1, #24
 80297cc:	d006      	beq.n	80297dc <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x114>
 80297ce:	8862      	ldrh	r2, [r4, #2]
 80297d0:	9300      	str	r3, [sp, #0]
 80297d2:	4640      	mov	r0, r8
 80297d4:	464b      	mov	r3, r9
 80297d6:	f7ff ff21 	bl	802961c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 80297da:	8060      	strh	r0, [r4, #2]
 80297dc:	3404      	adds	r4, #4
 80297de:	f1aa 0a02 	sub.w	sl, sl, #2
 80297e2:	e7dc      	b.n	802979e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd6>
 80297e4:	462f      	mov	r7, r5
 80297e6:	46da      	mov	sl, fp
 80297e8:	e7d9      	b.n	802979e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd6>
 80297ea:	d10d      	bne.n	8029808 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x140>
 80297ec:	783b      	ldrb	r3, [r7, #0]
 80297ee:	091b      	lsrs	r3, r3, #4
 80297f0:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 80297f4:	0e0b      	lsrs	r3, r1, #24
 80297f6:	d006      	beq.n	8029806 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x13e>
 80297f8:	8822      	ldrh	r2, [r4, #0]
 80297fa:	9300      	str	r3, [sp, #0]
 80297fc:	4640      	mov	r0, r8
 80297fe:	464b      	mov	r3, r9
 8029800:	f7ff ff0c 	bl	802961c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 8029804:	8020      	strh	r0, [r4, #0]
 8029806:	3402      	adds	r4, #2
 8029808:	9b06      	ldr	r3, [sp, #24]
 802980a:	9a02      	ldr	r2, [sp, #8]
 802980c:	881b      	ldrh	r3, [r3, #0]
 802980e:	eba3 030b 	sub.w	r3, r3, fp
 8029812:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8029816:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	; 0x24
 802981a:	4413      	add	r3, r2
 802981c:	9a07      	ldr	r2, [sp, #28]
 802981e:	fb93 f3f2 	sdiv	r3, r3, r2
 8029822:	441d      	add	r5, r3
 8029824:	e7a3      	b.n	802976e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xa6>
 8029826:	9b05      	ldr	r3, [sp, #20]
 8029828:	6818      	ldr	r0, [r3, #0]
 802982a:	6803      	ldr	r3, [r0, #0]
 802982c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 802982e:	4798      	blx	r3
 8029830:	b00d      	add	sp, #52	; 0x34
 8029832:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8029836:	bf00      	nop
 8029838:	20006c34 	.word	0x20006c34
 802983c:	20006c2e 	.word	0x20006c2e

08029840 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>:
 8029840:	b570      	push	{r4, r5, r6, lr}
 8029842:	1214      	asrs	r4, r2, #8
 8029844:	788d      	ldrb	r5, [r1, #2]
 8029846:	f89d 6010 	ldrb.w	r6, [sp, #16]
 802984a:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 802984e:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 8029852:	fb15 f503 	smulbb	r5, r5, r3
 8029856:	fb04 5506 	mla	r5, r4, r6, r5
 802985a:	10d0      	asrs	r0, r2, #3
 802985c:	784c      	ldrb	r4, [r1, #1]
 802985e:	7809      	ldrb	r1, [r1, #0]
 8029860:	00d2      	lsls	r2, r2, #3
 8029862:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8029866:	b2d2      	uxtb	r2, r2
 8029868:	ea40 1090 	orr.w	r0, r0, r0, lsr #6
 802986c:	fb14 f403 	smulbb	r4, r4, r3
 8029870:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 8029874:	fb11 f303 	smulbb	r3, r1, r3
 8029878:	fb00 4406 	mla	r4, r0, r6, r4
 802987c:	fb02 3306 	mla	r3, r2, r6, r3
 8029880:	b2ad      	uxth	r5, r5
 8029882:	b29b      	uxth	r3, r3
 8029884:	b2a4      	uxth	r4, r4
 8029886:	1c68      	adds	r0, r5, #1
 8029888:	eb00 2515 	add.w	r5, r0, r5, lsr #8
 802988c:	1c62      	adds	r2, r4, #1
 802988e:	1c58      	adds	r0, r3, #1
 8029890:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8029894:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 8029898:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 802989c:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 80298a0:	0964      	lsrs	r4, r4, #5
 80298a2:	4328      	orrs	r0, r5
 80298a4:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 80298a8:	4320      	orrs	r0, r4
 80298aa:	bd70      	pop	{r4, r5, r6, pc}

080298ac <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 80298ac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80298b0:	b08f      	sub	sp, #60	; 0x3c
 80298b2:	461c      	mov	r4, r3
 80298b4:	f89d 7064 	ldrb.w	r7, [sp, #100]	; 0x64
 80298b8:	9b18      	ldr	r3, [sp, #96]	; 0x60
 80298ba:	4682      	mov	sl, r0
 80298bc:	460e      	mov	r6, r1
 80298be:	4615      	mov	r5, r2
 80298c0:	2f00      	cmp	r7, #0
 80298c2:	f000 8142 	beq.w	8029b4a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x29e>
 80298c6:	6820      	ldr	r0, [r4, #0]
 80298c8:	6861      	ldr	r1, [r4, #4]
 80298ca:	aa0a      	add	r2, sp, #40	; 0x28
 80298cc:	c203      	stmia	r2!, {r0, r1}
 80298ce:	6818      	ldr	r0, [r3, #0]
 80298d0:	6859      	ldr	r1, [r3, #4]
 80298d2:	aa0c      	add	r2, sp, #48	; 0x30
 80298d4:	c203      	stmia	r2!, {r0, r1}
 80298d6:	a80a      	add	r0, sp, #40	; 0x28
 80298d8:	f7ee fcb2 	bl	8018240 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80298dc:	4621      	mov	r1, r4
 80298de:	a80c      	add	r0, sp, #48	; 0x30
 80298e0:	f7ee fcd6 	bl	8018290 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80298e4:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	; 0x30
 80298e8:	f9bd b036 	ldrsh.w	fp, [sp, #54]	; 0x36
 80298ec:	f002 0301 	and.w	r3, r2, #1
 80298f0:	9306      	str	r3, [sp, #24]
 80298f2:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 80298f6:	f003 0101 	and.w	r1, r3, #1
 80298fa:	9105      	str	r1, [sp, #20]
 80298fc:	9805      	ldr	r0, [sp, #20]
 80298fe:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	; 0x32
 8029902:	4403      	add	r3, r0
 8029904:	fb01 2303 	mla	r3, r1, r3, r2
 8029908:	f04f 0802 	mov.w	r8, #2
 802990c:	fb93 f3f8 	sdiv	r3, r3, r8
 8029910:	441e      	add	r6, r3
 8029912:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8029916:	441a      	add	r2, r3
 8029918:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 802991c:	f8ad 2030 	strh.w	r2, [sp, #48]	; 0x30
 8029920:	4419      	add	r1, r3
 8029922:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 8029926:	9303      	str	r3, [sp, #12]
 8029928:	4b89      	ldr	r3, [pc, #548]	; (8029b50 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a4>)
 802992a:	f8ad 1032 	strh.w	r1, [sp, #50]	; 0x32
 802992e:	6818      	ldr	r0, [r3, #0]
 8029930:	6803      	ldr	r3, [r0, #0]
 8029932:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8029934:	4798      	blx	r3
 8029936:	4a87      	ldr	r2, [pc, #540]	; (8029b54 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a8>)
 8029938:	f9bd 4032 	ldrsh.w	r4, [sp, #50]	; 0x32
 802993c:	8813      	ldrh	r3, [r2, #0]
 802993e:	f9bd 9030 	ldrsh.w	r9, [sp, #48]	; 0x30
 8029942:	2fff      	cmp	r7, #255	; 0xff
 8029944:	fb03 9404 	mla	r4, r3, r4, r9
 8029948:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 802994c:	f105 0504 	add.w	r5, r5, #4
 8029950:	4694      	mov	ip, r2
 8029952:	fb03 f30b 	mul.w	r3, r3, fp
 8029956:	d071      	beq.n	8029a3c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x190>
 8029958:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 802995c:	43f9      	mvns	r1, r7
 802995e:	e9cd 3207 	strd	r3, r2, [sp, #28]
 8029962:	b2c9      	uxtb	r1, r1
 8029964:	9104      	str	r1, [sp, #16]
 8029966:	f8cd 8024 	str.w	r8, [sp, #36]	; 0x24
 802996a:	9b07      	ldr	r3, [sp, #28]
 802996c:	42a3      	cmp	r3, r4
 802996e:	f240 80e7 	bls.w	8029b40 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x294>
 8029972:	9b06      	ldr	r3, [sp, #24]
 8029974:	2b00      	cmp	r3, #0
 8029976:	d03d      	beq.n	80299f4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x148>
 8029978:	7831      	ldrb	r1, [r6, #0]
 802997a:	9b04      	ldr	r3, [sp, #16]
 802997c:	8822      	ldrh	r2, [r4, #0]
 802997e:	9300      	str	r3, [sp, #0]
 8029980:	f001 010f 	and.w	r1, r1, #15
 8029984:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8029988:	463b      	mov	r3, r7
 802998a:	4429      	add	r1, r5
 802998c:	4650      	mov	r0, sl
 802998e:	f7ff ff57 	bl	8029840 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 8029992:	9b03      	ldr	r3, [sp, #12]
 8029994:	f824 0b02 	strh.w	r0, [r4], #2
 8029998:	f106 0801 	add.w	r8, r6, #1
 802999c:	f103 3bff 	add.w	fp, r3, #4294967295
 80299a0:	f1bb 0f01 	cmp.w	fp, #1
 80299a4:	46a1      	mov	r9, r4
 80299a6:	f104 0404 	add.w	r4, r4, #4
 80299aa:	dd27      	ble.n	80299fc <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x150>
 80299ac:	f898 1000 	ldrb.w	r1, [r8]
 80299b0:	9b04      	ldr	r3, [sp, #16]
 80299b2:	f834 2c04 	ldrh.w	r2, [r4, #-4]
 80299b6:	9300      	str	r3, [sp, #0]
 80299b8:	0909      	lsrs	r1, r1, #4
 80299ba:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 80299be:	463b      	mov	r3, r7
 80299c0:	4429      	add	r1, r5
 80299c2:	4650      	mov	r0, sl
 80299c4:	f7ff ff3c 	bl	8029840 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 80299c8:	f824 0c04 	strh.w	r0, [r4, #-4]
 80299cc:	f818 1b01 	ldrb.w	r1, [r8], #1
 80299d0:	9b04      	ldr	r3, [sp, #16]
 80299d2:	f834 2c02 	ldrh.w	r2, [r4, #-2]
 80299d6:	9300      	str	r3, [sp, #0]
 80299d8:	f001 010f 	and.w	r1, r1, #15
 80299dc:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 80299e0:	463b      	mov	r3, r7
 80299e2:	4429      	add	r1, r5
 80299e4:	4650      	mov	r0, sl
 80299e6:	f7ff ff2b 	bl	8029840 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 80299ea:	f1ab 0b02 	sub.w	fp, fp, #2
 80299ee:	f824 0c02 	strh.w	r0, [r4, #-2]
 80299f2:	e7d5      	b.n	80299a0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf4>
 80299f4:	46b0      	mov	r8, r6
 80299f6:	f8dd b00c 	ldr.w	fp, [sp, #12]
 80299fa:	e7d1      	b.n	80299a0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf4>
 80299fc:	d10f      	bne.n	8029a1e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x172>
 80299fe:	f898 1000 	ldrb.w	r1, [r8]
 8029a02:	9b04      	ldr	r3, [sp, #16]
 8029a04:	f8b9 2000 	ldrh.w	r2, [r9]
 8029a08:	9300      	str	r3, [sp, #0]
 8029a0a:	0909      	lsrs	r1, r1, #4
 8029a0c:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8029a10:	463b      	mov	r3, r7
 8029a12:	4429      	add	r1, r5
 8029a14:	4650      	mov	r0, sl
 8029a16:	f7ff ff13 	bl	8029840 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 8029a1a:	f829 0b02 	strh.w	r0, [r9], #2
 8029a1e:	9b08      	ldr	r3, [sp, #32]
 8029a20:	9a05      	ldr	r2, [sp, #20]
 8029a22:	881c      	ldrh	r4, [r3, #0]
 8029a24:	9b03      	ldr	r3, [sp, #12]
 8029a26:	1ae4      	subs	r4, r4, r3
 8029a28:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 8029a2c:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 8029a30:	4413      	add	r3, r2
 8029a32:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8029a34:	fb93 f3f2 	sdiv	r3, r3, r2
 8029a38:	441e      	add	r6, r3
 8029a3a:	e796      	b.n	802996a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xbe>
 8029a3c:	4f46      	ldr	r7, [pc, #280]	; (8029b58 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2ac>)
 8029a3e:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8029a42:	42a3      	cmp	r3, r4
 8029a44:	d97c      	bls.n	8029b40 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x294>
 8029a46:	9a06      	ldr	r2, [sp, #24]
 8029a48:	2a00      	cmp	r2, #0
 8029a4a:	d054      	beq.n	8029af6 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24a>
 8029a4c:	7830      	ldrb	r0, [r6, #0]
 8029a4e:	f000 000f 	and.w	r0, r0, #15
 8029a52:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8029a56:	eb05 0e00 	add.w	lr, r5, r0
 8029a5a:	5c28      	ldrb	r0, [r5, r0]
 8029a5c:	f89e 2002 	ldrb.w	r2, [lr, #2]
 8029a60:	f89e e001 	ldrb.w	lr, [lr, #1]
 8029a64:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8029a68:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 8029a6c:	ea07 2202 	and.w	r2, r7, r2, lsl #8
 8029a70:	ea42 020e 	orr.w	r2, r2, lr
 8029a74:	ea42 02d0 	orr.w	r2, r2, r0, lsr #3
 8029a78:	f824 2b02 	strh.w	r2, [r4], #2
 8029a7c:	9a03      	ldr	r2, [sp, #12]
 8029a7e:	1c71      	adds	r1, r6, #1
 8029a80:	f102 3eff 	add.w	lr, r2, #4294967295
 8029a84:	f1be 0f01 	cmp.w	lr, #1
 8029a88:	4620      	mov	r0, r4
 8029a8a:	f104 0404 	add.w	r4, r4, #4
 8029a8e:	dd36      	ble.n	8029afe <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x252>
 8029a90:	7808      	ldrb	r0, [r1, #0]
 8029a92:	0900      	lsrs	r0, r0, #4
 8029a94:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8029a98:	eb05 0a00 	add.w	sl, r5, r0
 8029a9c:	f1ae 0e02 	sub.w	lr, lr, #2
 8029aa0:	f89a 2001 	ldrb.w	r2, [sl, #1]
 8029aa4:	f89a 9002 	ldrb.w	r9, [sl, #2]
 8029aa8:	00d2      	lsls	r2, r2, #3
 8029aaa:	ea07 2909 	and.w	r9, r7, r9, lsl #8
 8029aae:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8029ab2:	ea49 0202 	orr.w	r2, r9, r2
 8029ab6:	f815 9000 	ldrb.w	r9, [r5, r0]
 8029aba:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 8029abe:	f824 2c04 	strh.w	r2, [r4, #-4]
 8029ac2:	f811 0b01 	ldrb.w	r0, [r1], #1
 8029ac6:	f000 000f 	and.w	r0, r0, #15
 8029aca:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8029ace:	eb05 0a00 	add.w	sl, r5, r0
 8029ad2:	f89a 2001 	ldrb.w	r2, [sl, #1]
 8029ad6:	f89a 9002 	ldrb.w	r9, [sl, #2]
 8029ada:	00d2      	lsls	r2, r2, #3
 8029adc:	ea07 2909 	and.w	r9, r7, r9, lsl #8
 8029ae0:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8029ae4:	ea49 0202 	orr.w	r2, r9, r2
 8029ae8:	f815 9000 	ldrb.w	r9, [r5, r0]
 8029aec:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 8029af0:	f824 2c02 	strh.w	r2, [r4, #-2]
 8029af4:	e7c6      	b.n	8029a84 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d8>
 8029af6:	4631      	mov	r1, r6
 8029af8:	f8dd e00c 	ldr.w	lr, [sp, #12]
 8029afc:	e7c2      	b.n	8029a84 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d8>
 8029afe:	d111      	bne.n	8029b24 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x278>
 8029b00:	7809      	ldrb	r1, [r1, #0]
 8029b02:	0909      	lsrs	r1, r1, #4
 8029b04:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8029b08:	186c      	adds	r4, r5, r1
 8029b0a:	5c69      	ldrb	r1, [r5, r1]
 8029b0c:	78a2      	ldrb	r2, [r4, #2]
 8029b0e:	7864      	ldrb	r4, [r4, #1]
 8029b10:	00e4      	lsls	r4, r4, #3
 8029b12:	ea07 2202 	and.w	r2, r7, r2, lsl #8
 8029b16:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 8029b1a:	4322      	orrs	r2, r4
 8029b1c:	ea42 02d1 	orr.w	r2, r2, r1, lsr #3
 8029b20:	f820 2b02 	strh.w	r2, [r0], #2
 8029b24:	9a03      	ldr	r2, [sp, #12]
 8029b26:	f8bc 4000 	ldrh.w	r4, [ip]
 8029b2a:	9905      	ldr	r1, [sp, #20]
 8029b2c:	1aa4      	subs	r4, r4, r2
 8029b2e:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
 8029b32:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8029b36:	440a      	add	r2, r1
 8029b38:	fb92 f2f8 	sdiv	r2, r2, r8
 8029b3c:	4416      	add	r6, r2
 8029b3e:	e780      	b.n	8029a42 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x196>
 8029b40:	4b03      	ldr	r3, [pc, #12]	; (8029b50 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a4>)
 8029b42:	6818      	ldr	r0, [r3, #0]
 8029b44:	6803      	ldr	r3, [r0, #0]
 8029b46:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8029b48:	4798      	blx	r3
 8029b4a:	b00f      	add	sp, #60	; 0x3c
 8029b4c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8029b50:	20006c34 	.word	0x20006c34
 8029b54:	20006c2e 	.word	0x20006c2e
 8029b58:	fffff800 	.word	0xfffff800

08029b5c <CRC_Lock>:
 8029b5c:	b530      	push	{r4, r5, lr}
 8029b5e:	4a20      	ldr	r2, [pc, #128]	; (8029be0 <CRC_Lock+0x84>)
 8029b60:	6813      	ldr	r3, [r2, #0]
 8029b62:	f023 0301 	bic.w	r3, r3, #1
 8029b66:	6013      	str	r3, [r2, #0]
 8029b68:	4b1e      	ldr	r3, [pc, #120]	; (8029be4 <CRC_Lock+0x88>)
 8029b6a:	681a      	ldr	r2, [r3, #0]
 8029b6c:	f64f 74f0 	movw	r4, #65520	; 0xfff0
 8029b70:	4022      	ands	r2, r4
 8029b72:	f24c 2540 	movw	r5, #49728	; 0xc240
 8029b76:	42aa      	cmp	r2, r5
 8029b78:	d005      	beq.n	8029b86 <CRC_Lock+0x2a>
 8029b7a:	681b      	ldr	r3, [r3, #0]
 8029b7c:	f24c 2270 	movw	r2, #49776	; 0xc270
 8029b80:	4023      	ands	r3, r4
 8029b82:	4293      	cmp	r3, r2
 8029b84:	d124      	bne.n	8029bd0 <CRC_Lock+0x74>
 8029b86:	4b18      	ldr	r3, [pc, #96]	; (8029be8 <CRC_Lock+0x8c>)
 8029b88:	681b      	ldr	r3, [r3, #0]
 8029b8a:	bb0b      	cbnz	r3, 8029bd0 <CRC_Lock+0x74>
 8029b8c:	4b17      	ldr	r3, [pc, #92]	; (8029bec <CRC_Lock+0x90>)
 8029b8e:	681a      	ldr	r2, [r3, #0]
 8029b90:	f3c2 020b 	ubfx	r2, r2, #0, #12
 8029b94:	f5b2 6f8a 	cmp.w	r2, #1104	; 0x450
 8029b98:	d00d      	beq.n	8029bb6 <CRC_Lock+0x5a>
 8029b9a:	681a      	ldr	r2, [r3, #0]
 8029b9c:	f240 4483 	movw	r4, #1155	; 0x483
 8029ba0:	f3c2 020b 	ubfx	r2, r2, #0, #12
 8029ba4:	42a2      	cmp	r2, r4
 8029ba6:	d006      	beq.n	8029bb6 <CRC_Lock+0x5a>
 8029ba8:	681b      	ldr	r3, [r3, #0]
 8029baa:	f240 4285 	movw	r2, #1157	; 0x485
 8029bae:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8029bb2:	4293      	cmp	r3, r2
 8029bb4:	d10c      	bne.n	8029bd0 <CRC_Lock+0x74>
 8029bb6:	4b0e      	ldr	r3, [pc, #56]	; (8029bf0 <CRC_Lock+0x94>)
 8029bb8:	2201      	movs	r2, #1
 8029bba:	601a      	str	r2, [r3, #0]
 8029bbc:	681a      	ldr	r2, [r3, #0]
 8029bbe:	2a00      	cmp	r2, #0
 8029bc0:	d1fc      	bne.n	8029bbc <CRC_Lock+0x60>
 8029bc2:	4b0c      	ldr	r3, [pc, #48]	; (8029bf4 <CRC_Lock+0x98>)
 8029bc4:	6018      	str	r0, [r3, #0]
 8029bc6:	6818      	ldr	r0, [r3, #0]
 8029bc8:	1a43      	subs	r3, r0, r1
 8029bca:	4258      	negs	r0, r3
 8029bcc:	4158      	adcs	r0, r3
 8029bce:	bd30      	pop	{r4, r5, pc}
 8029bd0:	4b09      	ldr	r3, [pc, #36]	; (8029bf8 <CRC_Lock+0x9c>)
 8029bd2:	2201      	movs	r2, #1
 8029bd4:	601a      	str	r2, [r3, #0]
 8029bd6:	681a      	ldr	r2, [r3, #0]
 8029bd8:	2a00      	cmp	r2, #0
 8029bda:	d1fc      	bne.n	8029bd6 <CRC_Lock+0x7a>
 8029bdc:	4b07      	ldr	r3, [pc, #28]	; (8029bfc <CRC_Lock+0xa0>)
 8029bde:	e7f1      	b.n	8029bc4 <CRC_Lock+0x68>
 8029be0:	e0002000 	.word	0xe0002000
 8029be4:	e000ed00 	.word	0xe000ed00
 8029be8:	e0042000 	.word	0xe0042000
 8029bec:	5c001000 	.word	0x5c001000
 8029bf0:	58024c08 	.word	0x58024c08
 8029bf4:	58024c00 	.word	0x58024c00
 8029bf8:	40023008 	.word	0x40023008
 8029bfc:	40023000 	.word	0x40023000

08029c00 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>:
 8029c00:	6101      	str	r1, [r0, #16]
 8029c02:	4770      	bx	lr

08029c04 <_ZN8touchgfx8Gestures4tickEv>:
 8029c04:	7b83      	ldrb	r3, [r0, #14]
 8029c06:	b14b      	cbz	r3, 8029c1c <_ZN8touchgfx8Gestures4tickEv+0x18>
 8029c08:	8903      	ldrh	r3, [r0, #8]
 8029c0a:	3301      	adds	r3, #1
 8029c0c:	b29b      	uxth	r3, r3
 8029c0e:	2b07      	cmp	r3, #7
 8029c10:	8103      	strh	r3, [r0, #8]
 8029c12:	bf81      	itttt	hi
 8029c14:	2300      	movhi	r3, #0
 8029c16:	8143      	strhhi	r3, [r0, #10]
 8029c18:	8183      	strhhi	r3, [r0, #12]
 8029c1a:	7383      	strbhi	r3, [r0, #14]
 8029c1c:	4770      	bx	lr
	...

08029c20 <_ZN8touchgfx8Gestures17registerDragEventEtttt>:
 8029c20:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8029c24:	4698      	mov	r8, r3
 8029c26:	8883      	ldrh	r3, [r0, #4]
 8029c28:	f8ad 3006 	strh.w	r3, [sp, #6]
 8029c2c:	eba8 0303 	sub.w	r3, r8, r3
 8029c30:	b21b      	sxth	r3, r3
 8029c32:	4604      	mov	r4, r0
 8029c34:	2b00      	cmp	r3, #0
 8029c36:	4617      	mov	r7, r2
 8029c38:	4a18      	ldr	r2, [pc, #96]	; (8029c9c <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x7c>)
 8029c3a:	9200      	str	r2, [sp, #0]
 8029c3c:	bfb8      	it	lt
 8029c3e:	425b      	neglt	r3, r3
 8029c40:	8aa2      	ldrh	r2, [r4, #20]
 8029c42:	f8bd 5028 	ldrh.w	r5, [sp, #40]	; 0x28
 8029c46:	f8ad 800a 	strh.w	r8, [sp, #10]
 8029c4a:	b21b      	sxth	r3, r3
 8029c4c:	460e      	mov	r6, r1
 8029c4e:	4293      	cmp	r3, r2
 8029c50:	88c1      	ldrh	r1, [r0, #6]
 8029c52:	f8ad 1008 	strh.w	r1, [sp, #8]
 8029c56:	f04f 0000 	mov.w	r0, #0
 8029c5a:	f88d 0004 	strb.w	r0, [sp, #4]
 8029c5e:	f8ad 500c 	strh.w	r5, [sp, #12]
 8029c62:	dc07      	bgt.n	8029c74 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x54>
 8029c64:	1a69      	subs	r1, r5, r1
 8029c66:	b209      	sxth	r1, r1
 8029c68:	2900      	cmp	r1, #0
 8029c6a:	bfb8      	it	lt
 8029c6c:	4249      	neglt	r1, r1
 8029c6e:	b209      	sxth	r1, r1
 8029c70:	428a      	cmp	r2, r1
 8029c72:	da10      	bge.n	8029c96 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x76>
 8029c74:	6920      	ldr	r0, [r4, #16]
 8029c76:	6803      	ldr	r3, [r0, #0]
 8029c78:	4669      	mov	r1, sp
 8029c7a:	685b      	ldr	r3, [r3, #4]
 8029c7c:	4798      	blx	r3
 8029c7e:	eba8 0606 	sub.w	r6, r8, r6
 8029c82:	2300      	movs	r3, #0
 8029c84:	1bef      	subs	r7, r5, r7
 8029c86:	2001      	movs	r0, #1
 8029c88:	8123      	strh	r3, [r4, #8]
 8029c8a:	8166      	strh	r6, [r4, #10]
 8029c8c:	81a7      	strh	r7, [r4, #12]
 8029c8e:	f8a4 8004 	strh.w	r8, [r4, #4]
 8029c92:	80e5      	strh	r5, [r4, #6]
 8029c94:	73a0      	strb	r0, [r4, #14]
 8029c96:	b004      	add	sp, #16
 8029c98:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8029c9c:	0802fe6c 	.word	0x0802fe6c

08029ca0 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>:
 8029ca0:	b5f0      	push	{r4, r5, r6, r7, lr}
 8029ca2:	461e      	mov	r6, r3
 8029ca4:	1e4b      	subs	r3, r1, #1
 8029ca6:	2b01      	cmp	r3, #1
 8029ca8:	b085      	sub	sp, #20
 8029caa:	4604      	mov	r4, r0
 8029cac:	460d      	mov	r5, r1
 8029cae:	4617      	mov	r7, r2
 8029cb0:	d84b      	bhi.n	8029d4a <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xaa>
 8029cb2:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8029cb6:	1cd3      	adds	r3, r2, #3
 8029cb8:	b29b      	uxth	r3, r3
 8029cba:	2b06      	cmp	r3, #6
 8029cbc:	d916      	bls.n	8029cec <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x4c>
 8029cbe:	f8df c0a0 	ldr.w	ip, [pc, #160]	; 8029d60 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 8029cc2:	f8cd c004 	str.w	ip, [sp, #4]
 8029cc6:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8029cca:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8029cce:	6900      	ldr	r0, [r0, #16]
 8029cd0:	f8ad 100c 	strh.w	r1, [sp, #12]
 8029cd4:	f04f 0c00 	mov.w	ip, #0
 8029cd8:	f88d c008 	strb.w	ip, [sp, #8]
 8029cdc:	f8ad 200a 	strh.w	r2, [sp, #10]
 8029ce0:	f8ad 300e 	strh.w	r3, [sp, #14]
 8029ce4:	6803      	ldr	r3, [r0, #0]
 8029ce6:	a901      	add	r1, sp, #4
 8029ce8:	689b      	ldr	r3, [r3, #8]
 8029cea:	4798      	blx	r3
 8029cec:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8029cf0:	1cd3      	adds	r3, r2, #3
 8029cf2:	b29b      	uxth	r3, r3
 8029cf4:	2b06      	cmp	r3, #6
 8029cf6:	d916      	bls.n	8029d26 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 8029cf8:	f8df c064 	ldr.w	ip, [pc, #100]	; 8029d60 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 8029cfc:	f8cd c004 	str.w	ip, [sp, #4]
 8029d00:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8029d04:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8029d08:	6920      	ldr	r0, [r4, #16]
 8029d0a:	f8ad 100c 	strh.w	r1, [sp, #12]
 8029d0e:	f04f 0c01 	mov.w	ip, #1
 8029d12:	f88d c008 	strb.w	ip, [sp, #8]
 8029d16:	f8ad 200a 	strh.w	r2, [sp, #10]
 8029d1a:	f8ad 300e 	strh.w	r3, [sp, #14]
 8029d1e:	6803      	ldr	r3, [r0, #0]
 8029d20:	a901      	add	r1, sp, #4
 8029d22:	689b      	ldr	r3, [r3, #8]
 8029d24:	4798      	blx	r3
 8029d26:	4b0d      	ldr	r3, [pc, #52]	; (8029d5c <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xbc>)
 8029d28:	9301      	str	r3, [sp, #4]
 8029d2a:	6920      	ldr	r0, [r4, #16]
 8029d2c:	f88d 5008 	strb.w	r5, [sp, #8]
 8029d30:	2300      	movs	r3, #0
 8029d32:	f8ad 700a 	strh.w	r7, [sp, #10]
 8029d36:	f8ad 600c 	strh.w	r6, [sp, #12]
 8029d3a:	f8ad 300e 	strh.w	r3, [sp, #14]
 8029d3e:	6803      	ldr	r3, [r0, #0]
 8029d40:	a901      	add	r1, sp, #4
 8029d42:	681b      	ldr	r3, [r3, #0]
 8029d44:	4798      	blx	r3
 8029d46:	b005      	add	sp, #20
 8029d48:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8029d4a:	2900      	cmp	r1, #0
 8029d4c:	d1eb      	bne.n	8029d26 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 8029d4e:	80a2      	strh	r2, [r4, #4]
 8029d50:	80c6      	strh	r6, [r0, #6]
 8029d52:	60a1      	str	r1, [r4, #8]
 8029d54:	81a1      	strh	r1, [r4, #12]
 8029d56:	73a1      	strb	r1, [r4, #14]
 8029d58:	e7e5      	b.n	8029d26 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 8029d5a:	bf00      	nop
 8029d5c:	0802fe58 	.word	0x0802fe58
 8029d60:	0802fe80 	.word	0x0802fe80

08029d64 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.1>:
 8029d64:	10c9      	asrs	r1, r1, #3
 8029d66:	2900      	cmp	r1, #0
 8029d68:	bfb8      	it	lt
 8029d6a:	4249      	neglt	r1, r1
 8029d6c:	2801      	cmp	r0, #1
 8029d6e:	d108      	bne.n	8029d82 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.1+0x1e>
 8029d70:	f3c1 0008 	ubfx	r0, r1, #0, #9
 8029d74:	f5b0 7f80 	cmp.w	r0, #256	; 0x100
 8029d78:	4601      	mov	r1, r0
 8029d7a:	dd02      	ble.n	8029d82 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.1+0x1e>
 8029d7c:	f5c0 7000 	rsb	r0, r0, #512	; 0x200
 8029d80:	4770      	bx	lr
 8029d82:	29ff      	cmp	r1, #255	; 0xff
 8029d84:	bfa8      	it	ge
 8029d86:	21ff      	movge	r1, #255	; 0xff
 8029d88:	4608      	mov	r0, r1
 8029d8a:	4770      	bx	lr

08029d8c <_ZN8touchgfx10Rasterizer6lineToEii>:
 8029d8c:	b410      	push	{r4}
 8029d8e:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
 8029d92:	429c      	cmp	r4, r3
 8029d94:	d803      	bhi.n	8029d9e <_ZN8touchgfx10Rasterizer6lineToEii+0x12>
 8029d96:	f85d 4b04 	ldr.w	r4, [sp], #4
 8029d9a:	f7ec b94d 	b.w	8016038 <_ZN8touchgfx7Outline6lineToEii>
 8029d9e:	f85d 4b04 	ldr.w	r4, [sp], #4
 8029da2:	4770      	bx	lr

08029da4 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh>:
 8029da4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8029da8:	b08b      	sub	sp, #44	; 0x2c
 8029daa:	e9cd 2306 	strd	r2, r3, [sp, #24]
 8029dae:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 8029db2:	9308      	str	r3, [sp, #32]
 8029db4:	4606      	mov	r6, r0
 8029db6:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 8029dba:	9309      	str	r3, [sp, #36]	; 0x24
 8029dbc:	468a      	mov	sl, r1
 8029dbe:	f7ec faa8 	bl	8016312 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv>
 8029dc2:	68b5      	ldr	r5, [r6, #8]
 8029dc4:	4604      	mov	r4, r0
 8029dc6:	2d00      	cmp	r5, #0
 8029dc8:	d044      	beq.n	8029e54 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
 8029dca:	6873      	ldr	r3, [r6, #4]
 8029dcc:	42ab      	cmp	r3, r5
 8029dce:	d33d      	bcc.n	8029e4c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xa8>
 8029dd0:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 8029dd4:	f9b6 2034 	ldrsh.w	r2, [r6, #52]	; 0x34
 8029dd8:	eb02 0b03 	add.w	fp, r2, r3
 8029ddc:	e9dd 1206 	ldrd	r1, r2, [sp, #24]
 8029de0:	fb02 1203 	mla	r2, r2, r3, r1
 8029de4:	9205      	str	r2, [sp, #20]
 8029de6:	1e6a      	subs	r2, r5, #1
 8029de8:	9204      	str	r2, [sp, #16]
 8029dea:	f04f 0800 	mov.w	r8, #0
 8029dee:	f9b4 9002 	ldrsh.w	r9, [r4, #2]
 8029df2:	f9b4 7000 	ldrsh.w	r7, [r4]
 8029df6:	454b      	cmp	r3, r9
 8029df8:	463a      	mov	r2, r7
 8029dfa:	d008      	beq.n	8029e0e <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x6a>
 8029dfc:	f9b6 3034 	ldrsh.w	r3, [r6, #52]	; 0x34
 8029e00:	eb03 0b09 	add.w	fp, r3, r9
 8029e04:	e9dd 1306 	ldrd	r1, r3, [sp, #24]
 8029e08:	fb03 1309 	mla	r3, r3, r9, r1
 8029e0c:	9305      	str	r3, [sp, #20]
 8029e0e:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 8029e12:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 8029e16:	4498      	add	r8, r3
 8029e18:	9b04      	ldr	r3, [sp, #16]
 8029e1a:	3b01      	subs	r3, #1
 8029e1c:	9304      	str	r3, [sp, #16]
 8029e1e:	9b04      	ldr	r3, [sp, #16]
 8029e20:	3301      	adds	r3, #1
 8029e22:	d015      	beq.n	8029e50 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xac>
 8029e24:	f934 3f08 	ldrsh.w	r3, [r4, #8]!
 8029e28:	42bb      	cmp	r3, r7
 8029e2a:	d117      	bne.n	8029e5c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb8>
 8029e2c:	f9b4 0002 	ldrsh.w	r0, [r4, #2]
 8029e30:	9b04      	ldr	r3, [sp, #16]
 8029e32:	4548      	cmp	r0, r9
 8029e34:	f103 33ff 	add.w	r3, r3, #4294967295
 8029e38:	d17f      	bne.n	8029f3a <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x196>
 8029e3a:	f9b4 0006 	ldrsh.w	r0, [r4, #6]
 8029e3e:	4401      	add	r1, r0
 8029e40:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8029e44:	4480      	add	r8, r0
 8029e46:	e7e9      	b.n	8029e1c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x78>
 8029e48:	461f      	mov	r7, r3
 8029e4a:	e044      	b.n	8029ed6 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x132>
 8029e4c:	2000      	movs	r0, #0
 8029e4e:	e002      	b.n	8029e56 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb2>
 8029e50:	2900      	cmp	r1, #0
 8029e52:	d16f      	bne.n	8029f34 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x190>
 8029e54:	2001      	movs	r0, #1
 8029e56:	b00b      	add	sp, #44	; 0x2c
 8029e58:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8029e5c:	2900      	cmp	r1, #0
 8029e5e:	d030      	beq.n	8029ec2 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x11e>
 8029e60:	2f00      	cmp	r7, #0
 8029e62:	db29      	blt.n	8029eb8 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x114>
 8029e64:	f9b6 3036 	ldrsh.w	r3, [r6, #54]	; 0x36
 8029e68:	42bb      	cmp	r3, r7
 8029e6a:	dd25      	ble.n	8029eb8 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x114>
 8029e6c:	ebc1 1188 	rsb	r1, r1, r8, lsl #6
 8029e70:	f896 0030 	ldrb.w	r0, [r6, #48]	; 0x30
 8029e74:	f7ff ff76 	bl	8029d64 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.1>
 8029e78:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8029e7a:	fb10 f003 	smulbb	r0, r0, r3
 8029e7e:	b280      	uxth	r0, r0
 8029e80:	1c41      	adds	r1, r0, #1
 8029e82:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 8029e86:	1209      	asrs	r1, r1, #8
 8029e88:	f011 0fff 	tst.w	r1, #255	; 0xff
 8029e8c:	d014      	beq.n	8029eb8 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x114>
 8029e8e:	9808      	ldr	r0, [sp, #32]
 8029e90:	8e73      	ldrh	r3, [r6, #50]	; 0x32
 8029e92:	b2c9      	uxtb	r1, r1
 8029e94:	b2ba      	uxth	r2, r7
 8029e96:	9102      	str	r1, [sp, #8]
 8029e98:	2101      	movs	r1, #1
 8029e9a:	4413      	add	r3, r2
 8029e9c:	9101      	str	r1, [sp, #4]
 8029e9e:	4402      	add	r2, r0
 8029ea0:	fa0f f18b 	sxth.w	r1, fp
 8029ea4:	f8da 0000 	ldr.w	r0, [sl]
 8029ea8:	9100      	str	r1, [sp, #0]
 8029eaa:	6941      	ldr	r1, [r0, #20]
 8029eac:	b21b      	sxth	r3, r3
 8029eae:	460d      	mov	r5, r1
 8029eb0:	b212      	sxth	r2, r2
 8029eb2:	9905      	ldr	r1, [sp, #20]
 8029eb4:	4650      	mov	r0, sl
 8029eb6:	47a8      	blx	r5
 8029eb8:	9b04      	ldr	r3, [sp, #16]
 8029eba:	3301      	adds	r3, #1
 8029ebc:	f107 0201 	add.w	r2, r7, #1
 8029ec0:	d0c8      	beq.n	8029e54 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
 8029ec2:	f9b4 7000 	ldrsh.w	r7, [r4]
 8029ec6:	1abb      	subs	r3, r7, r2
 8029ec8:	2b00      	cmp	r3, #0
 8029eca:	dd31      	ble.n	8029f30 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 8029ecc:	2a00      	cmp	r2, #0
 8029ece:	dabb      	bge.n	8029e48 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xa4>
 8029ed0:	2f00      	cmp	r7, #0
 8029ed2:	dd2d      	ble.n	8029f30 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 8029ed4:	2200      	movs	r2, #0
 8029ed6:	f9b6 3036 	ldrsh.w	r3, [r6, #54]	; 0x36
 8029eda:	19d1      	adds	r1, r2, r7
 8029edc:	4299      	cmp	r1, r3
 8029ede:	db02      	blt.n	8029ee6 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x142>
 8029ee0:	1a9f      	subs	r7, r3, r2
 8029ee2:	2f00      	cmp	r7, #0
 8029ee4:	dd24      	ble.n	8029f30 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 8029ee6:	ea4f 1188 	mov.w	r1, r8, lsl #6
 8029eea:	f896 0030 	ldrb.w	r0, [r6, #48]	; 0x30
 8029eee:	f7ff ff39 	bl	8029d64 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.1>
 8029ef2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8029ef4:	fb10 f003 	smulbb	r0, r0, r3
 8029ef8:	b280      	uxth	r0, r0
 8029efa:	1c41      	adds	r1, r0, #1
 8029efc:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 8029f00:	1209      	asrs	r1, r1, #8
 8029f02:	f011 0fff 	tst.w	r1, #255	; 0xff
 8029f06:	d013      	beq.n	8029f30 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 8029f08:	9808      	ldr	r0, [sp, #32]
 8029f0a:	8e73      	ldrh	r3, [r6, #50]	; 0x32
 8029f0c:	b292      	uxth	r2, r2
 8029f0e:	b2c9      	uxtb	r1, r1
 8029f10:	4413      	add	r3, r2
 8029f12:	9102      	str	r1, [sp, #8]
 8029f14:	4402      	add	r2, r0
 8029f16:	b23f      	sxth	r7, r7
 8029f18:	f8da 0000 	ldr.w	r0, [sl]
 8029f1c:	9701      	str	r7, [sp, #4]
 8029f1e:	fa0f f18b 	sxth.w	r1, fp
 8029f22:	9100      	str	r1, [sp, #0]
 8029f24:	6947      	ldr	r7, [r0, #20]
 8029f26:	9905      	ldr	r1, [sp, #20]
 8029f28:	b21b      	sxth	r3, r3
 8029f2a:	b212      	sxth	r2, r2
 8029f2c:	4650      	mov	r0, sl
 8029f2e:	47b8      	blx	r7
 8029f30:	464b      	mov	r3, r9
 8029f32:	e75c      	b.n	8029dee <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x4a>
 8029f34:	2f00      	cmp	r7, #0
 8029f36:	da95      	bge.n	8029e64 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xc0>
 8029f38:	e78c      	b.n	8029e54 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
 8029f3a:	2900      	cmp	r1, #0
 8029f3c:	d0f8      	beq.n	8029f30 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 8029f3e:	e78f      	b.n	8029e60 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xbc>

08029f40 <_ZN8touchgfx6CanvasC1EPKNS_15AbstractPainterERKNS_4RectES6_h>:
 8029f40:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8029f44:	461e      	mov	r6, r3
 8029f46:	4b36      	ldr	r3, [pc, #216]	; (802a020 <_ZN8touchgfx6CanvasC1EPKNS_15AbstractPainterERKNS_4RectES6_h+0xe0>)
 8029f48:	e9c0 3100 	strd	r3, r1, [r0]
 8029f4c:	f9b2 3004 	ldrsh.w	r3, [r2, #4]
 8029f50:	8103      	strh	r3, [r0, #8]
 8029f52:	2500      	movs	r5, #0
 8029f54:	f89d 3020 	ldrb.w	r3, [sp, #32]
 8029f58:	7283      	strb	r3, [r0, #10]
 8029f5a:	f100 0814 	add.w	r8, r0, #20
 8029f5e:	4604      	mov	r4, r0
 8029f60:	8185      	strh	r5, [r0, #12]
 8029f62:	81c5      	strh	r5, [r0, #14]
 8029f64:	8205      	strh	r5, [r0, #16]
 8029f66:	8245      	strh	r5, [r0, #18]
 8029f68:	4640      	mov	r0, r8
 8029f6a:	4617      	mov	r7, r2
 8029f6c:	f7eb fb9c 	bl	80156a8 <_ZN8touchgfx7OutlineC1Ev>
 8029f70:	e9c4 5513 	strd	r5, r5, [r4, #76]	; 0x4c
 8029f74:	e9c4 5515 	strd	r5, r5, [r4, #84]	; 0x54
 8029f78:	e9c4 5518 	strd	r5, r5, [r4, #96]	; 0x60
 8029f7c:	e9c4 551b 	strd	r5, r5, [r4, #108]	; 0x6c
 8029f80:	f884 5044 	strb.w	r5, [r4, #68]	; 0x44
 8029f84:	f8a4 5046 	strh.w	r5, [r4, #70]	; 0x46
 8029f88:	f8a4 5048 	strh.w	r5, [r4, #72]	; 0x48
 8029f8c:	f8a4 504a 	strh.w	r5, [r4, #74]	; 0x4a
 8029f90:	f884 505c 	strb.w	r5, [r4, #92]	; 0x5c
 8029f94:	f884 505d 	strb.w	r5, [r4, #93]	; 0x5d
 8029f98:	f8a4 5068 	strh.w	r5, [r4, #104]	; 0x68
 8029f9c:	6830      	ldr	r0, [r6, #0]
 8029f9e:	6871      	ldr	r1, [r6, #4]
 8029fa0:	8872      	ldrh	r2, [r6, #2]
 8029fa2:	8835      	ldrh	r5, [r6, #0]
 8029fa4:	466b      	mov	r3, sp
 8029fa6:	c303      	stmia	r3!, {r0, r1}
 8029fa8:	887b      	ldrh	r3, [r7, #2]
 8029faa:	f9b6 0004 	ldrsh.w	r0, [r6, #4]
 8029fae:	f9b6 1006 	ldrsh.w	r1, [r6, #6]
 8029fb2:	4413      	add	r3, r2
 8029fb4:	883a      	ldrh	r2, [r7, #0]
 8029fb6:	81e3      	strh	r3, [r4, #14]
 8029fb8:	442a      	add	r2, r5
 8029fba:	81a2      	strh	r2, [r4, #12]
 8029fbc:	8220      	strh	r0, [r4, #16]
 8029fbe:	8261      	strh	r1, [r4, #18]
 8029fc0:	4668      	mov	r0, sp
 8029fc2:	4639      	mov	r1, r7
 8029fc4:	f7ee f964 	bl	8018290 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8029fc8:	f104 000c 	add.w	r0, r4, #12
 8029fcc:	f7ee f938 	bl	8018240 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8029fd0:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 8029fd4:	f8bd 2000 	ldrh.w	r2, [sp]
 8029fd8:	f8a4 2046 	strh.w	r2, [r4, #70]	; 0x46
 8029fdc:	f8a4 3048 	strh.w	r3, [r4, #72]	; 0x48
 8029fe0:	4640      	mov	r0, r8
 8029fe2:	f7eb fb45 	bl	8015670 <_ZN8touchgfx7Outline5resetEv>
 8029fe6:	f9bd 3000 	ldrsh.w	r3, [sp]
 8029fea:	f9b4 2012 	ldrsh.w	r2, [r4, #18]
 8029fee:	015b      	lsls	r3, r3, #5
 8029ff0:	64e3      	str	r3, [r4, #76]	; 0x4c
 8029ff2:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 8029ff6:	015b      	lsls	r3, r3, #5
 8029ff8:	6523      	str	r3, [r4, #80]	; 0x50
 8029ffa:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 8029ffe:	015b      	lsls	r3, r3, #5
 802a000:	6563      	str	r3, [r4, #84]	; 0x54
 802a002:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
 802a006:	015b      	lsls	r3, r3, #5
 802a008:	65a3      	str	r3, [r4, #88]	; 0x58
 802a00a:	f9b4 3010 	ldrsh.w	r3, [r4, #16]
 802a00e:	f8a4 304a 	strh.w	r3, [r4, #74]	; 0x4a
 802a012:	4620      	mov	r0, r4
 802a014:	e9c4 320f 	strd	r3, r2, [r4, #60]	; 0x3c
 802a018:	b002      	add	sp, #8
 802a01a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 802a01e:	bf00      	nop
 802a020:	080301a4 	.word	0x080301a4

0802a024 <_ZN8touchgfx6Canvas5closeEv>:
 802a024:	b538      	push	{r3, r4, r5, lr}
 802a026:	f890 305c 	ldrb.w	r3, [r0, #92]	; 0x5c
 802a02a:	4604      	mov	r4, r0
 802a02c:	b193      	cbz	r3, 802a054 <_ZN8touchgfx6Canvas5closeEv+0x30>
 802a02e:	f890 3068 	ldrb.w	r3, [r0, #104]	; 0x68
 802a032:	f890 2069 	ldrb.w	r2, [r0, #105]	; 0x69
 802a036:	4213      	tst	r3, r2
 802a038:	d10c      	bne.n	802a054 <_ZN8touchgfx6Canvas5closeEv+0x30>
 802a03a:	f100 0514 	add.w	r5, r0, #20
 802a03e:	b123      	cbz	r3, 802a04a <_ZN8touchgfx6Canvas5closeEv+0x26>
 802a040:	e9d0 1218 	ldrd	r1, r2, [r0, #96]	; 0x60
 802a044:	4628      	mov	r0, r5
 802a046:	f7ff fea1 	bl	8029d8c <_ZN8touchgfx10Rasterizer6lineToEii>
 802a04a:	e9d4 121b 	ldrd	r1, r2, [r4, #108]	; 0x6c
 802a04e:	4628      	mov	r0, r5
 802a050:	f7ff fe9c 	bl	8029d8c <_ZN8touchgfx10Rasterizer6lineToEii>
 802a054:	2300      	movs	r3, #0
 802a056:	f884 305c 	strb.w	r3, [r4, #92]	; 0x5c
 802a05a:	e9d4 0306 	ldrd	r0, r3, [r4, #24]
 802a05e:	4298      	cmp	r0, r3
 802a060:	bf34      	ite	cc
 802a062:	2000      	movcc	r0, #0
 802a064:	2001      	movcs	r0, #1
 802a066:	bd38      	pop	{r3, r4, r5, pc}

0802a068 <_ZN8touchgfx6Canvas6renderEh>:
 802a068:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 802a06c:	7a85      	ldrb	r5, [r0, #10]
 802a06e:	4369      	muls	r1, r5
 802a070:	1c4d      	adds	r5, r1, #1
 802a072:	eb05 2511 	add.w	r5, r5, r1, lsr #8
 802a076:	122d      	asrs	r5, r5, #8
 802a078:	4604      	mov	r4, r0
 802a07a:	f000 8099 	beq.w	802a1b0 <_ZN8touchgfx6Canvas6renderEh+0x148>
 802a07e:	f890 305d 	ldrb.w	r3, [r0, #93]	; 0x5d
 802a082:	2b00      	cmp	r3, #0
 802a084:	f000 8094 	beq.w	802a1b0 <_ZN8touchgfx6Canvas6renderEh+0x148>
 802a088:	f7ff ffcc 	bl	802a024 <_ZN8touchgfx6Canvas5closeEv>
 802a08c:	4607      	mov	r7, r0
 802a08e:	2800      	cmp	r0, #0
 802a090:	d045      	beq.n	802a11e <_ZN8touchgfx6Canvas6renderEh+0xb6>
 802a092:	6860      	ldr	r0, [r4, #4]
 802a094:	4e47      	ldr	r6, [pc, #284]	; (802a1b4 <_ZN8touchgfx6Canvas6renderEh+0x14c>)
 802a096:	6803      	ldr	r3, [r0, #0]
 802a098:	6837      	ldr	r7, [r6, #0]
 802a09a:	689b      	ldr	r3, [r3, #8]
 802a09c:	4798      	blx	r3
 802a09e:	4601      	mov	r1, r0
 802a0a0:	4638      	mov	r0, r7
 802a0a2:	f7e9 faf3 	bl	801368c <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE>
 802a0a6:	4607      	mov	r7, r0
 802a0a8:	f7e0 ff30 	bl	800af0c <_ZN8touchgfx3HAL3lcdEv>
 802a0ac:	6803      	ldr	r3, [r0, #0]
 802a0ae:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 802a0b0:	4798      	blx	r3
 802a0b2:	4680      	mov	r8, r0
 802a0b4:	f7e0 ff2a 	bl	800af0c <_ZN8touchgfx3HAL3lcdEv>
 802a0b8:	6803      	ldr	r3, [r0, #0]
 802a0ba:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 802a0bc:	4798      	blx	r3
 802a0be:	280b      	cmp	r0, #11
 802a0c0:	d85b      	bhi.n	802a17a <_ZN8touchgfx6Canvas6renderEh+0x112>
 802a0c2:	e8df f000 	tbb	[pc, r0]
 802a0c6:	5c51      	.short	0x5c51
 802a0c8:	305a066c 	.word	0x305a066c
 802a0cc:	65656540 	.word	0x65656540
 802a0d0:	6565      	.short	0x6565
 802a0d2:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
 802a0d6:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
 802a0da:	2208      	movs	r2, #8
 802a0dc:	fb91 f2f2 	sdiv	r2, r1, r2
 802a0e0:	fb08 2303 	mla	r3, r8, r3, r2
 802a0e4:	441f      	add	r7, r3
 802a0e6:	424b      	negs	r3, r1
 802a0e8:	f003 0307 	and.w	r3, r3, #7
 802a0ec:	f001 0107 	and.w	r1, r1, #7
 802a0f0:	bf58      	it	pl
 802a0f2:	4259      	negpl	r1, r3
 802a0f4:	b2c9      	uxtb	r1, r1
 802a0f6:	b2ed      	uxtb	r5, r5
 802a0f8:	463a      	mov	r2, r7
 802a0fa:	e9cd 1500 	strd	r1, r5, [sp]
 802a0fe:	fa0f f388 	sxth.w	r3, r8
 802a102:	6861      	ldr	r1, [r4, #4]
 802a104:	f104 0014 	add.w	r0, r4, #20
 802a108:	f7ff fe4c 	bl	8029da4 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh>
 802a10c:	4607      	mov	r7, r0
 802a10e:	6860      	ldr	r0, [r4, #4]
 802a110:	6803      	ldr	r3, [r0, #0]
 802a112:	691b      	ldr	r3, [r3, #16]
 802a114:	4798      	blx	r3
 802a116:	6830      	ldr	r0, [r6, #0]
 802a118:	6803      	ldr	r3, [r0, #0]
 802a11a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 802a11c:	4798      	blx	r3
 802a11e:	4638      	mov	r0, r7
 802a120:	b002      	add	sp, #8
 802a122:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 802a126:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
 802a12a:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
 802a12e:	2204      	movs	r2, #4
 802a130:	fb91 f2f2 	sdiv	r2, r1, r2
 802a134:	fb08 2303 	mla	r3, r8, r3, r2
 802a138:	441f      	add	r7, r3
 802a13a:	424b      	negs	r3, r1
 802a13c:	f003 0303 	and.w	r3, r3, #3
 802a140:	f001 0103 	and.w	r1, r1, #3
 802a144:	e7d4      	b.n	802a0f0 <_ZN8touchgfx6Canvas6renderEh+0x88>
 802a146:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
 802a14a:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
 802a14e:	2900      	cmp	r1, #0
 802a150:	f04f 0202 	mov.w	r2, #2
 802a154:	fb91 f2f2 	sdiv	r2, r1, r2
 802a158:	f001 0101 	and.w	r1, r1, #1
 802a15c:	fb08 2303 	mla	r3, r8, r3, r2
 802a160:	441f      	add	r7, r3
 802a162:	bfb8      	it	lt
 802a164:	4249      	neglt	r1, r1
 802a166:	e7c5      	b.n	802a0f4 <_ZN8touchgfx6Canvas6renderEh+0x8c>
 802a168:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
 802a16c:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 802a170:	fb08 f303 	mul.w	r3, r8, r3
 802a174:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 802a178:	441f      	add	r7, r3
 802a17a:	2100      	movs	r1, #0
 802a17c:	e7bb      	b.n	802a0f6 <_ZN8touchgfx6Canvas6renderEh+0x8e>
 802a17e:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
 802a182:	fb08 f203 	mul.w	r2, r8, r3
 802a186:	89a3      	ldrh	r3, [r4, #12]
 802a188:	2103      	movs	r1, #3
 802a18a:	fb13 2301 	smlabb	r3, r3, r1, r2
 802a18e:	e7f3      	b.n	802a178 <_ZN8touchgfx6Canvas6renderEh+0x110>
 802a190:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
 802a194:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 802a198:	fb08 2303 	mla	r3, r8, r3, r2
 802a19c:	e7ec      	b.n	802a178 <_ZN8touchgfx6Canvas6renderEh+0x110>
 802a19e:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
 802a1a2:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 802a1a6:	fb08 f303 	mul.w	r3, r8, r3
 802a1aa:	eb03 0382 	add.w	r3, r3, r2, lsl #2
 802a1ae:	e7e3      	b.n	802a178 <_ZN8touchgfx6Canvas6renderEh+0x110>
 802a1b0:	2701      	movs	r7, #1
 802a1b2:	e7b4      	b.n	802a11e <_ZN8touchgfx6Canvas6renderEh+0xb6>
 802a1b4:	20006c34 	.word	0x20006c34

0802a1b8 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>:
 802a1b8:	b510      	push	{r4, lr}
 802a1ba:	4b06      	ldr	r3, [pc, #24]	; (802a1d4 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_+0x1c>)
 802a1bc:	781b      	ldrb	r3, [r3, #0]
 802a1be:	2b01      	cmp	r3, #1
 802a1c0:	d107      	bne.n	802a1d2 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_+0x1a>
 802a1c2:	f9b0 0008 	ldrsh.w	r0, [r0, #8]
 802a1c6:	680b      	ldr	r3, [r1, #0]
 802a1c8:	6814      	ldr	r4, [r2, #0]
 802a1ca:	ebc3 1340 	rsb	r3, r3, r0, lsl #5
 802a1ce:	6013      	str	r3, [r2, #0]
 802a1d0:	600c      	str	r4, [r1, #0]
 802a1d2:	bd10      	pop	{r4, pc}
 802a1d4:	20006c2c 	.word	0x20006c2c

0802a1d8 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>:
 802a1d8:	b513      	push	{r0, r1, r4, lr}
 802a1da:	f890 305c 	ldrb.w	r3, [r0, #92]	; 0x5c
 802a1de:	4604      	mov	r4, r0
 802a1e0:	e9cd 2100 	strd	r2, r1, [sp]
 802a1e4:	b9a3      	cbnz	r3, 802a210 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x38>
 802a1e6:	466a      	mov	r2, sp
 802a1e8:	a901      	add	r1, sp, #4
 802a1ea:	4620      	mov	r0, r4
 802a1ec:	f7ff ffe4 	bl	802a1b8 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>
 802a1f0:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
 802a1f2:	9901      	ldr	r1, [sp, #4]
 802a1f4:	9a00      	ldr	r2, [sp, #0]
 802a1f6:	1ac9      	subs	r1, r1, r3
 802a1f8:	6d23      	ldr	r3, [r4, #80]	; 0x50
 802a1fa:	9101      	str	r1, [sp, #4]
 802a1fc:	1ad2      	subs	r2, r2, r3
 802a1fe:	2a00      	cmp	r2, #0
 802a200:	9200      	str	r2, [sp, #0]
 802a202:	da0b      	bge.n	802a21c <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x44>
 802a204:	2301      	movs	r3, #1
 802a206:	2900      	cmp	r1, #0
 802a208:	da0e      	bge.n	802a228 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x50>
 802a20a:	f043 0304 	orr.w	r3, r3, #4
 802a20e:	e013      	b.n	802a238 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x60>
 802a210:	f7ff ff08 	bl	802a024 <_ZN8touchgfx6Canvas5closeEv>
 802a214:	2800      	cmp	r0, #0
 802a216:	d1e6      	bne.n	802a1e6 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0xe>
 802a218:	b002      	add	sp, #8
 802a21a:	bd10      	pop	{r4, pc}
 802a21c:	6da3      	ldr	r3, [r4, #88]	; 0x58
 802a21e:	429a      	cmp	r2, r3
 802a220:	bfac      	ite	ge
 802a222:	2302      	movge	r3, #2
 802a224:	2300      	movlt	r3, #0
 802a226:	e7ee      	b.n	802a206 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x2e>
 802a228:	6d60      	ldr	r0, [r4, #84]	; 0x54
 802a22a:	4281      	cmp	r1, r0
 802a22c:	bfac      	ite	ge
 802a22e:	2008      	movge	r0, #8
 802a230:	2000      	movlt	r0, #0
 802a232:	4318      	orrs	r0, r3
 802a234:	b2c3      	uxtb	r3, r0
 802a236:	b158      	cbz	r0, 802a250 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x78>
 802a238:	2200      	movs	r2, #0
 802a23a:	f884 205c 	strb.w	r2, [r4, #92]	; 0x5c
 802a23e:	9901      	ldr	r1, [sp, #4]
 802a240:	9a00      	ldr	r2, [sp, #0]
 802a242:	66e1      	str	r1, [r4, #108]	; 0x6c
 802a244:	6722      	str	r2, [r4, #112]	; 0x70
 802a246:	e9c4 1218 	strd	r1, r2, [r4, #96]	; 0x60
 802a24a:	f884 3068 	strb.w	r3, [r4, #104]	; 0x68
 802a24e:	e7e3      	b.n	802a218 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x40>
 802a250:	f884 0069 	strb.w	r0, [r4, #105]	; 0x69
 802a254:	e9d4 3006 	ldrd	r3, r0, [r4, #24]
 802a258:	4298      	cmp	r0, r3
 802a25a:	d803      	bhi.n	802a264 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x8c>
 802a25c:	f104 0014 	add.w	r0, r4, #20
 802a260:	f7eb ff04 	bl	801606c <_ZN8touchgfx7Outline6moveToEii>
 802a264:	2301      	movs	r3, #1
 802a266:	f884 305c 	strb.w	r3, [r4, #92]	; 0x5c
 802a26a:	f884 305d 	strb.w	r3, [r4, #93]	; 0x5d
 802a26e:	2300      	movs	r3, #0
 802a270:	e7e5      	b.n	802a23e <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x66>

0802a272 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>:
 802a272:	b573      	push	{r0, r1, r4, r5, r6, lr}
 802a274:	ab02      	add	r3, sp, #8
 802a276:	4604      	mov	r4, r0
 802a278:	f843 2d08 	str.w	r2, [r3, #-8]!
 802a27c:	9101      	str	r1, [sp, #4]
 802a27e:	461a      	mov	r2, r3
 802a280:	a901      	add	r1, sp, #4
 802a282:	f7ff ff99 	bl	802a1b8 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>
 802a286:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
 802a288:	9901      	ldr	r1, [sp, #4]
 802a28a:	9a00      	ldr	r2, [sp, #0]
 802a28c:	1ac9      	subs	r1, r1, r3
 802a28e:	6d23      	ldr	r3, [r4, #80]	; 0x50
 802a290:	9101      	str	r1, [sp, #4]
 802a292:	1ad2      	subs	r2, r2, r3
 802a294:	2a00      	cmp	r2, #0
 802a296:	9200      	str	r2, [sp, #0]
 802a298:	db1c      	blt.n	802a2d4 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x62>
 802a29a:	6da3      	ldr	r3, [r4, #88]	; 0x58
 802a29c:	429a      	cmp	r2, r3
 802a29e:	bfac      	ite	ge
 802a2a0:	2002      	movge	r0, #2
 802a2a2:	2000      	movlt	r0, #0
 802a2a4:	2900      	cmp	r1, #0
 802a2a6:	db17      	blt.n	802a2d8 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x66>
 802a2a8:	6d63      	ldr	r3, [r4, #84]	; 0x54
 802a2aa:	4299      	cmp	r1, r3
 802a2ac:	bfac      	ite	ge
 802a2ae:	2308      	movge	r3, #8
 802a2b0:	2300      	movlt	r3, #0
 802a2b2:	4303      	orrs	r3, r0
 802a2b4:	f894 0068 	ldrb.w	r0, [r4, #104]	; 0x68
 802a2b8:	b2dd      	uxtb	r5, r3
 802a2ba:	b978      	cbnz	r0, 802a2dc <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x6a>
 802a2bc:	f104 0014 	add.w	r0, r4, #20
 802a2c0:	f7ff fd64 	bl	8029d8c <_ZN8touchgfx10Rasterizer6lineToEii>
 802a2c4:	9b01      	ldr	r3, [sp, #4]
 802a2c6:	6623      	str	r3, [r4, #96]	; 0x60
 802a2c8:	9b00      	ldr	r3, [sp, #0]
 802a2ca:	6663      	str	r3, [r4, #100]	; 0x64
 802a2cc:	f884 5068 	strb.w	r5, [r4, #104]	; 0x68
 802a2d0:	b002      	add	sp, #8
 802a2d2:	bd70      	pop	{r4, r5, r6, pc}
 802a2d4:	2001      	movs	r0, #1
 802a2d6:	e7e5      	b.n	802a2a4 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x32>
 802a2d8:	2304      	movs	r3, #4
 802a2da:	e7ea      	b.n	802a2b2 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x40>
 802a2dc:	b113      	cbz	r3, 802a2e4 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x72>
 802a2de:	ea10 0305 	ands.w	r3, r0, r5
 802a2e2:	d11c      	bne.n	802a31e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0xac>
 802a2e4:	f894 305c 	ldrb.w	r3, [r4, #92]	; 0x5c
 802a2e8:	f104 0614 	add.w	r6, r4, #20
 802a2ec:	e9d4 1218 	ldrd	r1, r2, [r4, #96]	; 0x60
 802a2f0:	b98b      	cbnz	r3, 802a316 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0xa4>
 802a2f2:	f884 0069 	strb.w	r0, [r4, #105]	; 0x69
 802a2f6:	e9d4 3006 	ldrd	r3, r0, [r4, #24]
 802a2fa:	4298      	cmp	r0, r3
 802a2fc:	d802      	bhi.n	802a304 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x92>
 802a2fe:	4630      	mov	r0, r6
 802a300:	f7eb feb4 	bl	801606c <_ZN8touchgfx7Outline6moveToEii>
 802a304:	2301      	movs	r3, #1
 802a306:	f884 305c 	strb.w	r3, [r4, #92]	; 0x5c
 802a30a:	f884 305d 	strb.w	r3, [r4, #93]	; 0x5d
 802a30e:	e9dd 2100 	ldrd	r2, r1, [sp]
 802a312:	4630      	mov	r0, r6
 802a314:	e7d4      	b.n	802a2c0 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x4e>
 802a316:	4630      	mov	r0, r6
 802a318:	f7ff fd38 	bl	8029d8c <_ZN8touchgfx10Rasterizer6lineToEii>
 802a31c:	e7f7      	b.n	802a30e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x9c>
 802a31e:	461d      	mov	r5, r3
 802a320:	e7d0      	b.n	802a2c4 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x52>
	...

0802a324 <_ZN8touchgfx6CanvasD1Ev>:
 802a324:	b510      	push	{r4, lr}
 802a326:	4b04      	ldr	r3, [pc, #16]	; (802a338 <_ZN8touchgfx6CanvasD1Ev+0x14>)
 802a328:	4604      	mov	r4, r0
 802a32a:	f840 3b14 	str.w	r3, [r0], #20
 802a32e:	f7eb f997 	bl	8015660 <_ZN8touchgfx7OutlineD1Ev>
 802a332:	4620      	mov	r0, r4
 802a334:	bd10      	pop	{r4, pc}
 802a336:	bf00      	nop
 802a338:	080301a4 	.word	0x080301a4

0802a33c <_ZN8touchgfx6CanvasD0Ev>:
 802a33c:	b510      	push	{r4, lr}
 802a33e:	4604      	mov	r4, r0
 802a340:	f7ff fff0 	bl	802a324 <_ZN8touchgfx6CanvasD1Ev>
 802a344:	4620      	mov	r0, r4
 802a346:	2174      	movs	r1, #116	; 0x74
 802a348:	f000 f807 	bl	802a35a <_ZdlPvj>
 802a34c:	4620      	mov	r0, r4
 802a34e:	bd10      	pop	{r4, pc}

0802a350 <__aeabi_atexit>:
 802a350:	460b      	mov	r3, r1
 802a352:	4601      	mov	r1, r0
 802a354:	4618      	mov	r0, r3
 802a356:	f000 b90f 	b.w	802a578 <__cxa_atexit>

0802a35a <_ZdlPvj>:
 802a35a:	f000 b812 	b.w	802a382 <_ZdlPv>

0802a35e <__cxa_guard_acquire>:
 802a35e:	6803      	ldr	r3, [r0, #0]
 802a360:	07db      	lsls	r3, r3, #31
 802a362:	d406      	bmi.n	802a372 <__cxa_guard_acquire+0x14>
 802a364:	7843      	ldrb	r3, [r0, #1]
 802a366:	b103      	cbz	r3, 802a36a <__cxa_guard_acquire+0xc>
 802a368:	deff      	udf	#255	; 0xff
 802a36a:	2301      	movs	r3, #1
 802a36c:	7043      	strb	r3, [r0, #1]
 802a36e:	4618      	mov	r0, r3
 802a370:	4770      	bx	lr
 802a372:	2000      	movs	r0, #0
 802a374:	4770      	bx	lr

0802a376 <__cxa_guard_release>:
 802a376:	2301      	movs	r3, #1
 802a378:	6003      	str	r3, [r0, #0]
 802a37a:	4770      	bx	lr

0802a37c <__cxa_pure_virtual>:
 802a37c:	b508      	push	{r3, lr}
 802a37e:	f000 f80f 	bl	802a3a0 <_ZSt9terminatev>

0802a382 <_ZdlPv>:
 802a382:	f000 b845 	b.w	802a410 <free>

0802a386 <_ZN10__cxxabiv111__terminateEPFvvE>:
 802a386:	b508      	push	{r3, lr}
 802a388:	4780      	blx	r0
 802a38a:	f000 f80e 	bl	802a3aa <abort>
	...

0802a390 <_ZSt13get_terminatev>:
 802a390:	4b02      	ldr	r3, [pc, #8]	; (802a39c <_ZSt13get_terminatev+0xc>)
 802a392:	6818      	ldr	r0, [r3, #0]
 802a394:	f3bf 8f5b 	dmb	ish
 802a398:	4770      	bx	lr
 802a39a:	bf00      	nop
 802a39c:	20000188 	.word	0x20000188

0802a3a0 <_ZSt9terminatev>:
 802a3a0:	b508      	push	{r3, lr}
 802a3a2:	f7ff fff5 	bl	802a390 <_ZSt13get_terminatev>
 802a3a6:	f7ff ffee 	bl	802a386 <_ZN10__cxxabiv111__terminateEPFvvE>

0802a3aa <abort>:
 802a3aa:	b508      	push	{r3, lr}
 802a3ac:	2006      	movs	r0, #6
 802a3ae:	f000 febf 	bl	802b130 <raise>
 802a3b2:	2001      	movs	r0, #1
 802a3b4:	f7d7 faf0 	bl	8001998 <_exit>

0802a3b8 <__assert_func>:
 802a3b8:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 802a3ba:	4614      	mov	r4, r2
 802a3bc:	461a      	mov	r2, r3
 802a3be:	4b09      	ldr	r3, [pc, #36]	; (802a3e4 <__assert_func+0x2c>)
 802a3c0:	681b      	ldr	r3, [r3, #0]
 802a3c2:	4605      	mov	r5, r0
 802a3c4:	68d8      	ldr	r0, [r3, #12]
 802a3c6:	b14c      	cbz	r4, 802a3dc <__assert_func+0x24>
 802a3c8:	4b07      	ldr	r3, [pc, #28]	; (802a3e8 <__assert_func+0x30>)
 802a3ca:	9100      	str	r1, [sp, #0]
 802a3cc:	e9cd 3401 	strd	r3, r4, [sp, #4]
 802a3d0:	4906      	ldr	r1, [pc, #24]	; (802a3ec <__assert_func+0x34>)
 802a3d2:	462b      	mov	r3, r5
 802a3d4:	f000 fde8 	bl	802afa8 <fiprintf>
 802a3d8:	f7ff ffe7 	bl	802a3aa <abort>
 802a3dc:	4b04      	ldr	r3, [pc, #16]	; (802a3f0 <__assert_func+0x38>)
 802a3de:	461c      	mov	r4, r3
 802a3e0:	e7f3      	b.n	802a3ca <__assert_func+0x12>
 802a3e2:	bf00      	nop
 802a3e4:	200001e4 	.word	0x200001e4
 802a3e8:	080301b0 	.word	0x080301b0
 802a3ec:	080301bd 	.word	0x080301bd
 802a3f0:	080301eb 	.word	0x080301eb

0802a3f4 <atexit>:
 802a3f4:	2300      	movs	r3, #0
 802a3f6:	4601      	mov	r1, r0
 802a3f8:	461a      	mov	r2, r3
 802a3fa:	4618      	mov	r0, r3
 802a3fc:	f000 bf4a 	b.w	802b294 <__register_exitproc>

0802a400 <malloc>:
 802a400:	4b02      	ldr	r3, [pc, #8]	; (802a40c <malloc+0xc>)
 802a402:	4601      	mov	r1, r0
 802a404:	6818      	ldr	r0, [r3, #0]
 802a406:	f000 b82b 	b.w	802a460 <_malloc_r>
 802a40a:	bf00      	nop
 802a40c:	200001e4 	.word	0x200001e4

0802a410 <free>:
 802a410:	4b02      	ldr	r3, [pc, #8]	; (802a41c <free+0xc>)
 802a412:	4601      	mov	r1, r0
 802a414:	6818      	ldr	r0, [r3, #0]
 802a416:	f001 be15 	b.w	802c044 <_free_r>
 802a41a:	bf00      	nop
 802a41c:	200001e4 	.word	0x200001e4

0802a420 <sbrk_aligned>:
 802a420:	b570      	push	{r4, r5, r6, lr}
 802a422:	4e0e      	ldr	r6, [pc, #56]	; (802a45c <sbrk_aligned+0x3c>)
 802a424:	460c      	mov	r4, r1
 802a426:	6831      	ldr	r1, [r6, #0]
 802a428:	4605      	mov	r5, r0
 802a42a:	b911      	cbnz	r1, 802a432 <sbrk_aligned+0x12>
 802a42c:	f000 fed4 	bl	802b1d8 <_sbrk_r>
 802a430:	6030      	str	r0, [r6, #0]
 802a432:	4621      	mov	r1, r4
 802a434:	4628      	mov	r0, r5
 802a436:	f000 fecf 	bl	802b1d8 <_sbrk_r>
 802a43a:	1c43      	adds	r3, r0, #1
 802a43c:	d00a      	beq.n	802a454 <sbrk_aligned+0x34>
 802a43e:	1cc4      	adds	r4, r0, #3
 802a440:	f024 0403 	bic.w	r4, r4, #3
 802a444:	42a0      	cmp	r0, r4
 802a446:	d007      	beq.n	802a458 <sbrk_aligned+0x38>
 802a448:	1a21      	subs	r1, r4, r0
 802a44a:	4628      	mov	r0, r5
 802a44c:	f000 fec4 	bl	802b1d8 <_sbrk_r>
 802a450:	3001      	adds	r0, #1
 802a452:	d101      	bne.n	802a458 <sbrk_aligned+0x38>
 802a454:	f04f 34ff 	mov.w	r4, #4294967295
 802a458:	4620      	mov	r0, r4
 802a45a:	bd70      	pop	{r4, r5, r6, pc}
 802a45c:	2000758c 	.word	0x2000758c

0802a460 <_malloc_r>:
 802a460:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 802a464:	1ccd      	adds	r5, r1, #3
 802a466:	f025 0503 	bic.w	r5, r5, #3
 802a46a:	3508      	adds	r5, #8
 802a46c:	2d0c      	cmp	r5, #12
 802a46e:	bf38      	it	cc
 802a470:	250c      	movcc	r5, #12
 802a472:	2d00      	cmp	r5, #0
 802a474:	4607      	mov	r7, r0
 802a476:	db01      	blt.n	802a47c <_malloc_r+0x1c>
 802a478:	42a9      	cmp	r1, r5
 802a47a:	d905      	bls.n	802a488 <_malloc_r+0x28>
 802a47c:	230c      	movs	r3, #12
 802a47e:	603b      	str	r3, [r7, #0]
 802a480:	2600      	movs	r6, #0
 802a482:	4630      	mov	r0, r6
 802a484:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 802a488:	f8df 80d0 	ldr.w	r8, [pc, #208]	; 802a55c <_malloc_r+0xfc>
 802a48c:	f000 f868 	bl	802a560 <__malloc_lock>
 802a490:	f8d8 3000 	ldr.w	r3, [r8]
 802a494:	461c      	mov	r4, r3
 802a496:	bb5c      	cbnz	r4, 802a4f0 <_malloc_r+0x90>
 802a498:	4629      	mov	r1, r5
 802a49a:	4638      	mov	r0, r7
 802a49c:	f7ff ffc0 	bl	802a420 <sbrk_aligned>
 802a4a0:	1c43      	adds	r3, r0, #1
 802a4a2:	4604      	mov	r4, r0
 802a4a4:	d155      	bne.n	802a552 <_malloc_r+0xf2>
 802a4a6:	f8d8 4000 	ldr.w	r4, [r8]
 802a4aa:	4626      	mov	r6, r4
 802a4ac:	2e00      	cmp	r6, #0
 802a4ae:	d145      	bne.n	802a53c <_malloc_r+0xdc>
 802a4b0:	2c00      	cmp	r4, #0
 802a4b2:	d048      	beq.n	802a546 <_malloc_r+0xe6>
 802a4b4:	6823      	ldr	r3, [r4, #0]
 802a4b6:	4631      	mov	r1, r6
 802a4b8:	4638      	mov	r0, r7
 802a4ba:	eb04 0903 	add.w	r9, r4, r3
 802a4be:	f000 fe8b 	bl	802b1d8 <_sbrk_r>
 802a4c2:	4581      	cmp	r9, r0
 802a4c4:	d13f      	bne.n	802a546 <_malloc_r+0xe6>
 802a4c6:	6821      	ldr	r1, [r4, #0]
 802a4c8:	1a6d      	subs	r5, r5, r1
 802a4ca:	4629      	mov	r1, r5
 802a4cc:	4638      	mov	r0, r7
 802a4ce:	f7ff ffa7 	bl	802a420 <sbrk_aligned>
 802a4d2:	3001      	adds	r0, #1
 802a4d4:	d037      	beq.n	802a546 <_malloc_r+0xe6>
 802a4d6:	6823      	ldr	r3, [r4, #0]
 802a4d8:	442b      	add	r3, r5
 802a4da:	6023      	str	r3, [r4, #0]
 802a4dc:	f8d8 3000 	ldr.w	r3, [r8]
 802a4e0:	2b00      	cmp	r3, #0
 802a4e2:	d038      	beq.n	802a556 <_malloc_r+0xf6>
 802a4e4:	685a      	ldr	r2, [r3, #4]
 802a4e6:	42a2      	cmp	r2, r4
 802a4e8:	d12b      	bne.n	802a542 <_malloc_r+0xe2>
 802a4ea:	2200      	movs	r2, #0
 802a4ec:	605a      	str	r2, [r3, #4]
 802a4ee:	e00f      	b.n	802a510 <_malloc_r+0xb0>
 802a4f0:	6822      	ldr	r2, [r4, #0]
 802a4f2:	1b52      	subs	r2, r2, r5
 802a4f4:	d41f      	bmi.n	802a536 <_malloc_r+0xd6>
 802a4f6:	2a0b      	cmp	r2, #11
 802a4f8:	d917      	bls.n	802a52a <_malloc_r+0xca>
 802a4fa:	1961      	adds	r1, r4, r5
 802a4fc:	42a3      	cmp	r3, r4
 802a4fe:	6025      	str	r5, [r4, #0]
 802a500:	bf18      	it	ne
 802a502:	6059      	strne	r1, [r3, #4]
 802a504:	6863      	ldr	r3, [r4, #4]
 802a506:	bf08      	it	eq
 802a508:	f8c8 1000 	streq.w	r1, [r8]
 802a50c:	5162      	str	r2, [r4, r5]
 802a50e:	604b      	str	r3, [r1, #4]
 802a510:	4638      	mov	r0, r7
 802a512:	f104 060b 	add.w	r6, r4, #11
 802a516:	f000 f829 	bl	802a56c <__malloc_unlock>
 802a51a:	f026 0607 	bic.w	r6, r6, #7
 802a51e:	1d23      	adds	r3, r4, #4
 802a520:	1af2      	subs	r2, r6, r3
 802a522:	d0ae      	beq.n	802a482 <_malloc_r+0x22>
 802a524:	1b9b      	subs	r3, r3, r6
 802a526:	50a3      	str	r3, [r4, r2]
 802a528:	e7ab      	b.n	802a482 <_malloc_r+0x22>
 802a52a:	42a3      	cmp	r3, r4
 802a52c:	6862      	ldr	r2, [r4, #4]
 802a52e:	d1dd      	bne.n	802a4ec <_malloc_r+0x8c>
 802a530:	f8c8 2000 	str.w	r2, [r8]
 802a534:	e7ec      	b.n	802a510 <_malloc_r+0xb0>
 802a536:	4623      	mov	r3, r4
 802a538:	6864      	ldr	r4, [r4, #4]
 802a53a:	e7ac      	b.n	802a496 <_malloc_r+0x36>
 802a53c:	4634      	mov	r4, r6
 802a53e:	6876      	ldr	r6, [r6, #4]
 802a540:	e7b4      	b.n	802a4ac <_malloc_r+0x4c>
 802a542:	4613      	mov	r3, r2
 802a544:	e7cc      	b.n	802a4e0 <_malloc_r+0x80>
 802a546:	230c      	movs	r3, #12
 802a548:	603b      	str	r3, [r7, #0]
 802a54a:	4638      	mov	r0, r7
 802a54c:	f000 f80e 	bl	802a56c <__malloc_unlock>
 802a550:	e797      	b.n	802a482 <_malloc_r+0x22>
 802a552:	6025      	str	r5, [r4, #0]
 802a554:	e7dc      	b.n	802a510 <_malloc_r+0xb0>
 802a556:	605b      	str	r3, [r3, #4]
 802a558:	deff      	udf	#255	; 0xff
 802a55a:	bf00      	nop
 802a55c:	20007588 	.word	0x20007588

0802a560 <__malloc_lock>:
 802a560:	4801      	ldr	r0, [pc, #4]	; (802a568 <__malloc_lock+0x8>)
 802a562:	f000 be86 	b.w	802b272 <__retarget_lock_acquire_recursive>
 802a566:	bf00      	nop
 802a568:	200076d1 	.word	0x200076d1

0802a56c <__malloc_unlock>:
 802a56c:	4801      	ldr	r0, [pc, #4]	; (802a574 <__malloc_unlock+0x8>)
 802a56e:	f000 be81 	b.w	802b274 <__retarget_lock_release_recursive>
 802a572:	bf00      	nop
 802a574:	200076d1 	.word	0x200076d1

0802a578 <__cxa_atexit>:
 802a578:	b510      	push	{r4, lr}
 802a57a:	4c05      	ldr	r4, [pc, #20]	; (802a590 <__cxa_atexit+0x18>)
 802a57c:	4613      	mov	r3, r2
 802a57e:	b12c      	cbz	r4, 802a58c <__cxa_atexit+0x14>
 802a580:	460a      	mov	r2, r1
 802a582:	4601      	mov	r1, r0
 802a584:	2002      	movs	r0, #2
 802a586:	f000 fe85 	bl	802b294 <__register_exitproc>
 802a58a:	bd10      	pop	{r4, pc}
 802a58c:	4620      	mov	r0, r4
 802a58e:	e7fc      	b.n	802a58a <__cxa_atexit+0x12>
 802a590:	0802b295 	.word	0x0802b295

0802a594 <__cvt>:
 802a594:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 802a598:	ec55 4b10 	vmov	r4, r5, d0
 802a59c:	2d00      	cmp	r5, #0
 802a59e:	460e      	mov	r6, r1
 802a5a0:	4619      	mov	r1, r3
 802a5a2:	462b      	mov	r3, r5
 802a5a4:	bfbb      	ittet	lt
 802a5a6:	f105 4300 	addlt.w	r3, r5, #2147483648	; 0x80000000
 802a5aa:	461d      	movlt	r5, r3
 802a5ac:	2300      	movge	r3, #0
 802a5ae:	232d      	movlt	r3, #45	; 0x2d
 802a5b0:	700b      	strb	r3, [r1, #0]
 802a5b2:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 802a5b4:	f8dd a030 	ldr.w	sl, [sp, #48]	; 0x30
 802a5b8:	4691      	mov	r9, r2
 802a5ba:	f023 0820 	bic.w	r8, r3, #32
 802a5be:	bfbc      	itt	lt
 802a5c0:	4622      	movlt	r2, r4
 802a5c2:	4614      	movlt	r4, r2
 802a5c4:	f1b8 0f46 	cmp.w	r8, #70	; 0x46
 802a5c8:	d005      	beq.n	802a5d6 <__cvt+0x42>
 802a5ca:	f1b8 0f45 	cmp.w	r8, #69	; 0x45
 802a5ce:	d100      	bne.n	802a5d2 <__cvt+0x3e>
 802a5d0:	3601      	adds	r6, #1
 802a5d2:	2102      	movs	r1, #2
 802a5d4:	e000      	b.n	802a5d8 <__cvt+0x44>
 802a5d6:	2103      	movs	r1, #3
 802a5d8:	ab03      	add	r3, sp, #12
 802a5da:	9301      	str	r3, [sp, #4]
 802a5dc:	ab02      	add	r3, sp, #8
 802a5de:	9300      	str	r3, [sp, #0]
 802a5e0:	ec45 4b10 	vmov	d0, r4, r5
 802a5e4:	4653      	mov	r3, sl
 802a5e6:	4632      	mov	r2, r6
 802a5e8:	f000 ff3a 	bl	802b460 <_dtoa_r>
 802a5ec:	f1b8 0f47 	cmp.w	r8, #71	; 0x47
 802a5f0:	4607      	mov	r7, r0
 802a5f2:	d102      	bne.n	802a5fa <__cvt+0x66>
 802a5f4:	f019 0f01 	tst.w	r9, #1
 802a5f8:	d022      	beq.n	802a640 <__cvt+0xac>
 802a5fa:	f1b8 0f46 	cmp.w	r8, #70	; 0x46
 802a5fe:	eb07 0906 	add.w	r9, r7, r6
 802a602:	d110      	bne.n	802a626 <__cvt+0x92>
 802a604:	783b      	ldrb	r3, [r7, #0]
 802a606:	2b30      	cmp	r3, #48	; 0x30
 802a608:	d10a      	bne.n	802a620 <__cvt+0x8c>
 802a60a:	2200      	movs	r2, #0
 802a60c:	2300      	movs	r3, #0
 802a60e:	4620      	mov	r0, r4
 802a610:	4629      	mov	r1, r5
 802a612:	f7d6 fa61 	bl	8000ad8 <__aeabi_dcmpeq>
 802a616:	b918      	cbnz	r0, 802a620 <__cvt+0x8c>
 802a618:	f1c6 0601 	rsb	r6, r6, #1
 802a61c:	f8ca 6000 	str.w	r6, [sl]
 802a620:	f8da 3000 	ldr.w	r3, [sl]
 802a624:	4499      	add	r9, r3
 802a626:	2200      	movs	r2, #0
 802a628:	2300      	movs	r3, #0
 802a62a:	4620      	mov	r0, r4
 802a62c:	4629      	mov	r1, r5
 802a62e:	f7d6 fa53 	bl	8000ad8 <__aeabi_dcmpeq>
 802a632:	b108      	cbz	r0, 802a638 <__cvt+0xa4>
 802a634:	f8cd 900c 	str.w	r9, [sp, #12]
 802a638:	2230      	movs	r2, #48	; 0x30
 802a63a:	9b03      	ldr	r3, [sp, #12]
 802a63c:	454b      	cmp	r3, r9
 802a63e:	d307      	bcc.n	802a650 <__cvt+0xbc>
 802a640:	9b03      	ldr	r3, [sp, #12]
 802a642:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 802a644:	1bdb      	subs	r3, r3, r7
 802a646:	4638      	mov	r0, r7
 802a648:	6013      	str	r3, [r2, #0]
 802a64a:	b004      	add	sp, #16
 802a64c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 802a650:	1c59      	adds	r1, r3, #1
 802a652:	9103      	str	r1, [sp, #12]
 802a654:	701a      	strb	r2, [r3, #0]
 802a656:	e7f0      	b.n	802a63a <__cvt+0xa6>

0802a658 <__exponent>:
 802a658:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 802a65a:	4603      	mov	r3, r0
 802a65c:	2900      	cmp	r1, #0
 802a65e:	bfb8      	it	lt
 802a660:	4249      	neglt	r1, r1
 802a662:	f803 2b02 	strb.w	r2, [r3], #2
 802a666:	bfb4      	ite	lt
 802a668:	222d      	movlt	r2, #45	; 0x2d
 802a66a:	222b      	movge	r2, #43	; 0x2b
 802a66c:	2909      	cmp	r1, #9
 802a66e:	7042      	strb	r2, [r0, #1]
 802a670:	dd2a      	ble.n	802a6c8 <__exponent+0x70>
 802a672:	f10d 0207 	add.w	r2, sp, #7
 802a676:	4617      	mov	r7, r2
 802a678:	260a      	movs	r6, #10
 802a67a:	4694      	mov	ip, r2
 802a67c:	fb91 f5f6 	sdiv	r5, r1, r6
 802a680:	fb06 1415 	mls	r4, r6, r5, r1
 802a684:	3430      	adds	r4, #48	; 0x30
 802a686:	f80c 4c01 	strb.w	r4, [ip, #-1]
 802a68a:	460c      	mov	r4, r1
 802a68c:	2c63      	cmp	r4, #99	; 0x63
 802a68e:	f102 32ff 	add.w	r2, r2, #4294967295
 802a692:	4629      	mov	r1, r5
 802a694:	dcf1      	bgt.n	802a67a <__exponent+0x22>
 802a696:	3130      	adds	r1, #48	; 0x30
 802a698:	f1ac 0402 	sub.w	r4, ip, #2
 802a69c:	f802 1c01 	strb.w	r1, [r2, #-1]
 802a6a0:	1c41      	adds	r1, r0, #1
 802a6a2:	4622      	mov	r2, r4
 802a6a4:	42ba      	cmp	r2, r7
 802a6a6:	d30a      	bcc.n	802a6be <__exponent+0x66>
 802a6a8:	f10d 0209 	add.w	r2, sp, #9
 802a6ac:	eba2 020c 	sub.w	r2, r2, ip
 802a6b0:	42bc      	cmp	r4, r7
 802a6b2:	bf88      	it	hi
 802a6b4:	2200      	movhi	r2, #0
 802a6b6:	4413      	add	r3, r2
 802a6b8:	1a18      	subs	r0, r3, r0
 802a6ba:	b003      	add	sp, #12
 802a6bc:	bdf0      	pop	{r4, r5, r6, r7, pc}
 802a6be:	f812 5b01 	ldrb.w	r5, [r2], #1
 802a6c2:	f801 5f01 	strb.w	r5, [r1, #1]!
 802a6c6:	e7ed      	b.n	802a6a4 <__exponent+0x4c>
 802a6c8:	2330      	movs	r3, #48	; 0x30
 802a6ca:	3130      	adds	r1, #48	; 0x30
 802a6cc:	7083      	strb	r3, [r0, #2]
 802a6ce:	70c1      	strb	r1, [r0, #3]
 802a6d0:	1d03      	adds	r3, r0, #4
 802a6d2:	e7f1      	b.n	802a6b8 <__exponent+0x60>

0802a6d4 <_printf_float>:
 802a6d4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802a6d8:	ed2d 8b02 	vpush	{d8}
 802a6dc:	b08d      	sub	sp, #52	; 0x34
 802a6de:	460c      	mov	r4, r1
 802a6e0:	f8dd 8060 	ldr.w	r8, [sp, #96]	; 0x60
 802a6e4:	4616      	mov	r6, r2
 802a6e6:	461f      	mov	r7, r3
 802a6e8:	4605      	mov	r5, r0
 802a6ea:	f000 fd29 	bl	802b140 <_localeconv_r>
 802a6ee:	f8d0 a000 	ldr.w	sl, [r0]
 802a6f2:	4650      	mov	r0, sl
 802a6f4:	f7d5 fdc4 	bl	8000280 <strlen>
 802a6f8:	2300      	movs	r3, #0
 802a6fa:	930a      	str	r3, [sp, #40]	; 0x28
 802a6fc:	6823      	ldr	r3, [r4, #0]
 802a6fe:	9305      	str	r3, [sp, #20]
 802a700:	f8d8 3000 	ldr.w	r3, [r8]
 802a704:	f894 b018 	ldrb.w	fp, [r4, #24]
 802a708:	3307      	adds	r3, #7
 802a70a:	f023 0307 	bic.w	r3, r3, #7
 802a70e:	f103 0208 	add.w	r2, r3, #8
 802a712:	f8c8 2000 	str.w	r2, [r8]
 802a716:	e9d3 8900 	ldrd	r8, r9, [r3]
 802a71a:	f029 4300 	bic.w	r3, r9, #2147483648	; 0x80000000
 802a71e:	9307      	str	r3, [sp, #28]
 802a720:	f8cd 8018 	str.w	r8, [sp, #24]
 802a724:	ee08 0a10 	vmov	s16, r0
 802a728:	e9c4 8912 	strd	r8, r9, [r4, #72]	; 0x48
 802a72c:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 802a730:	4b9e      	ldr	r3, [pc, #632]	; (802a9ac <_printf_float+0x2d8>)
 802a732:	f04f 32ff 	mov.w	r2, #4294967295
 802a736:	f7d6 fa01 	bl	8000b3c <__aeabi_dcmpun>
 802a73a:	bb88      	cbnz	r0, 802a7a0 <_printf_float+0xcc>
 802a73c:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 802a740:	4b9a      	ldr	r3, [pc, #616]	; (802a9ac <_printf_float+0x2d8>)
 802a742:	f04f 32ff 	mov.w	r2, #4294967295
 802a746:	f7d6 f9db 	bl	8000b00 <__aeabi_dcmple>
 802a74a:	bb48      	cbnz	r0, 802a7a0 <_printf_float+0xcc>
 802a74c:	2200      	movs	r2, #0
 802a74e:	2300      	movs	r3, #0
 802a750:	4640      	mov	r0, r8
 802a752:	4649      	mov	r1, r9
 802a754:	f7d6 f9ca 	bl	8000aec <__aeabi_dcmplt>
 802a758:	b110      	cbz	r0, 802a760 <_printf_float+0x8c>
 802a75a:	232d      	movs	r3, #45	; 0x2d
 802a75c:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 802a760:	4a93      	ldr	r2, [pc, #588]	; (802a9b0 <_printf_float+0x2dc>)
 802a762:	4b94      	ldr	r3, [pc, #592]	; (802a9b4 <_printf_float+0x2e0>)
 802a764:	f1bb 0f47 	cmp.w	fp, #71	; 0x47
 802a768:	bf94      	ite	ls
 802a76a:	4690      	movls	r8, r2
 802a76c:	4698      	movhi	r8, r3
 802a76e:	2303      	movs	r3, #3
 802a770:	6123      	str	r3, [r4, #16]
 802a772:	9b05      	ldr	r3, [sp, #20]
 802a774:	f023 0304 	bic.w	r3, r3, #4
 802a778:	6023      	str	r3, [r4, #0]
 802a77a:	f04f 0900 	mov.w	r9, #0
 802a77e:	9700      	str	r7, [sp, #0]
 802a780:	4633      	mov	r3, r6
 802a782:	aa0b      	add	r2, sp, #44	; 0x2c
 802a784:	4621      	mov	r1, r4
 802a786:	4628      	mov	r0, r5
 802a788:	f000 f9da 	bl	802ab40 <_printf_common>
 802a78c:	3001      	adds	r0, #1
 802a78e:	f040 8090 	bne.w	802a8b2 <_printf_float+0x1de>
 802a792:	f04f 30ff 	mov.w	r0, #4294967295
 802a796:	b00d      	add	sp, #52	; 0x34
 802a798:	ecbd 8b02 	vpop	{d8}
 802a79c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802a7a0:	4642      	mov	r2, r8
 802a7a2:	464b      	mov	r3, r9
 802a7a4:	4640      	mov	r0, r8
 802a7a6:	4649      	mov	r1, r9
 802a7a8:	f7d6 f9c8 	bl	8000b3c <__aeabi_dcmpun>
 802a7ac:	b140      	cbz	r0, 802a7c0 <_printf_float+0xec>
 802a7ae:	464b      	mov	r3, r9
 802a7b0:	2b00      	cmp	r3, #0
 802a7b2:	bfbc      	itt	lt
 802a7b4:	232d      	movlt	r3, #45	; 0x2d
 802a7b6:	f884 3043 	strblt.w	r3, [r4, #67]	; 0x43
 802a7ba:	4a7f      	ldr	r2, [pc, #508]	; (802a9b8 <_printf_float+0x2e4>)
 802a7bc:	4b7f      	ldr	r3, [pc, #508]	; (802a9bc <_printf_float+0x2e8>)
 802a7be:	e7d1      	b.n	802a764 <_printf_float+0x90>
 802a7c0:	6863      	ldr	r3, [r4, #4]
 802a7c2:	f00b 02df 	and.w	r2, fp, #223	; 0xdf
 802a7c6:	9206      	str	r2, [sp, #24]
 802a7c8:	1c5a      	adds	r2, r3, #1
 802a7ca:	d13f      	bne.n	802a84c <_printf_float+0x178>
 802a7cc:	2306      	movs	r3, #6
 802a7ce:	6063      	str	r3, [r4, #4]
 802a7d0:	9b05      	ldr	r3, [sp, #20]
 802a7d2:	6861      	ldr	r1, [r4, #4]
 802a7d4:	f443 6280 	orr.w	r2, r3, #1024	; 0x400
 802a7d8:	2300      	movs	r3, #0
 802a7da:	9303      	str	r3, [sp, #12]
 802a7dc:	ab0a      	add	r3, sp, #40	; 0x28
 802a7de:	e9cd b301 	strd	fp, r3, [sp, #4]
 802a7e2:	ab09      	add	r3, sp, #36	; 0x24
 802a7e4:	ec49 8b10 	vmov	d0, r8, r9
 802a7e8:	9300      	str	r3, [sp, #0]
 802a7ea:	6022      	str	r2, [r4, #0]
 802a7ec:	f10d 0323 	add.w	r3, sp, #35	; 0x23
 802a7f0:	4628      	mov	r0, r5
 802a7f2:	f7ff fecf 	bl	802a594 <__cvt>
 802a7f6:	9b06      	ldr	r3, [sp, #24]
 802a7f8:	9909      	ldr	r1, [sp, #36]	; 0x24
 802a7fa:	2b47      	cmp	r3, #71	; 0x47
 802a7fc:	4680      	mov	r8, r0
 802a7fe:	d108      	bne.n	802a812 <_printf_float+0x13e>
 802a800:	1cc8      	adds	r0, r1, #3
 802a802:	db02      	blt.n	802a80a <_printf_float+0x136>
 802a804:	6863      	ldr	r3, [r4, #4]
 802a806:	4299      	cmp	r1, r3
 802a808:	dd41      	ble.n	802a88e <_printf_float+0x1ba>
 802a80a:	f1ab 0302 	sub.w	r3, fp, #2
 802a80e:	fa5f fb83 	uxtb.w	fp, r3
 802a812:	f1bb 0f65 	cmp.w	fp, #101	; 0x65
 802a816:	d820      	bhi.n	802a85a <_printf_float+0x186>
 802a818:	3901      	subs	r1, #1
 802a81a:	465a      	mov	r2, fp
 802a81c:	f104 0050 	add.w	r0, r4, #80	; 0x50
 802a820:	9109      	str	r1, [sp, #36]	; 0x24
 802a822:	f7ff ff19 	bl	802a658 <__exponent>
 802a826:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 802a828:	1813      	adds	r3, r2, r0
 802a82a:	2a01      	cmp	r2, #1
 802a82c:	4681      	mov	r9, r0
 802a82e:	6123      	str	r3, [r4, #16]
 802a830:	dc02      	bgt.n	802a838 <_printf_float+0x164>
 802a832:	6822      	ldr	r2, [r4, #0]
 802a834:	07d2      	lsls	r2, r2, #31
 802a836:	d501      	bpl.n	802a83c <_printf_float+0x168>
 802a838:	3301      	adds	r3, #1
 802a83a:	6123      	str	r3, [r4, #16]
 802a83c:	f89d 3023 	ldrb.w	r3, [sp, #35]	; 0x23
 802a840:	2b00      	cmp	r3, #0
 802a842:	d09c      	beq.n	802a77e <_printf_float+0xaa>
 802a844:	232d      	movs	r3, #45	; 0x2d
 802a846:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 802a84a:	e798      	b.n	802a77e <_printf_float+0xaa>
 802a84c:	9a06      	ldr	r2, [sp, #24]
 802a84e:	2a47      	cmp	r2, #71	; 0x47
 802a850:	d1be      	bne.n	802a7d0 <_printf_float+0xfc>
 802a852:	2b00      	cmp	r3, #0
 802a854:	d1bc      	bne.n	802a7d0 <_printf_float+0xfc>
 802a856:	2301      	movs	r3, #1
 802a858:	e7b9      	b.n	802a7ce <_printf_float+0xfa>
 802a85a:	f1bb 0f66 	cmp.w	fp, #102	; 0x66
 802a85e:	d118      	bne.n	802a892 <_printf_float+0x1be>
 802a860:	2900      	cmp	r1, #0
 802a862:	6863      	ldr	r3, [r4, #4]
 802a864:	dd0b      	ble.n	802a87e <_printf_float+0x1aa>
 802a866:	6121      	str	r1, [r4, #16]
 802a868:	b913      	cbnz	r3, 802a870 <_printf_float+0x19c>
 802a86a:	6822      	ldr	r2, [r4, #0]
 802a86c:	07d0      	lsls	r0, r2, #31
 802a86e:	d502      	bpl.n	802a876 <_printf_float+0x1a2>
 802a870:	3301      	adds	r3, #1
 802a872:	440b      	add	r3, r1
 802a874:	6123      	str	r3, [r4, #16]
 802a876:	65a1      	str	r1, [r4, #88]	; 0x58
 802a878:	f04f 0900 	mov.w	r9, #0
 802a87c:	e7de      	b.n	802a83c <_printf_float+0x168>
 802a87e:	b913      	cbnz	r3, 802a886 <_printf_float+0x1b2>
 802a880:	6822      	ldr	r2, [r4, #0]
 802a882:	07d2      	lsls	r2, r2, #31
 802a884:	d501      	bpl.n	802a88a <_printf_float+0x1b6>
 802a886:	3302      	adds	r3, #2
 802a888:	e7f4      	b.n	802a874 <_printf_float+0x1a0>
 802a88a:	2301      	movs	r3, #1
 802a88c:	e7f2      	b.n	802a874 <_printf_float+0x1a0>
 802a88e:	f04f 0b67 	mov.w	fp, #103	; 0x67
 802a892:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 802a894:	4299      	cmp	r1, r3
 802a896:	db05      	blt.n	802a8a4 <_printf_float+0x1d0>
 802a898:	6823      	ldr	r3, [r4, #0]
 802a89a:	6121      	str	r1, [r4, #16]
 802a89c:	07d8      	lsls	r0, r3, #31
 802a89e:	d5ea      	bpl.n	802a876 <_printf_float+0x1a2>
 802a8a0:	1c4b      	adds	r3, r1, #1
 802a8a2:	e7e7      	b.n	802a874 <_printf_float+0x1a0>
 802a8a4:	2900      	cmp	r1, #0
 802a8a6:	bfd4      	ite	le
 802a8a8:	f1c1 0202 	rsble	r2, r1, #2
 802a8ac:	2201      	movgt	r2, #1
 802a8ae:	4413      	add	r3, r2
 802a8b0:	e7e0      	b.n	802a874 <_printf_float+0x1a0>
 802a8b2:	6823      	ldr	r3, [r4, #0]
 802a8b4:	055a      	lsls	r2, r3, #21
 802a8b6:	d407      	bmi.n	802a8c8 <_printf_float+0x1f4>
 802a8b8:	6923      	ldr	r3, [r4, #16]
 802a8ba:	4642      	mov	r2, r8
 802a8bc:	4631      	mov	r1, r6
 802a8be:	4628      	mov	r0, r5
 802a8c0:	47b8      	blx	r7
 802a8c2:	3001      	adds	r0, #1
 802a8c4:	d12c      	bne.n	802a920 <_printf_float+0x24c>
 802a8c6:	e764      	b.n	802a792 <_printf_float+0xbe>
 802a8c8:	f1bb 0f65 	cmp.w	fp, #101	; 0x65
 802a8cc:	f240 80e0 	bls.w	802aa90 <_printf_float+0x3bc>
 802a8d0:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	; 0x48
 802a8d4:	2200      	movs	r2, #0
 802a8d6:	2300      	movs	r3, #0
 802a8d8:	f7d6 f8fe 	bl	8000ad8 <__aeabi_dcmpeq>
 802a8dc:	2800      	cmp	r0, #0
 802a8de:	d034      	beq.n	802a94a <_printf_float+0x276>
 802a8e0:	4a37      	ldr	r2, [pc, #220]	; (802a9c0 <_printf_float+0x2ec>)
 802a8e2:	2301      	movs	r3, #1
 802a8e4:	4631      	mov	r1, r6
 802a8e6:	4628      	mov	r0, r5
 802a8e8:	47b8      	blx	r7
 802a8ea:	3001      	adds	r0, #1
 802a8ec:	f43f af51 	beq.w	802a792 <_printf_float+0xbe>
 802a8f0:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 802a8f4:	429a      	cmp	r2, r3
 802a8f6:	db02      	blt.n	802a8fe <_printf_float+0x22a>
 802a8f8:	6823      	ldr	r3, [r4, #0]
 802a8fa:	07d8      	lsls	r0, r3, #31
 802a8fc:	d510      	bpl.n	802a920 <_printf_float+0x24c>
 802a8fe:	ee18 3a10 	vmov	r3, s16
 802a902:	4652      	mov	r2, sl
 802a904:	4631      	mov	r1, r6
 802a906:	4628      	mov	r0, r5
 802a908:	47b8      	blx	r7
 802a90a:	3001      	adds	r0, #1
 802a90c:	f43f af41 	beq.w	802a792 <_printf_float+0xbe>
 802a910:	f04f 0800 	mov.w	r8, #0
 802a914:	f104 091a 	add.w	r9, r4, #26
 802a918:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 802a91a:	3b01      	subs	r3, #1
 802a91c:	4543      	cmp	r3, r8
 802a91e:	dc09      	bgt.n	802a934 <_printf_float+0x260>
 802a920:	6823      	ldr	r3, [r4, #0]
 802a922:	079b      	lsls	r3, r3, #30
 802a924:	f100 8107 	bmi.w	802ab36 <_printf_float+0x462>
 802a928:	68e0      	ldr	r0, [r4, #12]
 802a92a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 802a92c:	4298      	cmp	r0, r3
 802a92e:	bfb8      	it	lt
 802a930:	4618      	movlt	r0, r3
 802a932:	e730      	b.n	802a796 <_printf_float+0xc2>
 802a934:	2301      	movs	r3, #1
 802a936:	464a      	mov	r2, r9
 802a938:	4631      	mov	r1, r6
 802a93a:	4628      	mov	r0, r5
 802a93c:	47b8      	blx	r7
 802a93e:	3001      	adds	r0, #1
 802a940:	f43f af27 	beq.w	802a792 <_printf_float+0xbe>
 802a944:	f108 0801 	add.w	r8, r8, #1
 802a948:	e7e6      	b.n	802a918 <_printf_float+0x244>
 802a94a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802a94c:	2b00      	cmp	r3, #0
 802a94e:	dc39      	bgt.n	802a9c4 <_printf_float+0x2f0>
 802a950:	4a1b      	ldr	r2, [pc, #108]	; (802a9c0 <_printf_float+0x2ec>)
 802a952:	2301      	movs	r3, #1
 802a954:	4631      	mov	r1, r6
 802a956:	4628      	mov	r0, r5
 802a958:	47b8      	blx	r7
 802a95a:	3001      	adds	r0, #1
 802a95c:	f43f af19 	beq.w	802a792 <_printf_float+0xbe>
 802a960:	e9dd 3209 	ldrd	r3, r2, [sp, #36]	; 0x24
 802a964:	4313      	orrs	r3, r2
 802a966:	d102      	bne.n	802a96e <_printf_float+0x29a>
 802a968:	6823      	ldr	r3, [r4, #0]
 802a96a:	07d9      	lsls	r1, r3, #31
 802a96c:	d5d8      	bpl.n	802a920 <_printf_float+0x24c>
 802a96e:	ee18 3a10 	vmov	r3, s16
 802a972:	4652      	mov	r2, sl
 802a974:	4631      	mov	r1, r6
 802a976:	4628      	mov	r0, r5
 802a978:	47b8      	blx	r7
 802a97a:	3001      	adds	r0, #1
 802a97c:	f43f af09 	beq.w	802a792 <_printf_float+0xbe>
 802a980:	f04f 0900 	mov.w	r9, #0
 802a984:	f104 0a1a 	add.w	sl, r4, #26
 802a988:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802a98a:	425b      	negs	r3, r3
 802a98c:	454b      	cmp	r3, r9
 802a98e:	dc01      	bgt.n	802a994 <_printf_float+0x2c0>
 802a990:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 802a992:	e792      	b.n	802a8ba <_printf_float+0x1e6>
 802a994:	2301      	movs	r3, #1
 802a996:	4652      	mov	r2, sl
 802a998:	4631      	mov	r1, r6
 802a99a:	4628      	mov	r0, r5
 802a99c:	47b8      	blx	r7
 802a99e:	3001      	adds	r0, #1
 802a9a0:	f43f aef7 	beq.w	802a792 <_printf_float+0xbe>
 802a9a4:	f109 0901 	add.w	r9, r9, #1
 802a9a8:	e7ee      	b.n	802a988 <_printf_float+0x2b4>
 802a9aa:	bf00      	nop
 802a9ac:	7fefffff 	.word	0x7fefffff
 802a9b0:	080301ec 	.word	0x080301ec
 802a9b4:	080301f0 	.word	0x080301f0
 802a9b8:	080301f4 	.word	0x080301f4
 802a9bc:	080301f8 	.word	0x080301f8
 802a9c0:	080301fc 	.word	0x080301fc
 802a9c4:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 802a9c6:	6da3      	ldr	r3, [r4, #88]	; 0x58
 802a9c8:	429a      	cmp	r2, r3
 802a9ca:	bfa8      	it	ge
 802a9cc:	461a      	movge	r2, r3
 802a9ce:	2a00      	cmp	r2, #0
 802a9d0:	4691      	mov	r9, r2
 802a9d2:	dc37      	bgt.n	802aa44 <_printf_float+0x370>
 802a9d4:	f04f 0b00 	mov.w	fp, #0
 802a9d8:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 802a9dc:	f104 021a 	add.w	r2, r4, #26
 802a9e0:	6da3      	ldr	r3, [r4, #88]	; 0x58
 802a9e2:	9305      	str	r3, [sp, #20]
 802a9e4:	eba3 0309 	sub.w	r3, r3, r9
 802a9e8:	455b      	cmp	r3, fp
 802a9ea:	dc33      	bgt.n	802aa54 <_printf_float+0x380>
 802a9ec:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 802a9f0:	429a      	cmp	r2, r3
 802a9f2:	db3b      	blt.n	802aa6c <_printf_float+0x398>
 802a9f4:	6823      	ldr	r3, [r4, #0]
 802a9f6:	07da      	lsls	r2, r3, #31
 802a9f8:	d438      	bmi.n	802aa6c <_printf_float+0x398>
 802a9fa:	e9dd 3209 	ldrd	r3, r2, [sp, #36]	; 0x24
 802a9fe:	eba2 0903 	sub.w	r9, r2, r3
 802aa02:	9b05      	ldr	r3, [sp, #20]
 802aa04:	1ad2      	subs	r2, r2, r3
 802aa06:	4591      	cmp	r9, r2
 802aa08:	bfa8      	it	ge
 802aa0a:	4691      	movge	r9, r2
 802aa0c:	f1b9 0f00 	cmp.w	r9, #0
 802aa10:	dc35      	bgt.n	802aa7e <_printf_float+0x3aa>
 802aa12:	f04f 0800 	mov.w	r8, #0
 802aa16:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 802aa1a:	f104 0a1a 	add.w	sl, r4, #26
 802aa1e:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 802aa22:	1a9b      	subs	r3, r3, r2
 802aa24:	eba3 0309 	sub.w	r3, r3, r9
 802aa28:	4543      	cmp	r3, r8
 802aa2a:	f77f af79 	ble.w	802a920 <_printf_float+0x24c>
 802aa2e:	2301      	movs	r3, #1
 802aa30:	4652      	mov	r2, sl
 802aa32:	4631      	mov	r1, r6
 802aa34:	4628      	mov	r0, r5
 802aa36:	47b8      	blx	r7
 802aa38:	3001      	adds	r0, #1
 802aa3a:	f43f aeaa 	beq.w	802a792 <_printf_float+0xbe>
 802aa3e:	f108 0801 	add.w	r8, r8, #1
 802aa42:	e7ec      	b.n	802aa1e <_printf_float+0x34a>
 802aa44:	4613      	mov	r3, r2
 802aa46:	4631      	mov	r1, r6
 802aa48:	4642      	mov	r2, r8
 802aa4a:	4628      	mov	r0, r5
 802aa4c:	47b8      	blx	r7
 802aa4e:	3001      	adds	r0, #1
 802aa50:	d1c0      	bne.n	802a9d4 <_printf_float+0x300>
 802aa52:	e69e      	b.n	802a792 <_printf_float+0xbe>
 802aa54:	2301      	movs	r3, #1
 802aa56:	4631      	mov	r1, r6
 802aa58:	4628      	mov	r0, r5
 802aa5a:	9205      	str	r2, [sp, #20]
 802aa5c:	47b8      	blx	r7
 802aa5e:	3001      	adds	r0, #1
 802aa60:	f43f ae97 	beq.w	802a792 <_printf_float+0xbe>
 802aa64:	9a05      	ldr	r2, [sp, #20]
 802aa66:	f10b 0b01 	add.w	fp, fp, #1
 802aa6a:	e7b9      	b.n	802a9e0 <_printf_float+0x30c>
 802aa6c:	ee18 3a10 	vmov	r3, s16
 802aa70:	4652      	mov	r2, sl
 802aa72:	4631      	mov	r1, r6
 802aa74:	4628      	mov	r0, r5
 802aa76:	47b8      	blx	r7
 802aa78:	3001      	adds	r0, #1
 802aa7a:	d1be      	bne.n	802a9fa <_printf_float+0x326>
 802aa7c:	e689      	b.n	802a792 <_printf_float+0xbe>
 802aa7e:	9a05      	ldr	r2, [sp, #20]
 802aa80:	464b      	mov	r3, r9
 802aa82:	4442      	add	r2, r8
 802aa84:	4631      	mov	r1, r6
 802aa86:	4628      	mov	r0, r5
 802aa88:	47b8      	blx	r7
 802aa8a:	3001      	adds	r0, #1
 802aa8c:	d1c1      	bne.n	802aa12 <_printf_float+0x33e>
 802aa8e:	e680      	b.n	802a792 <_printf_float+0xbe>
 802aa90:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 802aa92:	2a01      	cmp	r2, #1
 802aa94:	dc01      	bgt.n	802aa9a <_printf_float+0x3c6>
 802aa96:	07db      	lsls	r3, r3, #31
 802aa98:	d53a      	bpl.n	802ab10 <_printf_float+0x43c>
 802aa9a:	2301      	movs	r3, #1
 802aa9c:	4642      	mov	r2, r8
 802aa9e:	4631      	mov	r1, r6
 802aaa0:	4628      	mov	r0, r5
 802aaa2:	47b8      	blx	r7
 802aaa4:	3001      	adds	r0, #1
 802aaa6:	f43f ae74 	beq.w	802a792 <_printf_float+0xbe>
 802aaaa:	ee18 3a10 	vmov	r3, s16
 802aaae:	4652      	mov	r2, sl
 802aab0:	4631      	mov	r1, r6
 802aab2:	4628      	mov	r0, r5
 802aab4:	47b8      	blx	r7
 802aab6:	3001      	adds	r0, #1
 802aab8:	f43f ae6b 	beq.w	802a792 <_printf_float+0xbe>
 802aabc:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	; 0x48
 802aac0:	2200      	movs	r2, #0
 802aac2:	2300      	movs	r3, #0
 802aac4:	f8dd a028 	ldr.w	sl, [sp, #40]	; 0x28
 802aac8:	f7d6 f806 	bl	8000ad8 <__aeabi_dcmpeq>
 802aacc:	b9d8      	cbnz	r0, 802ab06 <_printf_float+0x432>
 802aace:	f10a 33ff 	add.w	r3, sl, #4294967295
 802aad2:	f108 0201 	add.w	r2, r8, #1
 802aad6:	4631      	mov	r1, r6
 802aad8:	4628      	mov	r0, r5
 802aada:	47b8      	blx	r7
 802aadc:	3001      	adds	r0, #1
 802aade:	d10e      	bne.n	802aafe <_printf_float+0x42a>
 802aae0:	e657      	b.n	802a792 <_printf_float+0xbe>
 802aae2:	2301      	movs	r3, #1
 802aae4:	4652      	mov	r2, sl
 802aae6:	4631      	mov	r1, r6
 802aae8:	4628      	mov	r0, r5
 802aaea:	47b8      	blx	r7
 802aaec:	3001      	adds	r0, #1
 802aaee:	f43f ae50 	beq.w	802a792 <_printf_float+0xbe>
 802aaf2:	f108 0801 	add.w	r8, r8, #1
 802aaf6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 802aaf8:	3b01      	subs	r3, #1
 802aafa:	4543      	cmp	r3, r8
 802aafc:	dcf1      	bgt.n	802aae2 <_printf_float+0x40e>
 802aafe:	464b      	mov	r3, r9
 802ab00:	f104 0250 	add.w	r2, r4, #80	; 0x50
 802ab04:	e6da      	b.n	802a8bc <_printf_float+0x1e8>
 802ab06:	f04f 0800 	mov.w	r8, #0
 802ab0a:	f104 0a1a 	add.w	sl, r4, #26
 802ab0e:	e7f2      	b.n	802aaf6 <_printf_float+0x422>
 802ab10:	2301      	movs	r3, #1
 802ab12:	4642      	mov	r2, r8
 802ab14:	e7df      	b.n	802aad6 <_printf_float+0x402>
 802ab16:	2301      	movs	r3, #1
 802ab18:	464a      	mov	r2, r9
 802ab1a:	4631      	mov	r1, r6
 802ab1c:	4628      	mov	r0, r5
 802ab1e:	47b8      	blx	r7
 802ab20:	3001      	adds	r0, #1
 802ab22:	f43f ae36 	beq.w	802a792 <_printf_float+0xbe>
 802ab26:	f108 0801 	add.w	r8, r8, #1
 802ab2a:	68e3      	ldr	r3, [r4, #12]
 802ab2c:	990b      	ldr	r1, [sp, #44]	; 0x2c
 802ab2e:	1a5b      	subs	r3, r3, r1
 802ab30:	4543      	cmp	r3, r8
 802ab32:	dcf0      	bgt.n	802ab16 <_printf_float+0x442>
 802ab34:	e6f8      	b.n	802a928 <_printf_float+0x254>
 802ab36:	f04f 0800 	mov.w	r8, #0
 802ab3a:	f104 0919 	add.w	r9, r4, #25
 802ab3e:	e7f4      	b.n	802ab2a <_printf_float+0x456>

0802ab40 <_printf_common>:
 802ab40:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 802ab44:	4616      	mov	r6, r2
 802ab46:	4699      	mov	r9, r3
 802ab48:	688a      	ldr	r2, [r1, #8]
 802ab4a:	690b      	ldr	r3, [r1, #16]
 802ab4c:	f8dd 8020 	ldr.w	r8, [sp, #32]
 802ab50:	4293      	cmp	r3, r2
 802ab52:	bfb8      	it	lt
 802ab54:	4613      	movlt	r3, r2
 802ab56:	6033      	str	r3, [r6, #0]
 802ab58:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 802ab5c:	4607      	mov	r7, r0
 802ab5e:	460c      	mov	r4, r1
 802ab60:	b10a      	cbz	r2, 802ab66 <_printf_common+0x26>
 802ab62:	3301      	adds	r3, #1
 802ab64:	6033      	str	r3, [r6, #0]
 802ab66:	6823      	ldr	r3, [r4, #0]
 802ab68:	0699      	lsls	r1, r3, #26
 802ab6a:	bf42      	ittt	mi
 802ab6c:	6833      	ldrmi	r3, [r6, #0]
 802ab6e:	3302      	addmi	r3, #2
 802ab70:	6033      	strmi	r3, [r6, #0]
 802ab72:	6825      	ldr	r5, [r4, #0]
 802ab74:	f015 0506 	ands.w	r5, r5, #6
 802ab78:	d106      	bne.n	802ab88 <_printf_common+0x48>
 802ab7a:	f104 0a19 	add.w	sl, r4, #25
 802ab7e:	68e3      	ldr	r3, [r4, #12]
 802ab80:	6832      	ldr	r2, [r6, #0]
 802ab82:	1a9b      	subs	r3, r3, r2
 802ab84:	42ab      	cmp	r3, r5
 802ab86:	dc26      	bgt.n	802abd6 <_printf_common+0x96>
 802ab88:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 802ab8c:	1e13      	subs	r3, r2, #0
 802ab8e:	6822      	ldr	r2, [r4, #0]
 802ab90:	bf18      	it	ne
 802ab92:	2301      	movne	r3, #1
 802ab94:	0692      	lsls	r2, r2, #26
 802ab96:	d42b      	bmi.n	802abf0 <_printf_common+0xb0>
 802ab98:	f104 0243 	add.w	r2, r4, #67	; 0x43
 802ab9c:	4649      	mov	r1, r9
 802ab9e:	4638      	mov	r0, r7
 802aba0:	47c0      	blx	r8
 802aba2:	3001      	adds	r0, #1
 802aba4:	d01e      	beq.n	802abe4 <_printf_common+0xa4>
 802aba6:	6823      	ldr	r3, [r4, #0]
 802aba8:	6922      	ldr	r2, [r4, #16]
 802abaa:	f003 0306 	and.w	r3, r3, #6
 802abae:	2b04      	cmp	r3, #4
 802abb0:	bf02      	ittt	eq
 802abb2:	68e5      	ldreq	r5, [r4, #12]
 802abb4:	6833      	ldreq	r3, [r6, #0]
 802abb6:	1aed      	subeq	r5, r5, r3
 802abb8:	68a3      	ldr	r3, [r4, #8]
 802abba:	bf0c      	ite	eq
 802abbc:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 802abc0:	2500      	movne	r5, #0
 802abc2:	4293      	cmp	r3, r2
 802abc4:	bfc4      	itt	gt
 802abc6:	1a9b      	subgt	r3, r3, r2
 802abc8:	18ed      	addgt	r5, r5, r3
 802abca:	2600      	movs	r6, #0
 802abcc:	341a      	adds	r4, #26
 802abce:	42b5      	cmp	r5, r6
 802abd0:	d11a      	bne.n	802ac08 <_printf_common+0xc8>
 802abd2:	2000      	movs	r0, #0
 802abd4:	e008      	b.n	802abe8 <_printf_common+0xa8>
 802abd6:	2301      	movs	r3, #1
 802abd8:	4652      	mov	r2, sl
 802abda:	4649      	mov	r1, r9
 802abdc:	4638      	mov	r0, r7
 802abde:	47c0      	blx	r8
 802abe0:	3001      	adds	r0, #1
 802abe2:	d103      	bne.n	802abec <_printf_common+0xac>
 802abe4:	f04f 30ff 	mov.w	r0, #4294967295
 802abe8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 802abec:	3501      	adds	r5, #1
 802abee:	e7c6      	b.n	802ab7e <_printf_common+0x3e>
 802abf0:	18e1      	adds	r1, r4, r3
 802abf2:	1c5a      	adds	r2, r3, #1
 802abf4:	2030      	movs	r0, #48	; 0x30
 802abf6:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 802abfa:	4422      	add	r2, r4
 802abfc:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 802ac00:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 802ac04:	3302      	adds	r3, #2
 802ac06:	e7c7      	b.n	802ab98 <_printf_common+0x58>
 802ac08:	2301      	movs	r3, #1
 802ac0a:	4622      	mov	r2, r4
 802ac0c:	4649      	mov	r1, r9
 802ac0e:	4638      	mov	r0, r7
 802ac10:	47c0      	blx	r8
 802ac12:	3001      	adds	r0, #1
 802ac14:	d0e6      	beq.n	802abe4 <_printf_common+0xa4>
 802ac16:	3601      	adds	r6, #1
 802ac18:	e7d9      	b.n	802abce <_printf_common+0x8e>
	...

0802ac1c <_printf_i>:
 802ac1c:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 802ac20:	7e0f      	ldrb	r7, [r1, #24]
 802ac22:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 802ac24:	2f78      	cmp	r7, #120	; 0x78
 802ac26:	4691      	mov	r9, r2
 802ac28:	4680      	mov	r8, r0
 802ac2a:	460c      	mov	r4, r1
 802ac2c:	469a      	mov	sl, r3
 802ac2e:	f101 0243 	add.w	r2, r1, #67	; 0x43
 802ac32:	d807      	bhi.n	802ac44 <_printf_i+0x28>
 802ac34:	2f62      	cmp	r7, #98	; 0x62
 802ac36:	d80a      	bhi.n	802ac4e <_printf_i+0x32>
 802ac38:	2f00      	cmp	r7, #0
 802ac3a:	f000 80d4 	beq.w	802ade6 <_printf_i+0x1ca>
 802ac3e:	2f58      	cmp	r7, #88	; 0x58
 802ac40:	f000 80c0 	beq.w	802adc4 <_printf_i+0x1a8>
 802ac44:	f104 0542 	add.w	r5, r4, #66	; 0x42
 802ac48:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 802ac4c:	e03a      	b.n	802acc4 <_printf_i+0xa8>
 802ac4e:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 802ac52:	2b15      	cmp	r3, #21
 802ac54:	d8f6      	bhi.n	802ac44 <_printf_i+0x28>
 802ac56:	a101      	add	r1, pc, #4	; (adr r1, 802ac5c <_printf_i+0x40>)
 802ac58:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 802ac5c:	0802acb5 	.word	0x0802acb5
 802ac60:	0802acc9 	.word	0x0802acc9
 802ac64:	0802ac45 	.word	0x0802ac45
 802ac68:	0802ac45 	.word	0x0802ac45
 802ac6c:	0802ac45 	.word	0x0802ac45
 802ac70:	0802ac45 	.word	0x0802ac45
 802ac74:	0802acc9 	.word	0x0802acc9
 802ac78:	0802ac45 	.word	0x0802ac45
 802ac7c:	0802ac45 	.word	0x0802ac45
 802ac80:	0802ac45 	.word	0x0802ac45
 802ac84:	0802ac45 	.word	0x0802ac45
 802ac88:	0802adcd 	.word	0x0802adcd
 802ac8c:	0802acf5 	.word	0x0802acf5
 802ac90:	0802ad87 	.word	0x0802ad87
 802ac94:	0802ac45 	.word	0x0802ac45
 802ac98:	0802ac45 	.word	0x0802ac45
 802ac9c:	0802adef 	.word	0x0802adef
 802aca0:	0802ac45 	.word	0x0802ac45
 802aca4:	0802acf5 	.word	0x0802acf5
 802aca8:	0802ac45 	.word	0x0802ac45
 802acac:	0802ac45 	.word	0x0802ac45
 802acb0:	0802ad8f 	.word	0x0802ad8f
 802acb4:	682b      	ldr	r3, [r5, #0]
 802acb6:	1d1a      	adds	r2, r3, #4
 802acb8:	681b      	ldr	r3, [r3, #0]
 802acba:	602a      	str	r2, [r5, #0]
 802acbc:	f104 0542 	add.w	r5, r4, #66	; 0x42
 802acc0:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 802acc4:	2301      	movs	r3, #1
 802acc6:	e09f      	b.n	802ae08 <_printf_i+0x1ec>
 802acc8:	6820      	ldr	r0, [r4, #0]
 802acca:	682b      	ldr	r3, [r5, #0]
 802accc:	0607      	lsls	r7, r0, #24
 802acce:	f103 0104 	add.w	r1, r3, #4
 802acd2:	6029      	str	r1, [r5, #0]
 802acd4:	d501      	bpl.n	802acda <_printf_i+0xbe>
 802acd6:	681e      	ldr	r6, [r3, #0]
 802acd8:	e003      	b.n	802ace2 <_printf_i+0xc6>
 802acda:	0646      	lsls	r6, r0, #25
 802acdc:	d5fb      	bpl.n	802acd6 <_printf_i+0xba>
 802acde:	f9b3 6000 	ldrsh.w	r6, [r3]
 802ace2:	2e00      	cmp	r6, #0
 802ace4:	da03      	bge.n	802acee <_printf_i+0xd2>
 802ace6:	232d      	movs	r3, #45	; 0x2d
 802ace8:	4276      	negs	r6, r6
 802acea:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 802acee:	485a      	ldr	r0, [pc, #360]	; (802ae58 <_printf_i+0x23c>)
 802acf0:	230a      	movs	r3, #10
 802acf2:	e012      	b.n	802ad1a <_printf_i+0xfe>
 802acf4:	682b      	ldr	r3, [r5, #0]
 802acf6:	6820      	ldr	r0, [r4, #0]
 802acf8:	1d19      	adds	r1, r3, #4
 802acfa:	6029      	str	r1, [r5, #0]
 802acfc:	0605      	lsls	r5, r0, #24
 802acfe:	d501      	bpl.n	802ad04 <_printf_i+0xe8>
 802ad00:	681e      	ldr	r6, [r3, #0]
 802ad02:	e002      	b.n	802ad0a <_printf_i+0xee>
 802ad04:	0641      	lsls	r1, r0, #25
 802ad06:	d5fb      	bpl.n	802ad00 <_printf_i+0xe4>
 802ad08:	881e      	ldrh	r6, [r3, #0]
 802ad0a:	4853      	ldr	r0, [pc, #332]	; (802ae58 <_printf_i+0x23c>)
 802ad0c:	2f6f      	cmp	r7, #111	; 0x6f
 802ad0e:	bf0c      	ite	eq
 802ad10:	2308      	moveq	r3, #8
 802ad12:	230a      	movne	r3, #10
 802ad14:	2100      	movs	r1, #0
 802ad16:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 802ad1a:	6865      	ldr	r5, [r4, #4]
 802ad1c:	60a5      	str	r5, [r4, #8]
 802ad1e:	2d00      	cmp	r5, #0
 802ad20:	bfa2      	ittt	ge
 802ad22:	6821      	ldrge	r1, [r4, #0]
 802ad24:	f021 0104 	bicge.w	r1, r1, #4
 802ad28:	6021      	strge	r1, [r4, #0]
 802ad2a:	b90e      	cbnz	r6, 802ad30 <_printf_i+0x114>
 802ad2c:	2d00      	cmp	r5, #0
 802ad2e:	d04b      	beq.n	802adc8 <_printf_i+0x1ac>
 802ad30:	4615      	mov	r5, r2
 802ad32:	fbb6 f1f3 	udiv	r1, r6, r3
 802ad36:	fb03 6711 	mls	r7, r3, r1, r6
 802ad3a:	5dc7      	ldrb	r7, [r0, r7]
 802ad3c:	f805 7d01 	strb.w	r7, [r5, #-1]!
 802ad40:	4637      	mov	r7, r6
 802ad42:	42bb      	cmp	r3, r7
 802ad44:	460e      	mov	r6, r1
 802ad46:	d9f4      	bls.n	802ad32 <_printf_i+0x116>
 802ad48:	2b08      	cmp	r3, #8
 802ad4a:	d10b      	bne.n	802ad64 <_printf_i+0x148>
 802ad4c:	6823      	ldr	r3, [r4, #0]
 802ad4e:	07de      	lsls	r6, r3, #31
 802ad50:	d508      	bpl.n	802ad64 <_printf_i+0x148>
 802ad52:	6923      	ldr	r3, [r4, #16]
 802ad54:	6861      	ldr	r1, [r4, #4]
 802ad56:	4299      	cmp	r1, r3
 802ad58:	bfde      	ittt	le
 802ad5a:	2330      	movle	r3, #48	; 0x30
 802ad5c:	f805 3c01 	strble.w	r3, [r5, #-1]
 802ad60:	f105 35ff 	addle.w	r5, r5, #4294967295
 802ad64:	1b52      	subs	r2, r2, r5
 802ad66:	6122      	str	r2, [r4, #16]
 802ad68:	f8cd a000 	str.w	sl, [sp]
 802ad6c:	464b      	mov	r3, r9
 802ad6e:	aa03      	add	r2, sp, #12
 802ad70:	4621      	mov	r1, r4
 802ad72:	4640      	mov	r0, r8
 802ad74:	f7ff fee4 	bl	802ab40 <_printf_common>
 802ad78:	3001      	adds	r0, #1
 802ad7a:	d14a      	bne.n	802ae12 <_printf_i+0x1f6>
 802ad7c:	f04f 30ff 	mov.w	r0, #4294967295
 802ad80:	b004      	add	sp, #16
 802ad82:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 802ad86:	6823      	ldr	r3, [r4, #0]
 802ad88:	f043 0320 	orr.w	r3, r3, #32
 802ad8c:	6023      	str	r3, [r4, #0]
 802ad8e:	4833      	ldr	r0, [pc, #204]	; (802ae5c <_printf_i+0x240>)
 802ad90:	2778      	movs	r7, #120	; 0x78
 802ad92:	f884 7045 	strb.w	r7, [r4, #69]	; 0x45
 802ad96:	6823      	ldr	r3, [r4, #0]
 802ad98:	6829      	ldr	r1, [r5, #0]
 802ad9a:	061f      	lsls	r7, r3, #24
 802ad9c:	f851 6b04 	ldr.w	r6, [r1], #4
 802ada0:	d402      	bmi.n	802ada8 <_printf_i+0x18c>
 802ada2:	065f      	lsls	r7, r3, #25
 802ada4:	bf48      	it	mi
 802ada6:	b2b6      	uxthmi	r6, r6
 802ada8:	07df      	lsls	r7, r3, #31
 802adaa:	bf48      	it	mi
 802adac:	f043 0320 	orrmi.w	r3, r3, #32
 802adb0:	6029      	str	r1, [r5, #0]
 802adb2:	bf48      	it	mi
 802adb4:	6023      	strmi	r3, [r4, #0]
 802adb6:	b91e      	cbnz	r6, 802adc0 <_printf_i+0x1a4>
 802adb8:	6823      	ldr	r3, [r4, #0]
 802adba:	f023 0320 	bic.w	r3, r3, #32
 802adbe:	6023      	str	r3, [r4, #0]
 802adc0:	2310      	movs	r3, #16
 802adc2:	e7a7      	b.n	802ad14 <_printf_i+0xf8>
 802adc4:	4824      	ldr	r0, [pc, #144]	; (802ae58 <_printf_i+0x23c>)
 802adc6:	e7e4      	b.n	802ad92 <_printf_i+0x176>
 802adc8:	4615      	mov	r5, r2
 802adca:	e7bd      	b.n	802ad48 <_printf_i+0x12c>
 802adcc:	682b      	ldr	r3, [r5, #0]
 802adce:	6826      	ldr	r6, [r4, #0]
 802add0:	6961      	ldr	r1, [r4, #20]
 802add2:	1d18      	adds	r0, r3, #4
 802add4:	6028      	str	r0, [r5, #0]
 802add6:	0635      	lsls	r5, r6, #24
 802add8:	681b      	ldr	r3, [r3, #0]
 802adda:	d501      	bpl.n	802ade0 <_printf_i+0x1c4>
 802addc:	6019      	str	r1, [r3, #0]
 802adde:	e002      	b.n	802ade6 <_printf_i+0x1ca>
 802ade0:	0670      	lsls	r0, r6, #25
 802ade2:	d5fb      	bpl.n	802addc <_printf_i+0x1c0>
 802ade4:	8019      	strh	r1, [r3, #0]
 802ade6:	2300      	movs	r3, #0
 802ade8:	6123      	str	r3, [r4, #16]
 802adea:	4615      	mov	r5, r2
 802adec:	e7bc      	b.n	802ad68 <_printf_i+0x14c>
 802adee:	682b      	ldr	r3, [r5, #0]
 802adf0:	1d1a      	adds	r2, r3, #4
 802adf2:	602a      	str	r2, [r5, #0]
 802adf4:	681d      	ldr	r5, [r3, #0]
 802adf6:	6862      	ldr	r2, [r4, #4]
 802adf8:	2100      	movs	r1, #0
 802adfa:	4628      	mov	r0, r5
 802adfc:	f7d5 f9f0 	bl	80001e0 <memchr>
 802ae00:	b108      	cbz	r0, 802ae06 <_printf_i+0x1ea>
 802ae02:	1b40      	subs	r0, r0, r5
 802ae04:	6060      	str	r0, [r4, #4]
 802ae06:	6863      	ldr	r3, [r4, #4]
 802ae08:	6123      	str	r3, [r4, #16]
 802ae0a:	2300      	movs	r3, #0
 802ae0c:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 802ae10:	e7aa      	b.n	802ad68 <_printf_i+0x14c>
 802ae12:	6923      	ldr	r3, [r4, #16]
 802ae14:	462a      	mov	r2, r5
 802ae16:	4649      	mov	r1, r9
 802ae18:	4640      	mov	r0, r8
 802ae1a:	47d0      	blx	sl
 802ae1c:	3001      	adds	r0, #1
 802ae1e:	d0ad      	beq.n	802ad7c <_printf_i+0x160>
 802ae20:	6823      	ldr	r3, [r4, #0]
 802ae22:	079b      	lsls	r3, r3, #30
 802ae24:	d413      	bmi.n	802ae4e <_printf_i+0x232>
 802ae26:	68e0      	ldr	r0, [r4, #12]
 802ae28:	9b03      	ldr	r3, [sp, #12]
 802ae2a:	4298      	cmp	r0, r3
 802ae2c:	bfb8      	it	lt
 802ae2e:	4618      	movlt	r0, r3
 802ae30:	e7a6      	b.n	802ad80 <_printf_i+0x164>
 802ae32:	2301      	movs	r3, #1
 802ae34:	4632      	mov	r2, r6
 802ae36:	4649      	mov	r1, r9
 802ae38:	4640      	mov	r0, r8
 802ae3a:	47d0      	blx	sl
 802ae3c:	3001      	adds	r0, #1
 802ae3e:	d09d      	beq.n	802ad7c <_printf_i+0x160>
 802ae40:	3501      	adds	r5, #1
 802ae42:	68e3      	ldr	r3, [r4, #12]
 802ae44:	9903      	ldr	r1, [sp, #12]
 802ae46:	1a5b      	subs	r3, r3, r1
 802ae48:	42ab      	cmp	r3, r5
 802ae4a:	dcf2      	bgt.n	802ae32 <_printf_i+0x216>
 802ae4c:	e7eb      	b.n	802ae26 <_printf_i+0x20a>
 802ae4e:	2500      	movs	r5, #0
 802ae50:	f104 0619 	add.w	r6, r4, #25
 802ae54:	e7f5      	b.n	802ae42 <_printf_i+0x226>
 802ae56:	bf00      	nop
 802ae58:	080301fe 	.word	0x080301fe
 802ae5c:	0803020f 	.word	0x0803020f

0802ae60 <std>:
 802ae60:	2300      	movs	r3, #0
 802ae62:	b510      	push	{r4, lr}
 802ae64:	4604      	mov	r4, r0
 802ae66:	e9c0 3300 	strd	r3, r3, [r0]
 802ae6a:	e9c0 3304 	strd	r3, r3, [r0, #16]
 802ae6e:	6083      	str	r3, [r0, #8]
 802ae70:	8181      	strh	r1, [r0, #12]
 802ae72:	6643      	str	r3, [r0, #100]	; 0x64
 802ae74:	81c2      	strh	r2, [r0, #14]
 802ae76:	6183      	str	r3, [r0, #24]
 802ae78:	4619      	mov	r1, r3
 802ae7a:	2208      	movs	r2, #8
 802ae7c:	305c      	adds	r0, #92	; 0x5c
 802ae7e:	f000 f926 	bl	802b0ce <memset>
 802ae82:	4b0d      	ldr	r3, [pc, #52]	; (802aeb8 <std+0x58>)
 802ae84:	6263      	str	r3, [r4, #36]	; 0x24
 802ae86:	4b0d      	ldr	r3, [pc, #52]	; (802aebc <std+0x5c>)
 802ae88:	62a3      	str	r3, [r4, #40]	; 0x28
 802ae8a:	4b0d      	ldr	r3, [pc, #52]	; (802aec0 <std+0x60>)
 802ae8c:	62e3      	str	r3, [r4, #44]	; 0x2c
 802ae8e:	4b0d      	ldr	r3, [pc, #52]	; (802aec4 <std+0x64>)
 802ae90:	6323      	str	r3, [r4, #48]	; 0x30
 802ae92:	4b0d      	ldr	r3, [pc, #52]	; (802aec8 <std+0x68>)
 802ae94:	6224      	str	r4, [r4, #32]
 802ae96:	429c      	cmp	r4, r3
 802ae98:	d006      	beq.n	802aea8 <std+0x48>
 802ae9a:	f103 0268 	add.w	r2, r3, #104	; 0x68
 802ae9e:	4294      	cmp	r4, r2
 802aea0:	d002      	beq.n	802aea8 <std+0x48>
 802aea2:	33d0      	adds	r3, #208	; 0xd0
 802aea4:	429c      	cmp	r4, r3
 802aea6:	d105      	bne.n	802aeb4 <std+0x54>
 802aea8:	f104 0058 	add.w	r0, r4, #88	; 0x58
 802aeac:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802aeb0:	f000 b9de 	b.w	802b270 <__retarget_lock_init_recursive>
 802aeb4:	bd10      	pop	{r4, pc}
 802aeb6:	bf00      	nop
 802aeb8:	0802b049 	.word	0x0802b049
 802aebc:	0802b06b 	.word	0x0802b06b
 802aec0:	0802b0a3 	.word	0x0802b0a3
 802aec4:	0802b0c7 	.word	0x0802b0c7
 802aec8:	20007590 	.word	0x20007590

0802aecc <stdio_exit_handler>:
 802aecc:	4a02      	ldr	r2, [pc, #8]	; (802aed8 <stdio_exit_handler+0xc>)
 802aece:	4903      	ldr	r1, [pc, #12]	; (802aedc <stdio_exit_handler+0x10>)
 802aed0:	4803      	ldr	r0, [pc, #12]	; (802aee0 <stdio_exit_handler+0x14>)
 802aed2:	f000 b87b 	b.w	802afcc <_fwalk_sglue>
 802aed6:	bf00      	nop
 802aed8:	2000018c 	.word	0x2000018c
 802aedc:	0802ce19 	.word	0x0802ce19
 802aee0:	20000198 	.word	0x20000198

0802aee4 <cleanup_stdio>:
 802aee4:	6841      	ldr	r1, [r0, #4]
 802aee6:	4b0c      	ldr	r3, [pc, #48]	; (802af18 <cleanup_stdio+0x34>)
 802aee8:	4299      	cmp	r1, r3
 802aeea:	b510      	push	{r4, lr}
 802aeec:	4604      	mov	r4, r0
 802aeee:	d001      	beq.n	802aef4 <cleanup_stdio+0x10>
 802aef0:	f001 ff92 	bl	802ce18 <_fflush_r>
 802aef4:	68a1      	ldr	r1, [r4, #8]
 802aef6:	4b09      	ldr	r3, [pc, #36]	; (802af1c <cleanup_stdio+0x38>)
 802aef8:	4299      	cmp	r1, r3
 802aefa:	d002      	beq.n	802af02 <cleanup_stdio+0x1e>
 802aefc:	4620      	mov	r0, r4
 802aefe:	f001 ff8b 	bl	802ce18 <_fflush_r>
 802af02:	68e1      	ldr	r1, [r4, #12]
 802af04:	4b06      	ldr	r3, [pc, #24]	; (802af20 <cleanup_stdio+0x3c>)
 802af06:	4299      	cmp	r1, r3
 802af08:	d004      	beq.n	802af14 <cleanup_stdio+0x30>
 802af0a:	4620      	mov	r0, r4
 802af0c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802af10:	f001 bf82 	b.w	802ce18 <_fflush_r>
 802af14:	bd10      	pop	{r4, pc}
 802af16:	bf00      	nop
 802af18:	20007590 	.word	0x20007590
 802af1c:	200075f8 	.word	0x200075f8
 802af20:	20007660 	.word	0x20007660

0802af24 <global_stdio_init.part.0>:
 802af24:	b510      	push	{r4, lr}
 802af26:	4b0b      	ldr	r3, [pc, #44]	; (802af54 <global_stdio_init.part.0+0x30>)
 802af28:	4c0b      	ldr	r4, [pc, #44]	; (802af58 <global_stdio_init.part.0+0x34>)
 802af2a:	4a0c      	ldr	r2, [pc, #48]	; (802af5c <global_stdio_init.part.0+0x38>)
 802af2c:	601a      	str	r2, [r3, #0]
 802af2e:	4620      	mov	r0, r4
 802af30:	2200      	movs	r2, #0
 802af32:	2104      	movs	r1, #4
 802af34:	f7ff ff94 	bl	802ae60 <std>
 802af38:	f104 0068 	add.w	r0, r4, #104	; 0x68
 802af3c:	2201      	movs	r2, #1
 802af3e:	2109      	movs	r1, #9
 802af40:	f7ff ff8e 	bl	802ae60 <std>
 802af44:	f104 00d0 	add.w	r0, r4, #208	; 0xd0
 802af48:	2202      	movs	r2, #2
 802af4a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802af4e:	2112      	movs	r1, #18
 802af50:	f7ff bf86 	b.w	802ae60 <std>
 802af54:	200076c8 	.word	0x200076c8
 802af58:	20007590 	.word	0x20007590
 802af5c:	0802aecd 	.word	0x0802aecd

0802af60 <__sfp_lock_acquire>:
 802af60:	4801      	ldr	r0, [pc, #4]	; (802af68 <__sfp_lock_acquire+0x8>)
 802af62:	f000 b986 	b.w	802b272 <__retarget_lock_acquire_recursive>
 802af66:	bf00      	nop
 802af68:	200076d2 	.word	0x200076d2

0802af6c <__sfp_lock_release>:
 802af6c:	4801      	ldr	r0, [pc, #4]	; (802af74 <__sfp_lock_release+0x8>)
 802af6e:	f000 b981 	b.w	802b274 <__retarget_lock_release_recursive>
 802af72:	bf00      	nop
 802af74:	200076d2 	.word	0x200076d2

0802af78 <__sinit>:
 802af78:	b510      	push	{r4, lr}
 802af7a:	4604      	mov	r4, r0
 802af7c:	f7ff fff0 	bl	802af60 <__sfp_lock_acquire>
 802af80:	6a23      	ldr	r3, [r4, #32]
 802af82:	b11b      	cbz	r3, 802af8c <__sinit+0x14>
 802af84:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802af88:	f7ff bff0 	b.w	802af6c <__sfp_lock_release>
 802af8c:	4b04      	ldr	r3, [pc, #16]	; (802afa0 <__sinit+0x28>)
 802af8e:	6223      	str	r3, [r4, #32]
 802af90:	4b04      	ldr	r3, [pc, #16]	; (802afa4 <__sinit+0x2c>)
 802af92:	681b      	ldr	r3, [r3, #0]
 802af94:	2b00      	cmp	r3, #0
 802af96:	d1f5      	bne.n	802af84 <__sinit+0xc>
 802af98:	f7ff ffc4 	bl	802af24 <global_stdio_init.part.0>
 802af9c:	e7f2      	b.n	802af84 <__sinit+0xc>
 802af9e:	bf00      	nop
 802afa0:	0802aee5 	.word	0x0802aee5
 802afa4:	200076c8 	.word	0x200076c8

0802afa8 <fiprintf>:
 802afa8:	b40e      	push	{r1, r2, r3}
 802afaa:	b503      	push	{r0, r1, lr}
 802afac:	4601      	mov	r1, r0
 802afae:	ab03      	add	r3, sp, #12
 802afb0:	4805      	ldr	r0, [pc, #20]	; (802afc8 <fiprintf+0x20>)
 802afb2:	f853 2b04 	ldr.w	r2, [r3], #4
 802afb6:	6800      	ldr	r0, [r0, #0]
 802afb8:	9301      	str	r3, [sp, #4]
 802afba:	f001 fd8d 	bl	802cad8 <_vfiprintf_r>
 802afbe:	b002      	add	sp, #8
 802afc0:	f85d eb04 	ldr.w	lr, [sp], #4
 802afc4:	b003      	add	sp, #12
 802afc6:	4770      	bx	lr
 802afc8:	200001e4 	.word	0x200001e4

0802afcc <_fwalk_sglue>:
 802afcc:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 802afd0:	4607      	mov	r7, r0
 802afd2:	4688      	mov	r8, r1
 802afd4:	4614      	mov	r4, r2
 802afd6:	2600      	movs	r6, #0
 802afd8:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 802afdc:	f1b9 0901 	subs.w	r9, r9, #1
 802afe0:	d505      	bpl.n	802afee <_fwalk_sglue+0x22>
 802afe2:	6824      	ldr	r4, [r4, #0]
 802afe4:	2c00      	cmp	r4, #0
 802afe6:	d1f7      	bne.n	802afd8 <_fwalk_sglue+0xc>
 802afe8:	4630      	mov	r0, r6
 802afea:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 802afee:	89ab      	ldrh	r3, [r5, #12]
 802aff0:	2b01      	cmp	r3, #1
 802aff2:	d907      	bls.n	802b004 <_fwalk_sglue+0x38>
 802aff4:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 802aff8:	3301      	adds	r3, #1
 802affa:	d003      	beq.n	802b004 <_fwalk_sglue+0x38>
 802affc:	4629      	mov	r1, r5
 802affe:	4638      	mov	r0, r7
 802b000:	47c0      	blx	r8
 802b002:	4306      	orrs	r6, r0
 802b004:	3568      	adds	r5, #104	; 0x68
 802b006:	e7e9      	b.n	802afdc <_fwalk_sglue+0x10>

0802b008 <siprintf>:
 802b008:	b40e      	push	{r1, r2, r3}
 802b00a:	b500      	push	{lr}
 802b00c:	b09c      	sub	sp, #112	; 0x70
 802b00e:	ab1d      	add	r3, sp, #116	; 0x74
 802b010:	9002      	str	r0, [sp, #8]
 802b012:	9006      	str	r0, [sp, #24]
 802b014:	f06f 4100 	mvn.w	r1, #2147483648	; 0x80000000
 802b018:	4809      	ldr	r0, [pc, #36]	; (802b040 <siprintf+0x38>)
 802b01a:	9107      	str	r1, [sp, #28]
 802b01c:	9104      	str	r1, [sp, #16]
 802b01e:	4909      	ldr	r1, [pc, #36]	; (802b044 <siprintf+0x3c>)
 802b020:	f853 2b04 	ldr.w	r2, [r3], #4
 802b024:	9105      	str	r1, [sp, #20]
 802b026:	6800      	ldr	r0, [r0, #0]
 802b028:	9301      	str	r3, [sp, #4]
 802b02a:	a902      	add	r1, sp, #8
 802b02c:	f001 fc2c 	bl	802c888 <_svfiprintf_r>
 802b030:	9b02      	ldr	r3, [sp, #8]
 802b032:	2200      	movs	r2, #0
 802b034:	701a      	strb	r2, [r3, #0]
 802b036:	b01c      	add	sp, #112	; 0x70
 802b038:	f85d eb04 	ldr.w	lr, [sp], #4
 802b03c:	b003      	add	sp, #12
 802b03e:	4770      	bx	lr
 802b040:	200001e4 	.word	0x200001e4
 802b044:	ffff0208 	.word	0xffff0208

0802b048 <__sread>:
 802b048:	b510      	push	{r4, lr}
 802b04a:	460c      	mov	r4, r1
 802b04c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802b050:	f000 f89c 	bl	802b18c <_read_r>
 802b054:	2800      	cmp	r0, #0
 802b056:	bfab      	itete	ge
 802b058:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 802b05a:	89a3      	ldrhlt	r3, [r4, #12]
 802b05c:	181b      	addge	r3, r3, r0
 802b05e:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 802b062:	bfac      	ite	ge
 802b064:	6563      	strge	r3, [r4, #84]	; 0x54
 802b066:	81a3      	strhlt	r3, [r4, #12]
 802b068:	bd10      	pop	{r4, pc}

0802b06a <__swrite>:
 802b06a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 802b06e:	461f      	mov	r7, r3
 802b070:	898b      	ldrh	r3, [r1, #12]
 802b072:	05db      	lsls	r3, r3, #23
 802b074:	4605      	mov	r5, r0
 802b076:	460c      	mov	r4, r1
 802b078:	4616      	mov	r6, r2
 802b07a:	d505      	bpl.n	802b088 <__swrite+0x1e>
 802b07c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802b080:	2302      	movs	r3, #2
 802b082:	2200      	movs	r2, #0
 802b084:	f000 f870 	bl	802b168 <_lseek_r>
 802b088:	89a3      	ldrh	r3, [r4, #12]
 802b08a:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 802b08e:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 802b092:	81a3      	strh	r3, [r4, #12]
 802b094:	4632      	mov	r2, r6
 802b096:	463b      	mov	r3, r7
 802b098:	4628      	mov	r0, r5
 802b09a:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 802b09e:	f000 b8ab 	b.w	802b1f8 <_write_r>

0802b0a2 <__sseek>:
 802b0a2:	b510      	push	{r4, lr}
 802b0a4:	460c      	mov	r4, r1
 802b0a6:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802b0aa:	f000 f85d 	bl	802b168 <_lseek_r>
 802b0ae:	1c43      	adds	r3, r0, #1
 802b0b0:	89a3      	ldrh	r3, [r4, #12]
 802b0b2:	bf15      	itete	ne
 802b0b4:	6560      	strne	r0, [r4, #84]	; 0x54
 802b0b6:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 802b0ba:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 802b0be:	81a3      	strheq	r3, [r4, #12]
 802b0c0:	bf18      	it	ne
 802b0c2:	81a3      	strhne	r3, [r4, #12]
 802b0c4:	bd10      	pop	{r4, pc}

0802b0c6 <__sclose>:
 802b0c6:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802b0ca:	f000 b83d 	b.w	802b148 <_close_r>

0802b0ce <memset>:
 802b0ce:	4402      	add	r2, r0
 802b0d0:	4603      	mov	r3, r0
 802b0d2:	4293      	cmp	r3, r2
 802b0d4:	d100      	bne.n	802b0d8 <memset+0xa>
 802b0d6:	4770      	bx	lr
 802b0d8:	f803 1b01 	strb.w	r1, [r3], #1
 802b0dc:	e7f9      	b.n	802b0d2 <memset+0x4>

0802b0de <_raise_r>:
 802b0de:	291f      	cmp	r1, #31
 802b0e0:	b538      	push	{r3, r4, r5, lr}
 802b0e2:	4604      	mov	r4, r0
 802b0e4:	460d      	mov	r5, r1
 802b0e6:	d904      	bls.n	802b0f2 <_raise_r+0x14>
 802b0e8:	2316      	movs	r3, #22
 802b0ea:	6003      	str	r3, [r0, #0]
 802b0ec:	f04f 30ff 	mov.w	r0, #4294967295
 802b0f0:	bd38      	pop	{r3, r4, r5, pc}
 802b0f2:	6bc2      	ldr	r2, [r0, #60]	; 0x3c
 802b0f4:	b112      	cbz	r2, 802b0fc <_raise_r+0x1e>
 802b0f6:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 802b0fa:	b94b      	cbnz	r3, 802b110 <_raise_r+0x32>
 802b0fc:	4620      	mov	r0, r4
 802b0fe:	f000 f869 	bl	802b1d4 <_getpid_r>
 802b102:	462a      	mov	r2, r5
 802b104:	4601      	mov	r1, r0
 802b106:	4620      	mov	r0, r4
 802b108:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 802b10c:	f000 b850 	b.w	802b1b0 <_kill_r>
 802b110:	2b01      	cmp	r3, #1
 802b112:	d00a      	beq.n	802b12a <_raise_r+0x4c>
 802b114:	1c59      	adds	r1, r3, #1
 802b116:	d103      	bne.n	802b120 <_raise_r+0x42>
 802b118:	2316      	movs	r3, #22
 802b11a:	6003      	str	r3, [r0, #0]
 802b11c:	2001      	movs	r0, #1
 802b11e:	e7e7      	b.n	802b0f0 <_raise_r+0x12>
 802b120:	2400      	movs	r4, #0
 802b122:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
 802b126:	4628      	mov	r0, r5
 802b128:	4798      	blx	r3
 802b12a:	2000      	movs	r0, #0
 802b12c:	e7e0      	b.n	802b0f0 <_raise_r+0x12>
	...

0802b130 <raise>:
 802b130:	4b02      	ldr	r3, [pc, #8]	; (802b13c <raise+0xc>)
 802b132:	4601      	mov	r1, r0
 802b134:	6818      	ldr	r0, [r3, #0]
 802b136:	f7ff bfd2 	b.w	802b0de <_raise_r>
 802b13a:	bf00      	nop
 802b13c:	200001e4 	.word	0x200001e4

0802b140 <_localeconv_r>:
 802b140:	4800      	ldr	r0, [pc, #0]	; (802b144 <_localeconv_r+0x4>)
 802b142:	4770      	bx	lr
 802b144:	200002dc 	.word	0x200002dc

0802b148 <_close_r>:
 802b148:	b538      	push	{r3, r4, r5, lr}
 802b14a:	4d06      	ldr	r5, [pc, #24]	; (802b164 <_close_r+0x1c>)
 802b14c:	2300      	movs	r3, #0
 802b14e:	4604      	mov	r4, r0
 802b150:	4608      	mov	r0, r1
 802b152:	602b      	str	r3, [r5, #0]
 802b154:	f7d6 fc63 	bl	8001a1e <_close>
 802b158:	1c43      	adds	r3, r0, #1
 802b15a:	d102      	bne.n	802b162 <_close_r+0x1a>
 802b15c:	682b      	ldr	r3, [r5, #0]
 802b15e:	b103      	cbz	r3, 802b162 <_close_r+0x1a>
 802b160:	6023      	str	r3, [r4, #0]
 802b162:	bd38      	pop	{r3, r4, r5, pc}
 802b164:	200076cc 	.word	0x200076cc

0802b168 <_lseek_r>:
 802b168:	b538      	push	{r3, r4, r5, lr}
 802b16a:	4d07      	ldr	r5, [pc, #28]	; (802b188 <_lseek_r+0x20>)
 802b16c:	4604      	mov	r4, r0
 802b16e:	4608      	mov	r0, r1
 802b170:	4611      	mov	r1, r2
 802b172:	2200      	movs	r2, #0
 802b174:	602a      	str	r2, [r5, #0]
 802b176:	461a      	mov	r2, r3
 802b178:	f7d6 fc78 	bl	8001a6c <_lseek>
 802b17c:	1c43      	adds	r3, r0, #1
 802b17e:	d102      	bne.n	802b186 <_lseek_r+0x1e>
 802b180:	682b      	ldr	r3, [r5, #0]
 802b182:	b103      	cbz	r3, 802b186 <_lseek_r+0x1e>
 802b184:	6023      	str	r3, [r4, #0]
 802b186:	bd38      	pop	{r3, r4, r5, pc}
 802b188:	200076cc 	.word	0x200076cc

0802b18c <_read_r>:
 802b18c:	b538      	push	{r3, r4, r5, lr}
 802b18e:	4d07      	ldr	r5, [pc, #28]	; (802b1ac <_read_r+0x20>)
 802b190:	4604      	mov	r4, r0
 802b192:	4608      	mov	r0, r1
 802b194:	4611      	mov	r1, r2
 802b196:	2200      	movs	r2, #0
 802b198:	602a      	str	r2, [r5, #0]
 802b19a:	461a      	mov	r2, r3
 802b19c:	f7d6 fc06 	bl	80019ac <_read>
 802b1a0:	1c43      	adds	r3, r0, #1
 802b1a2:	d102      	bne.n	802b1aa <_read_r+0x1e>
 802b1a4:	682b      	ldr	r3, [r5, #0]
 802b1a6:	b103      	cbz	r3, 802b1aa <_read_r+0x1e>
 802b1a8:	6023      	str	r3, [r4, #0]
 802b1aa:	bd38      	pop	{r3, r4, r5, pc}
 802b1ac:	200076cc 	.word	0x200076cc

0802b1b0 <_kill_r>:
 802b1b0:	b538      	push	{r3, r4, r5, lr}
 802b1b2:	4d07      	ldr	r5, [pc, #28]	; (802b1d0 <_kill_r+0x20>)
 802b1b4:	2300      	movs	r3, #0
 802b1b6:	4604      	mov	r4, r0
 802b1b8:	4608      	mov	r0, r1
 802b1ba:	4611      	mov	r1, r2
 802b1bc:	602b      	str	r3, [r5, #0]
 802b1be:	f7d6 fbdb 	bl	8001978 <_kill>
 802b1c2:	1c43      	adds	r3, r0, #1
 802b1c4:	d102      	bne.n	802b1cc <_kill_r+0x1c>
 802b1c6:	682b      	ldr	r3, [r5, #0]
 802b1c8:	b103      	cbz	r3, 802b1cc <_kill_r+0x1c>
 802b1ca:	6023      	str	r3, [r4, #0]
 802b1cc:	bd38      	pop	{r3, r4, r5, pc}
 802b1ce:	bf00      	nop
 802b1d0:	200076cc 	.word	0x200076cc

0802b1d4 <_getpid_r>:
 802b1d4:	f7d6 bbc8 	b.w	8001968 <_getpid>

0802b1d8 <_sbrk_r>:
 802b1d8:	b538      	push	{r3, r4, r5, lr}
 802b1da:	4d06      	ldr	r5, [pc, #24]	; (802b1f4 <_sbrk_r+0x1c>)
 802b1dc:	2300      	movs	r3, #0
 802b1de:	4604      	mov	r4, r0
 802b1e0:	4608      	mov	r0, r1
 802b1e2:	602b      	str	r3, [r5, #0]
 802b1e4:	f7d6 fc50 	bl	8001a88 <_sbrk>
 802b1e8:	1c43      	adds	r3, r0, #1
 802b1ea:	d102      	bne.n	802b1f2 <_sbrk_r+0x1a>
 802b1ec:	682b      	ldr	r3, [r5, #0]
 802b1ee:	b103      	cbz	r3, 802b1f2 <_sbrk_r+0x1a>
 802b1f0:	6023      	str	r3, [r4, #0]
 802b1f2:	bd38      	pop	{r3, r4, r5, pc}
 802b1f4:	200076cc 	.word	0x200076cc

0802b1f8 <_write_r>:
 802b1f8:	b538      	push	{r3, r4, r5, lr}
 802b1fa:	4d07      	ldr	r5, [pc, #28]	; (802b218 <_write_r+0x20>)
 802b1fc:	4604      	mov	r4, r0
 802b1fe:	4608      	mov	r0, r1
 802b200:	4611      	mov	r1, r2
 802b202:	2200      	movs	r2, #0
 802b204:	602a      	str	r2, [r5, #0]
 802b206:	461a      	mov	r2, r3
 802b208:	f7d6 fbed 	bl	80019e6 <_write>
 802b20c:	1c43      	adds	r3, r0, #1
 802b20e:	d102      	bne.n	802b216 <_write_r+0x1e>
 802b210:	682b      	ldr	r3, [r5, #0]
 802b212:	b103      	cbz	r3, 802b216 <_write_r+0x1e>
 802b214:	6023      	str	r3, [r4, #0]
 802b216:	bd38      	pop	{r3, r4, r5, pc}
 802b218:	200076cc 	.word	0x200076cc

0802b21c <__errno>:
 802b21c:	4b01      	ldr	r3, [pc, #4]	; (802b224 <__errno+0x8>)
 802b21e:	6818      	ldr	r0, [r3, #0]
 802b220:	4770      	bx	lr
 802b222:	bf00      	nop
 802b224:	200001e4 	.word	0x200001e4

0802b228 <__libc_init_array>:
 802b228:	b570      	push	{r4, r5, r6, lr}
 802b22a:	4d0d      	ldr	r5, [pc, #52]	; (802b260 <__libc_init_array+0x38>)
 802b22c:	4c0d      	ldr	r4, [pc, #52]	; (802b264 <__libc_init_array+0x3c>)
 802b22e:	1b64      	subs	r4, r4, r5
 802b230:	10a4      	asrs	r4, r4, #2
 802b232:	2600      	movs	r6, #0
 802b234:	42a6      	cmp	r6, r4
 802b236:	d109      	bne.n	802b24c <__libc_init_array+0x24>
 802b238:	4d0b      	ldr	r5, [pc, #44]	; (802b268 <__libc_init_array+0x40>)
 802b23a:	4c0c      	ldr	r4, [pc, #48]	; (802b26c <__libc_init_array+0x44>)
 802b23c:	f001 ffb4 	bl	802d1a8 <_init>
 802b240:	1b64      	subs	r4, r4, r5
 802b242:	10a4      	asrs	r4, r4, #2
 802b244:	2600      	movs	r6, #0
 802b246:	42a6      	cmp	r6, r4
 802b248:	d105      	bne.n	802b256 <__libc_init_array+0x2e>
 802b24a:	bd70      	pop	{r4, r5, r6, pc}
 802b24c:	f855 3b04 	ldr.w	r3, [r5], #4
 802b250:	4798      	blx	r3
 802b252:	3601      	adds	r6, #1
 802b254:	e7ee      	b.n	802b234 <__libc_init_array+0xc>
 802b256:	f855 3b04 	ldr.w	r3, [r5], #4
 802b25a:	4798      	blx	r3
 802b25c:	3601      	adds	r6, #1
 802b25e:	e7f2      	b.n	802b246 <__libc_init_array+0x1e>
 802b260:	0804f32c 	.word	0x0804f32c
 802b264:	0804f32c 	.word	0x0804f32c
 802b268:	0804f32c 	.word	0x0804f32c
 802b26c:	0804f344 	.word	0x0804f344

0802b270 <__retarget_lock_init_recursive>:
 802b270:	4770      	bx	lr

0802b272 <__retarget_lock_acquire_recursive>:
 802b272:	4770      	bx	lr

0802b274 <__retarget_lock_release_recursive>:
 802b274:	4770      	bx	lr

0802b276 <memcpy>:
 802b276:	440a      	add	r2, r1
 802b278:	4291      	cmp	r1, r2
 802b27a:	f100 33ff 	add.w	r3, r0, #4294967295
 802b27e:	d100      	bne.n	802b282 <memcpy+0xc>
 802b280:	4770      	bx	lr
 802b282:	b510      	push	{r4, lr}
 802b284:	f811 4b01 	ldrb.w	r4, [r1], #1
 802b288:	f803 4f01 	strb.w	r4, [r3, #1]!
 802b28c:	4291      	cmp	r1, r2
 802b28e:	d1f9      	bne.n	802b284 <memcpy+0xe>
 802b290:	bd10      	pop	{r4, pc}
	...

0802b294 <__register_exitproc>:
 802b294:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 802b298:	f8df 80b0 	ldr.w	r8, [pc, #176]	; 802b34c <__register_exitproc+0xb8>
 802b29c:	4606      	mov	r6, r0
 802b29e:	f8d8 0000 	ldr.w	r0, [r8]
 802b2a2:	461f      	mov	r7, r3
 802b2a4:	460d      	mov	r5, r1
 802b2a6:	4691      	mov	r9, r2
 802b2a8:	f7ff ffe3 	bl	802b272 <__retarget_lock_acquire_recursive>
 802b2ac:	4b23      	ldr	r3, [pc, #140]	; (802b33c <__register_exitproc+0xa8>)
 802b2ae:	681c      	ldr	r4, [r3, #0]
 802b2b0:	b934      	cbnz	r4, 802b2c0 <__register_exitproc+0x2c>
 802b2b2:	4c23      	ldr	r4, [pc, #140]	; (802b340 <__register_exitproc+0xac>)
 802b2b4:	601c      	str	r4, [r3, #0]
 802b2b6:	4b23      	ldr	r3, [pc, #140]	; (802b344 <__register_exitproc+0xb0>)
 802b2b8:	b113      	cbz	r3, 802b2c0 <__register_exitproc+0x2c>
 802b2ba:	681b      	ldr	r3, [r3, #0]
 802b2bc:	f8c4 3088 	str.w	r3, [r4, #136]	; 0x88
 802b2c0:	6863      	ldr	r3, [r4, #4]
 802b2c2:	2b1f      	cmp	r3, #31
 802b2c4:	dd07      	ble.n	802b2d6 <__register_exitproc+0x42>
 802b2c6:	f8d8 0000 	ldr.w	r0, [r8]
 802b2ca:	f7ff ffd3 	bl	802b274 <__retarget_lock_release_recursive>
 802b2ce:	f04f 30ff 	mov.w	r0, #4294967295
 802b2d2:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 802b2d6:	b32e      	cbz	r6, 802b324 <__register_exitproc+0x90>
 802b2d8:	f8d4 0088 	ldr.w	r0, [r4, #136]	; 0x88
 802b2dc:	b968      	cbnz	r0, 802b2fa <__register_exitproc+0x66>
 802b2de:	4b1a      	ldr	r3, [pc, #104]	; (802b348 <__register_exitproc+0xb4>)
 802b2e0:	2b00      	cmp	r3, #0
 802b2e2:	d0f0      	beq.n	802b2c6 <__register_exitproc+0x32>
 802b2e4:	f44f 7084 	mov.w	r0, #264	; 0x108
 802b2e8:	f7ff f88a 	bl	802a400 <malloc>
 802b2ec:	2800      	cmp	r0, #0
 802b2ee:	d0ea      	beq.n	802b2c6 <__register_exitproc+0x32>
 802b2f0:	2300      	movs	r3, #0
 802b2f2:	e9c0 3340 	strd	r3, r3, [r0, #256]	; 0x100
 802b2f6:	f8c4 0088 	str.w	r0, [r4, #136]	; 0x88
 802b2fa:	6863      	ldr	r3, [r4, #4]
 802b2fc:	f840 9023 	str.w	r9, [r0, r3, lsl #2]
 802b300:	2201      	movs	r2, #1
 802b302:	409a      	lsls	r2, r3
 802b304:	eb00 0183 	add.w	r1, r0, r3, lsl #2
 802b308:	f8d0 3100 	ldr.w	r3, [r0, #256]	; 0x100
 802b30c:	4313      	orrs	r3, r2
 802b30e:	f8c0 3100 	str.w	r3, [r0, #256]	; 0x100
 802b312:	2e02      	cmp	r6, #2
 802b314:	f8c1 7080 	str.w	r7, [r1, #128]	; 0x80
 802b318:	bf02      	ittt	eq
 802b31a:	f8d0 3104 	ldreq.w	r3, [r0, #260]	; 0x104
 802b31e:	4313      	orreq	r3, r2
 802b320:	f8c0 3104 	streq.w	r3, [r0, #260]	; 0x104
 802b324:	6863      	ldr	r3, [r4, #4]
 802b326:	f8d8 0000 	ldr.w	r0, [r8]
 802b32a:	1c5a      	adds	r2, r3, #1
 802b32c:	3302      	adds	r3, #2
 802b32e:	6062      	str	r2, [r4, #4]
 802b330:	f844 5023 	str.w	r5, [r4, r3, lsl #2]
 802b334:	f7ff ff9e 	bl	802b274 <__retarget_lock_release_recursive>
 802b338:	2000      	movs	r0, #0
 802b33a:	e7ca      	b.n	802b2d2 <__register_exitproc+0x3e>
 802b33c:	20007760 	.word	0x20007760
 802b340:	200076d4 	.word	0x200076d4
 802b344:	08030404 	.word	0x08030404
 802b348:	0802a401 	.word	0x0802a401
 802b34c:	200001e8 	.word	0x200001e8

0802b350 <quorem>:
 802b350:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802b354:	6903      	ldr	r3, [r0, #16]
 802b356:	690c      	ldr	r4, [r1, #16]
 802b358:	42a3      	cmp	r3, r4
 802b35a:	4607      	mov	r7, r0
 802b35c:	db7e      	blt.n	802b45c <quorem+0x10c>
 802b35e:	3c01      	subs	r4, #1
 802b360:	f101 0814 	add.w	r8, r1, #20
 802b364:	f100 0514 	add.w	r5, r0, #20
 802b368:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 802b36c:	9301      	str	r3, [sp, #4]
 802b36e:	f858 3024 	ldr.w	r3, [r8, r4, lsl #2]
 802b372:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 802b376:	3301      	adds	r3, #1
 802b378:	429a      	cmp	r2, r3
 802b37a:	ea4f 0b84 	mov.w	fp, r4, lsl #2
 802b37e:	eb08 0984 	add.w	r9, r8, r4, lsl #2
 802b382:	fbb2 f6f3 	udiv	r6, r2, r3
 802b386:	d331      	bcc.n	802b3ec <quorem+0x9c>
 802b388:	f04f 0e00 	mov.w	lr, #0
 802b38c:	4640      	mov	r0, r8
 802b38e:	46ac      	mov	ip, r5
 802b390:	46f2      	mov	sl, lr
 802b392:	f850 2b04 	ldr.w	r2, [r0], #4
 802b396:	b293      	uxth	r3, r2
 802b398:	fb06 e303 	mla	r3, r6, r3, lr
 802b39c:	ea4f 4e12 	mov.w	lr, r2, lsr #16
 802b3a0:	0c1a      	lsrs	r2, r3, #16
 802b3a2:	b29b      	uxth	r3, r3
 802b3a4:	ebaa 0303 	sub.w	r3, sl, r3
 802b3a8:	f8dc a000 	ldr.w	sl, [ip]
 802b3ac:	fa13 f38a 	uxtah	r3, r3, sl
 802b3b0:	fb06 220e 	mla	r2, r6, lr, r2
 802b3b4:	9300      	str	r3, [sp, #0]
 802b3b6:	9b00      	ldr	r3, [sp, #0]
 802b3b8:	ea4f 4e12 	mov.w	lr, r2, lsr #16
 802b3bc:	b292      	uxth	r2, r2
 802b3be:	ebc2 421a 	rsb	r2, r2, sl, lsr #16
 802b3c2:	eb02 4223 	add.w	r2, r2, r3, asr #16
 802b3c6:	f8bd 3000 	ldrh.w	r3, [sp]
 802b3ca:	4581      	cmp	r9, r0
 802b3cc:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 802b3d0:	f84c 3b04 	str.w	r3, [ip], #4
 802b3d4:	ea4f 4a22 	mov.w	sl, r2, asr #16
 802b3d8:	d2db      	bcs.n	802b392 <quorem+0x42>
 802b3da:	f855 300b 	ldr.w	r3, [r5, fp]
 802b3de:	b92b      	cbnz	r3, 802b3ec <quorem+0x9c>
 802b3e0:	9b01      	ldr	r3, [sp, #4]
 802b3e2:	3b04      	subs	r3, #4
 802b3e4:	429d      	cmp	r5, r3
 802b3e6:	461a      	mov	r2, r3
 802b3e8:	d32c      	bcc.n	802b444 <quorem+0xf4>
 802b3ea:	613c      	str	r4, [r7, #16]
 802b3ec:	4638      	mov	r0, r7
 802b3ee:	f001 f8f1 	bl	802c5d4 <__mcmp>
 802b3f2:	2800      	cmp	r0, #0
 802b3f4:	db22      	blt.n	802b43c <quorem+0xec>
 802b3f6:	3601      	adds	r6, #1
 802b3f8:	4629      	mov	r1, r5
 802b3fa:	2000      	movs	r0, #0
 802b3fc:	f858 2b04 	ldr.w	r2, [r8], #4
 802b400:	f8d1 c000 	ldr.w	ip, [r1]
 802b404:	b293      	uxth	r3, r2
 802b406:	1ac3      	subs	r3, r0, r3
 802b408:	0c12      	lsrs	r2, r2, #16
 802b40a:	fa13 f38c 	uxtah	r3, r3, ip
 802b40e:	ebc2 421c 	rsb	r2, r2, ip, lsr #16
 802b412:	eb02 4223 	add.w	r2, r2, r3, asr #16
 802b416:	b29b      	uxth	r3, r3
 802b418:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 802b41c:	45c1      	cmp	r9, r8
 802b41e:	f841 3b04 	str.w	r3, [r1], #4
 802b422:	ea4f 4022 	mov.w	r0, r2, asr #16
 802b426:	d2e9      	bcs.n	802b3fc <quorem+0xac>
 802b428:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 802b42c:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 802b430:	b922      	cbnz	r2, 802b43c <quorem+0xec>
 802b432:	3b04      	subs	r3, #4
 802b434:	429d      	cmp	r5, r3
 802b436:	461a      	mov	r2, r3
 802b438:	d30a      	bcc.n	802b450 <quorem+0x100>
 802b43a:	613c      	str	r4, [r7, #16]
 802b43c:	4630      	mov	r0, r6
 802b43e:	b003      	add	sp, #12
 802b440:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802b444:	6812      	ldr	r2, [r2, #0]
 802b446:	3b04      	subs	r3, #4
 802b448:	2a00      	cmp	r2, #0
 802b44a:	d1ce      	bne.n	802b3ea <quorem+0x9a>
 802b44c:	3c01      	subs	r4, #1
 802b44e:	e7c9      	b.n	802b3e4 <quorem+0x94>
 802b450:	6812      	ldr	r2, [r2, #0]
 802b452:	3b04      	subs	r3, #4
 802b454:	2a00      	cmp	r2, #0
 802b456:	d1f0      	bne.n	802b43a <quorem+0xea>
 802b458:	3c01      	subs	r4, #1
 802b45a:	e7eb      	b.n	802b434 <quorem+0xe4>
 802b45c:	2000      	movs	r0, #0
 802b45e:	e7ee      	b.n	802b43e <quorem+0xee>

0802b460 <_dtoa_r>:
 802b460:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802b464:	ed2d 8b04 	vpush	{d8-d9}
 802b468:	69c5      	ldr	r5, [r0, #28]
 802b46a:	b093      	sub	sp, #76	; 0x4c
 802b46c:	ed8d 0b02 	vstr	d0, [sp, #8]
 802b470:	ec57 6b10 	vmov	r6, r7, d0
 802b474:	f8dd 8080 	ldr.w	r8, [sp, #128]	; 0x80
 802b478:	9107      	str	r1, [sp, #28]
 802b47a:	4604      	mov	r4, r0
 802b47c:	920a      	str	r2, [sp, #40]	; 0x28
 802b47e:	930d      	str	r3, [sp, #52]	; 0x34
 802b480:	b975      	cbnz	r5, 802b4a0 <_dtoa_r+0x40>
 802b482:	2010      	movs	r0, #16
 802b484:	f7fe ffbc 	bl	802a400 <malloc>
 802b488:	4602      	mov	r2, r0
 802b48a:	61e0      	str	r0, [r4, #28]
 802b48c:	b920      	cbnz	r0, 802b498 <_dtoa_r+0x38>
 802b48e:	4bae      	ldr	r3, [pc, #696]	; (802b748 <_dtoa_r+0x2e8>)
 802b490:	21ef      	movs	r1, #239	; 0xef
 802b492:	48ae      	ldr	r0, [pc, #696]	; (802b74c <_dtoa_r+0x2ec>)
 802b494:	f7fe ff90 	bl	802a3b8 <__assert_func>
 802b498:	e9c0 5501 	strd	r5, r5, [r0, #4]
 802b49c:	6005      	str	r5, [r0, #0]
 802b49e:	60c5      	str	r5, [r0, #12]
 802b4a0:	69e3      	ldr	r3, [r4, #28]
 802b4a2:	6819      	ldr	r1, [r3, #0]
 802b4a4:	b151      	cbz	r1, 802b4bc <_dtoa_r+0x5c>
 802b4a6:	685a      	ldr	r2, [r3, #4]
 802b4a8:	604a      	str	r2, [r1, #4]
 802b4aa:	2301      	movs	r3, #1
 802b4ac:	4093      	lsls	r3, r2
 802b4ae:	608b      	str	r3, [r1, #8]
 802b4b0:	4620      	mov	r0, r4
 802b4b2:	f000 fe53 	bl	802c15c <_Bfree>
 802b4b6:	69e3      	ldr	r3, [r4, #28]
 802b4b8:	2200      	movs	r2, #0
 802b4ba:	601a      	str	r2, [r3, #0]
 802b4bc:	1e3b      	subs	r3, r7, #0
 802b4be:	bfbb      	ittet	lt
 802b4c0:	f023 4300 	biclt.w	r3, r3, #2147483648	; 0x80000000
 802b4c4:	9303      	strlt	r3, [sp, #12]
 802b4c6:	2300      	movge	r3, #0
 802b4c8:	2201      	movlt	r2, #1
 802b4ca:	bfac      	ite	ge
 802b4cc:	f8c8 3000 	strge.w	r3, [r8]
 802b4d0:	f8c8 2000 	strlt.w	r2, [r8]
 802b4d4:	4b9e      	ldr	r3, [pc, #632]	; (802b750 <_dtoa_r+0x2f0>)
 802b4d6:	f8dd 800c 	ldr.w	r8, [sp, #12]
 802b4da:	ea33 0308 	bics.w	r3, r3, r8
 802b4de:	d11b      	bne.n	802b518 <_dtoa_r+0xb8>
 802b4e0:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 802b4e2:	f242 730f 	movw	r3, #9999	; 0x270f
 802b4e6:	6013      	str	r3, [r2, #0]
 802b4e8:	f3c8 0313 	ubfx	r3, r8, #0, #20
 802b4ec:	4333      	orrs	r3, r6
 802b4ee:	f000 8593 	beq.w	802c018 <_dtoa_r+0xbb8>
 802b4f2:	9b21      	ldr	r3, [sp, #132]	; 0x84
 802b4f4:	b963      	cbnz	r3, 802b510 <_dtoa_r+0xb0>
 802b4f6:	4b97      	ldr	r3, [pc, #604]	; (802b754 <_dtoa_r+0x2f4>)
 802b4f8:	e027      	b.n	802b54a <_dtoa_r+0xea>
 802b4fa:	4b97      	ldr	r3, [pc, #604]	; (802b758 <_dtoa_r+0x2f8>)
 802b4fc:	9300      	str	r3, [sp, #0]
 802b4fe:	3308      	adds	r3, #8
 802b500:	9a21      	ldr	r2, [sp, #132]	; 0x84
 802b502:	6013      	str	r3, [r2, #0]
 802b504:	9800      	ldr	r0, [sp, #0]
 802b506:	b013      	add	sp, #76	; 0x4c
 802b508:	ecbd 8b04 	vpop	{d8-d9}
 802b50c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802b510:	4b90      	ldr	r3, [pc, #576]	; (802b754 <_dtoa_r+0x2f4>)
 802b512:	9300      	str	r3, [sp, #0]
 802b514:	3303      	adds	r3, #3
 802b516:	e7f3      	b.n	802b500 <_dtoa_r+0xa0>
 802b518:	ed9d 7b02 	vldr	d7, [sp, #8]
 802b51c:	2200      	movs	r2, #0
 802b51e:	ec51 0b17 	vmov	r0, r1, d7
 802b522:	eeb0 8a47 	vmov.f32	s16, s14
 802b526:	eef0 8a67 	vmov.f32	s17, s15
 802b52a:	2300      	movs	r3, #0
 802b52c:	f7d5 fad4 	bl	8000ad8 <__aeabi_dcmpeq>
 802b530:	4681      	mov	r9, r0
 802b532:	b160      	cbz	r0, 802b54e <_dtoa_r+0xee>
 802b534:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 802b536:	2301      	movs	r3, #1
 802b538:	6013      	str	r3, [r2, #0]
 802b53a:	9b21      	ldr	r3, [sp, #132]	; 0x84
 802b53c:	2b00      	cmp	r3, #0
 802b53e:	f000 8568 	beq.w	802c012 <_dtoa_r+0xbb2>
 802b542:	4b86      	ldr	r3, [pc, #536]	; (802b75c <_dtoa_r+0x2fc>)
 802b544:	9a21      	ldr	r2, [sp, #132]	; 0x84
 802b546:	6013      	str	r3, [r2, #0]
 802b548:	3b01      	subs	r3, #1
 802b54a:	9300      	str	r3, [sp, #0]
 802b54c:	e7da      	b.n	802b504 <_dtoa_r+0xa4>
 802b54e:	aa10      	add	r2, sp, #64	; 0x40
 802b550:	a911      	add	r1, sp, #68	; 0x44
 802b552:	4620      	mov	r0, r4
 802b554:	eeb0 0a48 	vmov.f32	s0, s16
 802b558:	eef0 0a68 	vmov.f32	s1, s17
 802b55c:	f001 f8e0 	bl	802c720 <__d2b>
 802b560:	f3c8 550a 	ubfx	r5, r8, #20, #11
 802b564:	4682      	mov	sl, r0
 802b566:	2d00      	cmp	r5, #0
 802b568:	d07f      	beq.n	802b66a <_dtoa_r+0x20a>
 802b56a:	ee18 3a90 	vmov	r3, s17
 802b56e:	f3c3 0313 	ubfx	r3, r3, #0, #20
 802b572:	f043 537f 	orr.w	r3, r3, #1069547520	; 0x3fc00000
 802b576:	ec51 0b18 	vmov	r0, r1, d8
 802b57a:	f443 1340 	orr.w	r3, r3, #3145728	; 0x300000
 802b57e:	f2a5 35ff 	subw	r5, r5, #1023	; 0x3ff
 802b582:	f8cd 9038 	str.w	r9, [sp, #56]	; 0x38
 802b586:	4619      	mov	r1, r3
 802b588:	2200      	movs	r2, #0
 802b58a:	4b75      	ldr	r3, [pc, #468]	; (802b760 <_dtoa_r+0x300>)
 802b58c:	f7d4 fe84 	bl	8000298 <__aeabi_dsub>
 802b590:	a367      	add	r3, pc, #412	; (adr r3, 802b730 <_dtoa_r+0x2d0>)
 802b592:	e9d3 2300 	ldrd	r2, r3, [r3]
 802b596:	f7d5 f837 	bl	8000608 <__aeabi_dmul>
 802b59a:	a367      	add	r3, pc, #412	; (adr r3, 802b738 <_dtoa_r+0x2d8>)
 802b59c:	e9d3 2300 	ldrd	r2, r3, [r3]
 802b5a0:	f7d4 fe7c 	bl	800029c <__adddf3>
 802b5a4:	4606      	mov	r6, r0
 802b5a6:	4628      	mov	r0, r5
 802b5a8:	460f      	mov	r7, r1
 802b5aa:	f7d4 ffc3 	bl	8000534 <__aeabi_i2d>
 802b5ae:	a364      	add	r3, pc, #400	; (adr r3, 802b740 <_dtoa_r+0x2e0>)
 802b5b0:	e9d3 2300 	ldrd	r2, r3, [r3]
 802b5b4:	f7d5 f828 	bl	8000608 <__aeabi_dmul>
 802b5b8:	4602      	mov	r2, r0
 802b5ba:	460b      	mov	r3, r1
 802b5bc:	4630      	mov	r0, r6
 802b5be:	4639      	mov	r1, r7
 802b5c0:	f7d4 fe6c 	bl	800029c <__adddf3>
 802b5c4:	4606      	mov	r6, r0
 802b5c6:	460f      	mov	r7, r1
 802b5c8:	f7d5 face 	bl	8000b68 <__aeabi_d2iz>
 802b5cc:	2200      	movs	r2, #0
 802b5ce:	4683      	mov	fp, r0
 802b5d0:	2300      	movs	r3, #0
 802b5d2:	4630      	mov	r0, r6
 802b5d4:	4639      	mov	r1, r7
 802b5d6:	f7d5 fa89 	bl	8000aec <__aeabi_dcmplt>
 802b5da:	b148      	cbz	r0, 802b5f0 <_dtoa_r+0x190>
 802b5dc:	4658      	mov	r0, fp
 802b5de:	f7d4 ffa9 	bl	8000534 <__aeabi_i2d>
 802b5e2:	4632      	mov	r2, r6
 802b5e4:	463b      	mov	r3, r7
 802b5e6:	f7d5 fa77 	bl	8000ad8 <__aeabi_dcmpeq>
 802b5ea:	b908      	cbnz	r0, 802b5f0 <_dtoa_r+0x190>
 802b5ec:	f10b 3bff 	add.w	fp, fp, #4294967295
 802b5f0:	f1bb 0f16 	cmp.w	fp, #22
 802b5f4:	d857      	bhi.n	802b6a6 <_dtoa_r+0x246>
 802b5f6:	4b5b      	ldr	r3, [pc, #364]	; (802b764 <_dtoa_r+0x304>)
 802b5f8:	eb03 03cb 	add.w	r3, r3, fp, lsl #3
 802b5fc:	e9d3 2300 	ldrd	r2, r3, [r3]
 802b600:	ec51 0b18 	vmov	r0, r1, d8
 802b604:	f7d5 fa72 	bl	8000aec <__aeabi_dcmplt>
 802b608:	2800      	cmp	r0, #0
 802b60a:	d04e      	beq.n	802b6aa <_dtoa_r+0x24a>
 802b60c:	f10b 3bff 	add.w	fp, fp, #4294967295
 802b610:	2300      	movs	r3, #0
 802b612:	930c      	str	r3, [sp, #48]	; 0x30
 802b614:	9b10      	ldr	r3, [sp, #64]	; 0x40
 802b616:	1b5b      	subs	r3, r3, r5
 802b618:	1e5a      	subs	r2, r3, #1
 802b61a:	bf45      	ittet	mi
 802b61c:	f1c3 0301 	rsbmi	r3, r3, #1
 802b620:	9305      	strmi	r3, [sp, #20]
 802b622:	2300      	movpl	r3, #0
 802b624:	2300      	movmi	r3, #0
 802b626:	9206      	str	r2, [sp, #24]
 802b628:	bf54      	ite	pl
 802b62a:	9305      	strpl	r3, [sp, #20]
 802b62c:	9306      	strmi	r3, [sp, #24]
 802b62e:	f1bb 0f00 	cmp.w	fp, #0
 802b632:	db3c      	blt.n	802b6ae <_dtoa_r+0x24e>
 802b634:	9b06      	ldr	r3, [sp, #24]
 802b636:	f8cd b02c 	str.w	fp, [sp, #44]	; 0x2c
 802b63a:	445b      	add	r3, fp
 802b63c:	9306      	str	r3, [sp, #24]
 802b63e:	2300      	movs	r3, #0
 802b640:	9308      	str	r3, [sp, #32]
 802b642:	9b07      	ldr	r3, [sp, #28]
 802b644:	2b09      	cmp	r3, #9
 802b646:	d868      	bhi.n	802b71a <_dtoa_r+0x2ba>
 802b648:	2b05      	cmp	r3, #5
 802b64a:	bfc4      	itt	gt
 802b64c:	3b04      	subgt	r3, #4
 802b64e:	9307      	strgt	r3, [sp, #28]
 802b650:	9b07      	ldr	r3, [sp, #28]
 802b652:	f1a3 0302 	sub.w	r3, r3, #2
 802b656:	bfcc      	ite	gt
 802b658:	2500      	movgt	r5, #0
 802b65a:	2501      	movle	r5, #1
 802b65c:	2b03      	cmp	r3, #3
 802b65e:	f200 8085 	bhi.w	802b76c <_dtoa_r+0x30c>
 802b662:	e8df f003 	tbb	[pc, r3]
 802b666:	3b2e      	.short	0x3b2e
 802b668:	5839      	.short	0x5839
 802b66a:	e9dd 5310 	ldrd	r5, r3, [sp, #64]	; 0x40
 802b66e:	441d      	add	r5, r3
 802b670:	f205 4332 	addw	r3, r5, #1074	; 0x432
 802b674:	2b20      	cmp	r3, #32
 802b676:	bfc1      	itttt	gt
 802b678:	f1c3 0340 	rsbgt	r3, r3, #64	; 0x40
 802b67c:	fa08 f803 	lslgt.w	r8, r8, r3
 802b680:	f205 4312 	addwgt	r3, r5, #1042	; 0x412
 802b684:	fa26 f303 	lsrgt.w	r3, r6, r3
 802b688:	bfd6      	itet	le
 802b68a:	f1c3 0320 	rsble	r3, r3, #32
 802b68e:	ea48 0003 	orrgt.w	r0, r8, r3
 802b692:	fa06 f003 	lslle.w	r0, r6, r3
 802b696:	f7d4 ff3d 	bl	8000514 <__aeabi_ui2d>
 802b69a:	2201      	movs	r2, #1
 802b69c:	f1a1 73f8 	sub.w	r3, r1, #32505856	; 0x1f00000
 802b6a0:	3d01      	subs	r5, #1
 802b6a2:	920e      	str	r2, [sp, #56]	; 0x38
 802b6a4:	e76f      	b.n	802b586 <_dtoa_r+0x126>
 802b6a6:	2301      	movs	r3, #1
 802b6a8:	e7b3      	b.n	802b612 <_dtoa_r+0x1b2>
 802b6aa:	900c      	str	r0, [sp, #48]	; 0x30
 802b6ac:	e7b2      	b.n	802b614 <_dtoa_r+0x1b4>
 802b6ae:	9b05      	ldr	r3, [sp, #20]
 802b6b0:	eba3 030b 	sub.w	r3, r3, fp
 802b6b4:	9305      	str	r3, [sp, #20]
 802b6b6:	f1cb 0300 	rsb	r3, fp, #0
 802b6ba:	9308      	str	r3, [sp, #32]
 802b6bc:	2300      	movs	r3, #0
 802b6be:	930b      	str	r3, [sp, #44]	; 0x2c
 802b6c0:	e7bf      	b.n	802b642 <_dtoa_r+0x1e2>
 802b6c2:	2300      	movs	r3, #0
 802b6c4:	9309      	str	r3, [sp, #36]	; 0x24
 802b6c6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 802b6c8:	2b00      	cmp	r3, #0
 802b6ca:	dc52      	bgt.n	802b772 <_dtoa_r+0x312>
 802b6cc:	2301      	movs	r3, #1
 802b6ce:	9301      	str	r3, [sp, #4]
 802b6d0:	9304      	str	r3, [sp, #16]
 802b6d2:	461a      	mov	r2, r3
 802b6d4:	920a      	str	r2, [sp, #40]	; 0x28
 802b6d6:	e00b      	b.n	802b6f0 <_dtoa_r+0x290>
 802b6d8:	2301      	movs	r3, #1
 802b6da:	e7f3      	b.n	802b6c4 <_dtoa_r+0x264>
 802b6dc:	2300      	movs	r3, #0
 802b6de:	9309      	str	r3, [sp, #36]	; 0x24
 802b6e0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 802b6e2:	445b      	add	r3, fp
 802b6e4:	9301      	str	r3, [sp, #4]
 802b6e6:	3301      	adds	r3, #1
 802b6e8:	2b01      	cmp	r3, #1
 802b6ea:	9304      	str	r3, [sp, #16]
 802b6ec:	bfb8      	it	lt
 802b6ee:	2301      	movlt	r3, #1
 802b6f0:	69e0      	ldr	r0, [r4, #28]
 802b6f2:	2100      	movs	r1, #0
 802b6f4:	2204      	movs	r2, #4
 802b6f6:	f102 0614 	add.w	r6, r2, #20
 802b6fa:	429e      	cmp	r6, r3
 802b6fc:	d93d      	bls.n	802b77a <_dtoa_r+0x31a>
 802b6fe:	6041      	str	r1, [r0, #4]
 802b700:	4620      	mov	r0, r4
 802b702:	f000 fceb 	bl	802c0dc <_Balloc>
 802b706:	9000      	str	r0, [sp, #0]
 802b708:	2800      	cmp	r0, #0
 802b70a:	d139      	bne.n	802b780 <_dtoa_r+0x320>
 802b70c:	4b16      	ldr	r3, [pc, #88]	; (802b768 <_dtoa_r+0x308>)
 802b70e:	4602      	mov	r2, r0
 802b710:	f240 11af 	movw	r1, #431	; 0x1af
 802b714:	e6bd      	b.n	802b492 <_dtoa_r+0x32>
 802b716:	2301      	movs	r3, #1
 802b718:	e7e1      	b.n	802b6de <_dtoa_r+0x27e>
 802b71a:	2501      	movs	r5, #1
 802b71c:	2300      	movs	r3, #0
 802b71e:	9307      	str	r3, [sp, #28]
 802b720:	9509      	str	r5, [sp, #36]	; 0x24
 802b722:	f04f 33ff 	mov.w	r3, #4294967295
 802b726:	9301      	str	r3, [sp, #4]
 802b728:	9304      	str	r3, [sp, #16]
 802b72a:	2200      	movs	r2, #0
 802b72c:	2312      	movs	r3, #18
 802b72e:	e7d1      	b.n	802b6d4 <_dtoa_r+0x274>
 802b730:	636f4361 	.word	0x636f4361
 802b734:	3fd287a7 	.word	0x3fd287a7
 802b738:	8b60c8b3 	.word	0x8b60c8b3
 802b73c:	3fc68a28 	.word	0x3fc68a28
 802b740:	509f79fb 	.word	0x509f79fb
 802b744:	3fd34413 	.word	0x3fd34413
 802b748:	0803022d 	.word	0x0803022d
 802b74c:	08030244 	.word	0x08030244
 802b750:	7ff00000 	.word	0x7ff00000
 802b754:	08030229 	.word	0x08030229
 802b758:	08030220 	.word	0x08030220
 802b75c:	080301fd 	.word	0x080301fd
 802b760:	3ff80000 	.word	0x3ff80000
 802b764:	08030330 	.word	0x08030330
 802b768:	0803029c 	.word	0x0803029c
 802b76c:	2301      	movs	r3, #1
 802b76e:	9309      	str	r3, [sp, #36]	; 0x24
 802b770:	e7d7      	b.n	802b722 <_dtoa_r+0x2c2>
 802b772:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 802b774:	9301      	str	r3, [sp, #4]
 802b776:	9304      	str	r3, [sp, #16]
 802b778:	e7ba      	b.n	802b6f0 <_dtoa_r+0x290>
 802b77a:	3101      	adds	r1, #1
 802b77c:	0052      	lsls	r2, r2, #1
 802b77e:	e7ba      	b.n	802b6f6 <_dtoa_r+0x296>
 802b780:	69e3      	ldr	r3, [r4, #28]
 802b782:	9a00      	ldr	r2, [sp, #0]
 802b784:	601a      	str	r2, [r3, #0]
 802b786:	9b04      	ldr	r3, [sp, #16]
 802b788:	2b0e      	cmp	r3, #14
 802b78a:	f200 80a8 	bhi.w	802b8de <_dtoa_r+0x47e>
 802b78e:	2d00      	cmp	r5, #0
 802b790:	f000 80a5 	beq.w	802b8de <_dtoa_r+0x47e>
 802b794:	f1bb 0f00 	cmp.w	fp, #0
 802b798:	dd38      	ble.n	802b80c <_dtoa_r+0x3ac>
 802b79a:	4bc0      	ldr	r3, [pc, #768]	; (802ba9c <_dtoa_r+0x63c>)
 802b79c:	f00b 020f 	and.w	r2, fp, #15
 802b7a0:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 802b7a4:	f41b 7f80 	tst.w	fp, #256	; 0x100
 802b7a8:	e9d3 6700 	ldrd	r6, r7, [r3]
 802b7ac:	ea4f 182b 	mov.w	r8, fp, asr #4
 802b7b0:	d019      	beq.n	802b7e6 <_dtoa_r+0x386>
 802b7b2:	4bbb      	ldr	r3, [pc, #748]	; (802baa0 <_dtoa_r+0x640>)
 802b7b4:	ec51 0b18 	vmov	r0, r1, d8
 802b7b8:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
 802b7bc:	f7d5 f84e 	bl	800085c <__aeabi_ddiv>
 802b7c0:	e9cd 0102 	strd	r0, r1, [sp, #8]
 802b7c4:	f008 080f 	and.w	r8, r8, #15
 802b7c8:	2503      	movs	r5, #3
 802b7ca:	f8df 92d4 	ldr.w	r9, [pc, #724]	; 802baa0 <_dtoa_r+0x640>
 802b7ce:	f1b8 0f00 	cmp.w	r8, #0
 802b7d2:	d10a      	bne.n	802b7ea <_dtoa_r+0x38a>
 802b7d4:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 802b7d8:	4632      	mov	r2, r6
 802b7da:	463b      	mov	r3, r7
 802b7dc:	f7d5 f83e 	bl	800085c <__aeabi_ddiv>
 802b7e0:	e9cd 0102 	strd	r0, r1, [sp, #8]
 802b7e4:	e02b      	b.n	802b83e <_dtoa_r+0x3de>
 802b7e6:	2502      	movs	r5, #2
 802b7e8:	e7ef      	b.n	802b7ca <_dtoa_r+0x36a>
 802b7ea:	f018 0f01 	tst.w	r8, #1
 802b7ee:	d008      	beq.n	802b802 <_dtoa_r+0x3a2>
 802b7f0:	4630      	mov	r0, r6
 802b7f2:	4639      	mov	r1, r7
 802b7f4:	e9d9 2300 	ldrd	r2, r3, [r9]
 802b7f8:	f7d4 ff06 	bl	8000608 <__aeabi_dmul>
 802b7fc:	3501      	adds	r5, #1
 802b7fe:	4606      	mov	r6, r0
 802b800:	460f      	mov	r7, r1
 802b802:	ea4f 0868 	mov.w	r8, r8, asr #1
 802b806:	f109 0908 	add.w	r9, r9, #8
 802b80a:	e7e0      	b.n	802b7ce <_dtoa_r+0x36e>
 802b80c:	f000 809f 	beq.w	802b94e <_dtoa_r+0x4ee>
 802b810:	f1cb 0600 	rsb	r6, fp, #0
 802b814:	4ba1      	ldr	r3, [pc, #644]	; (802ba9c <_dtoa_r+0x63c>)
 802b816:	4fa2      	ldr	r7, [pc, #648]	; (802baa0 <_dtoa_r+0x640>)
 802b818:	f006 020f 	and.w	r2, r6, #15
 802b81c:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 802b820:	e9d3 2300 	ldrd	r2, r3, [r3]
 802b824:	ec51 0b18 	vmov	r0, r1, d8
 802b828:	f7d4 feee 	bl	8000608 <__aeabi_dmul>
 802b82c:	e9cd 0102 	strd	r0, r1, [sp, #8]
 802b830:	1136      	asrs	r6, r6, #4
 802b832:	2300      	movs	r3, #0
 802b834:	2502      	movs	r5, #2
 802b836:	2e00      	cmp	r6, #0
 802b838:	d17e      	bne.n	802b938 <_dtoa_r+0x4d8>
 802b83a:	2b00      	cmp	r3, #0
 802b83c:	d1d0      	bne.n	802b7e0 <_dtoa_r+0x380>
 802b83e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 802b840:	e9dd 8902 	ldrd	r8, r9, [sp, #8]
 802b844:	2b00      	cmp	r3, #0
 802b846:	f000 8084 	beq.w	802b952 <_dtoa_r+0x4f2>
 802b84a:	4b96      	ldr	r3, [pc, #600]	; (802baa4 <_dtoa_r+0x644>)
 802b84c:	2200      	movs	r2, #0
 802b84e:	4640      	mov	r0, r8
 802b850:	4649      	mov	r1, r9
 802b852:	f7d5 f94b 	bl	8000aec <__aeabi_dcmplt>
 802b856:	2800      	cmp	r0, #0
 802b858:	d07b      	beq.n	802b952 <_dtoa_r+0x4f2>
 802b85a:	9b04      	ldr	r3, [sp, #16]
 802b85c:	2b00      	cmp	r3, #0
 802b85e:	d078      	beq.n	802b952 <_dtoa_r+0x4f2>
 802b860:	9b01      	ldr	r3, [sp, #4]
 802b862:	2b00      	cmp	r3, #0
 802b864:	dd39      	ble.n	802b8da <_dtoa_r+0x47a>
 802b866:	4b90      	ldr	r3, [pc, #576]	; (802baa8 <_dtoa_r+0x648>)
 802b868:	2200      	movs	r2, #0
 802b86a:	4640      	mov	r0, r8
 802b86c:	4649      	mov	r1, r9
 802b86e:	f7d4 fecb 	bl	8000608 <__aeabi_dmul>
 802b872:	e9cd 0102 	strd	r0, r1, [sp, #8]
 802b876:	9e01      	ldr	r6, [sp, #4]
 802b878:	f10b 37ff 	add.w	r7, fp, #4294967295
 802b87c:	3501      	adds	r5, #1
 802b87e:	e9dd 8902 	ldrd	r8, r9, [sp, #8]
 802b882:	4628      	mov	r0, r5
 802b884:	f7d4 fe56 	bl	8000534 <__aeabi_i2d>
 802b888:	4642      	mov	r2, r8
 802b88a:	464b      	mov	r3, r9
 802b88c:	f7d4 febc 	bl	8000608 <__aeabi_dmul>
 802b890:	4b86      	ldr	r3, [pc, #536]	; (802baac <_dtoa_r+0x64c>)
 802b892:	2200      	movs	r2, #0
 802b894:	f7d4 fd02 	bl	800029c <__adddf3>
 802b898:	f1a1 7350 	sub.w	r3, r1, #54525952	; 0x3400000
 802b89c:	e9cd 0102 	strd	r0, r1, [sp, #8]
 802b8a0:	9303      	str	r3, [sp, #12]
 802b8a2:	2e00      	cmp	r6, #0
 802b8a4:	d158      	bne.n	802b958 <_dtoa_r+0x4f8>
 802b8a6:	4b82      	ldr	r3, [pc, #520]	; (802bab0 <_dtoa_r+0x650>)
 802b8a8:	2200      	movs	r2, #0
 802b8aa:	4640      	mov	r0, r8
 802b8ac:	4649      	mov	r1, r9
 802b8ae:	f7d4 fcf3 	bl	8000298 <__aeabi_dsub>
 802b8b2:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 802b8b6:	4680      	mov	r8, r0
 802b8b8:	4689      	mov	r9, r1
 802b8ba:	f7d5 f935 	bl	8000b28 <__aeabi_dcmpgt>
 802b8be:	2800      	cmp	r0, #0
 802b8c0:	f040 8296 	bne.w	802bdf0 <_dtoa_r+0x990>
 802b8c4:	e9dd 2102 	ldrd	r2, r1, [sp, #8]
 802b8c8:	4640      	mov	r0, r8
 802b8ca:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 802b8ce:	4649      	mov	r1, r9
 802b8d0:	f7d5 f90c 	bl	8000aec <__aeabi_dcmplt>
 802b8d4:	2800      	cmp	r0, #0
 802b8d6:	f040 8289 	bne.w	802bdec <_dtoa_r+0x98c>
 802b8da:	ed8d 8b02 	vstr	d8, [sp, #8]
 802b8de:	9b11      	ldr	r3, [sp, #68]	; 0x44
 802b8e0:	2b00      	cmp	r3, #0
 802b8e2:	f2c0 814e 	blt.w	802bb82 <_dtoa_r+0x722>
 802b8e6:	f1bb 0f0e 	cmp.w	fp, #14
 802b8ea:	f300 814a 	bgt.w	802bb82 <_dtoa_r+0x722>
 802b8ee:	4b6b      	ldr	r3, [pc, #428]	; (802ba9c <_dtoa_r+0x63c>)
 802b8f0:	eb03 03cb 	add.w	r3, r3, fp, lsl #3
 802b8f4:	e9d3 8900 	ldrd	r8, r9, [r3]
 802b8f8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 802b8fa:	2b00      	cmp	r3, #0
 802b8fc:	f280 80dc 	bge.w	802bab8 <_dtoa_r+0x658>
 802b900:	9b04      	ldr	r3, [sp, #16]
 802b902:	2b00      	cmp	r3, #0
 802b904:	f300 80d8 	bgt.w	802bab8 <_dtoa_r+0x658>
 802b908:	f040 826f 	bne.w	802bdea <_dtoa_r+0x98a>
 802b90c:	4b68      	ldr	r3, [pc, #416]	; (802bab0 <_dtoa_r+0x650>)
 802b90e:	2200      	movs	r2, #0
 802b910:	4640      	mov	r0, r8
 802b912:	4649      	mov	r1, r9
 802b914:	f7d4 fe78 	bl	8000608 <__aeabi_dmul>
 802b918:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 802b91c:	f7d5 f8fa 	bl	8000b14 <__aeabi_dcmpge>
 802b920:	9e04      	ldr	r6, [sp, #16]
 802b922:	4637      	mov	r7, r6
 802b924:	2800      	cmp	r0, #0
 802b926:	f040 8245 	bne.w	802bdb4 <_dtoa_r+0x954>
 802b92a:	9d00      	ldr	r5, [sp, #0]
 802b92c:	2331      	movs	r3, #49	; 0x31
 802b92e:	f805 3b01 	strb.w	r3, [r5], #1
 802b932:	f10b 0b01 	add.w	fp, fp, #1
 802b936:	e241      	b.n	802bdbc <_dtoa_r+0x95c>
 802b938:	07f2      	lsls	r2, r6, #31
 802b93a:	d505      	bpl.n	802b948 <_dtoa_r+0x4e8>
 802b93c:	e9d7 2300 	ldrd	r2, r3, [r7]
 802b940:	f7d4 fe62 	bl	8000608 <__aeabi_dmul>
 802b944:	3501      	adds	r5, #1
 802b946:	2301      	movs	r3, #1
 802b948:	1076      	asrs	r6, r6, #1
 802b94a:	3708      	adds	r7, #8
 802b94c:	e773      	b.n	802b836 <_dtoa_r+0x3d6>
 802b94e:	2502      	movs	r5, #2
 802b950:	e775      	b.n	802b83e <_dtoa_r+0x3de>
 802b952:	9e04      	ldr	r6, [sp, #16]
 802b954:	465f      	mov	r7, fp
 802b956:	e792      	b.n	802b87e <_dtoa_r+0x41e>
 802b958:	9900      	ldr	r1, [sp, #0]
 802b95a:	4b50      	ldr	r3, [pc, #320]	; (802ba9c <_dtoa_r+0x63c>)
 802b95c:	ed9d 7b02 	vldr	d7, [sp, #8]
 802b960:	4431      	add	r1, r6
 802b962:	9102      	str	r1, [sp, #8]
 802b964:	9909      	ldr	r1, [sp, #36]	; 0x24
 802b966:	eeb0 9a47 	vmov.f32	s18, s14
 802b96a:	eef0 9a67 	vmov.f32	s19, s15
 802b96e:	eb03 03c6 	add.w	r3, r3, r6, lsl #3
 802b972:	e953 2302 	ldrd	r2, r3, [r3, #-8]
 802b976:	2900      	cmp	r1, #0
 802b978:	d044      	beq.n	802ba04 <_dtoa_r+0x5a4>
 802b97a:	494e      	ldr	r1, [pc, #312]	; (802bab4 <_dtoa_r+0x654>)
 802b97c:	2000      	movs	r0, #0
 802b97e:	f7d4 ff6d 	bl	800085c <__aeabi_ddiv>
 802b982:	ec53 2b19 	vmov	r2, r3, d9
 802b986:	f7d4 fc87 	bl	8000298 <__aeabi_dsub>
 802b98a:	9d00      	ldr	r5, [sp, #0]
 802b98c:	ec41 0b19 	vmov	d9, r0, r1
 802b990:	4649      	mov	r1, r9
 802b992:	4640      	mov	r0, r8
 802b994:	f7d5 f8e8 	bl	8000b68 <__aeabi_d2iz>
 802b998:	4606      	mov	r6, r0
 802b99a:	f7d4 fdcb 	bl	8000534 <__aeabi_i2d>
 802b99e:	4602      	mov	r2, r0
 802b9a0:	460b      	mov	r3, r1
 802b9a2:	4640      	mov	r0, r8
 802b9a4:	4649      	mov	r1, r9
 802b9a6:	f7d4 fc77 	bl	8000298 <__aeabi_dsub>
 802b9aa:	3630      	adds	r6, #48	; 0x30
 802b9ac:	f805 6b01 	strb.w	r6, [r5], #1
 802b9b0:	ec53 2b19 	vmov	r2, r3, d9
 802b9b4:	4680      	mov	r8, r0
 802b9b6:	4689      	mov	r9, r1
 802b9b8:	f7d5 f898 	bl	8000aec <__aeabi_dcmplt>
 802b9bc:	2800      	cmp	r0, #0
 802b9be:	d164      	bne.n	802ba8a <_dtoa_r+0x62a>
 802b9c0:	4642      	mov	r2, r8
 802b9c2:	464b      	mov	r3, r9
 802b9c4:	4937      	ldr	r1, [pc, #220]	; (802baa4 <_dtoa_r+0x644>)
 802b9c6:	2000      	movs	r0, #0
 802b9c8:	f7d4 fc66 	bl	8000298 <__aeabi_dsub>
 802b9cc:	ec53 2b19 	vmov	r2, r3, d9
 802b9d0:	f7d5 f88c 	bl	8000aec <__aeabi_dcmplt>
 802b9d4:	2800      	cmp	r0, #0
 802b9d6:	f040 80b6 	bne.w	802bb46 <_dtoa_r+0x6e6>
 802b9da:	9b02      	ldr	r3, [sp, #8]
 802b9dc:	429d      	cmp	r5, r3
 802b9de:	f43f af7c 	beq.w	802b8da <_dtoa_r+0x47a>
 802b9e2:	4b31      	ldr	r3, [pc, #196]	; (802baa8 <_dtoa_r+0x648>)
 802b9e4:	ec51 0b19 	vmov	r0, r1, d9
 802b9e8:	2200      	movs	r2, #0
 802b9ea:	f7d4 fe0d 	bl	8000608 <__aeabi_dmul>
 802b9ee:	4b2e      	ldr	r3, [pc, #184]	; (802baa8 <_dtoa_r+0x648>)
 802b9f0:	ec41 0b19 	vmov	d9, r0, r1
 802b9f4:	2200      	movs	r2, #0
 802b9f6:	4640      	mov	r0, r8
 802b9f8:	4649      	mov	r1, r9
 802b9fa:	f7d4 fe05 	bl	8000608 <__aeabi_dmul>
 802b9fe:	4680      	mov	r8, r0
 802ba00:	4689      	mov	r9, r1
 802ba02:	e7c5      	b.n	802b990 <_dtoa_r+0x530>
 802ba04:	ec51 0b17 	vmov	r0, r1, d7
 802ba08:	f7d4 fdfe 	bl	8000608 <__aeabi_dmul>
 802ba0c:	9b02      	ldr	r3, [sp, #8]
 802ba0e:	9d00      	ldr	r5, [sp, #0]
 802ba10:	930f      	str	r3, [sp, #60]	; 0x3c
 802ba12:	ec41 0b19 	vmov	d9, r0, r1
 802ba16:	4649      	mov	r1, r9
 802ba18:	4640      	mov	r0, r8
 802ba1a:	f7d5 f8a5 	bl	8000b68 <__aeabi_d2iz>
 802ba1e:	4606      	mov	r6, r0
 802ba20:	f7d4 fd88 	bl	8000534 <__aeabi_i2d>
 802ba24:	3630      	adds	r6, #48	; 0x30
 802ba26:	4602      	mov	r2, r0
 802ba28:	460b      	mov	r3, r1
 802ba2a:	4640      	mov	r0, r8
 802ba2c:	4649      	mov	r1, r9
 802ba2e:	f7d4 fc33 	bl	8000298 <__aeabi_dsub>
 802ba32:	f805 6b01 	strb.w	r6, [r5], #1
 802ba36:	9b02      	ldr	r3, [sp, #8]
 802ba38:	429d      	cmp	r5, r3
 802ba3a:	4680      	mov	r8, r0
 802ba3c:	4689      	mov	r9, r1
 802ba3e:	f04f 0200 	mov.w	r2, #0
 802ba42:	d124      	bne.n	802ba8e <_dtoa_r+0x62e>
 802ba44:	4b1b      	ldr	r3, [pc, #108]	; (802bab4 <_dtoa_r+0x654>)
 802ba46:	ec51 0b19 	vmov	r0, r1, d9
 802ba4a:	f7d4 fc27 	bl	800029c <__adddf3>
 802ba4e:	4602      	mov	r2, r0
 802ba50:	460b      	mov	r3, r1
 802ba52:	4640      	mov	r0, r8
 802ba54:	4649      	mov	r1, r9
 802ba56:	f7d5 f867 	bl	8000b28 <__aeabi_dcmpgt>
 802ba5a:	2800      	cmp	r0, #0
 802ba5c:	d173      	bne.n	802bb46 <_dtoa_r+0x6e6>
 802ba5e:	ec53 2b19 	vmov	r2, r3, d9
 802ba62:	4914      	ldr	r1, [pc, #80]	; (802bab4 <_dtoa_r+0x654>)
 802ba64:	2000      	movs	r0, #0
 802ba66:	f7d4 fc17 	bl	8000298 <__aeabi_dsub>
 802ba6a:	4602      	mov	r2, r0
 802ba6c:	460b      	mov	r3, r1
 802ba6e:	4640      	mov	r0, r8
 802ba70:	4649      	mov	r1, r9
 802ba72:	f7d5 f83b 	bl	8000aec <__aeabi_dcmplt>
 802ba76:	2800      	cmp	r0, #0
 802ba78:	f43f af2f 	beq.w	802b8da <_dtoa_r+0x47a>
 802ba7c:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 802ba7e:	1e6b      	subs	r3, r5, #1
 802ba80:	930f      	str	r3, [sp, #60]	; 0x3c
 802ba82:	f815 3c01 	ldrb.w	r3, [r5, #-1]
 802ba86:	2b30      	cmp	r3, #48	; 0x30
 802ba88:	d0f8      	beq.n	802ba7c <_dtoa_r+0x61c>
 802ba8a:	46bb      	mov	fp, r7
 802ba8c:	e04a      	b.n	802bb24 <_dtoa_r+0x6c4>
 802ba8e:	4b06      	ldr	r3, [pc, #24]	; (802baa8 <_dtoa_r+0x648>)
 802ba90:	f7d4 fdba 	bl	8000608 <__aeabi_dmul>
 802ba94:	4680      	mov	r8, r0
 802ba96:	4689      	mov	r9, r1
 802ba98:	e7bd      	b.n	802ba16 <_dtoa_r+0x5b6>
 802ba9a:	bf00      	nop
 802ba9c:	08030330 	.word	0x08030330
 802baa0:	08030308 	.word	0x08030308
 802baa4:	3ff00000 	.word	0x3ff00000
 802baa8:	40240000 	.word	0x40240000
 802baac:	401c0000 	.word	0x401c0000
 802bab0:	40140000 	.word	0x40140000
 802bab4:	3fe00000 	.word	0x3fe00000
 802bab8:	e9dd 6702 	ldrd	r6, r7, [sp, #8]
 802babc:	9d00      	ldr	r5, [sp, #0]
 802babe:	4642      	mov	r2, r8
 802bac0:	464b      	mov	r3, r9
 802bac2:	4630      	mov	r0, r6
 802bac4:	4639      	mov	r1, r7
 802bac6:	f7d4 fec9 	bl	800085c <__aeabi_ddiv>
 802baca:	f7d5 f84d 	bl	8000b68 <__aeabi_d2iz>
 802bace:	9001      	str	r0, [sp, #4]
 802bad0:	f7d4 fd30 	bl	8000534 <__aeabi_i2d>
 802bad4:	4642      	mov	r2, r8
 802bad6:	464b      	mov	r3, r9
 802bad8:	f7d4 fd96 	bl	8000608 <__aeabi_dmul>
 802badc:	4602      	mov	r2, r0
 802bade:	460b      	mov	r3, r1
 802bae0:	4630      	mov	r0, r6
 802bae2:	4639      	mov	r1, r7
 802bae4:	f7d4 fbd8 	bl	8000298 <__aeabi_dsub>
 802bae8:	9e01      	ldr	r6, [sp, #4]
 802baea:	9f04      	ldr	r7, [sp, #16]
 802baec:	3630      	adds	r6, #48	; 0x30
 802baee:	f805 6b01 	strb.w	r6, [r5], #1
 802baf2:	9e00      	ldr	r6, [sp, #0]
 802baf4:	1bae      	subs	r6, r5, r6
 802baf6:	42b7      	cmp	r7, r6
 802baf8:	4602      	mov	r2, r0
 802bafa:	460b      	mov	r3, r1
 802bafc:	d134      	bne.n	802bb68 <_dtoa_r+0x708>
 802bafe:	f7d4 fbcd 	bl	800029c <__adddf3>
 802bb02:	4642      	mov	r2, r8
 802bb04:	464b      	mov	r3, r9
 802bb06:	4606      	mov	r6, r0
 802bb08:	460f      	mov	r7, r1
 802bb0a:	f7d5 f80d 	bl	8000b28 <__aeabi_dcmpgt>
 802bb0e:	b9c8      	cbnz	r0, 802bb44 <_dtoa_r+0x6e4>
 802bb10:	4642      	mov	r2, r8
 802bb12:	464b      	mov	r3, r9
 802bb14:	4630      	mov	r0, r6
 802bb16:	4639      	mov	r1, r7
 802bb18:	f7d4 ffde 	bl	8000ad8 <__aeabi_dcmpeq>
 802bb1c:	b110      	cbz	r0, 802bb24 <_dtoa_r+0x6c4>
 802bb1e:	9b01      	ldr	r3, [sp, #4]
 802bb20:	07db      	lsls	r3, r3, #31
 802bb22:	d40f      	bmi.n	802bb44 <_dtoa_r+0x6e4>
 802bb24:	4651      	mov	r1, sl
 802bb26:	4620      	mov	r0, r4
 802bb28:	f000 fb18 	bl	802c15c <_Bfree>
 802bb2c:	2300      	movs	r3, #0
 802bb2e:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 802bb30:	702b      	strb	r3, [r5, #0]
 802bb32:	f10b 0301 	add.w	r3, fp, #1
 802bb36:	6013      	str	r3, [r2, #0]
 802bb38:	9b21      	ldr	r3, [sp, #132]	; 0x84
 802bb3a:	2b00      	cmp	r3, #0
 802bb3c:	f43f ace2 	beq.w	802b504 <_dtoa_r+0xa4>
 802bb40:	601d      	str	r5, [r3, #0]
 802bb42:	e4df      	b.n	802b504 <_dtoa_r+0xa4>
 802bb44:	465f      	mov	r7, fp
 802bb46:	462b      	mov	r3, r5
 802bb48:	461d      	mov	r5, r3
 802bb4a:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 802bb4e:	2a39      	cmp	r2, #57	; 0x39
 802bb50:	d106      	bne.n	802bb60 <_dtoa_r+0x700>
 802bb52:	9a00      	ldr	r2, [sp, #0]
 802bb54:	429a      	cmp	r2, r3
 802bb56:	d1f7      	bne.n	802bb48 <_dtoa_r+0x6e8>
 802bb58:	9900      	ldr	r1, [sp, #0]
 802bb5a:	2230      	movs	r2, #48	; 0x30
 802bb5c:	3701      	adds	r7, #1
 802bb5e:	700a      	strb	r2, [r1, #0]
 802bb60:	781a      	ldrb	r2, [r3, #0]
 802bb62:	3201      	adds	r2, #1
 802bb64:	701a      	strb	r2, [r3, #0]
 802bb66:	e790      	b.n	802ba8a <_dtoa_r+0x62a>
 802bb68:	4ba3      	ldr	r3, [pc, #652]	; (802bdf8 <_dtoa_r+0x998>)
 802bb6a:	2200      	movs	r2, #0
 802bb6c:	f7d4 fd4c 	bl	8000608 <__aeabi_dmul>
 802bb70:	2200      	movs	r2, #0
 802bb72:	2300      	movs	r3, #0
 802bb74:	4606      	mov	r6, r0
 802bb76:	460f      	mov	r7, r1
 802bb78:	f7d4 ffae 	bl	8000ad8 <__aeabi_dcmpeq>
 802bb7c:	2800      	cmp	r0, #0
 802bb7e:	d09e      	beq.n	802babe <_dtoa_r+0x65e>
 802bb80:	e7d0      	b.n	802bb24 <_dtoa_r+0x6c4>
 802bb82:	9a09      	ldr	r2, [sp, #36]	; 0x24
 802bb84:	2a00      	cmp	r2, #0
 802bb86:	f000 80ca 	beq.w	802bd1e <_dtoa_r+0x8be>
 802bb8a:	9a07      	ldr	r2, [sp, #28]
 802bb8c:	2a01      	cmp	r2, #1
 802bb8e:	f300 80ad 	bgt.w	802bcec <_dtoa_r+0x88c>
 802bb92:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 802bb94:	2a00      	cmp	r2, #0
 802bb96:	f000 80a5 	beq.w	802bce4 <_dtoa_r+0x884>
 802bb9a:	f203 4333 	addw	r3, r3, #1075	; 0x433
 802bb9e:	9e08      	ldr	r6, [sp, #32]
 802bba0:	9d05      	ldr	r5, [sp, #20]
 802bba2:	9a05      	ldr	r2, [sp, #20]
 802bba4:	441a      	add	r2, r3
 802bba6:	9205      	str	r2, [sp, #20]
 802bba8:	9a06      	ldr	r2, [sp, #24]
 802bbaa:	2101      	movs	r1, #1
 802bbac:	441a      	add	r2, r3
 802bbae:	4620      	mov	r0, r4
 802bbb0:	9206      	str	r2, [sp, #24]
 802bbb2:	f000 fb89 	bl	802c2c8 <__i2b>
 802bbb6:	4607      	mov	r7, r0
 802bbb8:	b165      	cbz	r5, 802bbd4 <_dtoa_r+0x774>
 802bbba:	9b06      	ldr	r3, [sp, #24]
 802bbbc:	2b00      	cmp	r3, #0
 802bbbe:	dd09      	ble.n	802bbd4 <_dtoa_r+0x774>
 802bbc0:	42ab      	cmp	r3, r5
 802bbc2:	9a05      	ldr	r2, [sp, #20]
 802bbc4:	bfa8      	it	ge
 802bbc6:	462b      	movge	r3, r5
 802bbc8:	1ad2      	subs	r2, r2, r3
 802bbca:	9205      	str	r2, [sp, #20]
 802bbcc:	9a06      	ldr	r2, [sp, #24]
 802bbce:	1aed      	subs	r5, r5, r3
 802bbd0:	1ad3      	subs	r3, r2, r3
 802bbd2:	9306      	str	r3, [sp, #24]
 802bbd4:	9b08      	ldr	r3, [sp, #32]
 802bbd6:	b1f3      	cbz	r3, 802bc16 <_dtoa_r+0x7b6>
 802bbd8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802bbda:	2b00      	cmp	r3, #0
 802bbdc:	f000 80a3 	beq.w	802bd26 <_dtoa_r+0x8c6>
 802bbe0:	2e00      	cmp	r6, #0
 802bbe2:	dd10      	ble.n	802bc06 <_dtoa_r+0x7a6>
 802bbe4:	4639      	mov	r1, r7
 802bbe6:	4632      	mov	r2, r6
 802bbe8:	4620      	mov	r0, r4
 802bbea:	f000 fc2d 	bl	802c448 <__pow5mult>
 802bbee:	4652      	mov	r2, sl
 802bbf0:	4601      	mov	r1, r0
 802bbf2:	4607      	mov	r7, r0
 802bbf4:	4620      	mov	r0, r4
 802bbf6:	f000 fb7d 	bl	802c2f4 <__multiply>
 802bbfa:	4651      	mov	r1, sl
 802bbfc:	4680      	mov	r8, r0
 802bbfe:	4620      	mov	r0, r4
 802bc00:	f000 faac 	bl	802c15c <_Bfree>
 802bc04:	46c2      	mov	sl, r8
 802bc06:	9b08      	ldr	r3, [sp, #32]
 802bc08:	1b9a      	subs	r2, r3, r6
 802bc0a:	d004      	beq.n	802bc16 <_dtoa_r+0x7b6>
 802bc0c:	4651      	mov	r1, sl
 802bc0e:	4620      	mov	r0, r4
 802bc10:	f000 fc1a 	bl	802c448 <__pow5mult>
 802bc14:	4682      	mov	sl, r0
 802bc16:	2101      	movs	r1, #1
 802bc18:	4620      	mov	r0, r4
 802bc1a:	f000 fb55 	bl	802c2c8 <__i2b>
 802bc1e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 802bc20:	2b00      	cmp	r3, #0
 802bc22:	4606      	mov	r6, r0
 802bc24:	f340 8081 	ble.w	802bd2a <_dtoa_r+0x8ca>
 802bc28:	461a      	mov	r2, r3
 802bc2a:	4601      	mov	r1, r0
 802bc2c:	4620      	mov	r0, r4
 802bc2e:	f000 fc0b 	bl	802c448 <__pow5mult>
 802bc32:	9b07      	ldr	r3, [sp, #28]
 802bc34:	2b01      	cmp	r3, #1
 802bc36:	4606      	mov	r6, r0
 802bc38:	dd7a      	ble.n	802bd30 <_dtoa_r+0x8d0>
 802bc3a:	f04f 0800 	mov.w	r8, #0
 802bc3e:	6933      	ldr	r3, [r6, #16]
 802bc40:	eb06 0383 	add.w	r3, r6, r3, lsl #2
 802bc44:	6918      	ldr	r0, [r3, #16]
 802bc46:	f000 faf1 	bl	802c22c <__hi0bits>
 802bc4a:	f1c0 0020 	rsb	r0, r0, #32
 802bc4e:	9b06      	ldr	r3, [sp, #24]
 802bc50:	4418      	add	r0, r3
 802bc52:	f010 001f 	ands.w	r0, r0, #31
 802bc56:	f000 8094 	beq.w	802bd82 <_dtoa_r+0x922>
 802bc5a:	f1c0 0320 	rsb	r3, r0, #32
 802bc5e:	2b04      	cmp	r3, #4
 802bc60:	f340 8085 	ble.w	802bd6e <_dtoa_r+0x90e>
 802bc64:	9b05      	ldr	r3, [sp, #20]
 802bc66:	f1c0 001c 	rsb	r0, r0, #28
 802bc6a:	4403      	add	r3, r0
 802bc6c:	9305      	str	r3, [sp, #20]
 802bc6e:	9b06      	ldr	r3, [sp, #24]
 802bc70:	4403      	add	r3, r0
 802bc72:	4405      	add	r5, r0
 802bc74:	9306      	str	r3, [sp, #24]
 802bc76:	9b05      	ldr	r3, [sp, #20]
 802bc78:	2b00      	cmp	r3, #0
 802bc7a:	dd05      	ble.n	802bc88 <_dtoa_r+0x828>
 802bc7c:	4651      	mov	r1, sl
 802bc7e:	461a      	mov	r2, r3
 802bc80:	4620      	mov	r0, r4
 802bc82:	f000 fc3b 	bl	802c4fc <__lshift>
 802bc86:	4682      	mov	sl, r0
 802bc88:	9b06      	ldr	r3, [sp, #24]
 802bc8a:	2b00      	cmp	r3, #0
 802bc8c:	dd05      	ble.n	802bc9a <_dtoa_r+0x83a>
 802bc8e:	4631      	mov	r1, r6
 802bc90:	461a      	mov	r2, r3
 802bc92:	4620      	mov	r0, r4
 802bc94:	f000 fc32 	bl	802c4fc <__lshift>
 802bc98:	4606      	mov	r6, r0
 802bc9a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 802bc9c:	2b00      	cmp	r3, #0
 802bc9e:	d072      	beq.n	802bd86 <_dtoa_r+0x926>
 802bca0:	4631      	mov	r1, r6
 802bca2:	4650      	mov	r0, sl
 802bca4:	f000 fc96 	bl	802c5d4 <__mcmp>
 802bca8:	2800      	cmp	r0, #0
 802bcaa:	da6c      	bge.n	802bd86 <_dtoa_r+0x926>
 802bcac:	2300      	movs	r3, #0
 802bcae:	4651      	mov	r1, sl
 802bcb0:	220a      	movs	r2, #10
 802bcb2:	4620      	mov	r0, r4
 802bcb4:	f000 fa74 	bl	802c1a0 <__multadd>
 802bcb8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802bcba:	f10b 3bff 	add.w	fp, fp, #4294967295
 802bcbe:	4682      	mov	sl, r0
 802bcc0:	2b00      	cmp	r3, #0
 802bcc2:	f000 81b0 	beq.w	802c026 <_dtoa_r+0xbc6>
 802bcc6:	2300      	movs	r3, #0
 802bcc8:	4639      	mov	r1, r7
 802bcca:	220a      	movs	r2, #10
 802bccc:	4620      	mov	r0, r4
 802bcce:	f000 fa67 	bl	802c1a0 <__multadd>
 802bcd2:	9b01      	ldr	r3, [sp, #4]
 802bcd4:	2b00      	cmp	r3, #0
 802bcd6:	4607      	mov	r7, r0
 802bcd8:	f300 8096 	bgt.w	802be08 <_dtoa_r+0x9a8>
 802bcdc:	9b07      	ldr	r3, [sp, #28]
 802bcde:	2b02      	cmp	r3, #2
 802bce0:	dc59      	bgt.n	802bd96 <_dtoa_r+0x936>
 802bce2:	e091      	b.n	802be08 <_dtoa_r+0x9a8>
 802bce4:	9b10      	ldr	r3, [sp, #64]	; 0x40
 802bce6:	f1c3 0336 	rsb	r3, r3, #54	; 0x36
 802bcea:	e758      	b.n	802bb9e <_dtoa_r+0x73e>
 802bcec:	9b04      	ldr	r3, [sp, #16]
 802bcee:	1e5e      	subs	r6, r3, #1
 802bcf0:	9b08      	ldr	r3, [sp, #32]
 802bcf2:	42b3      	cmp	r3, r6
 802bcf4:	bfbf      	itttt	lt
 802bcf6:	9b08      	ldrlt	r3, [sp, #32]
 802bcf8:	9a0b      	ldrlt	r2, [sp, #44]	; 0x2c
 802bcfa:	9608      	strlt	r6, [sp, #32]
 802bcfc:	1af3      	sublt	r3, r6, r3
 802bcfe:	bfb4      	ite	lt
 802bd00:	18d2      	addlt	r2, r2, r3
 802bd02:	1b9e      	subge	r6, r3, r6
 802bd04:	9b04      	ldr	r3, [sp, #16]
 802bd06:	bfbc      	itt	lt
 802bd08:	920b      	strlt	r2, [sp, #44]	; 0x2c
 802bd0a:	2600      	movlt	r6, #0
 802bd0c:	2b00      	cmp	r3, #0
 802bd0e:	bfb7      	itett	lt
 802bd10:	e9dd 2304 	ldrdlt	r2, r3, [sp, #16]
 802bd14:	e9dd 3504 	ldrdge	r3, r5, [sp, #16]
 802bd18:	1a9d      	sublt	r5, r3, r2
 802bd1a:	2300      	movlt	r3, #0
 802bd1c:	e741      	b.n	802bba2 <_dtoa_r+0x742>
 802bd1e:	9e08      	ldr	r6, [sp, #32]
 802bd20:	9d05      	ldr	r5, [sp, #20]
 802bd22:	9f09      	ldr	r7, [sp, #36]	; 0x24
 802bd24:	e748      	b.n	802bbb8 <_dtoa_r+0x758>
 802bd26:	9a08      	ldr	r2, [sp, #32]
 802bd28:	e770      	b.n	802bc0c <_dtoa_r+0x7ac>
 802bd2a:	9b07      	ldr	r3, [sp, #28]
 802bd2c:	2b01      	cmp	r3, #1
 802bd2e:	dc19      	bgt.n	802bd64 <_dtoa_r+0x904>
 802bd30:	9b02      	ldr	r3, [sp, #8]
 802bd32:	b9bb      	cbnz	r3, 802bd64 <_dtoa_r+0x904>
 802bd34:	9b03      	ldr	r3, [sp, #12]
 802bd36:	f3c3 0313 	ubfx	r3, r3, #0, #20
 802bd3a:	b99b      	cbnz	r3, 802bd64 <_dtoa_r+0x904>
 802bd3c:	9b03      	ldr	r3, [sp, #12]
 802bd3e:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 802bd42:	0d1b      	lsrs	r3, r3, #20
 802bd44:	051b      	lsls	r3, r3, #20
 802bd46:	b183      	cbz	r3, 802bd6a <_dtoa_r+0x90a>
 802bd48:	9b05      	ldr	r3, [sp, #20]
 802bd4a:	3301      	adds	r3, #1
 802bd4c:	9305      	str	r3, [sp, #20]
 802bd4e:	9b06      	ldr	r3, [sp, #24]
 802bd50:	3301      	adds	r3, #1
 802bd52:	9306      	str	r3, [sp, #24]
 802bd54:	f04f 0801 	mov.w	r8, #1
 802bd58:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 802bd5a:	2b00      	cmp	r3, #0
 802bd5c:	f47f af6f 	bne.w	802bc3e <_dtoa_r+0x7de>
 802bd60:	2001      	movs	r0, #1
 802bd62:	e774      	b.n	802bc4e <_dtoa_r+0x7ee>
 802bd64:	f04f 0800 	mov.w	r8, #0
 802bd68:	e7f6      	b.n	802bd58 <_dtoa_r+0x8f8>
 802bd6a:	4698      	mov	r8, r3
 802bd6c:	e7f4      	b.n	802bd58 <_dtoa_r+0x8f8>
 802bd6e:	d082      	beq.n	802bc76 <_dtoa_r+0x816>
 802bd70:	9a05      	ldr	r2, [sp, #20]
 802bd72:	331c      	adds	r3, #28
 802bd74:	441a      	add	r2, r3
 802bd76:	9205      	str	r2, [sp, #20]
 802bd78:	9a06      	ldr	r2, [sp, #24]
 802bd7a:	441a      	add	r2, r3
 802bd7c:	441d      	add	r5, r3
 802bd7e:	9206      	str	r2, [sp, #24]
 802bd80:	e779      	b.n	802bc76 <_dtoa_r+0x816>
 802bd82:	4603      	mov	r3, r0
 802bd84:	e7f4      	b.n	802bd70 <_dtoa_r+0x910>
 802bd86:	9b04      	ldr	r3, [sp, #16]
 802bd88:	2b00      	cmp	r3, #0
 802bd8a:	dc37      	bgt.n	802bdfc <_dtoa_r+0x99c>
 802bd8c:	9b07      	ldr	r3, [sp, #28]
 802bd8e:	2b02      	cmp	r3, #2
 802bd90:	dd34      	ble.n	802bdfc <_dtoa_r+0x99c>
 802bd92:	9b04      	ldr	r3, [sp, #16]
 802bd94:	9301      	str	r3, [sp, #4]
 802bd96:	9b01      	ldr	r3, [sp, #4]
 802bd98:	b963      	cbnz	r3, 802bdb4 <_dtoa_r+0x954>
 802bd9a:	4631      	mov	r1, r6
 802bd9c:	2205      	movs	r2, #5
 802bd9e:	4620      	mov	r0, r4
 802bda0:	f000 f9fe 	bl	802c1a0 <__multadd>
 802bda4:	4601      	mov	r1, r0
 802bda6:	4606      	mov	r6, r0
 802bda8:	4650      	mov	r0, sl
 802bdaa:	f000 fc13 	bl	802c5d4 <__mcmp>
 802bdae:	2800      	cmp	r0, #0
 802bdb0:	f73f adbb 	bgt.w	802b92a <_dtoa_r+0x4ca>
 802bdb4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 802bdb6:	9d00      	ldr	r5, [sp, #0]
 802bdb8:	ea6f 0b03 	mvn.w	fp, r3
 802bdbc:	f04f 0800 	mov.w	r8, #0
 802bdc0:	4631      	mov	r1, r6
 802bdc2:	4620      	mov	r0, r4
 802bdc4:	f000 f9ca 	bl	802c15c <_Bfree>
 802bdc8:	2f00      	cmp	r7, #0
 802bdca:	f43f aeab 	beq.w	802bb24 <_dtoa_r+0x6c4>
 802bdce:	f1b8 0f00 	cmp.w	r8, #0
 802bdd2:	d005      	beq.n	802bde0 <_dtoa_r+0x980>
 802bdd4:	45b8      	cmp	r8, r7
 802bdd6:	d003      	beq.n	802bde0 <_dtoa_r+0x980>
 802bdd8:	4641      	mov	r1, r8
 802bdda:	4620      	mov	r0, r4
 802bddc:	f000 f9be 	bl	802c15c <_Bfree>
 802bde0:	4639      	mov	r1, r7
 802bde2:	4620      	mov	r0, r4
 802bde4:	f000 f9ba 	bl	802c15c <_Bfree>
 802bde8:	e69c      	b.n	802bb24 <_dtoa_r+0x6c4>
 802bdea:	2600      	movs	r6, #0
 802bdec:	4637      	mov	r7, r6
 802bdee:	e7e1      	b.n	802bdb4 <_dtoa_r+0x954>
 802bdf0:	46bb      	mov	fp, r7
 802bdf2:	4637      	mov	r7, r6
 802bdf4:	e599      	b.n	802b92a <_dtoa_r+0x4ca>
 802bdf6:	bf00      	nop
 802bdf8:	40240000 	.word	0x40240000
 802bdfc:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802bdfe:	2b00      	cmp	r3, #0
 802be00:	f000 80c8 	beq.w	802bf94 <_dtoa_r+0xb34>
 802be04:	9b04      	ldr	r3, [sp, #16]
 802be06:	9301      	str	r3, [sp, #4]
 802be08:	2d00      	cmp	r5, #0
 802be0a:	dd05      	ble.n	802be18 <_dtoa_r+0x9b8>
 802be0c:	4639      	mov	r1, r7
 802be0e:	462a      	mov	r2, r5
 802be10:	4620      	mov	r0, r4
 802be12:	f000 fb73 	bl	802c4fc <__lshift>
 802be16:	4607      	mov	r7, r0
 802be18:	f1b8 0f00 	cmp.w	r8, #0
 802be1c:	d05b      	beq.n	802bed6 <_dtoa_r+0xa76>
 802be1e:	6879      	ldr	r1, [r7, #4]
 802be20:	4620      	mov	r0, r4
 802be22:	f000 f95b 	bl	802c0dc <_Balloc>
 802be26:	4605      	mov	r5, r0
 802be28:	b928      	cbnz	r0, 802be36 <_dtoa_r+0x9d6>
 802be2a:	4b83      	ldr	r3, [pc, #524]	; (802c038 <_dtoa_r+0xbd8>)
 802be2c:	4602      	mov	r2, r0
 802be2e:	f240 21ef 	movw	r1, #751	; 0x2ef
 802be32:	f7ff bb2e 	b.w	802b492 <_dtoa_r+0x32>
 802be36:	693a      	ldr	r2, [r7, #16]
 802be38:	3202      	adds	r2, #2
 802be3a:	0092      	lsls	r2, r2, #2
 802be3c:	f107 010c 	add.w	r1, r7, #12
 802be40:	300c      	adds	r0, #12
 802be42:	f7ff fa18 	bl	802b276 <memcpy>
 802be46:	2201      	movs	r2, #1
 802be48:	4629      	mov	r1, r5
 802be4a:	4620      	mov	r0, r4
 802be4c:	f000 fb56 	bl	802c4fc <__lshift>
 802be50:	9b00      	ldr	r3, [sp, #0]
 802be52:	3301      	adds	r3, #1
 802be54:	9304      	str	r3, [sp, #16]
 802be56:	e9dd 2300 	ldrd	r2, r3, [sp]
 802be5a:	4413      	add	r3, r2
 802be5c:	9308      	str	r3, [sp, #32]
 802be5e:	9b02      	ldr	r3, [sp, #8]
 802be60:	f003 0301 	and.w	r3, r3, #1
 802be64:	46b8      	mov	r8, r7
 802be66:	9306      	str	r3, [sp, #24]
 802be68:	4607      	mov	r7, r0
 802be6a:	9b04      	ldr	r3, [sp, #16]
 802be6c:	4631      	mov	r1, r6
 802be6e:	3b01      	subs	r3, #1
 802be70:	4650      	mov	r0, sl
 802be72:	9301      	str	r3, [sp, #4]
 802be74:	f7ff fa6c 	bl	802b350 <quorem>
 802be78:	4641      	mov	r1, r8
 802be7a:	9002      	str	r0, [sp, #8]
 802be7c:	f100 0930 	add.w	r9, r0, #48	; 0x30
 802be80:	4650      	mov	r0, sl
 802be82:	f000 fba7 	bl	802c5d4 <__mcmp>
 802be86:	463a      	mov	r2, r7
 802be88:	9005      	str	r0, [sp, #20]
 802be8a:	4631      	mov	r1, r6
 802be8c:	4620      	mov	r0, r4
 802be8e:	f000 fbbd 	bl	802c60c <__mdiff>
 802be92:	68c2      	ldr	r2, [r0, #12]
 802be94:	4605      	mov	r5, r0
 802be96:	bb02      	cbnz	r2, 802beda <_dtoa_r+0xa7a>
 802be98:	4601      	mov	r1, r0
 802be9a:	4650      	mov	r0, sl
 802be9c:	f000 fb9a 	bl	802c5d4 <__mcmp>
 802bea0:	4602      	mov	r2, r0
 802bea2:	4629      	mov	r1, r5
 802bea4:	4620      	mov	r0, r4
 802bea6:	9209      	str	r2, [sp, #36]	; 0x24
 802bea8:	f000 f958 	bl	802c15c <_Bfree>
 802beac:	9b07      	ldr	r3, [sp, #28]
 802beae:	9a09      	ldr	r2, [sp, #36]	; 0x24
 802beb0:	9d04      	ldr	r5, [sp, #16]
 802beb2:	ea43 0102 	orr.w	r1, r3, r2
 802beb6:	9b06      	ldr	r3, [sp, #24]
 802beb8:	4319      	orrs	r1, r3
 802beba:	d110      	bne.n	802bede <_dtoa_r+0xa7e>
 802bebc:	f1b9 0f39 	cmp.w	r9, #57	; 0x39
 802bec0:	d029      	beq.n	802bf16 <_dtoa_r+0xab6>
 802bec2:	9b05      	ldr	r3, [sp, #20]
 802bec4:	2b00      	cmp	r3, #0
 802bec6:	dd02      	ble.n	802bece <_dtoa_r+0xa6e>
 802bec8:	9b02      	ldr	r3, [sp, #8]
 802beca:	f103 0931 	add.w	r9, r3, #49	; 0x31
 802bece:	9b01      	ldr	r3, [sp, #4]
 802bed0:	f883 9000 	strb.w	r9, [r3]
 802bed4:	e774      	b.n	802bdc0 <_dtoa_r+0x960>
 802bed6:	4638      	mov	r0, r7
 802bed8:	e7ba      	b.n	802be50 <_dtoa_r+0x9f0>
 802beda:	2201      	movs	r2, #1
 802bedc:	e7e1      	b.n	802bea2 <_dtoa_r+0xa42>
 802bede:	9b05      	ldr	r3, [sp, #20]
 802bee0:	2b00      	cmp	r3, #0
 802bee2:	db04      	blt.n	802beee <_dtoa_r+0xa8e>
 802bee4:	9907      	ldr	r1, [sp, #28]
 802bee6:	430b      	orrs	r3, r1
 802bee8:	9906      	ldr	r1, [sp, #24]
 802beea:	430b      	orrs	r3, r1
 802beec:	d120      	bne.n	802bf30 <_dtoa_r+0xad0>
 802beee:	2a00      	cmp	r2, #0
 802bef0:	dded      	ble.n	802bece <_dtoa_r+0xa6e>
 802bef2:	4651      	mov	r1, sl
 802bef4:	2201      	movs	r2, #1
 802bef6:	4620      	mov	r0, r4
 802bef8:	f000 fb00 	bl	802c4fc <__lshift>
 802befc:	4631      	mov	r1, r6
 802befe:	4682      	mov	sl, r0
 802bf00:	f000 fb68 	bl	802c5d4 <__mcmp>
 802bf04:	2800      	cmp	r0, #0
 802bf06:	dc03      	bgt.n	802bf10 <_dtoa_r+0xab0>
 802bf08:	d1e1      	bne.n	802bece <_dtoa_r+0xa6e>
 802bf0a:	f019 0f01 	tst.w	r9, #1
 802bf0e:	d0de      	beq.n	802bece <_dtoa_r+0xa6e>
 802bf10:	f1b9 0f39 	cmp.w	r9, #57	; 0x39
 802bf14:	d1d8      	bne.n	802bec8 <_dtoa_r+0xa68>
 802bf16:	9a01      	ldr	r2, [sp, #4]
 802bf18:	2339      	movs	r3, #57	; 0x39
 802bf1a:	7013      	strb	r3, [r2, #0]
 802bf1c:	462b      	mov	r3, r5
 802bf1e:	461d      	mov	r5, r3
 802bf20:	3b01      	subs	r3, #1
 802bf22:	f815 2c01 	ldrb.w	r2, [r5, #-1]
 802bf26:	2a39      	cmp	r2, #57	; 0x39
 802bf28:	d06c      	beq.n	802c004 <_dtoa_r+0xba4>
 802bf2a:	3201      	adds	r2, #1
 802bf2c:	701a      	strb	r2, [r3, #0]
 802bf2e:	e747      	b.n	802bdc0 <_dtoa_r+0x960>
 802bf30:	2a00      	cmp	r2, #0
 802bf32:	dd07      	ble.n	802bf44 <_dtoa_r+0xae4>
 802bf34:	f1b9 0f39 	cmp.w	r9, #57	; 0x39
 802bf38:	d0ed      	beq.n	802bf16 <_dtoa_r+0xab6>
 802bf3a:	9a01      	ldr	r2, [sp, #4]
 802bf3c:	f109 0301 	add.w	r3, r9, #1
 802bf40:	7013      	strb	r3, [r2, #0]
 802bf42:	e73d      	b.n	802bdc0 <_dtoa_r+0x960>
 802bf44:	9b04      	ldr	r3, [sp, #16]
 802bf46:	9a08      	ldr	r2, [sp, #32]
 802bf48:	f803 9c01 	strb.w	r9, [r3, #-1]
 802bf4c:	4293      	cmp	r3, r2
 802bf4e:	d043      	beq.n	802bfd8 <_dtoa_r+0xb78>
 802bf50:	4651      	mov	r1, sl
 802bf52:	2300      	movs	r3, #0
 802bf54:	220a      	movs	r2, #10
 802bf56:	4620      	mov	r0, r4
 802bf58:	f000 f922 	bl	802c1a0 <__multadd>
 802bf5c:	45b8      	cmp	r8, r7
 802bf5e:	4682      	mov	sl, r0
 802bf60:	f04f 0300 	mov.w	r3, #0
 802bf64:	f04f 020a 	mov.w	r2, #10
 802bf68:	4641      	mov	r1, r8
 802bf6a:	4620      	mov	r0, r4
 802bf6c:	d107      	bne.n	802bf7e <_dtoa_r+0xb1e>
 802bf6e:	f000 f917 	bl	802c1a0 <__multadd>
 802bf72:	4680      	mov	r8, r0
 802bf74:	4607      	mov	r7, r0
 802bf76:	9b04      	ldr	r3, [sp, #16]
 802bf78:	3301      	adds	r3, #1
 802bf7a:	9304      	str	r3, [sp, #16]
 802bf7c:	e775      	b.n	802be6a <_dtoa_r+0xa0a>
 802bf7e:	f000 f90f 	bl	802c1a0 <__multadd>
 802bf82:	4639      	mov	r1, r7
 802bf84:	4680      	mov	r8, r0
 802bf86:	2300      	movs	r3, #0
 802bf88:	220a      	movs	r2, #10
 802bf8a:	4620      	mov	r0, r4
 802bf8c:	f000 f908 	bl	802c1a0 <__multadd>
 802bf90:	4607      	mov	r7, r0
 802bf92:	e7f0      	b.n	802bf76 <_dtoa_r+0xb16>
 802bf94:	9b04      	ldr	r3, [sp, #16]
 802bf96:	9301      	str	r3, [sp, #4]
 802bf98:	9d00      	ldr	r5, [sp, #0]
 802bf9a:	4631      	mov	r1, r6
 802bf9c:	4650      	mov	r0, sl
 802bf9e:	f7ff f9d7 	bl	802b350 <quorem>
 802bfa2:	f100 0930 	add.w	r9, r0, #48	; 0x30
 802bfa6:	9b00      	ldr	r3, [sp, #0]
 802bfa8:	f805 9b01 	strb.w	r9, [r5], #1
 802bfac:	1aea      	subs	r2, r5, r3
 802bfae:	9b01      	ldr	r3, [sp, #4]
 802bfb0:	4293      	cmp	r3, r2
 802bfb2:	dd07      	ble.n	802bfc4 <_dtoa_r+0xb64>
 802bfb4:	4651      	mov	r1, sl
 802bfb6:	2300      	movs	r3, #0
 802bfb8:	220a      	movs	r2, #10
 802bfba:	4620      	mov	r0, r4
 802bfbc:	f000 f8f0 	bl	802c1a0 <__multadd>
 802bfc0:	4682      	mov	sl, r0
 802bfc2:	e7ea      	b.n	802bf9a <_dtoa_r+0xb3a>
 802bfc4:	9b01      	ldr	r3, [sp, #4]
 802bfc6:	2b00      	cmp	r3, #0
 802bfc8:	bfc8      	it	gt
 802bfca:	461d      	movgt	r5, r3
 802bfcc:	9b00      	ldr	r3, [sp, #0]
 802bfce:	bfd8      	it	le
 802bfd0:	2501      	movle	r5, #1
 802bfd2:	441d      	add	r5, r3
 802bfd4:	f04f 0800 	mov.w	r8, #0
 802bfd8:	4651      	mov	r1, sl
 802bfda:	2201      	movs	r2, #1
 802bfdc:	4620      	mov	r0, r4
 802bfde:	f000 fa8d 	bl	802c4fc <__lshift>
 802bfe2:	4631      	mov	r1, r6
 802bfe4:	4682      	mov	sl, r0
 802bfe6:	f000 faf5 	bl	802c5d4 <__mcmp>
 802bfea:	2800      	cmp	r0, #0
 802bfec:	dc96      	bgt.n	802bf1c <_dtoa_r+0xabc>
 802bfee:	d102      	bne.n	802bff6 <_dtoa_r+0xb96>
 802bff0:	f019 0f01 	tst.w	r9, #1
 802bff4:	d192      	bne.n	802bf1c <_dtoa_r+0xabc>
 802bff6:	462b      	mov	r3, r5
 802bff8:	461d      	mov	r5, r3
 802bffa:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 802bffe:	2a30      	cmp	r2, #48	; 0x30
 802c000:	d0fa      	beq.n	802bff8 <_dtoa_r+0xb98>
 802c002:	e6dd      	b.n	802bdc0 <_dtoa_r+0x960>
 802c004:	9a00      	ldr	r2, [sp, #0]
 802c006:	429a      	cmp	r2, r3
 802c008:	d189      	bne.n	802bf1e <_dtoa_r+0xabe>
 802c00a:	f10b 0b01 	add.w	fp, fp, #1
 802c00e:	2331      	movs	r3, #49	; 0x31
 802c010:	e796      	b.n	802bf40 <_dtoa_r+0xae0>
 802c012:	4b0a      	ldr	r3, [pc, #40]	; (802c03c <_dtoa_r+0xbdc>)
 802c014:	f7ff ba99 	b.w	802b54a <_dtoa_r+0xea>
 802c018:	9b21      	ldr	r3, [sp, #132]	; 0x84
 802c01a:	2b00      	cmp	r3, #0
 802c01c:	f47f aa6d 	bne.w	802b4fa <_dtoa_r+0x9a>
 802c020:	4b07      	ldr	r3, [pc, #28]	; (802c040 <_dtoa_r+0xbe0>)
 802c022:	f7ff ba92 	b.w	802b54a <_dtoa_r+0xea>
 802c026:	9b01      	ldr	r3, [sp, #4]
 802c028:	2b00      	cmp	r3, #0
 802c02a:	dcb5      	bgt.n	802bf98 <_dtoa_r+0xb38>
 802c02c:	9b07      	ldr	r3, [sp, #28]
 802c02e:	2b02      	cmp	r3, #2
 802c030:	f73f aeb1 	bgt.w	802bd96 <_dtoa_r+0x936>
 802c034:	e7b0      	b.n	802bf98 <_dtoa_r+0xb38>
 802c036:	bf00      	nop
 802c038:	0803029c 	.word	0x0803029c
 802c03c:	080301fc 	.word	0x080301fc
 802c040:	08030220 	.word	0x08030220

0802c044 <_free_r>:
 802c044:	b537      	push	{r0, r1, r2, r4, r5, lr}
 802c046:	2900      	cmp	r1, #0
 802c048:	d044      	beq.n	802c0d4 <_free_r+0x90>
 802c04a:	f851 3c04 	ldr.w	r3, [r1, #-4]
 802c04e:	9001      	str	r0, [sp, #4]
 802c050:	2b00      	cmp	r3, #0
 802c052:	f1a1 0404 	sub.w	r4, r1, #4
 802c056:	bfb8      	it	lt
 802c058:	18e4      	addlt	r4, r4, r3
 802c05a:	f7fe fa81 	bl	802a560 <__malloc_lock>
 802c05e:	4a1e      	ldr	r2, [pc, #120]	; (802c0d8 <_free_r+0x94>)
 802c060:	9801      	ldr	r0, [sp, #4]
 802c062:	6813      	ldr	r3, [r2, #0]
 802c064:	b933      	cbnz	r3, 802c074 <_free_r+0x30>
 802c066:	6063      	str	r3, [r4, #4]
 802c068:	6014      	str	r4, [r2, #0]
 802c06a:	b003      	add	sp, #12
 802c06c:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 802c070:	f7fe ba7c 	b.w	802a56c <__malloc_unlock>
 802c074:	42a3      	cmp	r3, r4
 802c076:	d908      	bls.n	802c08a <_free_r+0x46>
 802c078:	6825      	ldr	r5, [r4, #0]
 802c07a:	1961      	adds	r1, r4, r5
 802c07c:	428b      	cmp	r3, r1
 802c07e:	bf01      	itttt	eq
 802c080:	6819      	ldreq	r1, [r3, #0]
 802c082:	685b      	ldreq	r3, [r3, #4]
 802c084:	1949      	addeq	r1, r1, r5
 802c086:	6021      	streq	r1, [r4, #0]
 802c088:	e7ed      	b.n	802c066 <_free_r+0x22>
 802c08a:	461a      	mov	r2, r3
 802c08c:	685b      	ldr	r3, [r3, #4]
 802c08e:	b10b      	cbz	r3, 802c094 <_free_r+0x50>
 802c090:	42a3      	cmp	r3, r4
 802c092:	d9fa      	bls.n	802c08a <_free_r+0x46>
 802c094:	6811      	ldr	r1, [r2, #0]
 802c096:	1855      	adds	r5, r2, r1
 802c098:	42a5      	cmp	r5, r4
 802c09a:	d10b      	bne.n	802c0b4 <_free_r+0x70>
 802c09c:	6824      	ldr	r4, [r4, #0]
 802c09e:	4421      	add	r1, r4
 802c0a0:	1854      	adds	r4, r2, r1
 802c0a2:	42a3      	cmp	r3, r4
 802c0a4:	6011      	str	r1, [r2, #0]
 802c0a6:	d1e0      	bne.n	802c06a <_free_r+0x26>
 802c0a8:	681c      	ldr	r4, [r3, #0]
 802c0aa:	685b      	ldr	r3, [r3, #4]
 802c0ac:	6053      	str	r3, [r2, #4]
 802c0ae:	440c      	add	r4, r1
 802c0b0:	6014      	str	r4, [r2, #0]
 802c0b2:	e7da      	b.n	802c06a <_free_r+0x26>
 802c0b4:	d902      	bls.n	802c0bc <_free_r+0x78>
 802c0b6:	230c      	movs	r3, #12
 802c0b8:	6003      	str	r3, [r0, #0]
 802c0ba:	e7d6      	b.n	802c06a <_free_r+0x26>
 802c0bc:	6825      	ldr	r5, [r4, #0]
 802c0be:	1961      	adds	r1, r4, r5
 802c0c0:	428b      	cmp	r3, r1
 802c0c2:	bf04      	itt	eq
 802c0c4:	6819      	ldreq	r1, [r3, #0]
 802c0c6:	685b      	ldreq	r3, [r3, #4]
 802c0c8:	6063      	str	r3, [r4, #4]
 802c0ca:	bf04      	itt	eq
 802c0cc:	1949      	addeq	r1, r1, r5
 802c0ce:	6021      	streq	r1, [r4, #0]
 802c0d0:	6054      	str	r4, [r2, #4]
 802c0d2:	e7ca      	b.n	802c06a <_free_r+0x26>
 802c0d4:	b003      	add	sp, #12
 802c0d6:	bd30      	pop	{r4, r5, pc}
 802c0d8:	20007588 	.word	0x20007588

0802c0dc <_Balloc>:
 802c0dc:	b570      	push	{r4, r5, r6, lr}
 802c0de:	69c6      	ldr	r6, [r0, #28]
 802c0e0:	4604      	mov	r4, r0
 802c0e2:	460d      	mov	r5, r1
 802c0e4:	b976      	cbnz	r6, 802c104 <_Balloc+0x28>
 802c0e6:	2010      	movs	r0, #16
 802c0e8:	f7fe f98a 	bl	802a400 <malloc>
 802c0ec:	4602      	mov	r2, r0
 802c0ee:	61e0      	str	r0, [r4, #28]
 802c0f0:	b920      	cbnz	r0, 802c0fc <_Balloc+0x20>
 802c0f2:	4b18      	ldr	r3, [pc, #96]	; (802c154 <_Balloc+0x78>)
 802c0f4:	4818      	ldr	r0, [pc, #96]	; (802c158 <_Balloc+0x7c>)
 802c0f6:	216b      	movs	r1, #107	; 0x6b
 802c0f8:	f7fe f95e 	bl	802a3b8 <__assert_func>
 802c0fc:	e9c0 6601 	strd	r6, r6, [r0, #4]
 802c100:	6006      	str	r6, [r0, #0]
 802c102:	60c6      	str	r6, [r0, #12]
 802c104:	69e6      	ldr	r6, [r4, #28]
 802c106:	68f3      	ldr	r3, [r6, #12]
 802c108:	b183      	cbz	r3, 802c12c <_Balloc+0x50>
 802c10a:	69e3      	ldr	r3, [r4, #28]
 802c10c:	68db      	ldr	r3, [r3, #12]
 802c10e:	f853 0025 	ldr.w	r0, [r3, r5, lsl #2]
 802c112:	b9b8      	cbnz	r0, 802c144 <_Balloc+0x68>
 802c114:	2101      	movs	r1, #1
 802c116:	fa01 f605 	lsl.w	r6, r1, r5
 802c11a:	1d72      	adds	r2, r6, #5
 802c11c:	0092      	lsls	r2, r2, #2
 802c11e:	4620      	mov	r0, r4
 802c120:	f000 ff52 	bl	802cfc8 <_calloc_r>
 802c124:	b160      	cbz	r0, 802c140 <_Balloc+0x64>
 802c126:	e9c0 5601 	strd	r5, r6, [r0, #4]
 802c12a:	e00e      	b.n	802c14a <_Balloc+0x6e>
 802c12c:	2221      	movs	r2, #33	; 0x21
 802c12e:	2104      	movs	r1, #4
 802c130:	4620      	mov	r0, r4
 802c132:	f000 ff49 	bl	802cfc8 <_calloc_r>
 802c136:	69e3      	ldr	r3, [r4, #28]
 802c138:	60f0      	str	r0, [r6, #12]
 802c13a:	68db      	ldr	r3, [r3, #12]
 802c13c:	2b00      	cmp	r3, #0
 802c13e:	d1e4      	bne.n	802c10a <_Balloc+0x2e>
 802c140:	2000      	movs	r0, #0
 802c142:	bd70      	pop	{r4, r5, r6, pc}
 802c144:	6802      	ldr	r2, [r0, #0]
 802c146:	f843 2025 	str.w	r2, [r3, r5, lsl #2]
 802c14a:	2300      	movs	r3, #0
 802c14c:	e9c0 3303 	strd	r3, r3, [r0, #12]
 802c150:	e7f7      	b.n	802c142 <_Balloc+0x66>
 802c152:	bf00      	nop
 802c154:	0803022d 	.word	0x0803022d
 802c158:	080302ad 	.word	0x080302ad

0802c15c <_Bfree>:
 802c15c:	b570      	push	{r4, r5, r6, lr}
 802c15e:	69c6      	ldr	r6, [r0, #28]
 802c160:	4605      	mov	r5, r0
 802c162:	460c      	mov	r4, r1
 802c164:	b976      	cbnz	r6, 802c184 <_Bfree+0x28>
 802c166:	2010      	movs	r0, #16
 802c168:	f7fe f94a 	bl	802a400 <malloc>
 802c16c:	4602      	mov	r2, r0
 802c16e:	61e8      	str	r0, [r5, #28]
 802c170:	b920      	cbnz	r0, 802c17c <_Bfree+0x20>
 802c172:	4b09      	ldr	r3, [pc, #36]	; (802c198 <_Bfree+0x3c>)
 802c174:	4809      	ldr	r0, [pc, #36]	; (802c19c <_Bfree+0x40>)
 802c176:	218f      	movs	r1, #143	; 0x8f
 802c178:	f7fe f91e 	bl	802a3b8 <__assert_func>
 802c17c:	e9c0 6601 	strd	r6, r6, [r0, #4]
 802c180:	6006      	str	r6, [r0, #0]
 802c182:	60c6      	str	r6, [r0, #12]
 802c184:	b13c      	cbz	r4, 802c196 <_Bfree+0x3a>
 802c186:	69eb      	ldr	r3, [r5, #28]
 802c188:	6862      	ldr	r2, [r4, #4]
 802c18a:	68db      	ldr	r3, [r3, #12]
 802c18c:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 802c190:	6021      	str	r1, [r4, #0]
 802c192:	f843 4022 	str.w	r4, [r3, r2, lsl #2]
 802c196:	bd70      	pop	{r4, r5, r6, pc}
 802c198:	0803022d 	.word	0x0803022d
 802c19c:	080302ad 	.word	0x080302ad

0802c1a0 <__multadd>:
 802c1a0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 802c1a4:	690d      	ldr	r5, [r1, #16]
 802c1a6:	4607      	mov	r7, r0
 802c1a8:	460c      	mov	r4, r1
 802c1aa:	461e      	mov	r6, r3
 802c1ac:	f101 0c14 	add.w	ip, r1, #20
 802c1b0:	2000      	movs	r0, #0
 802c1b2:	f8dc 3000 	ldr.w	r3, [ip]
 802c1b6:	b299      	uxth	r1, r3
 802c1b8:	fb02 6101 	mla	r1, r2, r1, r6
 802c1bc:	0c1e      	lsrs	r6, r3, #16
 802c1be:	0c0b      	lsrs	r3, r1, #16
 802c1c0:	fb02 3306 	mla	r3, r2, r6, r3
 802c1c4:	b289      	uxth	r1, r1
 802c1c6:	3001      	adds	r0, #1
 802c1c8:	eb01 4103 	add.w	r1, r1, r3, lsl #16
 802c1cc:	4285      	cmp	r5, r0
 802c1ce:	f84c 1b04 	str.w	r1, [ip], #4
 802c1d2:	ea4f 4613 	mov.w	r6, r3, lsr #16
 802c1d6:	dcec      	bgt.n	802c1b2 <__multadd+0x12>
 802c1d8:	b30e      	cbz	r6, 802c21e <__multadd+0x7e>
 802c1da:	68a3      	ldr	r3, [r4, #8]
 802c1dc:	42ab      	cmp	r3, r5
 802c1de:	dc19      	bgt.n	802c214 <__multadd+0x74>
 802c1e0:	6861      	ldr	r1, [r4, #4]
 802c1e2:	4638      	mov	r0, r7
 802c1e4:	3101      	adds	r1, #1
 802c1e6:	f7ff ff79 	bl	802c0dc <_Balloc>
 802c1ea:	4680      	mov	r8, r0
 802c1ec:	b928      	cbnz	r0, 802c1fa <__multadd+0x5a>
 802c1ee:	4602      	mov	r2, r0
 802c1f0:	4b0c      	ldr	r3, [pc, #48]	; (802c224 <__multadd+0x84>)
 802c1f2:	480d      	ldr	r0, [pc, #52]	; (802c228 <__multadd+0x88>)
 802c1f4:	21ba      	movs	r1, #186	; 0xba
 802c1f6:	f7fe f8df 	bl	802a3b8 <__assert_func>
 802c1fa:	6922      	ldr	r2, [r4, #16]
 802c1fc:	3202      	adds	r2, #2
 802c1fe:	f104 010c 	add.w	r1, r4, #12
 802c202:	0092      	lsls	r2, r2, #2
 802c204:	300c      	adds	r0, #12
 802c206:	f7ff f836 	bl	802b276 <memcpy>
 802c20a:	4621      	mov	r1, r4
 802c20c:	4638      	mov	r0, r7
 802c20e:	f7ff ffa5 	bl	802c15c <_Bfree>
 802c212:	4644      	mov	r4, r8
 802c214:	eb04 0385 	add.w	r3, r4, r5, lsl #2
 802c218:	3501      	adds	r5, #1
 802c21a:	615e      	str	r6, [r3, #20]
 802c21c:	6125      	str	r5, [r4, #16]
 802c21e:	4620      	mov	r0, r4
 802c220:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 802c224:	0803029c 	.word	0x0803029c
 802c228:	080302ad 	.word	0x080302ad

0802c22c <__hi0bits>:
 802c22c:	0c03      	lsrs	r3, r0, #16
 802c22e:	041b      	lsls	r3, r3, #16
 802c230:	b9d3      	cbnz	r3, 802c268 <__hi0bits+0x3c>
 802c232:	0400      	lsls	r0, r0, #16
 802c234:	2310      	movs	r3, #16
 802c236:	f010 4f7f 	tst.w	r0, #4278190080	; 0xff000000
 802c23a:	bf04      	itt	eq
 802c23c:	0200      	lsleq	r0, r0, #8
 802c23e:	3308      	addeq	r3, #8
 802c240:	f010 4f70 	tst.w	r0, #4026531840	; 0xf0000000
 802c244:	bf04      	itt	eq
 802c246:	0100      	lsleq	r0, r0, #4
 802c248:	3304      	addeq	r3, #4
 802c24a:	f010 4f40 	tst.w	r0, #3221225472	; 0xc0000000
 802c24e:	bf04      	itt	eq
 802c250:	0080      	lsleq	r0, r0, #2
 802c252:	3302      	addeq	r3, #2
 802c254:	2800      	cmp	r0, #0
 802c256:	db05      	blt.n	802c264 <__hi0bits+0x38>
 802c258:	f010 4f80 	tst.w	r0, #1073741824	; 0x40000000
 802c25c:	f103 0301 	add.w	r3, r3, #1
 802c260:	bf08      	it	eq
 802c262:	2320      	moveq	r3, #32
 802c264:	4618      	mov	r0, r3
 802c266:	4770      	bx	lr
 802c268:	2300      	movs	r3, #0
 802c26a:	e7e4      	b.n	802c236 <__hi0bits+0xa>

0802c26c <__lo0bits>:
 802c26c:	6803      	ldr	r3, [r0, #0]
 802c26e:	f013 0207 	ands.w	r2, r3, #7
 802c272:	d00c      	beq.n	802c28e <__lo0bits+0x22>
 802c274:	07d9      	lsls	r1, r3, #31
 802c276:	d422      	bmi.n	802c2be <__lo0bits+0x52>
 802c278:	079a      	lsls	r2, r3, #30
 802c27a:	bf49      	itett	mi
 802c27c:	085b      	lsrmi	r3, r3, #1
 802c27e:	089b      	lsrpl	r3, r3, #2
 802c280:	6003      	strmi	r3, [r0, #0]
 802c282:	2201      	movmi	r2, #1
 802c284:	bf5c      	itt	pl
 802c286:	6003      	strpl	r3, [r0, #0]
 802c288:	2202      	movpl	r2, #2
 802c28a:	4610      	mov	r0, r2
 802c28c:	4770      	bx	lr
 802c28e:	b299      	uxth	r1, r3
 802c290:	b909      	cbnz	r1, 802c296 <__lo0bits+0x2a>
 802c292:	0c1b      	lsrs	r3, r3, #16
 802c294:	2210      	movs	r2, #16
 802c296:	b2d9      	uxtb	r1, r3
 802c298:	b909      	cbnz	r1, 802c29e <__lo0bits+0x32>
 802c29a:	3208      	adds	r2, #8
 802c29c:	0a1b      	lsrs	r3, r3, #8
 802c29e:	0719      	lsls	r1, r3, #28
 802c2a0:	bf04      	itt	eq
 802c2a2:	091b      	lsreq	r3, r3, #4
 802c2a4:	3204      	addeq	r2, #4
 802c2a6:	0799      	lsls	r1, r3, #30
 802c2a8:	bf04      	itt	eq
 802c2aa:	089b      	lsreq	r3, r3, #2
 802c2ac:	3202      	addeq	r2, #2
 802c2ae:	07d9      	lsls	r1, r3, #31
 802c2b0:	d403      	bmi.n	802c2ba <__lo0bits+0x4e>
 802c2b2:	085b      	lsrs	r3, r3, #1
 802c2b4:	f102 0201 	add.w	r2, r2, #1
 802c2b8:	d003      	beq.n	802c2c2 <__lo0bits+0x56>
 802c2ba:	6003      	str	r3, [r0, #0]
 802c2bc:	e7e5      	b.n	802c28a <__lo0bits+0x1e>
 802c2be:	2200      	movs	r2, #0
 802c2c0:	e7e3      	b.n	802c28a <__lo0bits+0x1e>
 802c2c2:	2220      	movs	r2, #32
 802c2c4:	e7e1      	b.n	802c28a <__lo0bits+0x1e>
	...

0802c2c8 <__i2b>:
 802c2c8:	b510      	push	{r4, lr}
 802c2ca:	460c      	mov	r4, r1
 802c2cc:	2101      	movs	r1, #1
 802c2ce:	f7ff ff05 	bl	802c0dc <_Balloc>
 802c2d2:	4602      	mov	r2, r0
 802c2d4:	b928      	cbnz	r0, 802c2e2 <__i2b+0x1a>
 802c2d6:	4b05      	ldr	r3, [pc, #20]	; (802c2ec <__i2b+0x24>)
 802c2d8:	4805      	ldr	r0, [pc, #20]	; (802c2f0 <__i2b+0x28>)
 802c2da:	f240 1145 	movw	r1, #325	; 0x145
 802c2de:	f7fe f86b 	bl	802a3b8 <__assert_func>
 802c2e2:	2301      	movs	r3, #1
 802c2e4:	6144      	str	r4, [r0, #20]
 802c2e6:	6103      	str	r3, [r0, #16]
 802c2e8:	bd10      	pop	{r4, pc}
 802c2ea:	bf00      	nop
 802c2ec:	0803029c 	.word	0x0803029c
 802c2f0:	080302ad 	.word	0x080302ad

0802c2f4 <__multiply>:
 802c2f4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802c2f8:	4691      	mov	r9, r2
 802c2fa:	690a      	ldr	r2, [r1, #16]
 802c2fc:	f8d9 3010 	ldr.w	r3, [r9, #16]
 802c300:	429a      	cmp	r2, r3
 802c302:	bfb8      	it	lt
 802c304:	460b      	movlt	r3, r1
 802c306:	460c      	mov	r4, r1
 802c308:	bfbc      	itt	lt
 802c30a:	464c      	movlt	r4, r9
 802c30c:	4699      	movlt	r9, r3
 802c30e:	6927      	ldr	r7, [r4, #16]
 802c310:	f8d9 a010 	ldr.w	sl, [r9, #16]
 802c314:	68a3      	ldr	r3, [r4, #8]
 802c316:	6861      	ldr	r1, [r4, #4]
 802c318:	eb07 060a 	add.w	r6, r7, sl
 802c31c:	42b3      	cmp	r3, r6
 802c31e:	b085      	sub	sp, #20
 802c320:	bfb8      	it	lt
 802c322:	3101      	addlt	r1, #1
 802c324:	f7ff feda 	bl	802c0dc <_Balloc>
 802c328:	b930      	cbnz	r0, 802c338 <__multiply+0x44>
 802c32a:	4602      	mov	r2, r0
 802c32c:	4b44      	ldr	r3, [pc, #272]	; (802c440 <__multiply+0x14c>)
 802c32e:	4845      	ldr	r0, [pc, #276]	; (802c444 <__multiply+0x150>)
 802c330:	f44f 71b1 	mov.w	r1, #354	; 0x162
 802c334:	f7fe f840 	bl	802a3b8 <__assert_func>
 802c338:	f100 0514 	add.w	r5, r0, #20
 802c33c:	eb05 0886 	add.w	r8, r5, r6, lsl #2
 802c340:	462b      	mov	r3, r5
 802c342:	2200      	movs	r2, #0
 802c344:	4543      	cmp	r3, r8
 802c346:	d321      	bcc.n	802c38c <__multiply+0x98>
 802c348:	f104 0314 	add.w	r3, r4, #20
 802c34c:	eb03 0787 	add.w	r7, r3, r7, lsl #2
 802c350:	f109 0314 	add.w	r3, r9, #20
 802c354:	eb03 028a 	add.w	r2, r3, sl, lsl #2
 802c358:	9202      	str	r2, [sp, #8]
 802c35a:	1b3a      	subs	r2, r7, r4
 802c35c:	3a15      	subs	r2, #21
 802c35e:	f022 0203 	bic.w	r2, r2, #3
 802c362:	3204      	adds	r2, #4
 802c364:	f104 0115 	add.w	r1, r4, #21
 802c368:	428f      	cmp	r7, r1
 802c36a:	bf38      	it	cc
 802c36c:	2204      	movcc	r2, #4
 802c36e:	9201      	str	r2, [sp, #4]
 802c370:	9a02      	ldr	r2, [sp, #8]
 802c372:	9303      	str	r3, [sp, #12]
 802c374:	429a      	cmp	r2, r3
 802c376:	d80c      	bhi.n	802c392 <__multiply+0x9e>
 802c378:	2e00      	cmp	r6, #0
 802c37a:	dd03      	ble.n	802c384 <__multiply+0x90>
 802c37c:	f858 3d04 	ldr.w	r3, [r8, #-4]!
 802c380:	2b00      	cmp	r3, #0
 802c382:	d05b      	beq.n	802c43c <__multiply+0x148>
 802c384:	6106      	str	r6, [r0, #16]
 802c386:	b005      	add	sp, #20
 802c388:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802c38c:	f843 2b04 	str.w	r2, [r3], #4
 802c390:	e7d8      	b.n	802c344 <__multiply+0x50>
 802c392:	f8b3 a000 	ldrh.w	sl, [r3]
 802c396:	f1ba 0f00 	cmp.w	sl, #0
 802c39a:	d024      	beq.n	802c3e6 <__multiply+0xf2>
 802c39c:	f104 0e14 	add.w	lr, r4, #20
 802c3a0:	46a9      	mov	r9, r5
 802c3a2:	f04f 0c00 	mov.w	ip, #0
 802c3a6:	f85e 2b04 	ldr.w	r2, [lr], #4
 802c3aa:	f8d9 1000 	ldr.w	r1, [r9]
 802c3ae:	fa1f fb82 	uxth.w	fp, r2
 802c3b2:	b289      	uxth	r1, r1
 802c3b4:	fb0a 110b 	mla	r1, sl, fp, r1
 802c3b8:	ea4f 4b12 	mov.w	fp, r2, lsr #16
 802c3bc:	f8d9 2000 	ldr.w	r2, [r9]
 802c3c0:	4461      	add	r1, ip
 802c3c2:	ea4f 4c12 	mov.w	ip, r2, lsr #16
 802c3c6:	fb0a c20b 	mla	r2, sl, fp, ip
 802c3ca:	eb02 4211 	add.w	r2, r2, r1, lsr #16
 802c3ce:	b289      	uxth	r1, r1
 802c3d0:	ea41 4102 	orr.w	r1, r1, r2, lsl #16
 802c3d4:	4577      	cmp	r7, lr
 802c3d6:	f849 1b04 	str.w	r1, [r9], #4
 802c3da:	ea4f 4c12 	mov.w	ip, r2, lsr #16
 802c3de:	d8e2      	bhi.n	802c3a6 <__multiply+0xb2>
 802c3e0:	9a01      	ldr	r2, [sp, #4]
 802c3e2:	f845 c002 	str.w	ip, [r5, r2]
 802c3e6:	9a03      	ldr	r2, [sp, #12]
 802c3e8:	f8b2 9002 	ldrh.w	r9, [r2, #2]
 802c3ec:	3304      	adds	r3, #4
 802c3ee:	f1b9 0f00 	cmp.w	r9, #0
 802c3f2:	d021      	beq.n	802c438 <__multiply+0x144>
 802c3f4:	6829      	ldr	r1, [r5, #0]
 802c3f6:	f104 0c14 	add.w	ip, r4, #20
 802c3fa:	46ae      	mov	lr, r5
 802c3fc:	f04f 0a00 	mov.w	sl, #0
 802c400:	f8bc b000 	ldrh.w	fp, [ip]
 802c404:	f8be 2002 	ldrh.w	r2, [lr, #2]
 802c408:	fb09 220b 	mla	r2, r9, fp, r2
 802c40c:	4452      	add	r2, sl
 802c40e:	b289      	uxth	r1, r1
 802c410:	ea41 4102 	orr.w	r1, r1, r2, lsl #16
 802c414:	f84e 1b04 	str.w	r1, [lr], #4
 802c418:	f85c 1b04 	ldr.w	r1, [ip], #4
 802c41c:	ea4f 4a11 	mov.w	sl, r1, lsr #16
 802c420:	f8be 1000 	ldrh.w	r1, [lr]
 802c424:	fb09 110a 	mla	r1, r9, sl, r1
 802c428:	eb01 4112 	add.w	r1, r1, r2, lsr #16
 802c42c:	4567      	cmp	r7, ip
 802c42e:	ea4f 4a11 	mov.w	sl, r1, lsr #16
 802c432:	d8e5      	bhi.n	802c400 <__multiply+0x10c>
 802c434:	9a01      	ldr	r2, [sp, #4]
 802c436:	50a9      	str	r1, [r5, r2]
 802c438:	3504      	adds	r5, #4
 802c43a:	e799      	b.n	802c370 <__multiply+0x7c>
 802c43c:	3e01      	subs	r6, #1
 802c43e:	e79b      	b.n	802c378 <__multiply+0x84>
 802c440:	0803029c 	.word	0x0803029c
 802c444:	080302ad 	.word	0x080302ad

0802c448 <__pow5mult>:
 802c448:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 802c44c:	4615      	mov	r5, r2
 802c44e:	f012 0203 	ands.w	r2, r2, #3
 802c452:	4606      	mov	r6, r0
 802c454:	460f      	mov	r7, r1
 802c456:	d007      	beq.n	802c468 <__pow5mult+0x20>
 802c458:	4c25      	ldr	r4, [pc, #148]	; (802c4f0 <__pow5mult+0xa8>)
 802c45a:	3a01      	subs	r2, #1
 802c45c:	2300      	movs	r3, #0
 802c45e:	f854 2022 	ldr.w	r2, [r4, r2, lsl #2]
 802c462:	f7ff fe9d 	bl	802c1a0 <__multadd>
 802c466:	4607      	mov	r7, r0
 802c468:	10ad      	asrs	r5, r5, #2
 802c46a:	d03d      	beq.n	802c4e8 <__pow5mult+0xa0>
 802c46c:	69f4      	ldr	r4, [r6, #28]
 802c46e:	b97c      	cbnz	r4, 802c490 <__pow5mult+0x48>
 802c470:	2010      	movs	r0, #16
 802c472:	f7fd ffc5 	bl	802a400 <malloc>
 802c476:	4602      	mov	r2, r0
 802c478:	61f0      	str	r0, [r6, #28]
 802c47a:	b928      	cbnz	r0, 802c488 <__pow5mult+0x40>
 802c47c:	4b1d      	ldr	r3, [pc, #116]	; (802c4f4 <__pow5mult+0xac>)
 802c47e:	481e      	ldr	r0, [pc, #120]	; (802c4f8 <__pow5mult+0xb0>)
 802c480:	f240 11b3 	movw	r1, #435	; 0x1b3
 802c484:	f7fd ff98 	bl	802a3b8 <__assert_func>
 802c488:	e9c0 4401 	strd	r4, r4, [r0, #4]
 802c48c:	6004      	str	r4, [r0, #0]
 802c48e:	60c4      	str	r4, [r0, #12]
 802c490:	f8d6 801c 	ldr.w	r8, [r6, #28]
 802c494:	f8d8 4008 	ldr.w	r4, [r8, #8]
 802c498:	b94c      	cbnz	r4, 802c4ae <__pow5mult+0x66>
 802c49a:	f240 2171 	movw	r1, #625	; 0x271
 802c49e:	4630      	mov	r0, r6
 802c4a0:	f7ff ff12 	bl	802c2c8 <__i2b>
 802c4a4:	2300      	movs	r3, #0
 802c4a6:	f8c8 0008 	str.w	r0, [r8, #8]
 802c4aa:	4604      	mov	r4, r0
 802c4ac:	6003      	str	r3, [r0, #0]
 802c4ae:	f04f 0900 	mov.w	r9, #0
 802c4b2:	07eb      	lsls	r3, r5, #31
 802c4b4:	d50a      	bpl.n	802c4cc <__pow5mult+0x84>
 802c4b6:	4639      	mov	r1, r7
 802c4b8:	4622      	mov	r2, r4
 802c4ba:	4630      	mov	r0, r6
 802c4bc:	f7ff ff1a 	bl	802c2f4 <__multiply>
 802c4c0:	4639      	mov	r1, r7
 802c4c2:	4680      	mov	r8, r0
 802c4c4:	4630      	mov	r0, r6
 802c4c6:	f7ff fe49 	bl	802c15c <_Bfree>
 802c4ca:	4647      	mov	r7, r8
 802c4cc:	106d      	asrs	r5, r5, #1
 802c4ce:	d00b      	beq.n	802c4e8 <__pow5mult+0xa0>
 802c4d0:	6820      	ldr	r0, [r4, #0]
 802c4d2:	b938      	cbnz	r0, 802c4e4 <__pow5mult+0x9c>
 802c4d4:	4622      	mov	r2, r4
 802c4d6:	4621      	mov	r1, r4
 802c4d8:	4630      	mov	r0, r6
 802c4da:	f7ff ff0b 	bl	802c2f4 <__multiply>
 802c4de:	6020      	str	r0, [r4, #0]
 802c4e0:	f8c0 9000 	str.w	r9, [r0]
 802c4e4:	4604      	mov	r4, r0
 802c4e6:	e7e4      	b.n	802c4b2 <__pow5mult+0x6a>
 802c4e8:	4638      	mov	r0, r7
 802c4ea:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 802c4ee:	bf00      	nop
 802c4f0:	080303f8 	.word	0x080303f8
 802c4f4:	0803022d 	.word	0x0803022d
 802c4f8:	080302ad 	.word	0x080302ad

0802c4fc <__lshift>:
 802c4fc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 802c500:	460c      	mov	r4, r1
 802c502:	6849      	ldr	r1, [r1, #4]
 802c504:	6923      	ldr	r3, [r4, #16]
 802c506:	eb03 1862 	add.w	r8, r3, r2, asr #5
 802c50a:	68a3      	ldr	r3, [r4, #8]
 802c50c:	4607      	mov	r7, r0
 802c50e:	4691      	mov	r9, r2
 802c510:	ea4f 1a62 	mov.w	sl, r2, asr #5
 802c514:	f108 0601 	add.w	r6, r8, #1
 802c518:	42b3      	cmp	r3, r6
 802c51a:	db0b      	blt.n	802c534 <__lshift+0x38>
 802c51c:	4638      	mov	r0, r7
 802c51e:	f7ff fddd 	bl	802c0dc <_Balloc>
 802c522:	4605      	mov	r5, r0
 802c524:	b948      	cbnz	r0, 802c53a <__lshift+0x3e>
 802c526:	4602      	mov	r2, r0
 802c528:	4b28      	ldr	r3, [pc, #160]	; (802c5cc <__lshift+0xd0>)
 802c52a:	4829      	ldr	r0, [pc, #164]	; (802c5d0 <__lshift+0xd4>)
 802c52c:	f44f 71ef 	mov.w	r1, #478	; 0x1de
 802c530:	f7fd ff42 	bl	802a3b8 <__assert_func>
 802c534:	3101      	adds	r1, #1
 802c536:	005b      	lsls	r3, r3, #1
 802c538:	e7ee      	b.n	802c518 <__lshift+0x1c>
 802c53a:	2300      	movs	r3, #0
 802c53c:	f100 0114 	add.w	r1, r0, #20
 802c540:	f100 0210 	add.w	r2, r0, #16
 802c544:	4618      	mov	r0, r3
 802c546:	4553      	cmp	r3, sl
 802c548:	db33      	blt.n	802c5b2 <__lshift+0xb6>
 802c54a:	6920      	ldr	r0, [r4, #16]
 802c54c:	ea2a 7aea 	bic.w	sl, sl, sl, asr #31
 802c550:	f104 0314 	add.w	r3, r4, #20
 802c554:	f019 091f 	ands.w	r9, r9, #31
 802c558:	eb01 018a 	add.w	r1, r1, sl, lsl #2
 802c55c:	eb03 0c80 	add.w	ip, r3, r0, lsl #2
 802c560:	d02b      	beq.n	802c5ba <__lshift+0xbe>
 802c562:	f1c9 0e20 	rsb	lr, r9, #32
 802c566:	468a      	mov	sl, r1
 802c568:	2200      	movs	r2, #0
 802c56a:	6818      	ldr	r0, [r3, #0]
 802c56c:	fa00 f009 	lsl.w	r0, r0, r9
 802c570:	4310      	orrs	r0, r2
 802c572:	f84a 0b04 	str.w	r0, [sl], #4
 802c576:	f853 2b04 	ldr.w	r2, [r3], #4
 802c57a:	459c      	cmp	ip, r3
 802c57c:	fa22 f20e 	lsr.w	r2, r2, lr
 802c580:	d8f3      	bhi.n	802c56a <__lshift+0x6e>
 802c582:	ebac 0304 	sub.w	r3, ip, r4
 802c586:	3b15      	subs	r3, #21
 802c588:	f023 0303 	bic.w	r3, r3, #3
 802c58c:	3304      	adds	r3, #4
 802c58e:	f104 0015 	add.w	r0, r4, #21
 802c592:	4584      	cmp	ip, r0
 802c594:	bf38      	it	cc
 802c596:	2304      	movcc	r3, #4
 802c598:	50ca      	str	r2, [r1, r3]
 802c59a:	b10a      	cbz	r2, 802c5a0 <__lshift+0xa4>
 802c59c:	f108 0602 	add.w	r6, r8, #2
 802c5a0:	3e01      	subs	r6, #1
 802c5a2:	4638      	mov	r0, r7
 802c5a4:	612e      	str	r6, [r5, #16]
 802c5a6:	4621      	mov	r1, r4
 802c5a8:	f7ff fdd8 	bl	802c15c <_Bfree>
 802c5ac:	4628      	mov	r0, r5
 802c5ae:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 802c5b2:	f842 0f04 	str.w	r0, [r2, #4]!
 802c5b6:	3301      	adds	r3, #1
 802c5b8:	e7c5      	b.n	802c546 <__lshift+0x4a>
 802c5ba:	3904      	subs	r1, #4
 802c5bc:	f853 2b04 	ldr.w	r2, [r3], #4
 802c5c0:	f841 2f04 	str.w	r2, [r1, #4]!
 802c5c4:	459c      	cmp	ip, r3
 802c5c6:	d8f9      	bhi.n	802c5bc <__lshift+0xc0>
 802c5c8:	e7ea      	b.n	802c5a0 <__lshift+0xa4>
 802c5ca:	bf00      	nop
 802c5cc:	0803029c 	.word	0x0803029c
 802c5d0:	080302ad 	.word	0x080302ad

0802c5d4 <__mcmp>:
 802c5d4:	b530      	push	{r4, r5, lr}
 802c5d6:	6902      	ldr	r2, [r0, #16]
 802c5d8:	690c      	ldr	r4, [r1, #16]
 802c5da:	1b12      	subs	r2, r2, r4
 802c5dc:	d10e      	bne.n	802c5fc <__mcmp+0x28>
 802c5de:	f100 0314 	add.w	r3, r0, #20
 802c5e2:	3114      	adds	r1, #20
 802c5e4:	eb03 0084 	add.w	r0, r3, r4, lsl #2
 802c5e8:	eb01 0184 	add.w	r1, r1, r4, lsl #2
 802c5ec:	f850 5d04 	ldr.w	r5, [r0, #-4]!
 802c5f0:	f851 4d04 	ldr.w	r4, [r1, #-4]!
 802c5f4:	42a5      	cmp	r5, r4
 802c5f6:	d003      	beq.n	802c600 <__mcmp+0x2c>
 802c5f8:	d305      	bcc.n	802c606 <__mcmp+0x32>
 802c5fa:	2201      	movs	r2, #1
 802c5fc:	4610      	mov	r0, r2
 802c5fe:	bd30      	pop	{r4, r5, pc}
 802c600:	4283      	cmp	r3, r0
 802c602:	d3f3      	bcc.n	802c5ec <__mcmp+0x18>
 802c604:	e7fa      	b.n	802c5fc <__mcmp+0x28>
 802c606:	f04f 32ff 	mov.w	r2, #4294967295
 802c60a:	e7f7      	b.n	802c5fc <__mcmp+0x28>

0802c60c <__mdiff>:
 802c60c:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802c610:	460c      	mov	r4, r1
 802c612:	4606      	mov	r6, r0
 802c614:	4611      	mov	r1, r2
 802c616:	4620      	mov	r0, r4
 802c618:	4690      	mov	r8, r2
 802c61a:	f7ff ffdb 	bl	802c5d4 <__mcmp>
 802c61e:	1e05      	subs	r5, r0, #0
 802c620:	d110      	bne.n	802c644 <__mdiff+0x38>
 802c622:	4629      	mov	r1, r5
 802c624:	4630      	mov	r0, r6
 802c626:	f7ff fd59 	bl	802c0dc <_Balloc>
 802c62a:	b930      	cbnz	r0, 802c63a <__mdiff+0x2e>
 802c62c:	4b3a      	ldr	r3, [pc, #232]	; (802c718 <__mdiff+0x10c>)
 802c62e:	4602      	mov	r2, r0
 802c630:	f240 2137 	movw	r1, #567	; 0x237
 802c634:	4839      	ldr	r0, [pc, #228]	; (802c71c <__mdiff+0x110>)
 802c636:	f7fd febf 	bl	802a3b8 <__assert_func>
 802c63a:	2301      	movs	r3, #1
 802c63c:	e9c0 3504 	strd	r3, r5, [r0, #16]
 802c640:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802c644:	bfa4      	itt	ge
 802c646:	4643      	movge	r3, r8
 802c648:	46a0      	movge	r8, r4
 802c64a:	4630      	mov	r0, r6
 802c64c:	f8d8 1004 	ldr.w	r1, [r8, #4]
 802c650:	bfa6      	itte	ge
 802c652:	461c      	movge	r4, r3
 802c654:	2500      	movge	r5, #0
 802c656:	2501      	movlt	r5, #1
 802c658:	f7ff fd40 	bl	802c0dc <_Balloc>
 802c65c:	b920      	cbnz	r0, 802c668 <__mdiff+0x5c>
 802c65e:	4b2e      	ldr	r3, [pc, #184]	; (802c718 <__mdiff+0x10c>)
 802c660:	4602      	mov	r2, r0
 802c662:	f240 2145 	movw	r1, #581	; 0x245
 802c666:	e7e5      	b.n	802c634 <__mdiff+0x28>
 802c668:	f8d8 7010 	ldr.w	r7, [r8, #16]
 802c66c:	6926      	ldr	r6, [r4, #16]
 802c66e:	60c5      	str	r5, [r0, #12]
 802c670:	f104 0914 	add.w	r9, r4, #20
 802c674:	f108 0514 	add.w	r5, r8, #20
 802c678:	f100 0e14 	add.w	lr, r0, #20
 802c67c:	eb05 0c87 	add.w	ip, r5, r7, lsl #2
 802c680:	eb09 0686 	add.w	r6, r9, r6, lsl #2
 802c684:	f108 0210 	add.w	r2, r8, #16
 802c688:	46f2      	mov	sl, lr
 802c68a:	2100      	movs	r1, #0
 802c68c:	f859 3b04 	ldr.w	r3, [r9], #4
 802c690:	f852 bf04 	ldr.w	fp, [r2, #4]!
 802c694:	fa11 f88b 	uxtah	r8, r1, fp
 802c698:	b299      	uxth	r1, r3
 802c69a:	0c1b      	lsrs	r3, r3, #16
 802c69c:	eba8 0801 	sub.w	r8, r8, r1
 802c6a0:	ebc3 431b 	rsb	r3, r3, fp, lsr #16
 802c6a4:	eb03 4328 	add.w	r3, r3, r8, asr #16
 802c6a8:	fa1f f888 	uxth.w	r8, r8
 802c6ac:	1419      	asrs	r1, r3, #16
 802c6ae:	454e      	cmp	r6, r9
 802c6b0:	ea48 4303 	orr.w	r3, r8, r3, lsl #16
 802c6b4:	f84a 3b04 	str.w	r3, [sl], #4
 802c6b8:	d8e8      	bhi.n	802c68c <__mdiff+0x80>
 802c6ba:	1b33      	subs	r3, r6, r4
 802c6bc:	3b15      	subs	r3, #21
 802c6be:	f023 0303 	bic.w	r3, r3, #3
 802c6c2:	3304      	adds	r3, #4
 802c6c4:	3415      	adds	r4, #21
 802c6c6:	42a6      	cmp	r6, r4
 802c6c8:	bf38      	it	cc
 802c6ca:	2304      	movcc	r3, #4
 802c6cc:	441d      	add	r5, r3
 802c6ce:	4473      	add	r3, lr
 802c6d0:	469e      	mov	lr, r3
 802c6d2:	462e      	mov	r6, r5
 802c6d4:	4566      	cmp	r6, ip
 802c6d6:	d30e      	bcc.n	802c6f6 <__mdiff+0xea>
 802c6d8:	f10c 0203 	add.w	r2, ip, #3
 802c6dc:	1b52      	subs	r2, r2, r5
 802c6de:	f022 0203 	bic.w	r2, r2, #3
 802c6e2:	3d03      	subs	r5, #3
 802c6e4:	45ac      	cmp	ip, r5
 802c6e6:	bf38      	it	cc
 802c6e8:	2200      	movcc	r2, #0
 802c6ea:	4413      	add	r3, r2
 802c6ec:	f853 2d04 	ldr.w	r2, [r3, #-4]!
 802c6f0:	b17a      	cbz	r2, 802c712 <__mdiff+0x106>
 802c6f2:	6107      	str	r7, [r0, #16]
 802c6f4:	e7a4      	b.n	802c640 <__mdiff+0x34>
 802c6f6:	f856 8b04 	ldr.w	r8, [r6], #4
 802c6fa:	fa11 f288 	uxtah	r2, r1, r8
 802c6fe:	1414      	asrs	r4, r2, #16
 802c700:	eb04 4418 	add.w	r4, r4, r8, lsr #16
 802c704:	b292      	uxth	r2, r2
 802c706:	ea42 4204 	orr.w	r2, r2, r4, lsl #16
 802c70a:	f84e 2b04 	str.w	r2, [lr], #4
 802c70e:	1421      	asrs	r1, r4, #16
 802c710:	e7e0      	b.n	802c6d4 <__mdiff+0xc8>
 802c712:	3f01      	subs	r7, #1
 802c714:	e7ea      	b.n	802c6ec <__mdiff+0xe0>
 802c716:	bf00      	nop
 802c718:	0803029c 	.word	0x0803029c
 802c71c:	080302ad 	.word	0x080302ad

0802c720 <__d2b>:
 802c720:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 802c724:	460f      	mov	r7, r1
 802c726:	2101      	movs	r1, #1
 802c728:	ec59 8b10 	vmov	r8, r9, d0
 802c72c:	4616      	mov	r6, r2
 802c72e:	f7ff fcd5 	bl	802c0dc <_Balloc>
 802c732:	4604      	mov	r4, r0
 802c734:	b930      	cbnz	r0, 802c744 <__d2b+0x24>
 802c736:	4602      	mov	r2, r0
 802c738:	4b24      	ldr	r3, [pc, #144]	; (802c7cc <__d2b+0xac>)
 802c73a:	4825      	ldr	r0, [pc, #148]	; (802c7d0 <__d2b+0xb0>)
 802c73c:	f240 310f 	movw	r1, #783	; 0x30f
 802c740:	f7fd fe3a 	bl	802a3b8 <__assert_func>
 802c744:	f3c9 550a 	ubfx	r5, r9, #20, #11
 802c748:	f3c9 0313 	ubfx	r3, r9, #0, #20
 802c74c:	bb2d      	cbnz	r5, 802c79a <__d2b+0x7a>
 802c74e:	9301      	str	r3, [sp, #4]
 802c750:	f1b8 0300 	subs.w	r3, r8, #0
 802c754:	d026      	beq.n	802c7a4 <__d2b+0x84>
 802c756:	4668      	mov	r0, sp
 802c758:	9300      	str	r3, [sp, #0]
 802c75a:	f7ff fd87 	bl	802c26c <__lo0bits>
 802c75e:	e9dd 1200 	ldrd	r1, r2, [sp]
 802c762:	b1e8      	cbz	r0, 802c7a0 <__d2b+0x80>
 802c764:	f1c0 0320 	rsb	r3, r0, #32
 802c768:	fa02 f303 	lsl.w	r3, r2, r3
 802c76c:	430b      	orrs	r3, r1
 802c76e:	40c2      	lsrs	r2, r0
 802c770:	6163      	str	r3, [r4, #20]
 802c772:	9201      	str	r2, [sp, #4]
 802c774:	9b01      	ldr	r3, [sp, #4]
 802c776:	61a3      	str	r3, [r4, #24]
 802c778:	2b00      	cmp	r3, #0
 802c77a:	bf14      	ite	ne
 802c77c:	2202      	movne	r2, #2
 802c77e:	2201      	moveq	r2, #1
 802c780:	6122      	str	r2, [r4, #16]
 802c782:	b1bd      	cbz	r5, 802c7b4 <__d2b+0x94>
 802c784:	f2a5 4533 	subw	r5, r5, #1075	; 0x433
 802c788:	4405      	add	r5, r0
 802c78a:	603d      	str	r5, [r7, #0]
 802c78c:	f1c0 0035 	rsb	r0, r0, #53	; 0x35
 802c790:	6030      	str	r0, [r6, #0]
 802c792:	4620      	mov	r0, r4
 802c794:	b003      	add	sp, #12
 802c796:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 802c79a:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 802c79e:	e7d6      	b.n	802c74e <__d2b+0x2e>
 802c7a0:	6161      	str	r1, [r4, #20]
 802c7a2:	e7e7      	b.n	802c774 <__d2b+0x54>
 802c7a4:	a801      	add	r0, sp, #4
 802c7a6:	f7ff fd61 	bl	802c26c <__lo0bits>
 802c7aa:	9b01      	ldr	r3, [sp, #4]
 802c7ac:	6163      	str	r3, [r4, #20]
 802c7ae:	3020      	adds	r0, #32
 802c7b0:	2201      	movs	r2, #1
 802c7b2:	e7e5      	b.n	802c780 <__d2b+0x60>
 802c7b4:	eb04 0382 	add.w	r3, r4, r2, lsl #2
 802c7b8:	f2a0 4032 	subw	r0, r0, #1074	; 0x432
 802c7bc:	6038      	str	r0, [r7, #0]
 802c7be:	6918      	ldr	r0, [r3, #16]
 802c7c0:	f7ff fd34 	bl	802c22c <__hi0bits>
 802c7c4:	ebc0 1042 	rsb	r0, r0, r2, lsl #5
 802c7c8:	e7e2      	b.n	802c790 <__d2b+0x70>
 802c7ca:	bf00      	nop
 802c7cc:	0803029c 	.word	0x0803029c
 802c7d0:	080302ad 	.word	0x080302ad

0802c7d4 <__ssputs_r>:
 802c7d4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 802c7d8:	688e      	ldr	r6, [r1, #8]
 802c7da:	461f      	mov	r7, r3
 802c7dc:	42be      	cmp	r6, r7
 802c7de:	680b      	ldr	r3, [r1, #0]
 802c7e0:	4682      	mov	sl, r0
 802c7e2:	460c      	mov	r4, r1
 802c7e4:	4690      	mov	r8, r2
 802c7e6:	d82c      	bhi.n	802c842 <__ssputs_r+0x6e>
 802c7e8:	898a      	ldrh	r2, [r1, #12]
 802c7ea:	f412 6f90 	tst.w	r2, #1152	; 0x480
 802c7ee:	d026      	beq.n	802c83e <__ssputs_r+0x6a>
 802c7f0:	6965      	ldr	r5, [r4, #20]
 802c7f2:	6909      	ldr	r1, [r1, #16]
 802c7f4:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 802c7f8:	eba3 0901 	sub.w	r9, r3, r1
 802c7fc:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
 802c800:	1c7b      	adds	r3, r7, #1
 802c802:	444b      	add	r3, r9
 802c804:	106d      	asrs	r5, r5, #1
 802c806:	429d      	cmp	r5, r3
 802c808:	bf38      	it	cc
 802c80a:	461d      	movcc	r5, r3
 802c80c:	0553      	lsls	r3, r2, #21
 802c80e:	d527      	bpl.n	802c860 <__ssputs_r+0x8c>
 802c810:	4629      	mov	r1, r5
 802c812:	f7fd fe25 	bl	802a460 <_malloc_r>
 802c816:	4606      	mov	r6, r0
 802c818:	b360      	cbz	r0, 802c874 <__ssputs_r+0xa0>
 802c81a:	6921      	ldr	r1, [r4, #16]
 802c81c:	464a      	mov	r2, r9
 802c81e:	f7fe fd2a 	bl	802b276 <memcpy>
 802c822:	89a3      	ldrh	r3, [r4, #12]
 802c824:	f423 6390 	bic.w	r3, r3, #1152	; 0x480
 802c828:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 802c82c:	81a3      	strh	r3, [r4, #12]
 802c82e:	6126      	str	r6, [r4, #16]
 802c830:	6165      	str	r5, [r4, #20]
 802c832:	444e      	add	r6, r9
 802c834:	eba5 0509 	sub.w	r5, r5, r9
 802c838:	6026      	str	r6, [r4, #0]
 802c83a:	60a5      	str	r5, [r4, #8]
 802c83c:	463e      	mov	r6, r7
 802c83e:	42be      	cmp	r6, r7
 802c840:	d900      	bls.n	802c844 <__ssputs_r+0x70>
 802c842:	463e      	mov	r6, r7
 802c844:	6820      	ldr	r0, [r4, #0]
 802c846:	4632      	mov	r2, r6
 802c848:	4641      	mov	r1, r8
 802c84a:	f000 fba3 	bl	802cf94 <memmove>
 802c84e:	68a3      	ldr	r3, [r4, #8]
 802c850:	1b9b      	subs	r3, r3, r6
 802c852:	60a3      	str	r3, [r4, #8]
 802c854:	6823      	ldr	r3, [r4, #0]
 802c856:	4433      	add	r3, r6
 802c858:	6023      	str	r3, [r4, #0]
 802c85a:	2000      	movs	r0, #0
 802c85c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 802c860:	462a      	mov	r2, r5
 802c862:	f000 fbd9 	bl	802d018 <_realloc_r>
 802c866:	4606      	mov	r6, r0
 802c868:	2800      	cmp	r0, #0
 802c86a:	d1e0      	bne.n	802c82e <__ssputs_r+0x5a>
 802c86c:	6921      	ldr	r1, [r4, #16]
 802c86e:	4650      	mov	r0, sl
 802c870:	f7ff fbe8 	bl	802c044 <_free_r>
 802c874:	230c      	movs	r3, #12
 802c876:	f8ca 3000 	str.w	r3, [sl]
 802c87a:	89a3      	ldrh	r3, [r4, #12]
 802c87c:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 802c880:	81a3      	strh	r3, [r4, #12]
 802c882:	f04f 30ff 	mov.w	r0, #4294967295
 802c886:	e7e9      	b.n	802c85c <__ssputs_r+0x88>

0802c888 <_svfiprintf_r>:
 802c888:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802c88c:	4698      	mov	r8, r3
 802c88e:	898b      	ldrh	r3, [r1, #12]
 802c890:	061b      	lsls	r3, r3, #24
 802c892:	b09d      	sub	sp, #116	; 0x74
 802c894:	4607      	mov	r7, r0
 802c896:	460d      	mov	r5, r1
 802c898:	4614      	mov	r4, r2
 802c89a:	d50e      	bpl.n	802c8ba <_svfiprintf_r+0x32>
 802c89c:	690b      	ldr	r3, [r1, #16]
 802c89e:	b963      	cbnz	r3, 802c8ba <_svfiprintf_r+0x32>
 802c8a0:	2140      	movs	r1, #64	; 0x40
 802c8a2:	f7fd fddd 	bl	802a460 <_malloc_r>
 802c8a6:	6028      	str	r0, [r5, #0]
 802c8a8:	6128      	str	r0, [r5, #16]
 802c8aa:	b920      	cbnz	r0, 802c8b6 <_svfiprintf_r+0x2e>
 802c8ac:	230c      	movs	r3, #12
 802c8ae:	603b      	str	r3, [r7, #0]
 802c8b0:	f04f 30ff 	mov.w	r0, #4294967295
 802c8b4:	e0d0      	b.n	802ca58 <_svfiprintf_r+0x1d0>
 802c8b6:	2340      	movs	r3, #64	; 0x40
 802c8b8:	616b      	str	r3, [r5, #20]
 802c8ba:	2300      	movs	r3, #0
 802c8bc:	9309      	str	r3, [sp, #36]	; 0x24
 802c8be:	2320      	movs	r3, #32
 802c8c0:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 802c8c4:	f8cd 800c 	str.w	r8, [sp, #12]
 802c8c8:	2330      	movs	r3, #48	; 0x30
 802c8ca:	f8df 81a4 	ldr.w	r8, [pc, #420]	; 802ca70 <_svfiprintf_r+0x1e8>
 802c8ce:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 802c8d2:	f04f 0901 	mov.w	r9, #1
 802c8d6:	4623      	mov	r3, r4
 802c8d8:	469a      	mov	sl, r3
 802c8da:	f813 2b01 	ldrb.w	r2, [r3], #1
 802c8de:	b10a      	cbz	r2, 802c8e4 <_svfiprintf_r+0x5c>
 802c8e0:	2a25      	cmp	r2, #37	; 0x25
 802c8e2:	d1f9      	bne.n	802c8d8 <_svfiprintf_r+0x50>
 802c8e4:	ebba 0b04 	subs.w	fp, sl, r4
 802c8e8:	d00b      	beq.n	802c902 <_svfiprintf_r+0x7a>
 802c8ea:	465b      	mov	r3, fp
 802c8ec:	4622      	mov	r2, r4
 802c8ee:	4629      	mov	r1, r5
 802c8f0:	4638      	mov	r0, r7
 802c8f2:	f7ff ff6f 	bl	802c7d4 <__ssputs_r>
 802c8f6:	3001      	adds	r0, #1
 802c8f8:	f000 80a9 	beq.w	802ca4e <_svfiprintf_r+0x1c6>
 802c8fc:	9a09      	ldr	r2, [sp, #36]	; 0x24
 802c8fe:	445a      	add	r2, fp
 802c900:	9209      	str	r2, [sp, #36]	; 0x24
 802c902:	f89a 3000 	ldrb.w	r3, [sl]
 802c906:	2b00      	cmp	r3, #0
 802c908:	f000 80a1 	beq.w	802ca4e <_svfiprintf_r+0x1c6>
 802c90c:	2300      	movs	r3, #0
 802c90e:	f04f 32ff 	mov.w	r2, #4294967295
 802c912:	e9cd 2305 	strd	r2, r3, [sp, #20]
 802c916:	f10a 0a01 	add.w	sl, sl, #1
 802c91a:	9304      	str	r3, [sp, #16]
 802c91c:	9307      	str	r3, [sp, #28]
 802c91e:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 802c922:	931a      	str	r3, [sp, #104]	; 0x68
 802c924:	4654      	mov	r4, sl
 802c926:	2205      	movs	r2, #5
 802c928:	f814 1b01 	ldrb.w	r1, [r4], #1
 802c92c:	4850      	ldr	r0, [pc, #320]	; (802ca70 <_svfiprintf_r+0x1e8>)
 802c92e:	f7d3 fc57 	bl	80001e0 <memchr>
 802c932:	9a04      	ldr	r2, [sp, #16]
 802c934:	b9d8      	cbnz	r0, 802c96e <_svfiprintf_r+0xe6>
 802c936:	06d0      	lsls	r0, r2, #27
 802c938:	bf44      	itt	mi
 802c93a:	2320      	movmi	r3, #32
 802c93c:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 802c940:	0711      	lsls	r1, r2, #28
 802c942:	bf44      	itt	mi
 802c944:	232b      	movmi	r3, #43	; 0x2b
 802c946:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 802c94a:	f89a 3000 	ldrb.w	r3, [sl]
 802c94e:	2b2a      	cmp	r3, #42	; 0x2a
 802c950:	d015      	beq.n	802c97e <_svfiprintf_r+0xf6>
 802c952:	9a07      	ldr	r2, [sp, #28]
 802c954:	4654      	mov	r4, sl
 802c956:	2000      	movs	r0, #0
 802c958:	f04f 0c0a 	mov.w	ip, #10
 802c95c:	4621      	mov	r1, r4
 802c95e:	f811 3b01 	ldrb.w	r3, [r1], #1
 802c962:	3b30      	subs	r3, #48	; 0x30
 802c964:	2b09      	cmp	r3, #9
 802c966:	d94d      	bls.n	802ca04 <_svfiprintf_r+0x17c>
 802c968:	b1b0      	cbz	r0, 802c998 <_svfiprintf_r+0x110>
 802c96a:	9207      	str	r2, [sp, #28]
 802c96c:	e014      	b.n	802c998 <_svfiprintf_r+0x110>
 802c96e:	eba0 0308 	sub.w	r3, r0, r8
 802c972:	fa09 f303 	lsl.w	r3, r9, r3
 802c976:	4313      	orrs	r3, r2
 802c978:	9304      	str	r3, [sp, #16]
 802c97a:	46a2      	mov	sl, r4
 802c97c:	e7d2      	b.n	802c924 <_svfiprintf_r+0x9c>
 802c97e:	9b03      	ldr	r3, [sp, #12]
 802c980:	1d19      	adds	r1, r3, #4
 802c982:	681b      	ldr	r3, [r3, #0]
 802c984:	9103      	str	r1, [sp, #12]
 802c986:	2b00      	cmp	r3, #0
 802c988:	bfbb      	ittet	lt
 802c98a:	425b      	neglt	r3, r3
 802c98c:	f042 0202 	orrlt.w	r2, r2, #2
 802c990:	9307      	strge	r3, [sp, #28]
 802c992:	9307      	strlt	r3, [sp, #28]
 802c994:	bfb8      	it	lt
 802c996:	9204      	strlt	r2, [sp, #16]
 802c998:	7823      	ldrb	r3, [r4, #0]
 802c99a:	2b2e      	cmp	r3, #46	; 0x2e
 802c99c:	d10c      	bne.n	802c9b8 <_svfiprintf_r+0x130>
 802c99e:	7863      	ldrb	r3, [r4, #1]
 802c9a0:	2b2a      	cmp	r3, #42	; 0x2a
 802c9a2:	d134      	bne.n	802ca0e <_svfiprintf_r+0x186>
 802c9a4:	9b03      	ldr	r3, [sp, #12]
 802c9a6:	1d1a      	adds	r2, r3, #4
 802c9a8:	681b      	ldr	r3, [r3, #0]
 802c9aa:	9203      	str	r2, [sp, #12]
 802c9ac:	2b00      	cmp	r3, #0
 802c9ae:	bfb8      	it	lt
 802c9b0:	f04f 33ff 	movlt.w	r3, #4294967295
 802c9b4:	3402      	adds	r4, #2
 802c9b6:	9305      	str	r3, [sp, #20]
 802c9b8:	f8df a0c4 	ldr.w	sl, [pc, #196]	; 802ca80 <_svfiprintf_r+0x1f8>
 802c9bc:	7821      	ldrb	r1, [r4, #0]
 802c9be:	2203      	movs	r2, #3
 802c9c0:	4650      	mov	r0, sl
 802c9c2:	f7d3 fc0d 	bl	80001e0 <memchr>
 802c9c6:	b138      	cbz	r0, 802c9d8 <_svfiprintf_r+0x150>
 802c9c8:	9b04      	ldr	r3, [sp, #16]
 802c9ca:	eba0 000a 	sub.w	r0, r0, sl
 802c9ce:	2240      	movs	r2, #64	; 0x40
 802c9d0:	4082      	lsls	r2, r0
 802c9d2:	4313      	orrs	r3, r2
 802c9d4:	3401      	adds	r4, #1
 802c9d6:	9304      	str	r3, [sp, #16]
 802c9d8:	f814 1b01 	ldrb.w	r1, [r4], #1
 802c9dc:	4825      	ldr	r0, [pc, #148]	; (802ca74 <_svfiprintf_r+0x1ec>)
 802c9de:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 802c9e2:	2206      	movs	r2, #6
 802c9e4:	f7d3 fbfc 	bl	80001e0 <memchr>
 802c9e8:	2800      	cmp	r0, #0
 802c9ea:	d038      	beq.n	802ca5e <_svfiprintf_r+0x1d6>
 802c9ec:	4b22      	ldr	r3, [pc, #136]	; (802ca78 <_svfiprintf_r+0x1f0>)
 802c9ee:	bb1b      	cbnz	r3, 802ca38 <_svfiprintf_r+0x1b0>
 802c9f0:	9b03      	ldr	r3, [sp, #12]
 802c9f2:	3307      	adds	r3, #7
 802c9f4:	f023 0307 	bic.w	r3, r3, #7
 802c9f8:	3308      	adds	r3, #8
 802c9fa:	9303      	str	r3, [sp, #12]
 802c9fc:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802c9fe:	4433      	add	r3, r6
 802ca00:	9309      	str	r3, [sp, #36]	; 0x24
 802ca02:	e768      	b.n	802c8d6 <_svfiprintf_r+0x4e>
 802ca04:	fb0c 3202 	mla	r2, ip, r2, r3
 802ca08:	460c      	mov	r4, r1
 802ca0a:	2001      	movs	r0, #1
 802ca0c:	e7a6      	b.n	802c95c <_svfiprintf_r+0xd4>
 802ca0e:	2300      	movs	r3, #0
 802ca10:	3401      	adds	r4, #1
 802ca12:	9305      	str	r3, [sp, #20]
 802ca14:	4619      	mov	r1, r3
 802ca16:	f04f 0c0a 	mov.w	ip, #10
 802ca1a:	4620      	mov	r0, r4
 802ca1c:	f810 2b01 	ldrb.w	r2, [r0], #1
 802ca20:	3a30      	subs	r2, #48	; 0x30
 802ca22:	2a09      	cmp	r2, #9
 802ca24:	d903      	bls.n	802ca2e <_svfiprintf_r+0x1a6>
 802ca26:	2b00      	cmp	r3, #0
 802ca28:	d0c6      	beq.n	802c9b8 <_svfiprintf_r+0x130>
 802ca2a:	9105      	str	r1, [sp, #20]
 802ca2c:	e7c4      	b.n	802c9b8 <_svfiprintf_r+0x130>
 802ca2e:	fb0c 2101 	mla	r1, ip, r1, r2
 802ca32:	4604      	mov	r4, r0
 802ca34:	2301      	movs	r3, #1
 802ca36:	e7f0      	b.n	802ca1a <_svfiprintf_r+0x192>
 802ca38:	ab03      	add	r3, sp, #12
 802ca3a:	9300      	str	r3, [sp, #0]
 802ca3c:	462a      	mov	r2, r5
 802ca3e:	4b0f      	ldr	r3, [pc, #60]	; (802ca7c <_svfiprintf_r+0x1f4>)
 802ca40:	a904      	add	r1, sp, #16
 802ca42:	4638      	mov	r0, r7
 802ca44:	f7fd fe46 	bl	802a6d4 <_printf_float>
 802ca48:	1c42      	adds	r2, r0, #1
 802ca4a:	4606      	mov	r6, r0
 802ca4c:	d1d6      	bne.n	802c9fc <_svfiprintf_r+0x174>
 802ca4e:	89ab      	ldrh	r3, [r5, #12]
 802ca50:	065b      	lsls	r3, r3, #25
 802ca52:	f53f af2d 	bmi.w	802c8b0 <_svfiprintf_r+0x28>
 802ca56:	9809      	ldr	r0, [sp, #36]	; 0x24
 802ca58:	b01d      	add	sp, #116	; 0x74
 802ca5a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802ca5e:	ab03      	add	r3, sp, #12
 802ca60:	9300      	str	r3, [sp, #0]
 802ca62:	462a      	mov	r2, r5
 802ca64:	4b05      	ldr	r3, [pc, #20]	; (802ca7c <_svfiprintf_r+0x1f4>)
 802ca66:	a904      	add	r1, sp, #16
 802ca68:	4638      	mov	r0, r7
 802ca6a:	f7fe f8d7 	bl	802ac1c <_printf_i>
 802ca6e:	e7eb      	b.n	802ca48 <_svfiprintf_r+0x1c0>
 802ca70:	08030408 	.word	0x08030408
 802ca74:	08030412 	.word	0x08030412
 802ca78:	0802a6d5 	.word	0x0802a6d5
 802ca7c:	0802c7d5 	.word	0x0802c7d5
 802ca80:	0803040e 	.word	0x0803040e

0802ca84 <__sfputc_r>:
 802ca84:	6893      	ldr	r3, [r2, #8]
 802ca86:	3b01      	subs	r3, #1
 802ca88:	2b00      	cmp	r3, #0
 802ca8a:	b410      	push	{r4}
 802ca8c:	6093      	str	r3, [r2, #8]
 802ca8e:	da08      	bge.n	802caa2 <__sfputc_r+0x1e>
 802ca90:	6994      	ldr	r4, [r2, #24]
 802ca92:	42a3      	cmp	r3, r4
 802ca94:	db01      	blt.n	802ca9a <__sfputc_r+0x16>
 802ca96:	290a      	cmp	r1, #10
 802ca98:	d103      	bne.n	802caa2 <__sfputc_r+0x1e>
 802ca9a:	f85d 4b04 	ldr.w	r4, [sp], #4
 802ca9e:	f000 b9e3 	b.w	802ce68 <__swbuf_r>
 802caa2:	6813      	ldr	r3, [r2, #0]
 802caa4:	1c58      	adds	r0, r3, #1
 802caa6:	6010      	str	r0, [r2, #0]
 802caa8:	7019      	strb	r1, [r3, #0]
 802caaa:	4608      	mov	r0, r1
 802caac:	f85d 4b04 	ldr.w	r4, [sp], #4
 802cab0:	4770      	bx	lr

0802cab2 <__sfputs_r>:
 802cab2:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802cab4:	4606      	mov	r6, r0
 802cab6:	460f      	mov	r7, r1
 802cab8:	4614      	mov	r4, r2
 802caba:	18d5      	adds	r5, r2, r3
 802cabc:	42ac      	cmp	r4, r5
 802cabe:	d101      	bne.n	802cac4 <__sfputs_r+0x12>
 802cac0:	2000      	movs	r0, #0
 802cac2:	e007      	b.n	802cad4 <__sfputs_r+0x22>
 802cac4:	f814 1b01 	ldrb.w	r1, [r4], #1
 802cac8:	463a      	mov	r2, r7
 802caca:	4630      	mov	r0, r6
 802cacc:	f7ff ffda 	bl	802ca84 <__sfputc_r>
 802cad0:	1c43      	adds	r3, r0, #1
 802cad2:	d1f3      	bne.n	802cabc <__sfputs_r+0xa>
 802cad4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

0802cad8 <_vfiprintf_r>:
 802cad8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802cadc:	460d      	mov	r5, r1
 802cade:	b09d      	sub	sp, #116	; 0x74
 802cae0:	4614      	mov	r4, r2
 802cae2:	4698      	mov	r8, r3
 802cae4:	4606      	mov	r6, r0
 802cae6:	b118      	cbz	r0, 802caf0 <_vfiprintf_r+0x18>
 802cae8:	6a03      	ldr	r3, [r0, #32]
 802caea:	b90b      	cbnz	r3, 802caf0 <_vfiprintf_r+0x18>
 802caec:	f7fe fa44 	bl	802af78 <__sinit>
 802caf0:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 802caf2:	07d9      	lsls	r1, r3, #31
 802caf4:	d405      	bmi.n	802cb02 <_vfiprintf_r+0x2a>
 802caf6:	89ab      	ldrh	r3, [r5, #12]
 802caf8:	059a      	lsls	r2, r3, #22
 802cafa:	d402      	bmi.n	802cb02 <_vfiprintf_r+0x2a>
 802cafc:	6da8      	ldr	r0, [r5, #88]	; 0x58
 802cafe:	f7fe fbb8 	bl	802b272 <__retarget_lock_acquire_recursive>
 802cb02:	89ab      	ldrh	r3, [r5, #12]
 802cb04:	071b      	lsls	r3, r3, #28
 802cb06:	d501      	bpl.n	802cb0c <_vfiprintf_r+0x34>
 802cb08:	692b      	ldr	r3, [r5, #16]
 802cb0a:	b99b      	cbnz	r3, 802cb34 <_vfiprintf_r+0x5c>
 802cb0c:	4629      	mov	r1, r5
 802cb0e:	4630      	mov	r0, r6
 802cb10:	f000 f9e8 	bl	802cee4 <__swsetup_r>
 802cb14:	b170      	cbz	r0, 802cb34 <_vfiprintf_r+0x5c>
 802cb16:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 802cb18:	07dc      	lsls	r4, r3, #31
 802cb1a:	d504      	bpl.n	802cb26 <_vfiprintf_r+0x4e>
 802cb1c:	f04f 30ff 	mov.w	r0, #4294967295
 802cb20:	b01d      	add	sp, #116	; 0x74
 802cb22:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802cb26:	89ab      	ldrh	r3, [r5, #12]
 802cb28:	0598      	lsls	r0, r3, #22
 802cb2a:	d4f7      	bmi.n	802cb1c <_vfiprintf_r+0x44>
 802cb2c:	6da8      	ldr	r0, [r5, #88]	; 0x58
 802cb2e:	f7fe fba1 	bl	802b274 <__retarget_lock_release_recursive>
 802cb32:	e7f3      	b.n	802cb1c <_vfiprintf_r+0x44>
 802cb34:	2300      	movs	r3, #0
 802cb36:	9309      	str	r3, [sp, #36]	; 0x24
 802cb38:	2320      	movs	r3, #32
 802cb3a:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 802cb3e:	f8cd 800c 	str.w	r8, [sp, #12]
 802cb42:	2330      	movs	r3, #48	; 0x30
 802cb44:	f8df 81b0 	ldr.w	r8, [pc, #432]	; 802ccf8 <_vfiprintf_r+0x220>
 802cb48:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 802cb4c:	f04f 0901 	mov.w	r9, #1
 802cb50:	4623      	mov	r3, r4
 802cb52:	469a      	mov	sl, r3
 802cb54:	f813 2b01 	ldrb.w	r2, [r3], #1
 802cb58:	b10a      	cbz	r2, 802cb5e <_vfiprintf_r+0x86>
 802cb5a:	2a25      	cmp	r2, #37	; 0x25
 802cb5c:	d1f9      	bne.n	802cb52 <_vfiprintf_r+0x7a>
 802cb5e:	ebba 0b04 	subs.w	fp, sl, r4
 802cb62:	d00b      	beq.n	802cb7c <_vfiprintf_r+0xa4>
 802cb64:	465b      	mov	r3, fp
 802cb66:	4622      	mov	r2, r4
 802cb68:	4629      	mov	r1, r5
 802cb6a:	4630      	mov	r0, r6
 802cb6c:	f7ff ffa1 	bl	802cab2 <__sfputs_r>
 802cb70:	3001      	adds	r0, #1
 802cb72:	f000 80a9 	beq.w	802ccc8 <_vfiprintf_r+0x1f0>
 802cb76:	9a09      	ldr	r2, [sp, #36]	; 0x24
 802cb78:	445a      	add	r2, fp
 802cb7a:	9209      	str	r2, [sp, #36]	; 0x24
 802cb7c:	f89a 3000 	ldrb.w	r3, [sl]
 802cb80:	2b00      	cmp	r3, #0
 802cb82:	f000 80a1 	beq.w	802ccc8 <_vfiprintf_r+0x1f0>
 802cb86:	2300      	movs	r3, #0
 802cb88:	f04f 32ff 	mov.w	r2, #4294967295
 802cb8c:	e9cd 2305 	strd	r2, r3, [sp, #20]
 802cb90:	f10a 0a01 	add.w	sl, sl, #1
 802cb94:	9304      	str	r3, [sp, #16]
 802cb96:	9307      	str	r3, [sp, #28]
 802cb98:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 802cb9c:	931a      	str	r3, [sp, #104]	; 0x68
 802cb9e:	4654      	mov	r4, sl
 802cba0:	2205      	movs	r2, #5
 802cba2:	f814 1b01 	ldrb.w	r1, [r4], #1
 802cba6:	4854      	ldr	r0, [pc, #336]	; (802ccf8 <_vfiprintf_r+0x220>)
 802cba8:	f7d3 fb1a 	bl	80001e0 <memchr>
 802cbac:	9a04      	ldr	r2, [sp, #16]
 802cbae:	b9d8      	cbnz	r0, 802cbe8 <_vfiprintf_r+0x110>
 802cbb0:	06d1      	lsls	r1, r2, #27
 802cbb2:	bf44      	itt	mi
 802cbb4:	2320      	movmi	r3, #32
 802cbb6:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 802cbba:	0713      	lsls	r3, r2, #28
 802cbbc:	bf44      	itt	mi
 802cbbe:	232b      	movmi	r3, #43	; 0x2b
 802cbc0:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 802cbc4:	f89a 3000 	ldrb.w	r3, [sl]
 802cbc8:	2b2a      	cmp	r3, #42	; 0x2a
 802cbca:	d015      	beq.n	802cbf8 <_vfiprintf_r+0x120>
 802cbcc:	9a07      	ldr	r2, [sp, #28]
 802cbce:	4654      	mov	r4, sl
 802cbd0:	2000      	movs	r0, #0
 802cbd2:	f04f 0c0a 	mov.w	ip, #10
 802cbd6:	4621      	mov	r1, r4
 802cbd8:	f811 3b01 	ldrb.w	r3, [r1], #1
 802cbdc:	3b30      	subs	r3, #48	; 0x30
 802cbde:	2b09      	cmp	r3, #9
 802cbe0:	d94d      	bls.n	802cc7e <_vfiprintf_r+0x1a6>
 802cbe2:	b1b0      	cbz	r0, 802cc12 <_vfiprintf_r+0x13a>
 802cbe4:	9207      	str	r2, [sp, #28]
 802cbe6:	e014      	b.n	802cc12 <_vfiprintf_r+0x13a>
 802cbe8:	eba0 0308 	sub.w	r3, r0, r8
 802cbec:	fa09 f303 	lsl.w	r3, r9, r3
 802cbf0:	4313      	orrs	r3, r2
 802cbf2:	9304      	str	r3, [sp, #16]
 802cbf4:	46a2      	mov	sl, r4
 802cbf6:	e7d2      	b.n	802cb9e <_vfiprintf_r+0xc6>
 802cbf8:	9b03      	ldr	r3, [sp, #12]
 802cbfa:	1d19      	adds	r1, r3, #4
 802cbfc:	681b      	ldr	r3, [r3, #0]
 802cbfe:	9103      	str	r1, [sp, #12]
 802cc00:	2b00      	cmp	r3, #0
 802cc02:	bfbb      	ittet	lt
 802cc04:	425b      	neglt	r3, r3
 802cc06:	f042 0202 	orrlt.w	r2, r2, #2
 802cc0a:	9307      	strge	r3, [sp, #28]
 802cc0c:	9307      	strlt	r3, [sp, #28]
 802cc0e:	bfb8      	it	lt
 802cc10:	9204      	strlt	r2, [sp, #16]
 802cc12:	7823      	ldrb	r3, [r4, #0]
 802cc14:	2b2e      	cmp	r3, #46	; 0x2e
 802cc16:	d10c      	bne.n	802cc32 <_vfiprintf_r+0x15a>
 802cc18:	7863      	ldrb	r3, [r4, #1]
 802cc1a:	2b2a      	cmp	r3, #42	; 0x2a
 802cc1c:	d134      	bne.n	802cc88 <_vfiprintf_r+0x1b0>
 802cc1e:	9b03      	ldr	r3, [sp, #12]
 802cc20:	1d1a      	adds	r2, r3, #4
 802cc22:	681b      	ldr	r3, [r3, #0]
 802cc24:	9203      	str	r2, [sp, #12]
 802cc26:	2b00      	cmp	r3, #0
 802cc28:	bfb8      	it	lt
 802cc2a:	f04f 33ff 	movlt.w	r3, #4294967295
 802cc2e:	3402      	adds	r4, #2
 802cc30:	9305      	str	r3, [sp, #20]
 802cc32:	f8df a0d4 	ldr.w	sl, [pc, #212]	; 802cd08 <_vfiprintf_r+0x230>
 802cc36:	7821      	ldrb	r1, [r4, #0]
 802cc38:	2203      	movs	r2, #3
 802cc3a:	4650      	mov	r0, sl
 802cc3c:	f7d3 fad0 	bl	80001e0 <memchr>
 802cc40:	b138      	cbz	r0, 802cc52 <_vfiprintf_r+0x17a>
 802cc42:	9b04      	ldr	r3, [sp, #16]
 802cc44:	eba0 000a 	sub.w	r0, r0, sl
 802cc48:	2240      	movs	r2, #64	; 0x40
 802cc4a:	4082      	lsls	r2, r0
 802cc4c:	4313      	orrs	r3, r2
 802cc4e:	3401      	adds	r4, #1
 802cc50:	9304      	str	r3, [sp, #16]
 802cc52:	f814 1b01 	ldrb.w	r1, [r4], #1
 802cc56:	4829      	ldr	r0, [pc, #164]	; (802ccfc <_vfiprintf_r+0x224>)
 802cc58:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 802cc5c:	2206      	movs	r2, #6
 802cc5e:	f7d3 fabf 	bl	80001e0 <memchr>
 802cc62:	2800      	cmp	r0, #0
 802cc64:	d03f      	beq.n	802cce6 <_vfiprintf_r+0x20e>
 802cc66:	4b26      	ldr	r3, [pc, #152]	; (802cd00 <_vfiprintf_r+0x228>)
 802cc68:	bb1b      	cbnz	r3, 802ccb2 <_vfiprintf_r+0x1da>
 802cc6a:	9b03      	ldr	r3, [sp, #12]
 802cc6c:	3307      	adds	r3, #7
 802cc6e:	f023 0307 	bic.w	r3, r3, #7
 802cc72:	3308      	adds	r3, #8
 802cc74:	9303      	str	r3, [sp, #12]
 802cc76:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802cc78:	443b      	add	r3, r7
 802cc7a:	9309      	str	r3, [sp, #36]	; 0x24
 802cc7c:	e768      	b.n	802cb50 <_vfiprintf_r+0x78>
 802cc7e:	fb0c 3202 	mla	r2, ip, r2, r3
 802cc82:	460c      	mov	r4, r1
 802cc84:	2001      	movs	r0, #1
 802cc86:	e7a6      	b.n	802cbd6 <_vfiprintf_r+0xfe>
 802cc88:	2300      	movs	r3, #0
 802cc8a:	3401      	adds	r4, #1
 802cc8c:	9305      	str	r3, [sp, #20]
 802cc8e:	4619      	mov	r1, r3
 802cc90:	f04f 0c0a 	mov.w	ip, #10
 802cc94:	4620      	mov	r0, r4
 802cc96:	f810 2b01 	ldrb.w	r2, [r0], #1
 802cc9a:	3a30      	subs	r2, #48	; 0x30
 802cc9c:	2a09      	cmp	r2, #9
 802cc9e:	d903      	bls.n	802cca8 <_vfiprintf_r+0x1d0>
 802cca0:	2b00      	cmp	r3, #0
 802cca2:	d0c6      	beq.n	802cc32 <_vfiprintf_r+0x15a>
 802cca4:	9105      	str	r1, [sp, #20]
 802cca6:	e7c4      	b.n	802cc32 <_vfiprintf_r+0x15a>
 802cca8:	fb0c 2101 	mla	r1, ip, r1, r2
 802ccac:	4604      	mov	r4, r0
 802ccae:	2301      	movs	r3, #1
 802ccb0:	e7f0      	b.n	802cc94 <_vfiprintf_r+0x1bc>
 802ccb2:	ab03      	add	r3, sp, #12
 802ccb4:	9300      	str	r3, [sp, #0]
 802ccb6:	462a      	mov	r2, r5
 802ccb8:	4b12      	ldr	r3, [pc, #72]	; (802cd04 <_vfiprintf_r+0x22c>)
 802ccba:	a904      	add	r1, sp, #16
 802ccbc:	4630      	mov	r0, r6
 802ccbe:	f7fd fd09 	bl	802a6d4 <_printf_float>
 802ccc2:	4607      	mov	r7, r0
 802ccc4:	1c78      	adds	r0, r7, #1
 802ccc6:	d1d6      	bne.n	802cc76 <_vfiprintf_r+0x19e>
 802ccc8:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 802ccca:	07d9      	lsls	r1, r3, #31
 802cccc:	d405      	bmi.n	802ccda <_vfiprintf_r+0x202>
 802ccce:	89ab      	ldrh	r3, [r5, #12]
 802ccd0:	059a      	lsls	r2, r3, #22
 802ccd2:	d402      	bmi.n	802ccda <_vfiprintf_r+0x202>
 802ccd4:	6da8      	ldr	r0, [r5, #88]	; 0x58
 802ccd6:	f7fe facd 	bl	802b274 <__retarget_lock_release_recursive>
 802ccda:	89ab      	ldrh	r3, [r5, #12]
 802ccdc:	065b      	lsls	r3, r3, #25
 802ccde:	f53f af1d 	bmi.w	802cb1c <_vfiprintf_r+0x44>
 802cce2:	9809      	ldr	r0, [sp, #36]	; 0x24
 802cce4:	e71c      	b.n	802cb20 <_vfiprintf_r+0x48>
 802cce6:	ab03      	add	r3, sp, #12
 802cce8:	9300      	str	r3, [sp, #0]
 802ccea:	462a      	mov	r2, r5
 802ccec:	4b05      	ldr	r3, [pc, #20]	; (802cd04 <_vfiprintf_r+0x22c>)
 802ccee:	a904      	add	r1, sp, #16
 802ccf0:	4630      	mov	r0, r6
 802ccf2:	f7fd ff93 	bl	802ac1c <_printf_i>
 802ccf6:	e7e4      	b.n	802ccc2 <_vfiprintf_r+0x1ea>
 802ccf8:	08030408 	.word	0x08030408
 802ccfc:	08030412 	.word	0x08030412
 802cd00:	0802a6d5 	.word	0x0802a6d5
 802cd04:	0802cab3 	.word	0x0802cab3
 802cd08:	0803040e 	.word	0x0803040e

0802cd0c <__sflush_r>:
 802cd0c:	898a      	ldrh	r2, [r1, #12]
 802cd0e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 802cd12:	4605      	mov	r5, r0
 802cd14:	0710      	lsls	r0, r2, #28
 802cd16:	460c      	mov	r4, r1
 802cd18:	d458      	bmi.n	802cdcc <__sflush_r+0xc0>
 802cd1a:	684b      	ldr	r3, [r1, #4]
 802cd1c:	2b00      	cmp	r3, #0
 802cd1e:	dc05      	bgt.n	802cd2c <__sflush_r+0x20>
 802cd20:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 802cd22:	2b00      	cmp	r3, #0
 802cd24:	dc02      	bgt.n	802cd2c <__sflush_r+0x20>
 802cd26:	2000      	movs	r0, #0
 802cd28:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 802cd2c:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 802cd2e:	2e00      	cmp	r6, #0
 802cd30:	d0f9      	beq.n	802cd26 <__sflush_r+0x1a>
 802cd32:	2300      	movs	r3, #0
 802cd34:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 802cd38:	682f      	ldr	r7, [r5, #0]
 802cd3a:	6a21      	ldr	r1, [r4, #32]
 802cd3c:	602b      	str	r3, [r5, #0]
 802cd3e:	d032      	beq.n	802cda6 <__sflush_r+0x9a>
 802cd40:	6d60      	ldr	r0, [r4, #84]	; 0x54
 802cd42:	89a3      	ldrh	r3, [r4, #12]
 802cd44:	075a      	lsls	r2, r3, #29
 802cd46:	d505      	bpl.n	802cd54 <__sflush_r+0x48>
 802cd48:	6863      	ldr	r3, [r4, #4]
 802cd4a:	1ac0      	subs	r0, r0, r3
 802cd4c:	6b63      	ldr	r3, [r4, #52]	; 0x34
 802cd4e:	b10b      	cbz	r3, 802cd54 <__sflush_r+0x48>
 802cd50:	6c23      	ldr	r3, [r4, #64]	; 0x40
 802cd52:	1ac0      	subs	r0, r0, r3
 802cd54:	2300      	movs	r3, #0
 802cd56:	4602      	mov	r2, r0
 802cd58:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 802cd5a:	6a21      	ldr	r1, [r4, #32]
 802cd5c:	4628      	mov	r0, r5
 802cd5e:	47b0      	blx	r6
 802cd60:	1c43      	adds	r3, r0, #1
 802cd62:	89a3      	ldrh	r3, [r4, #12]
 802cd64:	d106      	bne.n	802cd74 <__sflush_r+0x68>
 802cd66:	6829      	ldr	r1, [r5, #0]
 802cd68:	291d      	cmp	r1, #29
 802cd6a:	d82b      	bhi.n	802cdc4 <__sflush_r+0xb8>
 802cd6c:	4a29      	ldr	r2, [pc, #164]	; (802ce14 <__sflush_r+0x108>)
 802cd6e:	410a      	asrs	r2, r1
 802cd70:	07d6      	lsls	r6, r2, #31
 802cd72:	d427      	bmi.n	802cdc4 <__sflush_r+0xb8>
 802cd74:	2200      	movs	r2, #0
 802cd76:	6062      	str	r2, [r4, #4]
 802cd78:	04d9      	lsls	r1, r3, #19
 802cd7a:	6922      	ldr	r2, [r4, #16]
 802cd7c:	6022      	str	r2, [r4, #0]
 802cd7e:	d504      	bpl.n	802cd8a <__sflush_r+0x7e>
 802cd80:	1c42      	adds	r2, r0, #1
 802cd82:	d101      	bne.n	802cd88 <__sflush_r+0x7c>
 802cd84:	682b      	ldr	r3, [r5, #0]
 802cd86:	b903      	cbnz	r3, 802cd8a <__sflush_r+0x7e>
 802cd88:	6560      	str	r0, [r4, #84]	; 0x54
 802cd8a:	6b61      	ldr	r1, [r4, #52]	; 0x34
 802cd8c:	602f      	str	r7, [r5, #0]
 802cd8e:	2900      	cmp	r1, #0
 802cd90:	d0c9      	beq.n	802cd26 <__sflush_r+0x1a>
 802cd92:	f104 0344 	add.w	r3, r4, #68	; 0x44
 802cd96:	4299      	cmp	r1, r3
 802cd98:	d002      	beq.n	802cda0 <__sflush_r+0x94>
 802cd9a:	4628      	mov	r0, r5
 802cd9c:	f7ff f952 	bl	802c044 <_free_r>
 802cda0:	2000      	movs	r0, #0
 802cda2:	6360      	str	r0, [r4, #52]	; 0x34
 802cda4:	e7c0      	b.n	802cd28 <__sflush_r+0x1c>
 802cda6:	2301      	movs	r3, #1
 802cda8:	4628      	mov	r0, r5
 802cdaa:	47b0      	blx	r6
 802cdac:	1c41      	adds	r1, r0, #1
 802cdae:	d1c8      	bne.n	802cd42 <__sflush_r+0x36>
 802cdb0:	682b      	ldr	r3, [r5, #0]
 802cdb2:	2b00      	cmp	r3, #0
 802cdb4:	d0c5      	beq.n	802cd42 <__sflush_r+0x36>
 802cdb6:	2b1d      	cmp	r3, #29
 802cdb8:	d001      	beq.n	802cdbe <__sflush_r+0xb2>
 802cdba:	2b16      	cmp	r3, #22
 802cdbc:	d101      	bne.n	802cdc2 <__sflush_r+0xb6>
 802cdbe:	602f      	str	r7, [r5, #0]
 802cdc0:	e7b1      	b.n	802cd26 <__sflush_r+0x1a>
 802cdc2:	89a3      	ldrh	r3, [r4, #12]
 802cdc4:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 802cdc8:	81a3      	strh	r3, [r4, #12]
 802cdca:	e7ad      	b.n	802cd28 <__sflush_r+0x1c>
 802cdcc:	690f      	ldr	r7, [r1, #16]
 802cdce:	2f00      	cmp	r7, #0
 802cdd0:	d0a9      	beq.n	802cd26 <__sflush_r+0x1a>
 802cdd2:	0793      	lsls	r3, r2, #30
 802cdd4:	680e      	ldr	r6, [r1, #0]
 802cdd6:	bf08      	it	eq
 802cdd8:	694b      	ldreq	r3, [r1, #20]
 802cdda:	600f      	str	r7, [r1, #0]
 802cddc:	bf18      	it	ne
 802cdde:	2300      	movne	r3, #0
 802cde0:	eba6 0807 	sub.w	r8, r6, r7
 802cde4:	608b      	str	r3, [r1, #8]
 802cde6:	f1b8 0f00 	cmp.w	r8, #0
 802cdea:	dd9c      	ble.n	802cd26 <__sflush_r+0x1a>
 802cdec:	6a21      	ldr	r1, [r4, #32]
 802cdee:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 802cdf0:	4643      	mov	r3, r8
 802cdf2:	463a      	mov	r2, r7
 802cdf4:	4628      	mov	r0, r5
 802cdf6:	47b0      	blx	r6
 802cdf8:	2800      	cmp	r0, #0
 802cdfa:	dc06      	bgt.n	802ce0a <__sflush_r+0xfe>
 802cdfc:	89a3      	ldrh	r3, [r4, #12]
 802cdfe:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 802ce02:	81a3      	strh	r3, [r4, #12]
 802ce04:	f04f 30ff 	mov.w	r0, #4294967295
 802ce08:	e78e      	b.n	802cd28 <__sflush_r+0x1c>
 802ce0a:	4407      	add	r7, r0
 802ce0c:	eba8 0800 	sub.w	r8, r8, r0
 802ce10:	e7e9      	b.n	802cde6 <__sflush_r+0xda>
 802ce12:	bf00      	nop
 802ce14:	dfbffffe 	.word	0xdfbffffe

0802ce18 <_fflush_r>:
 802ce18:	b538      	push	{r3, r4, r5, lr}
 802ce1a:	690b      	ldr	r3, [r1, #16]
 802ce1c:	4605      	mov	r5, r0
 802ce1e:	460c      	mov	r4, r1
 802ce20:	b913      	cbnz	r3, 802ce28 <_fflush_r+0x10>
 802ce22:	2500      	movs	r5, #0
 802ce24:	4628      	mov	r0, r5
 802ce26:	bd38      	pop	{r3, r4, r5, pc}
 802ce28:	b118      	cbz	r0, 802ce32 <_fflush_r+0x1a>
 802ce2a:	6a03      	ldr	r3, [r0, #32]
 802ce2c:	b90b      	cbnz	r3, 802ce32 <_fflush_r+0x1a>
 802ce2e:	f7fe f8a3 	bl	802af78 <__sinit>
 802ce32:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 802ce36:	2b00      	cmp	r3, #0
 802ce38:	d0f3      	beq.n	802ce22 <_fflush_r+0xa>
 802ce3a:	6e62      	ldr	r2, [r4, #100]	; 0x64
 802ce3c:	07d0      	lsls	r0, r2, #31
 802ce3e:	d404      	bmi.n	802ce4a <_fflush_r+0x32>
 802ce40:	0599      	lsls	r1, r3, #22
 802ce42:	d402      	bmi.n	802ce4a <_fflush_r+0x32>
 802ce44:	6da0      	ldr	r0, [r4, #88]	; 0x58
 802ce46:	f7fe fa14 	bl	802b272 <__retarget_lock_acquire_recursive>
 802ce4a:	4628      	mov	r0, r5
 802ce4c:	4621      	mov	r1, r4
 802ce4e:	f7ff ff5d 	bl	802cd0c <__sflush_r>
 802ce52:	6e63      	ldr	r3, [r4, #100]	; 0x64
 802ce54:	07da      	lsls	r2, r3, #31
 802ce56:	4605      	mov	r5, r0
 802ce58:	d4e4      	bmi.n	802ce24 <_fflush_r+0xc>
 802ce5a:	89a3      	ldrh	r3, [r4, #12]
 802ce5c:	059b      	lsls	r3, r3, #22
 802ce5e:	d4e1      	bmi.n	802ce24 <_fflush_r+0xc>
 802ce60:	6da0      	ldr	r0, [r4, #88]	; 0x58
 802ce62:	f7fe fa07 	bl	802b274 <__retarget_lock_release_recursive>
 802ce66:	e7dd      	b.n	802ce24 <_fflush_r+0xc>

0802ce68 <__swbuf_r>:
 802ce68:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802ce6a:	460e      	mov	r6, r1
 802ce6c:	4614      	mov	r4, r2
 802ce6e:	4605      	mov	r5, r0
 802ce70:	b118      	cbz	r0, 802ce7a <__swbuf_r+0x12>
 802ce72:	6a03      	ldr	r3, [r0, #32]
 802ce74:	b90b      	cbnz	r3, 802ce7a <__swbuf_r+0x12>
 802ce76:	f7fe f87f 	bl	802af78 <__sinit>
 802ce7a:	69a3      	ldr	r3, [r4, #24]
 802ce7c:	60a3      	str	r3, [r4, #8]
 802ce7e:	89a3      	ldrh	r3, [r4, #12]
 802ce80:	071a      	lsls	r2, r3, #28
 802ce82:	d525      	bpl.n	802ced0 <__swbuf_r+0x68>
 802ce84:	6923      	ldr	r3, [r4, #16]
 802ce86:	b31b      	cbz	r3, 802ced0 <__swbuf_r+0x68>
 802ce88:	6823      	ldr	r3, [r4, #0]
 802ce8a:	6922      	ldr	r2, [r4, #16]
 802ce8c:	1a98      	subs	r0, r3, r2
 802ce8e:	6963      	ldr	r3, [r4, #20]
 802ce90:	b2f6      	uxtb	r6, r6
 802ce92:	4283      	cmp	r3, r0
 802ce94:	4637      	mov	r7, r6
 802ce96:	dc04      	bgt.n	802cea2 <__swbuf_r+0x3a>
 802ce98:	4621      	mov	r1, r4
 802ce9a:	4628      	mov	r0, r5
 802ce9c:	f7ff ffbc 	bl	802ce18 <_fflush_r>
 802cea0:	b9e0      	cbnz	r0, 802cedc <__swbuf_r+0x74>
 802cea2:	68a3      	ldr	r3, [r4, #8]
 802cea4:	3b01      	subs	r3, #1
 802cea6:	60a3      	str	r3, [r4, #8]
 802cea8:	6823      	ldr	r3, [r4, #0]
 802ceaa:	1c5a      	adds	r2, r3, #1
 802ceac:	6022      	str	r2, [r4, #0]
 802ceae:	701e      	strb	r6, [r3, #0]
 802ceb0:	6962      	ldr	r2, [r4, #20]
 802ceb2:	1c43      	adds	r3, r0, #1
 802ceb4:	429a      	cmp	r2, r3
 802ceb6:	d004      	beq.n	802cec2 <__swbuf_r+0x5a>
 802ceb8:	89a3      	ldrh	r3, [r4, #12]
 802ceba:	07db      	lsls	r3, r3, #31
 802cebc:	d506      	bpl.n	802cecc <__swbuf_r+0x64>
 802cebe:	2e0a      	cmp	r6, #10
 802cec0:	d104      	bne.n	802cecc <__swbuf_r+0x64>
 802cec2:	4621      	mov	r1, r4
 802cec4:	4628      	mov	r0, r5
 802cec6:	f7ff ffa7 	bl	802ce18 <_fflush_r>
 802ceca:	b938      	cbnz	r0, 802cedc <__swbuf_r+0x74>
 802cecc:	4638      	mov	r0, r7
 802cece:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 802ced0:	4621      	mov	r1, r4
 802ced2:	4628      	mov	r0, r5
 802ced4:	f000 f806 	bl	802cee4 <__swsetup_r>
 802ced8:	2800      	cmp	r0, #0
 802ceda:	d0d5      	beq.n	802ce88 <__swbuf_r+0x20>
 802cedc:	f04f 37ff 	mov.w	r7, #4294967295
 802cee0:	e7f4      	b.n	802cecc <__swbuf_r+0x64>
	...

0802cee4 <__swsetup_r>:
 802cee4:	b538      	push	{r3, r4, r5, lr}
 802cee6:	4b2a      	ldr	r3, [pc, #168]	; (802cf90 <__swsetup_r+0xac>)
 802cee8:	4605      	mov	r5, r0
 802ceea:	6818      	ldr	r0, [r3, #0]
 802ceec:	460c      	mov	r4, r1
 802ceee:	b118      	cbz	r0, 802cef8 <__swsetup_r+0x14>
 802cef0:	6a03      	ldr	r3, [r0, #32]
 802cef2:	b90b      	cbnz	r3, 802cef8 <__swsetup_r+0x14>
 802cef4:	f7fe f840 	bl	802af78 <__sinit>
 802cef8:	89a3      	ldrh	r3, [r4, #12]
 802cefa:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 802cefe:	0718      	lsls	r0, r3, #28
 802cf00:	d422      	bmi.n	802cf48 <__swsetup_r+0x64>
 802cf02:	06d9      	lsls	r1, r3, #27
 802cf04:	d407      	bmi.n	802cf16 <__swsetup_r+0x32>
 802cf06:	2309      	movs	r3, #9
 802cf08:	602b      	str	r3, [r5, #0]
 802cf0a:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 802cf0e:	81a3      	strh	r3, [r4, #12]
 802cf10:	f04f 30ff 	mov.w	r0, #4294967295
 802cf14:	e034      	b.n	802cf80 <__swsetup_r+0x9c>
 802cf16:	0758      	lsls	r0, r3, #29
 802cf18:	d512      	bpl.n	802cf40 <__swsetup_r+0x5c>
 802cf1a:	6b61      	ldr	r1, [r4, #52]	; 0x34
 802cf1c:	b141      	cbz	r1, 802cf30 <__swsetup_r+0x4c>
 802cf1e:	f104 0344 	add.w	r3, r4, #68	; 0x44
 802cf22:	4299      	cmp	r1, r3
 802cf24:	d002      	beq.n	802cf2c <__swsetup_r+0x48>
 802cf26:	4628      	mov	r0, r5
 802cf28:	f7ff f88c 	bl	802c044 <_free_r>
 802cf2c:	2300      	movs	r3, #0
 802cf2e:	6363      	str	r3, [r4, #52]	; 0x34
 802cf30:	89a3      	ldrh	r3, [r4, #12]
 802cf32:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 802cf36:	81a3      	strh	r3, [r4, #12]
 802cf38:	2300      	movs	r3, #0
 802cf3a:	6063      	str	r3, [r4, #4]
 802cf3c:	6923      	ldr	r3, [r4, #16]
 802cf3e:	6023      	str	r3, [r4, #0]
 802cf40:	89a3      	ldrh	r3, [r4, #12]
 802cf42:	f043 0308 	orr.w	r3, r3, #8
 802cf46:	81a3      	strh	r3, [r4, #12]
 802cf48:	6923      	ldr	r3, [r4, #16]
 802cf4a:	b94b      	cbnz	r3, 802cf60 <__swsetup_r+0x7c>
 802cf4c:	89a3      	ldrh	r3, [r4, #12]
 802cf4e:	f403 7320 	and.w	r3, r3, #640	; 0x280
 802cf52:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 802cf56:	d003      	beq.n	802cf60 <__swsetup_r+0x7c>
 802cf58:	4621      	mov	r1, r4
 802cf5a:	4628      	mov	r0, r5
 802cf5c:	f000 f8be 	bl	802d0dc <__smakebuf_r>
 802cf60:	89a0      	ldrh	r0, [r4, #12]
 802cf62:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 802cf66:	f010 0301 	ands.w	r3, r0, #1
 802cf6a:	d00a      	beq.n	802cf82 <__swsetup_r+0x9e>
 802cf6c:	2300      	movs	r3, #0
 802cf6e:	60a3      	str	r3, [r4, #8]
 802cf70:	6963      	ldr	r3, [r4, #20]
 802cf72:	425b      	negs	r3, r3
 802cf74:	61a3      	str	r3, [r4, #24]
 802cf76:	6923      	ldr	r3, [r4, #16]
 802cf78:	b943      	cbnz	r3, 802cf8c <__swsetup_r+0xa8>
 802cf7a:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 802cf7e:	d1c4      	bne.n	802cf0a <__swsetup_r+0x26>
 802cf80:	bd38      	pop	{r3, r4, r5, pc}
 802cf82:	0781      	lsls	r1, r0, #30
 802cf84:	bf58      	it	pl
 802cf86:	6963      	ldrpl	r3, [r4, #20]
 802cf88:	60a3      	str	r3, [r4, #8]
 802cf8a:	e7f4      	b.n	802cf76 <__swsetup_r+0x92>
 802cf8c:	2000      	movs	r0, #0
 802cf8e:	e7f7      	b.n	802cf80 <__swsetup_r+0x9c>
 802cf90:	200001e4 	.word	0x200001e4

0802cf94 <memmove>:
 802cf94:	4288      	cmp	r0, r1
 802cf96:	b510      	push	{r4, lr}
 802cf98:	eb01 0402 	add.w	r4, r1, r2
 802cf9c:	d902      	bls.n	802cfa4 <memmove+0x10>
 802cf9e:	4284      	cmp	r4, r0
 802cfa0:	4623      	mov	r3, r4
 802cfa2:	d807      	bhi.n	802cfb4 <memmove+0x20>
 802cfa4:	1e43      	subs	r3, r0, #1
 802cfa6:	42a1      	cmp	r1, r4
 802cfa8:	d008      	beq.n	802cfbc <memmove+0x28>
 802cfaa:	f811 2b01 	ldrb.w	r2, [r1], #1
 802cfae:	f803 2f01 	strb.w	r2, [r3, #1]!
 802cfb2:	e7f8      	b.n	802cfa6 <memmove+0x12>
 802cfb4:	4402      	add	r2, r0
 802cfb6:	4601      	mov	r1, r0
 802cfb8:	428a      	cmp	r2, r1
 802cfba:	d100      	bne.n	802cfbe <memmove+0x2a>
 802cfbc:	bd10      	pop	{r4, pc}
 802cfbe:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 802cfc2:	f802 4d01 	strb.w	r4, [r2, #-1]!
 802cfc6:	e7f7      	b.n	802cfb8 <memmove+0x24>

0802cfc8 <_calloc_r>:
 802cfc8:	b537      	push	{r0, r1, r2, r4, r5, lr}
 802cfca:	fba1 2402 	umull	r2, r4, r1, r2
 802cfce:	b94c      	cbnz	r4, 802cfe4 <_calloc_r+0x1c>
 802cfd0:	4611      	mov	r1, r2
 802cfd2:	9201      	str	r2, [sp, #4]
 802cfd4:	f7fd fa44 	bl	802a460 <_malloc_r>
 802cfd8:	9a01      	ldr	r2, [sp, #4]
 802cfda:	4605      	mov	r5, r0
 802cfdc:	b930      	cbnz	r0, 802cfec <_calloc_r+0x24>
 802cfde:	4628      	mov	r0, r5
 802cfe0:	b003      	add	sp, #12
 802cfe2:	bd30      	pop	{r4, r5, pc}
 802cfe4:	220c      	movs	r2, #12
 802cfe6:	6002      	str	r2, [r0, #0]
 802cfe8:	2500      	movs	r5, #0
 802cfea:	e7f8      	b.n	802cfde <_calloc_r+0x16>
 802cfec:	4621      	mov	r1, r4
 802cfee:	f7fe f86e 	bl	802b0ce <memset>
 802cff2:	e7f4      	b.n	802cfde <_calloc_r+0x16>

0802cff4 <__ascii_mbtowc>:
 802cff4:	b082      	sub	sp, #8
 802cff6:	b901      	cbnz	r1, 802cffa <__ascii_mbtowc+0x6>
 802cff8:	a901      	add	r1, sp, #4
 802cffa:	b142      	cbz	r2, 802d00e <__ascii_mbtowc+0x1a>
 802cffc:	b14b      	cbz	r3, 802d012 <__ascii_mbtowc+0x1e>
 802cffe:	7813      	ldrb	r3, [r2, #0]
 802d000:	600b      	str	r3, [r1, #0]
 802d002:	7812      	ldrb	r2, [r2, #0]
 802d004:	1e10      	subs	r0, r2, #0
 802d006:	bf18      	it	ne
 802d008:	2001      	movne	r0, #1
 802d00a:	b002      	add	sp, #8
 802d00c:	4770      	bx	lr
 802d00e:	4610      	mov	r0, r2
 802d010:	e7fb      	b.n	802d00a <__ascii_mbtowc+0x16>
 802d012:	f06f 0001 	mvn.w	r0, #1
 802d016:	e7f8      	b.n	802d00a <__ascii_mbtowc+0x16>

0802d018 <_realloc_r>:
 802d018:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 802d01c:	4680      	mov	r8, r0
 802d01e:	4614      	mov	r4, r2
 802d020:	460e      	mov	r6, r1
 802d022:	b921      	cbnz	r1, 802d02e <_realloc_r+0x16>
 802d024:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 802d028:	4611      	mov	r1, r2
 802d02a:	f7fd ba19 	b.w	802a460 <_malloc_r>
 802d02e:	b92a      	cbnz	r2, 802d03c <_realloc_r+0x24>
 802d030:	f7ff f808 	bl	802c044 <_free_r>
 802d034:	4625      	mov	r5, r4
 802d036:	4628      	mov	r0, r5
 802d038:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 802d03c:	f000 f8ac 	bl	802d198 <_malloc_usable_size_r>
 802d040:	4284      	cmp	r4, r0
 802d042:	4607      	mov	r7, r0
 802d044:	d802      	bhi.n	802d04c <_realloc_r+0x34>
 802d046:	ebb4 0f50 	cmp.w	r4, r0, lsr #1
 802d04a:	d812      	bhi.n	802d072 <_realloc_r+0x5a>
 802d04c:	4621      	mov	r1, r4
 802d04e:	4640      	mov	r0, r8
 802d050:	f7fd fa06 	bl	802a460 <_malloc_r>
 802d054:	4605      	mov	r5, r0
 802d056:	2800      	cmp	r0, #0
 802d058:	d0ed      	beq.n	802d036 <_realloc_r+0x1e>
 802d05a:	42bc      	cmp	r4, r7
 802d05c:	4622      	mov	r2, r4
 802d05e:	4631      	mov	r1, r6
 802d060:	bf28      	it	cs
 802d062:	463a      	movcs	r2, r7
 802d064:	f7fe f907 	bl	802b276 <memcpy>
 802d068:	4631      	mov	r1, r6
 802d06a:	4640      	mov	r0, r8
 802d06c:	f7fe ffea 	bl	802c044 <_free_r>
 802d070:	e7e1      	b.n	802d036 <_realloc_r+0x1e>
 802d072:	4635      	mov	r5, r6
 802d074:	e7df      	b.n	802d036 <_realloc_r+0x1e>

0802d076 <__ascii_wctomb>:
 802d076:	b149      	cbz	r1, 802d08c <__ascii_wctomb+0x16>
 802d078:	2aff      	cmp	r2, #255	; 0xff
 802d07a:	bf85      	ittet	hi
 802d07c:	238a      	movhi	r3, #138	; 0x8a
 802d07e:	6003      	strhi	r3, [r0, #0]
 802d080:	700a      	strbls	r2, [r1, #0]
 802d082:	f04f 30ff 	movhi.w	r0, #4294967295
 802d086:	bf98      	it	ls
 802d088:	2001      	movls	r0, #1
 802d08a:	4770      	bx	lr
 802d08c:	4608      	mov	r0, r1
 802d08e:	4770      	bx	lr

0802d090 <__swhatbuf_r>:
 802d090:	b570      	push	{r4, r5, r6, lr}
 802d092:	460c      	mov	r4, r1
 802d094:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802d098:	2900      	cmp	r1, #0
 802d09a:	b096      	sub	sp, #88	; 0x58
 802d09c:	4615      	mov	r5, r2
 802d09e:	461e      	mov	r6, r3
 802d0a0:	da0d      	bge.n	802d0be <__swhatbuf_r+0x2e>
 802d0a2:	89a3      	ldrh	r3, [r4, #12]
 802d0a4:	f013 0f80 	tst.w	r3, #128	; 0x80
 802d0a8:	f04f 0100 	mov.w	r1, #0
 802d0ac:	bf0c      	ite	eq
 802d0ae:	f44f 6380 	moveq.w	r3, #1024	; 0x400
 802d0b2:	2340      	movne	r3, #64	; 0x40
 802d0b4:	2000      	movs	r0, #0
 802d0b6:	6031      	str	r1, [r6, #0]
 802d0b8:	602b      	str	r3, [r5, #0]
 802d0ba:	b016      	add	sp, #88	; 0x58
 802d0bc:	bd70      	pop	{r4, r5, r6, pc}
 802d0be:	466a      	mov	r2, sp
 802d0c0:	f000 f848 	bl	802d154 <_fstat_r>
 802d0c4:	2800      	cmp	r0, #0
 802d0c6:	dbec      	blt.n	802d0a2 <__swhatbuf_r+0x12>
 802d0c8:	9901      	ldr	r1, [sp, #4]
 802d0ca:	f401 4170 	and.w	r1, r1, #61440	; 0xf000
 802d0ce:	f5a1 5300 	sub.w	r3, r1, #8192	; 0x2000
 802d0d2:	4259      	negs	r1, r3
 802d0d4:	4159      	adcs	r1, r3
 802d0d6:	f44f 6380 	mov.w	r3, #1024	; 0x400
 802d0da:	e7eb      	b.n	802d0b4 <__swhatbuf_r+0x24>

0802d0dc <__smakebuf_r>:
 802d0dc:	898b      	ldrh	r3, [r1, #12]
 802d0de:	b573      	push	{r0, r1, r4, r5, r6, lr}
 802d0e0:	079d      	lsls	r5, r3, #30
 802d0e2:	4606      	mov	r6, r0
 802d0e4:	460c      	mov	r4, r1
 802d0e6:	d507      	bpl.n	802d0f8 <__smakebuf_r+0x1c>
 802d0e8:	f104 0347 	add.w	r3, r4, #71	; 0x47
 802d0ec:	6023      	str	r3, [r4, #0]
 802d0ee:	6123      	str	r3, [r4, #16]
 802d0f0:	2301      	movs	r3, #1
 802d0f2:	6163      	str	r3, [r4, #20]
 802d0f4:	b002      	add	sp, #8
 802d0f6:	bd70      	pop	{r4, r5, r6, pc}
 802d0f8:	ab01      	add	r3, sp, #4
 802d0fa:	466a      	mov	r2, sp
 802d0fc:	f7ff ffc8 	bl	802d090 <__swhatbuf_r>
 802d100:	9900      	ldr	r1, [sp, #0]
 802d102:	4605      	mov	r5, r0
 802d104:	4630      	mov	r0, r6
 802d106:	f7fd f9ab 	bl	802a460 <_malloc_r>
 802d10a:	b948      	cbnz	r0, 802d120 <__smakebuf_r+0x44>
 802d10c:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 802d110:	059a      	lsls	r2, r3, #22
 802d112:	d4ef      	bmi.n	802d0f4 <__smakebuf_r+0x18>
 802d114:	f023 0303 	bic.w	r3, r3, #3
 802d118:	f043 0302 	orr.w	r3, r3, #2
 802d11c:	81a3      	strh	r3, [r4, #12]
 802d11e:	e7e3      	b.n	802d0e8 <__smakebuf_r+0xc>
 802d120:	89a3      	ldrh	r3, [r4, #12]
 802d122:	6020      	str	r0, [r4, #0]
 802d124:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 802d128:	81a3      	strh	r3, [r4, #12]
 802d12a:	9b00      	ldr	r3, [sp, #0]
 802d12c:	6163      	str	r3, [r4, #20]
 802d12e:	9b01      	ldr	r3, [sp, #4]
 802d130:	6120      	str	r0, [r4, #16]
 802d132:	b15b      	cbz	r3, 802d14c <__smakebuf_r+0x70>
 802d134:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 802d138:	4630      	mov	r0, r6
 802d13a:	f000 f81d 	bl	802d178 <_isatty_r>
 802d13e:	b128      	cbz	r0, 802d14c <__smakebuf_r+0x70>
 802d140:	89a3      	ldrh	r3, [r4, #12]
 802d142:	f023 0303 	bic.w	r3, r3, #3
 802d146:	f043 0301 	orr.w	r3, r3, #1
 802d14a:	81a3      	strh	r3, [r4, #12]
 802d14c:	89a3      	ldrh	r3, [r4, #12]
 802d14e:	431d      	orrs	r5, r3
 802d150:	81a5      	strh	r5, [r4, #12]
 802d152:	e7cf      	b.n	802d0f4 <__smakebuf_r+0x18>

0802d154 <_fstat_r>:
 802d154:	b538      	push	{r3, r4, r5, lr}
 802d156:	4d07      	ldr	r5, [pc, #28]	; (802d174 <_fstat_r+0x20>)
 802d158:	2300      	movs	r3, #0
 802d15a:	4604      	mov	r4, r0
 802d15c:	4608      	mov	r0, r1
 802d15e:	4611      	mov	r1, r2
 802d160:	602b      	str	r3, [r5, #0]
 802d162:	f7d4 fc68 	bl	8001a36 <_fstat>
 802d166:	1c43      	adds	r3, r0, #1
 802d168:	d102      	bne.n	802d170 <_fstat_r+0x1c>
 802d16a:	682b      	ldr	r3, [r5, #0]
 802d16c:	b103      	cbz	r3, 802d170 <_fstat_r+0x1c>
 802d16e:	6023      	str	r3, [r4, #0]
 802d170:	bd38      	pop	{r3, r4, r5, pc}
 802d172:	bf00      	nop
 802d174:	200076cc 	.word	0x200076cc

0802d178 <_isatty_r>:
 802d178:	b538      	push	{r3, r4, r5, lr}
 802d17a:	4d06      	ldr	r5, [pc, #24]	; (802d194 <_isatty_r+0x1c>)
 802d17c:	2300      	movs	r3, #0
 802d17e:	4604      	mov	r4, r0
 802d180:	4608      	mov	r0, r1
 802d182:	602b      	str	r3, [r5, #0]
 802d184:	f7d4 fc67 	bl	8001a56 <_isatty>
 802d188:	1c43      	adds	r3, r0, #1
 802d18a:	d102      	bne.n	802d192 <_isatty_r+0x1a>
 802d18c:	682b      	ldr	r3, [r5, #0]
 802d18e:	b103      	cbz	r3, 802d192 <_isatty_r+0x1a>
 802d190:	6023      	str	r3, [r4, #0]
 802d192:	bd38      	pop	{r3, r4, r5, pc}
 802d194:	200076cc 	.word	0x200076cc

0802d198 <_malloc_usable_size_r>:
 802d198:	f851 3c04 	ldr.w	r3, [r1, #-4]
 802d19c:	1f18      	subs	r0, r3, #4
 802d19e:	2b00      	cmp	r3, #0
 802d1a0:	bfbc      	itt	lt
 802d1a2:	580b      	ldrlt	r3, [r1, r0]
 802d1a4:	18c0      	addlt	r0, r0, r3
 802d1a6:	4770      	bx	lr

0802d1a8 <_init>:
 802d1a8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802d1aa:	bf00      	nop
 802d1ac:	bcf8      	pop	{r3, r4, r5, r6, r7}
 802d1ae:	bc08      	pop	{r3}
 802d1b0:	469e      	mov	lr, r3
 802d1b2:	4770      	bx	lr

0802d1b4 <_fini>:
 802d1b4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802d1b6:	bf00      	nop
 802d1b8:	bcf8      	pop	{r3, r4, r5, r6, r7}
 802d1ba:	bc08      	pop	{r3}
 802d1bc:	469e      	mov	lr, r3
 802d1be:	4770      	bx	lr
