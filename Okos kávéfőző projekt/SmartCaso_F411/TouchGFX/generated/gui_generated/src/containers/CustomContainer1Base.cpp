/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/containers/CustomContainer1Base.hpp>
#include <touchgfx/Color.hpp>
#include <images/BitmapDatabase.hpp>
#include <texts/TextKeysAndLanguages.hpp>

CustomContainer1Base::CustomContainer1Base() :
    flexButtonCallback(this, &CustomContainer1Base::flexButtonCallbackHandler)
{
    setWidth(328);
    setHeight(222);
    boxWithBorder1.setPosition(0, 0, 328, 222);
    boxWithBorder1.setColor(touchgfx::Color::getColorFromRGB(32, 32, 32));
    boxWithBorder1.setBorderColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    boxWithBorder1.setBorderSize(5);
    add(boxWithBorder1);

    Temp_Up_Button.setBoxWithBorderPosition(0, 0, 80, 43);
    Temp_Up_Button.setBorderSize(2);
    Temp_Up_Button.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(52, 232, 204), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(9, 122, 103), touchgfx::Color::getColorFromRGB(51, 102, 153));
    Temp_Up_Button.setIconBitmaps(Bitmap(BITMAP_ICON_THEME_IMAGES_HARDWARE_KEYBOARD_ARROW_UP_35_35_000000_SVG_ID), Bitmap(BITMAP_ICON_THEME_IMAGES_HARDWARE_KEYBOARD_ARROW_UP_35_35_FF0000_SVG_ID));
    Temp_Up_Button.setIconXY(23, 6);
    Temp_Up_Button.setAction(flexButtonCallback);
    Temp_Up_Button.setPosition(6, 60, 80, 43);
    add(Temp_Up_Button);

    Temp_down_button.setBoxWithBorderPosition(0, 0, 80, 43);
    Temp_down_button.setBorderSize(2);
    Temp_down_button.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(52, 232, 204), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(9, 122, 103), touchgfx::Color::getColorFromRGB(51, 102, 153));
    Temp_down_button.setIconBitmaps(Bitmap(BITMAP_ICON_THEME_IMAGES_HARDWARE_KEYBOARD_ARROW_DOWN_35_35_000000_SVG_ID), Bitmap(BITMAP_ICON_THEME_IMAGES_HARDWARE_KEYBOARD_ARROW_DOWN_35_35_FF0000_SVG_ID));
    Temp_down_button.setIconXY(23, 6);
    Temp_down_button.setAction(flexButtonCallback);
    Temp_down_button.setPosition(240, 60, 80, 43);
    add(Temp_down_button);

    textArea1.setXY(146, 67);
    textArea1.setColor(touchgfx::Color::getColorFromRGB(52, 232, 204));
    textArea1.setLinespacing(0);
    textArea1Buffer[0] = 0;
    textArea1.setWildcard(textArea1Buffer);
    textArea1.resizeToCurrentText();
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_S9BW));
    add(textArea1);
}

CustomContainer1Base::~CustomContainer1Base()
{

}

void CustomContainer1Base::initialize()
{

}

void CustomContainer1Base::flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src)
{
    if (&src == &Temp_Up_Button)
    {
        //Interaction1
        //When Temp_Up_Button clicked call virtual function
        //Call Up_clicked
        Up_clicked();
    }
    if (&src == &Temp_down_button)
    {
        //Interaction2
        //When Temp_down_button clicked call virtual function
        //Call Down_clicked
        Down_clicked();
    }
}
