/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/screen1_screen/Screen1ViewBase.hpp>
#include <touchgfx/canvas_widget_renderer/CanvasWidgetRenderer.hpp>
#include <touchgfx/Color.hpp>
#include <images/BitmapDatabase.hpp>
#include <texts/TextKeysAndLanguages.hpp>

Screen1ViewBase::Screen1ViewBase() :
    flexButtonCallback(this, &Screen1ViewBase::flexButtonCallbackHandler)
{
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
    
    __background.setPosition(0, 0, 480, 320);
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    add(__background);

    box1.setPosition(0, 0, 480, 320);
    box1.setColor(touchgfx::Color::getColorFromRGB(32, 32, 32));
    add(box1);

    circleProgress1.setXY(16, 8);
    circleProgress1.setProgressIndicatorPosition(0, 0, 110, 110);
    circleProgress1.setRange(0, 100);
    circleProgress1.setCenter(55, 55);
    circleProgress1.setRadius(50);
    circleProgress1.setLineWidth(10);
    circleProgress1.setStartEndAngle(0, 360);
    circleProgress1.setCapPrecision(180);
    circleProgress1.setBackground(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_CIRCLEPROGRESS_BACKGROUNDS_SMALL_ID));
    circleProgress1Painter.setColor(touchgfx::Color::getColorFromRGB(52, 232, 204));
    circleProgress1.setPainter(circleProgress1Painter);
    circleProgress1.setValue(60);
    add(circleProgress1);

    flexButton1.setBoxWithBorderPosition(0, 0, 71, 50);
    flexButton1.setBorderSize(5);
    flexButton1.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(32, 32, 32), touchgfx::Color::getColorFromRGB(32, 32, 32), touchgfx::Color::getColorFromRGB(32, 32, 32), touchgfx::Color::getColorFromRGB(32, 32, 32));
    flexButton1.setWildcardText(TypedText(T___SINGLEUSE_9QSJ));
    flexButton1Buffer[0] = 0;
    flexButton1.setWildcardTextBuffer(flexButton1Buffer);
    flexButton1.setWildcardTextPosition(0, 11, 71, 50);
    flexButton1.setWildcardTextColors(touchgfx::Color::getColorFromRGB(52, 232, 204), touchgfx::Color::getColorFromRGB(52, 232, 204));
    flexButton1.setAction(flexButtonCallback);
    flexButton1.setPosition(37, 38, 71, 50);
    add(flexButton1);

    customContainer11.setXY(74, 49);
    customContainer11.setVisible(false);
    add(customContainer11);

    OK_button_1.setBoxWithBorderPosition(0, 0, 85, 43);
    OK_button_1.setBorderSize(2);
    OK_button_1.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(52, 232, 204), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(9, 122, 103), touchgfx::Color::getColorFromRGB(51, 102, 153));
    OK_button_1.setText(TypedText(T___SINGLEUSE_HR9W));
    OK_button_1.setTextPosition(0, 11, 85, 43);
    OK_button_1.setTextColors(touchgfx::Color::getColorFromRGB(10, 10, 10), touchgfx::Color::getColorFromRGB(10, 10, 10));
    OK_button_1.setVisible(false);
    OK_button_1.setAction(flexButtonCallback);
    OK_button_1.setPosition(126, 221, 85, 43);
    add(OK_button_1);

    Cancel_button_1.setBoxWithBorderPosition(0, 0, 80, 43);
    Cancel_button_1.setBorderSize(2);
    Cancel_button_1.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(52, 232, 204), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(9, 122, 103), touchgfx::Color::getColorFromRGB(51, 102, 153));
    Cancel_button_1.setText(TypedText(T___SINGLEUSE_TZ5Y));
    Cancel_button_1.setTextPosition(0, 11, 80, 43);
    Cancel_button_1.setTextColors(touchgfx::Color::getColorFromRGB(10, 10, 10), touchgfx::Color::getColorFromRGB(10, 10, 10));
    Cancel_button_1.setVisible(false);
    Cancel_button_1.setAction(flexButtonCallback);
    Cancel_button_1.setPosition(275, 221, 80, 43);
    add(Cancel_button_1);

    lineProgress1.setXY(33, 179);
    lineProgress1.setProgressIndicatorPosition(0, 0, 10, 100);
    lineProgress1.setRange(0, 100);
    lineProgress1.setBackground(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_LINEPROGRESS_BACKGROUNDS_IMAGE_PLAIN_NORMAL_TINY_90_ID));
    lineProgress1Painter.setColor(touchgfx::Color::getColorFromRGB(52, 232, 204));
    lineProgress1.setPainter(lineProgress1Painter);
    lineProgress1.setStart(5, 100);
    lineProgress1.setEnd(5, 0);
    lineProgress1.setLineWidth(10);
    lineProgress1.setLineEndingStyle(touchgfx::Line::BUTT_CAP_ENDING);
    lineProgress1.setValue(60);
    add(lineProgress1);

    textArea2.setPosition(58, 214, 83, 31);
    textArea2.setColor(touchgfx::Color::getColorFromRGB(52, 232, 204));
    textArea2.setLinespacing(0);
    textArea2Buffer[0] = 0;
    textArea2.setWildcard(textArea2Buffer);
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_49D8));
    add(textArea2);
}

Screen1ViewBase::~Screen1ViewBase()
{
    touchgfx::CanvasWidgetRenderer::resetBuffer();
}

void Screen1ViewBase::setupScreen()
{
    customContainer11.initialize();
}

void Screen1ViewBase::flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src)
{
    if (&src == &flexButton1)
    {
        //Interaction1
        //When flexButton1 clicked show customContainer11
        //Show customContainer11
        customContainer11.setVisible(true);
        customContainer11.invalidate();
    
        //Interaction3
        //When Interaction1 completed show OK_button_1
        //Show OK_button_1
        OK_button_1.setVisible(true);
        OK_button_1.invalidate();
    
    
        //Interaction4
        //When Interaction1 completed show Cancel_button_1
        //Show Cancel_button_1
        Cancel_button_1.setVisible(true);
        Cancel_button_1.invalidate();
    }
    if (&src == &OK_button_1)
    {
        //Interaction5
        //When OK_button_1 clicked hide customContainer11
        //Hide customContainer11
        customContainer11.setVisible(false);
        customContainer11.invalidate();
    
        //Interaction6
        //When Interaction5 completed hide Cancel_button_1
        //Hide Cancel_button_1
        Cancel_button_1.setVisible(false);
        Cancel_button_1.invalidate();
    
    
        //Interaction10
        //When Interaction5 completed hide OK_button_1
        //Hide OK_button_1
        OK_button_1.setVisible(false);
        OK_button_1.invalidate();
    }
    if (&src == &Cancel_button_1)
    {
        //Interaction7
        //When Cancel_button_1 clicked hide customContainer11
        //Hide customContainer11
        customContainer11.setVisible(false);
        customContainer11.invalidate();
    
        //Interaction8
        //When Interaction7 completed hide OK_button_1
        //Hide OK_button_1
        OK_button_1.setVisible(false);
        OK_button_1.invalidate();
    }
}

void Screen1ViewBase::handleTickEvent()
{
    //Interaction2
    //When every N tick call virtual function
    //Call Update_temperature
    Update_temperature();
}
